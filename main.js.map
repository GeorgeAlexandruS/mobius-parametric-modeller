{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/appmodule/app-routing.module.ts","webpack:///./src/app/appmodule/app.component.html","webpack:///./src/app/appmodule/app.component.scss","webpack:///./src/app/appmodule/app.component.ts","webpack:///./src/app/appmodule/app.module.ts","webpack:///./src/app/core/core.module.ts","webpack:///./src/app/core/modules/_check_args.ts","webpack:///./src/app/core/modules/_constants.ts","webpack:///./src/app/core/modules/_conversion.ts","webpack:///./src/app/core/modules/_list.ts","webpack:///./src/app/core/modules/_mathjs.ts","webpack:///./src/app/core/modules/_model.ts","webpack:///./src/app/core/modules/_parameterTypes.ts","webpack:///./src/app/core/modules/_rand.ts","webpack:///./src/app/core/modules/_vec.ts","webpack:///./src/app/core/modules/calc.ts","webpack:///./src/app/core/modules/index.ts","webpack:///./src/app/core/modules/list.ts","webpack:///./src/app/core/modules/make.ts","webpack:///./src/app/core/modules/modify.ts","webpack:///./src/app/core/modules/output.ts","webpack:///./src/app/core/modules/pattern.ts","webpack:///./src/app/core/modules/query.ts","webpack:///./src/app/core/modules/util.ts","webpack:///./src/app/core/modules/virtual.ts","webpack:///./src/app/core/services/data.service.ts","webpack:///./src/app/core/services/index.ts","webpack:///./src/app/core/services/viewer.service.ts","webpack:///./src/app/model-viewers/all-viewers/console-viewer/console-viewer.component.html","webpack:///./src/app/model-viewers/all-viewers/console-viewer/console-viewer.component.scss","webpack:///./src/app/model-viewers/all-viewers/console-viewer/console-viewer.component.ts","webpack:///./src/app/model-viewers/all-viewers/gi-viewer/attribute/attribute.component.html","webpack:///./src/app/model-viewers/all-viewers/gi-viewer/attribute/attribute.component.scss","webpack:///./src/app/model-viewers/all-viewers/gi-viewer/attribute/attribute.component.ts","webpack:///./src/app/model-viewers/all-viewers/gi-viewer/attribute/attribute.module.ts","webpack:///./src/app/model-viewers/all-viewers/gi-viewer/attribute/tab.component.ts","webpack:///./src/app/model-viewers/all-viewers/gi-viewer/attribute/tabs.component.ts","webpack:///./src/app/model-viewers/all-viewers/gi-viewer/data/data.service.ts","webpack:///./src/app/model-viewers/all-viewers/gi-viewer/data/data.threejs.ts","webpack:///./src/app/model-viewers/all-viewers/gi-viewer/gi-viewer.component.html","webpack:///./src/app/model-viewers/all-viewers/gi-viewer/gi-viewer.component.scss","webpack:///./src/app/model-viewers/all-viewers/gi-viewer/gi-viewer.component.ts","webpack:///./src/app/model-viewers/all-viewers/gi-viewer/gi-viewer.module.ts","webpack:///./src/app/model-viewers/all-viewers/gi-viewer/html/dropdown-menu.component.html","webpack:///./src/app/model-viewers/all-viewers/gi-viewer/html/dropdown-menu.component.scss","webpack:///./src/app/model-viewers/all-viewers/gi-viewer/html/dropdown-menu.component.ts","webpack:///./src/app/model-viewers/all-viewers/gi-viewer/html/modal-window.component.html","webpack:///./src/app/model-viewers/all-viewers/gi-viewer/html/modal-window.component.scss","webpack:///./src/app/model-viewers/all-viewers/gi-viewer/html/modal-window.component.ts","webpack:///./src/app/model-viewers/all-viewers/gi-viewer/html/modal-window.service.ts","webpack:///./src/app/model-viewers/all-viewers/gi-viewer/threejs/threejs-viewer.component.html","webpack:///./src/app/model-viewers/all-viewers/gi-viewer/threejs/threejs-viewer.component.scss","webpack:///./src/app/model-viewers/all-viewers/gi-viewer/threejs/threejs-viewer.component.ts","webpack:///./src/app/model-viewers/all-viewers/gi-viewer/threejs/threejs-viewer.service.ts","webpack:///./src/app/model-viewers/all-viewers/help-viewer/help-viewer.component.html","webpack:///./src/app/model-viewers/all-viewers/help-viewer/help-viewer.component.scss","webpack:///./src/app/model-viewers/all-viewers/help-viewer/help-viewer.component.ts","webpack:///./src/app/model-viewers/model-viewers-container.component.html","webpack:///./src/app/model-viewers/model-viewers-container.component.scss","webpack:///./src/app/model-viewers/model-viewers-container.component.ts","webpack:///./src/app/model-viewers/model-viewers-container.module.ts","webpack:///./src/app/model-viewers/model-viewers.config.ts","webpack:///./src/app/shared/components/add-components/add_input.component.ts","webpack:///./src/app/shared/components/add-components/add_node.component.ts","webpack:///./src/app/shared/components/add-components/add_output.component.ts","webpack:///./src/app/shared/components/chrome/chrome.component.html","webpack:///./src/app/shared/components/chrome/chrome.component.scss","webpack:///./src/app/shared/components/chrome/chrome.component.ts","webpack:///./src/app/shared/components/execute/execute.component.html","webpack:///./src/app/shared/components/execute/execute.component.scss","webpack:///./src/app/shared/components/execute/execute.component.ts","webpack:///./src/app/shared/components/file/download.utils.ts","webpack:///./src/app/shared/components/file/index.ts","webpack:///./src/app/shared/components/file/loadfile.component.ts","webpack:///./src/app/shared/components/file/loadurl.component.ts","webpack:///./src/app/shared/components/file/newfile.component.ts","webpack:///./src/app/shared/components/file/savefile.component.ts","webpack:///./src/app/shared/components/header/panel-header.component.html","webpack:///./src/app/shared/components/header/panel-header.component.scss","webpack:///./src/app/shared/components/header/panel-header.component.ts","webpack:///./src/app/shared/components/navigation/navigation.component.ts","webpack:///./src/app/shared/components/not-found/not-found.component.html","webpack:///./src/app/shared/components/not-found/not-found.component.scss","webpack:///./src/app/shared/components/not-found/not-found.component.ts","webpack:///./src/app/shared/components/notification/notification.component.html","webpack:///./src/app/shared/components/notification/notification.component.scss","webpack:///./src/app/shared/components/notification/notification.component.ts","webpack:///./src/app/shared/components/spinner/spinner.component.html","webpack:///./src/app/shared/components/spinner/spinner.component.scss","webpack:///./src/app/shared/components/spinner/spinner.component.ts","webpack:///./src/app/shared/decorators/index.ts","webpack:///./src/app/shared/decorators/module-aware.decorator.ts","webpack:///./src/app/shared/decorators/porttypes-aware.decorator.ts","webpack:///./src/app/shared/decorators/prodtypes-aware.decorator.ts","webpack:///./src/app/shared/decorators/viewertypes-aware.decorator.ts","webpack:///./src/app/shared/directives/filesys/index.ts","webpack:///./src/app/shared/directives/filesys/mobfile-reader.directive.ts","webpack:///./src/app/shared/models/code/code.utils.ts","webpack:///./src/app/shared/models/code/execute.utils.ts","webpack:///./src/app/shared/models/code/index.ts","webpack:///./src/app/shared/models/flowchart/flowchart.interface.ts","webpack:///./src/app/shared/models/flowchart/flowchart.utils.ts","webpack:///./src/app/shared/models/flowchart/index.ts","webpack:///./src/app/shared/models/node/index.ts","webpack:///./src/app/shared/models/node/node.utils.ts","webpack:///./src/app/shared/models/port/index.ts","webpack:///./src/app/shared/models/port/port.utils.ts","webpack:///./src/app/shared/models/port/types.ts","webpack:///./src/app/shared/models/procedure/index.ts","webpack:///./src/app/shared/models/procedure/types.ts","webpack:///./src/app/shared/shared.module.ts","webpack:///./src/app/shared/utils/GUID.ts","webpack:///./src/app/shared/utils/index.ts","webpack:///./src/app/views/index.ts","webpack:///./src/app/views/view-dashboard/parameter-viewer/parameter-viewer.component.html","webpack:///./src/app/views/view-dashboard/parameter-viewer/parameter-viewer.component.scss","webpack:///./src/app/views/view-dashboard/parameter-viewer/parameter-viewer.component.ts","webpack:///./src/app/views/view-dashboard/parameter-viewer/procedure-input-viewer/procedure-input-viewer.component.html","webpack:///./src/app/views/view-dashboard/parameter-viewer/procedure-input-viewer/procedure-input-viewer.component.scss","webpack:///./src/app/views/view-dashboard/parameter-viewer/procedure-input-viewer/procedure-input-viewer.component.ts","webpack:///./src/app/views/view-dashboard/view-dashboard-routing.module.ts","webpack:///./src/app/views/view-dashboard/view-dashboard.component.html","webpack:///./src/app/views/view-dashboard/view-dashboard.component.scss","webpack:///./src/app/views/view-dashboard/view-dashboard.component.ts","webpack:///./src/app/views/view-dashboard/view-dashboard.module.ts","webpack:///./src/app/views/view-editor/parameter-editor/parameter-editor.component.html","webpack:///./src/app/views/view-editor/parameter-editor/parameter-editor.component.scss","webpack:///./src/app/views/view-editor/parameter-editor/parameter-editor.component.ts","webpack:///./src/app/views/view-editor/parameter-editor/procedure-input-editor/procedure-input-editor.component.html","webpack:///./src/app/views/view-editor/parameter-editor/procedure-input-editor/procedure-input-editor.component.scss","webpack:///./src/app/views/view-editor/parameter-editor/procedure-input-editor/procedure-input-editor.component.ts","webpack:///./src/app/views/view-editor/procedure-item/procedure-item.component.html","webpack:///./src/app/views/view-editor/procedure-item/procedure-item.component.scss","webpack:///./src/app/views/view-editor/procedure-item/procedure-item.component.ts","webpack:///./src/app/views/view-editor/toolset/toolset.component.html","webpack:///./src/app/views/view-editor/toolset/toolset.component.scss","webpack:///./src/app/views/view-editor/toolset/toolset.component.ts","webpack:///./src/app/views/view-editor/toolset/toolset.inline.ts","webpack:///./src/app/views/view-editor/view-editor-routing.module.ts","webpack:///./src/app/views/view-editor/view-editor.component.html","webpack:///./src/app/views/view-editor/view-editor.component.scss","webpack:///./src/app/views/view-editor/view-editor.component.ts","webpack:///./src/app/views/view-editor/view-editor.module.ts","webpack:///./src/app/views/view-flowchart/edge/edge.component.html","webpack:///./src/app/views/view-flowchart/edge/edge.component.scss","webpack:///./src/app/views/view-flowchart/edge/edge.component.ts","webpack:///./src/app/views/view-flowchart/node/node.actions.ts","webpack:///./src/app/views/view-flowchart/node/node.component.html","webpack:///./src/app/views/view-flowchart/node/node.component.scss","webpack:///./src/app/views/view-flowchart/node/node.component.ts","webpack:///./src/app/views/view-flowchart/view-flowchart-routing.module.ts","webpack:///./src/app/views/view-flowchart/view-flowchart.component.html","webpack:///./src/app/views/view-flowchart/view-flowchart.component.scss","webpack:///./src/app/views/view-flowchart/view-flowchart.component.ts","webpack:///./src/app/views/view-flowchart/view-flowchart.module.ts","webpack:///./src/app/views/view-gallery/simple-name.pipe.ts","webpack:///./src/app/views/view-gallery/view-gallery-routing.module.ts","webpack:///./src/app/views/view-gallery/view-gallery.component.html","webpack:///./src/app/views/view-gallery/view-gallery.component.scss","webpack:///./src/app/views/view-gallery/view-gallery.component.ts","webpack:///./src/app/views/view-gallery/view-gallery.config.ts","webpack:///./src/app/views/view-gallery/view-gallery.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/libs/filesys/download.ts","webpack:///./src/libs/geo-info/GIAttribMap.ts","webpack:///./src/libs/geo-info/GIAttribs.ts","webpack:///./src/libs/geo-info/GIAttribsAdd.ts","webpack:///./src/libs/geo-info/GIAttribsQuery.ts","webpack:///./src/libs/geo-info/GIAttribsThreejs.ts","webpack:///./src/libs/geo-info/GIGeom.ts","webpack:///./src/libs/geo-info/GIGeomAdd.ts","webpack:///./src/libs/geo-info/GIGeomQuery.ts","webpack:///./src/libs/geo-info/GIGeomThreejs.ts","webpack:///./src/libs/geo-info/GIModel.ts","webpack:///./src/libs/geo-info/common.ts","webpack:///./src/libs/geo-info/export.ts","webpack:///./src/libs/geo-info/id.ts","webpack:///./src/libs/geo-info/import.ts","webpack:///./src/libs/geo-info/index.ts","webpack:///./src/libs/geom/distance.ts","webpack:///./src/libs/geom/matrix.ts","webpack:///./src/libs/geom/triangle.ts","webpack:///./src/libs/geom/vectors.ts","webpack:///./src/libs/triangulate/earcut.ts","webpack:///./src/libs/triangulate/threex.ts","webpack:///./src/libs/triangulate/triangulate.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","/**/\r\n\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { Component } from '@angular/core';\r\n\r\nimport { ViewFlowchartModule, ViewGalleryModule, ViewDashboardModule, ViewEditorModule } from '@views';\r\n\r\nconst appRoutes: Routes = [\r\n    { path: 'flowchart', loadChildren: () => ViewFlowchartModule },\r\n    { path: 'gallery', loadChildren: () => ViewGalleryModule },\r\n    { path: 'dashboard', loadChildren: () => ViewDashboardModule },\r\n    { path: 'editor', loadChildren: () => ViewEditorModule },\r\n    { path: '',     redirectTo: '/gallery', pathMatch: 'full' },\r\n    { path: '**', component: ViewGalleryModule }\r\n];\r\n\r\n@NgModule({\r\n    imports: [\r\n        RouterModule.forRoot(\r\n            appRoutes,\r\n            { enableTracing: false } // <-- debugging purposes only\r\n        )\r\n    ],\r\n    exports: [\r\n        RouterModule\r\n    ]\r\n})\r\nexport class AppRoutingModule {}\r\n","module.exports = \"<router-outlet></router-outlet>\"","module.exports = \"\"","import { Component, Injector } from '@angular/core';\r\nimport { DataService } from '@services';\r\nimport { MatIconRegistry } from '@angular/material';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\n\r\n// @ts-ignore\r\nconsole.stdlog = console.log.bind(console);\r\n// @ts-ignore\r\nconsole.logs = [];\r\n// @ts-ignore\r\nconsole.log = function() {\r\n    // @ts-ignore\r\n    console.logs.push(Array.from(arguments));\r\n    // @ts-ignore\r\n    console.stdlog.apply(console, arguments);\r\n};\r\n\r\n@Component({\r\n    selector: 'app-root',\r\n    templateUrl: 'app.component.html',\r\n    styleUrls: ['app.component.scss']\r\n})\r\nexport class AppComponent {\r\n\r\n    constructor(private dataService: DataService, private injector: Injector,\r\n    private matIconRegistry: MatIconRegistry, private domSanitizer: DomSanitizer) {\r\n        this.matIconRegistry.addSvgIcon('c3D Viewer', this.domSanitizer.bypassSecurityTrustResourceUrl('assets/Icons/3D.svg'));\r\n        this.matIconRegistry.addSvgIcon('cConsole', this.domSanitizer.bypassSecurityTrustResourceUrl('assets/Icons/Console.svg'));\r\n        this.matIconRegistry.addSvgIcon('cHelp', this.domSanitizer.bypassSecurityTrustResourceUrl('assets/Icons/Help.svg'));\r\n        this.matIconRegistry.addSvgIcon('cSummary', this.domSanitizer.bypassSecurityTrustResourceUrl('assets/Icons/Summary.svg'));\r\n        this.matIconRegistry.addSvgIcon('cZoom', this.domSanitizer.bypassSecurityTrustResourceUrl('assets/Icons/Zoom.svg'));\r\n        this.matIconRegistry.addSvgIcon('cfv', this.domSanitizer.bypassSecurityTrustResourceUrl('assets/Icons/Mobius favicon.svg'));\r\n        this.matIconRegistry.addSvgIcon('cMenu', this.domSanitizer.bypassSecurityTrustResourceUrl('assets/Icons/Three Lines Menu.svg'));\r\n        this.matIconRegistry.addSvgIcon('cGallery', this.domSanitizer.bypassSecurityTrustResourceUrl('assets/Icons/Home.svg'));\r\n        this.matIconRegistry.addSvgIcon('cDashboard', this.domSanitizer.bypassSecurityTrustResourceUrl('assets/Icons/Dashboard.svg'));\r\n        this.matIconRegistry.addSvgIcon('cFlowchart', this.domSanitizer.bypassSecurityTrustResourceUrl('assets/Icons/Flowchart.svg'));\r\n        this.matIconRegistry.addSvgIcon('cEditor', this.domSanitizer.bypassSecurityTrustResourceUrl('assets/Icons/Node.svg'));\r\n    }\r\n\r\n}\r\n","// import @angular stuff\r\nimport { NgModule, Component } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n// import app services\r\nimport { DataService } from '@services';\r\nimport { DataService as GiViewerDataService } from '../model-viewers/all-viewers/gi-viewer/data/data.service';\r\n// import app modules\r\nimport { CoreModule } from '../core/core.module';\r\nimport { SharedModule } from '@shared/shared.module';\r\n// import { AppRoutingModule } from './app-routing.module';\r\n// import app components\r\nimport { AppComponent } from './app.component';\r\nimport {ViewEditorModule, ViewDashboardModule, ViewGalleryModule,\r\n    ViewEditorComponent, ViewDashboardComponent, ViewGalleryComponent,\r\n    ViewFlowchartComponent, ViewFlowchartModule} from '@views';\r\nimport { AppRoutingModule } from './app-routing.module';\r\n// import { WebWorkerService } from 'ngx-web-worker';\r\n\r\n\r\n\r\n/**\r\n * AppModule, the root module for the whole app.\r\n */\r\n@NgModule({\r\n    declarations: [\r\n        AppComponent,\r\n    ],\r\n    imports: [\r\n        BrowserModule,\r\n        BrowserAnimationsModule,\r\n        HttpClientModule,\r\n        FormsModule,\r\n        AppRoutingModule,\r\n        CoreModule,\r\n        ViewGalleryModule,\r\n        ViewEditorModule,\r\n        ViewDashboardModule,\r\n        ViewFlowchartModule,\r\n        SharedModule,\r\n    ],\r\n    entryComponents: [\r\n        ViewEditorComponent,\r\n        ViewDashboardComponent,\r\n        ViewFlowchartComponent,\r\n        ViewGalleryComponent,\r\n    ],\r\n    providers: [ DataService, GiViewerDataService],\r\n    bootstrap: [ AppComponent ]\r\n})\r\nexport class AppModule {\r\n    /**\r\n     * constructor\r\n     */\r\n    constructor () {\r\n        // Do nothing\r\n    }\r\n}\r\n\r\n","/*\r\n *  This module is to be imported ONLY by the AppModule\r\n *  Contains all global services\r\n *\r\n */\r\nimport { NgModule, SkipSelf, Optional } from '@angular/core';\r\nimport { DataService, ViewerService } from '@services';\r\n\r\n@NgModule({\r\n    imports: [ ],\r\n    declarations: [ ],\r\n    providers: [ DataService, ViewerService ],\r\n    exports: [ ],\r\n    entryComponents: []\r\n})\r\nexport class CoreModule {\r\n    constructor(@Optional() @SkipSelf() core: CoreModule) {\r\n        /// Prevents any module apart from AppModule from re-importing\r\n        if (core) {\r\n            throw new Error('Core Module has already been imported');\r\n        }\r\n    }\r\n}\r\n","import { EEntType, EAttribNames, TEntTypeIdx } from '@libs/geo-info/common';\r\n// import { isDim0, isDim1, isDim2 } from '@libs/geo-info/id';\r\nimport { idsBreak } from '@libs/geo-info/id';\r\n\r\n// =========================================================================================================================================\r\n// Attribute Checks\r\n// =========================================================================================================================================\r\nfunction isValidName(fn_name: string, arg_name: string, arg: string): void {\r\n    typeCheckObj.isString(fn_name, arg_name, arg); // check arg is string\r\n    if (arg.length === 0) {\r\n        throw new Error (fn_name + ': ' + arg_name + ' not specified');\r\n    }\r\n    if (arg.search(/\\W/) !== -1) {\r\n        throw new Error (fn_name + ': ' + arg_name + ' contains restricted characters');\r\n    }\r\n    if (arg[0].search(/[0-9]/) !== -1) {\r\n        throw new Error (fn_name + ': ' + arg_name + ' should not start with numbers');\r\n    }\r\n    return;\r\n}\r\nexport function checkAttribNameValue(fn_name: string, attrib_name: string, attrib_value: any, attrib_index?: number): void {\r\n    isValidName(fn_name, 'attrib_name', attrib_name);\r\n    // blocks writing to id\r\n    if (attrib_name === 'id') {\r\n        throw new Error(fn_name + ': id is not modifiable!');\r\n    }\r\n    // -- check defined index\r\n    let ind = false;\r\n    if (attrib_index !== null && attrib_index !== undefined) {\r\n        ind = true;\r\n        // check if index is number\r\n        typeCheckObj.isNumber(fn_name, 'attrib_index', attrib_index);\r\n    }\r\n    // -- check blocked name\r\n    const blk_att_nm_lst = Object.values(EAttribNames);\r\n    let blocked = false;\r\n    let isTexture = false;\r\n    let isName = false;\r\n    for (let i = 0; i < blk_att_nm_lst.length; i++) {\r\n        if (attrib_name === 'texture') {\r\n            isTexture = true;\r\n            blocked = true;\r\n            break;\r\n        }\r\n        if (attrib_name === 'name') {\r\n            isName = true;\r\n            blocked = true;\r\n            break;\r\n        }\r\n        if (attrib_name === blk_att_nm_lst[i]) {\r\n            blocked = true;\r\n            break;\r\n        }\r\n    }\r\n    let check_fns = [];\r\n    if (attrib_value !== null && attrib_value !== undefined) {\r\n        if (blocked === true) {\r\n            let pass = false;\r\n            const err_arr = [fn_name + ': ' + 'attrib_name is one of the reserved attribute names - '\r\n                            + Object.values(EAttribNames).toString() + '\\n'];\r\n            if (isName) {\r\n                try {\r\n                    isValidName(fn_name, 'attrib_value', attrib_value);\r\n                    pass = true;\r\n                } catch (err) {\r\n                    err_arr.push(err);\r\n                }\r\n            } else {\r\n                if (ind === false) {\r\n                    try {\r\n                        isListArg(fn_name, 'attrib_value', attrib_value, 'numbers');\r\n                        let chkLstLen;\r\n                        if (isTexture) {\r\n                            chkLstLen = 2;\r\n                        } else {\r\n                            chkLstLen = 3;\r\n                        }\r\n                        isListLenArg(fn_name, 'attrib_value', attrib_value, chkLstLen);\r\n                    } catch (err) {\r\n                        err_arr.push(err.message);\r\n                        throw new Error(err_arr.join(''));\r\n                    }\r\n                    check_fns = ['isNumberList'];\r\n                    for (let i = 0; i < check_fns.length; i++) {\r\n                        try {\r\n                            typeCheckObj[check_fns[i]](fn_name + '.' + check_fns[i], 'attrib_value', attrib_value);\r\n                        } catch (err) {\r\n                            err_arr.push(err.message + '\\n');\r\n                            continue;\r\n                        }\r\n                        pass = true;\r\n                        break; // passed\r\n                    }\r\n                } else {\r\n                    if (isTexture) {\r\n                        if (attrib_index > 1 || attrib_index < 0) {\r\n                            err_arr.push(fn_name + '.validIndex: attrib_index is not between 0 and 1 (inclusive)');\r\n                            throw new Error(err_arr.join(''));\r\n                        }\r\n                    } else {\r\n                        if (attrib_index > 2 || attrib_index < 0) {\r\n                            err_arr.push(fn_name + '.validIndex: attrib_index is not between 0 and 2 (inclusive)');\r\n                            throw new Error(err_arr.join(''));\r\n                        }\r\n                    }\r\n                    check_fns = ['isNumber'];\r\n                    for (let i = 0; i < check_fns.length; i++) {\r\n                        try {\r\n                            typeCheckObj[check_fns[i]](fn_name + '[' + attrib_index + ']' + '.' + check_fns[i],\r\n                                                      'attrib_value', attrib_value);\r\n                        } catch (err) {\r\n                            err_arr.push(err.message + '\\n');\r\n                            continue;\r\n                        }\r\n                        pass = true;\r\n                        break; // passed\r\n                    }\r\n                }\r\n            }\r\n            if (pass === false) {\r\n                throw new Error(err_arr.join(''));\r\n            }\r\n        } else {\r\n            if (ind === false) {\r\n                checkCommTypes(fn_name, 'attrib_value', attrib_value, ['isString', 'isNumber', 'isStringList', 'isNumberList']);\r\n            } else { // no nested lists\r\n                checkCommTypes(fn_name  + '[' + attrib_index + ']', 'attrib_value', attrib_value, ['isString', 'isNumber']);\r\n            }\r\n        }\r\n    }\r\n    return;\r\n}\r\n\r\n// =========================================================================================================================================\r\n// Function Dictionaries\r\n// =========================================================================================================================================\r\nconst typeCheckObj  = {\r\n    // entities: Check if string\r\n    isEntity: function(fn_name: string, arg_name: string, arg: string): void {\r\n        isStringArg(fn_name, arg_name, arg, 'entity');\r\n        if (arg.slice(2).length === 0) {\r\n            throw new Error(fn_name + ': ' + arg_name + ' needs to have an index specified');\r\n        }\r\n        return;\r\n    },\r\n    isEntityList: function(fn_name: string, arg_name: string, arg_list: string[]): void {\r\n        isStringListArg(fn_name, arg_name, arg_list, 'entity');\r\n        return;\r\n    },\r\n    // any: to catch undefined\r\n    isAny: function(fn_name: string, arg_name: string, arg: string): void {\r\n        isAnyArg(fn_name, arg_name, arg);\r\n        return;\r\n    },\r\n    // list\r\n    isList: function(fn_name: string, arg_name: string, arg: string): void {\r\n        isListArg(fn_name, arg_name, arg, 'any');\r\n        return;\r\n    },\r\n    // strings\r\n    isString: function(fn_name: string, arg_name: string, arg: string): void {\r\n        isStringArg(fn_name, arg_name, arg, 'string');\r\n        return;\r\n    },\r\n    isStringList: function(fn_name: string, arg_name: string, arg_list: string[]): void {\r\n        isStringListArg(fn_name, arg_name, arg_list, 'string');\r\n        return;\r\n    },\r\n    // numbers and special numbers\r\n    isNumber: function(fn_name: string, arg_name: string, arg: number): void {\r\n        isNumberArg(fn_name, arg_name, arg);\r\n        return;\r\n    },\r\n    isNumberList: function(fn_name: string, arg_name: string, arg_list: number[]): void {\r\n        isNumberListArg(fn_name, arg_name, arg_list);\r\n        return;\r\n    },\r\n    isInt: function(fn_name: string, arg_name: string, arg: number): void {\r\n        isIntArg(fn_name, arg_name, arg);\r\n        return;\r\n    },\r\n    isXYlist: function(fn_name: string, arg_name: string, arg_list: [number, number]): void {\r\n        isListArg(fn_name, arg_name, arg_list, 'numbers');\r\n        isListLenArg(fn_name, arg_name, arg_list, 2);\r\n        isNumberListArg(fn_name, arg_name, arg_list);\r\n        return;\r\n    },\r\n    isXYlistInt: function(fn_name: string, arg_name: string, arg_list: [number, number]): void {\r\n        isListArg(fn_name, arg_name, arg_list, 'integers');\r\n        isListLenArg(fn_name, arg_name, arg_list, 2);\r\n        isIntListArg(fn_name, arg_name, arg_list);\r\n        return;\r\n    },\r\n    isXYZlist: function(fn_name: string, arg_name: string, arg_list: [number, number, number]): void {\r\n        typeCheckObj.isCoord(fn_name, arg_name, arg_list);\r\n        return;\r\n    },\r\n    // Other Geometry\r\n    isCoord: function(fn_name: string, arg_name: string, arg: [number, number, number]): void { // Txyz = [number, number, number]\r\n        isListArg(fn_name, arg_name, arg, 'numbers');\r\n        isListLenArg(fn_name, arg_name, arg, 3);\r\n        isNumberListArg(fn_name, arg_name, arg);\r\n        return;\r\n    },\r\n    isCoordList: function(fn_name: string, arg_name: string, arg_list: [number, number, number][]): void {\r\n        isListArg(fn_name, arg_name, arg_list, 'coordinates');\r\n        for (let i = 0; i < arg_list.length; i++) {\r\n            isListLenArg(fn_name, arg_name + '[' + i + ']', arg_list[i], 3);\r\n            isNumberListArg(fn_name, arg_name + '[' + i + ']', arg_list[i]);\r\n        }\r\n        return;\r\n    },\r\n    isCoordList_List: function(fn_name: string, arg_name: string, arg_list: [number, number, number][][]): void {\r\n        isListArg(fn_name, arg_name, arg_list, 'lists of coordinates');\r\n        for (let i = 0; i < arg_list.length; i++) {\r\n            for (let j = 0; j < arg_list[i].length; j++) {\r\n                isListLenArg(fn_name, arg_name + '[' + i + ']' + '[' + j + ']', arg_list[i][j], 3);\r\n                isNumberListArg(fn_name, arg_name + '[' + i + ']' + '[' + j + ']', arg_list[i][j]);\r\n            }\r\n        }\r\n        return;\r\n    },\r\n    isVector: function(fn_name: string, arg_name: string, arg_list: [number, number, number]): void { // same checks as coord\r\n        typeCheckObj.isCoord(fn_name, arg_name, arg_list);\r\n        return;\r\n    },\r\n    isVectorList: function(fn_name: string, arg_name: string, arg_list: number[]): void {\r\n        // Add if required\r\n    },\r\n    isOrigin: function(fn_name: string, arg_name: string, arg: number[]): TEntTypeIdx {\r\n        return checkIDnTypes(fn_name, arg_name, arg, ['isID', 'isCoord'], ['POSI', 'VERT', 'POINT']) as TEntTypeIdx;\r\n    },\r\n    isPlane: function(fn_name: string, arg_name: string, arg_list: [number, number, number][]): void { // TPlane = Txyz, Txyz, Txyz]\r\n        // one origin: point, posi, vert, coord + 2 vectors\r\n        isListArg(fn_name, arg_name, arg_list, 'origin and vectors');\r\n        isListLenArg(fn_name, arg_name, arg_list, 3);\r\n        typeCheckObj.isCoord(fn_name, arg_name  + '[0]', arg_list[0]);\r\n        [1, 2].forEach((i) => {\r\n            typeCheckObj.isVector(fn_name, arg_name + '[' + i + ']', arg_list[i]);\r\n        });\r\n        return;\r\n    },\r\n    isPlaneList: function(fn_name: string, arg_name: string, arg_list: number[][][]): void {\r\n        // Add if required\r\n    },\r\n    isRay: function(fn_name: string, arg_name: string, arg_list: [number, number, number][]): void { // TRay = [Txyz, Txyz]\r\n        isListArg(fn_name, arg_name, arg_list, 'origin and vector');\r\n        isListLenArg(fn_name, arg_name, arg_list, 2);\r\n        typeCheckObj.isCoord(fn_name, arg_name  + '[0]', arg_list[0]);\r\n        typeCheckObj.isVector(fn_name, arg_name + '[1]', arg_list[1]);\r\n        return;\r\n    }\r\n};\r\nconst IDcheckObj = {\r\n    // IDs\r\n    // entity types\r\n    // POSI, TRI, VERT, EDGE, WIRE, FACE, POINT, PLINE, PGON, COLL\r\n    isID: function(fn_name: string, arg_name: string, arg: any, ent_type_strs: string[]|null): TEntTypeIdx {\r\n        typeCheckObj.isEntity(fn_name, arg_name, arg); // check is valid id\r\n        const ent_arr = idsBreak(arg) as TEntTypeIdx; // split\r\n\r\n        if (ent_type_strs === null) {\r\n            ent_type_strs = ['POSI', 'TRI', 'VERT', 'EDGE', 'WIRE', 'FACE', 'POINT', 'PLINE', 'PGON', 'COLL'];\r\n        }\r\n        let pass = false;\r\n        for (let i = 0; i < ent_type_strs.length; i++) {\r\n            if (ent_arr[0] === EEntType[ent_type_strs[i]]) {\r\n                pass = true;\r\n                break;\r\n            }\r\n        }\r\n        if (pass === false) {\r\n            throw new Error(fn_name + ': ' + arg_name + ' is not one of the following valid types - ' + ent_type_strs.toString());\r\n        }\r\n        return ent_arr;\r\n    },\r\n    isIDList: function(fn_name: string, arg_name: string, arg_list: any[], ent_type_strs: string[]|null): TEntTypeIdx[] {\r\n        typeCheckObj.isEntityList(fn_name, arg_name, arg_list); // check is valid id list\r\n        const ent_arr_lst = idsBreak(arg_list) as TEntTypeIdx[]; // split\r\n\r\n        if (ent_type_strs === null) {\r\n            ent_type_strs = ['POSI', 'TRI', 'VERT', 'EDGE', 'WIRE', 'FACE', 'POINT', 'PLINE', 'PGON', 'COLL'];\r\n        }\r\n        for (let i = 0; i < ent_arr_lst.length; i++) {\r\n            let pass = false;\r\n            for (let j = 0; j < ent_type_strs.length; j++) {\r\n                if (ent_arr_lst[i][0] === EEntType[ent_type_strs[j]]) {\r\n                    pass = true;\r\n                    break;\r\n                }\r\n            }\r\n            if (pass === false) {\r\n                const ret_str_arr = [];\r\n                ent_type_strs.forEach((test_ent) => {\r\n                    ret_str_arr.push(test_ent + '_list');\r\n                });\r\n                throw new Error(fn_name + ': ' + arg_name + '[' + i + ']' + ' is not one of the following valid types - '\r\n                                + ret_str_arr.toString());\r\n            }\r\n        }\r\n        return ent_arr_lst;\r\n    },\r\n    isIDList_list: function(fn_name: string, arg_name: string, arg_list: any, ent_type_strs: string[]|null): TEntTypeIdx[][] {\r\n        const ret_arr = [];\r\n        for (let i = 0; i < arg_list.length; i++) {\r\n            ret_arr.push(IDcheckObj.isIDList(fn_name, arg_name + '[' + i + ']', arg_list[i], ent_type_strs));\r\n        }\r\n        return ret_arr as TEntTypeIdx[][];\r\n    },\r\n};\r\n// =========================================================================================================================================\r\n// Specific Checks\r\n// =========================================================================================================================================\r\nexport function checkCommTypes(fn_name: string, arg_name: string, arg: any, check_fns: string[]): void|TEntTypeIdx|\r\n                               TEntTypeIdx[]|TEntTypeIdx[][] {\r\n    let pass = false;\r\n    const err_arr = [];\r\n    let ret;\r\n    for (let i = 0; i < check_fns.length; i++) {\r\n        try {\r\n           ret = typeCheckObj[check_fns[i]](fn_name + '.' + check_fns[i], arg_name, arg);\r\n        } catch (err) {\r\n            err_arr.push(err.message + '\\n');\r\n            continue;\r\n        }\r\n        pass = true;\r\n        break; // passed\r\n    }\r\n    if (pass === false) { // Failed all tests: argument does not fall into any valid types\r\n        const ret_msg = fn_name + ': ' + arg_name + ' failed the following tests - ' + check_fns.toString() + '\\n';\r\n        throw new Error(ret_msg + err_arr.join(''));\r\n    }\r\n    return ret;\r\n}\r\n\r\nexport function checkIDs(fn_name: string, arg_name: string, arg: any, check_fns: string[],\r\n                         IDchecks: string[]|null): TEntTypeIdx|TEntTypeIdx[]|TEntTypeIdx[][] {\r\n    let pass = false;\r\n    const err_arr = [];\r\n    let ret: TEntTypeIdx|TEntTypeIdx[];\r\n    for (let i = 0; i < check_fns.length; i++) {\r\n        try {\r\n           ret =  IDcheckObj[check_fns[i]](fn_name + '.' + check_fns[i], arg_name, arg, IDchecks);\r\n        } catch (err) {\r\n            err_arr.push(err.message + '\\n');\r\n            continue;\r\n        }\r\n        pass = true;\r\n        break; // passed\r\n    }\r\n    if (pass === false) { // Failed all tests: argument does not fall into any valid types\r\n        const ret_msg = fn_name + ': ' + arg_name + ' failed the following tests - ' + check_fns.toString() + '\\n';\r\n        throw new Error(ret_msg + err_arr.join(''));\r\n    }\r\n    return ret; // returns TEntTypeIdx|TEntTypeIdx[]|TEntTypeIdx[][]; depends on which passes\r\n}\r\n// =========================================================================================================================================\r\n// Most General Check\r\n// =========================================================================================================================================\r\nexport function checkIDnTypes(fn_name: string, arg_name: string, arg: any, check_fns: string[],\r\n                              IDchecks?: string[]|null): TEntTypeIdx|TEntTypeIdx[]|TEntTypeIdx[][] {\r\n    let pass = false;\r\n    const err_arr = [];\r\n    let ret: TEntTypeIdx|TEntTypeIdx[];\r\n    for (let i = 0; i < check_fns.length; i++) {\r\n        if (Object.keys(IDcheckObj).includes(check_fns[i])) {\r\n            // checking for ID\r\n            try {\r\n                ret = IDcheckObj[check_fns[i]](fn_name + '.' + check_fns[i], arg_name, arg, IDchecks);\r\n            } catch (err) {\r\n                err_arr.push(err.message + '\\n');\r\n                continue;\r\n            }\r\n            pass = true;\r\n            break; // passed\r\n        } else {\r\n            // checking common types\r\n            try {\r\n                typeCheckObj[check_fns[i]](fn_name + '.' + check_fns[i], arg_name, arg);\r\n            } catch (err) {\r\n                err_arr.push(err.message + '\\n');\r\n                continue;\r\n            }\r\n            pass = true;\r\n            break; // passed\r\n        }\r\n    }\r\n    if (pass === false) { // Failed all tests: argument does not fall into any valid types\r\n        const ret_msg = fn_name + ': ' + arg_name + ' failed the following tests - ' + check_fns.toString() + '\\n';\r\n        throw new Error(ret_msg + err_arr.join(''));\r\n    }\r\n    return ret; // returns void|TEntTypeIdx|TEntTypeIdx[]|TEntTypeIdx[][]; depends on which passes\r\n}\r\n\r\n// =====================================================================================================================\r\n// util\r\n// =====================================================================================================================\r\n// List\r\nfunction isListArg(fn_name: string, arg_name: string, arg: any, typ: string): void {\r\n    if (!Array.isArray(arg)) {\r\n        throw new Error (fn_name + ': ' + arg_name + ' is not a list of ' + typ);\r\n    }\r\n    return;\r\n}\r\nfunction isListLenArg(fn_name: string, arg_name: string, arg_list: any[], len: number): void {\r\n    if (arg_list.length !== len) {\r\n        throw new Error (fn_name + ': ' + arg_name + ' is not a list of length ' + len);\r\n    }\r\n    return;\r\n}\r\n// Any\r\nfunction isAnyArg(fn_name: string, arg_name: string, arg: any): void {\r\n    if (arg === undefined) {\r\n        throw new Error(fn_name + ': ' + arg_name + ' must be defined');\r\n    }\r\n    return;\r\n}\r\n// String\r\nfunction isStringArg(fn_name: string, arg_name: string, arg: any, typ: string): void {\r\n    if (typeof arg !== 'string') {\r\n        throw new Error(fn_name + ': ' + arg_name + ' is not a ' + typ);\r\n    }\r\n    return;\r\n}\r\nfunction isStringListArg(fn_name: string, arg_name: string, arg_list: any[], typ: string): void {\r\n    isListArg(fn_name, arg_name, arg_list, typ);\r\n    for (let i = 0; i < arg_list.length; i++) {\r\n        isStringArg(fn_name, arg_name + '[' + i + ']', arg_list[i], typ);\r\n        if (arg_list[i].slice(2).length === 0) {\r\n            throw new Error(fn_name + ': ' + arg_name + '[' + i + ']' + ' needs to have an index specified');\r\n        }\r\n    }\r\n    return;\r\n}\r\n// Numbers\r\nfunction isNumberArg(fn_name: string, arg_name: string, arg: any): void {\r\n    if (typeof arg !== 'number') {\r\n        throw new Error(fn_name + ': ' + arg_name + ' is not a number');\r\n    }\r\n    return;\r\n}\r\nfunction isNumberListArg(fn_name: string, arg_name: string, arg_list: any): void {\r\n    isListArg(fn_name, arg_name, arg_list, 'numbers');\r\n    for (let i = 0; i < arg_list.length; i++) {\r\n        if (typeof arg_list[i] !== 'number') {\r\n            throw new Error(fn_name + ': ' + arg_name + '[' + i + ']' + ' is not a number');\r\n        }\r\n    }\r\n    return;\r\n}\r\nfunction isIntArg(fn_name: string, arg_name: string, arg: any): void {\r\n    if (!Number.isInteger(arg)) {\r\n        throw new Error(fn_name + ': ' + arg_name + ' is not an integer');\r\n    }\r\n    return;\r\n}\r\nfunction isIntListArg(fn_name: string, arg_name: string, arg_list: any[]): void {\r\n    isListArg(fn_name, arg_name, arg_list, 'integers');\r\n    for (let i = 0; i < arg_list.length; i++) {\r\n        if (!Number.isInteger(arg_list[i])) {\r\n            throw new Error(fn_name + ': ' + arg_name + '[' + i + ']' + ' is not an integer');\r\n        }\r\n    }\r\n    return;\r\n}\r\n","import {XYPLANE, YZPLANE, ZXPLANE, YXPLANE, ZYPLANE, XZPLANE } from '@libs/geo-info/common';\r\n\r\nexport const XY = XYPLANE;\r\nexport const YZ = YZPLANE;\r\nexport const ZX = ZXPLANE;\r\n\r\nexport const YX = YXPLANE;\r\nexport const ZY = ZYPLANE;\r\nexport const XZ = XZPLANE;\r\n","export function radToDeg(rad: number): number {\r\n    return rad * (180 / Math.PI);\r\n}\r\nexport function degToRad(deg: number): number {\r\n    return deg * (Math.PI / 180);\r\n}\r\n","/**\r\n * list functions that obtain and return information from an input list. Does not modify input list.\r\n */\r\n\r\n\r\nexport function range(min: number, max: number): number[] {\r\n    if (min === undefined) { throw new Error('Invalid arg: min must be defined.'); }\r\n    if (max === undefined) { throw new Error('Invalid arg: max must be defined.'); }\r\n    const len: number = max - min;\r\n    if (len <= 0) {return []; }\r\n    return Array.apply(0, new Array(len)).map((v, i) => i + min);\r\n}\r\n\r\nexport function length(list: any[]): number {\r\n    if (list === undefined) { throw new Error('Invalid arg: list must be defined.'); }\r\n    return list.length;\r\n}\r\n\r\nexport function shuffle(list: any[]): any[] {\r\n    const new_list: any[] = list.slice();\r\n    new_list.sort(() => .5 - Math.random());\r\n    return new_list;\r\n}\r\n\r\nexport function zip(lists: any[][]): any[] {\r\n    const shortest = lists.length === 0 ? [] : lists.reduce((a, b) => {\r\n        return a.length < b.length ? a : b;\r\n    });\r\n    return shortest.map((_, i) => lists.map(array => array[i] ));\r\n}\r\n\r\nexport function zip2(lists: any[][]): any[] {\r\n    const longest = lists.length === 0 ? [] : lists.reduce((a, b) => {\r\n        return a.length > b.length ? a : b;\r\n    });\r\n    return longest.map((_, i) => lists.map(array => array[i] ));\r\n}\r\n","import * as Mathjs from 'mathjs';\r\n\r\nexport const boolean = Mathjs.boolean;\r\nexport const number = Mathjs.number;\r\nexport const string = Mathjs.string;\r\nexport const mad = Mathjs.mad;\r\nexport const mean = Mathjs.mean;\r\nexport const median = Mathjs.median;\r\nexport const mode = Mathjs.mode;\r\nexport const prod = Mathjs.prod;\r\nexport const std = Mathjs.std;\r\nexport const vari = Mathjs.var;\r\nexport const sum = Mathjs.sum;\r\nexport const hypot = Mathjs.hypot;\r\nexport const norm = Mathjs.norm;\r\nexport const mod = Mathjs.mod;\r\nexport const square = Mathjs.square;\r\nexport const cube = Mathjs.cube;\r\nexport const distance = Mathjs.distance;\r\nexport const random = Mathjs.random;\r\nexport const randomInt = Mathjs.randomInt;\r\nexport const pickRandom = Mathjs.pickRandom;\r\n","import { GIModel } from '@libs/geo-info/GIModel';\r\nimport { EAttribDataTypeStrs, TAttribDataTypes, EAttribNames, EEntType, TId, IGeomPack, TEntTypeIdx } from '@libs/geo-info/common';\r\nimport { getArrDepth } from '@libs/geo-info/id';\r\nimport { checkIDs, checkCommTypes, checkAttribNameValue } from './_check_args';\r\n\r\n//  ===============================================================================================\r\n//  Functions used by Mobius\r\n//  ===============================================================================================\r\n/**\r\n * Creates a new empty model.\r\n *\r\n * @returns New model empty.\r\n */\r\nexport function __new__(): GIModel {\r\n    const model: GIModel = new GIModel();\r\n    model.attribs.add.addAttrib(EEntType.POSI, EAttribNames.COORDS, EAttribDataTypeStrs.FLOAT, 3);\r\n    return model;\r\n}\r\n//  ===============================================================================================\r\n/**\r\n * A function to preprocess the model, before it enters the node.\r\n * In cases where there is more than one model connected to a node,\r\n * the preprocess function will be called before the merge function.\r\n *\r\n * @param model The model to preprocess.\r\n */\r\nexport function __preprocess__(__model__: GIModel): void {\r\n    // TODO\r\n}\r\n//  ===============================================================================================\r\n/**\r\n * A function to postprocess the model, after it enters the node.\r\n *\r\n * @param model The model to postprocess.\r\n */\r\nexport function __postprocess__(__model__: GIModel): void {\r\n    // TODO\r\n    // Remove all undefined values for the arrays\r\n}\r\n//  ===============================================================================================\r\n/**\r\n * Merges the second model into the first model. The geometry, attribues, and groups are all merged.\r\n * If the models contain contain groups with the same names, then the groups will be merged.\r\n *\r\n * @param model1 The model to merge into.\r\n * @param model2 The model to merge from    .\r\n */\r\nexport function __merge__(model1: GIModel, model2: GIModel): IGeomPack {\r\n    return model1.merge(model2);\r\n}\r\n//  ===============================================================================================\r\n/**\r\n * Returns a string representation of this model.\r\n * @param __model__\r\n */\r\nexport function __stringify__(__model__: GIModel): string {\r\n    return JSON.stringify(__model__.getData());\r\n}\r\n//  ===============================================================================================\r\n/**\r\n * Sets an attribute in the model.\r\n * @param __model__\r\n */\r\nexport function __setAttrib__(__model__: GIModel, entities: TId|TId[],\r\n                              attrib_name: string, attrib_value: TAttribDataTypes, attrib_index?: number): void {\r\n    // --- Error Check ---\r\n    const fn_name = entities + '.Inline.__setAttrib__' + '[\\'' + attrib_name + '\\']';\r\n    let ents_arr = checkIDs(fn_name, 'entities', entities, ['isID', 'isIDList'], null);\r\n    checkAttribNameValue(fn_name , attrib_name, attrib_value, attrib_index);\r\n    // --- Error Check ---\r\n    if (!Array.isArray(ents_arr[0])) {\r\n        ents_arr = [ents_arr] as TEntTypeIdx[];\r\n    }\r\n    for (const ent_arr of ents_arr) {\r\n        const [ent_type, ent_i]: TEntTypeIdx = ent_arr as TEntTypeIdx;\r\n        if (attrib_index !== null && attrib_index !== undefined) {\r\n            __model__.attribs.add.setAttribIndexedValue(ent_type, ent_i, attrib_name, attrib_index, attrib_value as number|string);\r\n        } else {\r\n            __model__.attribs.add.setAttribValue(ent_type, ent_i, attrib_name, attrib_value);\r\n        }\r\n    }\r\n}\r\n//  ===============================================================================================\r\nfunction _getAttrib(__model__: GIModel, ents_arr: TEntTypeIdx|TEntTypeIdx[],\r\n        attrib_name: string, attrib_index?: number): TAttribDataTypes|TAttribDataTypes[] {\r\n    if (getArrDepth(ents_arr) === 1) {\r\n        const [ent_type, ent_i]: TEntTypeIdx = ents_arr as TEntTypeIdx;\r\n        if (attrib_index !== null && attrib_index !== undefined) {\r\n            return __model__.attribs.query.getAttribIndexedValue(ent_type, attrib_name, ent_i, attrib_index);\r\n        } else {\r\n            return __model__.attribs.query.getAttribValue(ent_type, attrib_name, ent_i);\r\n        }\r\n    } else {\r\n        return (ents_arr as TEntTypeIdx[]).map( ent_arr =>\r\n            _getAttrib(__model__, ent_arr, attrib_name, attrib_index) ) as TAttribDataTypes[];\r\n    }\r\n}\r\n/**\r\n * Gets an attribute from the model.\r\n * @param __model__\r\n */\r\nexport function __getAttrib__(__model__: GIModel, entities: TId|TId[],\r\n        attrib_name: string, attrib_index?: number): TAttribDataTypes|TAttribDataTypes[] {\r\n    // --- Error Check ---\r\n    const fn_name = 'Inline.__getAttrib__';\r\n    const ents_arr = checkIDs(fn_name, 'entities', entities, ['isID', 'isIDList'], null) as TEntTypeIdx|TEntTypeIdx[];\r\n    checkCommTypes(fn_name, 'attrib_name', attrib_name, ['isString']);\r\n    if (attrib_index !== null && attrib_index !== undefined) {\r\n        checkCommTypes(fn_name, 'attrib_index', attrib_index, ['isNumber']);\r\n    }\r\n    // --- Error Check ---\r\n    return _getAttrib(__model__, ents_arr, attrib_name, attrib_index);\r\n}\r\n//  ===============================================================================================\r\n","import {__new__, __merge__} from './_model';\r\n\r\nexport const _parameterTypes = {\r\n    constList: '__constList__',\r\n    model: '__model__',\r\n    input: '__input__',\r\n\r\n    new: '_model.__new__', // TODO - make this genric\r\n    newFn: __new__,\r\n\r\n    merge: '_model.__merge__', // TODO - make this genric\r\n    mergeFn: __merge__,\r\n\r\n    addData: '_model.addGiData', // TODO - make this genric\r\n\r\n    preprocess: '_model.__preprocess__', // TODO - make this genric\r\n    postprocess: '_model.__postprocess__', // TODO - make this genric\r\n\r\n    setattrib: '_model.__setAttrib__', // TODO - make this genric\r\n    getattrib: '_model.__getAttrib__', // TODO - make this genric\r\n\r\n    return: '_Output.Return'\r\n};\r\n\r\nexport const _varString = `\r\nPI = Math.PI;\r\nXY = __modules__._constants.XY;\r\nYZ = __modules__._constants.YZ;\r\nZX = __modules__._constants.ZX;\r\nYX = __modules__._constants.YX;\r\nZY = __modules__._constants.ZY;\r\nXZ = __modules__._constants.XZ;\r\nmin = Math.min;\r\nmax = Math.max;\r\npow = Math.pow;\r\nsqrt = Math.sqrt;\r\nexp = Math.exp;\r\nlog = Math.log;\r\nround = Math.round;\r\nceil = Math.ceil;\r\nfloor = Math.floor;\r\nabs = Math.abs;\r\nsin = Math.sin;\r\nasin = Math.asin;\r\nsinh = Math.sinh;\r\nasinh = Math.asinh;\r\ncos = Math.cos;\r\nacos = Math.acos;\r\ncosh = Math.cosh;\r\nacosh = Math.acosh;\r\ntan = Math.tan;\r\natan = Math.atan;\r\ntanh = Math.tanh;\r\natanh = Math.atanh;\r\natan2 = Math.atan2;\r\nboolean = __modules__._mathjs.boolean;\r\nnumber = __modules__._mathjs.number;\r\nstring = __modules__._mathjs.string;\r\nmad = __modules__._mathjs.mad;\r\nmean = __modules__._mathjs.mean;\r\nmedian = __modules__._mathjs.median;\r\nmode = __modules__._mathjs.mode;\r\nprod = __modules__._mathjs.prod;\r\nstd = __modules__._mathjs.std;\r\nvari = __modules__._mathjs.var;\r\nsum = __modules__._mathjs.sum;\r\nhypot = __modules__._mathjs.hypot;\r\nnorm = __modules__._mathjs.norm;\r\nmod = __modules__._mathjs.mod;\r\nsquare = __modules__._mathjs.square;\r\ncube = __modules__._mathjs.cube;\r\ndistance = __modules__._mathjs.distance;\r\nrange = __modules__._list.range;\r\nlength = __modules__._list.length;\r\nshuffle = __modules__._list.shuffle;\r\nzip = __modules__._list.zip;\r\nzip2 = __modules__._list.zip2;\r\nvecsAdd = __modules__._vec.vecAdd;\r\nvecSub = __modules__._vec.vecSub;\r\nvecDiv = __modules__._vec.vecDiv;\r\nvecMult = __modules__._vec.vecMult;\r\nvecLen = __modules__._vec.vecLen;\r\nvecSetLen = __modules__._vec.vecSetLen;\r\nvecNorm = __modules__._vec.vecNorm;\r\nvecRev = __modules__._vec.vecRev;\r\nvecFromTo = __modules__._vec.vecFromTo;\r\nvecAng = __modules__._vec.vecAng;\r\nvecAng2 = __modules__._vec.vecAng2;\r\nvecDot = __modules__._vec.vecDot;\r\nvecCross = __modules__._vec.vecCross;\r\nvecEqual = __modules__._vec.vecEqual;\r\nradToDeg = __modules__._conversion.radToDeg;\r\ndegToRad = __modules__._conversion.degToRad;\r\nrand = __modules__._rand.rand;\r\nrandInt = __modules__._rand.randInt;\r\nrandPick = __modules__._rand.randPick;\r\n`;\r\n","import * as mathjs from 'mathjs';\r\n\r\nexport function rand(min: number, max: number): number {\r\n    return mathjs.random(min, max);\r\n}\r\nexport function randInt(min: number, max: number): number {\r\n    return mathjs.randomInt(min, max);\r\n}\r\nexport function randPick(list: any[], num: number): number {\r\n    return mathjs.pickRandom(list, num);\r\n}\r\n","import * as vec from '@libs/geom/vectors';\r\n\r\nexport const vecAdd = vec.vecAdd;\r\nexport const vecSub = vec.vecSub;\r\nexport const vecDiv = vec.vecDiv;\r\nexport const vecMult = vec.vecMult;\r\nexport const vecLen = vec.vecLen;\r\nexport const vecSetLen = vec.vecSetLen;\r\nexport const vecNorm = vec.vecNorm;\r\nexport const vecRev = vec.vecRev;\r\nexport const vecFromTo = vec.vecFromTo;\r\nexport const vecAng = vec.vecAng;\r\nexport const vecAng2 = vec.vecAng2;\r\nexport const vecDot = vec.vecDot;\r\nexport const vecCross = vec.vecCross;\r\nexport const vecEqual = vec.vecEqual;\r\n","import { GIModel } from '@libs/geo-info/GIModel';\r\nimport { TId, Txyz, EEntType, TEntTypeIdx } from '@libs/geo-info/common';\r\nimport { isPline, isWire, isEdge, isPgon, isFace, idsBreak, getArrDepth } from '@libs/geo-info/id';\r\nimport { distance } from '@libs/geom/distance';\r\nimport { _MatMenuItemMixinBase } from '@angular/material/menu/typings/menu-item';\r\nimport { vecSum, vecDiv, vecAdd, vecSub, vecNorm, newellNorm } from '@libs/geom/vectors';\r\nimport { triangulate } from '@libs/triangulate/triangulate';\r\nimport { normal, area } from '@libs/geom/triangle';\r\nimport { checkIDs, checkCommTypes, checkIDnTypes} from './_check_args';\r\n\r\n// ================================================================================================\r\nexport enum _EDistanceMethod {\r\n    P_P_DISTANCE = 'p_to_p_distance',\r\n    MIN_DISTANCE = 'min_distance'\r\n}\r\nfunction _distanceMin(__model__: GIModel, ent_arr1: TEntTypeIdx, ents_arr2: TEntTypeIdx|TEntTypeIdx[]): number|number[] {\r\n    const depth2: number = getArrDepth(ents_arr2);\r\n    if (depth2 === 1) {\r\n        throw Error('Not implemented');\r\n    } else if (depth2 === 2) {\r\n        return (ents_arr2 as TEntTypeIdx[]).map( ent_arr2 => _distanceMin(__model__, ent_arr1, ent_arr2) ) as number[];\r\n    }\r\n}\r\nfunction _distancePtoP(__model__: GIModel, ent_arr1: TEntTypeIdx, ents_arr2: TEntTypeIdx|TEntTypeIdx[]): number|number[] {\r\n    const depth2: number = getArrDepth(ents_arr2);\r\n    if (depth2 === 1) {\r\n        const ent_arr2: TEntTypeIdx = ents_arr2 as TEntTypeIdx;\r\n        const ps1_xyz: Txyz = __model__.attribs.query.getPosiCoords(ent_arr1[1]);\r\n        const ps2_xyz: Txyz = __model__.attribs.query.getPosiCoords(ent_arr2[1]);\r\n        return distance(ps1_xyz, ps2_xyz) as number;\r\n    } else if (depth2 === 2) {\r\n        return (ents_arr2 as TEntTypeIdx[]).map( ent_arr2 => _distancePtoP(__model__, ent_arr1, ent_arr2) ) as number[];\r\n    }\r\n}\r\n/**\r\n * Calculates the distance between two positions.\r\n * @param __model__\r\n * @param position1 First position.\r\n * @param position2 Second position, or list of positions.\r\n * @param method Enum; distance or min_distance.\r\n * @returns Distance, or list of distances (if position2 is a list).\r\n * @example distance1 = calc.Distance (position1, position2, p_to_p_distance)\r\n * @example_info position1 = [0,0,0], position2 = [[0,0,10],[0,0,20]], Expected value of distance is [10,20].\r\n * @example_link calc_Distance.mob\r\n */\r\nexport function Distance(__model__: GIModel, position1: TId, position2: TId|TId[], method: _EDistanceMethod): number|number[] {\r\n    // --- Error Check ---\r\n    const fn_name = 'calc.Distance';\r\n    const ents_arr1 = checkIDs(fn_name, 'position1', position1, ['isID'], ['POSI'])  as TEntTypeIdx;\r\n    const ents_arr2 = checkIDs(fn_name, 'position2', position2, ['isID'], ['POSI']) as TEntTypeIdx|TEntTypeIdx[]; // TODO\r\n    // --- Error Check ---\r\n    if (method === _EDistanceMethod.P_P_DISTANCE) {\r\n        return _distancePtoP(__model__, ents_arr1, ents_arr2);\r\n    } else if (method === _EDistanceMethod.MIN_DISTANCE) {\r\n        return _distanceMin(__model__, ents_arr1, ents_arr2);\r\n    }\r\n}\r\n// ================================================================================================\r\n/**\r\n * Calculates the length of a line or a list of lines.\r\n * @param __model__\r\n * @param lines Edge, wire or polyline.\r\n * @returns Length.\r\n * @example length1 = calc.Length (line1)\r\n * @example_link calc_Length.mob\r\n */\r\nexport function Length(__model__: GIModel, lines: TId|TId[]): number {\r\n    // --- Error Check ---\r\n    checkIDs('calc.Length', 'lines', lines, ['isID', 'isIDList'], ['EDGE', 'WIRE', 'PLINE']);\r\n    // --- Error Check ---\r\n    if (!Array.isArray(lines)) {\r\n        lines = [lines] as TId[];\r\n    }\r\n    const edges_i: number[] = [];\r\n    let dist = 0;\r\n    for (const line of lines) {\r\n        const [ent_type, index]: [EEntType, number] = idsBreak(line) as TEntTypeIdx;\r\n        if (isEdge(ent_type)) {\r\n            edges_i.push(index);\r\n        } else if (isWire(ent_type)) {\r\n            edges_i.push(...__model__.geom.query.navWireToEdge(index));\r\n        } else if (isPline(ent_type)) {\r\n            const wire_i: number = __model__.geom.query.navPlineToWire(index);\r\n            edges_i.push(...__model__.geom.query.navWireToEdge(wire_i));\r\n        } else {\r\n            throw new Error('Entity is of wrong type. Must be a an edge, a wire or a polyline');\r\n        }\r\n    }\r\n    for (const edge_i of edges_i) {\r\n        const posis_i: number[] = __model__.geom.query.navAnyToPosi(EEntType.EDGE, edge_i);\r\n        const xyz_0: Txyz = __model__.attribs.query.getPosiCoords(posis_i[0]);\r\n        const xyz_1: Txyz = __model__.attribs.query.getPosiCoords(posis_i[1]);\r\n        dist += distance(xyz_0, xyz_1);\r\n    }\r\n    return dist;\r\n}\r\n// ================================================================================================\r\n/**\r\n * Calculates the area of a surface or a list of surfaces.\r\n * TODO: allow for a list of surfaces\r\n * @param __model__\r\n * @param entities A polygon, a face, a closed polyline, or a closed wire.\r\n * @returns Area.\r\n * @example area1 = calc.Area (surface1)\r\n * @example_link calc_Area.mob\r\n */\r\nexport function Area(__model__: GIModel, entities: TId): number {\r\n    // --- Error Check ---\r\n    const fn_name = 'calc.Area';\r\n    checkIDs(fn_name, 'entities', entities, ['isID'], ['PGON', 'FACE', 'PLINE', 'WIRE']);\r\n    // --- Error Check ---\r\n    const [ent_type, index]: [EEntType, number] = idsBreak(entities) as TEntTypeIdx;\r\n    if (isPgon(ent_type) || isFace(ent_type)) {\r\n        // faces, these are already triangulated\r\n        let face_i: number = index;\r\n        if (isPgon(ent_type)) {\r\n            face_i = __model__.geom.query.navPgonToFace(index);\r\n        }\r\n        const tris_i: number[] = __model__.geom.query.navFaceToTri(face_i);\r\n        let total_area = 0;\r\n        for (const tri_i of tris_i) {\r\n            const corners_i: number[] = __model__.geom.query.navAnyToPosi(EEntType.TRI, tri_i);\r\n            const corners_xyzs: Txyz[] = corners_i.map(corner_i => __model__.attribs.query.getPosiCoords(corner_i));\r\n            const tri_area: number = area( corners_xyzs[0], corners_xyzs[1], corners_xyzs[2]);\r\n            total_area += tri_area;\r\n        }\r\n        return total_area;\r\n    } else if (isPline(ent_type) || isWire(ent_type)) {\r\n        // wires, these need to be triangulated\r\n        let wire_i: number = index;\r\n        if (isPline(ent_type)) {\r\n            wire_i = __model__.geom.query.navPlineToWire(index);\r\n        }\r\n        if (__model__.geom.query.istWireClosed(wire_i)) {\r\n            throw new Error(fn_name + ': ' + 'To calculate area, wire must be closed');\r\n        }\r\n        const posis_i: number[] = __model__.geom.query.navAnyToPosi(EEntType.WIRE, index);\r\n        const xyzs:  Txyz[] = posis_i.map( posi_i => __model__.attribs.query.getPosiCoords(posi_i) );\r\n        const tris: number[][] = triangulate(xyzs);\r\n        let total_area = 0;\r\n        for (const tri of tris) {\r\n            const corners_xyzs: Txyz[] = tri.map(corner_i => xyzs[corner_i]);\r\n            const tri_area: number = area( corners_xyzs[0], corners_xyzs[1], corners_xyzs[2] );\r\n            total_area += tri_area;\r\n        }\r\n        return total_area;\r\n    }\r\n}\r\n// ================================================================================================\r\n/**\r\n * Returns a vector along an edge.\r\n * @param __model__\r\n * @param edge An edge\r\n * @returns The vector from the start point of an edge to the end point of an edge\r\n * @example_link calc_Vectore.mob\r\n */\r\nexport function Vector(__model__: GIModel, edge: TId): Txyz {\r\n    // --- Error Check ---\r\n    checkIDs('vector.GetVector', 'edge', edge, ['isID'], ['EDGE']);\r\n    // --- Error Check ---\r\n    const [ent_type, index]: [EEntType, number] = idsBreak(edge) as TEntTypeIdx;\r\n    const posis_i: number[] = __model__.geom.query.navAnyToPosi(ent_type, index);\r\n    const start: Txyz = __model__.attribs.query.getPosiCoords(posis_i[0]);\r\n    const end: Txyz = __model__.attribs.query.getPosiCoords(posis_i[1]);\r\n    return vecSub(end, start);\r\n}\r\n// ================================================================================================\r\nfunction _centroid(__model__: GIModel, ents_arr: TEntTypeIdx[]): Txyz {\r\n    const posis_i: number[] = [];\r\n    for (const ent_arr of ents_arr) {\r\n        posis_i.push(...__model__.geom.query.navAnyToPosi(ent_arr[0], ent_arr[1]));\r\n    }\r\n    const unique_posis_i = Array.from(new Set(posis_i));\r\n    const unique_xyzs: Txyz[] = unique_posis_i.map( posi_i => __model__.attribs.query.getPosiCoords(posi_i));\r\n    return vecDiv(vecSum(unique_xyzs), unique_xyzs.length);\r\n}\r\n/**\r\n * Calculates the centroid of a list of any entity.\r\n * @param __model__\r\n * @param entities List of positions, vertices, points, edges, wires, polylines, faces, polygons, or collections.\r\n * @returns Centroid.\r\n * @example centroid1 = calc.Centroid (polygon1)\r\n * @example_link calc_Centroid.mob\r\n */\r\nexport function Centroid(__model__: GIModel, entities: TId|TId[]): Txyz {\r\n    if (!Array.isArray(entities)) { entities = [entities]; }\r\n    const ents_arr: TEntTypeIdx[] = idsBreak(entities) as TEntTypeIdx[];\r\n    // --- Error Check ---\r\n    checkIDs('calc.Centroid', 'geometry', entities, ['isID', 'isIDList'],\r\n            ['POSI', 'VERT', 'POINT', 'EDGE', 'WIRE', 'PLINE', 'FACE', 'PGON', 'COLL']);\r\n    // --- Error Check ---\r\n    return _centroid(__model__, ents_arr);\r\n}\r\n// ================================================================================================\r\nexport function _normal(__model__: GIModel, ents_arr: TEntTypeIdx|TEntTypeIdx[]): Txyz|Txyz[] {\r\n    if (getArrDepth(ents_arr) === 1) {\r\n        const ent_type: EEntType = (ents_arr as TEntTypeIdx)[0];\r\n        const index: number = (ents_arr as TEntTypeIdx)[1];\r\n        if (isPgon(ent_type) || isFace(ent_type)) {\r\n            // faces, these are already triangulated\r\n            let face_i: number = index;\r\n            if (isPgon(ent_type)) {\r\n                face_i = __model__.geom.query.navPgonToFace(index);\r\n            }\r\n            const tris_i: number[] = __model__.geom.query.navFaceToTri(face_i);\r\n            let normal_vec: Txyz = [0, 0, 0];\r\n            for (const tri_i of tris_i) {\r\n                const corners_i: number[] = __model__.geom.query.navAnyToPosi(EEntType.TRI, tri_i);\r\n                const corners_xyzs: Txyz[] = corners_i.map(corner_i => __model__.attribs.query.getPosiCoords(corner_i));\r\n                const tri_normal: Txyz = normal( corners_xyzs[0], corners_xyzs[1], corners_xyzs[2], true);\r\n                normal_vec = vecAdd(normal_vec, tri_normal);\r\n            }\r\n            return vecNorm(vecDiv(normal_vec, tris_i.length));\r\n        } else if (isPline(ent_type) || isWire(ent_type)) {\r\n            // wires, these need to be triangulated\r\n            let wire_i: number = index;\r\n            if (isPline(ent_type)) {\r\n                wire_i = __model__.geom.query.navPlineToWire(index);\r\n            }\r\n            if (!__model__.geom.query.istWireClosed(wire_i)) {\r\n                throw new Error('To calculate normals, wire must be closed');\r\n            }\r\n            const posis_i: number[] = __model__.geom.query.navAnyToPosi(EEntType.WIRE, index);\r\n            const xyzs:  Txyz[] = posis_i.map( posi_i => __model__.attribs.query.getPosiCoords(posi_i) );\r\n            const tris: number[][] = triangulate(xyzs);\r\n            let normal_vec: Txyz = [0, 0, 0];\r\n            for (const tri of tris) {\r\n                const corners_xyzs: Txyz[] = tri.map(corner_i => xyzs[corner_i]);\r\n                const tri_normal: Txyz = normal( corners_xyzs[0], corners_xyzs[1], corners_xyzs[2], true );\r\n                normal_vec = vecAdd(normal_vec, tri_normal);\r\n            }\r\n            return vecNorm(vecDiv(normal_vec, tris.length));\r\n        }\r\n    } else {\r\n        return (ents_arr as TEntTypeIdx[]).map(ent_arr => _normal(__model__, ent_arr)) as Txyz[];\r\n    }\r\n}\r\n// function _newell_normal(__model__: GIModel, ents_arr: TEntTypeIdx[]): Txyz {\r\n//     const posis_i: number[] = [];\r\n//     for (const ent_arr of ents_arr) {\r\n//         posis_i.push(...__model__.geom.query.navAnyToPosi(ent_arr[0], ent_arr[1]));\r\n//     }\r\n//     const unique_posis_i = Array.from(new Set(posis_i));\r\n//     const unique_xyzs: Txyz[] = unique_posis_i.map( posi_i => __model__.attribs.query.getPosiCoords(posi_i));\r\n//     return newellNorm(unique_xyzs);\r\n// }\r\n/**\r\n * Calculates the normal of a list of positions, a polygon, a face, a closed polyline, a closed wire, or a plane..\r\n * @param __model__\r\n * @param entities List of positions, a polygon, a face, a closed polyline, a closed wire, or a plane.\r\n * @returns Vector.\r\n * @example normal1 = calc.Normal (polygon1)\r\n * @example_info If the input is non-planar, the output vector will be an average of all normal vector of the triangulated surfaces.\r\n * @example_link calc_Normal.mob\r\n */\r\nexport function Normal(__model__: GIModel, entities: TId|TId[]): Txyz|Txyz[] {\r\n    const ents_arr = idsBreak(entities) as TEntTypeIdx|TEntTypeIdx[];\r\n    // --- Error Check ---\r\n    const fn_name = 'calc.Normal';\r\n    checkIDs(fn_name, 'entities', entities, ['isID', 'isIDList'], ['PGON', 'FACE', 'PLINE', 'WIRE']);\r\n    // --- Error Check ---\r\n    return _normal(__model__, ents_arr);\r\n}\r\n// ================================================================================================\r\n/**\r\n * Calculates the position on a linear entity, given a t parameter.\r\n * @param __model__\r\n * @param line Edge, wire, or polyline.\r\n * @param t_param A value between 0 to 1.\r\n * @returns Set of XYZ coordinates.\r\n * @example coord1 = calc.ParamTToXyz (polyline1, 0.23)\r\n * @example_link calc_ParamTToXyz.mob\r\n */\r\nexport function ParamTToXyz(__model__: GIModel, line: TId, t_param: number): Txyz|Txyz[] {\r\n    // --- Error Check ---\r\n    const fn_name = 'calc.ParamTToXyz';\r\n    checkIDs(fn_name, 'line', line, ['isID'], ['EDGE', 'WIRE', 'POLYLINE']);\r\n    checkCommTypes(fn_name, 't_param', t_param, ['isNumber']);\r\n    if (t_param < 0 || t_param > 1) {throw new Error(fn_name + ': ' + 't_param is not between 0 and 1'); }\r\n    // --- Error Check ---\r\n    const edges_i: number[] = [];\r\n    const [ent_type, index]: [EEntType, number] = idsBreak(line) as TEntTypeIdx;\r\n    if (isEdge(ent_type)) {\r\n        edges_i.push(index);\r\n    } else if (isWire(ent_type)) {\r\n        edges_i.push(...__model__.geom.query.navWireToEdge(index));\r\n    } else if (isPline(ent_type)) {\r\n        const wire_i: number = __model__.geom.query.navPlineToWire(index);\r\n        edges_i.push(...__model__.geom.query.navWireToEdge(wire_i));\r\n    }\r\n    // } else {\r\n    //     throw new Error('Entity is of wrong type. Must be a an edge, a wire or a polyline');\r\n    // }\r\n    const num_edges: number = edges_i.length;\r\n    // get all the edge lengths\r\n    let total_dist = 0;\r\n    const dists: number[] = [];\r\n    const xyz_pairs: Txyz[][] = [];\r\n    for (const edge_i of edges_i) {\r\n        const posis_i: number[] = __model__.geom.query.navAnyToPosi(EEntType.EDGE, edge_i);\r\n        const xyz_0: Txyz = __model__.attribs.query.getPosiCoords(posis_i[0]);\r\n        const xyz_1: Txyz = __model__.attribs.query.getPosiCoords(posis_i[1]);\r\n        const dist: number = distance(xyz_0, xyz_1);\r\n        total_dist += dist;\r\n        dists.push(total_dist);\r\n        xyz_pairs.push([xyz_0, xyz_1]);\r\n    }\r\n    // map the t_param\r\n    const t_param_mapped: number = t_param * total_dist;\r\n    // loop through and find the point\r\n    for (let i = 0; i < num_edges; i++) {\r\n        if (t_param_mapped < dists[i]) {\r\n            const xyz_pair: Txyz[] = xyz_pairs[i];\r\n            let dist_a = 0;\r\n            if (i > 0) { dist_a = dists[i - 1]; }\r\n            const dist_b = dists[i];\r\n            const edge_length = dist_b - dist_a;\r\n            const to_t = t_param_mapped - dist_a;\r\n            const divisor = to_t / edge_length;\r\n            return vecAdd( xyz_pair[0], vecDiv(vecSub(xyz_pair[1], xyz_pair[0]), divisor) );\r\n        }\r\n    }\r\n    // t param must be 1 (or greater)\r\n    return xyz_pairs[num_edges - 1][1];\r\n}\r\n// ================================================================================================\r\n/**\r\n * Calculates a location on a line to get t parameter.\r\n * @param __model__\r\n * @param lines List of edges, wires, or polylines.\r\n * @param locations List of positions, vertices, points, or coordinates.\r\n * @example coord1 = calc.ParamXyzToT (polyline1, [1,2,3])\r\n * @example_link calc_ParamXyzToT.mob\r\n */\r\nexport function ParamXyzToT(__model__: GIModel, lines: TId|TId[], locations: TId|TId[]|Txyz|Txyz[]): number|number[] {\r\n    // --- Error Check ---\r\n    // const fn_name = 'calc.ParamXyzToT';\r\n    // checkIDs(fn_name, 'lines', lines, ['isID', 'isIDList'], ['EDGE', 'WIRE', 'POLYLINE']);\r\n    // checkIDnTypes(fn_name, 'locations', locations, ['isID', 'isIDList', 'isCoord'], ['POSI', 'VERT', 'POINT']);\r\n    // --- Error Check ---\r\n    throw new Error('Not impemented.'); return null;\r\n}\r\n// ================================================================================================\r\n","// functions used by mobius\r\n\r\n// import * as Model from './Model';\r\n// export {Model};\r\n\r\nimport * as _model from './_model';\r\nexport {_model};\r\n\r\n// import * as _model from './Model';\r\n// export {_model};\r\n\r\n// functions for end users\r\n\r\nimport * as query from './query';\r\nexport {query};\r\n\r\nimport * as make from './make';\r\nexport {make};\r\n\r\nimport * as modify from './modify';\r\nexport {modify};\r\n\r\n// import * as isect from './isect';\r\n// export {isect};\r\n\r\nimport * as calc from './calc';\r\nexport {calc};\r\n\r\nimport * as pattern from './pattern';\r\nexport {pattern};\r\n\r\nimport * as virtual from './virtual';\r\nexport {virtual};\r\n\r\nimport * as util from './util';\r\nexport {util};\r\n\r\nimport * as list from './list';\r\nexport {list};\r\n\r\n// helpers\r\n\r\nimport * as _mathjs from './_mathjs';\r\nexport {_mathjs};\r\n\r\nimport * as _rand from './_rand';\r\nexport {_rand};\r\n\r\nimport * as _vec from './_vec';\r\nexport {_vec};\r\n\r\nimport * as _list from './_list';\r\nexport {_list};\r\n\r\nimport * as _conversion from './_conversion';\r\nexport {_conversion};\r\n\r\nimport * as _constants from './_constants';\r\nexport {_constants};\r\n\r\n// input, output ports\r\n\r\nimport * as _Output from './output';\r\nexport {_Output};\r\n\r\nexport * from './_parameterTypes';\r\n","import { checkCommTypes } from './_check_args';\r\n\r\n/**\r\n * ================================================================================================\r\n * list functions that obtain and return information from an input list. Does not modify input list.\r\n */\r\n\r\nexport enum _EIndexOfMethod {\r\n    SEARCH_ALL = 'search_all',\r\n    SEARCH_FIRST = 'search_first'\r\n}\r\n/**\r\n * Searches for a value in a list and returns the index position if found.\r\n * Items must match both the value and type of specified value.\r\n *\r\n * Returns -1 if no values in list match specified value.\r\n *\r\n * @param list List.\r\n * @param value Value to search for.\r\n * @param method Enum, specifies whether to search all occurances or only the first.\r\n * @returns Index position or list of index positions containing specified value.\r\n * @example positions = list.IndexOf(list,2,true)\r\n * @example_info where list = [6,2,2,7]\r\n * Expected value of positions is [1,2].\r\n */\r\nexport function IndexOf(list: any[], value: any, method: _EIndexOfMethod): number|number[] {\r\n    // --- Error Check ---\r\n    const fn_name = 'list.IndexOf';\r\n    checkCommTypes(fn_name, 'list', list, ['isList']);\r\n    checkCommTypes(fn_name, 'value', value, ['isAny']);\r\n    // --- Error Check ---\r\n    const positions = [];\r\n    for (let i = 0 ; i < list.length; i++) {\r\n        if (list[i] === value) {\r\n            positions.push(i);\r\n            if (method === _EIndexOfMethod.SEARCH_FIRST) {\r\n                return i;\r\n            }\r\n        }\r\n    }\r\n    if (positions.length > 0) {\r\n        return positions;\r\n    } else {\r\n        return -1;\r\n    }\r\n}\r\n/**\r\n * Searches for a value in an list and returns true if found.\r\n * Items must match both the value and type of specified value.\r\n *\r\n * Returns false if no values in list match specified value.\r\n *\r\n * @param list List.\r\n * @param value Value to search for.\r\n * @returns Returns true if value can be found in list, false if value cannot be found.\r\n * @example exists = list.Includes(list,2)\r\n * @example_info where list = [6,2,2,7]\r\n * Expected value of exists is true.\r\n */\r\nexport function Includes(list: any[], value: any): boolean {\r\n    // --- Error Check ---\r\n    const fn_name = 'list.Includes';\r\n    checkCommTypes(fn_name, 'list', list, ['isList']);\r\n    checkCommTypes(fn_name, 'value', value, ['isAny']);\r\n    // --- Error Check ---\r\n    for (let i = list.length - 1; i >= 0; i--) {\r\n        if (list[i] === value) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\n/**\r\n * ================================================================================================\r\n * list functions that return a new list. The input list is not modified.\r\n */\r\n/**\r\n * Creates a new list by creating a new list by making a copy of an existing list.\r\n *\r\n * @param list List to copy.\r\n * @returns New duplicated list.\r\n * @example copy1 = list.Copy(list)\r\n * @example_info where list = [1,2,3]\r\n * Expected value of copy is [1,2,3].\r\n */\r\nexport function Copy(list: any[]): any[] {\r\n    // --- Error Check ---\r\n    checkCommTypes('list.Copy', 'list', list, ['isList']);\r\n    // --- Error Check ---\r\n    return list.slice();\r\n}\r\n/**\r\n * Creates a new list by combining two lists into a new list.\r\n *\r\n * @param list1 First list.\r\n * @param list2 Second list.\r\n * @returns Combined list (list1 first, followed by list2).\r\n * @example newlist = list.Concat(list1,list2)\r\n * @example_info where list1 = [1,2,3]\r\n * and list2 = [9,0]\r\n * Expected value of newlist is [1,2,3,9,0].\r\n */\r\nexport function Concat(list1: any[], list2: any[]): any[] {\r\n    // --- Error Check ---\r\n    const fn_name = 'list.Concat';\r\n    checkCommTypes(fn_name, 'list1', list1, ['isList']);\r\n    checkCommTypes(fn_name, 'list2', list2, ['isList']);\r\n    // --- Error Check ---\r\n    return list1.concat(list2);\r\n}\r\n/**\r\n * Creates a new list by flattening an n-dimensional list into a one-dimensional list.\r\n *\r\n * @param list List to flatten.\r\n * @returns Flattened list.\r\n * @example flatten = list.Flatten(list)\r\n * @example_info where list = [1,2,3,[4,5]]\r\n * Expected value of flatten is [1,2,3,4,5].\r\n */\r\nexport function Flatten(list: any[]): any[] {\r\n    // --- Error Check ---\r\n    checkCommTypes('list.Flatten', 'list', list, ['isList']);\r\n    // --- Error Check ---\r\n    return _flattenDeep(list);\r\n}\r\nfunction _flattenDeep(list: any[]): any[] {\r\n    return list.reduce((acc, val) => Array.isArray(val) ? acc.concat(_flattenDeep(val)) : acc.concat(val), []);\r\n}\r\n/**\r\n * Creates a new list by copying a portion of an existing list, from start index to end index (end not included).\r\n *\r\n * @param list List to slice.\r\n * @param start Zero-based index at which to begin slicing.\r\n *      A negative index can be used, indicating an offset from the end of the sequence.\r\n *      If start is undefined, slice begins from index 0.\r\n * @param end Zero-based index before which to end slicing. Slice extracts up to but not including end.\r\n *      A negative index can be used, indicating an offset from the end of the sequence.\r\n *      If end is undefined, slice extracts through the end of the sequence.\r\n * @returns A new list.\r\n * @example result = list.Slice(list,1,3)\r\n * @example_info where list = [1,2,3,4,5]\r\n * Expected value of result is [2,3].\r\n */\r\nexport function Slice(list: any[], start: number, end: number): any[] {\r\n    // --- Error Check ---\r\n    const fn_name = 'list.Slice';\r\n    checkCommTypes(fn_name, 'list', list, ['isList']);\r\n    checkCommTypes(fn_name, 'start', start, ['isInt']);\r\n    checkCommTypes(fn_name, 'end', end, ['isInt']);\r\n    // --- Error Check ---\r\n    return list.slice(start, end);\r\n}\r\n/**\r\n * ================================================================================================\r\n * list functions that modify the original input list. Return void.\r\n */\r\nexport enum _EAppendMethod {\r\n    TO_START = 'to_start',\r\n    TO_END = 'to_end'\r\n}\r\n/**\r\n * Adds one value to the end of an list.\r\n * If value is an list, the entire list will be appended as one value.\r\n *\r\n * @param list List to add to.\r\n * @param value Item to add.\r\n * @param method Enum, append to start or end.\r\n * @example append = list.Append(list, 4, 'at_end')\r\n * @example_info where list = [1,2,3]\r\n * Expected value of list is [1,2,3,4].\r\n */\r\nexport function Append(list: any[], value: any, method: _EAppendMethod): void {\r\n    // --- Error Check ---\r\n    const fn_name = 'list.Append';\r\n    checkCommTypes(fn_name, 'list', list, ['isList']);\r\n    checkCommTypes(fn_name, 'value', value, ['isAny']);\r\n    // --- Error Check ---\r\n    if (method === _EAppendMethod.TO_END) {\r\n        list.push(value);\r\n    } else {\r\n        list.unshift(value);\r\n    }\r\n}\r\n/**\r\n * Removes the value at the specified index from a list.\r\n *\r\n * @param list List to remove value from.\r\n * @param index Zero-based index number of value to remove.\r\n * @example remove = list.RemoveIndex(list,1)\r\n * @example_info where list = [1,2,3]\r\n * Expected value of remove is [1,3].\r\n */\r\nexport function RemoveIndex(list: any[], index: number): void {\r\n    // --- Error Check ---\r\n    const fn_name = 'list.RemoveIndex';\r\n    checkCommTypes(fn_name, 'list', list, ['isList']);\r\n    checkCommTypes(fn_name, 'index', index, ['isInt']);\r\n    // --- Error Check ---\r\n    list.splice(index, 1);\r\n}\r\nexport enum _ERemoveValueMethod {\r\n    REMOVE_ALL = 'remove_all',\r\n    REMOVE_FIRST = 'remove_first'\r\n}\r\n/**\r\n * Removes values that matches specified value from a list.\r\n * Items must match both the value and type of specified value.\r\n *\r\n * Returns original list if no values in list match specified value.\r\n *\r\n * @param list List to remove value from.\r\n * @param value Value to search for.\r\n * @param method Enum; specifies whether to remove all occurances or only the first.\r\n * @example remove = list.RemoveValue(list,2,'remove_all')\r\n * @example_info where list = [1,2,2,3]\r\n * Expected value of remove is [1,3].\r\n */\r\nexport function RemoveValue(list: any[], value: any, method: _ERemoveValueMethod): void {\r\n    // --- Error Check ---\r\n    const fn_name = 'list.RemoveValue';\r\n    checkCommTypes(fn_name, 'list', list, ['isList']);\r\n    checkCommTypes(fn_name, 'value', value, ['isAny']);\r\n    // --- Error Check ---\r\n    for (let i = list.length - 1; i >= 0; i--) {\r\n        if (list[i] === value) {\r\n            list.splice(i, 1);\r\n            if (method === _ERemoveValueMethod.REMOVE_FIRST) {break; }\r\n        }\r\n    }\r\n}\r\nexport enum _EReplaceValueMethod {\r\n    REPLACE_ALL = 'replace_all',\r\n    REPLACE_FIRST = 'replace_first'\r\n}\r\n/**\r\n * Replaces values that matches specified value from an list with a new value\r\n * Items must match both the value and type of specified value\r\n *\r\n * Returns original list if no value in list matches specified value.\r\n *\r\n * @param list List to remove value from.\r\n * @param value1 Value to search for.\r\n * @param value2 Value to replace existing value with.\r\n * @param method Enum; specifies whether to replace all occurances or only the first.\r\n * @example replace = list.ReplaceValue(list,2,9,'replace_all')\r\n * @example_info where list = [1,2,2,3]\r\n * Expected value of replace is [1,9,9,3].\r\n */\r\nexport function ReplaceValue(list: any[], value1: any, value2: any, method: _EReplaceValueMethod): void {\r\n    // --- Error Check ---\r\n    const fn_name = 'list.ReplaceValue';\r\n    checkCommTypes(fn_name, 'list', list, ['isList']);\r\n    checkCommTypes(fn_name, 'value1', value1, ['isAny']);\r\n    checkCommTypes(fn_name, 'value2', value2, ['isAny']);\r\n    // --- Error Check ---\r\n    for (let i = 0 ; i < list.length ; i++) {\r\n        if (list[i] === value1) {\r\n            list[i] = value2;\r\n            if (method === _EReplaceValueMethod.REPLACE_FIRST) {break; }\r\n        }\r\n    }\r\n}\r\n/**\r\n * Reverses the order of values in a list and returns a new list.\r\n *\r\n * @param list List to reverse.\r\n * @returns New reversed list.\r\n * @example result = list.Reverse(list1)\r\n * @example_info where list1 = [1,2,3]\r\n * Expected value of result is [3,2,1].\r\n */\r\nexport function Reverse(list: any[]): void {\r\n    // --- Error Check ---\r\n    checkCommTypes('list.Reverse', 'list', list, ['isList']);\r\n    // --- Error Check ---\r\n    list.reverse();\r\n}\r\nexport enum _ESortMethod {\r\n    'ALPHA' = 'alpha_descending',\r\n    'REV_ALPHA' = 'alpha_ascending',\r\n    'NUM' = 'numeric_descending',\r\n    'REV_NUM' = 'numeric_ascending',\r\n    'SHIFT' = 'shift_1',\r\n    'REV_SHIFT' = 'reverse_shift_1',\r\n    'RANDOM' = 'random'\r\n}\r\n/**\r\n * Sorts an list of values.\r\n *\r\n * For alphabetical sort, values are sorted according to string Unicode code points\r\n * (character by character, numbers before upper case alphabets, upper case alphabets before lower case alphabets)\r\n *\r\n * @param list List to sort.\r\n * @param method Enum; specifies the sort method to use.\r\n * @example sort = list.Sort(list, 'alpha')\r\n * @example_info where list = [\"1\",\"2\",\"10\",\"Orange\",\"apple\"]\r\n * Expected value of list is [\"1\",\"10\",\"2\",\"Orange\",\"apple\"].\r\n * @example sort = list.Sort(list, 'numeric')\r\n * @example_info where list = [56,6,48]\r\n * Expected value of list is [6,48,56].\r\n */\r\nexport function Sort(list: any[], method: _ESortMethod): void {\r\n    // --- Error Check ---\r\n    checkCommTypes('list.Sort', 'list', list, ['isList']);\r\n    // --- Error Check ---\r\n    switch (method) {\r\n        case _ESortMethod.ALPHA:\r\n            list.sort();\r\n            break;\r\n        case _ESortMethod.REV_ALPHA:\r\n            list.sort().reverse();\r\n            break;\r\n        case _ESortMethod.NUM:\r\n            list.sort((a, b) => a - b);\r\n            break;\r\n        case _ESortMethod.REV_NUM:\r\n            list.sort((a, b) => a - b).reverse();\r\n            break;\r\n        case _ESortMethod.SHIFT:\r\n            const first: any = list.shift();\r\n            list.push(first);\r\n            break;\r\n        case _ESortMethod.REV_SHIFT:\r\n            const last: any = list.pop();\r\n            list.unshift(last);\r\n            break;\r\n        case _ESortMethod.RANDOM:\r\n            list.sort(() => .5 - Math.random());\r\n            break;\r\n        default:\r\n            throw new Error('list.Sort: Sort method not recognised.');\r\n            break;\r\n    }\r\n}\r\n/**\r\n * Adds and/or removes values to/from a list.\r\n *\r\n * If no values_to_add are specified, then values are only removed.\r\n * If num_to_remove is 0, then values are only added.\r\n *\r\n * @param list List to splice.\r\n * @param index Zero-based index at which to add/remove values. (Items are added/removed after specified index)\r\n * @param num_to_remove Number of values to remove.\r\n * @param values_to_add List of values to add.\r\n * @example result = list.Splice(list1, 1, 3, [2.2, 3.3])\r\n * @example_info where list1 = [10, 20, 30, 40, 50]\r\n * Expected value of result is [10, 2.2, 3.2, 50]. New values were added where the values were removed.\r\n */\r\nexport function Splice(list: any[], index: number, num_to_remove: number, values_to_add: any[]): void {\r\n    // --- Error Check ---\r\n    const fn_name = 'list.Splice';\r\n    checkCommTypes(fn_name, 'list', list, ['isList']);\r\n    checkCommTypes(fn_name, 'index', index, ['isInt']);\r\n    checkCommTypes(fn_name, 'num_to_remove', num_to_remove, ['isInt']);\r\n    checkCommTypes(fn_name, 'values_to_add', values_to_add, ['isList']);\r\n    // --- Error Check ---\r\n\r\n    // const list2 = list.slice();\r\n    // list2.splice(index, num_to_remove, ...values_to_add);\r\n    // return list2;\r\n    list.splice(index, num_to_remove, ...values_to_add);\r\n}\r\n","import { GIModel } from '@libs/geo-info/GIModel';\r\nimport { EAttribNames, TId, EEntType, Txyz, TEntTypeIdx } from '@libs/geo-info/common';\r\nimport { idsBreak, isPoint, isPline, isPgon, isDim0, isDim2, isColl, isPosi,\r\n    isObj, isEdge, idsMake, idIndicies, getArrDepth } from '@libs/geo-info/id';\r\nimport { __merge__ } from './_model';\r\nimport { vecDiv, vecMult, interpByNum, interpByLen, vecAdd } from '@libs/geom/vectors';\r\nimport { _model } from '@modules';\r\nimport { checkCommTypes, checkIDs } from './_check_args';\r\nimport { Arr } from '@libs/arr/arr';\r\n\r\n// ================================================================================================\r\nfunction _position(__model__: GIModel, coords: Txyz|Txyz[]|Txyz[][]): TEntTypeIdx|TEntTypeIdx[]|TEntTypeIdx[][] {\r\n    const depth: number = getArrDepth(coords);\r\n    if (depth === 1) {\r\n        const coord1: Txyz = coords as Txyz;\r\n        const posi_i: number = __model__.geom.add.addPosition();\r\n        __model__.attribs.add.setAttribValue(EEntType.POSI, posi_i, EAttribNames.COORDS, coord1);\r\n        return [EEntType.POSI, posi_i] as TEntTypeIdx;\r\n    } else if (depth === 2) {\r\n        const coords2: Txyz[] = coords as Txyz[];\r\n        return coords2.map(coord => _position(__model__, coord)) as TEntTypeIdx[];\r\n    } else {\r\n        const coords3: Txyz[][] = coords as Txyz[][];\r\n        return coords3.map(coord2 => _position(__model__, coord2)) as TEntTypeIdx[][];\r\n    }\r\n}\r\n/**\r\n * Adds a new position to the model.\r\n * @param __model__\r\n * @param coords XYZ coordinates as a list of three numbers.\r\n * @returns New position if successful, null if unsuccessful or on error.\r\n * @example position1 = make.Position([1,2,3])\r\n * @example_info Creates a position with coordinates x=1, y=2, z=3.\r\n */\r\nexport function Position(__model__: GIModel, coords: Txyz|Txyz[]|Txyz[][]): TId|TId[]|TId[][] {\r\n    // --- Error Check ---\r\n    checkCommTypes('make.Position', 'coords', coords, ['isCoord', 'isCoordList', 'isCoordList_List']);\r\n    // TODO allow to Txyz[][]\r\n    // --- Error Check ---\r\n    const new_ents_arr: TEntTypeIdx|TEntTypeIdx[]|TEntTypeIdx[][] = _position(__model__, coords);\r\n    return idsMake(new_ents_arr);\r\n}\r\n// ================================================================================================\r\nfunction _point(__model__: GIModel, ents_arr: TEntTypeIdx|TEntTypeIdx[]|TEntTypeIdx[][]): TEntTypeIdx|TEntTypeIdx[] {\r\n    const depth: number = getArrDepth(ents_arr);\r\n    if (depth === 1) {\r\n        const index: number = ents_arr[1] as number;\r\n        const point_i: number = __model__.geom.add.addPoint(index);\r\n        return [EEntType.POINT, point_i] as TEntTypeIdx;\r\n    } else { // depth === 2 or 3\r\n        return (ents_arr as TEntTypeIdx[]).map(_ents_arr => _point(__model__, _ents_arr)) as TEntTypeIdx[];\r\n    }\r\n}\r\n/**\r\n * Adds a new point to the model. If a list of positions is provided as the input, then a list of points is generated.\r\n * @param __model__\r\n * @param positions Position of point.\r\n * @returns New point if successful, null if unsuccessful or on error.\r\n * @example_info Creates a point at position1.\r\n * @example point1 = make.Point(position1)\r\n * @example_info Creates a point at position1.\r\n */\r\nexport function Point(__model__: GIModel, positions: TId|TId[]): TId|TId[] {\r\n    // --- Error Check ---\r\n    const ents_arr = checkIDs('make.Point', 'positions', positions,\r\n        ['isID', 'isIDList', 'isIDList_list'], ['POSI'])  as TEntTypeIdx|TEntTypeIdx[];\r\n    // --- Error Check ---\r\n    const new_ents_arr: TEntTypeIdx|TEntTypeIdx[] =  _point(__model__, ents_arr);\r\n    return idsMake(new_ents_arr) as TId|TId[];\r\n}\r\n// ================================================================================================\r\n// Enums for Polyline()\r\nexport enum _EClose {\r\n    CLOSE = 'close',\r\n    OPEN = 'open'\r\n}\r\nfunction _polyline(__model__: GIModel, ents_arr: TEntTypeIdx[]|TEntTypeIdx[][], close: _EClose): TEntTypeIdx|TEntTypeIdx[] {\r\n    if (getArrDepth(ents_arr) === 2) {\r\n        const bool_close: boolean = (close === _EClose.CLOSE);\r\n        const posis_i: number[] = idIndicies(ents_arr as TEntTypeIdx[]);\r\n        const pline_i: number = __model__.geom.add.addPline(posis_i, bool_close);\r\n        return [EEntType.PLINE, pline_i] as TEntTypeIdx;\r\n    } else {\r\n        return (ents_arr as TEntTypeIdx[][]).map(ent_arr => _polyline(__model__, ent_arr, close)) as TEntTypeIdx[];\r\n    }\r\n}\r\n/**\r\n * Adds a new polyline to the model.\r\n * @param __model__\r\n * @param positions List of positions.\r\n * @param close Enum of 'close' or 'open'.\r\n * @returns New polyline if successful, null if unsuccessful or on error.\r\n * @example polyline1 = make.Polyline([position1,position2,position3], close)\r\n * @example_info Creates a closed polyline with vertices position1, position2, position3 in sequence.\r\n * @example_link polyline_example.mob&node=1\r\n */\r\nexport function Polyline(__model__: GIModel, positions: TId[]|TId[][], close: _EClose): TId|TId[] {\r\n    // --- Error Check ---\r\n    const ents_arr = checkIDs('make.Polyline', 'positions', positions,\r\n        ['isIDList', 'isIDList_list'], ['POSI']) as TEntTypeIdx[]|TEntTypeIdx[][]; // TODO\r\n    // --- Error Check ---\r\n    const new_ents_arr: TEntTypeIdx|TEntTypeIdx[] = _polyline(__model__, ents_arr, close);\r\n    return idsMake(new_ents_arr) as TId|TId[];\r\n}\r\n// ================================================================================================\r\nfunction _polygon(__model__: GIModel, ents_arr: TEntTypeIdx[]|TEntTypeIdx[][]): TEntTypeIdx|TEntTypeIdx[] {\r\n    if (getArrDepth(ents_arr) === 2) {\r\n        const posis_i: number[] = idIndicies(ents_arr as TEntTypeIdx[]);\r\n        const pgon_i: number = __model__.geom.add.addPgon(posis_i);\r\n        return [EEntType.PGON, pgon_i] as TEntTypeIdx;\r\n    } else {\r\n        return (ents_arr as TEntTypeIdx[][]).map(_ents_arr => _polygon(__model__, _ents_arr)) as TEntTypeIdx[];\r\n    }\r\n}\r\n/**\r\n * Adds a new polygon to the model.\r\n * @param __model__\r\n * @param positions List of positions.\r\n * @returns New polygon if successful, null if unsuccessful or on error.\r\n * @example polygon1 = make.Polygon([position1,position2,position3])\r\n * @example_info Creates a polygon with vertices position1, position2, position3 in sequence.\r\n */\r\nexport function Polygon(__model__: GIModel, positions: TId[]|TId[][]): TId|TId[] {\r\n    // --- Error Check ---\r\n    const ents_arr = checkIDs('make.Polygon', 'positions', positions,\r\n        ['isIDList', 'isIDList_list'], ['POSI']) as TEntTypeIdx[]|TEntTypeIdx[][];\r\n    // --- Error Check ---\r\n    const new_ents_arr: TEntTypeIdx|TEntTypeIdx[] = _polygon(__model__, ents_arr);\r\n    return idsMake(new_ents_arr) as TId|TId[];\r\n}\r\n// ================================================================================================\r\nfunction _polygonHoles(__model__: GIModel, ents_arr: TEntTypeIdx[],\r\n        holes_ents_arr: TEntTypeIdx[]|TEntTypeIdx[][]): TEntTypeIdx {\r\n    if (getArrDepth(holes_ents_arr) === 2) {\r\n        holes_ents_arr = [holes_ents_arr] as TEntTypeIdx[][];\r\n    }\r\n    const posis_i: number[] = ents_arr.map(ent_arr => ent_arr[1]);\r\n    const holes_posis_i: number[][] = [];\r\n    for (const hole_ents_arr of holes_ents_arr as TEntTypeIdx[][]) {\r\n        holes_posis_i.push( hole_ents_arr.map(ent_arr => ent_arr[1]) );\r\n    }\r\n    const pgon_i: number = __model__.geom.add.addPgonWithHole(posis_i, holes_posis_i);\r\n    return [EEntType.PGON, pgon_i];\r\n}\r\n/**\r\n * Adds a single new polygon to the model with one or more holes.\r\n * @param __model__\r\n * @param positions List of positions.\r\n * @param hole_positions List of positions for the holes. For multiple holes, a list of list can provided.\r\n * @returns New polygon if successful, null if unsuccessful or on error.\r\n * @example polygon1 = make.Polygon([position1,position2,position3], [position4,position5,position6])\r\n * @example_info Creates a polygon with  a hole, with vertices in sequence from position1 to position6.\r\n */\r\nfunction _PolygonHoles(__model__: GIModel, positions: TId[], hole_positions: TId[]|TId[][]): TId {\r\n    // --- Error Check ---\r\n    const pgon_ents_arr = checkIDs('make.Polygon', 'positions', positions, ['isIDList'], ['POSI']) as TEntTypeIdx[];\r\n    const holes_ents_arr = checkIDs('make.Polygon', 'positions', hole_positions,\r\n        ['isIDList', 'isIDList_list'], ['POSI']) as TEntTypeIdx[]|TEntTypeIdx[][];\r\n    // --- Error Check ---\r\n    const new_ent_arr: TEntTypeIdx = _polygonHoles(__model__, pgon_ents_arr, holes_ents_arr);\r\n    console.log(__model__);\r\n    return idsMake(new_ent_arr) as TId;\r\n}\r\n// ================================================================================================\r\nexport function _collection(__model__: GIModel, parent_index: number, ents_arr: TEntTypeIdx|TEntTypeIdx[]): TEntTypeIdx {\r\n    if (getArrDepth(ents_arr) === 1) {\r\n        ents_arr = [ents_arr] as TEntTypeIdx[];\r\n    }\r\n    const points: number[] = [];\r\n    const plines: number[] = [];\r\n    const pgons: number[] = [];\r\n    for (const ent_arr of ents_arr) {\r\n        if (isPoint(ent_arr[0])) { points.push(ent_arr[1]); }\r\n        if (isPline(ent_arr[0])) { plines.push(ent_arr[1]); }\r\n        if (isPgon(ent_arr[0])) { pgons.push(ent_arr[1]); }\r\n    }\r\n    const coll_i: number = __model__.geom.add.addColl(parent_index, points, plines, pgons);\r\n    return [EEntType.COLL, coll_i];\r\n}\r\n/**\r\n * Adds a new collection to the model.\r\n * @param __model__\r\n * @param parent_coll Collection\r\n * @param geometry List of points, polylines, polygons.\r\n * @returns New collection if successful, null if unsuccessful or on error.\r\n * @example collection1 = make.Collection([point1,polyine1,polygon1])\r\n * @example_info Creates a collection containing point1, polyline1, polygon1.\r\n */\r\nexport function Collection(__model__: GIModel, parent_coll: TId, geometry: TId|TId[]): TId {\r\n    // --- Error Check ---\r\n    const fn_name = 'make.Collection';\r\n    let parent_index: number;\r\n    if (parent_coll !== null && parent_coll !== undefined) {\r\n        const parent_ent_arr = checkIDs(fn_name, 'parent_coll', parent_coll, ['isID'], ['COLL']) as TEntTypeIdx;\r\n        parent_index = parent_ent_arr[1];\r\n    } else {\r\n        parent_index = -1;\r\n    }\r\n    const ents_arr = checkIDs(fn_name, 'geometry', geometry,\r\n        ['isID', 'isIDList'], ['POINT', 'PLINE', 'PGON']) as TEntTypeIdx|TEntTypeIdx[];\r\n    // --- Error Check ---\r\n    const new_ent_arr: TEntTypeIdx = _collection(__model__, parent_index, ents_arr);\r\n    return idsMake(new_ent_arr) as TId;\r\n}\r\n// ================================================================================================\r\n// Stuff for Copy()\r\nfunction _copyGeom(__model__: GIModel, ents_arr: TEntTypeIdx|TEntTypeIdx[], copy_attributes: boolean): TEntTypeIdx|TEntTypeIdx[] {\r\n    if (getArrDepth(ents_arr) === 1) {\r\n        const [ent_type, index]: TEntTypeIdx = ents_arr as TEntTypeIdx;\r\n        if (isColl(ent_type)) {\r\n            const coll_i: number = __model__.geom.add.copyColls(index, copy_attributes) as number;\r\n            return [ent_type, coll_i];\r\n        } else if (isObj(ent_type)) {\r\n            const obj_i: number = __model__.geom.add.copyObjs(ent_type, index, copy_attributes) as number;\r\n            return [ent_type, obj_i];\r\n        } else if (isPosi(ent_type)) {\r\n            const posi_i: number = __model__.geom.add.copyPosis(index, copy_attributes) as number;\r\n            return [ent_type, posi_i];\r\n        }\r\n    } else {\r\n        return (ents_arr as TEntTypeIdx[]).map(one_ent => _copyGeom(__model__, one_ent, copy_attributes)) as TEntTypeIdx[];\r\n    }\r\n}\r\nfunction _copyGeomPosis(__model__: GIModel, ents_arr: TEntTypeIdx|TEntTypeIdx[], copy_attributes: boolean): TEntTypeIdx[] {\r\n    if (getArrDepth(ents_arr) === 1) {\r\n        ents_arr = [ents_arr] as TEntTypeIdx[];\r\n    }\r\n    // create the new positions\r\n    const old_to_new_posis_i_map: Map<number, number> = new Map(); // count number of posis\r\n    for (const ent_arr of ents_arr) {\r\n        const [ent_type, index]: TEntTypeIdx = ent_arr as TEntTypeIdx;\r\n        if (!isPosi(ent_type)) { // obj or coll\r\n            const old_posis_i: number[] = __model__.geom.query.navAnyToPosi(ent_type, index);\r\n            const ent_new_posis_i: number[] = [];\r\n            for (const old_posi_i of old_posis_i) {\r\n                let new_posi_i: number;\r\n                if (old_to_new_posis_i_map.has(old_posi_i)) {\r\n                    new_posi_i = old_to_new_posis_i_map.get(old_posi_i);\r\n                } else {\r\n                    new_posi_i = __model__.geom.add.copyPosis(old_posi_i, copy_attributes) as number;\r\n                    old_to_new_posis_i_map.set(old_posi_i, new_posi_i);\r\n                }\r\n                ent_new_posis_i.push(new_posi_i);\r\n            }\r\n            __model__.geom.add.replacePosis(ent_type, index, ent_new_posis_i);\r\n        }\r\n    }\r\n    // return all the new points\r\n    const all_new_posis_i: number[] = Array.from(old_to_new_posis_i_map.values());\r\n    return all_new_posis_i.map( posi_i => [EEntType.POSI, posi_i] ) as TEntTypeIdx[];\r\n}\r\nexport enum _ECopyAttribues {\r\n    COPY_ATTRIBUTES = 'copy_attributes',\r\n    NO_ATTRIBUTES = 'no_attributes'\r\n}\r\n/**\r\n * Adds a new copy of specified entities to the model.\r\n * @param __model__\r\n * @param entities Position, point, polyline, polygon, collection to be copied.\r\n * @param copy_positions Enum to create a copy of the existing positions or to reuse the existing positions.\r\n * @param copy_attributes Enum to copy attributes or to have no attributes copied.\r\n * @returns New copy if successful, null if unsuccessful or on error.\r\n * @example copy1 = make.Copy([position1,polyine1,polygon1], copy_positions, copy_attributes)\r\n * @example_info Creates a list containing a copy of the entities in sequence of input.\r\n */\r\nexport function Copy(__model__: GIModel, entities: TId|TId[], copy_attributes: _ECopyAttribues): TId|TId[] {\r\n    // --- Error Check ---\r\n    const ents_arr = checkIDs('make.Copy', 'entities', entities,\r\n        ['isID', 'isIDList'], ['POSI', 'POINT', 'PLINE', 'PGON', 'COLL']) as TEntTypeIdx|TEntTypeIdx[];\r\n    // --- Error Check ---\r\n    const bool_copy_attribs: boolean = (copy_attributes === _ECopyAttribues.COPY_ATTRIBUTES);\r\n    // copy the list of entities\r\n    const new_ents_arr: TEntTypeIdx|TEntTypeIdx[] = _copyGeom(__model__, ents_arr, bool_copy_attribs);\r\n    // copy the positions that belong to the list of entities\r\n    _copyGeomPosis(__model__, ents_arr, bool_copy_attribs);\r\n    // return only the new entities\r\n    return idsMake(new_ents_arr) as TId|TId[];\r\n}\r\n// ================================================================================================\r\n// Hole modelling operation\r\nfunction _hole(__model__: GIModel, face_ent_arr: TEntTypeIdx, holes_ents_arr: TEntTypeIdx[]|TEntTypeIdx[][]): TEntTypeIdx[] {\r\n    if (getArrDepth(holes_ents_arr) === 2) {\r\n        holes_ents_arr = [holes_ents_arr] as TEntTypeIdx[][];\r\n    }\r\n    // convert the holes to lists of posis_i\r\n    const holes_posis_i: number[][] = [];\r\n    for (const hole_ents_arr of holes_ents_arr as TEntTypeIdx[][]) {\r\n        holes_posis_i.push( hole_ents_arr.map( ent_arr => ent_arr[1] ) );\r\n    }\r\n    // create the hole\r\n    const wires_i: number[] = __model__.geom.add.addFaceHoles(face_ent_arr[1], holes_posis_i);\r\n    return wires_i.map(wire_i => [EEntType.WIRE, wire_i]) as TEntTypeIdx[];\r\n}\r\n/**\r\n * Makes one or more holes in a polygon.\r\n * @param __model__\r\n * @param face Polygons or faces.\r\n * @param positions A list of positions defining the wires of the holes.\r\n * @returns Wires for the new holes.\r\n */\r\nexport function Hole(__model__: GIModel, face: TId, positions: TId[]|TId[][]): TId[] {\r\n    // --- Error Check ---\r\n    const face_ent_arr = checkIDs('make.Hole', 'face', face, ['isID'], ['FACE', 'PGON']) as TEntTypeIdx;\r\n    const holes_ents_arr = checkIDs('make.Hole', 'positions', positions,\r\n        ['isIDList', 'isIDList_list'], ['POSI']) as TEntTypeIdx[]|TEntTypeIdx[][];\r\n    // --- Error Check ---\r\n    const new_ents_arr: TEntTypeIdx[] = _hole(__model__, face_ent_arr, holes_ents_arr);\r\n    return idsMake(new_ents_arr) as TId[];\r\n}\r\n// ================================================================================================\r\n\r\n\r\n// Loft modelling operation\r\nexport enum _ELoftMethod {\r\n    OPEN =  'open',\r\n    CLOSED  =  'closed'\r\n}\r\nfunction _loft(__model__: GIModel, ents_arr: TEntTypeIdx[], method: _ELoftMethod): TEntTypeIdx[] {\r\n    const edges_arrs_i: number[][] = [];\r\n    let num_edges = 0;\r\n    for (const ents of ents_arr) {\r\n        const [ent_type, index]: TEntTypeIdx = ents as TEntTypeIdx;\r\n        const edges_i: number[] = __model__.geom.query.navAnyToEdge(ent_type, index);\r\n        if (edges_arrs_i.length === 0) { num_edges = edges_i.length; }\r\n        if (edges_i.length !== num_edges) {\r\n            throw new Error('make.Loft: Number of edges is not consistent.');\r\n        }\r\n        edges_arrs_i.push(edges_i);\r\n    }\r\n    if (method === _ELoftMethod.CLOSED) {\r\n        edges_arrs_i.push(edges_arrs_i[0]);\r\n    }\r\n    const pgons_i: number[] = [];\r\n    for (let i = 0; i < edges_arrs_i.length - 1; i++) {\r\n        const edges_i_a: number[] = edges_arrs_i[i];\r\n        const edges_i_b: number[] = edges_arrs_i[i + 1];\r\n        for (let j = 0; j < num_edges; j++) {\r\n            const verts_i_a: number[] = __model__.geom.query.navAnyToPosi(EEntType.EDGE, edges_i_a[j]);\r\n            const verts_i_b: number[] = __model__.geom.query.navAnyToPosi(EEntType.EDGE, edges_i_b[j]);\r\n            const pgon_i: number = __model__.geom.add.addPgon([verts_i_a[0], verts_i_a[1], verts_i_b[1], verts_i_b[0]]);\r\n            pgons_i.push(pgon_i);\r\n        }\r\n    }\r\n    return pgons_i.map( pgon_i => [EEntType.PGON, pgon_i]) as TEntTypeIdx[];\r\n}\r\n/**\r\n * Lofts between edges.\r\n * @param __model__\r\n * @param entities Edges (or wires, polylines or polygons with the same number of edges).\r\n * @param method Enum, if 'closed', then close the loft back to the first edge in the input.\r\n * @returns Lofted polygons between edges if successful, null if unsuccessful or on error.\r\n * @example surface1 = make.Loft([polyline1,polyline2,polyline3], closed)\r\n * @example_info Creates a list of polygons lofting between polyline1, polyline2, polyline3, and polyline1.\r\n */\r\nexport function Loft(__model__: GIModel, entities: TId[], method: _ELoftMethod): TId[] {\r\n    // --- Error Check ---\r\n    const ents_arr = checkIDs('make.Loft', 'entities', entities,\r\n        ['isIDList'], ['EDGE', 'WIRE', 'PLINE', 'PGON']) as TEntTypeIdx[];\r\n    // --- Error Check ---\r\n    const new_ents_arr: TEntTypeIdx[] = _loft(__model__, ents_arr, method);\r\n    return idsMake(new_ents_arr) as TId[];\r\n}\r\n// ================================================================================================\r\nfunction _extrude(__model__: GIModel, ents_arr: TEntTypeIdx|TEntTypeIdx[],\r\n        distance: number|Txyz, divisions: number): TEntTypeIdx|TEntTypeIdx[] {\r\n    const extrude_vec: Txyz = (Array.isArray(distance) ? distance : [0, 0, distance]) as Txyz;\r\n    const extrude_vec_div: Txyz = vecDiv(extrude_vec, divisions);\r\n    if (!Array.isArray(ents_arr[0])) {\r\n        const [ent_type, index]: TEntTypeIdx = ents_arr as TEntTypeIdx;\r\n        // check if this is a collection\r\n        if (isColl(ent_type)) {\r\n            const points_i: number[] = __model__.geom.query.navCollToPoint(index);\r\n            const res1 = points_i.map( point_i => _extrude(__model__, [EEntType.POINT, point_i], extrude_vec, divisions));\r\n            const plines_i: number[] = __model__.geom.query.navCollToPline(index);\r\n            const res2 = plines_i.map( pline_i => _extrude(__model__, [EEntType.PLINE, pline_i], extrude_vec, divisions));\r\n            const pgons_i: number[] = __model__.geom.query.navCollToPgon(index);\r\n            const res3 = pgons_i.map( pgon_i => _extrude(__model__, [EEntType.PGON, pgon_i], extrude_vec, divisions));\r\n            return [].concat(...[res1, res2, res3]);\r\n        }\r\n        // check if this is a position, a vertex, or a point -> pline\r\n        if (isDim0(ent_type)) {\r\n            const all_posis_i: number[] = __model__.geom.query.navAnyToPosi(ent_type, index);\r\n            const new_posis_i: number[] = [all_posis_i[0]];\r\n            for (let i = 1; i < divisions + 1; i++) {\r\n                const extrude_vec_mult: Txyz = vecMult(extrude_vec_div, i);\r\n                const new_pline_posi_i: number = __model__.geom.add.copyPosis(all_posis_i[0], false) as number; // Do not copy attribs\r\n                __model__.attribs.add.movePosiCoords(new_pline_posi_i, extrude_vec_mult);\r\n                new_posis_i.push(new_pline_posi_i);\r\n            }\r\n            // loft between the positions and create a single polyline\r\n            const pline_i: number = __model__.geom.add.addPline(new_posis_i);\r\n            return [EEntType.PLINE, pline_i];\r\n        }\r\n        // extrude edges -> polygons\r\n        const new_pgons_i: number[] = [];\r\n        const edges_i: number[] = __model__.geom.query.navAnyToEdge(ent_type, index);\r\n        const strip_posis_map: Map<number, number[]> = new Map();\r\n        for (const edge_i of edges_i) {\r\n            // get exist posis_i\r\n            const exist_posis_i: number[] = __model__.geom.query.navAnyToPosi(EEntType.EDGE, edge_i);\r\n            // create the new posis strip if necessary\r\n            for (const exist_posi_i of exist_posis_i) {\r\n                if (strip_posis_map.get(exist_posi_i) === undefined) {\r\n                    const xyz: Txyz = __model__.attribs.query.getPosiCoords(exist_posi_i);\r\n                    const strip_posis_i: number[] = [exist_posi_i];\r\n                    for (let i = 1; i < divisions + 1; i++) {\r\n                        const strip_posi_i: number = __model__.geom.add.addPosition();\r\n                        const move_xyz = vecMult(extrude_vec_div, i);\r\n                        __model__.attribs.add.setPosiCoords(strip_posi_i, vecAdd(xyz, move_xyz));\r\n                        strip_posis_i.push(strip_posi_i);\r\n                    }\r\n                    strip_posis_map.set(exist_posi_i, strip_posis_i);\r\n                }\r\n            }\r\n            // get the two strips and make polygons\r\n            const strip1_posis_i: number[] = strip_posis_map.get(exist_posis_i[0]);\r\n            const strip2_posis_i: number[] = strip_posis_map.get(exist_posis_i[1]);\r\n            for (let i = 0; i < strip1_posis_i.length - 1; i++) {\r\n                const c1: number = strip1_posis_i[i];\r\n                const c2: number = strip2_posis_i[i];\r\n                const c3: number = strip2_posis_i[i + 1];\r\n                const c4: number = strip1_posis_i[i + 1];\r\n                const pgon_i: number = __model__.geom.add.addPgon([c1, c2, c3, c4]);\r\n                new_pgons_i.push(pgon_i);\r\n            }\r\n        }\r\n        if (isDim2(ent_type)) { // create a top -> polygon\r\n            const old_posis_i: number[] = __model__.geom.query.navAnyToPosi(ent_type, index);\r\n            const new_posis_i: number[] = old_posis_i.map(old_posi_i => strip_posis_map.get(old_posi_i)[divisions]);\r\n            const pgon_i: number = __model__.geom.add.addPgon( new_posis_i );\r\n            new_pgons_i.push(pgon_i);\r\n        }\r\n        return new_pgons_i.map(pgon_i => [EEntType.PGON, pgon_i] as TEntTypeIdx);\r\n    } else {\r\n        return [].concat(...(ents_arr as TEntTypeIdx[]).map(_ents_arr => _extrude(__model__, _ents_arr, extrude_vec, divisions)));\r\n    }\r\n}\r\n/**\r\n * Extrudes geometry by distance (in default direction = z-axis) or by vector.\r\n * - Extrusion of location produces a line;\r\n * - Extrusion of line produces a polygon;\r\n * - Extrusion of surface produces a list of surfaces.\r\n * @param __model__\r\n * @param entities Vertex, edge, wire, face, position, point, polyline, polygon, collection.\r\n * @param distance Number or vector. If number, assumed to be [0,0,value] (i.e. extrusion distance in z-direction).\r\n * @param divisions Number of divisions to divide extrusion by. Minimum is 1.\r\n * @returns Extrusion of entities if successful, null if unsuccessful or on error.\r\n * @example extrusion1 = make.Extrude(point1, 10, 2)\r\n * @example_info Creates a list of 2 lines of total length 10 (length 5 each) in the z-direction.\r\n * If point1 = [0,0,0], extrusion1[0] is a line between [0,0,0] and [0,0,5]; extrusion1[1] is a line between [0,0,5] and [0,0,10].\r\n * @example extrusion2 = make.Extrude(polygon1, [0,5,0], 1)\r\n * @example_info Extrudes polygon1 by 5 in the y-direction, creating a list of surfaces.\r\n */\r\nexport function Extrude(__model__: GIModel, entities: TId|TId[], distance: number|Txyz, divisions: number): TId|TId[] {\r\n    // --- Error Check ---\r\n    const fn_name = 'make.Extrude';\r\n    const ents_arr =  checkIDs(fn_name, 'entities', entities,\r\n        ['isID', 'isIDList'], ['VERT', 'EDGE', 'WIRE', 'FACE', 'POSI', 'POINT', 'PLINE', 'PGON', 'COLL']) as TEntTypeIdx|TEntTypeIdx[];\r\n    checkCommTypes(fn_name, 'distance', distance, ['isNumber', 'isVector']);\r\n    checkCommTypes(fn_name, 'divisions', divisions, ['isInt']);\r\n    // --- Error Check ---\r\n    const new_ents_arr: TEntTypeIdx|TEntTypeIdx[] = _extrude(__model__, ents_arr, distance, divisions);\r\n    return idsMake(new_ents_arr) as TId|TId[];\r\n}\r\n// ================================================================================================\r\n/**\r\n * Joins polylines to polylines or polygons to polygons.\r\n * @param __model__\r\n * @param geometry Polylines or polygons.\r\n * @returns New joined polyline or polygon if successful, null if unsuccessful or on error.\r\n * @example joined1 = make.Join([polyline1,polyline2])\r\n * @example_info Creates a new polyline by joining polyline1 and polyline2. Geometries must be of the same type.\r\n */\r\nexport function _Join(__model__: GIModel, geometry: TId[]): TId {\r\n    // --- Error Check ---\r\n    // const ents_arr =  checkIDs('make.Join', 'geometry', geometry, ['isIDList'], ['PLINE', 'PGON']);\r\n    // --- Error Check ---\r\n    throw new Error('Not implemented.'); return null;\r\n}\r\n// ================================================================================================\r\n// Divide edge modelling operation\r\nexport enum _EDivideMethod {\r\n    BY_NUMBER =  'by_number',\r\n    BY_LENGTH  =  'by_length'\r\n}\r\nfunction _divideEdge(__model__: GIModel, edge_i: number, divisor: number, method: _EDivideMethod): number[] {\r\n    const posis_i: number[] = __model__.geom.query.navAnyToPosi(EEntType.EDGE, edge_i);\r\n    const start = __model__.attribs.query.getPosiCoords(posis_i[0]);\r\n    const end = __model__.attribs.query.getPosiCoords(posis_i[1]);\r\n    let new_xyzs: Txyz[];\r\n    if (method === _EDivideMethod.BY_NUMBER) {\r\n        new_xyzs = interpByNum(start, end, divisor - 1);\r\n    } else {\r\n        new_xyzs = interpByLen(start, end, divisor);\r\n    }\r\n    const new_edges_i: number[] = [];\r\n    let old_edge_i: number = edge_i;\r\n    for (const new_xyz of new_xyzs) {\r\n        const posi_i = __model__.geom.add.addPosition();\r\n        __model__.attribs.add.setPosiCoords(posi_i, new_xyz);\r\n        const new_edge_i: number = __model__.geom.add.insertVertIntoEdge(old_edge_i, posi_i);\r\n        new_edges_i.push(old_edge_i);\r\n        old_edge_i = new_edge_i;\r\n    }\r\n    new_edges_i.push(old_edge_i);\r\n    return new_edges_i;\r\n}\r\nfunction _divide(__model__: GIModel, ents_arr: TEntTypeIdx|TEntTypeIdx[], divisor: number, method: _EDivideMethod): TEntTypeIdx[] {\r\n    if (getArrDepth(ents_arr) === 1) {\r\n        const [ent_type, index]: TEntTypeIdx = ents_arr as TEntTypeIdx;\r\n        let exist_edges_i: number[];\r\n        if (!isEdge(ent_type)) {\r\n            exist_edges_i = __model__.geom.query.navAnyToEdge(ent_type, index).slice();\r\n        } else {\r\n            exist_edges_i = [index];\r\n        }\r\n        const all_new_edges_i: number[] = [];\r\n        for (const exist_edge_i of exist_edges_i) {\r\n            const new_edges_i: number[] = _divideEdge(__model__, exist_edge_i, divisor, method);\r\n            all_new_edges_i.push(...new_edges_i);\r\n        }\r\n        return all_new_edges_i.map(one_edge_i => [EEntType.EDGE, one_edge_i] as TEntTypeIdx);\r\n    } else {\r\n        return [].concat(...(ents_arr as TEntTypeIdx[]).map(one_edge => _divide(__model__, one_edge, divisor, method)));\r\n    }\r\n}\r\n/**\r\n * Divides edge, wire or polyline by length or by number of segments.\r\n * If object is not exact multiple of length, length of last segment will be the remainder.\r\n * @param __model__\r\n * @param edge Edge, wire, or polyline(s) to be divided.\r\n * @param divisor Segment length or number of segments.\r\n * @param method Enum to choose which method.\r\n * @returns List of new edges (segments of original edges), null if unsuccessful or on error.\r\n * @example segments1 = make.Divide(edge1, 5, by_number)\r\n * @example_info Creates a list of 5 equal segments from edge1.\r\n * @example segments2 = make.Divide(edge1, 5, by_length)\r\n * @example_info If edge1 has length 13, creates from edge a list of two segments of length 5 and one segment of length 3.\r\n */\r\nexport function Divide(__model__: GIModel, edge: TId|TId[], divisor: number, method: _EDivideMethod): TId[] {\r\n    // --- Error Check ---\r\n    const fn_name = 'make.Divide';\r\n    const ents_arr = checkIDs('make.Copy', 'edge', edge,\r\n        ['isID', 'isIDList'], ['EDGE', 'WIRE', 'PLINE']) as TEntTypeIdx|TEntTypeIdx[];\r\n    checkCommTypes(fn_name, 'divisor', divisor, ['isNumber']);\r\n    // --- Error Check ---\r\n    const new_ents_arr: TEntTypeIdx[] = _divide(__model__, ents_arr, divisor, method);\r\n    return idsMake(new_ents_arr) as TId[];\r\n}\r\n// ================================================================================================\r\n/**\r\n * Unweld vertices so that they do not share positions.\r\n * For the vertices of the specified entities, if they share positions with other entities in the model,\r\n * then those positions will be replaced with new positions.\r\n * This function performs a simple unweld.\r\n * That is, the vertices within the set of specified entities are not unwelded.\r\n * @param __model__\r\n * @param entities Vertex, edge, wire, face, point, polyline, polygon, collection.\r\n * @param method Enum; the method to use for unweld.\r\n * @returns The newly created positions resulting from the unweld.\r\n * @example mod.Unweld(polyline1)\r\n * @example_info Unwelds polyline1 from all ther entities that shares the same position.\r\n */\r\nexport function Unweld(__model__: GIModel, entities: TId|TId[]): TId[] {\r\n    // --- Error Check ---\r\n    let ents_arr = checkIDs('modify.Unweld', 'entities', entities, ['isID', 'isIDList'],\r\n                              ['VERT', 'EDGE', 'WIRE', 'FACE', 'POINT', 'PLINE', 'PGON', 'COLL']);\r\n    // --- Error Check ---\r\n    if (!Array.isArray(ents_arr[0])) {\r\n        ents_arr = [ents_arr] as TEntTypeIdx[];\r\n    }\r\n    // get verts_i\r\n    const all_verts_i: number[] = []; // count number of posis\r\n    for (const ents of ents_arr) {\r\n        const verts_i: number[] = __model__.geom.query.navAnyToVert(ents[0], ents[1]);\r\n        all_verts_i.push(...verts_i);\r\n    }\r\n    const new_posis_i: number [] = __model__.geom.add.unweldVerts(all_verts_i);\r\n    return new_posis_i.map( posi_i => idsMake([EEntType.POSI, posi_i]) ) as TId[];\r\n}\r\n// ================================================================================================\r\n// Explode\r\n\r\n// Pipe\r\n\r\n// Offset\r\n","import { GIModel } from '@libs/geo-info/GIModel';\r\nimport { TId, TPlane, Txyz, EAttribNames, EEntType, TEntTypeIdx} from '@libs/geo-info/common';\r\nimport { idsBreak, getArrDepth } from '@libs/geo-info/id';\r\nimport { vecAdd } from '@libs/geom/vectors';\r\nimport { checkCommTypes, checkIDs} from './_check_args';\r\nimport { rotateMatrix, multMatrix, scaleMatrix, mirrorMatrix, xfromSourceTargetMatrix } from '@libs/geom/matrix';\r\nimport { Matrix4 } from 'three';\r\nimport { xformMatrix } from '@libs/triangulate/threex';\r\nimport { Arr } from '@libs/triangulate/arr';\r\n\r\n// ================================================================================================\r\n/**\r\n * Moves entities by vector.\r\n * @param __model__\r\n * @param entities Position, vertex, edge, wire, face, point, polyline, polygon, collection.\r\n * @param vector List of three numbers.\r\n * @returns void\r\n * @example modify.Move(position1, [1,1,1])\r\n * @example_info Moves position1 by [1,1,1].\r\n */\r\nexport function Move(__model__: GIModel, entities: TId|TId[], vector: Txyz): void {\r\n    // --- Error Check ---\r\n    const fn_name = 'modify.Move';\r\n    let ents_arr = checkIDs(fn_name, 'entities', entities, ['isID', 'isIDList'],\r\n                             ['POSI', 'VERT', 'EDGE', 'WIRE', 'FACE', 'POINT', 'PLINE', 'PGON', 'COLL']);\r\n    checkCommTypes(fn_name, 'vector', vector, ['isVector']);\r\n    // --- Error Check ---\r\n    if (!Array.isArray(ents_arr[0])) {\r\n        ents_arr = [ents_arr] as TEntTypeIdx[];\r\n    }\r\n    const posis_i: number[] = [];\r\n    for (const ents of ents_arr) {\r\n        posis_i.push(...__model__.geom.query.navAnyToPosi(ents[0], ents[1]));\r\n    }\r\n    const unique_posis_i: number[] = Array.from(new Set(posis_i));\r\n    for (const unique_posi_i of unique_posis_i) {\r\n        const old_xyz: Txyz = __model__.attribs.query.getPosiCoords(unique_posi_i);\r\n        const new_xyz: Txyz = vecAdd(old_xyz, vector);\r\n        __model__.attribs.add.setPosiCoords(unique_posi_i, new_xyz);\r\n    }\r\n    return;\r\n}\r\n// ================================================================================================\r\n/**\r\n * Rotates entities on plane by angle.\r\n * @param __model__\r\n * @param entities Vertex, edge, wire, face, plane, position, point, polyline, polygon, collection.\r\n * @param origin A list of three numbers (or a position, point, or vertex).\r\n * @param axis A list of three numbers.\r\n * @param angle Angle (in radians).\r\n * @returns void\r\n * @example modify.Rotate(polyline1, plane1, PI)\r\n * @example_info Rotates polyline1 on plane1 by PI (i.e. 180 degrees).\r\n */\r\nexport function Rotate(__model__: GIModel, entities: TId|TId[], origin: Txyz|TId, axis: Txyz, angle: number): void {\r\n    // --- Error Check ---\r\n    const fn_name = 'modify.Rotate';\r\n    let ents_arr = checkIDs(fn_name, 'entities', entities, ['isID', 'isIDList'],\r\n                            ['POSI', 'VERT', 'EDGE', 'WIRE', 'FACE', 'POINT', 'PLINE', 'PGON', 'COLL']);\r\n    const ori_ents_arr = checkCommTypes(fn_name, 'origin', origin, ['isOrigin']);\r\n    checkCommTypes(fn_name, 'axis', axis, ['isXYZlist']);\r\n    checkCommTypes(fn_name, 'angle', angle, ['isNumber']);\r\n    // --- Error Check ---\r\n    // handle geometry type\r\n    if (!Array.isArray(ents_arr[0])) {\r\n        ents_arr = [ents_arr] as TEntTypeIdx[];\r\n    }\r\n    // handle origin type\r\n    if (!Array.isArray(origin)) {\r\n        const origin_posi = __model__.geom.query.navAnyToPosi(ori_ents_arr[0], ori_ents_arr[1]);\r\n        origin = __model__.attribs.query.getPosiCoords(origin_posi[0]);\r\n    }\r\n    // rotate all positions\r\n    const posis_i: number[] = [];\r\n    for (const ents of ents_arr) {\r\n        posis_i.push(...__model__.geom.query.navAnyToPosi(ents[0], ents[1]));\r\n    }\r\n    const unique_posis_i: number[] = Array.from(new Set(posis_i));\r\n    const matrix: Matrix4 = rotateMatrix(origin, axis, angle);\r\n    for (const unique_posi_i of unique_posis_i) {\r\n        const old_xyz: Txyz = __model__.attribs.query.getPosiCoords(unique_posi_i);\r\n        const new_xyz: Txyz = multMatrix(old_xyz, matrix);\r\n        __model__.attribs.add.setPosiCoords(unique_posi_i, new_xyz);\r\n    }\r\n    return;\r\n}\r\n// ================================================================================================\r\n/**\r\n * Scales entities on plane by factor.\r\n * @param __model__\r\n * @param entities Vertex, edge, wire, face, plane, position, point, polyline, polygon, collection.\r\n * @param origin Position, point, vertex, list of three numbers, plane.\r\n * @param scale Scale factor.\r\n * @returns void\r\n * @example modify.Scale(entities, plane1, 0.5)\r\n * @example_info Scales entities by 0.5 on plane1.\r\n */\r\nexport function Scale(__model__: GIModel, entities: TId|TId[], origin: TId|Txyz|TPlane, scale: number|Txyz): void {\r\n    // --- Error Check ---\r\n    const fn_name = 'modify.Scale';\r\n    let ents_arr = checkIDs(fn_name, 'entities', entities, ['isID', 'isIDList'],\r\n                             ['POSI', 'VERT', 'EDGE', 'WIRE', 'FACE', 'POINT', 'PLINE', 'PGON', 'COLL']);\r\n    const ori_ents_arr = checkCommTypes(fn_name, 'origin', origin, ['isOrigin', 'isPlane']);\r\n    checkCommTypes(fn_name, 'scale', scale, ['isNumber', 'isXYZlist']);\r\n    // --- Error Check ---\r\n    // handle geometry type\r\n    if (!Array.isArray(ents_arr[0])) {\r\n        ents_arr = [ents_arr] as TEntTypeIdx[];\r\n    }\r\n    // handle origin type\r\n    if (!Array.isArray(origin)) {\r\n        const origin_posi = __model__.geom.query.navAnyToPosi(ori_ents_arr[0], ori_ents_arr[1]);\r\n        origin = __model__.attribs.query.getPosiCoords(origin_posi[0]);\r\n    }\r\n    // handle scale type\r\n    if (!Array.isArray(scale)) {\r\n        scale = [scale, scale, scale];\r\n    }\r\n    // scale all positions\r\n    const posis_i: number[] = [];\r\n    for (const ents of ents_arr) {\r\n        posis_i.push(...__model__.geom.query.navAnyToPosi(ents[0], ents[1]));\r\n    }\r\n    const unique_posis_i: number[] = Array.from(new Set(posis_i));\r\n    const matrix: Matrix4 = scaleMatrix(origin, scale);\r\n    for (const unique_posi_i of unique_posis_i) {\r\n        const old_xyz: Txyz = __model__.attribs.query.getPosiCoords(unique_posi_i);\r\n        const new_xyz: Txyz = multMatrix(old_xyz, matrix);\r\n        __model__.attribs.add.setPosiCoords(unique_posi_i, new_xyz);\r\n    }\r\n    return;\r\n}\r\n// ================================================================================================\r\n/**\r\n * Mirrors entities across plane.\r\n * @param __model__\r\n * @param entities Vertex, edge, wire, face, plane, position, point, polyline, polygon, collection.\r\n * @param origin Position, vertex, point, list of three numbers.\r\n * @param direction Vector or a list of three numbers.\r\n * @returns void\r\n * @example modify.Mirror(polygon1, plane1)\r\n * @example_info Mirrors polygon1 across plane1.\r\n */\r\nexport function Mirror(__model__: GIModel, entities: TId|TId[], origin: Txyz|TId, direction: Txyz): void {\r\n    // --- Error Check ---\r\n    const fn_name = 'modify.Mirror';\r\n    let ents_arr = checkIDs(fn_name, 'entities', entities, ['isID', 'isIDList'],\r\n                     ['POSI', 'VERT', 'EDGE', 'WIRE', 'FACE', 'POINT', 'PLINE', 'PGON', 'COLL']);\r\n    const ori_ents_arr = checkCommTypes(fn_name, 'origin', origin, ['isOrigin']);\r\n    checkCommTypes(fn_name, 'direction', direction, ['isVector']);\r\n    // --- Error Check ---\r\n\r\n    // handle geometry type\r\n    if (!Array.isArray(ents_arr[0])) {\r\n        ents_arr = [ents_arr] as TEntTypeIdx[];\r\n    }\r\n    // handle origin type\r\n    if (!Array.isArray(origin)) {\r\n        const [origin_ent_type, origin_index]: TEntTypeIdx = ori_ents_arr as TEntTypeIdx;\r\n        const origin_posi = __model__.geom.query.navAnyToPosi(origin_ent_type, origin_index);\r\n        origin = __model__.attribs.query.getPosiCoords(origin_posi[0]);\r\n    }\r\n    // mirror all positions\r\n    const posis_i: number[] = [];\r\n    for (const ents of ents_arr) {\r\n        const [ent_type, index]: TEntTypeIdx = ents as TEntTypeIdx;\r\n        posis_i.push(...__model__.geom.query.navAnyToPosi(ent_type, index));\r\n    }\r\n    const unique_posis_i: number[] = Array.from(new Set(posis_i));\r\n    const matrix: Matrix4 = mirrorMatrix(origin, direction);\r\n    for (const unique_posi_i of unique_posis_i) {\r\n        const old_xyz: Txyz = __model__.attribs.query.getPosiCoords(unique_posi_i);\r\n        const new_xyz: Txyz = multMatrix(old_xyz, matrix);\r\n        __model__.attribs.add.setPosiCoords(unique_posi_i, new_xyz);\r\n    }\r\n}\r\n// ================================================================================================\r\n/**\r\n * Transforms entities from one construction plane to another.\r\n * @param __model__\r\n * @param entities Vertex, edge, wire, face, position, point, polyline, polygon, collection.\r\n * @param from Plane defining target construction plane.\r\n * @param to Plane defining destination construction plane.\r\n * @returns void\r\n * @example modify.XForm(polygon1, plane1, plane2)\r\n * @example_info Transforms polygon1 from plane1 to plane2.\r\n */\r\nexport function XForm(__model__: GIModel, entities: TId|TId[], from: TPlane, to: TPlane): void {\r\n    // --- Error Check ---\r\n    const fn_name = 'modify.XForm';\r\n    let ents_arr = checkIDs(fn_name, 'entities', entities, ['isID', 'isIDList'],\r\n                             ['POSI', 'VERT', 'EDGE', 'WIRE', 'FACE', 'POINT', 'PLINE', 'PGON', 'COLL']);\r\n    checkCommTypes(fn_name, 'from', from, ['isPlane']);\r\n    checkCommTypes(fn_name, 'to', to, ['isPlane']);\r\n    // --- Error Check ---\r\n    // handle geometry type\r\n    if (!Array.isArray(ents_arr[0])) {\r\n        ents_arr = [ents_arr] as TEntTypeIdx[];\r\n    }\r\n\r\n    // xform all positions\r\n    const posis_i: number[] = [];\r\n    for (const ents of ents_arr) {\r\n        const [ent_type, index]: [EEntType, number] = ents as TEntTypeIdx;\r\n        posis_i.push(...__model__.geom.query.navAnyToPosi(ent_type, index));\r\n    }\r\n    const unique_posis_i: number[] = Array.from(new Set(posis_i));\r\n    const matrix: Matrix4 = xfromSourceTargetMatrix(from, to);\r\n    for (const unique_posi_i of unique_posis_i) {\r\n        const old_xyz: Txyz = __model__.attribs.query.getPosiCoords(unique_posi_i);\r\n        const new_xyz: Txyz = multMatrix(old_xyz, matrix);\r\n        __model__.attribs.add.setPosiCoords(unique_posi_i, new_xyz);\r\n    }\r\n}\r\n// ================================================================================================\r\nfunction _reverse(__model__: GIModel, ents_arr: TEntTypeIdx|TEntTypeIdx[]): void {\r\n    if (getArrDepth(ents_arr) === 1 && ents_arr.length) {\r\n        const [ent_type, index]: TEntTypeIdx = ents_arr as TEntTypeIdx;\r\n        const wires_i: number[] = __model__.geom.query.navAnyToWire(ent_type, index);\r\n        wires_i.forEach( wire_i => __model__.geom.add.reverse(wire_i) );\r\n    } else {\r\n        (ents_arr as TEntTypeIdx[]).forEach( ent_arr => _reverse(__model__, ent_arr) );\r\n    }\r\n}\r\n/**\r\n * Reverses direction of entities.\r\n * @param __model__\r\n * @param entities Wire, face, polyline, polygon.\r\n * @returns void\r\n * @example modify.Reverse(face1)\r\n * @example_info Flips face1 and reverses its normal.\r\n * @example modify.Reverse(polyline1)\r\n * @example_info Reverses the order of vertices to reverse the direction of the polyline.\r\n */\r\nexport function Reverse(__model__: GIModel, entities: TId|TId[]): void {\r\n    // --- Error Check ---\r\n    const ents_arr = checkIDs('modify.Reverse', 'entities', entities,\r\n        ['isID', 'isIDList'], ['WIRE', 'PLINE', 'FACE', 'PGON'])  as TEntTypeIdx|TEntTypeIdx[];\r\n    // --- Error Check ---\r\n    _reverse(__model__, ents_arr);\r\n}\r\n// ================================================================================================\r\nfunction _shift(__model__: GIModel, ents_arr: TEntTypeIdx|TEntTypeIdx[], offset: number): void {\r\n    if (getArrDepth(ents_arr) === 1 && ents_arr.length) {\r\n        const [ent_type, index]: TEntTypeIdx = ents_arr as TEntTypeIdx;\r\n        const wires_i: number[] = __model__.geom.query.navAnyToWire(ent_type, index);\r\n        wires_i.forEach( wire_i => __model__.geom.add.shift(wire_i, offset) );\r\n    } else {\r\n        (ents_arr as TEntTypeIdx[]).forEach( ent_arr => _shift(__model__, ent_arr, offset) );\r\n    }\r\n}\r\n/**\r\n * Reverses direction of entities.\r\n * @param __model__\r\n * @param entities Wire, face, polyline, polygon.\r\n * @returns void\r\n * @example modify.Reverse(face1)\r\n * @example_info Flips face1 and reverses its normal.\r\n * @example modify.Reverse(polyline1)\r\n * @example_info Reverses the order of vertices to reverse the direction of the polyline.\r\n */\r\nexport function Shift(__model__: GIModel, entities: TId|TId[], offset: number): void {\r\n    // --- Error Check ---\r\n    const ents_arr = checkIDs('modify.Reverse', 'entities', entities,\r\n        ['isID', 'isIDList'], ['WIRE', 'PLINE', 'FACE', 'PGON'])  as TEntTypeIdx|TEntTypeIdx[];\r\n    // --- Error Check ---\r\n    _shift(__model__, ents_arr, offset);\r\n}\r\n// ================================================================================================\r\nfunction _close(__model__: GIModel, ents_arr: TEntTypeIdx|TEntTypeIdx[]): void {\r\n    if (getArrDepth(ents_arr) === 1 && ents_arr.length) {\r\n        const [ent_type, index]: TEntTypeIdx = ents_arr as TEntTypeIdx;\r\n        let wire_i: number = index;\r\n        if (ent_type === EEntType.PLINE) {\r\n            wire_i = __model__.geom.query.navPlineToWire(index);\r\n        } else if (ent_type !== EEntType.WIRE) {\r\n            throw new Error('modify.Close: Entity is of wrong type. It must be either a polyline or a wire.');\r\n        }\r\n        __model__.geom.add.closeWire(wire_i);\r\n    } else {\r\n        for (const ents of ents_arr) {\r\n            _close(__model__, ents as TEntTypeIdx);\r\n        }\r\n    }\r\n}\r\n/**\r\n * Closes polyline(s) if open.\r\n * @param __model__\r\n * @param lines Polyline(s).\r\n * @returns void\r\n * @example modify.Close([polyline1,polyline2,...])\r\n * @example_info If open, polylines are changed to closed; if already closed, nothing happens.\r\n */\r\nexport function Close(__model__: GIModel, lines: TId|TId[]): void {\r\n    // --- Error Check ---\r\n    const ents_arr = checkIDs('modify.Close', 'lines', lines, ['isID', 'isIDList'], ['PLINE']);\r\n    // --- Error Check ---\r\n    _close(__model__, ents_arr as TEntTypeIdx|TEntTypeIdx[]);\r\n}\r\n// ================================================================================================\r\n// Promote modelling operation\r\nexport enum _EPromoteMethod {\r\n    MEAN =  'mean',\r\n    MIN  =  'min',\r\n    MAX = 'max',\r\n    NONE = 'none'\r\n}\r\n// Promote modelling operation\r\nexport enum _EPromoteAttribTypes {\r\n    POSIS =  'positions',\r\n    VERTS  =  'vertices',\r\n    EDGES = 'edges',\r\n    WIRES = 'wires',\r\n    FACES = 'faces',\r\n    POINTS = 'points',\r\n    PLINES = 'plines',\r\n    PGONS = 'pgons',\r\n    COLLS = 'collections'\r\n}\r\n/**\r\n * Promotes or demotes an attribute from one geometry level to another.\r\n * @param __model__\r\n * @param attrib_name Attribute name to be promoted or demoted.\r\n * @param from Enum; Positions, vertices, edges, wires, faces or collections.\r\n * @param to Enum; Positions, vertices, edges, wires, faces or collections.\r\n * @param method Enum; Maximum, minimum, average, mode, median, sum, sum of squares, root mean square, first match or last match.\r\n * @returns void\r\n * @example promote1 = modify.Promote (colour, positions, faces, sum)\r\n */\r\nexport function _Promote(__model__: GIModel, attrib_name: string,\r\n    from: _EPromoteAttribTypes, to: _EPromoteAttribTypes, method: _EPromoteMethod): void {\r\n    // --- Error Check ---\r\n    // checkCommTypes('attrib.Promote', 'attrib_name', attrib_name, ['isString']);\r\n    // --- Error Check ---\r\n    throw new Error('Not implemented.');\r\n}\r\n// ================================================================================================\r\n/**\r\n * Welds entities together.\r\n * @param __model__\r\n * @param entities Vertex, edge, wire, face, position, point, polyline, polygon, collection.\r\n * @returns void\r\n * @example modify.Weld([polyline1,polyline2])\r\n * @example_info Welds both polyline1 and polyline2 together. Entities must be of the same type.\r\n */\r\nexport function _Weld(__model__: GIModel, entities: TId[]): void {\r\n    // --- Error Check ---\r\n    // const ents_arr = checkIDs('modify.Weld', 'entities', entities, ['isIDList'],\r\n    //                          ['POSI', 'VERT', 'EDGE', 'WIRE', 'FACE', 'POINT', 'PLINE', 'PGON', 'COLL']);\r\n    // --- Error Check ---\r\n    throw new Error('Not implemented.');\r\n}\r\n// ================================================================================================\r\n/**\r\n * Deletes entities.\r\n * @param __model__\r\n * @param entities Position, point, polyline, polygon, collection. Can be a list.\r\n * @returns void\r\n * @example modify.Delete(polygon1)\r\n * @example_info Deletes polygon1 from the model.\r\n */\r\nexport function _Delete(__model__: GIModel, entities: TId|TId[]  ): void {\r\n    // --- Error Check ---\r\n    // const ents_arr = checkIDs('modify.Close', 'geometry', entities, ['isID', 'isIDList'], ['POSI', 'POINT', 'PLINE', 'PGON', 'COLL']);\r\n    // --- Error Check ---\r\n    throw new Error('Not implemented.');\r\n}\r\n\r\n// Collection Add Entities\r\n\r\n// Collection Remove Remove Entities\r\n\r\n// ExtendPline\r\n\r\n// ProjectPosition\r\n\r\n// Move position along vector (normals)\r\n","import { GIModel } from '@libs/geo-info/GIModel';\r\n\r\n/**\r\n* Return certain value from the model for the flowchart's end node\r\n * @summary Return a specific value\r\n * @param {any[]} __model__  Model of the node.\r\n * @param {number} value  Index of the value to be returned.\r\n * @returns {any} Value\r\n */\r\nexport function Return(__model__: GIModel, value: any): any {\r\n    return value;\r\n}\r\n","import { checkCommTypes } from './_check_args';\r\nimport { Txyz, TPlane, XYPLANE, TId, EEntType } from '@libs/geo-info/common';\r\nimport { getArrDepth, idsMakeFromIndicies } from '@libs/geo-info/id';\r\nimport { vecAdd } from '@libs/geom/vectors';\r\nimport { xfromSourceTargetMatrix, multMatrix } from '@libs/geom/matrix';\r\nimport { Matrix4 } from 'three';\r\nimport { __merge__ } from './_model';\r\nimport { GIModel } from '@libs/geo-info/GIModel';\r\n// ================================================================================================\r\n/**\r\n* Creates a list of XYZ coordinates in an arc arrangement.\r\n* @param __model__\r\n* @param origin XYZ coordinates as a list of three numbers.\r\n* @param radius Radius of circle as a number.\r\n* @param num_positions Number of positions distributed equally along the arc.\r\n* @param arc_angle Angle of arc (in radians).\r\n* @returns XYZ coordinates if successful, null if unsuccessful or on error.\r\n* @example coordinates1 = pattern.Arc([0,0,0], 10, 12, PI)\r\n* @example_info Creates a list of 12 XYZ coordinates distributed equally along a semicircle of radius 10.\r\n */\r\nexport function Arc(__model__: GIModel, origin: Txyz|TPlane, radius: number, num_positions: number, arc_angle: number): TId[] {\r\n    // --- Error Check ---\r\n    const fn_name = 'pattern.Arc';\r\n    checkCommTypes(fn_name, 'origin', origin, ['isCoord', 'isPlane']);\r\n    checkCommTypes(fn_name, 'radius', radius, ['isNumber']);\r\n    checkCommTypes(fn_name, 'num_positions', num_positions, ['isInt']);\r\n    checkCommTypes(fn_name, 'arc_angle', arc_angle, ['isNumber']);\r\n    // --- Error Check ---\r\n    // create the matrix one time\r\n    let matrix: Matrix4;\r\n    const origin_is_plane = getArrDepth(origin) === 2;\r\n    if (origin_is_plane) {\r\n        matrix = xfromSourceTargetMatrix(XYPLANE, origin as  TPlane);\r\n    }\r\n    // create positions\r\n    const posis_i: number[] = [];\r\n    for (let i = 0; i < num_positions + 1; i++) {\r\n        const angle: number = (arc_angle / num_positions) * i;\r\n        const x: number = (Math.cos(angle) * radius);\r\n        const y: number = (Math.sin(angle) * radius);\r\n        let xyz: Txyz = [x, y, 0];\r\n        if (origin_is_plane) {\r\n            xyz = multMatrix(xyz, matrix);\r\n        } else { // we have a plane\r\n            xyz = vecAdd(xyz, origin as Txyz);\r\n        }\r\n        const posi_i: number = __model__.geom.add.addPosition();\r\n        __model__.attribs.add.setPosiCoords(posi_i, xyz);\r\n        posis_i.push(posi_i);\r\n    }\r\n    // return the list of posis\r\n    return idsMakeFromIndicies(EEntType.POSI, posis_i) as TId[];\r\n}\r\n// ================================================================================================\r\nexport enum _EGridMethod {\r\n    FLAT = 'flat',\r\n    COLUMNS = 'columns',\r\n    ROWS = 'rows',\r\n    SQUARES = 'squares'\r\n}\r\n/**\r\n* Creates a list of XYZ coordinates in a grid arrangement.\r\n* @param __model__\r\n* @param origin XYZ coordinates as a list of three numbers.\r\n* @param size Size of grid. If number, assume square grid of that length; if list of two numbers, x and y lengths respectively.\r\n* @param num_positions Number of positions.\r\n* @param method Enum, define the way the coords will be return as lists.\r\n* If integer, same number for x and y; if list of two numbers, number for x and y respectively.\r\n* @returns XYZ coordinates if successful, null if unsuccessful or on error.\r\n* @example coordinates1 = pattern.Grid([0,0,0], 10, 3)\r\n* @example_info Creates a list of 9 XYZ coordinates on a 3x3 square grid of length 10.\r\n* @example coordinates1 = pattern.Grid([0,0,0], [10,20], [2,4])\r\n* @example_info Creates a list of 8 XYZ coordinates on a 2x4 grid of length 10 by 20.\r\n*/\r\nexport function Grid(__model__: GIModel, origin: Txyz|TPlane, size: number|[number, number],\r\n        num_positions: number|[number, number], method: _EGridMethod): TId[]|TId[][] {\r\n    // --- Error Check ---\r\n    const fn_name = 'pattern.Grid';\r\n    checkCommTypes(fn_name, 'origin', origin, ['isCoord', 'isPlane']);\r\n    checkCommTypes(fn_name, 'size', size, ['isNumber', 'isXYlist']);\r\n    checkCommTypes(fn_name, 'num_positions', num_positions, ['isInt', 'isXYlistInt']);\r\n    // --- Error Check ---\r\n    // create the matrix one time\r\n    let matrix: Matrix4;\r\n    const origin_is_plane = getArrDepth(origin) === 2;\r\n    if (origin_is_plane) {\r\n        matrix = xfromSourceTargetMatrix(XYPLANE, origin as  TPlane);\r\n    }\r\n    // create the positions\r\n    const posis_i: number[] = [];\r\n    const xy_size: [number, number] = (Array.isArray(size) ? size : [size, size]) as [number, number];\r\n    const xy_num_positions: [number, number] =\r\n        (Array.isArray(num_positions) ? num_positions : [num_positions, num_positions]) as [number, number];\r\n    const x_offset: number = xy_size[0] / (xy_num_positions[0] - 1);\r\n    const y_offset: number = xy_size[1] / (xy_num_positions[1] - 1);\r\n    for (let i = 0; i < xy_num_positions[1]; i++) {\r\n        const y: number = (i * y_offset) - (xy_size[1] / 2);\r\n        for (let j = 0; j < xy_num_positions[0]; j++) {\r\n            const x: number = (j * x_offset) - (xy_size[0] / 2);\r\n            let xyz: Txyz = [x, y, 0];\r\n            if (origin_is_plane) {\r\n                xyz = multMatrix(xyz, matrix);\r\n            } else { // we have a plane\r\n                xyz = vecAdd(xyz, origin as Txyz);\r\n            }\r\n            const posi_i: number = __model__.geom.add.addPosition();\r\n            __model__.attribs.add.setPosiCoords(posi_i, xyz);\r\n            posis_i.push(posi_i);\r\n        }\r\n    }\r\n    // structure the grid of posis, and return\r\n    const posis_i2: number[][] = [];\r\n    if (method === _EGridMethod.FLAT) {\r\n        return idsMakeFromIndicies(EEntType.POSI, posis_i) as TId[];\r\n    } else if (method === _EGridMethod.ROWS) {\r\n        for (let i = 0; i < xy_num_positions[1]; i++) {\r\n            const row: number[] = [];\r\n            for (let j = 0; j < xy_num_positions[0]; j++) {\r\n                const index: number = (i * xy_num_positions[0]) + j;\r\n                row.push( posis_i[index] );\r\n            }\r\n            posis_i2.push(row);\r\n        }\r\n    } else if (method === _EGridMethod.COLUMNS) {\r\n        for (let i = 0; i < xy_num_positions[0]; i++) {\r\n            const col: number[] = [];\r\n            for (let j = 0; j < xy_num_positions[1]; j++) {\r\n                const index: number = (j * xy_num_positions[0]) + i;\r\n                col.push( posis_i[index] );\r\n            }\r\n            posis_i2.push(col);\r\n        }\r\n    } else if (method === _EGridMethod.SQUARES) {\r\n        for (let i = 0; i < xy_num_positions[1] - 1; i++) {\r\n            for (let j = 0; j < xy_num_positions[0] - 1; j++) {\r\n                const index: number = (i * xy_num_positions[0]) + j;\r\n                const square: number[] = [\r\n                    posis_i[index],\r\n                    posis_i[index + xy_num_positions[0]],\r\n                    posis_i[index + xy_num_positions[0] + 1],\r\n                    posis_i[index + 1]\r\n                ];\r\n                posis_i2.push( square );\r\n            }\r\n        }\r\n    }\r\n    return idsMakeFromIndicies(EEntType.POSI, posis_i2) as TId[][];\r\n}\r\n// ================================================================================================\r\n/**\r\n* Creates a list of XYZ coordinates in a rectangular arrangement.\r\n* @param __model__\r\n* @param origin XYZ coordinates as a list of three numbers.\r\n* @param size Size of rectangle. If number, assume square of that length; if list of two numbers, x and y lengths respectively.\r\n* @returns XYZ coordinates if successful, null if unsuccessful or on error.\r\n* @example coordinates1 = pattern.Rectangle([0,0,0], 10)\r\n* @example_info Creates a list of 4 coords, being the vertices of a 10 by 10 square.\r\n* @example coordinates1 = pattern.Rectangle([0,0,0], [10,20])\r\n* @example_info Creates a list of 4 coords, being the vertices of a 10 by 20 rectangle.\r\n */\r\nexport function Rectangle(__model__: GIModel, origin: Txyz|TPlane, size: number|[number, number]): TId[] {\r\n    // --- Error Check ---\r\n    const fn_name = 'pattern.Rectangle';\r\n    checkCommTypes(fn_name, 'origin', origin, ['isCoord', 'isPlane']);\r\n    checkCommTypes(fn_name, 'size', size, ['isNumber', 'isXYlist']);\r\n    // --- Error Check ---\r\n    // create the matrix one time\r\n    let matrix: Matrix4;\r\n    const origin_is_plane = getArrDepth(origin) === 2;\r\n    if (origin_is_plane) {\r\n        matrix = xfromSourceTargetMatrix(XYPLANE, origin as  TPlane);\r\n    }\r\n    // create the positions\r\n    const posis_i: number[] = [];\r\n    const xy_size: [number, number] = (Array.isArray(size) ? size : [size, size]) as [number, number];\r\n    const coords: Txyz[] = [\r\n        [-(xy_size[0] / 2), -(xy_size[1] / 2), 0],\r\n        [-(xy_size[0] / 2),  (xy_size[1] / 2), 0],\r\n        [ (xy_size[0] / 2),  (xy_size[1] / 2), 0],\r\n        [ (xy_size[0] / 2), -(xy_size[1] / 2), 0]\r\n    ];\r\n    for (const coord of coords) {\r\n        let xyz: Txyz = coord;\r\n        if (origin_is_plane) {\r\n            xyz = multMatrix(xyz, matrix);\r\n        } else { // we have a plane\r\n            xyz = vecAdd(xyz, origin as Txyz);\r\n        }\r\n        const posi_i: number = __model__.geom.add.addPosition();\r\n        __model__.attribs.add.setPosiCoords(posi_i, xyz);\r\n        posis_i.push(posi_i);\r\n    }\r\n    // return\r\n    return idsMakeFromIndicies(EEntType.POSI, posis_i) as TId[];\r\n}\r\n// ================================================================================================\r\n","import { GIModel } from '@libs/geo-info/GIModel';\r\nimport { TId, TQuery, EEntType, ESort, TEntTypeIdx } from '@libs/geo-info/common';\r\nimport { idsMake } from '@libs/geo-info/id';\r\nimport { checkIDs } from './_check_args';\r\n\r\n// TQuery should be something like this:\r\n//\r\n// #@name != value\r\n// #@name1 > 10 || #@name2 < 5 && #@name3 == 'red'\r\n// #@xyz[2] > 5\r\n//\r\n// ================================================================================================\r\n// These are used by Get(), Count(), and Neighbours()\r\nexport enum _EQuerySelect {\r\n    POSI =   'positions',\r\n    VERT =   'vertices',\r\n    EDGE =   'edges',\r\n    WIRE =   'wires',\r\n    FACE =   'faces',\r\n    POINT =  'points',\r\n    PLINE =  'polylines',\r\n    PGON =   'polygons',\r\n    COLL =   'collections',\r\n    OBJS =   'objects',\r\n    TOPOS =  'topologies',\r\n    ALL =    'all'\r\n}\r\nfunction _convertSelectToEEntTypeStr(select: _EQuerySelect): EEntType|EEntType[] {\r\n    switch (select) {\r\n        case _EQuerySelect.POSI:\r\n            return EEntType.POSI;\r\n        case _EQuerySelect.VERT:\r\n            return EEntType.VERT;\r\n        case _EQuerySelect.EDGE:\r\n            return EEntType.EDGE;\r\n        case _EQuerySelect.WIRE:\r\n            return EEntType.WIRE;\r\n        case _EQuerySelect.FACE:\r\n            return EEntType.FACE;\r\n        case _EQuerySelect.POINT:\r\n            return EEntType.POINT;\r\n        case _EQuerySelect.PLINE:\r\n            return EEntType.PLINE;\r\n        case _EQuerySelect.PGON:\r\n            return EEntType.PGON;\r\n        case _EQuerySelect.COLL:\r\n            return EEntType.COLL;\r\n        case _EQuerySelect.OBJS:\r\n            return [\r\n                EEntType.POINT,\r\n                EEntType.PLINE,\r\n                EEntType.PGON\r\n            ];\r\n        case _EQuerySelect.TOPOS:\r\n            return [\r\n                EEntType.VERT,\r\n                EEntType.EDGE,\r\n                EEntType.WIRE,\r\n                EEntType.FACE\r\n            ];\r\n        case _EQuerySelect.ALL:\r\n            return [\r\n                EEntType.POSI,\r\n                EEntType.VERT,\r\n                EEntType.EDGE,\r\n                EEntType.WIRE,\r\n                EEntType.FACE,\r\n                EEntType.POINT,\r\n                EEntType.PLINE,\r\n                EEntType.PGON,\r\n                EEntType.COLL\r\n            ];\r\n        default:\r\n            throw new Error('Query select parameter not recognised.');\r\n    }\r\n}\r\n// ================================================================================================\r\nfunction _get(__model__: GIModel, select_ent_types: EEntType|EEntType[],\r\n              ents_arr: TEntTypeIdx|TEntTypeIdx[], query_expr: TQuery): TEntTypeIdx[] {\r\n    if (!Array.isArray(select_ent_types)) {\r\n        const select_ent_type: EEntType = select_ent_types as EEntType;\r\n        // get the list of entities\r\n        const found_entities_i: number[] = [];\r\n        if (ents_arr === null || ents_arr === undefined) {\r\n            found_entities_i.push(...__model__.geom.query.getEnts(select_ent_type));\r\n        } else {\r\n            if (!Array.isArray(ents_arr[0])) { ents_arr = [ents_arr] as TEntTypeIdx[]; }\r\n            for (const ents of ents_arr) {\r\n                found_entities_i.push(...__model__.geom.query.navAnyToAny(ents[0], select_ent_type, ents[1]));\r\n            }\r\n        }\r\n        // check if the query is null\r\n        if (query_expr === null || query_expr === undefined) {\r\n            return found_entities_i.map( entity_i => [select_ent_type, entity_i]) as TEntTypeIdx[];\r\n        }\r\n        // do the query on the list of entities\r\n        const query_result: number[] = __model__.attribs.query.queryAttribs(select_ent_type, query_expr, found_entities_i);\r\n        if (query_result.length === 0) { return []; }\r\n        return query_result.map( entity_i => [select_ent_type, entity_i]) as TEntTypeIdx[];\r\n    } else {\r\n        const query_results_arr: TEntTypeIdx[] = [];\r\n        for (const select_ent_type of select_ent_types) {\r\n            const ent_type_query_results: TEntTypeIdx[] = _get(__model__, select_ent_type, ents_arr, query_expr);\r\n            for (const query_result of ent_type_query_results) {\r\n                query_results_arr.push(query_result);\r\n            }\r\n        }\r\n        return query_results_arr;\r\n    }\r\n}\r\n/**\r\n * Returns a list of entities based on a query expression.\r\n * The query expression should use the following format: #@name == value,\r\n * where 'name' is the attribute name, and 'value' is the attribute value that you are searching for.\r\n * If the attribute value is a string, then in must be in quotes, as follows: #@name == 'str_value'.\r\n * The '==' is the comparison operator. The other comparison operators are: !=, >, >=, <, =<.\r\n * Entities can be search using multiple query expressions, as follows:  #@name1 == value1 &&  #@name2 == value2.\r\n * Query expressions can be combined with either && (and) and || (or), where\r\n * && takes precedence over ||.\r\n * @param __model__\r\n * @param select Enum, specifies what type of entities will be returned.\r\n * @param entities List of entities to be searched. If 'null' (without quotes), all entities in the model will be searched.\r\n * @param query_expr Attribute condition. If 'null' (without quotes), no condition is set; all found entities are returned.\r\n * @returns List of entities whose type matches the type specified in 'select'.\r\n * @example positions = query.Get(positions, polyline1, #@xyz[2]>10)\r\n * @example_info Returns a list of positions defined by polyline1 where the z-coordinate is more than 10.\r\n */\r\nexport function Get(__model__: GIModel, select: _EQuerySelect, entities: TId|TId[], query_expr: TQuery): TId[] {\r\n    // --- Error Check ---\r\n    let ents_arr: TEntTypeIdx|TEntTypeIdx[] = null;\r\n    if (entities !== null && entities !== undefined) {\r\n        ents_arr = checkIDs('query.Get', 'entities', entities, ['isID', 'isIDList'], null) as TEntTypeIdx|TEntTypeIdx[];\r\n    }\r\n    // TODO check the query string\r\n    // --- Error Check ---\r\n    const select_ent_types: EEntType|EEntType[] = _convertSelectToEEntTypeStr(select);\r\n    const found_ents_arr: TEntTypeIdx[] = _get(__model__, select_ent_types, ents_arr, query_expr);\r\n    return idsMake(found_ents_arr) as TId[];\r\n}\r\n// ================================================================================================\r\n/**\r\n * Returns the number of entities based on a query expression.\r\n * The query expression should use the following format: #@name == value,\r\n * where 'name' is the attribute name, and 'value' is the attribute value.\r\n * If the attribute value is a string, then in must be in qoutes, as follows: #@name == 'str_value'.\r\n * The '==' is the comparison operator. The other comparison operators are: !=, >, >=, <, =<.\r\n * Entities can be search using multiple query expressions, as follows:  #@name1 == value1 &&  #@name2 == value2.\r\n * Query expressions can be combine with either && (and) and || (or), where\r\n * && takes precedence over ||.\r\n *\r\n * @param __model__\r\n * @param select Enum, specifies what type of entities are to be counted.\r\n * @param entities List of entities to be searched. If 'null' (without quotes), list of all entities in the model.\r\n * @param query_expr Attribute condition. If 'null' (without quotes), no condition is set; list of all search entities is returned.\r\n * @returns Number of entities.\r\n * @example num_ents = query.Count(positions, polyline1, #@xyz[2]>10)\r\n * @example_info Returns the number of positions defined by polyline1 where the z-coordinate is more than 10.\r\n */\r\nexport function Count(__model__: GIModel, select: _EQuerySelect, entities: TId|TId[], query_expr: TQuery): number {\r\n    // --- Error Check ---\r\n    // if (entities !== null && entities !== undefined) {\r\n    //     checkIDs('query.Count', 'entities', entities, ['isID', 'isIDList'], null);\r\n    // }\r\n    // --- Error Check ---\r\n    return Get(__model__, select, entities, query_expr).length; // Check done in Get\r\n}\r\n// ================================================================================================\r\nexport function _neighbours(__model__: GIModel,  select_ent_types: EEntType|EEntType[],\r\n    ents_arr: TEntTypeIdx|TEntTypeIdx[]): TEntTypeIdx[] {\r\n    if (!Array.isArray(select_ent_types)) {\r\n        const select_ent_type: EEntType = select_ent_types as EEntType;\r\n        if (!Array.isArray(ents_arr[0])) {\r\n            ents_arr = [ents_arr] as TEntTypeIdx[];\r\n        }\r\n        const all_nbor_ents_i: Set<number> = new Set();\r\n        for (const ents of ents_arr) {\r\n            const [ent_type, index]: TEntTypeIdx = ents as TEntTypeIdx ;\r\n            const nbor_ents_i: number[] = __model__.geom.query.neighbours(ent_type, select_ent_type, index);\r\n            nbor_ents_i.forEach(nbor_ent_i => all_nbor_ents_i.add(nbor_ent_i));\r\n        }\r\n        return Array.from(all_nbor_ents_i).map(nbor_ent_i => [select_ent_type, nbor_ent_i]) as TEntTypeIdx[];\r\n    } else {\r\n        const query_results: TEntTypeIdx[] = [];\r\n        for (const select_ent_type of select_ent_types) {\r\n            query_results.push(..._neighbours(__model__, select_ent_type, ents_arr));\r\n        }\r\n        return query_results;\r\n    }\r\n}\r\n/**\r\n* Returns a list of welded neighbours of any entity\r\n* @param __model__\r\n* @param select Enum, select the types of neighbours to return\r\n* @param entities List of entities.\r\n* @returns A list of welded neighbours\r\n* @example mod.Neighbours([polyline1,polyline2,polyline3])\r\n* @example_info Returns list of entities that are welded to polyline1 and polyline2.\r\n*/\r\nexport function Neighbours(__model__: GIModel, select: _EQuerySelect, entities: TId|TId[]): TId[] {\r\n    // --- Error Check ---\r\n    let ents_arr: TEntTypeIdx|TEntTypeIdx[] = null;\r\n    if (entities !== null && entities !== undefined) {\r\n        ents_arr = checkIDs('query.Get', 'entities', entities, ['isID', 'isIDList'], null) as TEntTypeIdx|TEntTypeIdx[];\r\n    }\r\n    // --- Error Check ---\r\n    const select_ent_types: EEntType|EEntType[] = _convertSelectToEEntTypeStr(select);\r\n    const found_ents_arr: TEntTypeIdx[] = _neighbours(__model__, select_ent_types, ents_arr);\r\n    return idsMake(found_ents_arr) as TId[];\r\n}\r\n// ================================================================================================\r\nfunction _sort(__model__: GIModel, ents_arr: TEntTypeIdx[], sort_expr: TQuery, method: ESort): TEntTypeIdx[] {\r\n    // get the list of ents_i\r\n    const ent_type: EEntType = ents_arr[0][0];\r\n    const ents_i: number[] = ents_arr.filter( ent_arr => ent_arr[0] === ent_type ).map( ent_arr => ent_arr[1] );\r\n    // check if the sort expression is null\r\n    if (sort_expr === null || sort_expr === undefined) {\r\n        ents_i.sort();\r\n        if (method === ESort.ASCENDING) {\r\n            ents_i.reverse();\r\n        }\r\n        return ents_i.map( entity_i => [ent_type, entity_i]) as TEntTypeIdx[];\r\n    }\r\n    // do the sort on the list of entities\r\n    const sort_result: number[] = __model__.attribs.query.sortByAttribs(ent_type, ents_i, sort_expr, method);\r\n    return sort_result.map( entity_i => [ent_type, entity_i]) as TEntTypeIdx[];\r\n}\r\nexport enum _ESortMethod {\r\n    'DESCENDING' = 'descending',\r\n    'ASCENDING' = 'ascending'\r\n}\r\n/**\r\n * Sorts entities based on a sort expression.\r\n * The sort expression should use the following format: #@name, where 'name' is the attribute name.\r\n * Entities can be sorted using multiple sort expresssions as follows: #@name1 && #@name2.\r\n * If the attribute is a list, and index can also be specified as follows: #@name1[index].\r\n * @param __model__\r\n * @param entities List of two or more entities to be sorted, all of the same entity type.\r\n * @param sort_expr Attribute condition. If 'null' (without quotes), entities will be sorted based on their ID.\r\n * @param method Enum, sort descending or ascending.\r\n * @returns Sorted entities.\r\n * @example sorted_list = query.Sort( [pos1, pos2, pos3], #@xyz[2], descending)\r\n * @example_info Returns a list of three positions, sorted according to the descending z value.\r\n */\r\nexport function Sort(__model__: GIModel, entities: TId[], sort_expr: TQuery, method: _ESortMethod): TId[] {\r\n    // --- Error Check ---\r\n    const ents_arr = checkIDs('query.Sort', 'entities', entities, ['isIDList'], null) as TEntTypeIdx[];\r\n    // TODO check the sort expression\r\n    // --- Error Check ---\r\n    const sort_method: ESort = (method === _ESortMethod.DESCENDING) ? ESort.DESCENDING : ESort.ASCENDING;\r\n    const sorted_ents_arr: TEntTypeIdx[] = _sort(__model__, ents_arr, sort_expr, sort_method);\r\n    return idsMake(sorted_ents_arr) as TId[];\r\n}\r\n// ================================================================================================\r\nfunction _isClosed(__model__: GIModel, ents_arr: TEntTypeIdx|TEntTypeIdx[]): boolean|boolean[] {\r\n    if (!Array.isArray(ents_arr[0])) {\r\n        const [ent_type, index]: TEntTypeIdx = ents_arr as TEntTypeIdx;\r\n        let wire_i: number = index;\r\n        if (ent_type === EEntType.PLINE) {\r\n            wire_i = __model__.geom.query.navPlineToWire(index);\r\n        } else if (ent_type !== EEntType.WIRE) {\r\n            throw new Error('query.isClosed: Entity is of wrong type. It must be either a polyline or a wire.');\r\n        }\r\n        return __model__.geom.query.istWireClosed(wire_i) as boolean;\r\n    } else {\r\n        return (ents_arr as TEntTypeIdx[]).map(ents => _isClosed(__model__, ents)) as boolean[];\r\n    }\r\n}\r\n/**\r\n * Checks if polyline(s) or wire(s) are closed.\r\n * @param __model__\r\n * @param lines Polyline(s) or wire(s).\r\n * @returns Boolean or list of boolean in input sequence of lines.\r\n * @example mod.IsClosed([polyline1,polyline2,polyline3])\r\n * @example_info Returns list [true,true,false] if polyline1 and polyline2 are closed but polyline3 is open.\r\n */\r\nexport function IsClosed(__model__: GIModel, lines: TId|TId[]): boolean|boolean[] {\r\n    // --- Error Check ---\r\n    const ents_arr = checkIDs('query.isClosed', 'lines', lines, ['isID', 'isIDList'], ['PLINE', 'WIRE']);\r\n    // --- Error Check ---\r\n    return _isClosed(__model__, ents_arr as TEntTypeIdx|TEntTypeIdx[]);\r\n}\r\n// ================================================================================================\r\n/**\r\n * Checks if a wire, polyline, face, or polygon is planar.\r\n * @param __model__\r\n * @param entities Wire, polyline, face, or polygon.\r\n * @param tolerance\r\n * @returns Boolean or list of boolean in input sequence of lines.\r\n * @example mod.IsPlanar([polyline1,polyline2,polyline3])\r\n * @example_info Returns list [true,true,false] if polyline1 and polyline2 are planar but polyline3 is not planar.\r\n */\r\nexport function _IsPlanar(__model__: GIModel, entities: TId|TId[], tolerance: number): boolean|boolean[] {\r\n    // --- Error Check ---\r\n    // const fn_name = 'query.isPlanar';\r\n    // const ents_arr = checkIDs(fn_name, 'entities', entities, ['isID', 'isIDList'], ['PLINE', 'WIRE']);\r\n    // checkCommTypes(fn_name, 'tolerance', tolerance, ['isNumber']);\r\n    // --- Error Check ---\r\n    throw new Error('Not implemented');\r\n}\r\n// ================================================================================================\r\n","import { GIModel } from '@libs/geo-info/GIModel';\r\nimport { exportObj } from '@libs/geo-info/export';\r\nimport { importObj } from '@libs/geo-info/import';\r\nimport { download } from '@libs/filesys/download';\r\nimport { TId, EEntType, Txyz, TPlane, TRay, IGeomPack } from '@libs/geo-info/common';\r\nimport { __merge__ } from './_model';\r\nimport { _model } from '@modules';\r\nimport { idsMake } from '@libs/geo-info/id';\r\n\r\n// ================================================================================================\r\n// Import / Export data types\r\nexport enum _EIODataFormat {\r\n    GI = 'gi',\r\n    OBJ = 'obj'\r\n}\r\n/**\r\n * Imports data into the model.\r\n * In order to get the model data from a file, you need to define the File or URL parameter \r\n * in the Start node of the flowchart.\r\n *\r\n * @param model_data The model data\r\n * @param data_format Enum, the file format.\r\n * @returns A list of the positions, points, polylines, polygons and collections added to the model.\r\n * @example util.ImportData (file1_data, obj)\r\n * @example_info Imports the data from file1 (defining the .obj file uploaded in 'Start' node).\r\n */\r\nexport function ImportData(__model__: GIModel, model_data: string, data_format: _EIODataFormat): TId[] {\r\n    let geom_pack: IGeomPack;\r\n    switch (data_format) {\r\n        case _EIODataFormat.GI:\r\n            const gi_model: GIModel = new GIModel(JSON.parse(model_data));\r\n            geom_pack = __merge__(__model__, gi_model);\r\n            break;\r\n        case _EIODataFormat.OBJ:\r\n            const obj_model: GIModel = importObj(model_data);\r\n            geom_pack = __merge__(__model__, obj_model);\r\n            break;\r\n        default:\r\n            throw new Error('Data type not recognised');\r\n            break;\r\n    }\r\n    const posis_id: TId[] =  geom_pack.posis_i.map(  posi_i =>  idsMake([EEntType.POSI,  posi_i])) as TId[];\r\n    const points_id: TId[] = geom_pack.points_i.map( point_i => idsMake([EEntType.POINT, point_i])) as TId[];\r\n    const plines_id: TId[] = geom_pack.plines_i.map( pline_i => idsMake([EEntType.PLINE, pline_i])) as TId[];\r\n    const pgons_id: TId[] =  geom_pack.pgons_i.map(  pgon_i =>  idsMake([EEntType.PGON,  pgon_i])) as TId[];\r\n    const colls_id: TId[] =  geom_pack.colls_i.map(  coll_i =>  idsMake([EEntType.COLL,  coll_i])) as TId[];\r\n    return [...posis_id, ...points_id, ...plines_id, ...pgons_id, ...colls_id];\r\n}\r\n// ================================================================================================\r\n/**\r\n * Export data from the model as a file.\r\n * This will result in a popup in your browser, asking you to save the filel.\r\n * @param __model__\r\n * @param filename Name of the file as a string.\r\n * @param data_format Enum, the file format.\r\n * @returns Boolean.\r\n * @example util.ExportData ('my_model.obj', obj)\r\n * @example_info Exports all the data in the model as an OBJ.\r\n */\r\nexport function ExportData(__model__: GIModel, filename: string, data_format: _EIODataFormat): boolean {\r\n    switch (data_format) {\r\n        case _EIODataFormat.GI:\r\n            const gi_data: string = JSON.stringify(__model__.getData());\r\n            return download(gi_data , filename);\r\n            break;\r\n        case _EIODataFormat.OBJ:\r\n            const obj_data: string = exportObj(__model__);\r\n            return download(obj_data, filename);\r\n            break;\r\n        default:\r\n            throw new Error('Data type not recognised');\r\n            break;\r\n    }\r\n}\r\n// ================================================================================================\r\n","import { TId, Txyz, EEntType, TPlane, TRay, TEntTypeIdx } from '@libs/geo-info/common';\r\nimport { checkCommTypes, checkIDs } from './_check_args';\r\nimport { GIModel } from '@libs/geo-info/GIModel';\r\nimport { idsMake, idsBreak, getArrDepth } from '@libs/geo-info/id';\r\nimport { vecSub, vecMakeOrtho, vecNorm, vecCross, vecAdd, vecMult, vecFromTo, vecDiv, newellNorm, vecSum } from '@libs/geom/vectors';\r\nimport { _normal } from './calc';\r\n\r\n// ================================================================================================\r\n/**\r\n * Creates a ray, centered at the origin.\r\n * A ray is defined by a list of two lists, as follows: [origin, direction_vector].\r\n * @param __model__\r\n * @param origin Origin of ray: Position, Vertex, Point, or a list of three numbers\r\n * @param dir_vec Direction of Ray: Vector, or list of three numbers\r\n * @returns [origin, vector]: [[x,y,z],[x',y',z']]\r\n * @example virtual.Ray([1,2,3],[4,3,2])\r\n * @example_info Creates a ray from [1,2,3] with the vector [4,3,2].\r\n *\r\n */\r\n\r\nexport function Ray(__model__: GIModel, origin: TId|Txyz, dir_vec: Txyz): TRay {\r\n    // --- Error Check ---\r\n    const fn_name = 'virtual.Ray';\r\n    const ents_arr = checkCommTypes(fn_name, 'origin', origin, ['isOrigin']);\r\n    checkCommTypes(fn_name, 'dir_vec', dir_vec, ['isVector']);\r\n    // --- Error Check ---\r\n    if (!Array.isArray(origin)) {\r\n        const [ent_type, index]: [EEntType, number] = ents_arr as [EEntType, number];\r\n        const posi_i: number = __model__.geom.query.navAnyToPosi(ent_type, index)[0];\r\n        origin = __model__.attribs.query.getPosiCoords(posi_i);\r\n    }\r\n    return [\r\n        origin,\r\n        vecNorm(dir_vec)\r\n    ];\r\n}\r\n// ================================================================================================\r\n/**\r\n * Creates a plane, centered at the origin.\r\n * A plane is define by a list of three lists, as folows: [origin, x_vector, y_vector].\r\n * @param __model__\r\n * @param origin Origin of plane: Position, Vertex, Point, or a list of three numbers\r\n * @param x_vec X vector of the plane: List of three numbers\r\n * @param xy_vec A vector in the xy plane (parallel to teh x vector): List of three numbers\r\n * @returns [origin, vector, vector]: [[x,y,z],[x',y',z'],[x\",y\",z\"]]\r\n * @example virtual.Plane ([1,2,3],[4,3,2],[3,3,9])\r\n * @example_info Creates a plane with its origin positioned at [1,2,3] and two vectors [4,3,2] and [3,3,9] lie on it.\r\n */\r\n\r\nexport function Plane(__model__: GIModel, origin: TId|Txyz, x_vec: Txyz, xy_vec: Txyz): TPlane {\r\n    // --- Error Check ---\r\n    const fn_name = 'virtual.Plane';\r\n    const ents_arr = checkCommTypes(fn_name, 'origin', origin, ['isOrigin']);\r\n    checkCommTypes(fn_name, 'x_vec', x_vec, ['isVector']);\r\n    checkCommTypes(fn_name, 'xy_vec', xy_vec, ['isVector']);\r\n    // --- Error Check ---\r\n    if (!Array.isArray(origin)) {\r\n        const [ent_type, index]: [EEntType, number] = ents_arr as [EEntType, number];\r\n        const posi_i: number = __model__.geom.query.navAnyToPosi(ent_type, index)[0];\r\n        origin = __model__.attribs.query.getPosiCoords(posi_i);\r\n    }\r\n    return [\r\n        origin,\r\n        vecNorm(x_vec),\r\n        vecNorm(vecMakeOrtho(xy_vec, x_vec))\r\n    ];\r\n}\r\n// ================================================================================================\r\nfunction _rayFromPlane(planes: TPlane|TPlane[]): TRay|TRay[] {\r\n    if (getArrDepth(planes) === 2) {\r\n        const plane: TPlane = planes as TPlane;\r\n        return [plane[0], vecCross(plane[1], plane[2])];\r\n    } else {\r\n        return (planes as TPlane[]).map( plane => _rayFromPlane(plane)) as TRay[];\r\n    }\r\n}\r\n/**\r\n * Create a ray, from a plane.\r\n * The direction will be along the z axis.\r\n * A plane is define by a list of three lists, as folows: [origin, x_vector, y_vector].\r\n * A ray is defined by a list of two lists, as follows: [origin, direction_vector].\r\n * @param __model__\r\n * @param plane Plane or list of planes.\r\n * @returns Ray or list of rays.\r\n */\r\nexport function RayFromPlane(plane: TPlane|TPlane[]): TRay|TRay[] {\r\n    // --- Error Check ---\r\n    checkCommTypes('virtual.RayFromPlane', 'origin', plane, ['isPlane']);\r\n    // TODO allow list of planes\r\n    // --- Error Check ---\r\n    return _rayFromPlane(plane);\r\n}\r\n// ================================================================================================\r\nfunction _getRay(__model__: GIModel, ents_arr: TEntTypeIdx|TEntTypeIdx[]): TRay|TRay[] {\r\n    if (getArrDepth(ents_arr) === 1) {\r\n        const ent_arr: TEntTypeIdx = ents_arr as TEntTypeIdx;\r\n        const posis_i: number[] = __model__.geom.query.navAnyToPosi(ent_arr[0], ent_arr[1]);\r\n        const xyzs: Txyz[] = posis_i.map( posi_i => __model__.attribs.query.getPosiCoords(posi_i));\r\n        return [xyzs[0], vecSub(xyzs[1], xyzs[0])];\r\n    } else {\r\n        return (ents_arr as TEntTypeIdx[]).map( ent_arr => _getRay(__model__, ent_arr)) as TRay[];\r\n    }\r\n}\r\n/**\r\n * Returns a plane of a face.\r\n * @param __model__\r\n * @param edge The id of an edge\r\n * @returns The face plane.\r\n */\r\nexport function GetRay(__model__: GIModel, edge: TId|TId[]): TRay|TRay[] {\r\n    // --- Error Check ---\r\n    const ents_arr = checkIDs('virtual.GetRay', 'edge', edge, ['isID'], ['EDGE']) as TEntTypeIdx|TEntTypeIdx[]; \r\n    // TODO allow list of edges\r\n    // --- Error Check ---\r\n    return _getRay(__model__, ents_arr);\r\n}\r\n// ================================================================================================\r\nfunction _getPlane(__model__: GIModel, ents_arr: TEntTypeIdx|TEntTypeIdx[]): TPlane|TPlane[] {\r\n    if (getArrDepth(ents_arr) === 1) {\r\n        const ent_arr = ents_arr as TEntTypeIdx;\r\n        const posis_i: number[] = __model__.geom.query.navAnyToPosi(ent_arr[0], ent_arr[1]);\r\n        const unique_posis_i = Array.from(new Set(posis_i));\r\n        if (unique_posis_i.length < 3) { throw new Error('Too few points to calculate plane.'); }\r\n        const unique_xyzs: Txyz[] = unique_posis_i.map( posi_i => __model__.attribs.query.getPosiCoords(posi_i));\r\n        const origin: Txyz = vecDiv(vecSum(unique_xyzs), unique_xyzs.length);\r\n        // const normal: Txyz = newellNorm(unique_xyzs);\r\n        const normal: Txyz = _normal(__model__, ent_arr) as Txyz; // TODO\r\n        const x_vec: Txyz = vecNorm(vecFromTo(unique_xyzs[0], unique_xyzs[1]));\r\n        const y_vec: Txyz = vecCross(x_vec, normal);\r\n        return [origin, x_vec, y_vec] as TPlane;\r\n    } else {\r\n        return (ents_arr as TEntTypeIdx[]).map(ent_arr => _getPlane(__model__, ent_arr)) as TPlane[];\r\n    }\r\n}\r\n/**\r\n * Returns a plane from a set of positions.\r\n * @param __model__\r\n * @param entities Any entities\r\n * @returns The plane.\r\n */\r\nexport function GetPlane(__model__: GIModel, entities: TId|TId[]): TPlane|TPlane[] {\r\n    // --- Error Check ---\r\n    const ents_arr =  checkIDs('virtual.GetPlane', 'entities', entities, ['isID', 'isIDList'], null); // takes in any\r\n    // TODO ['PGON', 'FACE', 'PLINE', 'WIRE']);\r\n    // --- Error Check ---\r\n    return _getPlane(__model__, ents_arr as TEntTypeIdx|TEntTypeIdx[]);\r\n}\r\n// ================================================================================================\r\n/**\r\n * Visualises a ray by adding geometry to the model.\r\n * @param __model__\r\n * @param ray A list of two list of three coordinates [origin, vector]: [[x,y,z],[x',y',z']]\r\n * @returns A points and a line representing the ray. (The point is tha start point of the ray.)\r\n * @example ray1 = virtual.visRay([[1,2,3],[0,0,1]])\r\n */\r\nexport function VisRay(__model__: GIModel, ray: TRay, scale: number): TId[] {\r\n    // --- Error Check ---\r\n    const fn_name = 'virtual.visRay';\r\n    checkCommTypes(fn_name, 'ray', ray, ['isRay']);\r\n    checkCommTypes(fn_name, 'scale', scale, ['isNumber']);\r\n    // --- Error Check ---\r\n    const origin: Txyz = ray[0];\r\n    const vec: Txyz = vecMult(ray[1], scale);\r\n    const end: Txyz = vecAdd(origin, vec);\r\n    // create orign point\r\n    const origin_posi_i: number = __model__.geom.add.addPosition();\r\n    __model__.attribs.add.setPosiCoords(origin_posi_i, origin);\r\n    const point_i = __model__.geom.add.addPoint(origin_posi_i);\r\n    // create pline\r\n    const end_posi_i: number = __model__.geom.add.addPosition();\r\n    __model__.attribs.add.setPosiCoords(end_posi_i, end);\r\n    const pline_i = __model__.geom.add.addPline([origin_posi_i, end_posi_i]);\r\n    // return the geometry IDs\r\n    return [\r\n        idsMake([EEntType.POINT, point_i]),\r\n        idsMake([EEntType.PLINE, pline_i])\r\n    ] as TId[];\r\n}\r\n// ================================================================================================\r\n/**\r\n * Visualises a plane by adding geometry to the model.\r\n * @param __model__\r\n * @param plane A list of lists\r\n * @returns A points, a polygon and two polyline representing the plane. (The point is the origin of the plane.)\r\n * @example plane1 = virtual.visPlane(position1, vector1, [0,1,0])\r\n * @example_info Creates a plane with position1 on it and normal = cross product of vector1 with y-axis.\r\n */\r\nexport function VisPlane(__model__: GIModel, plane: TPlane, scale: number): TId[] {\r\n    // --- Error Check ---\r\n    const fn_name = 'virtual.visPlane';\r\n    checkCommTypes(fn_name, 'plane', plane, ['isPlane']);\r\n    checkCommTypes(fn_name, 'scale', scale, ['isNumber']);\r\n    // --- Error Check ---\r\n    const origin: Txyz = plane[0];\r\n    const x_vec: Txyz = vecMult(plane[1], scale);\r\n    const y_vec: Txyz = vecMult(plane[2], scale);\r\n    let x_end: Txyz = vecAdd(origin, x_vec);\r\n    let y_end: Txyz = vecAdd(origin, y_vec);\r\n    const plane_corners: Txyz[] = [\r\n        vecAdd(x_end, y_vec),\r\n        vecSub(y_end, x_vec),\r\n        vecSub(vecSub(origin, x_vec), y_vec),\r\n        vecSub(x_end, y_vec),\r\n    ];\r\n    x_end = vecAdd(x_end, vecMult(x_vec, 0.1));\r\n    y_end = vecSub(y_end, vecMult(y_vec, 0.1));\r\n    // create the point\r\n    const origin_posi_i: number = __model__.geom.add.addPosition();\r\n    __model__.attribs.add.setPosiCoords(origin_posi_i, origin);\r\n    const point_i = __model__.geom.add.addPoint(origin_posi_i);\r\n    // create the x axis\r\n    const x_end_posi_i: number = __model__.geom.add.addPosition();\r\n    __model__.attribs.add.setPosiCoords(x_end_posi_i, x_end);\r\n    const x_pline_i = __model__.geom.add.addPline([origin_posi_i, x_end_posi_i]);\r\n    // create the y axis\r\n    const y_end_posi_i: number = __model__.geom.add.addPosition();\r\n    __model__.attribs.add.setPosiCoords(y_end_posi_i, y_end);\r\n    const y_pline_i = __model__.geom.add.addPline([origin_posi_i, y_end_posi_i]);\r\n    // create pline for plane\r\n    const corner_posis_i: number[] = [];\r\n    for (const corner of plane_corners) {\r\n        const posi_i: number = __model__.geom.add.addPosition();\r\n        __model__.attribs.add.setPosiCoords(posi_i, corner);\r\n        corner_posis_i.push(posi_i);\r\n    }\r\n    const plane_i = __model__.geom.add.addPline(corner_posis_i, true);\r\n    // return the geometry IDs\r\n    return [\r\n        idsMake([EEntType.POINT, point_i]),\r\n        idsMake([EEntType.PLINE, x_pline_i]),\r\n        idsMake([EEntType.PLINE, y_pline_i]),\r\n        idsMake([EEntType.PLINE, plane_i])\r\n    ] as TId[];\r\n}\r\n// ================================================================================================\r\n","import { Injectable } from '@angular/core';\r\nimport { IMobius } from '@models/mobius';\r\nimport { IFlowchart, FlowchartUtils } from '@models/flowchart';\r\nimport { INode } from '@models/node';\r\nimport { IProcedure } from '@models/procedure';\r\n\r\n@Injectable()\r\nexport class DataService {\r\n    private static _data: IMobius = {\r\n        name: 'default_file',\r\n        author: 'new_user',\r\n        last_updated: new Date(),\r\n        version: 1,\r\n        flowchart: FlowchartUtils.newflowchart()\r\n    };\r\n    private static _flowchartPosition: string = undefined;\r\n    private static _newFlowchart = true;\r\n\r\n    private static _modelOutputView = {};\r\n    private static _testModel = false;\r\n    private static _helpView = [false, undefined];\r\n\r\n    private static _activeModelView: string = undefined;\r\n    private static _activeGallery: any = undefined;\r\n\r\n    private static _focusedInput: any;\r\n\r\n    private static _splitVal = 60;\r\n    private static _flowchartSplitUpdate = false;\r\n\r\n    private static _copiedProd: IProcedure[];\r\n    private static _copiedType: IProcedure[];\r\n\r\n    private static _consoleScroll: number;\r\n\r\n    private _prevActions = [];\r\n    private _nextActions = [];\r\n\r\n    get file() { return DataService._data; }\r\n    set file(data: IMobius) {\r\n        DataService._data = <IMobius>{\r\n            name: data.name,\r\n            author: data.author,\r\n            flowchart: data.flowchart,\r\n            last_updated: data.last_updated,\r\n            version: data.version\r\n        };\r\n    }\r\n\r\n    get flowchartPos() {return DataService._flowchartPosition; }\r\n    set flowchartPos(transf: string) {DataService._flowchartPosition = transf; }\r\n\r\n    get newFlowchart() {return DataService._newFlowchart; }\r\n    set newFlowchart(check: boolean) {DataService._newFlowchart = check; }\r\n\r\n    getModelOutputView(nodeID: string) {\r\n        if (DataService._modelOutputView.hasOwnProperty(nodeID)) {\r\n            return DataService._modelOutputView[nodeID];\r\n        }\r\n        return true;\r\n    }\r\n    setModelOutputView(nodeID: string, check: boolean) {DataService._modelOutputView[nodeID] = check; }\r\n\r\n    get testModel() {return DataService._testModel; }\r\n    set testModel(check: boolean) {DataService._testModel = check; }\r\n\r\n    get activeView() {return DataService._activeModelView; }\r\n    set activeView(view: string) {DataService._activeModelView = view; }\r\n\r\n    get activeGallery() {return DataService._activeGallery; }\r\n    set activeGallery(gallery: any) {DataService._activeGallery = gallery; }\r\n\r\n    get helpView() {return DataService._helpView; }\r\n    set helpView(view: any) {DataService._helpView[1] = view; }\r\n    toggleHelp(state: boolean) { DataService._helpView[0] = state; }\r\n\r\n    get focusedInput() {return DataService._focusedInput; }\r\n    set focusedInput(input: any) {DataService._focusedInput = input; }\r\n\r\n    get copiedProd() {return DataService._copiedProd; }\r\n    set copiedProd(prods: any) {DataService._copiedProd = prods; }\r\n\r\n    get copiedType() {return DataService._copiedType; }\r\n    set copiedType(Ptype: any) {DataService._copiedType = Ptype; }\r\n\r\n    get splitVal() {return DataService._splitVal; }\r\n    set splitVal(num: number) {DataService._splitVal = num; }\r\n\r\n    get splitUpdate() {return DataService._flowchartSplitUpdate; }\r\n    set splitUpdate(check: boolean) {DataService._flowchartSplitUpdate = check; }\r\n\r\n    get consoleScroll() {return DataService._consoleScroll; }\r\n    set consoleScroll(num: number) {DataService._consoleScroll = num; }\r\n\r\n    get flowchart(): IFlowchart { return DataService._data.flowchart; }\r\n    get node(): INode { return DataService._data.flowchart.nodes[DataService._data.flowchart.meta.selected_nodes[0]]; }\r\n\r\n\r\n    registerAction(action) {\r\n        this._prevActions.push(action);\r\n        this._nextActions = [];\r\n        // console.log(action);\r\n    }\r\n\r\n    undo() {\r\n        if (this._prevActions.length === 0) {\r\n            return undefined;\r\n        }\r\n        const action = this._prevActions.pop();\r\n        this._nextActions.push(action);\r\n        return action;\r\n    }\r\n\r\n    redo() {\r\n        if (this._nextActions.length === 0) {\r\n            return undefined;\r\n        }\r\n        const action = this._nextActions.pop();\r\n        this._prevActions.push(action);\r\n        return action;\r\n    }\r\n\r\n\r\n\r\n}\r\n","export * from './data.service';\r\nexport * from './viewer.service';\r\n","import { Injectable, ComponentFactoryResolver, Injector  } from '@angular/core';\r\nimport { Observable, Subject } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class ViewerService {\r\n    contextReceivedSource = new Subject<any>();\r\n    contextReceived$ = this.contextReceivedSource.asObservable();\r\n\r\n    receiveContext(componentFactoryResolver: ComponentFactoryResolver, injector: Injector) {\r\n        this.contextReceivedSource.next({ resolver: componentFactoryResolver, injector: injector });\r\n    }\r\n}\r\n","module.exports = \"<div id='console-container'>\\r\\n    <div class='container'>\\r\\n        <ng-container *ngFor='let text of logs'>\\r\\n            <div class = 'line-container'>\\r\\n                <p class='normalText line'  *ngFor='let splittedText of text.join(\\\" \\\").split(\\\"\\\\n\\\")' >{{splittedText}}</p>\\r\\n\\r\\n                <!-- <ng-container *ngIf='text.join(\\\" \\\").indexOf(\\\"Error\\\") !== -1; else default_template'>\\r\\n                    <p class='errorText line' *ngFor='let splittedText of text.join(\\\" \\\").split(\\\"\\\\n\\\")' >{{splittedText}}</p>\\r\\n                </ng-container>\\r\\n                <ng-template #default_template>\\r\\n                    <p class='normalText line'  *ngFor='let splittedText of text.join(\\\" \\\").split(\\\"\\\\n\\\")' >{{splittedText}}</p>\\r\\n                </ng-template> -->\\r\\n            </div>\\r\\n        </ng-container>\\r\\n    </div>\\r\\n    <button id=\\\"clearConsole\\\"\\r\\n        mat-icon-button\\r\\n        (click)=\\\"clearConsole()\\\"\\r\\n        title='Clear Console'>\\r\\n        <mat-icon>block</mat-icon>\\r\\n    </button> \\r\\n</div>\\r\\n\"","module.exports = \"@import url(\\\"https://fonts.googleapis.com/css?family=Ubuntu+Mono\\\");\\n:host {\\n  height: 100%;\\n  width: 100%; }\\ndiv {\\n  font-family: sans-serif;\\n  color: #505050;\\n  width: 100%;\\n  padding-left: 10px; }\\nh5 {\\n  font-weight: 700;\\n  font-size: 12px; }\\n.funcDesc {\\n  font-weight: 600; }\\n.paramP {\\n  padding-left: 5px; }\\nspan {\\n  font-weight: 550;\\n  font-style: italic; }\\n#console-container {\\n  margin-top: 40px;\\n  height: calc(100vh - 40px);\\n  width: 100%;\\n  padding: 0px;\\n  overflow: auto; }\\n.container {\\n  padding: 0px 10px 10px 10px;\\n  height: -webkit-fit-content;\\n  height: -moz-fit-content;\\n  height: fit-content;\\n  width: 100%;\\n  box-sizing: border-box;\\n  display: flex;\\n  flex-flow: column nowrap;\\n  justify-content: flex-start; }\\n.container .line-container {\\n    border-bottom: 1px solid #E6E6E6;\\n    padding: 2px 0px; }\\n.container .line-container .line {\\n      white-space: pre-wrap;\\n      word-wrap: break-word;\\n      font-family: 'Ubuntu Mono'; }\\n.errorText {\\n  color: #E94858; }\\n.normalText {\\n  color: #808080; }\\n#clearConsole {\\n  position: absolute;\\n  background-color: transparent;\\n  padding: 0px;\\n  border: 0px;\\n  margin: 0px;\\n  top: 5px;\\n  right: 10px;\\n  color: #808080; }\\n\"","import { Component, Input, OnInit, DoCheck, AfterViewInit, AfterViewChecked } from '@angular/core';\r\n\r\n/**\r\n * ConsoleViewerComponent\r\n */\r\n@Component({\r\n    selector: 'console-viewer',\r\n    templateUrl: './console-viewer.component.html',\r\n    styleUrls: ['./console-viewer.component.scss']\r\n})\r\nexport class ConsoleViewerComponent implements OnInit, AfterViewInit, DoCheck, AfterViewChecked {\r\n    text: string;\r\n    scrollcheck: boolean;\r\n    logs: string[];\r\n\r\n    /**\r\n     * constructor\r\n     */\r\n    constructor() {\r\n        // console.log('Console Viewer Created');\r\n    }\r\n    /**\r\n     * ngOnInit\r\n     */\r\n    ngOnInit() {\r\n        // @ts-ignore\r\n        this.text = console.logs.join('\\n');\r\n    }\r\n\r\n    /**\r\n     * ngOnInit\r\n     */\r\n    ngAfterViewInit() {\r\n        const ct = document.getElementById('console-container');\r\n        ct.scrollTop = ct.scrollHeight;\r\n    }\r\n\r\n    /**\r\n     * ngDoCheck\r\n     */\r\n    ngDoCheck() {\r\n        // @ts-ignore\r\n        if (console.logs.length > 500) {\r\n            // @ts-ignore\r\n            console.logs.splice(0, console.logs.length - 500);\r\n        }\r\n        // @ts-ignore\r\n        const t = console.logs.join('\\n');\r\n        // @ts-ignore\r\n        this.logs = console.logs;\r\n        if (this.text !== t) {\r\n            this.text = t;\r\n            this.scrollcheck = true;\r\n        }\r\n    }\r\n\r\n    ngAfterViewChecked() {\r\n        if (this.scrollcheck) {\r\n            const ct = document.getElementById('console-container');\r\n            ct.scrollTop = ct.scrollHeight;\r\n            this.scrollcheck = false;\r\n        }\r\n    }\r\n\r\n    clearConsole() {\r\n        // @ts-ignore\r\n        console.logs = [];\r\n    }\r\n}\r\n","module.exports = \"<div class = 'attrib--container'>\\r\\n  <my-tabs id=\\\"attribTab\\\" (selectedIndexChange) = \\\"_setDataSource($event)\\\" [hidden]=\\\"dataSource === undefined\\\">\\r\\n    <my-tab *ngFor=\\\"let tab of tabs; let i = index\\\" tabTitle=\\\"{{tab.title}}\\\" index=\\\"{{i}}\\\">\\r\\n        <div class=\\\"mat-elevation-z1\\\">\\r\\n          <div class = \\\"table--container\\\">\\r\\n            <table mat-table [dataSource]=\\\"dataSource\\\" matSort>\\r\\n              <ng-container *ngFor=\\\"let column of displayedColumns\\\" [matColumnDef]=\\\"column\\\">\\r\\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header> {{column}} </th>\\r\\n                  <td mat-cell *matCellDef=\\\"let element\\\"> {{element[column]}} </td>\\r\\n              </ng-container>\\r\\n              <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n              <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n            </table>\\r\\n          </div>\\r\\n          <div class = 'btm--container'>\\r\\n            <div id=\\\"displaySelected\\\" [hidden]=\\\"dataSource === undefined\\\">\\r\\n              <span>Show Selected</span>\\r\\n              <input type=\\\"checkbox\\\" id=\\\"switch\\\" (click)=\\\"showSelectedSwitch()\\\" [checked]=\\\"showSelected\\\"/><label for=\\\"switch\\\">Toggle</label>\\r\\n            </div>\\r\\n            <div class = 'paginator--container'>\\r\\n              <mat-paginator id=\\\"matPaginator\\\" [pageSizeOptions]=\\\"[5, 10, 20]\\\" showFirstLastButtons></mat-paginator>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n    </my-tab>\\r\\n  </my-tabs>\\r\\n</div>\\r\\n  \"","module.exports = \".table--container {\\n  overflow-y: auto; }\\n\\n.mat-table {\\n  background-color: whitesmoke;\\n  border-top: 1px solid #B3B3B3;\\n  border-bottom: 1px solid #CCCCCC; }\\n\\ntable {\\n  width: 100%;\\n  font-family: sans-serif;\\n  background-color: transparent; }\\n\\ntable tr.mat-header-row {\\n    background-color: whitesmoke;\\n    height: 27px; }\\n\\ntable tr.mat-row {\\n    height: 24px; }\\n\\ntable tr.mat-row .mat-cell {\\n      font-size: 12px;\\n      color: #373737;\\n      background-color: #fafafb;\\n      border-bottom: 1px solid #B3B3B3; }\\n\\ntable tr.mat-row:last-child .mat-cell {\\n      border-bottom-color: transparent; }\\n\\n/deep/ #attribTab {\\n  height: 100%; }\\n\\n/deep/ #attribTab ul {\\n    background-color: transparent;\\n    margin: 0;\\n    padding-left: 11px;\\n    white-space: nowrap;\\n    height: 20px;\\n    position: absolute;\\n    top: 1px; }\\n\\n/deep/ #attribTab ul li {\\n      list-style: none;\\n      display: inline-block;\\n      width: 75px;\\n      color: #808080;\\n      overflow: visible;\\n      cursor: pointer;\\n      position: relative;\\n      height: inherit;\\n      padding: 0px; }\\n\\n/deep/ #attribTab ul li span {\\n        font-family: sans-serif;\\n        margin-right: 2px;\\n        font-weight: 550;\\n        font-size: 12px;\\n        line-height: 15px;\\n        border: 1px solid transparent;\\n        position: relative;\\n        display: block;\\n        padding: 2px;\\n        text-align: center;\\n        position: absolute;\\n        width: inherit;\\n        box-sizing: border-box; }\\n\\n/deep/ #attribTab ul li:hover {\\n        background-color: transparent; }\\n\\n/deep/ #attribTab ul li:hover span {\\n          color: #00006d;\\n          background-color: transparent; }\\n\\n/deep/ #attribTab ul li.active {\\n        background-color: transparent; }\\n\\n/deep/ #attribTab ul li.active span {\\n          color: #00006d;\\n          cursor: default;\\n          background-color: whitesmoke;\\n          border: 1px solid #B3B3B3;\\n          border-bottom: 2px solid whitesmoke; }\\n\\n/deep/ #attribTab .pane {\\n    margin-top: 20px;\\n    height: calc(100% - 20px); }\\n\\n/deep/ #attribTab .pane .mat-elevation-z1 {\\n      display: flex;\\n      flex-flow: column nowrap;\\n      height: 100%;\\n      justify-content: space-between;\\n      box-shadow: none; }\\n\\n/deep/ #settings_button.btn {\\n  height: 20px;\\n  width: 20px;\\n  background-color: #fafafb;\\n  position: absolute;\\n  top: -1px; }\\n\\n/deep/ #settings_button.btn .mat-icon {\\n    height: inherit;\\n    width: inherit;\\n    line-height: 20px;\\n    font-size: 15px; }\\n\\n/deep/ #settings_button.btn:hover .mat-icon {\\n    color: #00006d; }\\n\\n.attrib--container {\\n  height: calc(100% - 30px); }\\n\\n.attrib--container #attribTab {\\n    height: 100%; }\\n\\n.attrib--container #attribTab my-tab {\\n      height: 100%; }\\n\\n#displaySelected {\\n  position: absolute;\\n  bottom: 17px;\\n  left: 10px; }\\n\\n#displaySelected span {\\n    vertical-align: middle;\\n    font-size: 12px;\\n    color: #808080;\\n    padding-right: 5px; }\\n\\n#displaySelected input[type=checkbox] {\\n    height: 0;\\n    width: 0;\\n    visibility: hidden; }\\n\\n.btm--container {\\n  position: relative;\\n  height: 30px;\\n  position: absolute;\\n  display: flex;\\n  flex-flow: row nowrap;\\n  justify-content: flex-end;\\n  width: 100%;\\n  bottom: 0px; }\\n\\n.btm--container #displaySelected {\\n    padding-left: 10px;\\n    width: 20%; }\\n\\n.btm--container #displaySelected span {\\n      vertical-align: middle;\\n      font-size: 12px;\\n      color: #808080;\\n      padding-right: 5px;\\n      -moz-user-select: none;\\n      -webkit-user-select: none; }\\n\\n.btm--container #displaySelected input[type=checkbox] {\\n      height: 0;\\n      width: 0;\\n      visibility: hidden; }\\n\\n.btm--container #displaySelected label {\\n      vertical-align: middle;\\n      cursor: pointer;\\n      text-indent: -9999px;\\n      width: 30px;\\n      height: 15px;\\n      background: #CCCCCC;\\n      display: inline-block;\\n      position: relative; }\\n\\n.btm--container #displaySelected label:after {\\n        content: '';\\n        position: absolute;\\n        top: 1px;\\n        left: 1px;\\n        width: 13px;\\n        height: 13px;\\n        background: #E6E6E6;\\n        transition: 0.3s; }\\n\\n.btm--container #displaySelected input:checked + label {\\n      background: #00006d; }\\n\\n.btm--container #displaySelected input:checked + label:after {\\n      left: calc(100% - 2px);\\n      -webkit-transform: translateX(-100%);\\n              transform: translateX(-100%); }\\n\\n.btm--container #displaySelected input:hover:not(:checked) + label {\\n      background: rgba(0, 0, 109, 0.4); }\\n\\n.btm--container #displaySelected input:hover:not(:checked) + label:after {\\n        box-shadow: 2px 0px 0px 0px; }\\n\\n.btm--container #displaySelected label:active:after {\\n      width: 13px; }\\n\\n.btm--container .paginator--container {\\n    position: relative;\\n    width: 80%;\\n    display: flex;\\n    flex-flow: row nowrap;\\n    justify-content: flex-end; }\\n\\n.btm--container #matPaginator {\\n    position: absolute;\\n    top: -20px;\\n    background-color: transparent;\\n    width: 100%; }\\n\\n.btm--container #matPaginator .mat-paginator-outer-container .mat-paginator-container {\\n      width: inherit;\\n      min-height: 30px !important;\\n      position: absolute;\\n      bottom: 8px;\\n      height: 20px;\\n      display: flex;\\n      flex-flow: row nowrap;\\n      flex-shrink: 0;\\n      font-family: sans-serif; }\\n\\n.btm--container #matPaginator .mat-paginator-outer-container .mat-paginator-container .mat-paginator-page-size, .btm--container #matPaginator .mat-paginator-outer-container .mat-paginator-container .mat-paginator-range-actions {\\n        height: inherit;\\n        align-items: baseline;\\n        padding-right: 15px; }\\n\\n.btm--container #matPaginator .mat-paginator-outer-container .mat-paginator-container .mat-paginator-page-size-label, .btm--container #matPaginator .mat-paginator-outer-container .mat-paginator-container .mat-paginator-range-label {\\n        white-space: nowrap; }\\n\\n.btm--container #matPaginator .mat-paginator-outer-container .mat-paginator-container .mat-paginator-page-size-select {\\n        margin: 0; }\\n\\n.btm--container #matPaginator .mat-paginator-outer-container .mat-paginator-container .mat-paginator-page-size-select .mat-form-field-wrapper {\\n          padding-bottom: 0.95em; }\\n\\n.btm--container #matPaginator .mat-paginator-outer-container .mat-paginator-container .mat-paginator-page-size-select .mat-form-field-wrapper .mat-form-field-flex .mat-form-field-infix .mat-select .mat-select-trigger .mat-select-value {\\n            font-family: sans-serif;\\n            color: #808080; }\\n\\n.btm--container #matPaginator .mat-paginator-outer-container .mat-paginator-container .mat-icon-button:hover .mat-paginator-icon {\\n        fill: #00006d; }\\n\"","import { Component, Injector, Input, OnChanges, SimpleChanges, ViewChildren, QueryList } from '@angular/core';\r\nimport { MatTableDataSource, MatSort, MatPaginator } from '@angular/material';\r\nimport { GIModel } from '@libs/geo-info/GIModel';\r\nimport { DataService } from '../data/data.service';\r\nimport { GICommon, GIAttribs } from '@libs/geo-info';\r\nimport { EEntType, EEntTypeStr } from '@libs/geo-info/common';\r\n\r\n@Component({\r\n  selector: 'attribute',\r\n  templateUrl: './attribute.component.html',\r\n  styleUrls: ['./attribute.component.scss']\r\n})\r\n\r\nexport class AttributeComponent implements OnChanges{\r\n  @Input() data: GIModel;\r\n  @Input() refresh: Event;\r\n  showSelected = false;\r\n\r\n  tabs: { type: number, title: string }[] =\r\n    [\r\n      { type: EEntType.POSI, title: 'Positions' },\r\n      { type: EEntType.VERT, title: 'Vertex' },\r\n      { type: EEntType.EDGE, title: 'Edges' },\r\n      { type: EEntType.WIRE, title: 'Wires' },\r\n      { type: EEntType.FACE, title: 'Faces' },\r\n      { type: EEntType.POINT, title: 'Points' },\r\n      { type: EEntType.PLINE, title: 'Polylines' },\r\n      { type: EEntType.PGON, title: 'Polygons' },\r\n      { type: EEntType.COLL, title: 'Collections' }\r\n    ];\r\n  displayedColumns: string[] = [];\r\n\r\n  @ViewChildren(MatPaginator) paginator = new QueryList<MatPaginator>();\r\n  @ViewChildren(MatSort) sort = new QueryList<MatSort>();\r\n\r\n  dataSource: MatTableDataSource<object>;\r\n\r\n  protected dataService: DataService;\r\n\r\n  constructor(injector: Injector) {\r\n    this.dataService = injector.get(DataService);\r\n    if (localStorage.getItem('mpm_attrib_current_tab') === null) {\r\n      localStorage.setItem('mpm_attrib_current_tab', '0');\r\n    }\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (changes['data'] && this.data) {\r\n      this.refreshTable();\r\n    }\r\n    if (changes['refresh']) {\r\n      this.refreshTable();\r\n    }\r\n  }\r\n\r\n  generateTable(tabIndex: number) {\r\n    const EntityType = GICommon.EEntType;\r\n    const tab_map = {\r\n      0: EntityType.POSI,\r\n      1: EntityType.VERT,\r\n      2: EntityType.EDGE,\r\n      3: EntityType.WIRE,\r\n      4: EntityType.FACE,\r\n      5: EntityType.POINT,\r\n      6: EntityType.PLINE,\r\n      7: EntityType.PGON,\r\n      8: EntityType.COLL\r\n    };\r\n    if (this.data) {\r\n      const ThreeJS = this.data.attribs.threejs;\r\n      let displayData: { id: string }[] = [];\r\n      const AllAttribData = ThreeJS.getAttribsForTable(tab_map[tabIndex]);\r\n      const selected_ents = this.dataService.selected_ents.get(EEntTypeStr[tab_map[tabIndex]]);\r\n      const SelectedAttribData = ThreeJS.getEntsVals(selected_ents, tab_map[tabIndex]);\r\n      if (this.showSelected) {\r\n        displayData = SelectedAttribData;\r\n      } else {\r\n        displayData = AllAttribData;\r\n      }\r\n      if (displayData.length > 0) {\r\n        this.displayedColumns = Object.keys(displayData[0]);\r\n        this.dataSource = new MatTableDataSource<object>(displayData);\r\n      } else {\r\n        this.displayedColumns = [];\r\n        this.dataSource = new MatTableDataSource<object>();\r\n      }\r\n      this.dataSource.paginator = this.paginator.toArray()[tabIndex];\r\n      this.dataSource.sort = this.sort.toArray()[tabIndex];\r\n    }\r\n    return tabIndex;\r\n  }\r\n\r\n  _setDataSource(tabIndex: number) {\r\n    setTimeout(() => {\r\n      localStorage.setItem('mpm_attrib_current_tab', tabIndex.toString());\r\n      this.generateTable(tabIndex);\r\n    });\r\n  }\r\n\r\n  private getCurrentTab() {\r\n    if (localStorage.getItem('mpm_attrib_current_tab') != null) {\r\n      return Number(localStorage.getItem('mpm_attrib_current_tab'));\r\n    } else {\r\n      return 0;\r\n    }\r\n  }\r\n\r\n  showSelectedSwitch() {\r\n    this.showSelected = !this.showSelected;\r\n    this.refreshTable();\r\n  }\r\n\r\n  public refreshTable() {\r\n    const currentTab = this.getCurrentTab();\r\n    setTimeout(() => {\r\n      this.generateTable(currentTab);\r\n    });\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport {\r\n  MatTableModule,\r\n  MatSortModule,\r\n  MatPaginatorModule\r\n} from '@angular/material';\r\n\r\n@NgModule({\r\n  imports: [\r\n    MatTableModule,\r\n    MatSortModule,\r\n    MatPaginatorModule\r\n  ],\r\n  exports: [\r\n    MatTableModule,\r\n    MatSortModule,\r\n    MatPaginatorModule\r\n  ]\r\n})\r\nexport class AttributeModule {}\r\n","import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'my-tab',\r\n  styles: [\r\n    `\r\n    .pane{\r\n      padding: 0;\r\n    }\r\n  `\r\n  ],\r\n  template: `\r\n    <div [hidden]=\"!active\" class=\"pane\">\r\n      <ng-content></ng-content>\r\n    </div>\r\n  `\r\n})\r\nexport class TabComponent {\r\n    // tslint:disable-next-line: no-input-rename\r\n    @Input('tabTitle') title: string;\r\n    @Input() active = false;\r\n    // tslint:disable-next-line: no-input-rename\r\n    @Input('index') index: number;\r\n}\r\n","import {\r\n    Component,\r\n    ContentChildren,\r\n    QueryList,\r\n    AfterContentInit,\r\n    Output,\r\n    EventEmitter\r\n} from '@angular/core';\r\n\r\nimport { TabComponent } from './tab.component';\r\n\r\n@Component({\r\n    selector: 'my-tabs',\r\n    template: `\r\n      <ul class=\"nav nav-tabs\">\r\n        <li *ngFor=\"let tab of tabs\" (click)=\"selectTab(tab)\" [class.active]=\"tab.active\">\r\n          <span>{{tab.title}}</span>\r\n        </li>\r\n      </ul>\r\n      <ng-content></ng-content>\r\n    `,\r\n    styleUrls: ['./attribute.component.scss']\r\n})\r\nexport class TabsComponent implements AfterContentInit {\r\n    @Output() selectedIndexChange = new EventEmitter<number>();\r\n    @ContentChildren(TabComponent) tabs: QueryList<TabComponent>;\r\n\r\n    // contentChildren are set\r\n    ngAfterContentInit() {\r\n        setTimeout(() => {// get all active tabs\r\n            const activeTabs = this.tabs.filter((tab) => tab.active);\r\n\r\n            // if there is no active tab set, activate the first\r\n            if (activeTabs.length === 0) {\r\n                this.selectTab(this.tabs.first);\r\n            }\r\n        }, 0);\r\n    }\r\n\r\n    selectTab(tab: TabComponent) {\r\n        // deactivate all tabs\r\n        this.tabs.toArray().forEach(_tab => _tab.active = false);\r\n\r\n        // activate the tab the user has clicked on.\r\n        tab.active = true;\r\n        this.selectedIndexChange.emit(tab.index);\r\n    }\r\n}\r\n","import { GIModel } from '@libs/geo-info/GIModel';\r\nimport { EEntType, EEntTypeStr } from '@libs/geo-info/common';\r\nimport { DataThreejs } from './data.threejs';\r\n// import @angular stuff\r\nimport { Injectable } from '@angular/core';\r\n/**\r\n * DataService\r\n * The data service for the Goe-Info viewer.\r\n */\r\n@Injectable()\r\nexport class DataService {\r\n    // GI Model\r\n    // private _model: GIModel;\r\n    private _data_threejs: DataThreejs;\r\n\r\n    selecting: any = [];\r\n\r\n    // Selected Entities by Threejs Viewer for Attribute Table\r\n    selected_ents: Map<string, Map<string, number>> = new Map();\r\n    selected_positions: Map<string, string[]>;\r\n    selected_face_edges: Map<string, string[]>;\r\n    /**\r\n     * Create a data service.\r\n     */\r\n    constructor() {\r\n        this.selected_ents.set(EEntTypeStr[EEntType.POSI], new Map());\r\n        this.selected_ents.set(EEntTypeStr[EEntType.VERT], new Map());\r\n        this.selected_ents.set(EEntTypeStr[EEntType.EDGE], new Map());\r\n        this.selected_ents.set(EEntTypeStr[EEntType.FACE], new Map());\r\n        this.selected_ents.set(EEntTypeStr[EEntType.WIRE], new Map());\r\n        this.selected_ents.set(EEntTypeStr[EEntType.PGON], new Map());\r\n        this.selected_ents.set(EEntTypeStr[EEntType.PLINE], new Map());\r\n        this.selected_ents.set(EEntTypeStr[EEntType.POINT], new Map());\r\n        this.selected_ents.set(EEntTypeStr[EEntType.COLL], new Map());\r\n        this.selected_positions = new Map();\r\n        this.selected_face_edges = new Map();\r\n    }\r\n\r\n    /**\r\n     * Get the THreejs Scene\r\n     */\r\n    getThreejsScene(): DataThreejs {\r\n        return this._data_threejs;\r\n    }\r\n\r\n    /**\r\n     * Set the THreejs Scene\r\n     */\r\n    setThreejsScene(settings) {\r\n        this._data_threejs = new DataThreejs(settings);\r\n    }\r\n\r\n    /**\r\n     * check selected entites number\r\n     */\r\n    countSelectedEnts() {\r\n        let count = 0;\r\n        this.selected_ents.forEach(selected_ents => {\r\n            count = +selected_ents.size;\r\n        });\r\n        return count;\r\n    }\r\n}\r\n","import * as THREE from 'three';\r\nimport * as OrbitControls from 'three-orbit-controls';\r\nimport { GIModel } from '@libs/geo-info/GIModel';\r\nimport { IThreeJS } from '@libs/geo-info/ThreejsJSON';\r\n\r\n/**\r\n * ThreejsScene\r\n */\r\nexport class DataThreejs {\r\n    // threeJS objects\r\n    public _scene: THREE.Scene;\r\n    public _renderer: THREE.WebGLRenderer;\r\n    public _camera: THREE.PerspectiveCamera;\r\n    public _controls: THREE.OrbitControls;\r\n    public _raycaster: THREE.Raycaster;\r\n    public _mouse: THREE.Vector2;\r\n    // interaction and selection\r\n    public tri_select_map: Map<number, number>;\r\n    public edge_select_map: Map<number, number>;\r\n    public point_select_map: Map<number, number>;\r\n    public selected_geoms: Map<string, number> = new Map();\r\n    public selected_positions: Map<string, Map<string, number>> = new Map();\r\n    public selected_face_edges: Map<string, Map<string, number>> = new Map();\r\n    public _text: string;\r\n    // text lables\r\n    public ObjLabelMap: Map<string, any> = new Map();\r\n    public _textLabels: Map<string, any> = new Map();\r\n    // number of threejs points, lines, triangles\r\n    public _threejs_nums: [number, number, number] = [0, 0, 0];\r\n    // grid\r\n    public grid: THREE.GridHelper;\r\n    // axes\r\n    public axesHelper: THREE.AxesHelper;\r\n    // the GI model to display\r\n    public _model: GIModel;\r\n\r\n    public sceneObjs: THREE.Object3D[] = [];\r\n    public sceneObjsSelected: Map<string, THREE.Object3D> = new Map();\r\n    // Show Normals\r\n    public vnh: THREE.VertexNormalsHelper;\r\n    // Settings\r\n    public settings: {\r\n        normals: { show: boolean, size: number },\r\n        axes: { show: boolean, size: number },\r\n        grid: { show: boolean, size: number }\r\n    };\r\n    /**\r\n     * Constructs a new data subscriber.\r\n     */\r\n    constructor(settings: {\r\n        normals: { show: boolean, size: number },\r\n        axes: { show: boolean, size: number },\r\n        grid: { show: boolean, size: number }\r\n    }) {\r\n        this.settings = settings;\r\n        // scene\r\n        this._scene = new THREE.Scene();\r\n        this._scene.background = new THREE.Color(0xcccccc);\r\n\r\n        // renderer\r\n        this._renderer = new THREE.WebGLRenderer({ antialias: true });\r\n        // this._renderer.setClearColor(0xEEEEEE);\r\n        this._renderer.setPixelRatio(window.devicePixelRatio);\r\n        this._renderer.setSize(window.innerWidth / 1.8, window.innerHeight);\r\n        this._renderer.shadowMap.enabled = true;\r\n        this._renderer.shadowMap.type = THREE.PCFSoftShadowMap;\r\n\r\n        // camera settings\r\n        this._camera = new THREE.PerspectiveCamera(50, 1, 0.01, 20000);\r\n        // document.addEventListener( 'keypress', this.onWindowKeyPress, false );\r\n        this._camera.position.x = -80;\r\n        this._camera.position.y = -80;\r\n        this._camera.position.z = 80;\r\n        this._camera.aspect = 1;\r\n        this._camera.up.set(0, 0, 1);\r\n        this._camera.lookAt(this._scene.position);\r\n        this._camera.updateProjectionMatrix();\r\n\r\n        // orbit controls\r\n        const orbit_controls = OrbitControls(THREE);\r\n        this._controls = new orbit_controls(this._camera, this._renderer.domElement);\r\n        this._controls.enableKeys = false;\r\n        this._controls.update();\r\n\r\n        // mouse\r\n        this._mouse = new THREE.Vector2();\r\n\r\n        // selecting\r\n        this._raycaster = new THREE.Raycaster();\r\n        this._raycaster.linePrecision = 0.05;\r\n\r\n        // add grid and lights\r\n        this._addGrid();\r\n        this._addHemisphereLight();\r\n        this._addAxes();\r\n    }\r\n\r\n    public addGeometry(model: GIModel, container): void {\r\n        while (this._scene.children.length > 0) {\r\n            this._scene.remove(this._scene.children[0]);\r\n            this.sceneObjs = [];\r\n        }\r\n        document.querySelectorAll('[id^=textLabel_]').forEach(value => {\r\n            container.removeChild(value);\r\n        });\r\n        this.ObjLabelMap.clear();\r\n        this._textLabels.clear();\r\n\r\n        this._addGrid();\r\n        this._addHemisphereLight();\r\n        // this._addDirectionalLight();\r\n        this._addAxes();\r\n\r\n        // Add geometry\r\n        const threejs_data: IThreeJS = model.get3jsData();\r\n        this.tri_select_map = threejs_data.triangle_select_map;\r\n        this.edge_select_map = threejs_data.edge_select_map;\r\n        this.point_select_map = threejs_data.point_select_map;\r\n\r\n        // Create buffers that will be used by all geometry\r\n        const posis_buffer = new THREE.Float32BufferAttribute(threejs_data.positions, 3);\r\n        const normals_buffer = new THREE.Float32BufferAttribute(threejs_data.normals, 3);\r\n        const colors_buffer = new THREE.Float32BufferAttribute(threejs_data.colors, 3);\r\n        this._addTris(threejs_data.triangle_indices, posis_buffer, normals_buffer, colors_buffer);\r\n        this._addLines(threejs_data.edge_indices, posis_buffer, normals_buffer);\r\n        this._addPoints(threejs_data.point_indices, posis_buffer, colors_buffer);\r\n\r\n        // const allObjs = this.getAllObjs();\r\n        // const center = allObjs.center;\r\n        // this.grid.position.copy(center);\r\n        // this.axesHelper.position.copy(center);\r\n    }\r\n\r\n    public selectObjFace(ent_id: string, triangle_i: number[], positions: number[], container, label = true) {\r\n        const geom = new THREE.BufferGeometry();\r\n        geom.setIndex(triangle_i);\r\n        geom.addAttribute('position', new THREE.Float32BufferAttribute(positions, 3));\r\n        geom.addAttribute('normal', new THREE.Float32BufferAttribute(Array(positions.length).fill(0), 3));\r\n        geom.addAttribute('color', new THREE.Float32BufferAttribute(Array(positions.length).fill(0), 3));\r\n        const mat = new THREE.MeshPhongMaterial({\r\n            // specular:  new THREE.Color('rgb(255, 0, 0)'), // 0xffffff,\r\n            specular: 0x000000,\r\n            emissive: 0xff0000,\r\n            shininess: 20, // 250\r\n            side: THREE.DoubleSide,\r\n            vertexColors: THREE.VertexColors,\r\n            // wireframe: true\r\n        });\r\n        const mesh = new THREE.Mesh(geom, mat);\r\n        mesh.geometry.computeBoundingSphere();\r\n        mesh.geometry.computeVertexNormals();\r\n        this._scene.add(mesh);\r\n        this.selected_geoms.set(ent_id, mesh.id);\r\n        this.sceneObjsSelected.set(ent_id, mesh);\r\n        if (label) {\r\n            const obj: { entity: THREE.Mesh, type: string } = { entity: mesh, type: objType.face };\r\n            this.createLabelforObj(container, obj.entity, obj.type, ent_id);\r\n            this.ObjLabelMap.set(ent_id, obj);\r\n        }\r\n    }\r\n\r\n    private initBufferLine(positions, indices: number[], colors: [number, number, number]) {\r\n        const geom = new THREE.BufferGeometry();\r\n        if (indices.length > 2) {\r\n            geom.setIndex(indices);\r\n        } else {\r\n            geom.setIndex([0, 1]);\r\n        }\r\n        geom.addAttribute('position', new THREE.Float32BufferAttribute(positions, 3));\r\n        geom.addAttribute('normal', new THREE.Float32BufferAttribute(Array(positions.length).fill(0), 3));\r\n        const rgb = `rgb(${colors.toString()})`;\r\n        const mat = new THREE.LineBasicMaterial({\r\n            color: new THREE.Color(rgb),\r\n            linewidth: 5,\r\n            linecap: 'round', // ignored by WebGLRenderer\r\n            linejoin: 'round' // ignored by WebGLRenderer\r\n        });\r\n        const bg = {geom, mat};\r\n        return bg;\r\n    }\r\n\r\n    public selectObjLine(ent_id: string, indices, positions, container, label = true) {\r\n        const bg = this.initBufferLine(positions, indices, [255, 0 , 0]);\r\n        const line = new THREE.LineSegments(bg.geom, bg.mat);\r\n        this._scene.add(line);\r\n        this.selected_geoms.set(ent_id, line.id);\r\n        this.sceneObjsSelected.set(ent_id, line);\r\n\r\n        if (label) {\r\n            const obj: { entity: THREE.LineSegments, type: string } = { entity: line, type: objType.line };\r\n            this.createLabelforObj(container, obj.entity, obj.type, ent_id);\r\n            this.ObjLabelMap.set(ent_id, obj);\r\n        }\r\n    }\r\n\r\n    public selectEdgeByFace(parent_ent_id: string, ent_id: string, indices, positions, container, label = true) {\r\n        const bg = this.initBufferLine(positions, indices, [255, 0 , 0]);\r\n        if (this.selected_face_edges.get(parent_ent_id) === undefined) {\r\n            this.selected_face_edges.set(parent_ent_id, new Map());\r\n        }\r\n\r\n        const check_exist: string[] = [];\r\n        this.selected_face_edges.forEach(v => {\r\n            v.forEach((vv, k) => {\r\n                check_exist.push(k);\r\n            });\r\n        });\r\n\r\n        this.selected_geoms.forEach((v, k) => {\r\n            check_exist.push(k);\r\n        });\r\n\r\n        if (!check_exist.includes(ent_id)) {\r\n            const line = new THREE.LineSegments(bg.geom, bg.mat);\r\n            this._scene.add(line);\r\n            this.selected_face_edges.get(parent_ent_id).set(ent_id, line.id);\r\n            this.sceneObjsSelected.set(ent_id, line);\r\n            if (label) {\r\n                const obj: { entity: THREE.LineSegments, type: string } = { entity: line, type: objType.line };\r\n                this.createLabelforObj(container, obj.entity, obj.type, ent_id);\r\n                this.ObjLabelMap.set(ent_id, obj);\r\n            }\r\n        }\r\n    }\r\n\r\n    private initBufferPoint(positions, point_indices = null, color: [number, number, number]) {\r\n        const geom = new THREE.BufferGeometry();\r\n        if (point_indices) {\r\n            geom.setIndex(point_indices);\r\n        }\r\n        geom.addAttribute('position', new THREE.Float32BufferAttribute(positions, 3));\r\n        const colors = new Uint8Array([].concat(...Array(positions.length / 3).fill(color)));\r\n        geom.addAttribute('color', new THREE.BufferAttribute(colors, 3, true));\r\n        geom.computeBoundingSphere();\r\n        const mat = new THREE.PointsMaterial({\r\n            size: 1,\r\n            vertexColors: THREE.VertexColors\r\n        });\r\n        const bg = {geom, mat};\r\n        return bg;\r\n    }\r\n\r\n    public selectObjPoint(ent_id: string = null, point_indices, positions, container, label = true) {\r\n        const bg = this.initBufferPoint(positions, point_indices, [255, 0, 0]);\r\n        const point = new THREE.Points(bg.geom, bg.mat);\r\n        this._scene.add(point);\r\n        this.selected_geoms.set(ent_id, point.id);\r\n        this.sceneObjsSelected.set(ent_id, point);\r\n        if (label) {\r\n            const obj: { entity: THREE.Points, type: string } = { entity: point, type: objType.point };\r\n            this.createLabelforObj(container, obj.entity, obj.type, ent_id);\r\n            this.ObjLabelMap.set(ent_id, obj);\r\n        }\r\n    }\r\n\r\n    public selectObjPosition(parent_ent_id: string, ent_id: string, positions, container, label) {\r\n        const bg = this.initBufferPoint(positions, null, [0, 60, 255]);\r\n        if (this.selected_positions.get(parent_ent_id) === undefined) {\r\n            this.selected_positions.set(parent_ent_id, new Map());\r\n        }\r\n\r\n        const check_exist: string[] = [];\r\n        this.selected_positions.forEach(v => {\r\n            v.forEach((vv, k) => {\r\n                check_exist.push(k);\r\n            });\r\n        });\r\n\r\n        if (!check_exist.includes(ent_id)) {\r\n            const point = new THREE.Points(bg.geom, bg.mat);\r\n            this._scene.add(point);\r\n            this.selected_positions.get(parent_ent_id).set(ent_id, point.id);\r\n            this.sceneObjsSelected.set(ent_id, point);\r\n            if (label) {\r\n                const obj: { entity: THREE.Points, type: string } = { entity: point, type: objType.point };\r\n                this.createLabelforObj(container, obj.entity, obj.type, ent_id);\r\n                this.ObjLabelMap.set(ent_id, obj);\r\n            }\r\n        }\r\n    }\r\n\r\n    public createLabelforObj(container, obj, type: string, labelText: string) {\r\n        const label = this._createTextLabel(container, type, labelText);\r\n        label.setHTML(labelText);\r\n        label.setParent(obj);\r\n        this._textLabels.set(label.element.id, label);\r\n        container.appendChild(label.element);\r\n    }\r\n\r\n    public unselectObj(ent_id, container) {\r\n        const removing = this.selected_geoms.get(ent_id);\r\n        // remove Geom from scene\r\n        this._scene.remove(this._scene.getObjectById(removing));\r\n        this.selected_geoms.delete(ent_id);\r\n        // remove Geom from selected Objs Map\r\n        this.sceneObjsSelected.delete(ent_id);\r\n\r\n        this.ObjLabelMap.delete(ent_id);\r\n        if (document.getElementById(`textLabel_${ent_id}`)) {\r\n            container.removeChild(document.getElementById(`textLabel_${ent_id}`));\r\n        }\r\n    }\r\n\r\n    public unselectObjGroup(parent_ent_id, container, group) {\r\n        let removing;\r\n        if (group === 'positions') {\r\n            // get the removing first\r\n            removing = this.selected_positions.get(parent_ent_id);\r\n        } else if (group === 'face_edges') {\r\n            // get the removing first\r\n            removing = this.selected_face_edges.get(parent_ent_id);\r\n        }\r\n        // remove positions from scene\r\n        removing.forEach((v, k) => {\r\n            this._scene.remove(this._scene.getObjectById(v));\r\n            this.ObjLabelMap.delete(k);\r\n            if (document.getElementById(`textLabel_${k}`)) {\r\n                container.removeChild(document.getElementById(`textLabel_${k}`));\r\n            }\r\n        });\r\n        if (group === 'positions') {\r\n            // then delete\r\n            this.selected_positions.delete(parent_ent_id);\r\n        } else if (group === 'face_edges') {\r\n            this.selected_face_edges.delete(parent_ent_id);\r\n        }\r\n    }\r\n\r\n    // ============================================================================\r\n    // Private methods\r\n    // ============================================================================\r\n    /**\r\n     * Creates a hemisphere light\r\n     */\r\n    private _addHemisphereLight() {\r\n        const light: THREE.HemisphereLight = new THREE.HemisphereLight(\r\n            0xffffbb, // skyColor\r\n            0x080820, // groundColor\r\n            1 // intensity\r\n        );\r\n        this._scene.add(light);\r\n    }\r\n    /**\r\n     * Creates an ambient light\r\n     */\r\n    private _addAmbientLight(color: string, intensity: number) {\r\n        const light = new THREE.AmbientLight(color, intensity); // soft white light\r\n        this._scene.add(light);\r\n    }\r\n\r\n    // Creates a Directional Light\r\n    private _addDirectionalLight() {\r\n        const light = new THREE.SpotLight(0xffffff);\r\n        light.position.set(200, 100, 200);\r\n        light.castShadow = true;\r\n        this._scene.add(light);\r\n    }\r\n    // add axes\r\n    public _addAxes(size: number = this.settings.axes.size) {\r\n        let i = 0;\r\n        const length = this._scene.children.length;\r\n        if (length !== 0) {\r\n            for (; i < length; i++) {\r\n                if (this._scene.children[i]) {\r\n                    if (this._scene.children[i].name === 'AxesHelper') {\r\n                        this._scene.remove(this._scene.children[i]);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        this.axesHelper = new THREE.AxesHelper(size);\r\n        this.axesHelper.visible = this.settings.axes.show;\r\n        if (this.axesHelper.visible) {\r\n            this.axesHelper.name = 'AxesHelper';\r\n            this._scene.add(this.axesHelper);\r\n        }\r\n        // this.axesHelper.position.set(0, 0, 0);\r\n    }\r\n    /**\r\n     * Draws a grid on the XY plane.\r\n     */\r\n    public _addGrid(size: number = this.settings.grid.size) {\r\n        let i = 0;\r\n        const length = this._scene.children.length;\r\n        for (; i < length; i++) {\r\n            if (this._scene.children[i]) {\r\n                if (this._scene.children[i].name === 'GridHelper') {\r\n                    this._scene.remove(this._scene.children[i]);\r\n                }\r\n            }\r\n        }\r\n        this.grid = new THREE.GridHelper(size, size / 10);\r\n        this.grid.visible = this.settings.grid.show;\r\n        // todo: change grid -> grid_value\r\n        if (this.grid.visible) {\r\n            this.grid.name = 'GridHelper';\r\n            const vector = new THREE.Vector3(0, 1, 0);\r\n            this.grid.lookAt(vector);\r\n            this.grid.position.set(0, 0, 0);\r\n            this._scene.add(this.grid);\r\n        }\r\n    }\r\n    /**\r\n     * Add threejs triangles to the scene\r\n     */\r\n    private _addTris(tris_i: number[],\r\n        posis_buffer: THREE.Float32BufferAttribute,\r\n        normals_buffer: THREE.Float32BufferAttribute,\r\n        colors_buffer: THREE.Float32BufferAttribute): void {\r\n        const geom = new THREE.BufferGeometry();\r\n        geom.setIndex(tris_i);\r\n        geom.addAttribute('position', posis_buffer);\r\n        geom.addAttribute('normal', normals_buffer);\r\n        geom.addAttribute('color', colors_buffer);\r\n        const mat = new THREE.MeshPhongMaterial({\r\n            // specular:  new THREE.Color('rgb(255, 0, 0)'), // 0xffffff,\r\n            specular: 0xffffff,\r\n            emissive: 0xdddddd,\r\n            shininess: 0, // 250\r\n            side: THREE.DoubleSide,\r\n            vertexColors: THREE.VertexColors,\r\n            // wireframe: true\r\n        });\r\n        const mesh = new THREE.Mesh(geom, mat);\r\n        mesh.geometry.computeBoundingSphere();\r\n        mesh.geometry.computeVertexNormals();\r\n        mesh.castShadow = true;\r\n        mesh.receiveShadow = false;\r\n\r\n        // show vertex normals\r\n        this.vnh = new THREE.VertexNormalsHelper(mesh, this.settings.normals.size, 0x0000ff);\r\n        this.vnh.visible = this.settings.normals.show;\r\n        this._scene.add(this.vnh);\r\n        this.sceneObjs.push(mesh);\r\n        // add mesh to scene\r\n        this._scene.add(mesh);\r\n        this._threejs_nums[2] = tris_i.length / 3;\r\n    }\r\n    /**\r\n     * Add threejs lines to the scene\r\n     */\r\n    private _addLines(lines_i: number[],\r\n        posis_buffer: THREE.Float32BufferAttribute,\r\n        normals_buffer: THREE.Float32BufferAttribute): void {\r\n        const geom = new THREE.BufferGeometry();\r\n        geom.setIndex(lines_i);\r\n        geom.addAttribute('position', posis_buffer);\r\n        geom.addAttribute('normal', normals_buffer);\r\n        // geom.addAttribute( 'color', new THREE.Float32BufferAttribute( colors_flat, 3 ) );\r\n        const mat = new THREE.LineBasicMaterial({\r\n            color: 0x000000,\r\n            linewidth: 1,\r\n            linecap: 'round', // ignored by WebGLRenderer\r\n            linejoin: 'round' // ignored by WebGLRenderer\r\n        });\r\n        const line = new THREE.LineSegments(geom, mat);\r\n        this.sceneObjs.push(line);\r\n        this._scene.add(line);\r\n        this._threejs_nums[1] = lines_i.length / 2;\r\n    }\r\n    /**\r\n     * Add threejs points to the scene\r\n     */\r\n    private _addPoints(points_i: number[],\r\n        posis_buffer: THREE.Float32BufferAttribute,\r\n        colors_buffer: THREE.Float32BufferAttribute): void {\r\n        const geom = new THREE.BufferGeometry();\r\n        geom.setIndex(points_i);\r\n        geom.addAttribute('position', posis_buffer);\r\n        geom.addAttribute('color', colors_buffer);\r\n        // geom.computeBoundingSphere();\r\n        const mat = new THREE.PointsMaterial({\r\n            size: 1,\r\n            vertexColors: THREE.VertexColors\r\n        });\r\n        const point = new THREE.Points(geom, mat);\r\n        this.sceneObjs.push(point);\r\n        this._scene.add(point);\r\n        this._threejs_nums[0] = points_i.length;\r\n    }\r\n\r\n    private _createTextLabel(container, type: string, labelText: string) {\r\n        const div = document.createElement('div');\r\n        div.id = `textLabel_${labelText}`;\r\n        div.className = 'text-label';\r\n        div.style.position = 'absolute';\r\n        div.innerHTML = '';\r\n        div.style.top = '-1000';\r\n        div.style.left = '-1000';\r\n        const _this = this;\r\n        return {\r\n            element: div,\r\n            parent: false,\r\n            position: new THREE.Vector3(0, 0, 0),\r\n            setHTML: function (html) {\r\n                this.element.innerHTML = html;\r\n            },\r\n            setParent: function (threejsobj) {\r\n                this.parent = threejsobj;\r\n            },\r\n            updatePosition: function () {\r\n                if (this.parent) {\r\n                    if (type === objType.point || type === objType.face) {\r\n                        const center = this.parent.geometry.boundingSphere.center;\r\n                        this.position.copy(center);\r\n                    } else if (type === objType.line) {\r\n                        const p = this.parent.geometry.getAttribute('position').array;\r\n                        const x = (p[0] + p[3]) / 2, y = (p[1] + p[4]) / 2, z = (p[2] + p[5]) / 2;\r\n                        const center = new THREE.Vector3(x, y, z);\r\n                        this.position.copy(center);\r\n                    }\r\n                }\r\n                const coords2d = this.get2DCoords(this.position, _this._camera);\r\n                this.element.style.left = coords2d.x + 'px';\r\n                this.element.style.top = coords2d.y + 'px';\r\n            },\r\n            get2DCoords: function (position, camera) {\r\n                const vector = position.project(camera);\r\n                vector.x = (vector.x + 1) / 2 * container.offsetWidth;\r\n                vector.y = -(vector.y - 1) / 2 * container.offsetHeight;\r\n                return vector;\r\n            }\r\n        };\r\n    }\r\n\r\n    public lookAtObj(width: number) {\r\n        const allObjs = this.getAllObjs();\r\n        const selectedObjs = this.getSelectedObjs();\r\n        if (allObjs === null && selectedObjs === null) {\r\n            const sceneCenter = this._scene.position;\r\n            this._camera.lookAt(sceneCenter);\r\n            // this._camera.updateProjectionMatrix();\r\n            this._controls.target.set(sceneCenter.x, sceneCenter.y, sceneCenter.z);\r\n            this._controls.update();\r\n        }\r\n\r\n        let center = null;\r\n        let radius = null;\r\n        if (selectedObjs) {\r\n            center = selectedObjs.center;\r\n            radius = selectedObjs.radius;\r\n        } else if (allObjs) {\r\n            center = allObjs.center;\r\n            radius = allObjs.radius;\r\n        } else {\r\n            center = this._scene.position;\r\n            radius = 50;\r\n        }\r\n        // set grid and axeshelper to center of the objs\r\n        // this.grid.position.set(center.x, center.y, 0);\r\n        // this.axesHelper.position.set(center.x, center.y, 0);\r\n\r\n        const fov = this._camera.fov * (Math.PI / 180);\r\n        const vec_centre_to_pos: THREE.Vector3 = new THREE.Vector3();\r\n        vec_centre_to_pos.subVectors(this._camera.position, center);\r\n        const r = radius < 100 ? 200 : (radius < 500 ? 10 : 1);\r\n        const f = 1 + (width / radius / r);\r\n        const tmp_vec = new THREE.Vector3(Math.abs(radius / Math.sin(fov / 2) / f),\r\n            Math.abs(radius / Math.sin(fov / 2) / f),\r\n            Math.abs(radius / Math.sin(fov / 2)) / f);\r\n        vec_centre_to_pos.setLength(tmp_vec.length());\r\n        const perspectiveNewPos: THREE.Vector3 = new THREE.Vector3();\r\n        perspectiveNewPos.addVectors(center, vec_centre_to_pos);\r\n        const newLookAt = new THREE.Vector3(center.x, center.y, center.z);\r\n        this._camera.position.copy(perspectiveNewPos);\r\n        this._camera.lookAt(newLookAt);\r\n        this._camera.updateProjectionMatrix();\r\n        this._controls.target.set(newLookAt.x, newLookAt.y, newLookAt.z);\r\n        this._controls.update();\r\n    }\r\n\r\n    private getAllObjs() {\r\n        if (this.sceneObjs.length !== 0) {\r\n            const objs = new THREE.Object3D();\r\n            this.sceneObjs.map(obj => objs.children.push(obj));\r\n            const boxHelper = new THREE.BoxHelper(objs);\r\n            boxHelper.geometry.computeBoundingSphere();\r\n            const boundingSphere = boxHelper.geometry.boundingSphere;\r\n            return boundingSphere;\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    private getSelectedObjs() {\r\n        if (this.sceneObjsSelected.size !== 0) {\r\n            const objs = new THREE.Object3D();\r\n            this.sceneObjsSelected.forEach(obj => objs.children.push(obj));\r\n            const boxHelper = new THREE.BoxHelper(objs);\r\n            boxHelper.geometry.computeBoundingSphere();\r\n            const boundingSphere = boxHelper.geometry.boundingSphere;\r\n            return boundingSphere;\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    public onWindowKeyPress(event: KeyboardEvent) {\r\n        if ((<Element>event.target).nodeName === 'TEXTAREA') { return; }\r\n        const segment_str = window.location.pathname;\r\n        const segment_array = segment_str.split('/');\r\n        const last_segment = segment_array[segment_array.length - 1];\r\n        if (last_segment === 'editor') {\r\n            return null;\r\n        }\r\n        const keyCode = event.which;\r\n        // console.log(keyCode);\r\n        const positionDelta = 10;\r\n        const rotationDelta = 0.02;\r\n        const xp = this._camera.position.x;\r\n        const yp = this._camera.position.y;\r\n        switch (keyCode) {\r\n            case 65: // A: move left\r\n                this._camera.position.x -= positionDelta;\r\n                break;\r\n            case 68: // D: move right\r\n                this._camera.position.x += positionDelta;\r\n                break;\r\n            case 87: // W: move forward\r\n                this._camera.position.y += positionDelta;\r\n                break;\r\n            case 83: // S: move backward\r\n                this._camera.position.y -= positionDelta;\r\n                break;\r\n            case 90: // Z: move up\r\n                this._camera.position.z += positionDelta;\r\n                break;\r\n            case 88: // X: move down\r\n                this._camera.position.z -= positionDelta;\r\n                break;\r\n            case 81: // Q: rotate clockwise\r\n                this._camera.position.x = xp * Math.cos(rotationDelta) + yp * Math.sin(rotationDelta);\r\n                this._camera.position.y = yp * Math.cos(rotationDelta) - xp * Math.sin(rotationDelta);\r\n                this._camera.lookAt(this._scene.position);\r\n                break;\r\n            case 69: // E: rotate anticlockwise\r\n                this._camera.position.x = xp * Math.cos(rotationDelta) - yp * Math.sin(rotationDelta);\r\n                this._camera.position.y = yp * Math.cos(rotationDelta) + xp * Math.sin(rotationDelta);\r\n                this._camera.lookAt(this._scene.position);\r\n                break;\r\n            case 84: // T\r\n                this._camera.rotation.x += rotationDelta;\r\n                break;\r\n            case 71: // G\r\n                this._camera.rotation.x -= rotationDelta;\r\n                break;\r\n            case 70: // F\r\n                this._camera.rotation.y += rotationDelta;\r\n                break;\r\n            case 72: // H\r\n                this._camera.rotation.y -= rotationDelta;\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * objType includes point, line, face\r\n */\r\n\r\nenum objType {\r\n    point = 'point',\r\n    line = 'line',\r\n    face = 'face'\r\n}\r\n","module.exports = \"<div id=\\\"gi-viewer-container\\\">\\r\\n\\t<as-split direction=\\\"vertical\\\">\\r\\n\\t\\t<as-split-area [size]=\\\"68\\\" id=\\\"three-js\\\">\\r\\n\\t\\t\\t<threejs-viewer [model]='data' (eventClicked)=\\\"childEventClicked($event)\\\"></threejs-viewer>\\r\\n\\t\\t</as-split-area>\\r\\n\\t\\t<as-split-area [size]='32' id=\\\"attrib\\\">\\r\\n\\t\\t\\t<attribute [data]=\\\"data\\\" [refresh]=\\\"clickedEvent\\\"></attribute>\\r\\n\\t\\t\\t<button class='btn' id=\\\"settings_button\\\" mat-icon-button (click)=\\\"openModal('settings_modal')\\\"><mat-icon>settings</mat-icon></button>\\r\\n\\t\\t\\t<modal-window id=\\\"settings_modal\\\">\\r\\n\\t\\t\\t\\t<h1>Settings</h1>\\r\\n\\t\\t\\t\\t<ul>\\r\\n\\t\\t\\t\\t\\t<li [title] = \\\"!normalsEnabled?'No models available':''\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"label\\\">Normals</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"onoffswitch\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<input type=\\\"checkbox\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\tname=\\\"onoffswitch\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\tclass=\\\"onoffswitch-checkbox\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\tid=\\\"normalsOnOff\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t[checked]='settings.normals.show'\\r\\n\\t\\t\\t\\t\\t\\t\\t[disabled] = \\\"!normalsEnabled\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t(change)=\\\"settingOnChange('normals.show')\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t>\\r\\n\\t\\t\\t\\t\\t\\t\\t<label class=\\\"onoffswitch-label\\\" for=\\\"normalsOnOff\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"onoffswitch-inner\\\"></span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"onoffswitch-switch\\\"></span>\\r\\n\\t\\t\\t\\t\\t\\t\\t</label>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"slidecontainer\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<input type=\\\"range\\\" min=\\\"1\\\" max=\\\"100\\\" step=\\\"1\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t[value]=\\\"settings.normals.size\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\tclass=\\\"slider\\\" id=\\\"normalSize\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t(input)=\\\"settingOnChange('normals.size', $event.target.value)\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t[disabled] = \\\"!normalsEnabled\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" [value]=\\\"settings.normals.size\\\" disabled>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t</li>\\r\\n\\t\\t\\t\\t\\t<li>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"label\\\">Axes</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"onoffswitch\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<input type=\\\"checkbox\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\tname=\\\"onoffswitch\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\tclass=\\\"onoffswitch-checkbox\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\tid=\\\"axesOnOff\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t[checked]=\\\"settings.axes.show\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t(change)=\\\"settingOnChange('axes.show')\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<label class=\\\"onoffswitch-label\\\" for=\\\"axesOnOff\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"onoffswitch-inner\\\"></span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"onoffswitch-switch\\\"></span>\\r\\n\\t\\t\\t\\t\\t\\t\\t</label>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"slidecontainer\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<input type=\\\"range\\\" min=\\\"1\\\" max=\\\"1000\\\" step=\\\"1\\\" [value]=\\\"settings.axes.size\\\" class=\\\"slider\\\" id=\\\"axesSize\\\" (input)=\\\"settingOnChange('axes.size', $event.target.value)\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" [value]=\\\"settings.axes.size\\\" disabled>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t</li>\\r\\n\\t\\t\\t\\t\\t<li>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"label\\\">Grid</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"onoffswitch\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<input type=\\\"checkbox\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\tname=\\\"onoffswitch\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\tclass=\\\"onoffswitch-checkbox\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\tid=\\\"gridOnOff\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t[checked]='settings.grid.show'\\r\\n\\t\\t\\t\\t\\t\\t\\t(change)=\\\"settingOnChange('grid.show')\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t>\\r\\n\\t\\t\\t\\t\\t\\t\\t<label class=\\\"onoffswitch-label\\\" for=\\\"gridOnOff\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"onoffswitch-inner\\\"></span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"onoffswitch-switch\\\"></span>\\r\\n\\t\\t\\t\\t\\t\\t\\t</label>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"slidecontainer\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<input type=\\\"range\\\" min=\\\"10\\\" max=\\\"10000\\\" step=\\\"10\\\" [value]=\\\"settings.grid.size\\\" class=\\\"slider\\\" id=\\\"gridSize\\\" (input)=\\\"settingOnChange('grid.size', $event.target.value)\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" [value]=\\\"settings.grid.size\\\" disabled>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t</li>\\r\\n\\t\\t\\t\\t\\t<!-- <li>Shadow On/Off</li>\\r\\n\\t\\t\\t\\t\\t<li>Position color/size</li> -->\\r\\n\\t\\t\\t\\t</ul>\\r\\n\\t\\t\\t\\t<button (click)=\\\"closeModal('settings_modal', true);\\\" class=\\\"filebtn\\\">Save</button>\\r\\n\\t\\t\\t\\t<button (click)=\\\"closeModal('settings_modal');\\\" class='filebtn closebtn'>Close</button>\\r\\n\\t\\t\\t</modal-window>\\r\\n\\t\\t</as-split-area>\\r\\n\\t</as-split>\\r\\n</div>\\r\\n\"","module.exports = \"#gi-viewer-container {\\n  width: 100%;\\n  height: 100%;\\n  overflow: hidden; }\\n\\n.mat-tab-group {\\n  margin-bottom: 0px; }\\n\\nas-split-area {\\n  position: relative;\\n  overflow: hidden auto !important; }\\n\\n#settings_button {\\n  position: absolute;\\n  top: 2px;\\n  right: 10px;\\n  cursor: pointer;\\n  z-index: 800;\\n  display: inline-block;\\n  vertical-align: bottom;\\n  background-color: transparent;\\n  color: #808080;\\n  border: none;\\n  outline: none;\\n  padding: 0px;\\n  width: 40px;\\n  height: 40px;\\n  transition: 0.3s;\\n  font-size: 14px; }\\n\\n#settings_button:hover {\\n    color: #E6E6E6; }\\n\\n#settings_button.active {\\n    color: #00006d; }\\n\\n#attrib {\\n  overflow: hidden !important; }\\n\\n#attrib attribute {\\n    height: calc(100% - 10px);\\n    display: flex;\\n    flex-flow: column nowrap;\\n    justify-content: space-between; }\\n\\nmodal-window {\\n  display: none; }\\n\\nmodal-window h1 {\\n    font-size: 15px;\\n    font-weight: 550;\\n    line-height: 35px; }\\n\\nmodal-window ul {\\n    margin: 20px 0;\\n    padding: 0;\\n    background-color: transparent; }\\n\\nmodal-window ul li {\\n      list-style: none;\\n      padding: 10px 0;\\n      background-color: inherit;\\n      height: 15px;\\n      font-size: 12px;\\n      box-sizing: content-box;\\n      color: #373737;\\n      font-size: 12px;\\n      font-style: normal; }\\n\\nmodal-window ul li .label {\\n        float: left;\\n        line-height: 20px;\\n        width: 100px; }\\n\\nmodal-window ul li .label + div {\\n        float: left; }\\n\\nmodal-window ul li .label, modal-window ul li input {\\n        color: #373737;\\n        font-size: 12px;\\n        font-style: normal; }\\n\\nmodal-window ul li .label:hover, modal-window ul li input:hover {\\n          background-color: inherit; }\\n\\nmodal-window .closebtn {\\n    background: white;\\n    border: 1px solid #CCCCCC;\\n    box-sizing: border-box;\\n    margin-left: 10px; }\\n\\nbody.modal-open {\\n  overflow: hidden; }\\n\\n#settings_modal {\\n  /* The slider itself */\\n  /* Mouse-over effects */\\n  /* The slider handle (use -webkit- (Chrome, Opera, Safari, Edge) and -moz- (Firefox) to override default look) */ }\\n\\n#settings_modal /deep/ .modal-window .modal-body {\\n    background: #fafafb; }\\n\\n#settings_modal .onoffswitch {\\n    position: relative;\\n    width: 30px;\\n    height: 15px;\\n    box-sizing: border-box;\\n    vertical-align: middle;\\n    -webkit-user-select: none;\\n    -moz-user-select: none;\\n    -ms-user-select: none; }\\n\\n#settings_modal .onoffswitch-checkbox {\\n    display: none; }\\n\\n#settings_modal .onoffswitch-label {\\n    display: block;\\n    overflow: hidden;\\n    height: inherit;\\n    background-color: #CCCCCC;\\n    cursor: pointer; }\\n\\n#settings_modal .onoffswitch-switch {\\n    position: absolute;\\n    top: 1px;\\n    left: 1px;\\n    width: 13px;\\n    height: 13px;\\n    background: #E6E6E6; }\\n\\n#settings_modal .onoffswitch-checkbox:hover:not(:checked) + .onoffswitch-label {\\n    background-color: rgba(0, 0, 109, 0.4); }\\n\\n#settings_modal .onoffswitch-checkbox:hover:not(:checked) + .onoffswitch-label .onoffswitch-switch {\\n      box-shadow: 2px 0px 0px 0px; }\\n\\n#settings_modal .onoffswitch-checkbox:disabled + .onoffswitch-label {\\n    background-color: #CCCCCC !important; }\\n\\n#settings_modal .onoffswitch-checkbox:disabled + .onoffswitch-label .onoffswitch-switch {\\n      box-shadow: none !important; }\\n\\n#settings_modal .onoffswitch-checkbox:checked + .onoffswitch-label {\\n    background-color: #00006d; }\\n\\n#settings_modal .onoffswitch-checkbox:checked + .onoffswitch-label .onoffswitch-switch {\\n      right: 0px;\\n      left: calc(100% - 2px);\\n      -webkit-transform: translateX(-100%);\\n              transform: translateX(-100%); }\\n\\n#settings_modal .onoffswitch-checkbox:disabled:checked + .onoffswitch-label .onoffswitch-inner,\\n  #settings_modal .onoffswitch-checkbox:disabled:checked + .onoffswitch-label .onoffswitch-switch {\\n    cursor: help; }\\n\\n#settings_modal .slidecontainer {\\n    width: 100%;\\n    /* Width of the outside container */\\n    height: 15px; }\\n\\n#settings_modal .slidecontainer:hover {\\n      background-color: transparent; }\\n\\n#settings_modal .slider {\\n    -webkit-appearance: none;\\n    /* Override default CSS styles */\\n    -moz-appearance: none;\\n         appearance: none;\\n    width: calc(100% - 230px);\\n    max-width: 500px;\\n    height: 15px;\\n    /* Specified height */\\n    background: whitesmoke;\\n    /* Grey background */\\n    box-sizing: border-box;\\n    border: 2px solid #E6E6E6;\\n    outline: none;\\n    /* Remove outline */\\n    opacity: 0.7;\\n    /* Set transparency (for mouse-over effects on hover) */\\n    /* 0.2 seconds transition on hover */\\n    transition: opacity .2s;\\n    margin: 0; }\\n\\n#settings_modal .slider:hover {\\n    opacity: 1;\\n    /* Fully shown on mouse-over */ }\\n\\n#settings_modal .slider::-webkit-slider-thumb {\\n    -webkit-appearance: none;\\n    appearance: none;\\n    width: 5px;\\n    height: 15px;\\n    background: #CCCCCC;\\n    border: 1px solid #808080;\\n    cursor: pointer; }\\n\\n#settings_modal .slider::-webkit-slider-thumb:hover, #settings_modal .slider::-webkit-slider-thumb:active {\\n      background: #00006d; }\\n\\n#settings_modal .slider::-moz-range-thumb {\\n    width: 5px;\\n    height: 15px;\\n    background: #CCCCCC;\\n    cursor: pointer; }\\n\\n#settings_modal .slider:disabled::-webkit-slider-thumb {\\n    background: white; }\\n\\n#settings_modal .slider:disabled::-moz-range-thumb {\\n    background: white; }\\n\\n#settings_modal .slider:disabled {\\n    cursor: help; }\\n\\n#settings_modal input {\\n    margin-left: 10px !important; }\\n\\n#settings_modal input + input {\\n    vertical-align: top;\\n    border: none;\\n    line-height: 20px;\\n    background: transparent;\\n    width: 50px; }\\n\"","import { GIModel } from '@libs/geo-info/GIModel';\r\nimport * as THREE from 'three';\r\n\r\n// import @angular stuff\r\nimport { Component, Input, OnInit } from '@angular/core';\r\n// import app services\r\nimport { DataService } from './data/data.service';\r\nimport { ModalService } from './html/modal-window.service';\r\n// import others\r\n// import { ThreejsViewerComponent } from './threejs/threejs-viewer.component';\r\n\r\n/**\r\n * GIViewerComponent\r\n * This component is used in /app/model-viewers/model-viewers-container.component.html\r\n */\r\n@Component({\r\n    selector: 'gi-viewer',\r\n    templateUrl: './gi-viewer.component.html',\r\n    styleUrls: ['./gi-viewer.component.scss'],\r\n})\r\nexport class GIViewerComponent implements OnInit {\r\n    dataservice: DataService;\r\n    // model data passed to the viewer\r\n    @Input() data: GIModel;\r\n    modelData: GIModel;\r\n\r\n    settings: {\r\n        normals: { show: boolean, size: number },\r\n        axes: { show: boolean, size: number },\r\n        grid: { show: boolean, size: number },\r\n    } = {\r\n        normals: { show: false, size: 5 },\r\n        axes: { show: true, size: 50 },\r\n        grid: { show: true, size: 500 },\r\n    };\r\n\r\n    normalsEnabled = false;\r\n\r\n    public clickedEvent: Event;\r\n    /**\r\n     * constructor\r\n     * @param dataService\r\n     */\r\n    constructor(private dataService: DataService, private modalService: ModalService) {\r\n        //\r\n        if (localStorage.getItem('mpm_settings') === null) {\r\n            localStorage.setItem('mpm_settings', JSON.stringify(this.settings));\r\n        }\r\n    }\r\n\r\n    /**\r\n     * ngOnInit\r\n     */\r\n    ngOnInit() {\r\n        this.getSettings();\r\n        if (this.dataService.getThreejsScene() === undefined) {\r\n            this.dataService.setThreejsScene(this.settings);\r\n        }\r\n    }\r\n\r\n    private getSettings() {\r\n        if (localStorage.getItem('mpm_settings') != null) {\r\n            this.settings = JSON.parse(localStorage.getItem('mpm_settings'));\r\n        }\r\n    }\r\n\r\n    childEventClicked(event: Event) {\r\n        this.clickedEvent = event;\r\n    }\r\n\r\n    openModal(id: string) {\r\n        this.getSettings();\r\n        if (document.body.className === 'modal-open') {\r\n            this.modalService.close(id);\r\n        } else {\r\n            this.modalService.open(id);\r\n            const scene = this.dataService.getThreejsScene();\r\n            if (scene._threejs_nums.reduce((a, b) => a + b, 0) !== 0) {\r\n                scene.vnh !== undefined ? this.normalsEnabled = true : this.normalsEnabled = false;\r\n            }\r\n        }\r\n    }\r\n\r\n    closeModal(id: string, save = false) {\r\n        this.modalService.close(id);\r\n        if (save) {\r\n            this.dataService.getThreejsScene().settings = this.settings;\r\n            localStorage.setItem('mpm_settings', JSON.stringify(this.settings));\r\n            document.getElementById('executeButton').click();\r\n        }\r\n    }\r\n\r\n    settingOnChange(setting: string, value: number) {\r\n        const scene = this.dataService.getThreejsScene();\r\n        switch (setting) {\r\n            case 'normals.show':\r\n                this.settings.normals.show = !this.settings.normals.show;\r\n                scene.vnh.visible = this.settings.normals.show;\r\n                break;\r\n            case 'normals.size':\r\n                this.settings.normals.size = Number(value);\r\n                break;\r\n            case 'axes.show':\r\n                this.settings.axes.show = !this.settings.axes.show;\r\n                scene.axesHelper.visible = this.settings.axes.show;\r\n                break;\r\n            case 'axes.size':\r\n                this.settings.axes.size = Number(value);\r\n                scene._addAxes(Number(value));\r\n                break;\r\n            case 'grid.show':\r\n                this.settings.grid.show = !this.settings.grid.show;\r\n                scene.grid.visible = this.settings.grid.show;\r\n                break;\r\n            case 'grid.size':\r\n                this.settings.grid.size = Number(value);\r\n                scene._addGrid(this.settings.grid.size);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        scene._renderer.render(scene._scene, scene._camera);\r\n    }\r\n}\r\n","import { AngularSplitModule } from 'angular-split';\r\nimport { NgxPaginationModule} from 'ngx-pagination';\r\n// import @angular stuff\r\nimport { NgModule, ModuleWithProviders } from '@angular/core';\r\nimport { MatSliderModule } from '@angular/material/slider';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { MatTooltipModule} from '@angular/material/tooltip';\r\nimport { MatIconModule} from '@angular/material';\r\nimport { MatExpansionModule} from '@angular/material/expansion';\r\n\r\nimport { AttributeModule } from './attribute/attribute.module';\r\n\r\n// import app components\r\nimport { GIViewerComponent } from './gi-viewer.component';\r\nimport { ThreejsViewerComponent } from './threejs/threejs-viewer.component';\r\nimport { AttributeComponent } from './attribute/attribute.component';\r\n\r\nimport { TabComponent } from './attribute/tab.component';\r\nimport { TabsComponent } from './attribute/tabs.component';\r\nimport { DropdownMenuComponent } from './html/dropdown-menu.component';\r\nimport { ModalWindowComponent } from './html/modal-window.component';\r\nimport { ModalService } from './html/modal-window.service';\r\nimport { ThreeJSViewerService } from './threejs/threejs-viewer.service';\r\n/**\r\n * GIViewer\r\n * A viewer for Geo-Info models.\r\n */\r\n@NgModule({\r\n    declarations: [\r\n        GIViewerComponent,\r\n        ThreejsViewerComponent,\r\n        AttributeComponent,\r\n        TabComponent,\r\n        TabsComponent,\r\n        DropdownMenuComponent,\r\n        ModalWindowComponent\r\n    ],\r\n    exports: [\r\n        GIViewerComponent\r\n    ],\r\n    imports: [\r\n        CommonModule,\r\n        AngularSplitModule,\r\n        MatSliderModule,\r\n        MatIconModule,\r\n        NgxPaginationModule,\r\n        MatExpansionModule,\r\n        MatTooltipModule,\r\n        AttributeModule,\r\n        FormsModule\r\n    ],\r\n    providers: [\r\n        ModalService,\r\n        ThreeJSViewerService\r\n    ]\r\n})\r\nexport class GIViewerModule {\r\n     static forRoot(): ModuleWithProviders {\r\n        return {\r\n            ngModule: GIViewerModule\r\n        };\r\n    }\r\n}\r\n","module.exports = \"<div\\r\\n    [hidden]=\\\"!visible\\\"\\r\\n    [style.left.px]='position.x'\\r\\n    [style.top.px]='position.y'\\r\\n>\\r\\n    <ul>\\r\\n        <ol>Please choose:</ol>\\r\\n        <ol *ngFor=\\\"let item of items\\\" (click)=\\\"selectItem(item)\\\">{{item.label}}</ol>\\r\\n    </ul>\\r\\n</div>\\r\\n\"","module.exports = \"div {\\n  position: absolute; }\\n  div ul {\\n    padding: 0; }\\n  div ul ol {\\n      cursor: pointer;\\n      list-style: none;\\n      background: #ffffff;\\n      min-width: 20px;\\n      padding: 5px 10px; }\\n  div ul ol:hover {\\n        background: #eeeeee; }\\n\"","import { Component, Output, EventEmitter } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'dropdown-menu',\r\n    styleUrls: ['./dropdown-menu.component.scss'],\r\n    templateUrl: './dropdown-menu.component.html'\r\n})\r\nexport class DropdownMenuComponent {\r\n    @Output() selected = new EventEmitter<number>();\r\n    items: { id: number, label: string }[];\r\n    position: {x: number, y: number};\r\n    visible: boolean;\r\n\r\n    setItems(items: number[], label: string) {\r\n        const dropdownMenu = [];\r\n        items.map(item => dropdownMenu.push({ id: item, label: `${label}${item}` }));\r\n        console.log('dropdownMenu', dropdownMenu);\r\n        this.items = dropdownMenu;\r\n    }\r\n    selectItem(item: {id: number, label: string}) {\r\n        this.visible = false;\r\n        this.selected.emit(item.id);\r\n    }\r\n}\r\n","module.exports = \"<div class=\\\"modal-window\\\" id=\\\"modal-window\\\">\\r\\n    <div class=\\\"modal-body\\\">\\r\\n        <ng-content></ng-content>\\r\\n    </div>\\r\\n</div>\\r\\n<div class=\\\"modal-background\\\"></div>\"","module.exports = \"@charset \\\"UTF-8\\\";\\n.modal-window {\\n  max-width: 777px;\\n  position: absolute;\\n  top: 0;\\n  right: 0;\\n  bottom: 0;\\n  z-index: 1000;\\n  overflow: auto;\\n  -webkit-transition: transform 1s ease; }\\n.modal-window.open {\\n    -webkit-animation: slide 0.5s forwards;\\n    animation: slide 0.5s forwards; }\\n.modal-window     .modal-body {\\n    padding: 20px;\\n    background: #fff;\\n    margin: 0;\\n    height: calc(100% - 40px);\\n    position: relative; }\\n@-webkit-keyframes slide {\\n  100% {\\n    left: 0; } }\\n@keyframes slide {\\n  100% {\\n    left: 0; } }\\n.modal-background {\\n  position: fixed;\\n  top: 0;\\n  right: 0;\\n  bottom: 0;\\n  left: 0;\\n  background-color: transparent;\\n  opacity: 0.5;\\n  z-index: 900; }\\n\"","import { Component, Input, OnInit, OnDestroy, ElementRef, Output, EventEmitter } from '@angular/core';\r\nimport { ModalService } from './modal-window.service';\r\n\r\n@Component({\r\n    selector: 'modal-window',\r\n    styleUrls: ['./modal-window.component.scss'],\r\n    templateUrl: './modal-window.component.html'\r\n})\r\n\r\nexport class ModalWindowComponent implements OnInit, OnDestroy {\r\n    @Input() id: string;\r\n    private element: any;\r\n    private containerWidth: number;\r\n\r\n    constructor(private modalService: ModalService, private el: ElementRef) {\r\n        this.element = el.nativeElement;\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        const modal = this;\r\n\r\n        // ensure id attribute exists\r\n        if (!this.id) {\r\n            console.error('modal must have an id');\r\n            return;\r\n        }\r\n\r\n        const leftContent = document.getElementsByClassName('content__panel')[0];\r\n        this.containerWidth = leftContent.clientWidth;\r\n        const modalWindow = this.element.querySelector('.modal-window');\r\n        modalWindow.style.width = `${this.containerWidth + 11}px`;\r\n        modalWindow.style.left = `${-this.containerWidth - 11}px`;\r\n\r\n        // move element to bottom of page (just before </body>) so it can be displayed above everything else\r\n        document.body.appendChild(this.element);\r\n\r\n        // close modal on background click\r\n        this.element.addEventListener('click', function (e: any) {\r\n            if (e.target.className === 'modal-background') {\r\n                modal.close();\r\n            }\r\n        });\r\n\r\n        // add self (this modal instance) to the modal service so it's accessible from controllers\r\n        this.modalService.add(this);\r\n    }\r\n\r\n    // remove self from modal service when directive is destroyed\r\n    ngOnDestroy(): void {\r\n        this.modalService.remove(this.id);\r\n        this.element.remove();\r\n    }\r\n\r\n    // open modal\r\n    open(): void {\r\n        const modalWindow = document.getElementById('modal-window');\r\n        // modalWindow.style.left = 0;\r\n        modalWindow.classList.add('open');\r\n        this.element.style.display = 'block';\r\n        document.body.classList.add('modal-open');\r\n    }\r\n\r\n    // close modal\r\n    close(): void {\r\n        this.element.style.display = 'none';\r\n        const modalWindow = this.element.querySelector('.modal-window');\r\n        // modalWindow.style.left = `${-this.containerWidth - 11}px`;\r\n        modalWindow.classList.remove('open');\r\n        document.body.classList.remove('modal-open');\r\n    }\r\n}\r\n","export class ModalService {\r\n    private modals: any[] = [];\r\n    add(modal: any) {\r\n        // add modal to array of active modals\r\n        this.modals.push(modal);\r\n    }\r\n\r\n    remove(id: string) {\r\n        // remove modal from array of active modals\r\n        this.modals = this.modals.filter(x => x.id !== id);\r\n    }\r\n\r\n    open(id: string) {\r\n        const modal: any = this.modals.filter(x => x.id === id)[0];\r\n        modal.open();\r\n    }\r\n\r\n    close(id: string) {\r\n        // close modal specified by id\r\n        const modal: any = this.modals.filter(x => x.id === id)[0];\r\n        modal.close();\r\n    }\r\n}\r\n","module.exports = \"<div\\r\\n    id=\\\"threejs-container\\\"\\r\\n    (window:keydown)=\\\"onKeyDown($event)\\\"\\r\\n    (window:keyup)=\\\"onKeyUp($event)\\\"\\r\\n    (window:mousedown)=\\\"onMouseDown($event)\\\"\\r\\n    (window:mousemove)=\\\"onMouseMove($event)\\\"\\r\\n    (window:mouseup)=\\\"onMouseUp($event)\\\"\\r\\n>\\r\\n    <div\\r\\n        *ngIf=\\\"_model_error\\\"\\r\\n        style=\\\"position:absolute;color:red;margin-top: 50px;left:40%;text-align: center;font-family:sans-serif;font-size: 14px;background-color: white;\\\"\\r\\n    >\\r\\n        Error displaying model:{{text}}\\r\\n    </div>\\r\\n    <div\\r\\n        *ngIf=\\\"_no_model\\\"\\r\\n        style=\\\"position:absolute;color:red;margin-top: 50px;left:40%;text-align: center;font-family:sans-serif;font-size: 14px;background-color: white;\\\"\\r\\n    >\\r\\n        Model or Scene not defined.\\r\\n    </div>\\r\\n    <div\\r\\n        *ngIf=\\\"messageVisible\\\"\\r\\n        style=\\\"position:absolute;color:orange;margin-top: 50px;left:40%;padding:10px;text-align: center;font-family:sans-serif;font-size: 14px;background-color: white;\\\"\\r\\n    >\\r\\n        {{message}}\\r\\n    </div>\\r\\n\\r\\n\\r\\n    <!-- <button id=\\\"zoomingfit\\\"  \\r\\n        [class.visible]=\\\"Visible === 'zoomfit'\\\" \\r\\n        (click)=\\\"zoomfit()\\\">\\r\\n        <span matTooltip=\\\"zoom to fit\\\"><i class=\\\"fa fa-arrows-alt\\\"></i></span>\\r\\n    </button> -->\\r\\n    <button\\r\\n        id=\\\"zoomingfit\\\"\\r\\n        mat-icon-button\\r\\n        [class.visible]=\\\"Visible === 'zoomfit'\\\"\\r\\n        (click)=\\\"zoomfit()\\\"\\r\\n    >\\r\\n        <mat-icon svgIcon=\\\"cZoom\\\"></mat-icon>\\r\\n    </button>\\r\\n\\r\\n\\r\\n    <!-- <button id=\\\"selecting\\\" [class.visible]=\\\"Visible === 'select'\\\" (click)= \\\"select($event, Visible)\\\" ><i class=\\\"fa fa-mouse-pointer\\\"></i></button> -->\\r\\n    <!-- <button id=\\\"setting\\\" [class.selected]=\\\"settingVisible\\\" (click)= \\\"setting(settingVisible)\\\"><i class=\\\"fa fa-cog\\\"></i></button> -->\\r\\n    <!-- <button id=\\\"selecting\\\" [class.selected]=\\\"seVisible\\\" (click)= \\\"select(seVisible)\\\" ><span matTooltip=\\\"select\\\"><i class=\\\"fa fa-mouse-pointer\\\"></i></span></button> -->\\r\\n    <button\\r\\n        id=\\\"EntitySelection\\\"\\r\\n        mat-icon-button\\r\\n        (click)=\\\"selectDropdownVisible = !selectDropdownVisible; needSelect=false\\\"\\r\\n    >\\r\\n        <mat-icon>near_me</mat-icon>\\r\\n        <div\\r\\n            [hidden]=\\\"needSelect?(!needSelect&&selectDropdownVisible):!needSelect\\\"\\r\\n            class=\\\"needSelect\\\"\\r\\n        ></div>\\r\\n    </button>\\r\\n    <span\\r\\n        *ngIf=\\\"!selectDropdownVisible\\\"\\r\\n        id=\\\"SelectingEntityType\\\"\\r\\n        matTooltip=\\\"Selecting {{SelectingEntityType.name}}\\\"\\r\\n    >\\r\\n        {{SelectingEntityType.id}}\\r\\n    </span>\\r\\n    <div\\r\\n        id=\\\"selectDropdown\\\"\\r\\n        *ngIf=\\\"selectDropdownVisible == true\\\"\\r\\n    >\\r\\n        <button\\r\\n            *ngFor=\\\"let selection of selections\\\"\\r\\n            (click)=\\\"selectEntityType(selection); needSelect=false\\\"\\r\\n            [class.active]=\\\"SelectingEntityType.id === selection.id\\\"\\r\\n        >\\r\\n            <span matTooltip=\\\"Select {{selection.name}}\\\">{{selection.id}}</span>\\r\\n        </button>\\r\\n    </div>\\r\\n\\r\\n\\r\\n    <div id=\\\"shownumber\\\">\\r\\n        <tbody>\\r\\n            <tr>\\r\\n                <td\\r\\n                    align=left\\r\\n                    style=\\\"width: 60px;\\\"\\r\\n                >\\r\\n                    Triangles&nbsp;&nbsp;\\r\\n                </td>\\r\\n                <td\\r\\n                    align=left\\r\\n                    style=\\\"width: 10px;\\\"\\r\\n                >\\r\\n                    {{_threejs_nums[2]}}\\r\\n                </td>\\r\\n            </tr>\\r\\n            <tr>\\r\\n                <td\\r\\n                    align=left\\r\\n                    style=\\\"width: 60px;\\\"\\r\\n                >\\r\\n                    Lines\\r\\n                </td>\\r\\n                <td\\r\\n                    align=left\\r\\n                    style=\\\"width: 10px;\\\"\\r\\n                >\\r\\n                    {{_threejs_nums[1]}}\\r\\n                </td>\\r\\n            </tr>\\r\\n            <tr>\\r\\n                <td\\r\\n                    align=left\\r\\n                    style=\\\"width: 60px;\\\"\\r\\n                >\\r\\n                    Points&nbsp;&nbsp;\\r\\n                </td>\\r\\n                <td\\r\\n                    align=left\\r\\n                    style=\\\"width: 10px;\\\"\\r\\n                >\\r\\n                    {{_threejs_nums[0]}}\\r\\n                </td>\\r\\n            </tr>\\r\\n        </tbody>\\r\\n    </div>\\r\\n\\r\\n\\r\\n    <dropdown-menu (selected)='selectEntity($event)'></dropdown-menu>\\r\\n    <!-- <button id=\\\"imagery\\\"  \\r\\n        [class.selected]=\\\"imVisible\\\" (click)=\\\"leaflet()\\\">I\\r\\n        </button> -->\\r\\n    <!-- setting -->\\r\\n\\r\\n\\r\\n    <!-- <app-setting *ngIf=\\\"settingVisible == true\\\"></app-setting> -->\\r\\n</div>\\r\\n\"","module.exports = \"button {\\n  cursor: pointer; }\\n  button:focus {\\n    outline: none; }\\n  :host {\\n  width: 100%;\\n  height: 100%;\\n  background-color: green;\\n  overflow: hidden; }\\n  #threejs-container {\\n  position: relative;\\n  height: 100%;\\n  width: 100%;\\n  margin: 0px;\\n  overflow: hidden;\\n  font-family: sans-serif; }\\n  #container-top-right-resize {\\n  top: 0px;\\n  right: 0px; }\\n  #shownumber {\\n  position: absolute;\\n  bottom: 5px;\\n  right: 5px;\\n  background: rgba(255, 255, 255, 0.3);\\n  padding: 10px;\\n  color: #2a8ac5; }\\n  /*#rotating{\\r\\n    width: 30px;\\r\\n    height: 25px;\\r\\n    font-size:15px;\\r\\n    right:0px; \\r\\n    text-align:center;\\r\\n    position: absolute;\\r\\n    top: 0px;\\r\\n    background-color:transparent;\\r\\n    border:0;\\r\\n}\\r\\n\\r\\n#paning{\\r\\n    width: 30px;\\r\\n    height: 25px;\\r\\n    font-size:15px;\\r\\n    right:0px; \\r\\n    text-align:center;\\r\\n    position: absolute;\\r\\n    top: 25px;\\r\\n    background-color:transparent;\\r\\n    border:0;\\r\\n}\\r\\n\\r\\n#zooming{\\r\\n    width: 30px;\\r\\n    height: 25px;\\r\\n    font-size:15px;\\r\\n    right:0px; \\r\\n    text-align:center;\\r\\n    position: absolute;\\r\\n    margin-top: 50px;\\r\\n    background-color:transparent;\\r\\n    border:0;\\r\\n}*/\\n  /*#imagery{\\r\\n    width: 30px;\\r\\n    height: 25px;\\r\\n    font-size:14px;\\r\\n    right:0px; \\r\\n    text-align:center;\\r\\n    position: absolute;\\r\\n    margin-top: 10px;\\r\\n    background-color:transparent;\\r\\n    border:0;\\r\\n}*/\\n  #zoomingfit {\\n  width: 40px;\\n  height: 40px;\\n  font-size: 15px;\\n  position: absolute;\\n  top: 0px;\\n  right: 0px;\\n  text-align: center;\\n  color: #505050;\\n  background-color: transparent;\\n  border: 0; }\\n  #EntitySelection {\\n  width: 40px;\\n  height: 40px;\\n  font-size: 15px;\\n  position: absolute;\\n  top: 40px;\\n  right: 0px;\\n  text-align: center;\\n  color: #505050;\\n  background-color: transparent;\\n  border: 0; }\\n  .needSelect {\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  width: 40px;\\n  height: 40px;\\n  border-radius: 50%;\\n  background-color: white;\\n  opacity: 0;\\n  -webkit-animation: scaleIn 2s infinite cubic-bezier(0.36, 0.11, 0.89, 0.32);\\n          animation: scaleIn 2s infinite cubic-bezier(0.36, 0.11, 0.89, 0.32); }\\n  @-webkit-keyframes scaleIn {\\n  from {\\n    -webkit-transform: scale(0.8, 0.8);\\n            transform: scale(0.8, 0.8);\\n    opacity: .5; }\\n  to {\\n    -webkit-transform: scale(1.2, 1.2);\\n            transform: scale(1.2, 1.2);\\n    opacity: 0; } }\\n  @keyframes scaleIn {\\n  from {\\n    -webkit-transform: scale(0.8, 0.8);\\n            transform: scale(0.8, 0.8);\\n    opacity: .5; }\\n  to {\\n    -webkit-transform: scale(1.2, 1.2);\\n            transform: scale(1.2, 1.2);\\n    opacity: 0; } }\\n  #SelectingEntityType {\\n  width: 40px;\\n  font-size: 15px;\\n  position: absolute;\\n  text-align: center;\\n  color: #505050;\\n  top: 75px;\\n  right: 0px; }\\n  #selectDropdown {\\n  position: absolute;\\n  top: 70px;\\n  right: 5px; }\\n  #selectDropdown button {\\n    width: 30px;\\n    height: 25px;\\n    font: 15px bolder;\\n    display: block;\\n    background-color: transparent;\\n    border: 0;\\n    font-family: sans-serif;\\n    color: #505050;\\n    cursor: pointer; }\\n  #selectDropdown button.active {\\n      background-color: #f3f3f3; }\\n  #selectDropdown button:hover {\\n      background-color: #dadada; }\\n  #setting {\\n  width: 30px;\\n  height: 25px;\\n  font-size: 15px;\\n  right: 0px;\\n  text-align: center;\\n  position: absolute;\\n  top: 10px;\\n  background-color: transparent;\\n  border: 0; }\\n  .visible {\\n  color: grey; }\\n  .selectvisible {\\n  background-color: white !important;\\n  color: #395d73; }\\n\"","import { GIModel } from '@libs/geo-info/GIModel';\r\n// import @angular stuff\r\nimport {\r\n    Component, OnInit, Input, Output, EventEmitter,\r\n    Injector, ElementRef, DoCheck, OnChanges, SimpleChanges, ViewChild\r\n} from '@angular/core';\r\nimport { DataThreejs } from '../data/data.threejs';\r\n// import { IModel } from 'gs-json';\r\nimport { DataService } from '../data/data.service';\r\nimport { EEntType, EAttribNames, EEntTypeStr, Txyz } from '@libs/geo-info/common';\r\nimport { DropdownMenuComponent } from '../html/dropdown-menu.component';\r\nimport { ModalService } from '../html/modal-window.service';\r\nimport { ThreeJSViewerService } from './threejs-viewer.service';\r\n\r\n/**\r\n * A threejs viewer for viewing geo-info (GI) models.\r\n * This component gets used in /app/model-viewers/all-viewers/gi-viewer/gi-viewer.component.html\r\n */\r\n@Component({\r\n    selector: 'threejs-viewer',\r\n    templateUrl: './threejs-viewer.component.html',\r\n    styleUrls: ['./threejs-viewer.component.scss']\r\n})\r\nexport class ThreejsViewerComponent implements OnInit, DoCheck, OnChanges {\r\n    @Output() eventClicked = new EventEmitter<Event>();\r\n    @Input() model: GIModel;\r\n    @ViewChild(DropdownMenuComponent) dropdown = new DropdownMenuComponent();\r\n\r\n    protected modalWindow: ModalService;\r\n    public container = null;\r\n    public _elem;\r\n    // viewer size\r\n    public _width: number;\r\n    public _height: number;\r\n    // DataService\r\n    protected dataService: DataService;\r\n    // threeJS scene data\r\n    public _data_threejs: DataThreejs;\r\n    // num of positions, edges, triangles in threejs\r\n    public _threejs_nums: [number, number, number];\r\n    // flags for displayinhg text in viewer, see html\r\n    public _no_model = false;\r\n    public _model_error = false;\r\n    public messageVisible = false;\r\n    public message: string;\r\n    // the selectable type of entity by user, depends on the Attribute Tab\r\n    public selectable: number;\r\n\r\n    // right selection dropdown\r\n    public needSelect = false;\r\n    // current entity type enabled for selection\r\n    public SelectingEntityType: { id: string, name: string } = { id: EEntTypeStr[EEntType.FACE], name: 'Faces' };\r\n    public selectDropdownVisible = false;\r\n    public selections = [\r\n        { id: EEntTypeStr[EEntType.POSI], name: 'Positions' }, { id: EEntTypeStr[EEntType.VERT], name: 'Vetex' },\r\n        { id: EEntTypeStr[EEntType.EDGE], name: 'Edges' }, { id: EEntTypeStr[EEntType.WIRE], name: 'Wires' },\r\n        { id: EEntTypeStr[EEntType.FACE], name: 'Faces' }, { id: EEntTypeStr[EEntType.POINT], name: 'Points' },\r\n        { id: EEntTypeStr[EEntType.PLINE], name: 'Polylines' }, { id: EEntTypeStr[EEntType.PGON], name: 'Polygons' },\r\n        { id: EEntTypeStr[EEntType.COLL], name: 'Collections' }];\r\n\r\n    public dropdownPosition = { x: 0, y: 0 };\r\n\r\n    private isDown = false;\r\n    private lastX: number;\r\n    private lastY: number;\r\n    private dragHash: number;\r\n    private shiftKeyPressed = false;\r\n    /**\r\n     * Creates a new viewer,\r\n     * @param injector\r\n     * @param elem\r\n     */\r\n    constructor(injector: Injector, elem: ElementRef, private threeJSViewerService: ThreeJSViewerService) {\r\n        this._elem = elem;\r\n        this.dataService = injector.get(DataService);\r\n        this.modalWindow = injector.get(ModalService);\r\n    }\r\n    /**\r\n     * Called when the viewer is initialised.\r\n     */\r\n    ngOnInit() {\r\n        this.dropdown.items = [];\r\n        this.dropdown.visible = false;\r\n        this.dropdown.position = { x: 0, y: 0 };\r\n        // console.log('CALLING ngOnInit in THREEJS VIEWER COMPONENT');\r\n        this.container = this._elem.nativeElement.children.namedItem('threejs-container');\r\n        // check for container\r\n        if (!this.container) {\r\n            console.error('No container in Three Viewer');\r\n            return;\r\n        }\r\n        // size of window\r\n        this._width = this.container.offsetWidth; // container.client_width;\r\n        this._height = this.container.offsetHeight; // container.client_height;\r\n\r\n        this._data_threejs = this.dataService.getThreejsScene();\r\n        this.threeJSViewerService.DataThreejs = this._data_threejs;\r\n        this.container.appendChild(this._data_threejs._renderer.domElement);\r\n        // set the numbers of entities\r\n        this._threejs_nums = this._data_threejs._threejs_nums;\r\n        // ??? What is happening here?\r\n        const self = this;\r\n        this._data_threejs._controls.addEventListener('change', function () { self.render(self); });\r\n        self._data_threejs._renderer.render(self._data_threejs._scene, self._data_threejs._camera);\r\n\r\n        if (this._data_threejs.ObjLabelMap.size !== 0) {\r\n            this._data_threejs.ObjLabelMap.forEach((obj, label) => {\r\n                this._data_threejs.createLabelforObj(this.container, obj.entity, obj.type, label);\r\n            });\r\n        }\r\n\r\n        if (localStorage.getItem('mpm_selecting_entity_type') === null) {\r\n            localStorage.setItem('mpm_selecting_entity_type', JSON.stringify(this.SelectingEntityType));\r\n        } else {\r\n            this.getSelectingEntityType();\r\n        }\r\n    }\r\n    /**\r\n     * @param self\r\n     */\r\n    public render(self) {\r\n        // console.log('CALLING render in THREEJS VIEWER COMPONENT');\r\n        const textLabels = this._data_threejs._textLabels;\r\n        if (textLabels.size !== 0) {\r\n            textLabels.forEach((label) => {\r\n                label.updatePosition();\r\n            });\r\n        }\r\n        self._data_threejs._renderer.render(self._data_threejs._scene, self._data_threejs._camera);\r\n    }\r\n\r\n    /**\r\n     * Called when anything changes\r\n     */\r\n    ngDoCheck() {\r\n        if (!this.container) {\r\n            console.error('No container in Three Viewer');\r\n            return;\r\n        }\r\n        const width: number = this.container.offsetWidth;\r\n        const height: number = this.container.offsetHeight;\r\n\r\n        // this is when dimensions change\r\n        if (width !== this._width || height !== this._height) {\r\n            this._width = width;\r\n            this._height = height;\r\n            setTimeout(() => {\r\n                this._data_threejs._camera.aspect = this._width / this._height;\r\n                this._data_threejs._camera.updateProjectionMatrix();\r\n                this._data_threejs._renderer.setSize(this._width, this._height);\r\n                this.render(this);\r\n            }, 10);\r\n        }\r\n    }\r\n\r\n    // receive data -> model from gi-viewer component and update model in the scene\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        if (changes['model']) {\r\n            if (this.model) {\r\n                this.updateModel(this.model);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Update the model in the viewer.\r\n     */\r\n    public async updateModel(model: GIModel) {\r\n        this._data_threejs = this.dataService.getThreejsScene();\r\n        if (!model) {\r\n            console.warn('Model or Scene not defined.');\r\n            this._no_model = true;\r\n            return;\r\n        } else {\r\n            if (model !== this._data_threejs._model) {\r\n                this._data_threejs._model = model;\r\n                try {\r\n                    // add geometry to the scene\r\n                    this._data_threejs.addGeometry(model, this.container);\r\n                    this._model_error = false;\r\n                    this._no_model = false;\r\n                    this.render(this);\r\n                } catch (ex) {\r\n                    console.error('Error displaying model:', ex);\r\n                    this._model_error = true;\r\n                    this._data_threejs._text = ex;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    // private initRaycaster(event) {\r\n    //     const scene = this._data_threejs;\r\n    //     scene._mouse.x = (event.offsetX / scene._renderer.domElement.clientWidth) * 2 - 1;\r\n    //     scene._mouse.y = - (event.offsetY / scene._renderer.domElement.clientHeight) * 2 + 1;\r\n    //     scene._raycaster.setFromCamera(scene._mouse, scene._camera);\r\n    //     return scene._raycaster.intersectObjects(scene.sceneObjs);\r\n    // }\r\n\r\n    private onMouseUp(event) {\r\n        if (event.target.tagName !== 'CANVAS') {\r\n            return null;\r\n        } else {\r\n            if (this.dragHash < 5) {\r\n                this.onUserAction(event);\r\n            } else {\r\n                // this._data_threejs._controls.enabled = true;\r\n            }\r\n            this.isDown = false;\r\n        }\r\n    }\r\n\r\n    public onMouseMove(event) {\r\n        const tags = document.getElementsByTagName('body');\r\n        const length = tags.length;\r\n        if (event.target.tagName !== 'CANVAS') {\r\n            let index = 0;\r\n            for (; index < length; index++) {\r\n                tags[index].style.cursor = 'default';\r\n            }\r\n            return null;\r\n        } else {\r\n            const intersects = this.threeJSViewerService.initRaycaster(event);\r\n            if (intersects.length > 0) {\r\n                let index = 0;\r\n                for (; index < length; index++) {\r\n                    tags[index].style.cursor = 'pointer';\r\n                }\r\n            } else {\r\n                let index = 0;\r\n                for (; index < length; index++) {\r\n                    tags[index].style.cursor = 'default';\r\n                }\r\n            }\r\n\r\n            if (!this.isDown) { return; }\r\n            // event.preventDefault();\r\n            const mouseX = event.clientX - event.target.getBoundingClientRect().left;\r\n            const mouseY = event.clientY - event.target.getBoundingClientRect().top;\r\n\r\n            // Put your mousemove stuff here\r\n            const dx = mouseX - this.lastX;\r\n            const dy = mouseY - this.lastY;\r\n            this.lastX = mouseX;\r\n            this.lastY = mouseY;\r\n\r\n            // accumulate the drag distance\r\n            // (used in mouseup to see if this is a drag or click)\r\n            this.dragHash += Math.abs(dx) + Math.abs(dy);\r\n\r\n            if (this.dragHash > 4) {\r\n                // dragging\r\n            }\r\n        }\r\n    }\r\n\r\n    private onMouseDown(event) {\r\n        if (event.target.tagName !== 'CANVAS') {\r\n            return null;\r\n        } else {\r\n            event.stopPropagation();\r\n\r\n            this.lastX = event.clientX - event.target.getBoundingClientRect().left;\r\n            this.lastY = event.clientY - event.target.getBoundingClientRect().top;\r\n\r\n            // Put your mousedown stuff here\r\n            this.dragHash = 0;\r\n            this.isDown = true;\r\n        }\r\n    }\r\n\r\n    private onKeyDown(event) {\r\n        const scene = this._data_threejs;\r\n        // keyboard control for camera\r\n        scene.onWindowKeyPress(event);\r\n        if (event.shiftKey) {\r\n            this.shiftKeyPressed = true;\r\n        }\r\n        this.render(this);\r\n    }\r\n\r\n    private onKeyUp(event) {\r\n        this.shiftKeyPressed = false;\r\n    }\r\n\r\n    public onUserAction(event) {\r\n        // get entities for mouse event\r\n        const intersects = this.threeJSViewerService.initRaycaster(event);\r\n\r\n        // check intersect exist\r\n        if (intersects.length > 0) {\r\n            // console.log(intersects[0]);\r\n            if (event.which === 1) {\r\n                // check mouse event triggered in THREE viewer, then enable dropdown menu\r\n                if (event.target.tagName === 'CANVAS') {\r\n                    const pos_x = event.clientX - event.target.getBoundingClientRect().left;\r\n                    const pos_y = event.clientY - event.target.getBoundingClientRect().top;\r\n                    this.dropdownPosition = { x: pos_x, y: pos_y };\r\n                }\r\n                this.selectObj(intersects[0]);\r\n                // intersects[0].object.material.emissive.setHex( 0xff0000 );\r\n            }\r\n        } else {\r\n            if (event.target.tagName === 'CANVAS') {\r\n                this.unselectAll();\r\n                if (event.target.tagName !== 'OL') {\r\n                    // not clicking on Menu item, hide dropdown menu\r\n                    this.dropdown.visible = false;\r\n                    // return;\r\n                }\r\n            }\r\n        }\r\n        this.refreshTable(event);\r\n    }\r\n\r\n    private refreshTable(event: Event) {\r\n        this.eventClicked.emit(event);\r\n    }\r\n\r\n    private unselectAll() {\r\n        const scene = this._data_threejs;\r\n        const selectings = Array.from(scene.selected_geoms.keys());\r\n        for (const selecting of selectings) {\r\n            scene.unselectObj(selecting, this.container);\r\n        }\r\n        document.querySelectorAll('[id^=textLabel_]').forEach(value => {\r\n            this.container.removeChild(value);\r\n        });\r\n        this._data_threejs._textLabels.clear();\r\n\r\n        this.dataService.selected_ents.forEach(map => {\r\n            map.clear();\r\n        });\r\n        this.refreshTable(event);\r\n        scene.sceneObjsSelected.clear();\r\n        // if (this.SelectingEntityType.id === EEntTypeStr[EEntType.COLL]) {\r\n        //     document.getElementById('executeButton').click();\r\n        // }\r\n        const positions = Array.from(scene.selected_positions.keys());\r\n        for (const posi of positions) {\r\n            scene.unselectObjGroup(posi, this.container, 'positions');\r\n        }\r\n\r\n        const edges = Array.from(scene.selected_face_edges.keys());\r\n        for (const edge of edges) {\r\n            scene.unselectObjGroup(edge, this.container, 'face_edges');\r\n        }\r\n\r\n        this.render(this);\r\n    }\r\n\r\n    private getSelectingEntityType() {\r\n        if (localStorage.getItem('mpm_selecting_entity_type') != null) {\r\n            this.SelectingEntityType = JSON.parse(localStorage.getItem('mpm_selecting_entity_type'));\r\n        }\r\n    }\r\n\r\n    private selectObj(intersect0: THREE.Intersection) {\r\n        // console.log('interecting object', intersect);\r\n        const scene = this._data_threejs;\r\n        this.getSelectingEntityType();\r\n        switch (this.SelectingEntityType.id) {\r\n            case EEntTypeStr[EEntType.POSI]:\r\n                if (intersect0.object.type === 'Mesh') {\r\n                    const tri = scene.tri_select_map.get(intersect0.faceIndex);\r\n                    const face = this.model.geom.query.navTriToFace(tri);\r\n                    const ent_id = `_f_posi${face}`;\r\n                    if (scene.selected_positions.has(ent_id)) {\r\n                        this.unselectGeom(ent_id, EEntTypeStr[EEntType.POSI]);\r\n                    } else {\r\n                        if (!this.shiftKeyPressed) {\r\n                            this.unselectAll();\r\n                        }\r\n                        this.selectPositions(intersect0, face, ent_id);\r\n                    }\r\n                } else if (intersect0.object.type === 'LineSegments') {\r\n                    const ent_id = `_e_posi${intersect0.index / 2}`;\r\n                    if (scene.selected_positions.has(ent_id)) {\r\n                        this.unselectGeom(ent_id, EEntTypeStr[EEntType.POSI]);\r\n                    } else {\r\n                        if (!this.shiftKeyPressed) {\r\n                            this.unselectAll();\r\n                        }\r\n                        this.selectPositions(intersect0, null, ent_id);\r\n                    }\r\n                } else if (intersect0.object.type === 'Points') {\r\n                    const ent_id = `_pt_posi${intersect0.index}`;\r\n                    if (scene.selected_positions.has(ent_id)) {\r\n                        this.unselectGeom(ent_id, EEntTypeStr[EEntType.POSI]);\r\n                    } else {\r\n                        if (!this.shiftKeyPressed) {\r\n                            this.unselectAll();\r\n                        }\r\n                        this.selectPositions(intersect0, null, ent_id);\r\n                    }\r\n                }\r\n                break;\r\n            case EEntTypeStr[EEntType.VERT]:\r\n                this.selectVertex(intersect0);\r\n                break;\r\n            case EEntTypeStr[EEntType.COLL]:\r\n                if (!this.shiftKeyPressed) {\r\n                    this.unselectAll();\r\n                }\r\n                this.selectColl(intersect0, intersect0.object.type);\r\n                break;\r\n            case EEntTypeStr[EEntType.FACE]:\r\n                if (intersect0.object.type === 'Mesh') {\r\n                    const tri = scene.tri_select_map.get(intersect0.faceIndex);\r\n                    const face = this.model.geom.query.navTriToFace(tri);\r\n                    const ent_id = `${EEntTypeStr[EEntType.FACE]}${face}`;\r\n                    if (scene.selected_geoms.has(ent_id)) {\r\n                        this.unselectGeom(ent_id, EEntTypeStr[EEntType.FACE]);\r\n                    } else {\r\n                        if (!this.shiftKeyPressed) {\r\n                            this.unselectAll();\r\n                        }\r\n                        this.selectFace(face);\r\n                    }\r\n                } else {\r\n                    this.showMessages('Faces', true);\r\n                }\r\n                break;\r\n            case EEntTypeStr[EEntType.PGON]:\r\n                if (intersect0.object.type === 'Mesh') {\r\n                    const tri = scene.tri_select_map.get(intersect0.faceIndex);\r\n                    const face = this.model.geom.query.navTriToFace(tri);\r\n                    const pgon = this.model.geom.query.navFaceToPgon(face);\r\n                    const ent_id = `${EEntTypeStr[EEntType.PGON]}${pgon}`;\r\n                    if (scene.selected_geoms.has(ent_id)) {\r\n                        this.unselectGeom(ent_id, EEntTypeStr[EEntType.PGON]);\r\n                    } else {\r\n                        if (!this.shiftKeyPressed) {\r\n                            this.unselectAll();\r\n                        }\r\n                        this.selectPGon(face);\r\n                    }\r\n                } else {\r\n                    this.showMessages('Polygons', true);\r\n                }\r\n                break;\r\n            case EEntTypeStr[EEntType.EDGE]:\r\n                if (intersect0.object.type === 'LineSegments') {\r\n                    const ent_id = `${EEntTypeStr[EEntType.EDGE]}${intersect0.index / 2}`;\r\n                    if (scene.selected_geoms.has(ent_id)) {\r\n                        this.unselectGeom(ent_id, EEntTypeStr[EEntType.EDGE]);\r\n                    } else {\r\n                        if (!this.shiftKeyPressed) {\r\n                            this.unselectAll();\r\n                        }\r\n                        this.selectEdge(intersect0);\r\n                    }\r\n                } else if (intersect0.object.type === 'Mesh') {\r\n                    const tri = scene.tri_select_map.get(intersect0.faceIndex);\r\n                    const face = this.model.geom.query.navTriToFace(tri);\r\n                    const ent_id = `${EEntTypeStr[EEntType.FACE]}${face}`;\r\n                    if (scene.selected_face_edges.has(ent_id)) {\r\n                        this.unselectGeom(ent_id, 'face_edges');\r\n                    } else {\r\n                        if (!this.shiftKeyPressed) {\r\n                            this.unselectAll();\r\n                        }\r\n                        this.selectEdgeByFace(face, ent_id);\r\n                    }\r\n                } else {\r\n                    this.showMessages('Edges', true);\r\n                }\r\n                break;\r\n            case EEntTypeStr[EEntType.WIRE]:\r\n                if (intersect0.object.type === 'LineSegments') {\r\n                    const wire = this.model.geom.query.navEdgeToWire(intersect0.index / 2);\r\n                    const ent_id = `${EEntTypeStr[EEntType.WIRE]}${wire}`;\r\n                    if (scene.selected_geoms.has(ent_id)) {\r\n                        this.unselectGeom(ent_id, EEntTypeStr[EEntType.WIRE]);\r\n                    } else {\r\n                        if (!this.shiftKeyPressed) {\r\n                            this.unselectAll();\r\n                        }\r\n                        this.selectWire(intersect0);\r\n                    }\r\n                } else {\r\n                    this.showMessages('Wires', true);\r\n                }\r\n                break;\r\n            case EEntTypeStr[EEntType.PLINE]:\r\n                if (intersect0.object.type === 'LineSegments') {\r\n                    const wire = this.model.geom.query.navEdgeToWire(intersect0.index / 2);\r\n                    const pline = this.model.geom.query.navWireToPline(wire);\r\n                    const ent_id = `${EEntTypeStr[EEntType.PLINE]}${pline}`;\r\n                    if (scene.selected_geoms.has(ent_id)) {\r\n                        this.unselectGeom(ent_id, EEntTypeStr[EEntType.PLINE]);\r\n                    } else {\r\n                        if (!this.shiftKeyPressed) {\r\n                            this.unselectAll();\r\n                        }\r\n                        this.selectPLine(intersect0);\r\n                    }\r\n                } else {\r\n                    this.showMessages('Polylines', true);\r\n                }\r\n                break;\r\n            case EEntTypeStr[EEntType.POINT]:\r\n                if (intersect0.object.type === 'Points') {\r\n                    const ent_id = `${EEntTypeStr[EEntType.POINT]}${intersect0.index}`;\r\n                    if (scene.selected_geoms.has(ent_id)) {\r\n                        this.unselectGeom(ent_id, EEntTypeStr[EEntType.POINT]);\r\n                    } else {\r\n                        if (!this.shiftKeyPressed) {\r\n                            this.unselectAll();\r\n                        }\r\n                        this.selectPoint(intersect0);\r\n                    }\r\n                } else {\r\n                    this.showMessages('Points', true);\r\n                }\r\n                break;\r\n            default:\r\n                this.showMessages('Please choose an Entity type.', true, 'custom');\r\n                break;\r\n            // if (intersect0.object.type === 'LineSegments') {\r\n            //     const intersect1 = intersects[1];\r\n            //     if (intersect1 && intersect0.distance === intersect1.distance) {\r\n            //         this.chooseLine(intersect0, intersect1);\r\n            //         this.selectWire(intersect0);\r\n            //     } else {\r\n            //         this.selectEdge(intersect0);\r\n            //         this.selectWire(intersect0);\r\n            //     }\r\n            // }\r\n        }\r\n        this.render(this);\r\n    }\r\n\r\n    private showMessages(msg: string, needSelect: boolean = false, mode: string = 'notice') {\r\n        switch (mode) {\r\n            case 'custom':\r\n                this.message = msg;\r\n                break;\r\n            case 'notice':\r\n                this.message = `Please Select ${msg}`;\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        this.needSelect = needSelect;\r\n        this.messageVisible = true;\r\n        setTimeout(() => {\r\n            this.messageVisible = false;\r\n        }, 3000);\r\n    }\r\n\r\n    private selectPositions(object: THREE.Intersection, face: number, parent_ent_id: string) {\r\n        const ent_type_str = EEntTypeStr[EEntType.POSI];\r\n        const scene = this._data_threejs;\r\n        const posi_ent = this.dataService.selected_ents.get(ent_type_str);\r\n        if (object.object.type === 'Points') {\r\n            const position = this.model.attribs.query.getPosiCoords(object.index);\r\n            const posi_ents = this.model.geom.query.navVertToPosi(object.index);\r\n            const ent_id = `${ent_type_str}${object.index}`;\r\n            scene.selectObjPosition(parent_ent_id, ent_id, position, this.container, true);\r\n            posi_ent.set(ent_id, posi_ents);\r\n            this.dataService.selected_positions.set(`${parent_ent_id}`, [ent_id]);\r\n        } else if (object.object.type === 'LineSegments') {\r\n            const verts = this.model.geom.query.navEdgeToVert(object.index / 2);\r\n            const posis = verts.map(v => this.model.geom.query.navVertToPosi(v));\r\n            const children = [];\r\n            posis.map(posi => {\r\n                const position = this.model.attribs.query.getPosiCoords(posi);\r\n                scene.selectObjPosition(parent_ent_id, `${ent_type_str}${posi}`, position, this.container, true);\r\n                posi_ent.set(`${ent_type_str}${posi}`, posi);\r\n                children.push(`${ent_type_str}${posi}`);\r\n            });\r\n            this.dataService.selected_positions.set(`${parent_ent_id}`, children);\r\n        } else if (object.object.type === 'Mesh') {\r\n            const tris = this.model.geom.query.navFaceToTri(face),\r\n                posis = tris.map(tri => this.model.geom.query.navAnyToPosi(EEntType.TRI, tri)),\r\n                posi_flat = [].concat(...posis);\r\n\r\n            const uniqPositions = this.uniq(posi_flat);\r\n            const children = [];\r\n            uniqPositions.map(posi => {\r\n                const position = this.model.attribs.query.getPosiCoords(posi);\r\n                scene.selectObjPosition(parent_ent_id, `${ent_type_str}${posi}`, position, this.container, true);\r\n                posi_ent.set(`${ent_type_str}${posi}`, posi);\r\n                children.push(`${ent_type_str}${posi}`);\r\n            });\r\n            this.dataService.selected_positions.set(`${parent_ent_id}`, children);\r\n        }\r\n    }\r\n\r\n    private uniq(a) {\r\n        const seen = {};\r\n        return a.filter(function (item) {\r\n            return seen.hasOwnProperty(item) ? false : (seen[item] = true);\r\n        });\r\n    }\r\n\r\n    private selectVertex(object: THREE.Intersection) {\r\n        const ent_type_str = EEntTypeStr[EEntType.VERT];\r\n        const scene = this._data_threejs;\r\n        if (object.object.type === 'Points') {\r\n            const vert = this.model.geom.query.navPointToVert(object.index),\r\n                position = this.model.attribs.query.getPosiCoords(vert);\r\n\r\n            const posi_ent = this.dataService.selected_ents.get(ent_type_str);\r\n            const selecting = `${EEntTypeStr[EEntType.POINT]}${object.index}`;\r\n            if (!scene.selected_geoms.has(selecting)) {\r\n                // scene.selectObjPoint(selecting, position, this.container);\r\n                posi_ent.set(`${EEntTypeStr[EEntType.POSI]}${vert}`, vert);\r\n            } else {\r\n                scene.unselectObj(selecting, this.container);\r\n                posi_ent.delete(`${ent_type_str}${vert}`);\r\n            }\r\n        } else if (object.object.type === 'LineSegments') {\r\n            const verts = this.model.geom.query.navEdgeToVert(object.index / 2);\r\n            const positions = verts.map(v => this.model.attribs.query.getVertCoords(v));\r\n            const posi_flat = [].concat(...positions);\r\n\r\n            const posi_ent = this.dataService.selected_ents.get(ent_type_str);\r\n            const selecting = `${EEntTypeStr[EEntType.EDGE]}${object.index / 2}`;\r\n            if (!scene.selected_geoms.has(selecting)) {\r\n                scene.selectObjLine(selecting, [], posi_flat, this.container);\r\n                verts.map(vert => posi_ent.set(`${ent_type_str}${vert}`, vert));\r\n            } else {\r\n                scene.unselectObj(selecting, this.container);\r\n                verts.map(vert => posi_ent.delete(`${ent_type_str}${vert}`));\r\n            }\r\n        } else if (object.object.type === 'Mesh') {\r\n            const face = this.model.geom.query.navTriToFace(object.faceIndex),\r\n                tris = this.model.geom.query.navFaceToTri(face),\r\n                verts = tris.map(tri => this.model.geom.query.navTriToVert(tri)),\r\n                verts_flat = [].concat(...verts),\r\n                posis = verts_flat.map(v => this.model.geom.query.navAnyToPosi(EEntType.VERT, v)),\r\n                posis_flat = [].concat(...posis);\r\n\r\n            const tri_indices = [];\r\n            const positions = [];\r\n            posis_flat.map((posi, index) => {\r\n                positions.push(this.model.attribs.query.getPosiCoords(posi));\r\n                tri_indices.push(index);\r\n            });\r\n            const posi_flat = [].concat(...positions);\r\n\r\n            const posi_ent = this.dataService.selected_ents.get(ent_type_str);\r\n            const selecting = `${EEntType.FACE}${face}`;\r\n            if (!scene.selected_geoms.has(selecting)) {\r\n                scene.selectObjFace(selecting, tri_indices, posi_flat, this.container);\r\n                verts_flat.map(vert => posi_ent.set(`${ent_type_str}${vert}`, vert));\r\n            } else {\r\n                scene.unselectObj(selecting, this.container);\r\n                verts_flat.map(vert => posi_ent.delete(`${ent_type_str}${vert}`));\r\n            }\r\n        }\r\n    }\r\n\r\n    private unselectGeom(ent_id: string, ent_type_str: string) {\r\n        const scene = this._data_threejs;\r\n        if (ent_type_str === EEntTypeStr[EEntType.POSI]) {\r\n            scene.unselectObjGroup(ent_id, this.container, 'positions');\r\n            const children = this.dataService.selected_positions.get(ent_id);\r\n            children.forEach(c => {\r\n                this.dataService.selected_ents.get(EEntTypeStr[EEntType.POSI]).delete(c);\r\n            });\r\n            this.dataService.selected_positions.delete(ent_id);\r\n\r\n        } else if (ent_type_str === 'face_edges') {\r\n            scene.unselectObjGroup(ent_id, this.container, 'face_edges');\r\n            const children = this.dataService.selected_face_edges.get(ent_id);\r\n            children.forEach(c => {\r\n                this.dataService.selected_ents.get(EEntTypeStr[EEntType.EDGE]).delete(c);\r\n            });\r\n            this.dataService.selected_face_edges.delete(ent_id);\r\n\r\n        } else {\r\n            scene.unselectObj(ent_id, this.container);\r\n            this.dataService.selected_ents.get(ent_type_str).delete(ent_id);\r\n        }\r\n    }\r\n\r\n    private selectEdge(line: THREE.Intersection) {\r\n        const ent_type_str = EEntTypeStr[EEntType.EDGE],\r\n            verts = this.model.geom.query.navEdgeToVert(line.index / 2),\r\n            positions = verts.map(v => this.model.attribs.query.getVertCoords(v)),\r\n            posi_flat = [].concat(...positions),\r\n            ent_id = `${ent_type_str}${line.index / 2}`;\r\n        this._data_threejs.selectObjLine(ent_id, [], posi_flat, this.container);\r\n        this.dataService.selected_ents.get(ent_type_str).set(ent_id, line.index / 2);\r\n    }\r\n\r\n    private selectEdgeByFace(face: number, parent_ent_id: string) {\r\n        const ent_type_str = EEntTypeStr[EEntType.EDGE],\r\n            edges = this.model.geom.query.navAnyToAny(EEntType.FACE, EEntType.EDGE, face);\r\n        const children = [];\r\n        edges.map(edge => {\r\n            const ent_id = `${ent_type_str}${edge}`;\r\n            children.push(ent_id);\r\n            const vert = this.model.geom.query.navEdgeToVert(edge);\r\n            const position = [];\r\n            const indices = [];\r\n            vert.map((v, i) => {\r\n                position.push(this.model.attribs.query.getVertCoords(v));\r\n                indices.push(i);\r\n            });\r\n            const posi_flat = [].concat(...position);\r\n            this._data_threejs.selectEdgeByFace(parent_ent_id, ent_id, indices, posi_flat, this.container);\r\n            this.dataService.selected_ents.get(ent_type_str).set(ent_id, edge);\r\n        });\r\n        this.dataService.selected_face_edges.set(`${parent_ent_id}`, children);\r\n    }\r\n\r\n\r\n    private selectWire(line: THREE.Intersection) {\r\n        const ent_type_str = EEntTypeStr[EEntType.EDGE],\r\n            wire = this.model.geom.query.navEdgeToWire(line.index / 2),\r\n            edges = this.model.geom.query.navWireToEdge(wire),\r\n            verts = edges.map(e => this.model.geom.query.navEdgeToVert(e)),\r\n            verts_flat = [].concat(...[].concat(...verts)),\r\n            indices = [],\r\n            positions = [];\r\n        verts_flat.map((v, i) => {\r\n            positions.push(this.model.attribs.query.getVertCoords(v));\r\n            indices.push(i);\r\n        });\r\n        const posi_flat = [].concat(...positions),\r\n            ent_id = `${ent_type_str}${wire}`;\r\n        this._data_threejs.selectObjLine(ent_id, indices, posi_flat, this.container);\r\n        this.dataService.selected_ents.get(ent_type_str).set(ent_id, wire);\r\n    }\r\n\r\n    private selectFace(face: number) {\r\n        const ent_type_str = EEntTypeStr[EEntType.FACE],\r\n            tri = this.model.geom.query.navFaceToTri(face),\r\n            verts = tri.map(index => this.model.geom.query.navTriToVert(index)),\r\n            verts_flat = [].concat(...verts),\r\n            posis = verts_flat.map(v => this.model.geom.query.navAnyToPosi(EEntType.VERT, v)),\r\n            posis_flat = [].concat(...posis),\r\n            tri_indices = [],\r\n            positions = [];\r\n        posis_flat.map((posi, index) => {\r\n            positions.push(this.model.attribs.query.getPosiCoords(posi));\r\n            tri_indices.push(index);\r\n        });\r\n        const posi_flat = [].concat(...positions),\r\n            ent_id = `${ent_type_str}${face}`;\r\n        this._data_threejs.selectObjFace(ent_id, tri_indices, posi_flat, this.container);\r\n        this.dataService.selected_ents.get(ent_type_str).set(ent_id, face);\r\n    }\r\n\r\n    private selectPoint(point: THREE.Intersection) {\r\n        const ent_type_str = EEntTypeStr[EEntType.POINT];\r\n\r\n        const result = this.getPointPosis(point.index);\r\n        const point_indices = result.point_indices;\r\n        const point_posi = result.posi_flat;\r\n        const ent_id = `${ent_type_str}${point.index}`;\r\n        this._data_threejs.selectObjPoint(ent_id, point_indices, point_posi, this.container);\r\n        this.dataService.selected_ents.get(ent_type_str).set(ent_id, point.index);\r\n    }\r\n\r\n    private selectPLine(line: THREE.Intersection) {\r\n        const ent_type_str = EEntTypeStr[EEntType.PLINE],\r\n            wire = this.model.geom.query.navEdgeToWire(line.index / 2);\r\n        const result = this.getPLinePosis(wire);\r\n        if (result) {\r\n            const posi_flat = result.posi_flat;\r\n            const indices = result.indices;\r\n            const ent_id = `${ent_type_str}${wire}`;\r\n            this._data_threejs.selectObjLine(ent_id, indices, posi_flat, this.container);\r\n            this.dataService.selected_ents.get(ent_type_str).set(ent_id, wire);\r\n        } else {\r\n            this.showMessages('Please Select a Polyline', false, 'custom');\r\n        }\r\n    }\r\n\r\n    private selectPGon(face: number) {\r\n        const ent_type_str = EEntTypeStr[EEntType.PGON];\r\n        const result = this.getPGonPosis(face);\r\n        const posi_flat = result.posi_flat;\r\n        const tri_indices = result.indices;\r\n\r\n        const ent_id = `${ent_type_str}${face}`;\r\n        this._data_threejs.selectObjFace(ent_id, tri_indices, posi_flat, this.container);\r\n        this.dataService.selected_ents.get(ent_type_str).set(ent_id, face);\r\n    }\r\n\r\n    /**\r\n     * get point positions for collections\r\n     * @param points\r\n     */\r\n\r\n    private getPointPosis(point1: number = null, points: number[] = null) {\r\n        let verts_flat: number[] = null;\r\n        if (point1 !== null) {\r\n            verts_flat = [this.model.geom.query.navPointToVert(point1)];\r\n        }\r\n        if (points !== null) {\r\n            const verts = points.map(p => this.model.geom.query.navPointToVert(p));\r\n            verts_flat = [].concat(...verts);\r\n        }\r\n\r\n        const point_indices: number[] = [];\r\n        const positions: Txyz[] = [];\r\n        verts_flat.map((v, i) => {\r\n            positions.push(this.model.attribs.query.getPosiCoords(v));\r\n            point_indices.push(i);\r\n        });\r\n        const posi_flat = [].concat(...positions);\r\n        const result = { posi_flat, point_indices };\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * get pline positions for selectPLine or collections\r\n     * @param wire1\r\n     * @param plines\r\n     */\r\n\r\n    private getPLinePosis(wire1: number = null, plines: number[] = null) {\r\n        let wires_flat: number[] = null;\r\n        if (wire1 !== null) {\r\n            const _pline = this.model.geom.query.navWireToPline(wire1);\r\n            if (_pline === undefined) {\r\n                return null;\r\n            }\r\n            wires_flat = [this.model.geom.query.navPlineToWire(_pline)];\r\n        }\r\n        if (plines !== null) {\r\n            const wires = plines.map(pl => this.model.geom.query.navPlineToWire(pl));\r\n            wires_flat = [].concat(...wires);\r\n        }\r\n\r\n        const edges = wires_flat.map(w => this.model.geom.query.navWireToEdge(w));\r\n        const edges_flat = [].concat(...edges);\r\n        const verts = edges_flat.map(e => this.model.geom.query.navEdgeToVert(e));\r\n        const verts_flat = [].concat(...[].concat(...verts));\r\n        const indices = [];\r\n        const positions = [];\r\n        verts_flat.map((v, i) => {\r\n            positions.push(this.model.attribs.query.getVertCoords(v));\r\n            indices.push(i);\r\n        });\r\n        const posi_flat = [].concat(...positions);\r\n        const result = { posi_flat, indices };\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * get pgon positions for selectPGon or collections\r\n     * @param face1\r\n     * @param pgons\r\n     */\r\n\r\n    private getPGonPosis(face1: number = null, pgons: number[] = null) {\r\n        let faces_flat: number[] = null;\r\n        if (face1 !== null) {\r\n            const _pgon = this.model.geom.query.navFaceToPgon(face1);\r\n            if (_pgon === undefined) {\r\n                return null;\r\n            }\r\n            faces_flat = [this.model.geom.query.navPgonToFace(_pgon)];\r\n        }\r\n        if (pgons !== null) {\r\n            const faces = pgons.map(pgon => this.model.geom.query.navPgonToFace(pgon));\r\n            faces_flat = [].concat(...faces);\r\n        }\r\n        const tris = faces_flat.map(face => this.model.geom.query.navFaceToTri(face));\r\n        const tris_flat = [].concat(...tris);\r\n        const verts = tris_flat.map(tri => this.model.geom.query.navTriToVert(tri));\r\n        const verts_flat = [].concat(...verts);\r\n        const posis = verts_flat.map(v => this.model.geom.query.navAnyToPosi(EEntType.VERT, v));\r\n        const posis_flat = [].concat(...posis);\r\n        const indices = [];\r\n        const positions = [];\r\n        posis_flat.map((posi, index) => {\r\n            positions.push(this.model.attribs.query.getPosiCoords(posi));\r\n            indices.push(index);\r\n        });\r\n        const posi_flat = [].concat(...positions);\r\n        const result = { posi_flat, indices };\r\n        return result;\r\n    }\r\n\r\n    private selectColl(object: THREE.Intersection, type) {\r\n        let colls = [];\r\n        if (type === 'Mesh') {\r\n            colls = this.model.geom.query.navAnyToAny(EEntType.TRI, EEntType.COLL, object.faceIndex);\r\n        } else if (type === 'LineSegments') {\r\n            colls = this.model.geom.query.navAnyToAny(EEntType.EDGE, EEntType.COLL, object.index / 2);\r\n        } else if (type === 'Points') {\r\n            const vert = this.model.geom.query.navVertToPoint(object.index);\r\n            colls = this.model.geom.query.navAnyToAny(EEntType.POINT, EEntType.COLL, vert);\r\n        }\r\n        /**\r\n         * Show dropdown menu only when Entity belongs to more than 1 Collection.\r\n         */\r\n        if (this.dataService.selected_ents.get(EEntTypeStr[EEntType.COLL]).size === 0 && colls.length > 1) {\r\n            this.dropdown.setItems(colls, 'co');\r\n            this.dropdown.visible = true;\r\n            this.dropdown.position = this.dropdownPosition;\r\n        } else if (colls.length === 1) {\r\n            this.chooseColl(colls[0]);\r\n        } else {\r\n            this.showMessages('No Collections Available', true, 'custom');\r\n        }\r\n    }\r\n\r\n    private chooseColl(id: number) {\r\n        const scene = this._data_threejs;\r\n        const pgons = this.model.geom.query.navCollToPgon(id);\r\n        const pgons_flat = [].concat(...pgons);\r\n        const pgonResult = this.getPGonPosis(null, pgons_flat);\r\n        const pgons_posi = pgonResult.posi_flat;\r\n        const pgons_indices = pgonResult.indices;\r\n\r\n        const coll_id = `${EEntTypeStr[EEntType.COLL]}${id}`;\r\n        if (pgons_indices.length !== 0) {\r\n            const attrib_val = this.model.attribs.query.getAttribValue(EEntType.COLL, EAttribNames.NAME, id);\r\n            // const selecting = attrib_val ? attrib_val.toString() : `${EEntType.COLL}${id}`;\r\n            const pgon_id = `${EEntTypeStr[EEntType.COLL]}_pg_${id}`;\r\n            scene.selectObjFace(pgon_id, pgons_indices, pgons_posi, this.container, false);\r\n        }\r\n\r\n        const plines = this.model.geom.query.navCollToPline(id);\r\n        const plines_flat = [].concat(...plines);\r\n        const plineResult = this.getPLinePosis(null, plines_flat);\r\n        const plines_posi = plineResult.posi_flat;\r\n        const plines_indices = plineResult.indices;\r\n        if (plines_indices.length !== 0) {\r\n            const pline_id = `${EEntTypeStr[EEntType.COLL]}_pl_${id}`;\r\n            scene.selectObjLine(pline_id, plines_indices, plines_posi, this.container, false);\r\n        }\r\n\r\n        const points = this.model.geom.query.navCollToPoint(id);\r\n        const points_flat = [].concat(...points);\r\n        const pointResult = this.getPointPosis(null, points_flat);\r\n        const point_posi = pointResult.posi_flat;\r\n        const point_indices = pointResult.point_indices;\r\n        if (point_indices.length !== 0) {\r\n            const point_id = `${EEntTypeStr[EEntType.COLL]}_pt_${id}`;\r\n            scene.selectObjPoint(point_id, point_indices, point_posi, this.container, false);\r\n        }\r\n\r\n        this.dataService.selected_ents.get(EEntTypeStr[EEntType.COLL]).set(coll_id, id);\r\n        this.refreshTable(null);\r\n        this.render(this);\r\n    }\r\n\r\n    public zoomfit() {\r\n        this._data_threejs.lookAtObj(this._width);\r\n    }\r\n\r\n    private selectEntityType(selection: { id: string, name: string }) {\r\n        this.SelectingEntityType = selection;\r\n        localStorage.setItem('mpm_selecting_entity_type', JSON.stringify(selection));\r\n        this.selectDropdownVisible = false;\r\n    }\r\n\r\n    private selectEntity(id: number) {\r\n        this.chooseColl(id);\r\n    }\r\n}\r\n","import { DataThreejs } from '../data/data.threejs';\r\nexport class ThreeJSViewerService {\r\n    DataThreejs: DataThreejs;\r\n    initRaycaster(event) {\r\n        const scene = this.DataThreejs;\r\n        scene._mouse.x = (event.offsetX / scene._renderer.domElement.clientWidth) * 2 - 1;\r\n        scene._mouse.y = - (event.offsetY / scene._renderer.domElement.clientHeight) * 2 + 1;\r\n        scene._raycaster.setFromCamera(scene._mouse, scene._camera);\r\n        return scene._raycaster.intersectObjects(scene.sceneObjs);\r\n    }\r\n}\r\n","module.exports = \"<div id=\\\"help-container\\\">\\r\\n    <div class = 'container' *ngIf='output'>\\r\\n        <h2><span>{{output.module}}</span>.{{output.name}}</h2>\\r\\n        <!--<h4>Module: <span>{{output.module}}</span></h4>-->\\r\\n        <div class = 'body--container'>\\r\\n            <div class = 'descr--container'>\\r\\n                <h5>Description:</h5>\\r\\n                <p>{{output.description}}</p>\\r\\n            </div>\\r\\n    \\r\\n            <div class = 'param--container'>\\r\\n                <h5 *ngIf='output.parameters?.length > 0'>Parameters:</h5>\\r\\n                <ul class='params'>\\r\\n                    <ng-container *ngFor='let param of output.parameters'>\\r\\n                        <li *ngIf='param'>\\r\\n                            <div class = 'li--item'>\\r\\n                                <span>{{param.name}}: </span>{{param.description}}\\r\\n                            </div>\\r\\n                        </li>\\r\\n                    </ng-container>\\r\\n                </ul>\\r\\n            </div>        \\r\\n    \\r\\n            <!-- <p class='paramP' *ngFor='let param of output.parameters'>\\r\\n                <span>{{param.name}} - </span>{{param.description}}\\r\\n            </p> -->\\r\\n            \\r\\n            <div class = 'ret--container' *ngIf='output.returns'>\\r\\n                <h5>Returns:</h5>\\r\\n                <p>{{output.returns}}</p>\\r\\n            </div>\\r\\n\\r\\n            <div *ngIf='output.example' class = 'exam--container'>\\r\\n                <h5>Examples:</h5>\\r\\n                <div *ngFor='let ex of output.example; let i = index;' class = 'examp'>\\r\\n                    <ul>\\r\\n                        <li>{{ex}}</li>\\r\\n                        <p *ngIf='output.example_info'>{{output.example_info[i]}}</p>\\r\\n                    </ul>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n            <div *ngIf='output.example_link' class = 'exam--container'>\\r\\n                <h5>Example URLs:</h5>\\r\\n                <ul *ngFor='let ex of output.example_link; let i = index;'>\\r\\n                    <li>{{i+1}}) <a class='hyperlink' href={{urlString+ex.split()}} target=\\\"_blank\\\">{{ex.split('&node=')[0]}}</a></li>\\r\\n                </ul>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\"","module.exports = \"@import url(\\\"https://fonts.googleapis.com/css?family=Ubuntu+Mono\\\");\\n:host {\\n  height: 100%;\\n  width: 100%; }\\ndiv {\\n  font-family: sans-serif;\\n  color: #505050;\\n  width: 100%;\\n  padding-left: 10px; }\\nh5 {\\n  font-weight: 700;\\n  font-size: 12px; }\\n.funcDesc {\\n  font-weight: 600; }\\n.paramP {\\n  padding-left: 5px; }\\nspan {\\n  font-weight: 550;\\n  font-style: italic; }\\nh2 {\\n  padding-bottom: 6px; }\\n#help-container {\\n  margin-top: 40px;\\n  padding: 0px;\\n  height: calc(100vh - 40px);\\n  width: 100%;\\n  min-width: -webkit-fit-content;\\n  min-width: -moz-fit-content;\\n  min-width: fit-content;\\n  overflow: auto;\\n  resize: none;\\n  background-color: transparent;\\n  color: #373737;\\n  border: none; }\\n.container {\\n  display: flex;\\n  flex-flow: column nowrap;\\n  justify-content: flex-start;\\n  box-sizing: border-box;\\n  height: -webkit-fit-content;\\n  height: -moz-fit-content;\\n  height: fit-content;\\n  width: 100%;\\n  min-width: 200px;\\n  padding: 15px; }\\n.body--container {\\n  padding: 6px 0px;\\n  border-top: 1px solid #808080; }\\n.descr--container, .param--container, .ret--container, .exam--container {\\n  padding: 0px;\\n  line-height: 15px;\\n  margin-bottom: 7.5px; }\\n.descr--container h5, .param--container h5, .ret--container h5, .exam--container h5 {\\n    margin-bottom: 3.75px; }\\n.descr--container ul, .param--container ul, .ret--container ul, .exam--container ul {\\n    margin: 0px;\\n    padding-left: 15px; }\\n.descr--container ul li, .param--container ul li, .ret--container ul li, .exam--container ul li {\\n      display: list-item; }\\n.descr--container ul li .li--item, .param--container ul li .li--item, .ret--container ul li .li--item, .exam--container ul li .li--item {\\n        display: flex;\\n        flex-flow: row nowrap;\\n        padding: 0px; }\\n.descr--container ul li .li--item span, .param--container ul li .li--item span, .ret--container ul li .li--item span, .exam--container ul li .li--item span {\\n          margin-right: 2px; }\\n.exam--container h5 {\\n  margin-top: 3.75px; }\\n.exam--container .examp {\\n  padding: 0px; }\\n.exam--container .examp ul {\\n    margin-bottom: 6px;\\n    padding: 0px; }\\n.exam--container .examp ul li {\\n      display: flex;\\n      border: 1px solid #808080;\\n      font-family: 'Ubuntu Mono';\\n      padding: 0px 0px 0px 2px;\\n      margin: 4px 0px; }\\n.hyperlink {\\n  color: #808080; }\\n.hyperlink :link {\\n    color: #808080; }\\n.hyperlink :visited {\\n    color: #999999; }\\n.hyperlink :hover {\\n    color: #B3B3B3; }\\n\"","import { Component, Input } from '@angular/core';\r\nimport { ModuleDocList } from '@shared/decorators';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\n\r\n/**\r\n * HelpViewerComponent\r\n */\r\n @Component({\r\n  selector: 'help-viewer',\r\n  templateUrl: './help-viewer.component.html',\r\n  styleUrls: ['./help-viewer.component.scss']\r\n})\r\nexport class HelpViewerComponent {\r\n    @Input() output;\r\n    ModuleDoc = ModuleDocList;\r\n\r\n    // TODO: update mobius url\r\n    urlString: string;\r\n    /**\r\n     * constructor\r\n     */\r\n    constructor(private router: ActivatedRoute) {\r\n        this.urlString = `${window.location.origin}` +\r\n                        '/flowchart?file=' +\r\n                        'https://raw.githubusercontent.com/design-automation/' +\r\n                        'mobius-parametric-modeller/master/src/assets/gallery/function_examples/';\r\n    }\r\n}\r\n","module.exports = \"<div class='viewers-container'>  \\r\\n\\r\\n    <div class='container__header'>\\r\\n        <div class=\\\"header-btn-group\\\">\\r\\n            <button class='btn' mat-icon-button *ngFor='let view of Viewers;' id='{{view.name}}'\\r\\n            [class.active]='view.name == activeView.name' (click)='updateView(view)' title='{{view.name}}'>\\r\\n                <mat-icon [svgIcon]='\\\"c\\\"+view.name'></mat-icon>\\r\\n            </button>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <div class='content__panel'>\\r\\n        <ng-container #vc></ng-container>\\r\\n    </div>\\r\\n\\r\\n</div>\"","module.exports = \".viewers-container {\\n  position: relative;\\n  display: block;\\n  height: 100%;\\n  overflow: hidden; }\\n  .viewers-container .container__header {\\n    position: absolute;\\n    left: 0;\\n    top: 0;\\n    display: flex;\\n    background-color: transparent;\\n    height: 40px;\\n    padding: 0px;\\n    margin: 0px; }\\n  .viewers-container .container__header .header-btn-group {\\n      height: 40px;\\n      padding: 0px;\\n      margin: 0px;\\n      overflow: hidden;\\n      background-color: transparent;\\n      z-index: 1; }\\n  .viewers-container .content__panel {\\n    background-color: transparent;\\n    width: 100%;\\n    height: 100%;\\n    overflow: hidden;\\n    padding: 0px;\\n    margin: 0px; }\\n  .viewers-container button {\\n    display: inline-block;\\n    vertical-align: bottom;\\n    background-color: transparent;\\n    color: #808080;\\n    border: none;\\n    outline: none;\\n    cursor: pointer;\\n    padding: 0px;\\n    width: 34px;\\n    height: 34px;\\n    transition: 0.3s;\\n    font-size: 14px; }\\n  .viewers-container button:hover {\\n      color: #E6E6E6; }\\n  .viewers-container button.active {\\n      color: #00006d; }\\n\"","import { Component, Injector, Input,\r\n    ViewChild, ViewContainerRef, ComponentFactoryResolver, OnDestroy, OnInit, DoCheck } from '@angular/core';\r\nimport { IView } from './view.interface';\r\nimport { Viewers } from './model-viewers.config';\r\nimport { DataService } from '@services';\r\n\r\n/**\r\n * A component that contains all the viewers.\r\n * This component is used in /app/appmodule/app.component.html\r\n */\r\n@Component({\r\n    // tslint:disable-next-line:component-selector\r\n    selector: 'model-viewers-container',\r\n    templateUrl: 'model-viewers-container.component.html',\r\n    styleUrls: ['model-viewers-container.component.scss']\r\n})\r\nexport class DataViewersContainerComponent implements DoCheck, OnInit, OnDestroy {\r\n    @ViewChild('vc', {read: ViewContainerRef}) vc: ViewContainerRef;\r\n    @Input() data: any;\r\n    private views = [];\r\n    private activeView: IView;\r\n    Viewers = Viewers;\r\n    /**\r\n     * Construct the viewer container.\r\n     * @param injector\r\n     * @param r\r\n     */\r\n    constructor(private injector: Injector, private r: ComponentFactoryResolver, private dataService: DataService) {\r\n        // do nothing\r\n    }\r\n    /**\r\n     * ngOnInit\r\n     */\r\n    ngOnInit() {\r\n        this.activeView = this.Viewers[0];\r\n        if (this.dataService.activeView) {\r\n            for (const view of this.Viewers) {\r\n                if (view.name === this.dataService.activeView) {\r\n                    this.activeView = view;\r\n                }\r\n            }\r\n        }\r\n        this.updateView( this.activeView );\r\n    }\r\n    /**\r\n     * ngOnDestroy\r\n     */\r\n    ngOnDestroy() {\r\n        this.dataService.activeView = this.activeView.name;\r\n        this.vc.clear();\r\n        for (const view in this.views) {\r\n            if (this.views[view]) {\r\n                this.views[view].destroy();\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * ngDoCheck\r\n     */\r\n    ngDoCheck() {\r\n        if (this.dataService.helpView[0] === true) {\r\n            let view;\r\n            for (const v of this.Viewers) {\r\n                if (v.name === 'Help') { view = v; }\r\n            }\r\n            this.dataService.toggleHelp(false);\r\n            this.updateView(view);\r\n        } else { this.updateValue(); }\r\n    }\r\n    /**\r\n     * createView\r\n     * @param view\r\n     */\r\n    createView(view: IView) {\r\n        const component = view.component;\r\n        const factory = this.r.resolveComponentFactory(component);\r\n        const componentRef = factory.create(this.injector);\r\n        /*\r\n        if (view.name != 'Console'){\r\n            componentRef.instance[\"data\"] = this.data;\r\n        }\r\n        */\r\n        return componentRef;\r\n    }\r\n    /**\r\n     * updateView\r\n     * @param view\r\n     */\r\n    updateView(view: IView): void {\r\n        this.activeView = view;\r\n\r\n        if ( this.views[ this.activeView.name ] === undefined) {\r\n            this.views[ this.activeView.name ] = this.createView(view);\r\n        }\r\n\r\n        this.updateValue();\r\n\r\n        this.vc.detach();\r\n        this.vc.insert( this.views[ this.activeView.name ].hostView );\r\n    }\r\n    /**\r\n     * updateValue\r\n     */\r\n    updateValue() {\r\n        try {\r\n            const componentRef =  this.views[ this.activeView.name ];\r\n            if (this.activeView.name === 'Help') {\r\n                componentRef.instance['output'] = this.dataService.helpView[1];\r\n            } else if (this.activeView.name !== 'Console') {\r\n                componentRef.instance['data'] = this.data;\r\n            // } else {\r\n            //     componentRef.instance['scrollcheck'] = true;\r\n            }\r\n        } catch (ex) {\r\n            // console.log(`Active View not defined`);\r\n        }\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { DataViewersContainerComponent } from './model-viewers-container.component';\r\nimport { VIEWER_ARR } from './model-viewers.config';\r\n// viewers\r\nimport { ConsoleViewerComponent } from './all-viewers/console-viewer/console-viewer.component';\r\nimport { HelpViewerComponent } from './all-viewers/help-viewer/help-viewer.component';\r\nimport { GIViewerModule } from './all-viewers/gi-viewer/gi-viewer.module';\r\nimport { MatIconModule } from '@angular/material';\r\n// import { ThreejsViewerComponent } from './viewers/gi-viewer/threejs/threejs-viewer.component';\r\n// import { MobiusCesium } from './viewers/cesium-viewer/mobius-cesium.module';\r\n// import { VisualiseComponent } from \"./viewers/cesium-viewer/setting/visualise.component\";\r\n// import { AttributesComponent } from \"./viewers/cesium-viewer/setting/attributes.copmponent\";\r\n\r\n/**\r\n * DataViewersContainer, NgModule\r\n */\r\n@NgModule({\r\n    declarations: [\r\n        DataViewersContainerComponent,\r\n        // TextViewerComponent,\r\n        ConsoleViewerComponent,\r\n        HelpViewerComponent,\r\n    ],\r\n    exports: [\r\n        DataViewersContainerComponent\r\n    ],\r\n    imports: [\r\n        CommonModule,\r\n        FormsModule,\r\n        GIViewerModule,\r\n        MatIconModule\r\n        // SharedModule\r\n    ],\r\n    entryComponents: [\r\n        ...VIEWER_ARR\r\n    ],\r\n    providers: [ ]\r\n})\r\nexport class DataViewersContainer {\r\n    /**\r\n     * constructor\r\n     */\r\n    constructor () {\r\n        // do nothing\r\n    }\r\n}\r\n","import { IView } from './view.interface';\r\n// Step-1: Add new ViewerComponet here\r\n// import { TextViewerComponent } from './all-viewers/text-viewer/viewer.component';\r\nimport { ConsoleViewerComponent } from './all-viewers/console-viewer/console-viewer.component';\r\nimport { HelpViewerComponent } from './all-viewers/help-viewer/help-viewer.component';\r\nimport { GIViewerComponent } from './all-viewers/gi-viewer/gi-viewer.component';\r\n\r\nexport const VIEWER_ARR = [\r\n    // Step-2: Add Component here\r\n    GIViewerComponent,\r\n    ConsoleViewerComponent,\r\n    HelpViewerComponent,\r\n    // TextViewerComponent,\r\n    // JSONViewerComponent,\r\n    // ThreeViewerComponent\r\n    // CesiumViewerComponent,\r\n    // MobiuscesiumComponent,\r\n];\r\n\r\nexport const Viewers: IView[] = [\r\n    // Step-3: Add Viewer Definition here: name, icon and component\r\n    { name: '3D Viewer', icon: undefined, component: GIViewerComponent },\r\n    { name: 'Console', icon: undefined, component: ConsoleViewerComponent },\r\n    { name: 'Help', icon: undefined, component: HelpViewerComponent },\r\n    // { name: 'Summary', icon: undefined, component: TextViewerComponent },\r\n    // { name: 'json-viewer', icon: undefined, component: JSONViewerComponent },\r\n    // { name: 'three-viewer', icon: undefined, component: ThreeViewerComponent },\r\n    // { name: 'cesium-viewer', icon: undefined, component: CesiumViewerComponent },\r\n    // { name: 'mobius-cesium', icon: undefined, component: MobiuscesiumComponent },\r\n];\r\n\r\n","import { Component, Input } from '@angular/core';\r\nimport { INode } from '@models/node';\r\nimport { PortUtils } from '@models/port';\r\n\r\n@Component({\r\n  selector: 'add-input',\r\n  template:  `<button (click)='addInput()'>AddInput</button>`,\r\n  styles: [ ]\r\n})\r\nexport class AddInputComponent {\r\n\r\n    @Input() node: INode;\r\n    constructor() {}\r\n\r\n    addInput(): void {\r\n      return;\r\n      /*\r\n      let newPort = PortUtils.getNewInput();\r\n      newPort.parentNode = this.node;\r\n      this.node.input.push(newPort);\r\n      */\r\n    }\r\n\r\n}\r\n","import { Component, Input } from '@angular/core';\r\nimport { NodeUtils } from '@models/node';\r\nimport { IFlowchart } from '@models/flowchart';\r\n\r\n@Component({\r\n  selector: 'add-node',\r\n  template:  `<button (click)='addNode()'>AddNode</button>`,\r\n  styles: [ ]\r\n})\r\nexport class AddNodeComponent {\r\n\r\n    @Input() flowchart: IFlowchart;\r\n    constructor() {}\r\n\r\n    addNode(): void {  this.flowchart.nodes.push(NodeUtils.getNewNode()); }\r\n\r\n}\r\n","import { Component, Input } from '@angular/core';\r\nimport { INode } from '@models/node';\r\nimport { PortUtils } from '@models/port';\r\n\r\n@Component({\r\n  selector: 'add-output',\r\n  template:  `<button (click)='addOutput()'>AddOutput</button>`,\r\n  styles: [ ]\r\n})\r\nexport class AddOutputComponent {\r\n\r\n    @Input() node: INode;\r\n    constructor() {}\r\n\r\n    addOutput(): void {\r\n      return;\r\n      /*\r\n      let newPort = PortUtils.getNewOutput();\r\n      newPort.parentNode = this.node;\r\n      this.node.output.push(newPort);\r\n      */\r\n    }\r\n\r\n}\r\n","module.exports = \"<div id='chrome-only'>\\r\\n    Unable to display web page. Mobius is only compatible with Google Chrome.\\r\\n</div>\\r\\n\"","module.exports = \"panel-header button {\\n  display: inline-block;\\n  vertical-align: bottom;\\n  background-color: transparent;\\n  color: #808080;\\n  border: none;\\n  outline: none;\\n  cursor: pointer;\\n  padding: 0px;\\n  width: 34px;\\n  height: 34px;\\n  transition: 0.3s;\\n  font-size: 15px; }\\n\\nbutton:hover {\\n  color: #00006d; }\\n\\npanel-header button.active {\\n  color: #00006d; }\\n\\n#chrome-only {\\n  position: fixed;\\n  display: none;\\n  width: 100%;\\n  height: 100%;\\n  top: 0;\\n  left: 0;\\n  right: 0;\\n  bottom: 0;\\n  background-color: #E6E6E6;\\n  z-index: 1000;\\n  pointer-events: all;\\n  cursor: default; }\\n\"","\r\nimport { Component, AfterViewInit, } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'chrome',\r\n    templateUrl: 'chrome.component.html',\r\n    styleUrls: ['chrome.component.scss']\r\n})\r\nexport class ChromeComponent implements AfterViewInit {\r\n\r\n    check: boolean;\r\n\r\n    constructor() {\r\n\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        // @ts-ignore\r\n        const isChromium = window.chrome;\r\n        const winNav = window.navigator;\r\n        const vendorName = winNav.vendor;\r\n        // @ts-ignore\r\n        const isOpera = typeof window.opr !== 'undefined';\r\n        const isIEedge = winNav.userAgent.indexOf('Edge') > -1;\r\n        const isIOSChrome = winNav.userAgent.match('CriOS');\r\n        if (isIOSChrome) {\r\n        } else if (\r\n          isChromium !== null &&\r\n          typeof isChromium !== 'undefined' &&\r\n          vendorName === 'Google Inc.' &&\r\n          isOpera === false &&\r\n          isIEedge === false\r\n        ) {\r\n        } else {\r\n            document.getElementById('chrome-only').style.display = 'block';\r\n        }\r\n    }\r\n\r\n\r\n}\r\n","module.exports = \"<button id='executeButton' class=\\\"btn\\\" mat-icon-button title=\\\"Execute\\\" (click)=\\\"execute()\\\">\\r\\n    <mat-icon>play_circle_outline</mat-icon>\\r\\n</button>\\r\\n\"","module.exports = \"panel-header button {\\n  display: inline-block;\\n  vertical-align: bottom;\\n  background-color: transparent;\\n  color: #808080;\\n  border: none;\\n  outline: none;\\n  cursor: pointer;\\n  padding: 0px;\\n  width: 34px;\\n  height: 34px;\\n  transition: 0.3s;\\n  font-size: 15px; }\\n\\nbutton:hover {\\n  color: #00006d; }\\n\\npanel-header button.active {\\n  color: #00006d; }\\n\"","import { Component, Input } from '@angular/core';\r\nimport { IFlowchart, FlowchartUtils } from '@models/flowchart';\r\nimport { CodeUtils } from '@models/code';\r\nimport { INode, NodeUtils } from '@models/node';\r\nimport { IProcedure, ProcedureTypes } from '@models/procedure';\r\n\r\nimport * as Modules from '@modules';\r\nimport { _parameterTypes, _varString } from '@modules';\r\nimport { DataService } from '@services';\r\n// import { WebWorkerService } from 'ngx-web-worker';\r\nimport { InputType } from '@models/port';\r\n\r\nexport const mergeInputsFunc = `\r\nfunction mergeInputs(models){\r\n    let result = __modules__.${_parameterTypes.new}();\r\n    for (let model of models){\r\n        __modules__.${_parameterTypes.merge}(result, model);\r\n    }\r\n    return result;\r\n}\r\n`;\r\nexport const printFunc = `\r\nfunction printFunc(name, value){\r\n    let val;\r\n    if (typeof value === 'number' || value === undefined) {\r\n        val = value;\r\n    } else if (typeof value === 'string') {\r\n        val = '\"' + value + '\"';\r\n    } else if (value.constructor === [].constructor) {\r\n        val = JSON.stringify(value);\r\n    } else if (value.constructor === {}.constructor) {\r\n        val = JSON.stringify(value);\r\n    } else {\r\n        // console.log('Unknown output type:', value);\r\n        // this.output = functions.__stringify__(value);\r\n        val = value; // TODO - make this generic\r\n    }\r\n    console.log(name+': '+val);\r\n    return val;\r\n}\r\n`;\r\nconst DEBUG = false;\r\n\r\n@Component({\r\n    selector: 'execute',\r\n    templateUrl: 'execute.component.html',\r\n    styleUrls: ['execute.component.scss']\r\n})\r\nexport class ExecuteComponent {\r\n\r\n    constructor(private dataService: DataService) {}\r\n\r\n    async execute() {\r\n        // const startTime = performance.now();\r\n        document.getElementById('spinner-on').click();\r\n        console.log(' ');\r\n\r\n        // reset input of all nodes except start & resolve all async processes (file reading + get url content)\r\n        // console.log('Retrieving flowchart\\'s external inputs');\r\n        for (const node of this.dataService.flowchart.nodes) {\r\n            let EmptyECheck = false;\r\n            let InvalidECheck = false;\r\n            if (node.type !== 'start') {\r\n                if (node.input.edges) {\r\n                    node.input.value = undefined;\r\n                }\r\n            }\r\n\r\n            try {\r\n                await this.resolveImportedUrl(node.procedure);\r\n            } catch (ex) {\r\n                document.getElementById('Console').click();\r\n                console.log(ex.message);\r\n                document.getElementById('spinner-off').click();\r\n                throw ex;\r\n            }\r\n\r\n            if (!node.enabled) {\r\n                continue;\r\n            }\r\n\r\n            for (const prod of node.procedure) {\r\n                if (prod.type === ProcedureTypes.Return || !prod.enabled) { continue; }\r\n                if (prod.args.length > 0 && prod.args[0].invalidVar) {\r\n                    node.hasError = true;\r\n                    prod.hasError = true;\r\n                    InvalidECheck = true;\r\n                }\r\n                if (prod.type === ProcedureTypes.Constant) {\r\n                    prod.resolvedValue = await CodeUtils.getStartInput(prod.args[1], prod.meta.inputMode);\r\n                    if (!prod.args[0].value || (!prod.args[1].value && !prod.args[1].default &&\r\n                        prod.args[1].value !== 0 && prod.args[1].default !== 0)) {\r\n                        node.hasError = true;\r\n                        prod.hasError = true;\r\n                        EmptyECheck = true;\r\n                    }\r\n                } else {\r\n                    for (const arg of prod.args) {\r\n                        if (arg.name.substring(0, 1) === '_' || arg.type === 5) {\r\n                            continue;\r\n                        }\r\n                        if (arg.value !== 0 && !arg.value) {\r\n                            node.hasError = true;\r\n                            prod.hasError = true;\r\n                            EmptyECheck = true;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            if (EmptyECheck) {\r\n                document.getElementById('Console').click();\r\n                console.log('Error: Empty Argument detected. Check marked node(s) and procedure(s)!');\r\n                document.getElementById('spinner-off').click();\r\n                // console.log('The flowchart took ' + (performance.now() - startTime) + ' milliseconds to execute.');\r\n                throw new Error('Empty Argument');\r\n            }\r\n            if (InvalidECheck) {\r\n                document.getElementById('Console').click();\r\n                console.log('Error: Invalid Argument or Argument with Reserved Word detected. Check marked node(s) and procedure(s)!');\r\n                document.getElementById('spinner-off').click();\r\n                // console.log('The flowchart took ' + (performance.now() - startTime) + ' milliseconds to execute.');\r\n                throw new Error('Reserved Word Argument');\r\n            }\r\n        }\r\n\r\n        // setTimeout for 20ms so that the loading screen has enough time to be loaded in\r\n        setTimeout(() => {\r\n            this.executeFlowchart(this.dataService.flowchart);\r\n            // this._webWorkerService.run(this.executeFlowchart, this.dataService.flowchart);\r\n\r\n            for (const node of this.dataService.flowchart.nodes) {\r\n                if (node.type !== 'end') {\r\n                    delete node.output.value;\r\n                }\r\n            }\r\n            document.getElementById('spinner-off').click();\r\n            // console.log('The flowchart took ' + (performance.now() - startTime) + ' milliseconds to execute.');\r\n        }, 20);\r\n\r\n\r\n    }\r\n\r\n    executeFlowchart(flowchart) {\r\n        let globalVars = '';\r\n\r\n        // order the flowchart\r\n        if (!flowchart.ordered) {\r\n            FlowchartUtils.orderNodes(flowchart);\r\n        }\r\n\r\n        // get the string of all imported functions\r\n        const funcStrings = {};\r\n        for (const func of flowchart.functions) {\r\n            funcStrings[func.name] =  CodeUtils.getFunctionString(func);\r\n        }\r\n\r\n        // execute each node\r\n        for (const node of flowchart.nodes) {\r\n            if (!node.enabled) {\r\n                node.output.value = undefined;\r\n                continue;\r\n            }\r\n            globalVars = this.executeNode(node, funcStrings, globalVars);\r\n        }\r\n    }\r\n\r\n    async resolveImportedUrl(prodList: IProcedure[]) {\r\n        for (const prod of prodList) {\r\n            if (prod.type === ProcedureTypes.Imported) {\r\n                for (let i = 1; i < prod.args.length; i++) {\r\n                    const arg = prod.args[i];\r\n                    // args.slice(1).map((arg) => {\r\n                    if (arg.type.toString() !== InputType.URL.toString()) { continue; }\r\n                    prod.resolvedValue = await CodeUtils.getStartInput(arg, InputType.URL);\r\n                }\r\n             }\r\n            if (prod.children) {await this.resolveImportedUrl(prod.children); }\r\n        }\r\n    }\r\n\r\n    executeNode(node: INode, funcStrings, globalVars): string {\r\n        const params = {'currentProcedure': ['']};\r\n        let fnString = '';\r\n        const startTime = performance.now();\r\n        try {\r\n            // get the code for the node\r\n            const codeRes = CodeUtils.getNodeCode(node, true);\r\n            const nodeCode = codeRes[0];\r\n            const varsDefined = codeRes[1];\r\n\r\n\r\n\r\n            // fnString = printFunc + nodeCode.join('\\n');\r\n            fnString = printFunc + '\\nfunction __main_node_code__(){\\n' + nodeCode.join('\\n') + '\\n}\\nreturn __main_node_code__();';\r\n            // add the constants from the start node\r\n            fnString = _varString + globalVars + fnString;\r\n            params['model'] = _parameterTypes.newFn();\r\n            _parameterTypes.mergeFn(params['model'], node.input.value);\r\n\r\n            // add the imported functions code\r\n            let hasFunctions = false;\r\n            for (const funcName in funcStrings) {\r\n                if (funcStrings.hasOwnProperty(funcName)) {\r\n                    fnString = funcStrings[funcName] + fnString;\r\n                    hasFunctions = true;\r\n                }\r\n            }\r\n            if (hasFunctions || node.type === 'start') {\r\n                fnString = mergeInputsFunc + '\\n\\n' + fnString;\r\n            }\r\n            // print the code\r\n            console.log(`Executing node: ${node.name}\\n`);\r\n            if (DEBUG) {\r\n                console.log(`______________________________________________________________\\n/*     ${node.name.toUpperCase()}     */\\n`);\r\n                console.log(fnString);\r\n                /*\r\n                for (const i of nodeCode) {\r\n                    if (i.substring(0, 18) === '__params__.current') {\r\n                        continue;\r\n                    }\r\n                    if (i.length > 500) {\r\n                        console.log(i.substring(0, 500) + '...\\n});\\n');\r\n                    } else {\r\n                        console.log(i);\r\n                    }\r\n                }\r\n                console.log('--------------------------\\n');\r\n                */\r\n            }\r\n\r\n            const prevWindowVar = {};\r\n            for (const v of varsDefined) {\r\n                if (window.hasOwnProperty(v)) {\r\n                    prevWindowVar[v] = window[v];\r\n                }\r\n            }\r\n\r\n            // create the function with the string: new Function ([arg1[, arg2[, ...argN]],] functionBody)\r\n            const fn = new Function('__modules__', '__params__', fnString);\r\n            // execute the function\r\n\r\n            const result = fn(Modules, params);\r\n\r\n            for (const v of varsDefined) {\r\n                if (window.hasOwnProperty(v)) {\r\n                    delete window[v];\r\n                    if (prevWindowVar[v]) {\r\n                        window[v] = prevWindowVar[v];\r\n                    }\r\n                }\r\n            }\r\n\r\n            node.output.value = result;\r\n            if (node.type === 'start') {\r\n                for (const constant in params['constants']) {\r\n                    if (params['constants'].hasOwnProperty(constant)) {\r\n                        const constString = JSON.stringify(params['constants'][constant]);\r\n                        globalVars += `const ${constant} = ${constString};\\n`;\r\n                    }\r\n                }\r\n                globalVars += '\\n';\r\n            }\r\n            node.model = params['model'];\r\n            const endTime = performance.now();\r\n            const duration: number = Math.round(endTime - startTime);\r\n            let duration_msg: string;\r\n            if (duration < 1000)  {\r\n                duration_msg = '  Executed in ' + duration + ' milliseconds.';\r\n            } else {\r\n                duration_msg = '  Executed in ' + duration / 1000 + ' seconds.';\r\n            }\r\n            console.log(duration_msg);\r\n            return globalVars;\r\n        } catch (ex) {\r\n            const endTime = performance.now();\r\n            const duration: number = Math.round(endTime - startTime);\r\n            let duration_msg: string;\r\n            if (duration < 1000)  {\r\n                duration_msg = '  Executed in ' + duration + ' milliseconds.';\r\n            } else {\r\n                duration_msg = '  Executed in ' + duration / 1000 + ' seconds.';\r\n            }\r\n            console.log(duration_msg);\r\n            document.getElementById('spinner-off').click();\r\n            if (DEBUG) {\r\n                console.log('\\n=======================================\\n' +\r\n                    ex.name +\r\n                    '\\n=======================================\\n' +\r\n                    ex.message);\r\n                throw ex;\r\n            }\r\n            node.hasError = true;\r\n            // console.warn(`${node.name} errored`);\r\n\r\n            // Unexpected Identifier\r\n            // Unexpected token\r\n            const prodWithError: string = params['currentProcedure'][0];\r\n            const markError = function(prod: IProcedure, id: string) {\r\n                if (prod['ID'] && id && prod['ID'] === id) {\r\n                    prod.hasError = true;\r\n                }\r\n                if (prod.children) {\r\n                    prod.children.map(function(p) {\r\n                        markError(p, id);\r\n                    });\r\n                }\r\n            };\r\n            if (prodWithError !== '') {\r\n                node.procedure.map(function(prod: IProcedure) {\r\n                    if (prod['ID'] === prodWithError) {\r\n                        prod.hasError = true;\r\n                    }\r\n                    if (prod.children) {\r\n                        prod.children.map(function(p) {\r\n                            markError(p, prodWithError);\r\n                        });\r\n                    }\r\n                });\r\n            }\r\n\r\n            if (ex.toString().indexOf('Unexpected identifier') > -1) {\r\n                ex.message = 'Unexpected Identifier error. Did you declare everything?' +\r\n                'Check that your strings are enclosed in quotes (\")';\r\n            } else if (ex.toString().indexOf('Unexpected token') > -1 || ex.toString().indexOf('unexpected token') > -1) {\r\n                ex.message = 'Unexpected token error. Check for stray spaces or reserved keywords?';\r\n            } else if (ex.toString().indexOf('\\'readAsText\\' on \\'FileReader\\'') > -1) {\r\n                ex.message = 'Unable to read file input. Check all start node inputs.';\r\n            } else if (ex.toString().indexOf('Cannot read property \\'splice\\'') > -1) {\r\n                ex.message = 'Unrecognized or missing variable in the procedure.';\r\n            }\r\n            document.getElementById('Console').click();\r\n            // @ts-ignore\r\n            // console.logs = [];\r\n            console.log('\\n=======================================\\n' +\r\n                        ex.name +\r\n                        '\\n=======================================\\n' +\r\n                        ex.message);\r\n            // console.log('---------------\\nError node code:');\r\n            // console.log(fnString);\r\n            throw ex;\r\n\r\n        }\r\n    }\r\n\r\n    runningFunction(functionDetails) {\r\n        // create the function with the string: new Function ([arg1[, arg2[, ...argN]],] functionBody)\r\n        const fn = new Function('__modules__', '__params__', functionDetails.fnString);\r\n        // execute the function\r\n        const result = fn(functionDetails.Modules, functionDetails.params);\r\n        return [result, functionDetails.params];\r\n    }\r\n}\r\n","\r\nexport class DownloadUtils {\r\n\r\n    static downloadFile(fileName: string, fileContent: Blob) {\r\n        if (window.navigator.msSaveOrOpenBlob) {\r\n            window.navigator.msSaveOrOpenBlob(fileContent, fileName);\r\n        } else {\r\n            const a = document.createElement('a');\r\n            document.body.appendChild(a);\r\n            const url = window.URL.createObjectURL(fileContent);\r\n            a.href = url;\r\n            a.download = fileName;\r\n            a.click();\r\n            setTimeout(() => {\r\n                window.URL.revokeObjectURL(url);\r\n                document.body.removeChild(a);\r\n            }, 0);\r\n        }\r\n    }\r\n}\r\n","export { SaveFileComponent } from './savefile.component';\r\nexport { LoadFileComponent } from './loadfile.component';\r\nexport { NewFileComponent } from './newfile.component';\r\n","import { Component, Output, EventEmitter } from '@angular/core';\r\nimport { IMobius } from '@models/mobius';\r\nimport { Observable } from 'rxjs';\r\nimport { ProcedureTypes } from '@shared/models/procedure';\r\nimport * as circularJSON from 'circular-json';\r\nimport * as funcs from '@modules';\r\nimport { DataService } from '@services';\r\nimport { _parameterTypes } from '@modules';\r\nimport { ModuleList } from '@shared/decorators';\r\n\r\n@Component({\r\n  selector: 'file-load',\r\n  template:  `<button id='loadfile' class='btn' onclick=\"document.getElementById('file-input').click();\">Load</button>\r\n              <input id=\"file-input\" type=\"file\" (change)=\"sendloadfile()\" style=\" display: none;\" />`,\r\n  styles: [\r\n            `\r\n            button.btn{\r\n                margin: 0px 0px 0px 0px;\r\n                font-size: 10px;\r\n                line-height: 12px;\r\n                border: 2px solid gray;\r\n                border-radius: 4px;\r\n                padding: 2px 5px;\r\n                background-color: #3F4651;\r\n                color: #E7BF00;\r\n                font-weight: 600;\r\n                text-transform: uppercase;\r\n             }\r\n            button.btn:hover{\r\n                background-color: gray;\r\n                color: white;\r\n            }\r\n\r\n             `\r\n          ]\r\n})\r\nexport class LoadFileComponent {\r\n\r\n    constructor(private dataService: DataService) {}\r\n\r\n\r\n    sendloadfile() {\r\n        const selectedFile = (<HTMLInputElement>document.getElementById('file-input')).files[0];\r\n        const stream = Observable.create(observer => {\r\n            const reader = new FileReader();\r\n            reader.onloadend = () => {\r\n                function checkMissingProd(prodList: any[]) {\r\n                    let check = true;\r\n                    for (const prod of prodList) {\r\n                        if (prod.children) {\r\n                            if (!checkMissingProd(prod.children)) {\r\n                                check = false;\r\n                            }\r\n                        }\r\n                        prod.hasError = false;\r\n                        if (prod.type !== ProcedureTypes.Function) { continue; }\r\n                        if (!funcs[prod.meta.module] || !funcs[prod.meta.module][prod.meta.name]) {\r\n                            prod.hasError = true;\r\n                            check = false;\r\n                        }\r\n                    }\r\n                    return check;\r\n                }\r\n                // if (typeof reader.result === 'string') {}\r\n                const f = circularJSON.parse(<string>reader.result);\r\n                const file: IMobius = {\r\n                    name: f.name,\r\n                    author: f.author,\r\n                    flowchart: f.flowchart,\r\n                    last_updated: f.last_updated,\r\n                    version: f.version\r\n                };\r\n                file.flowchart.name = selectedFile.name.split('.mob')[0];\r\n                let hasError = false;\r\n                for (const node of file.flowchart.nodes) {\r\n                    if (!checkMissingProd(node.procedure)) {\r\n                        node.hasError = true;\r\n                        hasError = true;\r\n                    }\r\n                }\r\n                if (hasError) {\r\n                    alert('The flowchart contains functions that does not exist in the current version of Mobius');\r\n                }\r\n\r\n                // TO BE REMOVED after all the existing mob files are updated\r\n                const endNode = file.flowchart.nodes[file.flowchart.nodes.length - 1];\r\n                if (endNode.procedure.length === 0) {\r\n                    endNode.procedure = [{type: 13, ID: '',\r\n                    parent: undefined,\r\n                    meta: {name: '', module: ''},\r\n                    children: undefined,\r\n                    argCount: 0,\r\n                    args: [],\r\n                    print: false,\r\n                    enabled: true,\r\n                    selected: false,\r\n                    hasError: false}];\r\n                }\r\n                if (endNode.procedure[endNode.procedure.length - 1].type !== 11) {\r\n                    const returnMeta = _parameterTypes.return.split('.');\r\n                    for (const i of ModuleList) {\r\n                        if (i.module !== returnMeta[0]) { continue; }\r\n                        for ( const j of i.functions) {\r\n                            if (j.name !== returnMeta[1]) { continue; }\r\n                            endNode.procedure.push({type: 11, ID: '',\r\n                            parent: undefined,\r\n                            meta: {name: '', module: ''},\r\n                            children: undefined,\r\n                            argCount: j.argCount,\r\n                            args: j.args,\r\n                            print: false,\r\n                            enabled: true,\r\n                            selected: false,\r\n                            hasError: false});\r\n                            break;\r\n                        }\r\n                        break;\r\n                    }\r\n                }\r\n                // REMOVE ENDS\r\n\r\n                observer.next(file);\r\n                observer.complete();\r\n                };\r\n            reader.readAsText(selectedFile);\r\n        });\r\n        stream.subscribe(loadeddata => {\r\n            this.dataService.file = loadeddata;\r\n            this.dataService.newFlowchart = true;\r\n            if (this.dataService.node.type !== 'end') {\r\n                loadeddata.flowchart.meta.selected_nodes = [loadeddata.flowchart.nodes.length - 1];\r\n                // for (let i = 0; i < loadeddata.flowchart.nodes.length; i++) {\r\n                //     if (loadeddata.flowchart.nodes[i].type === 'end') {\r\n                //         loadeddata.flowchart.meta.selected_nodes = [i];\r\n                //         break;\r\n                //     }\r\n                // }\r\n            }\r\n            document.getElementById('executeButton').click();\r\n            const zooming = document.getElementById('zoomToFit');\r\n            if (zooming) {\r\n                zooming.click();\r\n                this.dataService.newFlowchart = false;\r\n            } else {\r\n                this.dataService.newFlowchart = true;\r\n            }\r\n        });\r\n        (<HTMLInputElement>document.getElementById('file-input')).value = '';\r\n    }\r\n\r\n\r\n    //   @ViewChild('fileInput') fileInput: ElementRef;\r\n    //   openPicker(): void{\r\n    //     let el: HTMLElement = this.fileInput.nativeElement as HTMLElement;\r\n    //     el.click();\r\n    //   }\r\n\r\n    //   loadFile(url ?:string): void{\r\n    //     let file = this.fileInput.nativeElement.files[0];\r\n    //     if (file) {\r\n    //         let reader = new FileReader();\r\n    //         reader.readAsText(file, \"UTF-8\");\r\n    //         let fs = this.flowchartService;\r\n    //         reader.onload = function (evt) {\r\n    //           let fileString: string = evt.target[\"result\"];\r\n    //           fs.loadFile(fileString);\r\n    //         }\r\n    //         reader.onerror = function (evt) {\r\n    //             console.log(\"Error reading file\");\r\n    //         }\r\n    //     }\r\n    // this.flowchartService.loadFile(url);\r\n}\r\n","import { Component, Output, EventEmitter } from '@angular/core';\r\nimport { IMobius } from '@models/mobius';\r\nimport { Observable } from 'rxjs';\r\nimport { ProcedureTypes } from '@shared/models/procedure';\r\nimport * as circularJSON from 'circular-json';\r\nimport * as funcs from '@modules';\r\nimport { DataService } from '@services';\r\nimport { _parameterTypes } from '@modules';\r\nimport { ModuleList } from '@shared/decorators';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'load-url',\r\n  template:  `<button id='loadurl' class='btn' (click)='loadURL()'></button>`,\r\n  styles: [\r\n            `\r\n            button.btn{\r\n                visibility: hidden;\r\n            }\r\n            `\r\n          ]\r\n})\r\nexport class LoadUrlComponent {\r\n\r\n    constructor(private dataService: DataService, private router: Router) {}\r\n\r\n    async loadStartUpURL(routerUrl: string) {\r\n        let url: any = routerUrl.split('file=');\r\n        if (url.length <= 1 ) {\r\n            return;\r\n        }\r\n        url = url[1].split('&')[0];\r\n        url = url.replace(/%2F/g, '/');\r\n        url = url.replace(/%5C/g, '\\\\');\r\n        url = url.replace(/%22|%27|'/g, '');\r\n        if (url.indexOf('dropbox') !== -1) {\r\n            url = url.replace('www', 'dl').replace('dl=0', 'dl=1');\r\n        }\r\n\r\n        if (routerUrl.indexOf('node=') !== -1) {\r\n            let nodeID: any = routerUrl.split('node=')[1].split('&')[0];\r\n            nodeID = Number(nodeID.replace(/%22|%27|'/g, ''));\r\n            this.loadURL(url, nodeID);\r\n        } else {\r\n            this.loadURL(url);\r\n        }\r\n    }\r\n\r\n    loadURL(url: string, nodeID?: number) {\r\n        const stream = Observable.create(observer => {\r\n            const request = new XMLHttpRequest();\r\n\r\n            request.open('GET', url);\r\n            request.onload = () => {\r\n                if (request.status === 200) {\r\n                    const f = circularJSON.parse(request.responseText);\r\n                    const file: IMobius = {\r\n                        name: f.name,\r\n                        author: f.author,\r\n                        flowchart: f.flowchart,\r\n                        last_updated: f.last_updated,\r\n                        version: f.version\r\n                    };\r\n                    const urlSplit = url.split('/');\r\n                    file.flowchart.name = urlSplit[urlSplit.length - 1 ].split('.mob')[0];\r\n\r\n                    // TO BE REMOVED after all the existing mob files are updated\r\n                    const endNode = file.flowchart.nodes[file.flowchart.nodes.length - 1];\r\n                    if (endNode.procedure.length === 0) {\r\n                        endNode.procedure = [{type: 13, ID: '',\r\n                        parent: undefined,\r\n                        meta: {name: '', module: ''},\r\n                        children: undefined,\r\n                        argCount: 0,\r\n                        args: [],\r\n                        print: false,\r\n                        enabled: true,\r\n                        selected: false,\r\n                        hasError: false}];\r\n                    }\r\n                    if (endNode.procedure[endNode.procedure.length - 1].type !== 11) {\r\n                        const returnMeta = _parameterTypes.return.split('.');\r\n                        for (const i of ModuleList) {\r\n                            if (i.module !== returnMeta[0]) { continue; }\r\n                            for ( const j of i.functions) {\r\n                                if (j.name !== returnMeta[1]) { continue; }\r\n                                endNode.procedure.push({type: 11, ID: '',\r\n                                parent: undefined,\r\n                                meta: {name: '', module: ''},\r\n                                children: undefined,\r\n                                argCount: j.argCount,\r\n                                args: j.args,\r\n                                print: false,\r\n                                enabled: true,\r\n                                selected: false,\r\n                                hasError: false});\r\n                                break;\r\n                            }\r\n                            break;\r\n                        }\r\n                    }\r\n                    // REMOVE ENDS\r\n\r\n                    observer.next(file);\r\n                    observer.complete();\r\n                } else {\r\n                    console.log('Error: Unable to load file: ' + url);\r\n                    observer.error('error happened');\r\n                }\r\n            };\r\n\r\n            request.onerror = () => {\r\n                console.log('Error: Unable to load file: ' + url);\r\n                observer.error('error happened');\r\n            };\r\n            request.send();\r\n        });\r\n        stream.subscribe(loadeddata => {\r\n            this.dataService.file = loadeddata;\r\n            this.dataService.newFlowchart = true;\r\n            if (nodeID && nodeID >= 0 && nodeID < loadeddata.flowchart.nodes.length) {\r\n                loadeddata.flowchart.meta.selected_nodes = [nodeID];\r\n                this.router.navigate(['/editor']);\r\n            } else if (this.dataService.node.type !== 'end') {\r\n                loadeddata.flowchart.meta.selected_nodes = [loadeddata.flowchart.nodes.length - 1];\r\n            }\r\n            document.getElementById('executeButton').click();\r\n        });\r\n    }\r\n\r\n}\r\n","import { Component, Output, EventEmitter, ChangeDetectorRef } from '@angular/core';\r\nimport { IMobius } from '@models/mobius';\r\nimport { FlowchartUtils } from '@models/flowchart';\r\nimport { DataService } from '@services';\r\n\r\n@Component({\r\n  selector: 'file-new',\r\n  template:  `<button id='newfile' class='btn' (click)='sendNewFile()'>New</button>`,\r\n  styles: [\r\n            `\r\n            button.btn{\r\n                margin: 0px 0px 0px 0px;\r\n                font-size: 10px;\r\n                line-height: 12px;\r\n                border: 2px solid gray;\r\n                border-radius: 4px;\r\n                padding: 2px 5px;\r\n                background-color: #3F4651;\r\n                color: #E7BF00;\r\n                font-weight: 600;\r\n                text-transform: uppercase;\r\n            }\r\n            button.btn:hover{\r\n                background-color: gray;\r\n                color: white;\r\n            }\r\n             `\r\n          ]\r\n})\r\nexport class NewFileComponent {\r\n\r\n    @Output() create = new EventEmitter();\r\n\r\n    constructor(private dataService: DataService, private cdr: ChangeDetectorRef) {}\r\n\r\n    sendNewFile() {\r\n        const confirmed = confirm('Resetting would delete the current flowchart. Would you like to continue?');\r\n        if (!confirmed) { return; }\r\n        const file: IMobius = {\r\n            name: 'default_file.mob',\r\n            author: 'new_user',\r\n            flowchart: FlowchartUtils.newflowchart(),\r\n            last_updated: new Date(),\r\n            version: 1\r\n        };\r\n        this.dataService.file = file;\r\n        const zooming = document.getElementById('zoomToFit');\r\n        if (zooming) {\r\n            zooming.click();\r\n            this.dataService.newFlowchart = false;\r\n        } else {\r\n            this.dataService.newFlowchart = true;\r\n        }\r\n        this.cdr.detectChanges();\r\n        document.getElementById('executeButton').click();\r\n    }\r\n}\r\n","import { Component, Input} from '@angular/core';\r\nimport { DownloadUtils } from './download.utils';\r\nimport * as circularJSON from 'circular-json';\r\nimport { FlowchartUtils } from '@models/flowchart';\r\nimport { DataService } from '@services';\r\nimport { InputType } from '@models/port';\r\nimport { ProcedureTypes } from '@models/procedure';\r\nimport { IdGenerator } from '@utils';\r\n\r\n@Component({\r\n  selector: 'file-save',\r\n  template:  `<button id='savefile' class='btn' (click)='download()'>Save</button>`,\r\n  styles: [\r\n            `\r\n            button.btn{\r\n                margin: 0px 0px 0px 0px;\r\n                font-size: 10px;\r\n                line-height: 12px;\r\n                border: 2px solid gray;\r\n                border-radius: 4px;\r\n                padding: 2px 5px;\r\n                background-color: #3F4651;\r\n                color: #E7BF00;\r\n                font-weight: 600;\r\n                text-transform: uppercase;\r\n             }\r\n            button.btn:hover{\r\n                background-color: gray;\r\n                color: white;\r\n            }\r\n             `\r\n          ]\r\n})\r\nexport class SaveFileComponent {\r\n\r\n    constructor(private dataService: DataService) {}\r\n\r\n\r\n    async download() {\r\n        const f = this.dataService.file;\r\n\r\n        if (!f.flowchart.ordered) {\r\n            FlowchartUtils.orderNodes(f.flowchart);\r\n        }\r\n\r\n        for (const prod of f.flowchart.nodes[0].procedure) {\r\n            if (prod.type !== ProcedureTypes.Constant) { continue; }\r\n            if (prod.meta.inputMode.toString() === InputType.File.toString()) {\r\n                const arg = prod.args[1];\r\n                if (arg.value && arg.value.lastModified) {\r\n                    const p = new Promise((resolve) => {\r\n                        const reader = new FileReader();\r\n                        reader.onload = function() {\r\n                            resolve(reader.result);\r\n                        };\r\n                        reader.readAsText(arg.value);\r\n                    });\r\n                    window.localStorage.setItem(arg.value.name, '`' + await p + '`');\r\n                    arg.value = {'name': arg.value.name};\r\n                }\r\n                if (arg.default && arg.default.lastModified) {\r\n                    const p = new Promise((resolve) => {\r\n                        const reader = new FileReader();\r\n                        reader.onload = function() {\r\n                            resolve(reader.result);\r\n                        };\r\n                        reader.readAsText(arg.default);\r\n                    });\r\n                    window.localStorage.setItem(arg.default.name, '`' + await p + '`');\r\n                    arg.default = {'name': arg.default.name};\r\n                }\r\n            }\r\n        }\r\n\r\n        for (const node of f.flowchart.nodes) {\r\n            node.model = undefined;\r\n            if (node.input.hasOwnProperty('value')) {\r\n                node.input.value = undefined;\r\n            }\r\n            if (node.output.hasOwnProperty('value')) {\r\n                node.output.value = undefined;\r\n            }\r\n            for (const prod of node.procedure) {\r\n                if (prod.hasOwnProperty('resolvedValue')) {\r\n                    prod.resolvedValue = undefined;\r\n                }\r\n            }\r\n        }\r\n\r\n        const savedfile = circularJSON.parse(circularJSON.stringify(f));\r\n        for (const node of savedfile.flowchart.nodes) {\r\n            node.id = IdGenerator.getNodeID();\r\n            for (const prod of node.state.procedure) {\r\n                prod.selected = false;\r\n            }\r\n            node.state.procedure = [];\r\n        }\r\n\r\n        // **** need to modify this when changing the input's constant function:\r\n        // **** this part resets the value of the last argument of the function when saving the file\r\n        /*\r\n        for (const prod of savedfile.flowchart.nodes[0].procedure) {\r\n            prod.args[prod.argCount - 1].value = undefined;\r\n        }\r\n        */\r\n\r\n\r\n        savedfile.flowchart.meta.selected_nodes = [0];\r\n        for (const edge of savedfile.flowchart.edges) {\r\n            edge.selected = false;\r\n        }\r\n\r\n        savedfile.name = savedfile.flowchart.name;\r\n\r\n        const fileString = circularJSON.stringify(savedfile, null, 4);\r\n        const fname = `${savedfile.flowchart.name.replace(/\\ /g, '_')}.mob`;\r\n        const blob = new Blob([fileString], {type: 'application/json'});\r\n        DownloadUtils.downloadFile(fname, blob);\r\n\r\n        this.dataService.flowchart.name = 'Untitled';\r\n    }\r\n\r\n}\r\n","module.exports = \"<div class='container__header'>\\r\\n\\r\\n    <!-- hidden components (new file, save file, loaf file) for the dropdown menu-->\\r\\n    <div style=\\\"display: none;\\\">\\r\\n        <file-new></file-new>\\r\\n        <file-save></file-save>\\r\\n        <file-load></file-load>\\r\\n    </div>\\r\\n\\r\\n    <!-- buttons -->\\r\\n    <div class='header-btn-group'>\\r\\n\\r\\n        <!-- top left dropdown menu -->\\r\\n        <!-- <div class=\\\"dropmenu\\\"> -->\\r\\n            <!-- dropdown menu for new file, save file, loaf file-->\\r\\n            <!-- <div> -->\\r\\n                <!--\\r\\n                <button id='dropdownButton' class='btn' mat-icon-button (click)='openDropdownMenu($event)'>\\r\\n                    <mat-icon svgIcon=\\\"cMenu\\\" id='dropdownIcon'></mat-icon>\\r\\n                </button>\\r\\n                -->\\r\\n            <!-- </div>\\r\\n        </div> -->\\r\\n                        \\r\\n\\r\\n        <!-- buttons to navigate to the 4 pages -->\\r\\n        <button class='btn' [class.active]='getUrl()==\\\"/gallery\\\"' [routerLink]=\\\"'/gallery'\\\" title='Gallery'>\\r\\n            <mat-icon svgIcon=\\\"cGallery\\\"></mat-icon>\\r\\n        </button>\\r\\n        <button class='btn' [class.active]='getUrl()==\\\"/dashboard\\\"' [routerLink]=\\\"'/dashboard'\\\" title='Dashboard'>\\r\\n            <mat-icon svgIcon=\\\"cDashboard\\\"></mat-icon>\\r\\n        </button>\\r\\n        <button class='btn' [class.active]='getUrl()==\\\"/flowchart\\\"' [routerLink]=\\\"'/flowchart'\\\" title='Flowchart'>\\r\\n            <mat-icon svgIcon=\\\"cFlowchart\\\"></mat-icon>\\r\\n        </button>\\r\\n        <button class='btn' [class.active]='getUrl()==\\\"/editor\\\"' [routerLink]=\\\"'/editor'\\\" title='Procedure'>\\r\\n            <mat-icon svgIcon=\\\"cEditor\\\"></mat-icon>\\r\\n        </button>\\r\\n                \\r\\n        <!-- execute button -->\\r\\n        <execute></execute>\\r\\n    </div>\\r\\n\\r\\n    <div class='filename-container'>\\r\\n        <div id='filename' (click)='openDropdownMenu($event)'>{{getTitle()}}</div>\\r\\n        \\r\\n        <div id=\\\"dropdownMenu\\\">\\r\\n            <button onclick=\\\"document.getElementById('newfile').click();\\\"\\r\\n            title=\\\"Create New Flowchart\\\"> \\r\\n                <mat-icon>rotate_left</mat-icon> \\r\\n                New File\\r\\n            </button>\\r\\n            <br>\\r\\n            <button onclick=\\\"document.getElementById('savefile').click();\\\"\\r\\n            title=\\\"Save Flowchart File to Computer\\\">\\r\\n                <mat-icon>save_alt</mat-icon>\\r\\n                Save File\\r\\n                \\r\\n            </button>\\r\\n            <br>\\r\\n            <button (click)=\\\"loadFile()\\\"\\r\\n            title=\\\"Load Flowchart File from Computer\\\">\\r\\n                <mat-icon>launch</mat-icon>\\r\\n                Load File \\r\\n            </button>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n\\r\\n</div>\\r\\n\"","module.exports = \"panel-header button {\\n  display: inline-block;\\n  vertical-align: bottom;\\n  background-color: transparent;\\n  color: #808080;\\n  border: none;\\n  outline: none;\\n  cursor: pointer;\\n  padding: 0px;\\n  width: 34px;\\n  height: 34px;\\n  transition: 0.3s;\\n  font-size: 15px; }\\n\\nbutton:hover {\\n  color: #00006d; }\\n\\npanel-header button.active {\\n  color: #00006d; }\\n\\n.container__header {\\n  display: inline-flex;\\n  float: left;\\n  width: 100%;\\n  height: 41px;\\n  padding: 0px;\\n  margin: 0px; }\\n\\n.container__header .header-btn-group {\\n    flex-shrink: 0;\\n    display: inline-flex;\\n    flex-flow: row nowrap;\\n    height: 41px;\\n    padding: 0px;\\n    margin: 0px;\\n    overflow: hidden;\\n    z-index: 1; }\\n\\n.container__header .header-btn-group .mat-icon-button {\\n      height: 40px !important;\\n      width: 40px !important; }\\n\\n.container__header .header-btn-group .active {\\n      background-color: transparent; }\\n\\n.container__header .filename-container {\\n    width: calc(100% - 170px);\\n    display: flex;\\n    justify-content: flex-start; }\\n\\n.container__header #filename {\\n    cursor: pointer;\\n    height: 40px;\\n    font-size: 15px;\\n    color: #373737;\\n    width: 100%;\\n    padding-top: 0px;\\n    text-align: left;\\n    vertical-align: middle;\\n    line-height: 35px;\\n    overflow: hidden;\\n    text-overflow: ellipsis; }\\n\\n.container__header #filename:hover {\\n      color: #00006d; }\\n\\n/*\\r\\nbutton.mat-menu-item{ // drop-down (top-bar) menu buttons\\r\\n    background-color: $color5;\\r\\n    color: $color2;\\r\\n    mat-icon{\\r\\n        color: $color2;\\r\\n    }\\r\\n\\r\\n    height: $header-height;\\r\\n    line-height: $header-height;\\r\\n    font-size: $fsize2;\\r\\n    text-align: center;\\r\\n}\\r\\n\\r\\nbutton.mat-menu-item:hover{\\r\\n    background-color: $color5;\\r\\n    color: $color5;\\r\\n    // mat-icon{\\r\\n    //     color: $color5;\\r\\n    // }\\r\\n}\\r\\n*/\\n\\n#dropdownMenu {\\n  display: none;\\n  position: fixed;\\n  transition: display 0.4s;\\n  z-index: 1;\\n  background-color: #fafafb;\\n  border-left: 1px solid #999999;\\n  border-bottom: 1px solid #999999; }\\n\\n#dropdownMenu button {\\n    display: inline-block;\\n    width: 100px;\\n    line-height: 30px;\\n    height: 30px;\\n    font-size: 12px;\\n    vertical-align: middle;\\n    color: #373737; }\\n\\n#dropdownMenu button mat-icon {\\n      color: inherit;\\n      vertical-align: middle;\\n      font-size: 20px;\\n      height: 20px;\\n      width: 20px; }\\n\\n#dropdownMenu button:hover {\\n      color: #00006d; }\\n\"","import { Component, Input, HostListener } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'panel-header',\r\n  templateUrl:  'panel-header.component.html',\r\n  styleUrls: ['panel-header.component.scss']\r\n})\r\nexport class PanelHeaderComponent {\r\n\r\n    @Input() title: string;\r\n\r\n    constructor(private router: Router) {\r\n      }\r\n\r\n    getTitle() {\r\n        return this.title.replace(/_/g, ' ');\r\n    }\r\n\r\n    getUrl() {\r\n        return this.router.url;\r\n    }\r\n\r\n    loadFile() {\r\n        document.getElementById('file-input').click();\r\n        // this.router.navigate(['/dashboard']);\r\n    }\r\n\r\n    openDropdownMenu(e: MouseEvent) {\r\n        /*\r\n        const dropdowns = document.getElementsByClassName('dropdown-content');\r\n        for (let i = 0; i < dropdowns.length; i++) {\r\n            const openDropdown = dropdowns[i];\r\n            if (openDropdown.classList.contains('show')) {\r\n            openDropdown.classList.remove('show');\r\n            }\r\n        }\r\n        */\r\n        const stl = document.getElementById('dropdownMenu').style;\r\n        if (!stl.display || stl.display === 'none') {\r\n            stl.display = 'block';\r\n            // const bRect = (<Element>e.target).getBoundingClientRect();\r\n            // console.log(bRect)\r\n            // stl.transform = `translate(` + bRect.left + `px, ` + bRect.height + `px)`;\r\n        } else {\r\n            stl.display = 'none';\r\n        }\r\n        e.stopPropagation();\r\n\r\n    }\r\n\r\n    @HostListener('window:click', [])\r\n    onWindowClick() {\r\n        document.getElementById('dropdownMenu').style.display = 'none';\r\n        const nodeMenu = document.getElementById('nodeMenu');\r\n        if (nodeMenu) {\r\n            document.getElementById('nodeMenu').style.display = 'none';\r\n        }\r\n        const galleryMenu = document.getElementById('galleryMenu');\r\n        if (galleryMenu) {\r\n            document.getElementById('galleryMenu').style.display = 'none';\r\n        }\r\n    }\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'navigation',\r\n  template: `<ul class='nav'>\r\n                <li class='link' *ngFor='let link of _links;'\r\n                      [class.active]='link.path == _router.url'\r\n                      [routerLink]=\"link.path\"\r\n                      >{{link.name}}</li>\r\n              </ul>`,\r\n  styles: [`\r\n      ul.nav{\r\n        margin: 0px;\r\n        padding: 0px;\r\n      }\r\n\r\n      li.link{\r\n        display: inline;\r\n        border: 2px solid gray;\r\n        border-radius: 4px;\r\n        margin: 15px 15px 15px 0px;\r\n        padding: 5px;\r\n        text-transform: uppercase;\r\n        font-weight: 600;\r\n        cursor: pointer;\r\n        font-size: 16px;\r\n      }\r\n\r\n      li.link:hover{\r\n        background-color: gray;\r\n        color: white;\r\n      }\r\n\r\n      .active{\r\n        background-color: #222;\r\n        color: white;\r\n        border-color: #222 !important;\r\n      }\r\n  `],\r\n})\r\nexport class NavigationComponent {\r\n\r\n    _links = [\r\n      { path: '/about',\r\n        name: 'about'\r\n      },\r\n      { path: '/gallery',\r\n        name: 'gallery'\r\n      },\r\n      { path: '/dashboard',\r\n        name: 'dashboard'\r\n      },\r\n      { path: '/editor',\r\n        name: 'editor'\r\n      },\r\n\r\n    ];\r\n\r\n    constructor(private _router: Router) { }\r\n\r\n}\r\n","module.exports = \"<h1>Page Not Found</h1>\\r\\n<p>Dolore ex aliqua ut incididunt laborum deserunt pariatur officia.</p>\\r\\n\"","module.exports = \"\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'page-not-found',\r\n  templateUrl: './not-found.component.html',\r\n  styleUrls: ['./not-found.component.scss'],\r\n})\r\nexport class PageNotFoundComponent {\r\n\r\n    constructor() {  }\r\n\r\n}\r\n","module.exports = \"<div id=\\\"notificationBox\\\">{{message}}</div>\"","module.exports = \"#notificationBox {\\n  pointer-events: none;\\n  opacity: 0;\\n  min-width: 250px;\\n  background-color: white;\\n  color: #373737;\\n  border: solid #808080 1px;\\n  text-align: center;\\n  padding: 16px;\\n  position: fixed;\\n  z-index: 1;\\n  left: 10px;\\n  bottom: 0px; }\\n\\n#notificationBox.show {\\n  opacity: 1;\\n  bottom: 10px;\\n  transition: ease-in 0.2s; }\\n\\n#notificationBox.hide {\\n  opacity: 0;\\n  bottom: 0px;\\n  transition: ease-in 0.2s; }\\n\"","import { Component, OnChanges, Input, AfterViewInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'notification',\r\n  templateUrl: './notification.component.html',\r\n  styleUrls: ['./notification.component.scss'],\r\n})\r\nexport class NotificationComponent implements AfterViewInit, OnChanges {\r\n\r\n    notificationBox: HTMLElement;\r\n    @Input() message: string;\r\n    @Input() dummyTrigger: boolean;\r\n\r\n    timeOut;\r\n\r\n    constructor() {\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        this.notificationBox = document.getElementById('notificationBox');\r\n    }\r\n\r\n    ngOnChanges() {\r\n        if (!this.notificationBox) { return ; }\r\n        window.clearTimeout(this.timeOut);\r\n        this.notificationBox.className = 'show';\r\n\r\n        // After 3 seconds, remove the show class from DIV\r\n        this.timeOut = setTimeout(function() {\r\n            this.notificationBox.className = this.notificationBox.className.replace('show', '');\r\n            this.notificationBox.className = 'hide';\r\n            this.message = '';\r\n        }, 2500);\r\n    }\r\n\r\n}\r\n","module.exports = \"<div id='spinner-div'>\\r\\n<div id='overlay'></div>\\r\\n<div id='spinner' class=\\\"loader\\\"></div>\\r\\n</div>\\r\\n<button id='spinner-on' style='visibility: hidden;' (click)='on()'></button>\\r\\n<button id='spinner-off' style='visibility: hidden;' (click)='off()'></button>\"","module.exports = \"panel-header button {\\n  display: inline-block;\\n  vertical-align: bottom;\\n  background-color: transparent;\\n  color: #808080;\\n  border: none;\\n  outline: none;\\n  cursor: pointer;\\n  padding: 0px;\\n  width: 34px;\\n  height: 34px;\\n  transition: 0.3s;\\n  font-size: 15px; }\\n\\nbutton:hover {\\n  color: #00006d; }\\n\\npanel-header button.active {\\n  color: #00006d; }\\n\\n#spinner-div {\\n  visibility: hidden; }\\n\\n#overlay {\\n  position: fixed;\\n  width: 100%;\\n  height: 100%;\\n  top: 0;\\n  left: 0;\\n  right: 0;\\n  bottom: 0;\\n  background-color: #E6E6E6;\\n  z-index: 5;\\n  opacity: 0.5;\\n  pointer-events: none; }\\n\\n#spinner {\\n  position: fixed;\\n  left: 45%;\\n  top: 45%;\\n  color: #808080;\\n  border: 10px solid #E6E6E6;\\n  border-radius: 50%;\\n  border-top: 10px solid #00006d;\\n  width: 60px;\\n  height: 60px;\\n  -webkit-animation: spin 2s linear infinite;\\n  animation: spin 2s linear infinite;\\n  z-index: 6; }\\n\\n@-webkit-keyframes spin {\\n  0% {\\n    -webkit-transform: rotate(0deg); }\\n  100% {\\n    -webkit-transform: rotate(360deg); } }\\n\\n@keyframes spin {\\n  0% {\\n    -webkit-transform: rotate(0deg);\\n            transform: rotate(0deg); }\\n  100% {\\n    -webkit-transform: rotate(360deg);\\n            transform: rotate(360deg); } }\\n\"","import { Component, } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'spinner',\r\n    templateUrl: 'spinner.component.html',\r\n    styleUrls: ['spinner.component.scss']\r\n})\r\nexport class SpinnerComponent {\r\n\r\n    constructor() {}\r\n\r\n    on() {\r\n        // document.getElementById('loading-spinner-overlay').style.visibility = 'visible';\r\n        // document.getElementById('loading-spinner').style.visibility = 'visible';\r\n        document.getElementById('spinner-div').style.visibility = 'visible';\r\n    }\r\n\r\n    off() {\r\n        // document.getElementById('loading-spinner-overlay').style.visibility = 'hidden';\r\n        // document.getElementById('loading-spinner').style.visibility = 'hidden';\r\n        document.getElementById('spinner-div').style.visibility = 'hidden';\r\n    }\r\n}\r\n","export { ModuleList, ModuleDocList} from './module-aware.decorator';\r\nexport { ProcedureTypesAware } from './prodtypes-aware.decorator';\r\nexport { ViewerTypesAware } from './viewertypes-aware.decorator';\r\nexport { PortTypesAware } from './porttypes-aware.decorator';\r\n","import { Injectable } from '@angular/core';\r\n\r\nimport { IModule, IFunction } from '@models/procedure';\r\nimport { IArgument } from '@models/code';\r\nimport * as doc from '@assets/typedoc-json/doc.json';\r\n// const doc = require('@assets/typedoc-json/doc.json');\r\n\r\nimport * as Modules from '@modules';\r\n\r\nconst module_list = [];\r\n\r\n// todo: bug fix for defaults\r\nfunction extract_params(func: Function): [IArgument[], boolean] {\r\n    const fnStr = func.toString().replace( /((\\/\\/.*$)|(\\/\\*[\\s\\S]*?\\*\\/))/mg, '');\r\n\r\n    let result = fnStr.slice(fnStr.indexOf('(') + 1, fnStr.indexOf(')')).split(','); // .match( /([^\\s,]+)/g);\r\n    if (result === null || result[0] === '') {\r\n         result = [];\r\n    }\r\n    const final_result = result.map(function(r) {\r\n        r = r.trim();\r\n        const r_value = r.split('=');\r\n\r\n        if (r_value.length === 1) {\r\n            return { name: r_value[0].trim(), value: undefined, default: 0};\r\n        } else {\r\n            return { name: r_value[0].trim(), value: undefined, default: 0 };\r\n        }\r\n\r\n    });\r\n    let hasReturn = true;\r\n    if (fnStr.indexOf('return') === -1 || fnStr.indexOf('return;') !== -1) {\r\n        hasReturn = false;\r\n    }\r\n    return [final_result, hasReturn];\r\n}\r\n\r\nfor ( const m_name in Modules ) {\r\n    if (!Modules[m_name]) { continue; }\r\n    // if (m_name[0] === '_') { continue; }\r\n\r\n    const modObj = <IModule>{};\r\n    modObj.module = m_name;\r\n    modObj.functions = [];\r\n\r\n    for ( const fn_name of Object.keys(Modules[m_name])) {\r\n\r\n        const func = Modules[m_name][fn_name];\r\n\r\n        const fnObj = <IFunction>{};\r\n        fnObj.module = m_name;\r\n        fnObj.name = fn_name;\r\n        fnObj.argCount = func.length;\r\n        const args = extract_params(func);\r\n        fnObj.args = args[0];\r\n        fnObj.hasReturn = args[1];\r\n        modObj.functions.push(fnObj);\r\n    }\r\n    module_list.push(modObj);\r\n}\r\n\r\n\r\nfunction analyzeParamType(fn, paramType) {\r\n    if (paramType.type === 'array') {\r\n        return `${analyzeParamType(fn, paramType.elementType)}[]`;\r\n    } else if (paramType.type === 'intrinsic' || paramType.type === 'reference') {\r\n        return paramType.name;\r\n    } else if (paramType.type === 'union') {\r\n        return paramType.types.map((tp: any) => analyzeParamType(fn, tp)).join(' | ');\r\n    } else if (paramType.type === 'tuple') {\r\n        return '[' + paramType.elements.map((tp: any) => analyzeParamType(fn, tp)).join(', ') + ']';\r\n    } else {\r\n        /**\r\n         * TODO: Update unrecognized param type here\r\n         */\r\n        console.log('param type requires updating:', paramType);\r\n        console.log('in function:', fn.module + '.' + fn.name);\r\n        return paramType.type;\r\n    }\r\n\r\n}\r\n\r\nconst docs = {};\r\nfor (const mod of doc.children) {\r\n    let modName: any = mod.name.split('/');\r\n    modName = modName[modName.length - 1];\r\n    if (modName.substr(0, 1) === '\"' || modName.substr(0, 1) === '\\'') {\r\n        modName = modName.substr(1, modName.length - 2);\r\n    } else {\r\n        modName = modName.substr(0, modName.length - 1);\r\n    }\r\n    if (modName.substr(0, 1) === '_' || modName === 'index') {\r\n        continue;\r\n    }\r\n    const moduleDoc = {};\r\n    for (const func of mod.children) {\r\n        // console.log(func);\r\n        const fn = {};\r\n        fn['name'] = func.name;\r\n        fn['module'] = modName;\r\n        if (!func['signatures']) { continue; }\r\n        if (func['signatures'][0].comment) {\r\n            const cmmt = func['signatures'][0].comment;\r\n            fn['description'] = cmmt.shortText;\r\n            if (cmmt.tags) {\r\n                for (const fnTag of cmmt.tags) {\r\n                    if (fnTag.tag === 'summary') { fn['summary'] = fnTag.text;\r\n                    } else {\r\n                        if (fn[fnTag.tag]) {\r\n                            fn[fnTag.tag].push(fnTag.text);\r\n                        } else {\r\n                            fn[fnTag.tag] = [fnTag.text];\r\n                        }\r\n\r\n                    }\r\n                }\r\n            }\r\n            fn['returns'] = cmmt.returns;\r\n            if (fn['returns']) { fn['returns'] = fn['returns'].trim(); }\r\n        }\r\n        fn['parameters'] = [];\r\n        if (func['signatures'][0].parameters) {\r\n            for (const param of func['signatures'][0].parameters) {\r\n                let namecheck = true;\r\n                for (const systemVarName in Modules._parameterTypes) {\r\n                    if (param.name === Modules._parameterTypes[systemVarName]) {\r\n                        namecheck = false;\r\n                        break;\r\n                    }\r\n                }\r\n                if (!namecheck) {\r\n                    fn['parameters'].push(undefined);\r\n                    continue;\r\n                }\r\n                const pr = {};\r\n\r\n                pr['name'] = param.name;\r\n                if (param.comment) {\r\n                    pr['description'] = param.comment.shortText || param.comment.text;\r\n                }\r\n                pr['type'] = analyzeParamType(fn, param.type);\r\n                fn['parameters'].push(pr);\r\n            }\r\n        }\r\n        moduleDoc[func.name] = fn;\r\n    }\r\n    docs[modName] = moduleDoc;\r\n}\r\n\r\nexport const ModuleList = module_list;\r\nexport const ModuleDocList = docs;\r\n","import { InputType } from '@models/port';\r\n\r\nexport function PortTypesAware(constructor: Function) {\r\n    constructor.prototype.PortTypes = InputType;\r\n\r\n    // array form\r\n    const keys = Object.keys(InputType);\r\n    constructor.prototype.PortTypesArr = keys.slice(keys.length / 2);\r\n}\r\n","import { ProcedureTypes } from '@models/procedure';\r\n\r\nexport function ProcedureTypesAware(constructor: Function) {\r\n    constructor.prototype.ProcedureTypes = ProcedureTypes;\r\n\r\n    // array form\r\n    const keys = Object.keys(ProcedureTypes);\r\n    constructor.prototype.ProcedureTypesArr = keys.slice(keys.length / 2);\r\n}\r\n","import { OutputType } from '@models/port';\r\n\r\nexport function ViewerTypesAware(constructor: Function) {\r\n    constructor.prototype.ViewerTypes = OutputType;\r\n\r\n    // array form\r\n    const keys = Object.keys(OutputType);\r\n    constructor.prototype.ViewerTypesArr = keys.slice(keys.length / 2);\r\n}\r\n","export * from './mobfile-reader.directive';\r\n","/*\r\n *  Adding this to an HTML5 input element\r\n *  allows for the file being read to be converted into a Mobius\r\n *  Flowchart\r\n *\r\n */\r\nimport { Directive, ElementRef, Input, Output, HostBinding, HostListener, EventEmitter } from '@angular/core';\r\nimport * as CircularJSON from 'circular-json';\r\n\r\n@Directive({\r\n  selector: '[mbFileReader]'\r\n})\r\nexport class MbFileReaderDirective {\r\n\r\n  @Input() data: any = {};\r\n  @Output() load = new EventEmitter();\r\n\r\n  constructor(private el: ElementRef) { }\r\n\r\n  @HostListener('change')\r\n  onFileChange() {\r\n    const f = this.el.nativeElement.files[0];\r\n    if (f) {\r\n        const reader = new FileReader();\r\n        reader.readAsText(f, 'UTF-8');\r\n        const ins = this;\r\n        reader.onload = function (evt) {\r\n            const fileString: string = evt.target['result'];\r\n            ins.load_flowchart_from_string(fileString);\r\n        };\r\n        reader.onerror = function (evt) {\r\n            console.log('Error reading file');\r\n        };\r\n    }\r\n  }\r\n\r\n\r\n  //\r\n  // Input: string\r\n  // Output: MobiusFile DS\r\n  //\r\n  //\r\n  private load_flowchart_from_string(fileString: string): void {\r\n    const _this = this;\r\n    // let jsonData: {language: string, flowchart: JSON, modules: JSON};\r\n    // let flowchart: any; // IFlowchart;\r\n\r\n    try {\r\n      const data = CircularJSON.parse(fileString);\r\n      this.load.emit(data);\r\n      // this.data.flowchart = data.flowchart;\r\n      // this.data.modules = data.modules;\r\n      // this.data.language = data.language;\r\n\r\n      // this.update_code_generator(CodeFactory.getCodeGenerator(data[\"language\"]));\r\n      // TODO: this.update_modules();\r\n\r\n      // flowchart = FlowchartReader.read_flowchart_from_data(data[\"flowchart\"]);\r\n      // TODO: select a node\r\n    } catch (err) {\r\n      console.error('Mob-file-reader error', err);\r\n    }\r\n\r\n  }\r\n\r\n\r\n}\r\n","import { INode } from '@models/node';\r\nimport { IProcedure, ProcedureTypes, IFunction } from '@models/procedure';\r\nimport { IPortInput, InputType } from '@models/port';\r\nimport { Observable } from 'rxjs';\r\nimport * as circularJSON from 'circular-json';\r\nimport { _parameterTypes } from '@modules';\r\n\r\n\r\nexport class CodeUtils {\r\n\r\n    static getProcedureCode(prod: IProcedure, existingVars: string[], addProdArr: Boolean): string[] {\r\n        if (prod.enabled === false || prod.type === ProcedureTypes.Blank) { return ['']; }\r\n\r\n        prod.hasError = false;\r\n\r\n        let codeStr: string[] = [];\r\n        const args = prod.args;\r\n        const prefix =\r\n            args.hasOwnProperty('0') && args[0].value && args[0].value.indexOf('[') === -1\r\n            && existingVars.indexOf(args[0].value) === -1 ? 'let ' : '';\r\n        codeStr.push('');\r\n        if (addProdArr && prod.type !== ProcedureTypes.Else && prod.type !== ProcedureTypes.Elseif) {\r\n            codeStr.push(`__params__.currentProcedure[0] = \"${prod.ID}\";`);\r\n        }\r\n\r\n        switch ( prod.type ) {\r\n            case ProcedureTypes.Variable:\r\n                if (!args[0].value) {\r\n                    codeStr.push(`${this.repGetAttrib(args[1].value)};`);\r\n                    break;\r\n                }\r\n                const repVar = this.repSetAttrib(args[0].value);\r\n                if (!repVar) {\r\n                    codeStr.push(`${prefix}${args[0].value} = ${this.repGetAttrib(args[1].value)};`);\r\n                    if (prefix === 'let ') {\r\n                        existingVars.push(args[0].value);\r\n                    }\r\n                } else {\r\n                    codeStr.push(`${repVar[0]} ${this.repGetAttrib(args[1].value)} ${repVar[1]}`);\r\n                }\r\n                break;\r\n\r\n            case ProcedureTypes.If:\r\n                if (args[0].value.indexOf('__params__') !== -1) { throw new Error('Unexpected Identifier'); }\r\n                codeStr.push(`if (${this.repGetAttrib(args[0].value)}){`);\r\n                break;\r\n\r\n            case ProcedureTypes.Else:\r\n                codeStr.push(`else {`);\r\n                break;\r\n\r\n            case ProcedureTypes.Elseif:\r\n                if (args[0].value.indexOf('__params__') !== -1) { throw new Error('Unexpected Identifier'); }\r\n                codeStr.push(`else if(${this.repGetAttrib(args[0].value)}){`);\r\n                break;\r\n\r\n            case ProcedureTypes.Foreach:\r\n                // codeStr.push(`for (${prefix} ${args[0].value} of [...Array(${args[1].value}).keys()]){`);\r\n                if (args[0].value.indexOf('__params__') !== -1) { throw new Error('Unexpected Identifier'); }\r\n                codeStr.push(`for (${prefix} ${args[0].value} of ${this.repGetAttrib(args[1].value)}){`);\r\n                break;\r\n\r\n            case ProcedureTypes.While:\r\n                if (args[0].value.indexOf('__params__') !== -1) { throw new Error('Unexpected Identifier'); }\r\n                codeStr.push(`while (${this.repGetAttrib(args[0].value)}){`);\r\n                break;\r\n\r\n            case ProcedureTypes.Break:\r\n                codeStr.push(`break;`);\r\n                break;\r\n\r\n            case ProcedureTypes.Continue:\r\n                codeStr.push(`continue;`);\r\n                break;\r\n\r\n            case ProcedureTypes.Constant:\r\n                if (!addProdArr) {\r\n                    return [''];\r\n                }\r\n                let constName = args[0].value;\r\n                if (constName.substring(0, 1) === '\"' || constName.substring(0, 1) === '\\'') {\r\n                    constName = args[0].value.substring(1, args[0].value.length - 1);\r\n                }\r\n                codeStr.push(`__params__['constants']['${constName}'] = ${prod.resolvedValue};`);\r\n\r\n                break;\r\n\r\n            case ProcedureTypes.AddData:\r\n                let cst = args[0].value;\r\n                if (!addProdArr) {\r\n                    return [`__modules__.${_parameterTypes.addData}( __params__.model, ${cst});`];\r\n                }\r\n                if (cst.substring(0, 1) === '\"' || cst.substring(0, 1) === '\\'') {\r\n                    cst = args[0].value.substring(1, args[0].value.length - 1);\r\n                }\r\n\r\n                codeStr.push(`__params__['constants']['${cst}'] = ${prod.resolvedValue};`);\r\n                if (_parameterTypes.addData) {\r\n                    codeStr.push(`__modules__.${_parameterTypes.addData}( __params__.model, __params__.constants['${cst}']);`);\r\n                } else {\r\n                    codeStr.push(`__params__.model = mergeInputs( [__params__.model, __params__.constants['${cst}']]);`);\r\n                }\r\n\r\n                break;\r\n\r\n\r\n            case ProcedureTypes.Return:\r\n                let check = true;\r\n                const returnArgVals = [];\r\n                for (const arg of args) {\r\n                    if (arg.name === _parameterTypes.constList) {\r\n                        returnArgVals.push('__params__.constants');\r\n                        continue;\r\n                    }\r\n                    if (arg.name === _parameterTypes.model) {\r\n                        returnArgVals.push('__params__.model');\r\n                        continue;\r\n                    }\r\n                    if (!arg.value) {\r\n                        check = false;\r\n                        break;\r\n                    }\r\n                    if (arg.value.indexOf('__params__') !== -1) { throw new Error('Unexpected Identifier'); }\r\n                    if (arg.value.substring(0, 1) === '#') {\r\n                        returnArgVals.push('`' + this.repGetAttrib(arg.value) + '`');\r\n                        continue;\r\n                    }\r\n                    returnArgVals.push(this.repGetAttrib(arg.value));\r\n                }\r\n                if (!check) {\r\n                    codeStr.push(`return __params__['model'];`);\r\n                } else {\r\n                    codeStr.push(`let __return_value__ = __modules__.${_parameterTypes.return}(${returnArgVals.join(', ')});`);\r\n                    if (addProdArr) {\r\n                        codeStr.push(`console.log('Return: ', __return_value__);`);\r\n                    }\r\n                    codeStr.push(`return __return_value__;`);\r\n                }\r\n                break;\r\n\r\n            case ProcedureTypes.Function:\r\n                const argVals = [];\r\n                for (const arg of args.slice(1)) {\r\n                    if (arg.value && arg.value.indexOf('__params__') !== -1) { throw new Error('Unexpected Identifier'); }\r\n                    if (arg.name === _parameterTypes.constList) {\r\n                        argVals.push('__params__.constants');\r\n                        continue;\r\n                    }\r\n                    if (arg.name === _parameterTypes.model) {\r\n                        argVals.push('__params__.model');\r\n                        continue;\r\n                    }\r\n\r\n                    if (arg.value && arg.value.substring(0, 1) === '#') {\r\n                        argVals.push('`' + this.repGetAttrib(arg.value) + '`');\r\n                        continue;\r\n                    }\r\n                    argVals.push(this.repGetAttrib(arg.value));\r\n\r\n                }\r\n                const argValues = argVals.join(', ');\r\n                const fnCall = `__modules__.${prod.meta.module}.${prod.meta.name}( ${argValues} )`;\r\n                if ( prod.meta.module.toUpperCase() === 'OUTPUT') {\r\n                    if (prod.args[prod.args.length - 1].value) {\r\n                        codeStr.push(`return ${fnCall};`);\r\n                    }\r\n                } else if (args[0].name === '__none__' || !args[0].value) {\r\n                    codeStr.push(`${fnCall};`);\r\n                } else {\r\n                    const repfuncVar = this.repSetAttrib(args[0].value);\r\n                    if (!repfuncVar) {\r\n                        codeStr.push(`${prefix}${args[0].value} = ${fnCall};`);\r\n                        if (prefix === 'let ') {\r\n                            existingVars.push(args[0].value);\r\n                        }\r\n                    } else {\r\n                        codeStr.push(`${repfuncVar[0]} ${fnCall} ${repfuncVar[1]}`);\r\n                    }\r\n                }\r\n                break;\r\n            case ProcedureTypes.Imported:\r\n                let argsVals: any = [];\r\n                for (let i = 1; i < args.length; i++) {\r\n                    const arg = args[i];\r\n                    // args.slice(1).map((arg) => {\r\n                    if (arg.type.toString() !== InputType.URL.toString()) {\r\n                        argsVals.push(this.repGetAttrib(arg.value));\r\n                    } else {\r\n                        argsVals.push(prod.resolvedValue);\r\n                    }\r\n                }\r\n                argsVals = argsVals.join(', ');\r\n\r\n                const fn = `${prod.meta.name}(__params__, ${argsVals} )`;\r\n\r\n                if (!args[0].value) {\r\n                    codeStr.push(`${fnCall};`);\r\n                    break;\r\n                }\r\n                const repImpVar = this.repSetAttrib(args[0].value);\r\n                if (!repImpVar) {\r\n                    codeStr.push(`${prefix}${args[0].value} = ${fn};`);\r\n                    if (prefix === 'let ') {\r\n                        existingVars.push(args[0].value);\r\n                    }\r\n                } else {\r\n                    codeStr.push(`${repImpVar[0]} ${fnCall} ${repImpVar[1]}`);\r\n                }\r\n\r\n                if (prefix === 'let ') {\r\n                    existingVars.push(args[0].value);\r\n                }\r\n                break;\r\n\r\n        }\r\n        if (prod.children) {\r\n            for (const p of prod.children) {\r\n                codeStr = codeStr.concat(CodeUtils.getProcedureCode(p, existingVars, addProdArr));\r\n            }\r\n            codeStr.push(`}`);\r\n        }\r\n\r\n        if (prod.print && prod.args[0].value) {\r\n            const repGet = this.repGetAttrib(prod.args[0].value);\r\n            codeStr.push(`printFunc('${prod.args[0].value}', ${repGet});`);\r\n            // codeStr.push(`wait(5000);`);\r\n        }\r\n        return codeStr;\r\n    }\r\n    static repSetAttrib(val: string) {\r\n        if (!val || val.indexOf('@') === -1) {\r\n            return false;\r\n        }\r\n        const splitted = val.split('@');\r\n        if (splitted.length > 2) {\r\n            splitted[1] = splitted.splice(1, splitted.length - 1).join('@');\r\n        }\r\n        const openBracketMatch = (splitted[1].match(/\\[/g) || []).length;\r\n        if (openBracketMatch) {\r\n            const bracketSplit = splitted[1].substring(0, splitted[1].length - 1).split('[');\r\n            const innerVar = CodeUtils.repGetAttrib(bracketSplit.splice(1, bracketSplit.length - 1).join('['));\r\n            return [`__modules__.${_parameterTypes.setattrib}(__params__.model, ${splitted[0]}, '${bracketSplit[0]}',`,\r\n                    `, ${innerVar});`];\r\n        } else {\r\n            return [`__modules__.${_parameterTypes.setattrib}(__params__.model, ${splitted[0]}, '${splitted[1]}',`,\r\n                    ');'];\r\n        }\r\n\r\n\r\n    }\r\n\r\n    static repGetAttrib(val: string) {\r\n        if (!val) { return; }\r\n        const res = val.split(' ');\r\n        for (const i in res) {\r\n            if (!res[i]) {\r\n                continue;\r\n            }\r\n            const atIndex = res[i].indexOf('@');\r\n            if (atIndex !== -1 && atIndex > 0 && res[i].trim()[0] !== '#') {\r\n                const splitted = res[i].split('@');\r\n                if (splitted.length > 2) {\r\n                    splitted[1] = splitted.splice(1, splitted.length - 1).join('@');\r\n                }\r\n                let pref = '';\r\n                let postf = '';\r\n                while (splitted[0].substring(0, 1) === '[') {\r\n                    splitted[0] = splitted[0].substring(1, splitted[0].length);\r\n                    pref += '[';\r\n                }\r\n                const closeBracketMatch = (splitted[1].match(/\\]/g) || []).length;\r\n                const openBracketMatch = (splitted[1].match(/\\[/g) || []).length;\r\n                if (closeBracketMatch > openBracketMatch) {\r\n                    splitted[1] = splitted[1].substring(0, splitted[1].length - (closeBracketMatch - openBracketMatch));\r\n                    postf = ']'.repeat(closeBracketMatch - openBracketMatch);\r\n                }\r\n                if (openBracketMatch) {\r\n                    const bracketSplit = splitted[1].substring(0, splitted[1].length - 1).split('[');\r\n                    const innerVar = CodeUtils.repGetAttrib(bracketSplit.splice(1, bracketSplit.length - 1).join('['));\r\n                    res[i] = `${pref}__modules__.${_parameterTypes.getattrib}` +\r\n                        `(__params__.model, ${splitted[0]}, '${bracketSplit[0]}', ${innerVar})${postf}`;\r\n                } else {\r\n                    res[i] = `${pref}__modules__.${_parameterTypes.getattrib}(__params__.model, ${splitted[0]}, '${splitted[1]}')${postf}`;\r\n                }\r\n            }\r\n        }\r\n        return res.join(' ');\r\n    }\r\n\r\n    static async getStartInput(arg, inputMode): Promise<any> {\r\n        let val;\r\n        let defaultCheck = false;\r\n        if (arg.value === undefined) {\r\n            val = arg.default;\r\n            defaultCheck = true;\r\n        } else {\r\n            val = arg.value;\r\n        }\r\n        let result = val;\r\n        if (inputMode.toString() === InputType.URL.toString() ) {\r\n            if (val.indexOf('dropbox') !== -1) {\r\n                val = val.replace('www', 'dl').replace('dl=0', 'dl=1');\r\n            }\r\n            const p = new Promise((resolve) => {\r\n                const request = new XMLHttpRequest();\r\n                request.open('GET', val);\r\n                request.onload = () => {\r\n                    resolve(request.responseText);\r\n                };\r\n                request.send();\r\n            });\r\n            result = '`' + await p + '`';\r\n        } else if (inputMode.toString() === InputType.File.toString()) {\r\n            if (val.lastModified) {\r\n                const p = new Promise((resolve) => {\r\n                    const reader = new FileReader();\r\n                    reader.onload = function() {\r\n                        resolve(reader.result);\r\n                    };\r\n                    reader.readAsText(val);\r\n                });\r\n                result = '`' + await p + '`';\r\n                window.localStorage.setItem(val.name, result);\r\n                if (defaultCheck) {\r\n                    arg.default = {'name': val.name};\r\n                } else {\r\n                    arg.value = {'name': val.name};\r\n                }\r\n            } else {\r\n                result = window.localStorage.getItem(val.name);\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    static loadFile(f) {\r\n        const stream = Observable.create(observer => {\r\n          const request = new XMLHttpRequest();\r\n\r\n          request.open('GET', f.download_url);\r\n          request.onload = () => {\r\n              if (request.status === 200) {\r\n                  const fl = circularJSON.parse(request.responseText);\r\n                  observer.next(fl);\r\n                  observer.complete();\r\n              } else {\r\n                  observer.error('error happened');\r\n              }\r\n          };\r\n\r\n          request.onerror = () => {\r\n          observer.error('error happened');\r\n          };\r\n          request.send();\r\n        });\r\n\r\n        stream.subscribe(loadeddata => {\r\n          return loadeddata;\r\n        });\r\n    }\r\n\r\n    static mergeInputs(models): any {\r\n        const result = _parameterTypes['newFn']();\r\n        for (const model of models) {\r\n            _parameterTypes['mergeFn'](result, model);\r\n        }\r\n        return result;\r\n    }\r\n\r\n\r\n\r\n    static getInputValue(inp: IPortInput, node: INode): Promise<string> {\r\n        let input: any;\r\n        if (node.type === 'start' || inp.edges.length === 0) {\r\n            input = _parameterTypes['newFn']();\r\n        } else {\r\n            const inputs = [];\r\n            for (const edge of inp.edges) {\r\n                if (edge.source.parentNode.enabled) {\r\n                    inputs.push(edge.source.value);\r\n                }\r\n            }\r\n            input = CodeUtils.mergeInputs(inputs);\r\n            /*\r\n            if (input.constructor === gsConstructor) {\r\n                input = `new __MODULES__.gs.Model(${input.toJSON()})`\r\n            } else {\r\n                // do nothing\r\n            }\r\n            */\r\n        }\r\n        return input;\r\n    }\r\n\r\n    public static getNodeCode(node: INode, addProdArr = false): string[][] {\r\n        node.hasError = false;\r\n        let codeStr = [];\r\n        const varsDefined: string[] = [];\r\n        // input initializations\r\n        if (addProdArr) {\r\n            const input = CodeUtils.getInputValue(node.input, node);\r\n            node.input.value = input;\r\n        }\r\n\r\n        if (node.type === 'start') {\r\n            codeStr.push('__params__.constants = {};\\n');\r\n        }\r\n\r\n        codeStr.push(`__modules__.${_parameterTypes.preprocess}( __params__.model);`);\r\n        // procedure\r\n        for (const prod of node.procedure) {\r\n            // if (node.type === 'start' && !addProdArr) { break; }\r\n            codeStr = codeStr.concat(CodeUtils.getProcedureCode(prod, varsDefined, addProdArr) );\r\n        }\r\n        if (node.type === 'end' && node.procedure.length > 0) {\r\n            return [codeStr, varsDefined];\r\n            // codeStr.push('}');\r\n            // return ['{'].concat(codeStr);\r\n            // return `{\\n${codeStr.join('\\n')}\\n}`;\r\n        } else {\r\n            codeStr.push(`__modules__.${_parameterTypes.postprocess}( __params__.model);`);\r\n        }\r\n\r\n        codeStr.push('return __params__.model;');\r\n        return [codeStr, varsDefined];\r\n        // return `\\n${codeStr.join('\\n')}\\n\\nreturn __params__.model;\\n`;\r\n\r\n\r\n        // return `{\\n${codeStr.join('\\n')}\\nreturn result;\\n}`;\r\n        // return `/*    ${node.name.toUpperCase()}    */\\n\\n{\\n${codeStr.join('\\n')}\\nreturn ${node.output.name};\\n}`;\r\n\r\n\r\n    }\r\n\r\n    static getFunctionString(func: IFunction): string {\r\n        let fullCode = '';\r\n        let fnCode;\r\n        if (func.args.length === 0) {\r\n            fnCode = `function ${func.name}(__params__)` +\r\n            `{\\nvar merged;\\n`;\r\n        } else {\r\n            fnCode = `function ${func.name}(__params__, ${func.args.map(arg => arg.name).join(', ')})` +\r\n            `{\\nvar merged;\\n`;\r\n        }\r\n\r\n        for (const node of func.flowchart.nodes) {\r\n            const codeRes = CodeUtils.getNodeCode(node, false);\r\n            let code: any = codeRes[0];\r\n\r\n            code = '{\\n' + code.join('\\n') + '\\n}';\r\n            if (func.args.length === 0) {\r\n                fullCode += `function ${node.id}(__params__)` + code + `\\n\\n`;\r\n            } else {\r\n                fullCode += `function ${node.id}(__params__, ${func.args.map(arg => arg.name).join(', ')})` + code + `\\n\\n`;\r\n            }\r\n\r\n            if (node.type === 'start') {\r\n                // fnCode += `let result_${node.id} = ${node.id}(__params__);\\n`\r\n                fnCode += `let result_${node.id} = __params__.model;\\n`;\r\n            } else {\r\n                const activeNodes = [];\r\n                for (const nodeEdge of node.input.edges) {\r\n                    if (!nodeEdge.source.parentNode.enabled) {\r\n                        continue;\r\n                    }\r\n                    activeNodes.push(nodeEdge.source.parentNode.id);\r\n                }\r\n                fnCode += `\\n__params__.model = mergeInputs([${activeNodes.map((nodeId) => 'result_' + nodeId).join(', ')}]);\\n`;\r\n                // if (activeNodes.length === 1) {\r\n                //     fnCode += `__params__.model = mergeInputs([result_${activeNodes}]);\\n`;\r\n                // } else {\r\n                //     fnCode += `merged = mergeInputs([${activeNodes.map((nodeId) => 'result_' + nodeId).join(', ')}]);\\n`;\r\n                //     fnCode += `__params__.model = merged;\\n`;\r\n                // }\r\n                if (func.args.length === 0) {\r\n                    fnCode += `let result_${node.id} = ${node.id}(__params__);\\n`;\r\n                } else {\r\n                    fnCode += `let result_${node.id} = ${node.id}(__params__, ${func.args.map(arg => arg.name).join(', ')});\\n`;\r\n                }\r\n            }\r\n            if (node.type === 'end') {\r\n                // fnCode += `\\n__mainParams__.model = mergeInputs([__mainParams__.model,__params__.model]);\\n`;\r\n                fnCode += `\\nreturn result_${node.id};\\n`;\r\n            }\r\n        }\r\n        fnCode += '}\\n\\n';\r\n        fullCode += fnCode;\r\n        // console.log(fullCode)\r\n        return fullCode;\r\n    }\r\n\r\n\r\n}\r\n","export class ExecuteUtils {\r\n\r\n}\r\n","export { IArgument } from './argument.interface';\r\nexport { CodeUtils } from './code.utils';\r\nexport { ExecuteUtils } from './execute.utils';\r\n","//\r\n//\r\n// The flowchart is the basic datastructure in Mobius - it is essentially a linked-list.\r\n// It also\r\n//\r\n\r\nimport { INode } from '@models/node';\r\nimport { IEdge } from '@models/edge';\r\nimport { IFunction } from '@models/procedure';\r\n\r\nexport interface IFlowchart {\r\n    name: string;\r\n    description: string;\r\n    returnDescription?: string;\r\n    language: string;\r\n\r\n    nodes: INode[];\r\n    edges: IEdge[];\r\n    functions: IFunction[];\r\n    ordered: boolean;\r\n\r\n    meta: {\r\n        selected_nodes: number[];\r\n    };\r\n}\r\n\r\nexport const canvasSize = 10000;\r\n\r\n","import { IFlowchart, canvasSize } from './flowchart.interface';\r\nimport { NodeUtils, INode } from '@models/node';\r\nimport { IEdge } from '@models/edge';\r\n\r\nexport class FlowchartUtils {\r\n\r\n    public static newflowchart(): IFlowchart {\r\n        const startNode = NodeUtils.getStartNode();\r\n        startNode.position = {x: canvasSize * 1.07 / 2, y: canvasSize / 2};\r\n\r\n        const middleNode = NodeUtils.getNewNode();\r\n        middleNode.position = {x: canvasSize * 1.07 / 2, y: 200 + canvasSize / 2};\r\n\r\n        const endNode = NodeUtils.getEndNode();\r\n        endNode.position = {x: canvasSize * 1.07 / 2, y: 400 + canvasSize / 2};\r\n\r\n        const startMid: IEdge = {\r\n            source: startNode.output,\r\n            target: middleNode.input,\r\n            selected: false\r\n        };\r\n        startNode.output.edges = [startMid];\r\n        middleNode.input.edges = [startMid];\r\n\r\n        const midEnd: IEdge = {\r\n            source: middleNode.output,\r\n            target: endNode.input,\r\n            selected: false\r\n        };\r\n        middleNode.output.edges = [midEnd];\r\n        endNode.input.edges = [midEnd];\r\n\r\n        middleNode.enabled = true;\r\n        endNode.enabled = true;\r\n\r\n        const flw: IFlowchart = {\r\n            name: 'Untitled',\r\n            description: '',\r\n            language: 'js',\r\n            meta: {\r\n                selected_nodes: [2]\r\n            },\r\n            nodes: [ startNode, middleNode, endNode ],\r\n            edges: [ startMid, midEnd ],\r\n            functions: [],\r\n            ordered: true\r\n        };\r\n\r\n        return flw;\r\n    }\r\n\r\n    static checkNode(nodeOrder: INode[], node: INode, enabled: boolean) {\r\n        if (node.hasExecuted) {\r\n            return;\r\n        } else if (node.type === 'start' ) {\r\n            nodeOrder.push(node);\r\n        } else {\r\n            for (const edge of node.input.edges) {\r\n                if (!edge.source.parentNode.hasExecuted) {\r\n                    return;\r\n                }\r\n            }\r\n            nodeOrder.push(node);\r\n        }\r\n        node.hasExecuted = true;\r\n        // node.enabled = enabled;\r\n        for (const edge of node.output.edges) {\r\n            FlowchartUtils.checkNode(nodeOrder, edge.target.parentNode, enabled);\r\n        }\r\n    }\r\n\r\n    public static orderNodes(flw: IFlowchart) {\r\n        let startNode;\r\n        for (const node of flw.nodes) {\r\n            if (node.type === 'start') {\r\n                startNode = node;\r\n            }\r\n            node.hasExecuted = false;\r\n        }\r\n        const nodeOrder = [];\r\n        FlowchartUtils.checkNode(nodeOrder, startNode, true);\r\n        if (nodeOrder.length < flw.nodes.length) {\r\n            /*\r\n            for (const node of flw.nodes) {\r\n                if (node.type !== 'start' && node.input.edges.length === 0) {\r\n                    FlowchartUtils.checkNode(nodeOrder, node, false);\r\n                }\r\n            }\r\n            */\r\n            for (const node of flw.nodes) {\r\n                let check = false;\r\n                for (const existingNode of nodeOrder) {\r\n                    if (existingNode === node) {\r\n                        check = true;\r\n                        break;\r\n                    }\r\n                }\r\n                if (check) { continue; }\r\n                // node.enabled = false;\r\n                nodeOrder.push(node);\r\n            }\r\n        }\r\n        if (nodeOrder[nodeOrder.length - 1].type !== 'end') {\r\n            for (let i = nodeOrder.length - 2; i > 0; i--) {\r\n                if (nodeOrder[i].type === 'end') {\r\n                    const endN = nodeOrder[i];\r\n                    nodeOrder.splice(i, 1);\r\n                    nodeOrder.push(endN);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        flw.nodes = nodeOrder;\r\n        flw.ordered = true;\r\n    }\r\n}\r\n","export { IFlowchart, canvasSize } from './flowchart.interface';\r\nexport { FlowchartUtils } from './flowchart.utils';\r\n","export { INode } from './node.interface';\r\nexport { NodeUtils } from './node.utils';\r\n","import { INode } from './node.interface';\r\nimport { ProcedureTypes, IFunction, IProcedure } from '@models/procedure';\r\nimport { InputType, PortUtils } from '@models/port';\r\nimport * as circularJSON from 'circular-json';\r\nimport { IdGenerator } from '@utils';\r\nimport { ModuleList, ModuleDocList } from '@shared/decorators';\r\nimport { _parameterTypes } from '@modules';\r\n\r\nexport abstract class NodeUtils {\r\n\r\n    static getNewNode(): INode {\r\n        const node: INode = <INode>{\r\n            name: 'Node',\r\n            id: IdGenerator.getNodeID(),\r\n            position: {x: 0, y: 0},\r\n            enabled: false,\r\n            type: '',\r\n            procedure: [{type: 13, ID: '',\r\n                parent: undefined,\r\n                meta: {name: '', module: ''},\r\n                children: undefined,\r\n                argCount: 0,\r\n                args: [],\r\n                print: false,\r\n                enabled: true,\r\n                selected: false,\r\n                hasError: false}],\r\n            state: {\r\n                procedure: [],\r\n                input_port: undefined,\r\n                output_port: undefined\r\n            },\r\n            input: PortUtils.getNewInput(),\r\n            output: PortUtils.getNewOutput()\r\n        };\r\n        node.input.parentNode = node;\r\n        node.output.parentNode = node;\r\n\r\n        return node;\r\n    }\r\n\r\n    static getStartNode(): INode {\r\n        const node = NodeUtils.getNewNode();\r\n        // node.procedure = [];\r\n        node.enabled = true;\r\n        node.name = 'Start';\r\n        node.type = 'start';\r\n        return node;\r\n    }\r\n\r\n    static getEndNode(): INode {\r\n        const node = NodeUtils.getNewNode();\r\n        const returnMeta = _parameterTypes.return.split('.');\r\n        let check = false;\r\n        for (const i of ModuleList) {\r\n            if (i.module !== returnMeta[0]) { continue; }\r\n            for ( const j of i.functions) {\r\n                if (j.name !== returnMeta[1]) { continue; }\r\n                const newReturn = {type: 11, ID: '',\r\n                parent: undefined,\r\n                meta: {name: '', module: ''},\r\n                children: undefined,\r\n                argCount: j.argCount,\r\n                args: j.args,\r\n                print: false,\r\n                enabled: true,\r\n                selected: false,\r\n                hasError: false};\r\n                for (const arg of newReturn.args) {\r\n                    arg.value = '';\r\n                }\r\n                node.procedure.push(newReturn);\r\n                check = true;\r\n                break;\r\n            }\r\n            break;\r\n        }\r\n        if (!check) {\r\n            console.log('CORE FUNCTION ERROR: Unable to retrieve return procedure, please check \"Return\" in _ParameterTypes.ts');\r\n        }\r\n        // node.procedure = [];\r\n        node.name = 'End';\r\n        node.type = 'end';\r\n        return node;\r\n    }\r\n\r\n\r\n    static deselect_procedure(node: INode) {\r\n        for (const prod of node.state.procedure) {\r\n            prod.selected = false;\r\n        }\r\n        node.state.procedure = [];\r\n    }\r\n\r\n\r\n    static rearrangeSelected(prodList: IProcedure[], tempList: IProcedure[], prods: IProcedure[]) {\r\n        for (const pr of prods) {\r\n            if (!pr.selected) {\r\n                if (pr.children) { NodeUtils.rearrangeSelected(prodList, tempList, pr.children); }\r\n                continue;\r\n            }\r\n            let i = 0;\r\n            while (i < tempList.length) {\r\n                if (tempList[i] === pr) {\r\n                    prodList.push(pr);\r\n                    tempList.splice(i, 1);\r\n                    break;\r\n                }\r\n                i += 1;\r\n            }\r\n            if (pr.children) { NodeUtils.rearrangeSelected(prodList, tempList, pr.children); }\r\n        }\r\n    }\r\n\r\n    static select_procedure(node: INode, procedure: IProcedure, ctrl: boolean) {\r\n        if (!procedure) {\r\n            return;\r\n        }\r\n        if (ctrl) {\r\n            let selIndex = 0;\r\n            let selected = false;\r\n            while (selIndex < node.state.procedure.length) {\r\n                if (node.state.procedure[selIndex] === procedure) {\r\n                    selected = true;\r\n                    node.state.procedure.splice(selIndex, 1);\r\n                    procedure.selected = false;\r\n                    break;\r\n                }\r\n                selIndex += 1;\r\n            }\r\n            if (!selected) {\r\n                procedure.selected = true;\r\n                node.state.procedure.push(procedure);\r\n                const tempArray = node.state.procedure.splice(0, node.state.procedure.length);\r\n                NodeUtils.rearrangeSelected(node.state.procedure, tempArray, node.procedure);\r\n                // console.log(node.state.procedure);\r\n            }\r\n        } else {\r\n            const sel = procedure.selected;\r\n            for (const prod of node.state.procedure) {\r\n                prod.selected = false;\r\n            }\r\n            if (sel && node.state.procedure.length === 1 && node.state.procedure[0] === procedure) {\r\n                node.state.procedure = [];\r\n            } else {\r\n                node.state.procedure = [procedure];\r\n                procedure.selected = true;\r\n            }\r\n        }\r\n    }\r\n\r\n    static insert_procedure(node: INode, prod: IProcedure) {\r\n        if (prod.type === ProcedureTypes.Constant) {\r\n            if (node.type !== 'start') { return; }\r\n            if (node.state.procedure[0]) {\r\n                if (node.state.procedure[0].type === ProcedureTypes.Constant) {\r\n                    for (const index in node.procedure) {\r\n                        if (node.procedure[index].selected) {\r\n                            node.procedure.splice(parseInt(index, 10) + 1, 0, prod);\r\n                            break;\r\n                        }\r\n                    }\r\n                } else {\r\n                    let addCheck = false;\r\n                    for (const index in node.procedure) {\r\n                        if (node.procedure[index].type === ProcedureTypes.Constant) {\r\n                            node.procedure.splice(parseInt(index, 10), 0, prod);\r\n                            addCheck = true;\r\n                            break;\r\n                        }\r\n                    }\r\n                    if (!addCheck) {\r\n                        node.procedure.push(prod);\r\n                    }\r\n                }\r\n            } else {\r\n                node.procedure.push(prod);\r\n            }\r\n            return;\r\n        }\r\n        if (node.state.procedure[0] && node.state.procedure[0].type !== ProcedureTypes.Constant) {\r\n            let list: IProcedure[];\r\n            if (node.state.procedure[0].parent) {\r\n                prod.parent = node.state.procedure[0].parent;\r\n                list = prod.parent.children;\r\n            } else {\r\n                list = node.procedure;\r\n            }\r\n            for (const index in list) {\r\n                if (list[index].selected) {\r\n                    list.splice(parseInt(index, 10) + 1, 0, prod);\r\n                    break;\r\n                }\r\n            }\r\n\r\n        } else {\r\n            if (node.type === 'end') {\r\n                node.procedure.splice( node.procedure.length - 1, 0, prod);\r\n                return;\r\n            } else if (node.type === 'start') {\r\n                for (let i = 0; i < node.procedure.length; i++) {\r\n                    if (node.procedure[i].type === ProcedureTypes.Constant ) {\r\n                        node.procedure.splice( i, 0, prod);\r\n                        return;\r\n                    }\r\n                }\r\n                node.procedure.push(prod);\r\n                return;\r\n            }\r\n            node.procedure.push(prod);\r\n        }\r\n    }\r\n\r\n    static initiateChildren(prod) {\r\n        prod.children = [\r\n            {type: 13, ID: '',\r\n            parent: prod, meta: {name: '', module: ''},\r\n            children: undefined,\r\n            argCount: 0,\r\n            args: [],\r\n            print: false,\r\n            enabled: true,\r\n            selected: false,\r\n            hasError: false}\r\n        ];\r\n    }\r\n    static add_procedure(node: INode, type: ProcedureTypes, data: any) {\r\n        const prod: IProcedure = <IProcedure>{};\r\n        prod.type = type;\r\n\r\n        NodeUtils.insert_procedure(node, prod);\r\n\r\n        // add ID to the procedure\r\n        prod.ID = IdGenerator.getProdID();\r\n        prod.enabled = true;\r\n        prod.print = false;\r\n\r\n\r\n        switch (prod.type) {\r\n            case ProcedureTypes.Variable:\r\n                prod.argCount = 2;\r\n                prod.args = [\r\n                    {name: 'var_name', value: undefined, default: undefined},\r\n                    {name: 'value', value: undefined, default: undefined} ];\r\n                break;\r\n\r\n            case ProcedureTypes.Foreach:\r\n                prod.argCount = 2;\r\n                prod.args = [ {name: 'item', value: undefined, default: undefined}, {name: 'list', value: undefined, default: []} ];\r\n                this.initiateChildren(prod);\r\n                break;\r\n\r\n            case ProcedureTypes.While:\r\n                prod.argCount = 1;\r\n                prod.args = [ {name: 'condition', value: undefined, default: undefined} ];\r\n                this.initiateChildren(prod);\r\n                break;\r\n\r\n            case ProcedureTypes.If:\r\n            case ProcedureTypes.Elseif:\r\n                prod.argCount = 1;\r\n                prod.args = [ {name: 'condition', value: undefined, default: undefined} ];\r\n                this.initiateChildren(prod);\r\n                break;\r\n\r\n            case ProcedureTypes.Else:\r\n                prod.argCount = 0;\r\n                prod.args = [];\r\n                this.initiateChildren(prod);\r\n                break;\r\n\r\n            case ProcedureTypes.Break:\r\n            case ProcedureTypes.Continue:\r\n                prod.argCount = 0;\r\n                break;\r\n\r\n            case ProcedureTypes.Constant:\r\n                prod.argCount = 2;\r\n                prod.meta = { module: 'Input', name: 'Constant', inputMode: data, description: undefined};\r\n                prod.args = [\r\n                {name: 'const_name', value: undefined, default: 0},\r\n                {name: '__input__', value: undefined, default: 0} ];\r\n            break;\r\n\r\n            case ProcedureTypes.AddData:\r\n                prod.argCount = 2;\r\n                prod.meta = { module: 'Input', name: 'Constant', inputMode: InputType.SimpleInput, description: undefined};\r\n                prod.args = [\r\n                {name: 'const_name', value: undefined, default: 0},\r\n                {name: '__input__', value: undefined, default: 0} ];\r\n            break;\r\n\r\n            case ProcedureTypes.Return:\r\n                prod.meta = { module: 'Output', name: 'Return', description: undefined};\r\n                prod.argCount = 1;\r\n                prod.args = [ {name: 'index', value: undefined, default: 0} ];\r\n                break;\r\n\r\n            case ProcedureTypes.Function:\r\n                if (!data) { throw Error('No function data'); }\r\n\r\n                prod.meta = { module: data.module, name: data.name};\r\n                prod.argCount = data.argCount + 1;\r\n                let returnArg = {name: 'var_name', value: undefined, default: undefined};\r\n                if (!data.hasReturn) {\r\n                    returnArg = {name: '__none__', value: undefined, default: undefined};\r\n                }\r\n\r\n                prod.args = [ returnArg, ...data.args];\r\n                break;\r\n\r\n            case ProcedureTypes.Imported:\r\n                prod.meta = { module: data.module, name: data.name};\r\n                prod.argCount = data.argCount + 1;\r\n                prod.args = [ {name: 'var_name', value: undefined, default: undefined}, ...data.args];\r\n                break;\r\n        }\r\n        // select the procedure\r\n        if (prod.children) {\r\n            NodeUtils.select_procedure(node, prod.children[0], false);\r\n        } else {\r\n            NodeUtils.select_procedure(node, prod, false);\r\n        }\r\n    }\r\n\r\n    static updateNode(newNode: INode, newPos): INode {\r\n        newNode.id = IdGenerator.getNodeID();\r\n        newNode.input = PortUtils.getNewInput();\r\n        newNode.output = PortUtils.getNewOutput();\r\n        newNode.input.parentNode = newNode;\r\n        newNode.output.parentNode = newNode;\r\n        newNode.position.x = newPos.x;\r\n        newNode.position.y = newPos.y;\r\n        return newNode;\r\n    }\r\n\r\n    static updateID(prod: IProcedure): any {\r\n        if (prod.hasOwnProperty('children')) {\r\n            prod.children.map((child: IProcedure) => {\r\n                NodeUtils.updateID(child);\r\n            });\r\n        }\r\n        prod.ID = IdGenerator.getProdID();\r\n        return prod;\r\n    }\r\n\r\n    static paste_procedure(node: INode, prod: IProcedure ) {\r\n        const newProd = NodeUtils.updateID(circularJSON.parse(circularJSON.stringify(prod)));\r\n        newProd.parent = undefined;\r\n        NodeUtils.insert_procedure(node, newProd);\r\n        NodeUtils.select_procedure(node, newProd, false);\r\n    }\r\n\r\n}\r\n","export { IPortInput, IPortOutput } from './port.interface';\r\nexport * from './types';\r\nexport { PortUtils } from './port.utils';\r\n","import { IPortOutput, IPortInput } from './port.interface';\r\nimport { PortType, OutputType, InputType } from './types';\r\nimport { IdGenerator } from '@shared/utils';\r\n\r\nexport class PortUtils {\r\n\r\n    static getNewInput(): IPortInput {\r\n        const inp: IPortInput = <IPortInput>{\r\n            name: 'input',\r\n            type: PortType.Input,\r\n            value: undefined,\r\n            default: undefined,\r\n            edges: [],\r\n            meta: {\r\n                mode: InputType.SimpleInput,\r\n                opts: {}\r\n            }\r\n        };\r\n\r\n        return inp;\r\n    }\r\n\r\n    static getNewOutput(): IPortOutput {\r\n        const oup: IPortOutput = <IPortOutput>{\r\n            name: 'output',\r\n            type: PortType.Output,\r\n            edges: [],\r\n            meta: {\r\n                mode: OutputType.Text,\r\n            }\r\n        };\r\n        return oup;\r\n    }\r\n\r\n}\r\n","export enum PortType {\r\n    Input,\r\n    Output\r\n}\r\n\r\nexport enum InputType {\r\n    SimpleInput,\r\n    Slider,\r\n    Checkbox,\r\n    URL,\r\n    File,\r\n    Constant\r\n}\r\n\r\nexport enum OutputType {\r\n    Text,\r\n    Code\r\n}\r\n","export { IProcedure, IModule, IFunction } from './procedure.interface';\r\nexport { ProcedureTypes } from './types';\r\n","export enum ProcedureTypes {\r\n    Variable,\r\n    If,\r\n    Elseif,\r\n    Else,\r\n    Foreach,\r\n    While,\r\n    Break,\r\n    Continue,\r\n\r\n    Function,\r\n    Imported,\r\n\r\n    Constant,\r\n    Return,\r\n\r\n    AddData,\r\n    Blank,\r\n}\r\n\r\n","/*\r\n *  This module is to be imported ONLY by the AppModule\r\n *  Contains all global services\r\n *\r\n */\r\nimport { AngularSplitModule } from 'angular-split';\r\n// @angular stuff\r\nimport { NgModule, SkipSelf, Optional } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { MatSliderModule, MatCheckboxModule, MatIconModule } from '@angular/material';\r\n// app directives\r\nimport { MbFileReaderDirective } from './directives/filesys';\r\n// app components\r\nimport { ExecuteComponent } from './components/execute/execute.component';\r\nimport { PageNotFoundComponent } from './components/not-found/not-found.component';\r\nimport { NavigationComponent } from './components/navigation/navigation.component';\r\nimport { PanelHeaderComponent } from './components/header/panel-header.component';\r\nimport { AddOutputComponent } from './components/add-components/add_output.component';\r\nimport { AddNodeComponent } from './components/add-components/add_node.component';\r\nimport { AddInputComponent } from './components/add-components/add_input.component';\r\n// import { ParameterViewerComponent } from './components/parameter-viewer/parameter-viewer.component';\r\n// import { InputPortViewerComponent } from './components/parameter-viewer/input-port-viewer/input-port-viewer.component';\r\n// import { ProcedureInputViewerComponent } from './components/parameter-viewer/procedure-input-viewer/procedure-input-viewer.component';\r\nimport { NewFileComponent, SaveFileComponent, LoadFileComponent } from './components/file';\r\nimport { NotificationComponent } from './components/notification/notification.component';\r\n// app model viewers\r\nimport { DataViewersContainer } from '../model-viewers/model-viewers-container.module';\r\nimport { LoadUrlComponent } from './components/file/loadurl.component';\r\nimport { SpinnerComponent } from './components/spinner/spinner.component';\r\nimport { ChromeComponent } from './components/chrome/chrome.component';\r\n\r\n@NgModule({\r\n    providers: [ ],\r\n    declarations: [\r\n            MbFileReaderDirective,\r\n            ExecuteComponent,\r\n            PageNotFoundComponent,\r\n            NavigationComponent,\r\n            PanelHeaderComponent,\r\n            NotificationComponent,\r\n            AddNodeComponent, AddInputComponent, AddOutputComponent,\r\n            // ParameterViewerComponent,  InputPortViewerComponent, ProcedureInputViewerComponent,\r\n            NewFileComponent, SaveFileComponent, LoadFileComponent, LoadUrlComponent,\r\n            SpinnerComponent,\r\n            ChromeComponent\r\n        ],\r\n    imports: [\r\n            CommonModule,\r\n            RouterModule,\r\n            MatSliderModule, MatCheckboxModule,\r\n            DataViewersContainer,\r\n            AngularSplitModule,\r\n            FormsModule,\r\n            MatIconModule,\r\n            /*\r\n            MatMenuModule,\r\n            MatButtonModule,\r\n            MatExpansionModule,\r\n            MatSelectModule,\r\n            MatFormFieldModule,\r\n            */\r\n        ],\r\n    entryComponents: [  ],\r\n    exports: [\r\n            FormsModule,\r\n            MatIconModule,\r\n            MatSliderModule,\r\n            /*\r\n            MatMenuModule,\r\n            MatButtonModule,\r\n            MatExpansionModule,\r\n            MatSelectModule,\r\n            MatFormFieldModule,\r\n            */\r\n            DataViewersContainer,\r\n            AngularSplitModule,\r\n            MbFileReaderDirective,\r\n            ExecuteComponent,\r\n            PageNotFoundComponent,\r\n            NavigationComponent,\r\n            PanelHeaderComponent,\r\n            AddNodeComponent,\r\n            AddInputComponent,\r\n            AddOutputComponent,\r\n            SpinnerComponent,\r\n            ChromeComponent,\r\n            // ParameterViewerComponent,\r\n            NotificationComponent,\r\n            NewFileComponent, SaveFileComponent, LoadFileComponent, LoadUrlComponent\r\n    ]\r\n})\r\nexport class SharedModule {\r\n    constructor(@Optional() @SkipSelf() shared: SharedModule) {\r\n        /*\r\n        /// Prevents any module apart from AppModule from re-importing\r\n        if(shared){\r\n            throw new Error(\"Core Module has already been imported\");\r\n        }\r\n        */\r\n    }\r\n}\r\n","export abstract class IdGenerator {\r\n\r\n  private static s4(): string {\r\n      return Math.floor((1 + Math.random()) * 0x10000)\r\n        .toString(16)\r\n        .substring(1);\r\n  }\r\n\r\n  static getId(): string {\r\n    return this.s4() + this.s4() + '-' + this.s4() + '-' + this.s4() + '-' +\r\n      this.s4() + '-' + this.s4() + this.s4() + this.s4();\r\n  }\r\n\r\n  static getNodeID(): string {\r\n    return 'node_' + Math.random().toString(36).substr(2, 16);\r\n  }\r\n\r\n  static getProdID() {\r\n    return 'prod-' + Math.random().toString(36).substr(2, 16);\r\n  }\r\n}\r\n","export * from './GUID';\r\n","export * from './view-editor/view-editor.component';\r\nexport * from './view-editor/view-editor.module';\r\nexport * from './view-flowchart/view-flowchart.component';\r\nexport * from './view-flowchart/view-flowchart.module';\r\nexport * from './view-gallery/view-gallery.component';\r\nexport * from './view-gallery/view-gallery.module';\r\nexport * from './view-dashboard/view-dashboard.component';\r\nexport * from './view-dashboard/view-dashboard.module';\r\n","module.exports = \"<!-- <h2>{{displayName()}}</h2> -->\\r\\n\\r\\n<textarea id='display-flowchart-desc' [(ngModel)]='flowchart.description' placeholder=\\\"Flowchart Description\\\" disabled></textarea>\\r\\n\\r\\n<hr>\\r\\n<ng-container *ngFor=\\\"let prod of startNode.procedure\\\">\\r\\n    <div class='prod--container' *ngIf=\\\"prod.enabled && prod.type === 10 && prod.meta.inputMode != 5\\\">\\r\\n        <!-- input description -->\\r\\n        <textarea class='desc'\\r\\n                  id='{{prod.ID}}_desc'\\r\\n                  [(ngModel)]='prod.meta.description'\\r\\n                  placeholder=\\\"Input Description\\\"\\r\\n                  disabled></textarea>\\r\\n        <procedure-input-viewer [prod]=\\\"prod\\\"></procedure-input-viewer>\\r\\n    </div>\\r\\n</ng-container>\\r\\n\"","module.exports = \".container {\\n  background-color: transparent;\\n  width: auto;\\n  height: auto;\\n  display: flex;\\n  flex-direction: column;\\n  flex-wrap: wrap; }\\n\\nh2 {\\n  color: #373737;\\n  text-align: left;\\n  padding-left: 15px;\\n  font-size: 12px;\\n  line-height: 16px; }\\n\\np {\\n  color: #373737;\\n  text-align: left;\\n  padding-left: 15px;\\n  font-size: 12px;\\n  line-height: 14px; }\\n\\nhr {\\n  border-top: 2px solid #E6E6E6; }\\n\\ndiv[class^=\\\"container--\\\"] {\\n  display: flex;\\n  flex-direction: column;\\n  margin: 10px 0px; }\\n\\ntextarea {\\n  color: #373737;\\n  background-color: transparent;\\n  border: none;\\n  padding: 0px 0px 0px 15px;\\n  font-family: sans-serif;\\n  font-size: 12px;\\n  margin: 0px;\\n  width: 100%;\\n  min-height: 20px;\\n  resize: none;\\n  box-sizing: border-box; }\\n\\n.desc {\\n  padding-left: 15px; }\\n\\n.prod--container {\\n  margin-bottom: 6px; }\\n\"","import { Component, Input, AfterViewInit } from '@angular/core';\r\nimport { INode } from '@models/node';\r\nimport { IFlowchart } from '@models/flowchart';\r\n\r\nconst canvas = document.createElement('canvas');\r\nconst ctx = canvas.getContext('2d');\r\nctx.font = '12px sans-serif';\r\n\r\n@Component({\r\n  selector: 'parameter-viewer',\r\n  templateUrl: './parameter-viewer.component.html',\r\n  styleUrls: ['./parameter-viewer.component.scss']\r\n})\r\nexport class ParameterViewerComponent implements AfterViewInit {\r\n    @Input() flowchart: IFlowchart;\r\n    @Input() startNode: INode;\r\n    @Input() endNode: INode;\r\n\r\n    ngAfterViewInit() {\r\n        let textarea = document.getElementById('display-flowchart-desc');\r\n        if (textarea) {\r\n            const desc = this.flowchart.description.split('\\n');\r\n            const textareaWidth = textarea.getBoundingClientRect().width - 20;\r\n            let lineCount = 0;\r\n            for (const line of desc) {\r\n                lineCount += Math.floor(ctx.measureText(line).width / textareaWidth) + 1;\r\n            }\r\n            textarea.style.height = lineCount * 14 + 4 + 'px';\r\n        }\r\n        for (const prod of this.startNode.procedure) {\r\n            if (!prod.enabled || prod.type !== 10 || prod.meta.inputMode === 5) { continue; }\r\n            textarea = document.getElementById(prod.ID + '_desc');\r\n            if (textarea) {\r\n                const desc = this.flowchart.description.split('\\n');\r\n                const textareaWidth = textarea.getBoundingClientRect().width - 20;\r\n                let lineCount = 0;\r\n                for (const line of desc) {\r\n                    lineCount += Math.floor(ctx.measureText(line).width / textareaWidth) + 1;\r\n                }\r\n                textarea.style.height = lineCount * 14 + 4 + 'px';\r\n            }\r\n        }\r\n    }\r\n\r\n    displayName() {\r\n        return this.flowchart.name.replace(/_/g, ' ');\r\n    }\r\n\r\n}\r\n\r\n\r\n","module.exports = \"<div class='container'>\\r\\n    <div class='container--parameter'>\\r\\n        <input class='input-const-name' [class.disabled-input]='true' [value]='displayConstName()' \\r\\n        [style.width.px]='inputSize(prod.args[prod.argCount-2].value,\\\"Undefined\\\") + 10' disabled>\\r\\n\\r\\n        <div class = \\\"FFA\\\">\\r\\n            <ng-container class='parameter__name' [ngSwitch]=\\\"prod.meta.inputMode\\\">\\r\\n                <input *ngSwitchCase=\\\"PortTypes.SimpleInput\\\" [(ngModel)]='prod.args[prod.argCount-1].value' \\r\\n                placeholder='{{prod.args[prod.argCount-1].default}}'\\r\\n                [style.width.px]='inputSize(prod.args[prod.argCount-1].value, prod.args[prod.argCount-1].default)'>\\r\\n                \\r\\n                <ng-container *ngSwitchCase=\\\"PortTypes.Slider\\\">\\r\\n                    <!--<input [class.disabled-input]='true' [(ngModel)]='prod.args[prod.argCount-1].value' \\r\\n                    placeholder='prod.args[prod.argCount-1].default'\\r\\n                    [style.width.px]='inputSize(prod.args[prod.argCount-1].value, prod.args[prod.argCount-1].default)' disabled>-->\\r\\n                    <input [(ngModel)]='prod.args[prod.argCount-1].value' \\r\\n                    placeholder='{{prod.args[prod.argCount-1].default}}'\\r\\n                    [style.width.px]='inputSize(prod.args[prod.argCount-1].value, prod.args[prod.argCount-1].default)'>\\r\\n                    <mat-slider\\r\\n                        [(ngModel)]='prod.args[prod.argCount-1].value'\\r\\n                        thumbLabel\\r\\n                        step={{prod.args[prod.argCount-1].step||1}}\\r\\n                        min={{prod.args[prod.argCount-1].min||0}}\\r\\n                        max={{prod.args[prod.argCount-1].max||100}}></mat-slider>\\r\\n                    <!--\\r\\n                    <input [(ngModel)]='prod.args[prod.argCount-1].value' type=\\\"range\\\" placeholder='{{prod.args[prod.argCount-1].default}}'>\\r\\n                    <input [(ngModel)]='prod.args[prod.argCount-1].value' value='prod.args[prod.argCount-1].value'  placeholder='{{prod.args[prod.argCount-1].default}}' disabled>\\r\\n                    -->\\r\\n                </ng-container>\\r\\n    \\r\\n                <div class = 'div--chbox' *ngSwitchCase=\\\"PortTypes.Checkbox\\\">\\r\\n                    <input id = 'chbox_{{prod.ID}}' *ngSwitchCase=\\\"PortTypes.Checkbox\\\" [(ngModel)]='prod.args[prod.argCount-1].value' type=\\\"checkbox\\\">\\r\\n                    <label for = 'chbox_{{prod.ID}}'></label>\\r\\n                </div>\\r\\n                \\r\\n                <input *ngSwitchCase=\\\"PortTypes.URL\\\" [(ngModel)]='prod.args[prod.argCount-1].value' placeholder='{{prod.args[prod.argCount-1].default}}' \\r\\n                [style.width.px]='inputSize(prod.args[prod.argCount-1].value, prod.args[prod.argCount-1].default)'>\\r\\n    \\r\\n                <ng-container *ngSwitchCase=\\\"PortTypes.File\\\" >\\r\\n                    <button class='filebtn' (click)=\\\"openFileBrowse(prod.ID)\\\" >File</button>\\r\\n                    <input [class.disabled-input]='true' value='{{prod.args[prod.argCount-1].value?.name}}' [style.width.px]='inputSize(prod.args[prod.argCount-1].value?.name||undefined,\\\"No Input\\\")' disabled>\\r\\n                    <input id='file_{{prod.ID}}' style='display: none;' (change)=\\\"onFileChange($event)\\\" type=\\\"file\\\">\\r\\n                </ng-container>\\r\\n    \\r\\n            </ng-container>\\r\\n        </div>\\r\\n        \\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n\"","module.exports = \".container {\\n  display: block;\\n  height: auto;\\n  width: 100%; }\\n\\n.container--parameter {\\n  padding: 5px 0px;\\n  display: flex;\\n  flex-flow: row nowrap;\\n  padding-left: 15px;\\n  color: #373737;\\n  vertical-align: bottom;\\n  border-bottom: 1px solid #E6E6E6;\\n  overflow: hidden;\\n  width: 100%;\\n  height: 17px; }\\n\\n.container--parameter.inputDisabled {\\n    opacity: 0.4; }\\n\\n.container--parameter:hover .btns {\\n    display: inline-flex; }\\n\\n.FFA {\\n  display: flex;\\n  flex-flow: row nowrap;\\n  flex-grow: 1; }\\n\\n.FFA mat-slider {\\n    width: 100%;\\n    height: 30px;\\n    padding: 0px 20px 0px 0px;\\n    position: relative;\\n    bottom: 7px; }\\n\\ninput {\\n  color: #373737;\\n  background-color: transparent;\\n  border: none;\\n  border-bottom: 1px solid #808080;\\n  margin: 0px 2px;\\n  max-width: 95%;\\n  height: 15px;\\n  vertical-align: bottom;\\n  padding: 0px 5px;\\n  font-family: sans-serif;\\n  font-size: 12px; }\\n\\ninput:hover, input:focus {\\n    background-color: white;\\n    color: #373737; }\\n\\ninput.disabled-input {\\n    padding: 0px;\\n    border-bottom: 0px; }\\n\\ninput.disabled-input:hover {\\n      background-color: transparent;\\n      color: #373737; }\\n\"","import { Component, Input, Output, EventEmitter } from '@angular/core';\r\nimport { IProcedure } from '@models/procedure';\r\nimport { InputType } from '@models/port';\r\n\r\nconst canvas = document.createElement('canvas');\r\nconst ctx = canvas.getContext('2d');\r\nctx.font = '13px Arial';\r\n\r\n@Component({\r\n  selector: 'procedure-input-viewer',\r\n  templateUrl: './procedure-input-viewer.component.html',\r\n  styleUrls: ['./procedure-input-viewer.component.scss']\r\n})\r\nexport class ProcedureInputViewerComponent {\r\n\r\n    @Input() prod: IProcedure;\r\n    @Output() delete = new EventEmitter();\r\n    PortTypes = InputType;\r\n\r\n    constructor() { }\r\n\r\n    editOptions(): void { }\r\n\r\n    onFileChange(event) {\r\n      this.prod.args[this.prod.argCount - 1].value = event.target.files[0];\r\n    }\r\n\r\n    displayConstName() {\r\n        let val = this.prod.args[this.prod.argCount - 2].value;\r\n        if (!val) {\r\n            return 'undefined :';\r\n        }\r\n        if (val.substring(0, 1) === '\"' || val.substring(0, 1) === '\\'') {\r\n            val = val.substring(1, val.length - 1);\r\n        }\r\n        // return val.replace(/_/g, ' ') + ':';\r\n        return val + ':';\r\n    }\r\n\r\n    inputSize(val, defaultVal) {\r\n        if (val === undefined || val === '') { return ctx.measureText(defaultVal).width + 2; }\r\n        return ctx.measureText(val).width + 2;\r\n    }\r\n\r\n    openFileBrowse(id) {\r\n        document.getElementById(`file_${id}`).click();\r\n    }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { ViewDashboardComponent } from './view-dashboard.component';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        component: ViewDashboardComponent,\r\n        children: [ ]\r\n    }\r\n];\r\n\r\n\r\n@NgModule({\r\n    imports: [ RouterModule.forChild(routes) ],\r\n    exports: [ RouterModule ]\r\n})\r\nexport class ViewDashboardRoutingModule { }\r\n","module.exports = \"<div class='container'>\\r\\n    <as-split direction=\\\"horizontal\\\" (dragEnd)='setSplit($event)'>\\r\\n        \\r\\n        <as-split-area [size]=\\\"100 - getSplit()\\\">\\r\\n            <panel-header [title]='getFlowchart().name'></panel-header>\\r\\n            <!-- viewchild content -->\\r\\n            <div class='content__panel'>\\r\\n                <parameter-viewer [flowchart]='getFlowchart()' [startNode]='getFlowchart().nodes[0]' [endNode]='getEndNode()'></parameter-viewer>\\r\\n            </div>\\r\\n        </as-split-area>\\r\\n\\r\\n        <as-split-area [size]=\\\"getSplit()\\\">\\r\\n            <!-- data viewers panel -->\\r\\n            <div class='content__viewer' >\\r\\n                <model-viewers-container [data]='viewerData()'></model-viewers-container>\\r\\n            </div>\\r\\n        </as-split-area>\\r\\n        \\r\\n    </as-split>\\r\\n</div>\\r\\n<spinner></spinner>\\r\\n<chrome></chrome>\"","module.exports = \".content__panel {\\n  margin-top: 40px; }\\n\"","import { Component, Input } from '@angular/core';\r\nimport { IFlowchart } from '@models/flowchart';\r\nimport { INode } from '@models/node';\r\nimport { DataService } from '@services';\r\nimport { Router } from '@angular/router';\r\nimport { LoadUrlComponent } from '@shared/components/file/loadurl.component';\r\n\r\n@Component({\r\n  selector: 'view-dashboard',\r\n  templateUrl: './view-dashboard.component.html',\r\n  styleUrls: ['./view-dashboard.component.scss']\r\n})\r\nexport class ViewDashboardComponent {\r\n\r\n    constructor(private dataService: DataService, private router: Router) {\r\n        new LoadUrlComponent(this.dataService, this.router).loadStartUpURL(this.router.url);\r\n    }\r\n\r\n    selectNode(node_index: number): void {\r\n      if ( typeof(node_index) === 'number' ) {\r\n          this.dataService.flowchart.meta.selected_nodes = [node_index];\r\n      }\r\n    }\r\n\r\n    getEndNode(): INode {\r\n      for (const node of this.dataService.flowchart.nodes) {\r\n        if (node.type === 'end') { return node; }\r\n      }\r\n    }\r\n\r\n    viewerData(): any {\r\n        const node = this.dataService.flowchart.nodes[this.dataService.flowchart.meta.selected_nodes[0]];\r\n        if (!node) { return ''; }\r\n        // if (node.type === 'output') { return node.input.value; }\r\n        return node.model;\r\n    }\r\n\r\n    setSplit(event) {\r\n        this.dataService.splitUpdate = true;\r\n        this.dataService.splitVal = event.sizes[1];\r\n    }\r\n\r\n    getSplit() { return this.dataService.splitVal; }\r\n    getFlowchart() { return this.dataService.flowchart; }\r\n}\r\n\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { SharedModule } from '@shared/shared.module';\r\nimport { ViewDashboardRoutingModule } from './view-dashboard-routing.module';\r\nimport { ViewDashboardComponent } from './view-dashboard.component';\r\nimport { ParameterViewerComponent } from './parameter-viewer/parameter-viewer.component';\r\nimport { ProcedureInputViewerComponent } from './parameter-viewer/procedure-input-viewer/procedure-input-viewer.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ViewDashboardComponent,\r\n    ParameterViewerComponent,\r\n    ProcedureInputViewerComponent\r\n  ],\r\n  exports: [\r\n    ViewDashboardComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    SharedModule,\r\n    ViewDashboardRoutingModule\r\n  ],\r\n  entryComponents: [ ],\r\n  providers: [ ]\r\n})\r\nexport class ViewDashboardModule {\r\n    constructor () { }\r\n}\r\n","module.exports = \"<div class='flowchart-info' *ngIf=\\\"node.type=='start'\\\">\\r\\n    <!-- <div class = 'divider'></div> -->\\r\\n    <ng-container *ngIf='!prodCheck'>\\r\\n        <div class = 'input-container'>\\r\\n            <input id='flowchart-name' autocomplete='off' [(ngModel)]='flowchart.name' placeholder=\\\"flowchart name\\\" [style.width.px]='inputSize(flowchart.name||\\\"flowchart name\\\")'>\\r\\n        </div>\\r\\n        <textarea autogrow\\r\\n        id='flowchart-desc' [(ngModel)]='flowchart.description' placeholder=\\\"flowchart description\\\"></textarea>\\r\\n    </ng-container>\\r\\n\\r\\n    <div class='container--input' *ngIf='prodCheck'>\\r\\n        <procedure-input-editor *ngFor=\\\"let prod of node.procedure; let i = index;\\\" [prod]=\\\"prod\\\" (delete)='deleteProd(i)' (selectInp)='selectInput($event)'></procedure-input-editor>\\r\\n    </div>\\r\\n</div>\\r\\n<div class='flowchart-info' *ngIf=\\\"node.type=='end'\\\">\\r\\n    <!-- <div class = 'divider'></div> -->\\r\\n    <div id='ret-container'>\\r\\n        <div class='returnProd'>\\r\\n            <input class='disabled-input' value=\\\"Return\\\" disabled>\\r\\n            <ng-container *ngFor='let p of node.procedure[node.procedure.length-1].args; let i=index'>\\r\\n                <input id='ret--input' \\r\\n                *ngIf='p.name.substring(0,1) !== \\\"_\\\"'\\r\\n                [(ngModel)]='p.value'\\r\\n                placeholder={{p.name}}\\r\\n                [style.width.px]='inputSize(p.value||p.name)'\\r\\n                autocomplete='off'\\r\\n                >  \\r\\n            </ng-container>\\r\\n            </div>\\r\\n        <textarea autogrow\\r\\n        id='flowchart-return' [(ngModel)]='flowchart.returnDescription' placeholder=\\\"Description\\\"></textarea>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<!--\\r\\n<section *ngIf=\\\"node.type != 'end'\\\">\\r\\n    <panel-header [node]='node' [title]=\\\"'inputs'\\\"></panel-header>\\r\\n    <div class='container--input'>\\r\\n        <input-port-editor [port]=\\\"node?.input\\\" ></input-port-editor>\\r\\n    </div>\\r\\n</section>\\r\\n<section *ngIf=\\\"node.type != 'start'\\\">\\r\\n    <panel-header [node]='node' [title]=\\\"'output'\\\"></panel-header>\\r\\n    <div class='container--output'>\\r\\n        <output-port-editor [port]=\\\"node?.output\\\" ></output-port-editor>\\r\\n    </div>\\r\\n</section>\\r\\n-->\\r\\n\"","module.exports = \"div[class^=\\\"container--\\\"] {\\n  display: flex;\\n  flex-direction: column;\\n  margin: 0px 0px; }\\n\\n.flowchart-info {\\n  display: flex;\\n  flex-flow: column nowrap;\\n  padding-left: 8px;\\n  padding-right: 5px;\\n  width: 100%;\\n  box-sizing: border-box; }\\n\\n.flowchart-info #ret-container {\\n    display: flex;\\n    flex-flow: column nowrap;\\n    padding-left: 2px;\\n    padding-bottom: 2px;\\n    border-left: 1px solid #999999;\\n    border-bottom: 1px solid #999999; }\\n\\ntextarea, #flowchart-name, #ret--input {\\n  color: #373737;\\n  border: 2px solid #E6E6E6;\\n  background-color: transparent;\\n  height: 15px;\\n  margin-bottom: 1px;\\n  padding-left: 5px;\\n  font-family: sans-serif;\\n  font-size: 12px;\\n  max-width: 100%;\\n  resize: none;\\n  overflow: auto; }\\n\\ntextarea:hover, textarea:focus, #flowchart-name:hover, #flowchart-name:focus, #ret--input:hover, #ret--input:focus {\\n    border-color: #00006d;\\n    background-color: white; }\\n\\n.input-container {\\n  padding: 0px;\\n  max-width: 100%;\\n  padding-right: 9px;\\n  box-sizing: border-box; }\\n\\n#flowchart-name {\\n  margin-bottom: 8px;\\n  max-width: 100%;\\n  height: 15px; }\\n\\nhr {\\n  width: inherit;\\n  border-top: 2px solid #808080; }\\n\\n.disabled-input {\\n  border: 0px;\\n  margin: 0px;\\n  width: 50px;\\n  font-family: sans-serif;\\n  font-size: 12px;\\n  font-weight: 550;\\n  font-style: italic;\\n  background-color: #fafafb;\\n  color: #be8c1e; }\\n\\n.input {\\n  font-size: 12px;\\n  resize: horizontal;\\n  min-width: 10px;\\n  background-color: #fafafb;\\n  margin-left: 5px;\\n  border: 2px solid #E6E6E6;\\n  padding-left: 2px; }\\n\\n.returnProd {\\n  display: inline-block; }\\n\\n.divider {\\n  width: 100%;\\n  height: 20px; }\\n\"","import { Component, Input, AfterContentInit, AfterViewInit, AfterViewChecked, Output, EventEmitter } from '@angular/core';\r\nimport { INode, NodeUtils } from '@models/node';\r\nimport { PortType } from '@models/port';\r\nimport { IFlowchart } from '@models/flowchart';\r\n\r\nconst canvas = document.createElement('canvas');\r\nconst ctx = canvas.getContext('2d');\r\n\r\n@Component({\r\n  selector: 'parameter-editor',\r\n  templateUrl: './parameter-editor.component.html',\r\n  styleUrls: ['./parameter-editor.component.scss']\r\n})\r\nexport class ParameterEditorComponent implements AfterViewInit {\r\n    @Input() node: INode;\r\n    @Input() flowchart: IFlowchart;\r\n    @Input() prodCheck: boolean;\r\n    @Output() selectInp = new EventEmitter();\r\n\r\n    ngAfterViewInit() {\r\n        ctx.font = '12px sans-serif';\r\n\r\n        let textarea = document.getElementById('flowchart-desc');\r\n        if (textarea) {\r\n            const desc = this.flowchart.description.split('\\n');\r\n            const textareaWidth = textarea.getBoundingClientRect().width - 20;\r\n            let lineCount = 0;\r\n            for (const line of desc) {\r\n                lineCount += Math.floor(ctx.measureText(line).width / textareaWidth) + 1;\r\n            }\r\n            textarea.style.height = lineCount * 14 + 4 + 'px';\r\n        }\r\n        textarea = document.getElementById('flowchart-return');\r\n        if (textarea) {\r\n            const desc = (this.flowchart.returnDescription || '').split('\\n');\r\n            const textareaWidth = textarea.getBoundingClientRect().width - 20;\r\n            let lineCount = 0;\r\n            for (const line of desc) {\r\n                lineCount += Math.floor(ctx.measureText(line).width / textareaWidth) + 1;\r\n            }\r\n            textarea.style.height = lineCount * 14 + 4 + 'px';\r\n        }\r\n    }\r\n\r\n    deleteProd(index: number) {\r\n        this.node.procedure.splice(index, 1);\r\n        NodeUtils.deselect_procedure(this.node);\r\n    }\r\n\r\n    inputSize(val) {\r\n        ctx.font = 'bold 12px arial';\r\n        return ctx.measureText(val).width + 2;\r\n    }\r\n\r\n    selectInput(event) {\r\n        this.selectInp.emit(event);\r\n    }\r\n}\r\n\r\n\r\n","module.exports = \"<div class='container--parameter' \\r\\n*ngIf='prod.meta?.module ==\\\"Input\\\"'\\r\\n[class.error]='prod.hasError' \\r\\n[class.selected]='prod.selected' \\r\\n[class.inputDisabled]='!prod.enabled' \\r\\n(click)='selectInput($event)'>\\r\\n    <div class = \\\"btn-container\\\">\\r\\n        <div class = \\\"btns\\\">\\r\\n            <!-- delete button-->\\r\\n            <button class='btn' mat-icon-button title=\\\"Delete Procedure\\\" (click)='deleteProd()' tabindex=\\\"-1\\\">\\r\\n                <mat-icon class='icon'>delete_outline</mat-icon>\\r\\n            </button>\\r\\n            <button class='btn' mat-icon-button title=\\\"Disable Procedure\\\" (click)='markDisabled()' tabindex=\\\"-1\\\">\\r\\n                <mat-icon class='icon'>tv_off</mat-icon>\\r\\n            </button>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class = 'inp--type--container'>\\r\\n        <div class='inline-div'>\\r\\n            <ng-container *ngIf='prod.type == 10'>\\r\\n                <ng-container [ngSwitch]=\\\"prod.meta.inputMode\\\">\\r\\n                    <input class = 'input--type' *ngSwitchCase='0' [class.disabled-input]='true' value='Simple Input' disabled>\\r\\n                    <input class = 'input--type' *ngSwitchCase='1' [class.disabled-input]='true' value='Slider' disabled>\\r\\n                    <input class = 'input--type' *ngSwitchCase='2' [class.disabled-input]='true' value='Check Box' disabled>\\r\\n                    <input class = 'input--type' *ngSwitchCase='3' [class.disabled-input]='true' value='URL' disabled>\\r\\n                    <input class = 'input--type' *ngSwitchCase='4' [class.disabled-input]='true' value='File' disabled>\\r\\n                    <input class = 'input--type' *ngSwitchCase='5' [class.disabled-input]='true' value='Constant' disabled>\\r\\n                </ng-container>\\r\\n            </ng-container>\\r\\n            <input class = 'input--type' *ngIf='prod.type == 12' [class.disabled-input]='true' value='Add Model' size='5' disabled>\\r\\n        </div>\\r\\n        <div class='inline-div'>\\r\\n            <!-- <input [class.disabled-input]='true' value='Name:' disabled> -->\\r\\n            <input \\r\\n            [ngModel]='prod.args[0].value'\\r\\n            (ngModelChange)='prod.args[0].value=varMod($event)'\\r\\n            [class.error]='prod.args[0].invalidVar'\\r\\n            placeholder=\\\"name\\\"\\r\\n            [style.width.px]='inputSize(prod.args[0].value,\\\"Undefined\\\")'>\\r\\n        </div>\\r\\n        <div class='inline-div' *ngIf='prod.type == 12'>\\r\\n            <!-- <input [class.disabled-input]='true' value='Input Mode:' disabled>  -->\\r\\n            <!-- \\r\\n                <input *ngIf='prod.type != 12' [class.disabled-input]='true' [value]='PortTypes[prod.meta.inputMode]'\\r\\n                [style.width.px]='inputSize(PortTypes[prod.meta.inputMode])' disabled>\\r\\n            -->\\r\\n            <select [(ngModel)]=\\\"prod.meta.inputMode\\\" tabindex=\\\"-1\\\">\\r\\n                <option value='3' [selected]=\\\"prod.meta.inputMode == 3\\\">URL</option>\\r\\n                <option value='4' [selected]=\\\"prod.meta.inputMode == 4\\\">File</option>\\r\\n            </select>\\r\\n        </div>\\r\\n        <!-- <input [class.disabled-input]='true' value='Default:' disabled> -->\\r\\n        <div class='inline-div'>\\r\\n            <ng-container [ngSwitch]=\\\"prod.meta.inputMode\\\" >\\r\\n                <!-- Constant -->\\r\\n                <input *ngSwitchCase=\\\"PortTypes.Constant\\\" [(ngModel)]='prod.args[prod.argCount-1].default' placeholder='Default Value' \\r\\n                [style.width.px]='inputSize(prod.args[prod.argCount-1].default,\\\"Default Value\\\")'>\\r\\n    \\r\\n                <!-- simpleinput -->\\r\\n                <input *ngSwitchCase=\\\"PortTypes.SimpleInput\\\" [(ngModel)]='prod.args[prod.argCount-1].default' placeholder='Default Value' \\r\\n                [style.width.px]='inputSize(prod.args[prod.argCount-1].default,\\\"Default Value\\\")'>\\r\\n    \\r\\n                <!-- slider -->\\r\\n                <div class='div--slider' *ngSwitchCase=\\\"PortTypes.Slider\\\">\\r\\n                    <div class = 'input--container'>\\r\\n                        <input [(ngModel)]='prod.args[prod.argCount-1].step' placeholder='Step'\\r\\n                        [style.width.px]='inputSize(prod.args[prod.argCount-1].step,\\\"Step\\\")'>\\r\\n                        <input [value]='prod.args[prod.argCount-1].min||\\\"\\\"' placeholder='Min'\\r\\n                            (blur)='updateMin(prod.args[prod.argCount-1], $event)'\\r\\n                            (keyup)='updateMin(prod.args[prod.argCount-1], $event)'\\r\\n                            [style.width.px]='inputSize(prod.args[prod.argCount-1].min,\\\"Min\\\")'>\\r\\n                        <input [value]='prod.args[prod.argCount-1].max||\\\"\\\"' placeholder='Max'\\r\\n                            (blur)='updateMax(prod.args[prod.argCount-1], $event)'\\r\\n                            (keyup)='updateMax(prod.args[prod.argCount-1], $event)'\\r\\n                            [style.width.px]='inputSize(prod.args[prod.argCount-1].max,\\\"Max\\\")'>\\r\\n                    </div>              \\r\\n                </div>\\r\\n                \\r\\n                <!-- checkbox -->\\r\\n                <div class = 'div--chbox' *ngSwitchCase=\\\"PortTypes.Checkbox\\\">\\r\\n                    <input class='chkbox' id = 'chbox_{{prod.ID}}' [(ngModel)]='prod.args[prod.argCount-1].default' type=\\\"checkbox\\\">\\r\\n                    <label for = 'chbox_{{prod.ID}}'></label>\\r\\n    \\r\\n                </div>\\r\\n    \\r\\n                <!-- URL -->\\r\\n                <input *ngSwitchCase=\\\"PortTypes.URL\\\" [(ngModel)]='prod.args[prod.argCount-1].default' placeholder='Default URL'\\r\\n                [style.width.px]='inputSize(prod.args[prod.argCount-1].default,\\\"Default URL\\\")'>\\r\\n    \\r\\n                <!-- File -->\\r\\n                <div class='div--filebtn inline-div' *ngSwitchCase=\\\"PortTypes.File\\\" >\\r\\n                    <button class='filebtn' (click)=\\\"openFileBrowse(prod.ID)\\\" >File</button>\\r\\n                    <input [class.disabled-input]='true' value='{{prod.args[prod.argCount-1].default.name}}' [style.width.px]='inputSize(prod.args[prod.argCount-1].default.name,\\\"\\\")' disabled>\\r\\n                    <input id='file_{{prod.ID}}' style='display: none;' (change)=\\\"onFileChange($event)\\\" type=\\\"file\\\">\\r\\n                </div>\\r\\n            </ng-container>\\r\\n        </div>\\r\\n        \\r\\n    </div>\\r\\n    <ng-container [ngSwitch]=\\\"prod.meta.inputMode\\\" >\\r\\n        <div class='div--slider' *ngSwitchCase=\\\"PortTypes.Slider\\\">\\r\\n            <div class = 'slider--container'>\\r\\n                <input class = 'slider-input' [(ngModel)]='prod.args[prod.argCount-1].default'\\r\\n                [style.width.px]='inputSize(prod.args[prod.argCount-1].default,\\\"\\\")'>\\r\\n                <mat-slider\\r\\n                [(ngModel)]='prod.args[prod.argCount-1].default'\\r\\n                thumbLabel\\r\\n                step={{prod.args[prod.argCount-1].step||1}}\\r\\n                min={{prod.args[prod.argCount-1].min||0}}\\r\\n                max={{prod.args[prod.argCount-1].max||100}}></mat-slider>\\r\\n            </div>\\r\\n        </div> \\r\\n    </ng-container>\\r\\n    <div class = 'desc--container'>\\r\\n        <textarea autogrow class='inp--desc' placeholder='Description' [(ngModel)]='prod.meta.description'></textarea>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n<!-- <div class='container container--parameter' *ngIf='prod.meta?.module==\\\"Output\\\"'>\\r\\n    <input class='inp--desc' placeholder='Return Description' [(ngModel)]='prod.meta.description'\\r\\n    [style.width.px]='inputSize(prod.meta.description,\\\"Return Description\\\")'>\\r\\n</div> -->\"","module.exports = \".container {\\n  margin: 5px 0px; }\\n\\n.container--parameter {\\n  margin: 0px 0px 2px 0px;\\n  display: flex;\\n  flex-flow: column nowrap;\\n  color: #808080;\\n  vertical-align: bottom;\\n  border-bottom: 1px solid #808080;\\n  border-left: 1px solid #808080;\\n  overflow: hidden;\\n  width: 100%; }\\n\\n.container--parameter.inputDisabled {\\n    opacity: 0.4; }\\n\\n.container--parameter:hover .btns {\\n    display: inline-flex; }\\n\\n.container--parameter.error {\\n    border: 2px solid #E94858; }\\n\\n.container--parameter.selected {\\n    border-left: 2px solid #00006d;\\n    border-bottom: 2px solid #00006d; }\\n\\n.inline-div {\\n  box-sizing: border-box;\\n  display: inline-block;\\n  height: 18px;\\n  padding-bottom: 3px;\\n  white-space: nowrap; }\\n\\ninput, select {\\n  color: #373737;\\n  background-color: transparent;\\n  border: 2px solid #E6E6E6;\\n  margin: 0px 2px;\\n  height: 15px;\\n  max-width: 95%;\\n  vertical-align: bottom;\\n  padding: 0px 5px;\\n  font-family: sans-serif;\\n  font-size: 12px; }\\n\\ninput:hover, input:focus, select:hover, select:focus {\\n    background-color: white;\\n    color: #373737;\\n    border-color: #00006d; }\\n\\ninput.disabled-input, select.disabled-input {\\n    padding: 0px;\\n    border: none; }\\n\\ninput.disabled-input:hover, select.disabled-input:hover {\\n      background-color: transparent;\\n      color: #808080; }\\n\\ninput.error, select.error {\\n    border: 2px solid #E94858; }\\n\\nselect {\\n  height: 17px; }\\n\\n.btn-container {\\n  width: 100%;\\n  display: flex;\\n  flex-flow: row nowrap;\\n  justify-content: flex-end;\\n  position: relative; }\\n\\n.btns {\\n  display: none;\\n  flex-flow: row-reverse nowrap;\\n  justify-content: flex-end;\\n  padding-right: 8px;\\n  background-color: #fafafb;\\n  position: absolute; }\\n\\n.btns:hover {\\n    display: inline-flex; }\\n\\n.btn {\\n  height: 15px;\\n  width: 15px;\\n  padding: 0px;\\n  background-color: transparent;\\n  border: none;\\n  float: right;\\n  color: #808080; }\\n\\n.btn :hover {\\n    color: #00006d; }\\n\\n.icon {\\n  vertical-align: top;\\n  font-size: 15px;\\n  height: 15px;\\n  width: 15px; }\\n\\n.inp--type--container {\\n  display: flex;\\n  flex-flow: row nowrap;\\n  justify-content: flex-start;\\n  margin-top: 1px;\\n  box-sizing: border-box;\\n  line-height: 15px;\\n  min-width: -webkit-fit-content;\\n  min-width: -moz-fit-content;\\n  min-width: fit-content;\\n  margin-bottom: 2px; }\\n\\n.inp--type--container .input--type {\\n    color: #be8c1e;\\n    font-weight: 550;\\n    font-style: italic;\\n    width: 90px; }\\n\\n.inp--type--container .filebtn {\\n    width: 75px;\\n    height: 18px;\\n    border: none;\\n    margin-left: 2px; }\\n\\n.div--slider {\\n  display: flex;\\n  flex-flow: column nowrap; }\\n\\n.div--slider .input--container {\\n    display: inline-flex;\\n    width: 100%;\\n    vertical-align: middle; }\\n\\n.div--slider .input--container .min-max {\\n      white-space: nowrap; }\\n\\n.div--slider .input--container .min-max span {\\n        padding: 0px 2px; }\\n\\n.div--slider .slider--container {\\n    width: 100%;\\n    display: flex;\\n    flex-flow: row nowrap;\\n    padding-right: 50px;\\n    margin-left: 1px; }\\n\\n.div--slider .slider--container .slider-input {\\n      height: 15px;\\n      line-height: 15px;\\n      position: relative;\\n      top: 7px; }\\n\\n.div--slider .slider--container mat-slider {\\n      width: 100%;\\n      height: 30px;\\n      padding: 0px; }\\n\\n.desc--container {\\n  margin-top: 1px;\\n  padding-right: 15px;\\n  box-sizing: border-box;\\n  height: -webkit-fit-content;\\n  height: -moz-fit-content;\\n  height: fit-content; }\\n\\n.desc--container .inp--desc {\\n    margin-left: 3px;\\n    color: #373737;\\n    border: 2px solid #E6E6E6;\\n    background-color: transparent;\\n    padding-left: 5px;\\n    font-family: sans-serif;\\n    font-size: 12px;\\n    min-width: 100%;\\n    resize: none;\\n    height: 15px; }\\n\\n.desc--container .inp--desc:hover, .desc--container .inp--desc:focus {\\n      color: #373737;\\n      border-color: #00006d;\\n      background-color: white; }\\n\\n.chkbox {\\n  display: none; }\\n\"","import { Component, Input, Output, EventEmitter, AfterViewInit } from '@angular/core';\r\nimport { ProcedureItemComponent } from '../../procedure-item/procedure-item.component';\r\nimport { IProcedure, ProcedureTypes } from '@models/procedure';\r\nimport { InputType } from '@models/port';\r\nconst keys = Object.keys(InputType);\r\nconst canvas = document.createElement('canvas');\r\nconst ctx = canvas.getContext('2d');\r\nctx.font = '13px Arial';\r\n\r\n@Component({\r\n  selector: 'procedure-input-editor',\r\n  templateUrl: './procedure-input-editor.component.html',\r\n  styleUrls: ['./procedure-input-editor.component.scss']\r\n})\r\nexport class ProcedureInputEditorComponent implements AfterViewInit {\r\n\r\n    @Input() prod: IProcedure;\r\n    @Output() delete = new EventEmitter();\r\n    @Output() selectInp = new EventEmitter();\r\n\r\n    PortTypes = InputType;\r\n    PortTypesArr = keys.slice(keys.length / 2);\r\n\r\n    constructor() {\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        // console.log(this.prod);\r\n    }\r\n\r\n    selectInput(event: MouseEvent) {\r\n        event.stopPropagation();\r\n        this.selectInp.emit({'ctrl': event.ctrlKey, 'prod': this.prod});\r\n    }\r\n\r\n    editOptions(): void { }\r\n\r\n    openFileBrowse(id) {\r\n        document.getElementById(`file_${id}`).click();\r\n    }\r\n    onFileChange(event) {\r\n        this.prod.args[this.prod.argCount - 1].default = event.target.files[0];\r\n    }\r\n\r\n    inputSize(val, defaultVal) {\r\n        if (val === undefined || val === '') { return ctx.measureText(defaultVal).width + 2; }\r\n        return ctx.measureText(val).width + 2;\r\n    }\r\n\r\n    // delete this procedure\r\n    deleteProd(): void {\r\n        this.delete.emit();\r\n    }\r\n\r\n    markDisabled() {\r\n        this.prod.enabled = !this.prod.enabled;\r\n    }\r\n\r\n    updateMin(args, event) {\r\n        if (event.type === 'keyup' && event.which !== 13) { return; }\r\n        const currentVal = Number(event.target.value);\r\n        if (currentVal !== 0 && !currentVal) { return; }\r\n        if (Number(args.max) && Number(args.max) < currentVal) {\r\n            args.min = args.max;\r\n            event.target.value = args.min;\r\n        } else {\r\n            args.min = event.target.value;\r\n        }\r\n        if (!args.default || args.default < Number(args.min)) {\r\n            args.default = Number(args.min);\r\n        }\r\n    }\r\n\r\n    updateMax(args, event) {\r\n        if (event.type === 'keyup' && event.which !== 13) { return; }\r\n        const currentVal = Number(event.target.value);\r\n        if (currentVal !== 0 && !currentVal) { return; }\r\n        if (Number(args.min) && Number(args.min) > currentVal) {\r\n            args.max = args.min;\r\n            event.target.value = args.max;\r\n        } else {\r\n            args.max = event.target.value;\r\n        }\r\n        if (!args.default || args.default > Number(args.max)) {\r\n            args.default = Number(args.max);\r\n        }\r\n    }\r\n\r\n    // modify variable input: replace space \" \" with underscore \"_\"\r\n    varMod(event: string) {\r\n        if (!event) { return event; }\r\n        return ProcedureItemComponent.modifyVarArg(event, this.prod.args[0]);\r\n    }\r\n\r\n\r\n}\r\n","module.exports = \"<div class='container--line' \\r\\n    [class.selected]=\\\"data.selected\\\"\\r\\n    [class.error]=\\\"data.hasError\\\"\\r\\n    [class.disabled]=\\\"!data.enabled\\\"\\r\\n    [class.printing]='data.print'\\r\\n    [ngSwitch]=\\\"data.type\\\"\\r\\n    (click)='emitSelect($event, data)'\\r\\n    *ngIf= 'data.type != ProcedureTypes.Return && data.type != ProcedureTypes.Constant'>\\r\\n    <div class='container--item' >\\r\\n        <!-- Variable Assignment Template -->\\r\\n        <div class='line--item' *ngSwitchCase=\\\"ProcedureTypes.Variable\\\">\\r\\n            <input class='input--var'\\r\\n                id='argVar_{{data.ID}}'\\r\\n                [ngModel]='data.args[0].value'\\r\\n                (ngModelChange)='data.args[0].value=varMod($event)'\\r\\n                [class.error]='data.args[0].invalidVar'\\r\\n                placeholder={{data.args[0].name}}\\r\\n                [style.width.px]='inputSize(data.args[0].value||data.args[0].name)'>  \\r\\n            = \\r\\n            <div style='position:relative; display:inline-block;'>\\r\\n                <input \\r\\n                class='input--arg'\\r\\n                [(ngModel)]='data.args[1].value'\\r\\n                (blur)='argMod($event, 1)'\\r\\n                placeholder={{data.args[1].name}}\\r\\n                [style.width.px]='inputSize(data.args[1].value||data.args[1].name)'>\\r\\n                <!-- <p class='input--arg input--arg--p' [innerHTML]='argHighlight(data.args[1].value)'></p> -->\\r\\n            </div>\\r\\n            </div>\\r\\n\\r\\n        <!-- IF Template -->\\r\\n        <div class='line--item hasChildren' *ngSwitchCase=\\\"ProcedureTypes.If\\\">\\r\\n            <div class='function-text'>\\r\\n                If\\r\\n            </div>\\r\\n            <input class='input--arg'\\r\\n                    [(ngModel)]='data.args[0].value'\\r\\n                    (blur)='argMod($event, 0)'\\r\\n                    placeholder={{data.args[0].name}}\\r\\n                    [style.width.px]='inputSize(data.args[0].value||data.args[0].name)'\\r\\n                    >\\r\\n        </div>\\r\\n\\r\\n        <!-- ELSEIF Template -->\\r\\n        <div class='line--item hasChildren' *ngSwitchCase=\\\"ProcedureTypes.Elseif\\\">\\r\\n            <div class='function-text'>\\r\\n                Else if\\r\\n            </div>\\r\\n            \\r\\n        \\r\\n        <input class='input--arg'\\r\\n                [(ngModel)]='data.args[0].value'\\r\\n                (blur)='argMod($event, 0)'\\r\\n                placeholder={{data.args[0].name}}\\r\\n                [style.width.px]='inputSize(data.args[0].value||data.args[0].name)'\\r\\n                >  \\r\\n        </div>\\r\\n\\r\\n        <!-- ELSE Template -->\\r\\n        <div class='line--item hasChildren' *ngSwitchCase=\\\"ProcedureTypes.Else\\\">\\r\\n            <div class='function-text'>\\r\\n                Else\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <!-- BREAK Template -->\\r\\n        <div class='line--item' *ngSwitchCase=\\\"ProcedureTypes.Break\\\">\\r\\n            <div class='function-text'>\\r\\n                Break\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <!-- CONTINUE Template -->\\r\\n        <div class='line--item' *ngSwitchCase=\\\"ProcedureTypes.Continue\\\">\\r\\n            <div class='function-text'>\\r\\n                Continue\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n\\r\\n    <!-- FOREACH Template -->\\r\\n        <div class='line--item hasChildren' *ngSwitchCase=\\\"ProcedureTypes.Foreach\\\">\\r\\n                <div class='function-text'>\\r\\n                    Foreach\\r\\n                </div>\\r\\n                <input class='input--arg'\\r\\n                    [ngModel]='data.args[0].value'\\r\\n                    (ngModelChange)='data.args[0].value=varMod($event)'\\r\\n                    [class.error]='data.args[0].invalidVar'\\r\\n                    placeholder={{data.args[0].name}}\\r\\n                    [style.width.px]='inputSize(data.args[0].value||data.args[0].name)'\\r\\n                    >  \\r\\n                <div class='function-text'>\\r\\n                    in\\r\\n                </div>\\r\\n                <input class='input--arg'\\r\\n                    [(ngModel)]='data.args[1].value'\\r\\n                    (blur)='argMod($event, 1)'\\r\\n                    placeholder={{data.args[1].name}}\\r\\n                    [style.width.px]='inputSize(data.args[1].value||data.args[1].name)'\\r\\n                    >  \\r\\n                    \\r\\n        </div>\\r\\n\\r\\n        <!-- WHILE Template -->\\r\\n        <div class='line--item hasChildren' *ngSwitchCase=\\\"ProcedureTypes.While\\\">\\r\\n            <div class='function-text'>\\r\\n                While\\r\\n            </div>\\r\\n            <input class='input--arg' \\r\\n                    [(ngModel)]='data.args[0].value'\\r\\n                    (blur)='argMod($event, 0)'\\r\\n                    placeholder={{data.args[0].name}}\\r\\n                    [style.width.px]='inputSize(data.args[0].value||data.args[0].name)'\\r\\n                    >  \\r\\n\\r\\n        </div>\\r\\n\\r\\n        <!-- Constant (Not visible) Template -->\\r\\n        <div class='line--item' *ngSwitchCase=\\\"ProcedureTypes.Constant\\\">\\r\\n            <!-- <div class='function-text'>Constant</div>\\r\\n\\r\\n            <input class='input--arg' \\r\\n                    [(ngModel)]='data.args[0].value'\\r\\n                    (blur)='argMod($event, 0)'\\r\\n                    placeholder={{data.args[0].name}}\\r\\n                    [style.width.px]='inputSize(data.args[0].value||data.args[0].name)'\\r\\n                    >   -->\\r\\n\\r\\n        </div>\\r\\n        \\r\\n        <!-- Return (Not visible) Template -->\\r\\n        <div class='line--item' *ngSwitchCase=\\\"ProcedureTypes.Return\\\">\\r\\n            <!-- <div class='function-text'>Return</div>\\r\\n            <ng-container  *ngFor='let p of data.args;let i=index'>\\r\\n                <input class='input--arg' \\r\\n                *ngIf='p.name.substring(0,1) !== \\\"_\\\"'\\r\\n                [(ngModel)]='p.value'\\r\\n                (blur)='argMod($event, i)'\\r\\n                placeholder={{p.name}}\\r\\n                [style.width.px]='inputSize(p.value||p.name)'\\r\\n                >  \\r\\n            </ng-container> -->\\r\\n        </div>\\r\\n        \\r\\n        <!-- Blank (always the first procedure of if/else/else if/for/while) -->\\r\\n        <div class='line--blank' *ngSwitchCase=\\\"ProcedureTypes.Blank\\\">\\r\\n        </div>\\r\\n\\r\\n        \\r\\n        <!-- Function Template -->\\r\\n        <div class='line--item' *ngSwitchCase=\\\"ProcedureTypes.Function\\\">\\r\\n            <ng-container *ngIf=\\\"data.args[0].name !=='__none__'\\\">\\r\\n                <input class='input--var'\\r\\n                [ngModel]='data.args[0].value'\\r\\n                (ngModelChange)='data.args[0].value=varMod($event)'\\r\\n                [class.error]='data.args[0].invalidVar'\\r\\n                placeholder={{data.args[0].name}}\\r\\n                [style.width.px]='inputSize(data.args[0].value||data.args[0].name)'>  \\r\\n                = \\r\\n\\r\\n            </ng-container>\\r\\n            <div class='function-text'><span class='module-name'>{{data.meta.module}}.</span>{{data.meta.name}} </div>\\r\\n\\r\\n            <ng-container *ngFor='let p of data.args.slice(1);let i=index'>\\r\\n                <!--\\r\\n                <input *ngIf=\\\"p.name.toUpperCase() !== '__MODEL__'; else text_template\\\" \\r\\n                \\r\\n                [(ngModel)]='p.value' \\r\\n                placeholder={{p.name}}>    \\r\\n                \\r\\n                <ng-template #text_template>\\r\\n                    model,\\r\\n                </ng-template>\\r\\n                -->\\r\\n                <select class='input--arg' [(ngModel)]='p.value' *ngIf=\\\"checkEnum(p, i); else default_template\\\" >\\r\\n                    <option *ngFor='let opt of getEnum(i)' value=\\\"'{{opt}}'\\\">{{opt}}</option>\\r\\n                    <!--\\r\\n                        <option *ngFor='let opt of Modules[data.meta.module][ModuleDoc[data.meta.module][data.meta.name].parameters[i].type]' value={{opt}}>{{opt}}</option>\\r\\n                    -->\\r\\n                </select>    \\r\\n                \\r\\n                <ng-template #default_template>\\r\\n                    <input *ngIf=\\\"p.name.substring(0,1) !== '_'\\\" \\r\\n                    class='input--arg' \\r\\n                    [(ngModel)]='p.value'\\r\\n                    (blur)='argMod($event, i+1)'\\r\\n                    placeholder={{p.name}}\\r\\n                    [style.width.px]='inputSize(p.value||p.name)'\\r\\n                    >\\r\\n            </ng-template>\\r\\n\\r\\n            </ng-container>\\r\\n\\r\\n        </div>\\r\\n\\r\\n        <!-- Imported Function Template -->\\r\\n        <div class='line--item' *ngSwitchCase=\\\"ProcedureTypes.Imported\\\">\\r\\n            <input class='input--var'\\r\\n                    [ngModel]='data.args[0].value'\\r\\n                    (ngModelChange)='data.args[0].value=varMod($event)'\\r\\n                    [class.error]='data.args[0].invalidVar'\\r\\n                    placeholder={{data.args[0].name}}\\r\\n                    [style.width.px]='inputSize(data.args[0].value||data.args[0].name)'>\\r\\n            = \\r\\n            <div class='function-text'><span class='module-name'>user.</span>{{data.meta.name}} </div> \\r\\n            \\r\\n            <ng-container *ngFor='let p of data.args.slice(1);let i=index'>\\r\\n                <input class='input--arg' \\r\\n                    *ngIf='p.type !== 5'\\r\\n                    [(ngModel)]='p.value'\\r\\n                    (blur)='argMod($event, i+1)'\\r\\n                    placeholder={{p.name}}\\r\\n                    [style.width.px]='inputSize(p.value||p.name)'>    \\r\\n            </ng-container>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class = \\\"btn-container\\\">\\r\\n        <div class = \\\"btns\\\">\\r\\n            <!-- delete button-->\\r\\n            <button id = 'delete-btn' *ngIf='data.type != ProcedureTypes.Blank && data.type != ProcedureTypes.Return' class='btn' mat-icon-button title=\\\"Delete Procedure\\\" (click)=\\\"emitDelete()\\\" tabindex=\\\"-1\\\">\\r\\n                <mat-icon class='icon'>delete_outline</mat-icon>\\r\\n            </button>\\r\\n            <!-- Disable button-->\\r\\n            <button id = 'disable-btn' *ngIf='data.type != ProcedureTypes.Blank' class='btn' mat-icon-button title=\\\"Disable Procedure\\\" [class.highlighted]='!data.enabled' (click)='markDisabled()' tabindex=\\\"-1\\\">\\r\\n                <mat-icon class='icon'>tv_off</mat-icon>\\r\\n            </button>\\r\\n            <!-- Print button-->\\r\\n            <button id = 'print-btn' *ngIf='canBePrinted()' class='btn' mat-icon-button title=\\\"Print Result In Console\\\" [class.highlighted]='data.print' (click)='markPrint()' tabindex=\\\"-1\\\">\\r\\n                <mat-icon class='icon'>print</mat-icon>\\r\\n            </button>\\r\\n            <!-- help button-->\\r\\n            <button *ngIf='haveHelpText()' class='btn' mat-icon-button title=\\\"Help\\\" tabindex=\\\"-1\\\" (click)='emitHelpText(undefined)'>\\r\\n                <mat-icon class='icon'>help</mat-icon>\\r\\n            </button>\\r\\n        </div>\\r\\n    </div>\\r\\n    <!-- list of child procedures (if the procedure has children) -->\\r\\n    <div *ngIf=\\\"data?.children\\\" class='container--nested'>\\r\\n        <procedure-item \\r\\n            *ngFor=\\\"let line of data?.children; let idx=index\\\" \\r\\n            [data]=\\\"line\\\"\\r\\n            (select)='selectChild($event, line)'\\r\\n            (delete)='deleteChild(idx)'\\r\\n            (helpText)='emitHelpText($event)'></procedure-item>\\r\\n    </div>\\r\\n</div>\\r\\n\"","module.exports = \".container--nested {\\n  padding-left: 0px; }\\n\\n.container--line {\\n  background-color: transparent;\\n  font-size: 12px;\\n  margin: 0px 5px 2px 8px;\\n  padding: 0px;\\n  padding-bottom: 1px;\\n  padding-left: 2px;\\n  border-bottom: 1px solid #999999;\\n  border-left: 1px solid #999999;\\n  color: #808080;\\n  opacity: 1;\\n  display: flex;\\n  flex-flow: column nowrap;\\n  justify-content: space-between;\\n  flex-grow: 0;\\n  flex-shrink: 0;\\n  overflow-x: hidden;\\n  width: calc(100% - 15px); }\\n\\n.container--line.disabled {\\n    opacity: 0.5; }\\n\\n.container--line.disabled .btns {\\n      display: inline-flex; }\\n\\n.container--line.disabled .btns #disable-btn {\\n        display: flex;\\n        justify-content: center; }\\n\\n.container--line.disabled .btns #disable-btn:hover {\\n          color: #00006d; }\\n\\n.container--line.disabled.selected {\\n      border-bottom: 2px solid #00006d; }\\n\\n.container--line.disabled:hover .btns #disable-btn {\\n      order: 0; }\\n\\n.container--line.disabled .input--var, .container--line.disabled .input--arg {\\n    border: 2px solid #E6E6E6 !important; }\\n\\n.container--line.selected {\\n    border-bottom: 2px solid #00006d;\\n    border-left: 2px solid #00006d;\\n    padding-bottom: 0px;\\n    padding-left: 1px; }\\n\\n.container--line.printing:not(.disabled) {\\n    border-bottom: 2px solid #82BF6E;\\n    border-left: 2px solid #82BF6E;\\n    padding-bottom: 0px;\\n    padding-left: 1px; }\\n\\n.container--line.printing:not(.disabled) #print-btn {\\n      color: #82BF6E; }\\n\\n.container--line.printing:not(.disabled):hover {\\n      background-color: #e6ffdd; }\\n\\n.container--line.printing:not(.disabled).selected {\\n      border-bottom: 2px solid #00006d;\\n      background-color: #e6ffdd; }\\n\\n.container--line.printing .btns {\\n    display: inline-flex; }\\n\\n.container--line.printing .btns .btn {\\n      background-color: inherit; }\\n\\n.container--line.printing .btns #print-btn {\\n      display: flex;\\n      justify-content: center; }\\n\\n.container--line.printing .btns #print-btn:hover {\\n        color: #00006d; }\\n\\n.container--line.printing.selected {\\n    border-bottom: 2px solid #00006d;\\n    background-color: #e6ffdd; }\\n\\n.container--line.printing:hover .btns #print-btn {\\n    order: 1; }\\n\\n.container--line.error:not(.disabled) {\\n    border-bottom: 2px solid #E94858;\\n    border-left: 2px solid #E94858;\\n    padding-bottom: 0px;\\n    padding-left: 1px; }\\n\\n.container--line.error:not(.disabled) .btn {\\n      background-color: inherit; }\\n\\n.container--line.error:not(.disabled).selected {\\n      border-bottom: 2px solid #00006d;\\n      background-color: #ffdce0; }\\n\\n.container--line.error:not(.disabled):hover {\\n      background-color: #ffdce0; }\\n\\n.container--line .input--var {\\n    font-size: 12px;\\n    min-width: 10px;\\n    background-color: #fafafb;\\n    margin-right: 5px;\\n    border: 2px solid #E6E6E6;\\n    padding-left: 2px; }\\n\\n.container--line .input--var.error {\\n      border: 2px solid #E94858; }\\n\\n.container--line .input--var:focus, .container--line .input--var:hover {\\n      border-color: #00006d;\\n      background-color: white; }\\n\\n.container--line .input--arg {\\n    font-size: 12px;\\n    resize: horizontal;\\n    min-width: 10px;\\n    background-color: #fafafb;\\n    margin-left: 5px;\\n    border: 2px solid #E6E6E6;\\n    padding-left: 2px; }\\n\\n.container--line .input--arg.error {\\n      border: 2px solid #E94858; }\\n\\n.container--line .input--arg:focus, .container--line .input--arg:hover {\\n      border-color: #00006d;\\n      background-color: white; }\\n\\n.container--line:hover {\\n    background-color: #E6E6E6; }\\n\\n.container--line:hover .btn {\\n      background-color: inherit; }\\n\\n.container--item {\\n  position: relative;\\n  padding-bottom: 2px;\\n  border: none;\\n  display: inline-block;\\n  width: 100%;\\n  white-space: nowrap;\\n  overflow-x: scroll; }\\n\\n.container--item::-webkit-scrollbar {\\n    height: 3px; }\\n\\n.container--item::-webkit-scrollbar-track {\\n    background: transparent; }\\n\\n.container--item::-webkit-scrollbar-thumb {\\n    background: transparent; }\\n\\n.container--item::-webkit-scrollbar-thumb:hover {\\n    background: #999999; }\\n\\n.container--item:hover::-webkit-scrollbar-thumb {\\n    background: #CCCCCC; }\\n\\n.container--item:hover + .btn-container .btns {\\n  display: inline-flex; }\\n\\n.container--item:hover + .btn-container .btns .btn {\\n    display: flex;\\n    justify-content: center;\\n    background-color: inherit; }\\n\\n.btn-container {\\n  position: relative;\\n  width: 100%;\\n  display: flex;\\n  flex-flow: row nowrap;\\n  background-color: inherit;\\n  justify-content: flex-end;\\n  order: -1;\\n  z-index: 9999; }\\n\\n.btn-container:hover .btns {\\n    display: inline-flex; }\\n\\n.btn-container:hover .btns .btn {\\n      display: flex;\\n      justify-content: center;\\n      background-color: inherit; }\\n\\n.btns {\\n  position: absolute;\\n  display: none;\\n  flex-flow: row-reverse nowrap;\\n  justify-content: flex-end;\\n  background-color: inherit; }\\n\\n.btns:hover {\\n    display: inline-flex; }\\n\\n.btn {\\n  width: 15px;\\n  background-color: #fafafb;\\n  border: none;\\n  color: #808080;\\n  display: none;\\n  overflow: hidden;\\n  vertical-align: center;\\n  order: 4; }\\n\\n.btn:hover {\\n    color: #00006d; }\\n\\n.icon {\\n  vertical-align: center;\\n  width: 15px;\\n  height: 17px;\\n  margin: 1px;\\n  font-size: 12px; }\\n\\n.line--item {\\n  color: #808080;\\n  display: inline-block;\\n  padding-right: 60px; }\\n\\n.line--blank {\\n  height: 8px; }\\n\\n.line--blank:hover {\\n    background-color: white;\\n    border-color: #00006d; }\\n\\n/*\\r\\n.hasChildren::before{\\r\\n    content: '\\\\25B6';\\r\\n    position: absolute;\\r\\n    left: 3px;\\r\\n    font-size: 8px;\\r\\n}\\r\\n*/\\n\\n.function-text {\\n  display: inline-block;\\n  white-space: nowrap;\\n  font-style: italic;\\n  color: #be8c1e;\\n  font-weight: 550;\\n  text-align: center;\\n  min-height: 17px; }\\n\\n.function-text .module-name {\\n    color: #00006d; }\\n\"","import { Component, Input, Output,  EventEmitter} from '@angular/core';\r\n\r\nimport { IProcedure, ProcedureTypes } from '@models/procedure';\r\nimport { ModuleDocList } from '@shared/decorators';\r\n\r\nimport { _parameterTypes} from '@modules';\r\n\r\nimport { inline_func } from '../toolset/toolset.inline';\r\nimport * as Modules from '@modules';\r\nimport { DataService } from '@services';\r\nimport { IArgument } from '@models/code';\r\n\r\nconst canvas = document.createElement('canvas');\r\nconst ctx = canvas.getContext('2d');\r\nctx.font = '12px Arial';\r\n\r\nconst reservedWords = [\r\n    'abstract', 'arguments', 'await', 'boolean',\r\n    'break', 'byte', 'case', 'catch',\r\n    'char', 'class', 'const', 'continue',\r\n    'debugger', 'default', 'delete', 'do',\r\n    'double', 'else', 'enum', 'eval',\r\n    'export', 'extends', 'false', 'final',\r\n    'finally', 'float', 'for', 'function',\r\n    'goto', 'if', 'implements', 'import',\r\n    'in', 'instanceof', 'int', 'interface',\r\n    'let', 'long', 'native', 'new',\r\n    'null', 'package', 'private', 'protected',\r\n    'public', 'return', 'short', 'static',\r\n    'super', 'switch', 'synchronized', 'this',\r\n    'throw', 'throws', 'transient', 'true',\r\n    'try', 'typeof', 'var', 'void',\r\n    'volatile', 'while', 'with', 'yield',\r\n\r\n    'Array', 'Date', 'hasOwnProperty', 'Infinity',\r\n    'isFinite', 'isNaN', 'isPrototypeOf', 'length',\r\n    'Math', 'NaN', 'name', 'Number', 'Object',\r\n    'prototype', 'String', 'toString', 'undefined', 'valueOf'\r\n];\r\n\r\nconst mathFuncs = [];\r\nfor (const funcMod of inline_func) {\r\n    for (const func of funcMod[1]) {\r\n        mathFuncs.push(func[0].split('(')[0]);\r\n    }\r\n}\r\n\r\n\r\n@Component({\r\n    selector: 'procedure-item',\r\n    templateUrl: './procedure-item.component.html',\r\n    styleUrls: ['procedure-item.component.scss']\r\n})\r\nexport class ProcedureItemComponent {\r\n    @Input() data: IProcedure;\r\n    @Output() delete = new EventEmitter();\r\n    @Output() select = new EventEmitter();\r\n    @Output() copied = new EventEmitter();\r\n    @Output() pasteOn = new EventEmitter();\r\n    @Output() helpText = new EventEmitter();\r\n\r\n    ProcedureTypes = ProcedureTypes;\r\n\r\n    private keys = Object.keys(ProcedureTypes);\r\n    ProcedureTypesArr = this.keys.slice(this.keys.length / 2);\r\n    ModuleDoc = ModuleDocList;\r\n\r\n    constructor(private dataService: DataService) {\r\n    }\r\n\r\n    static modifyVarArg(value: string, arg: IArgument) {\r\n        let str = value.trim();\r\n        str = str.replace(/ /g, '_');\r\n        str = str.toLowerCase();\r\n        if ((str.match(/\\[/g) || []).length !== (str.match(/\\]/g) || []).length) {\r\n            arg.invalidVar = true;\r\n            return str;\r\n        }\r\n        const strSplit = str.split(/[\\@\\[\\]]/g);\r\n        let teststr = str;\r\n        for (const i of strSplit) {\r\n            if (i === '') { continue; }\r\n            if (i === '0' || Number(i)) {\r\n                const sStr = `[${i}]`;\r\n                const ind = teststr.indexOf(sStr);\r\n                if (ind === -1) {\r\n                    arg.invalidVar = true;\r\n                    return str;\r\n                }\r\n                teststr = teststr.slice(0, ind) + teststr.slice(ind + sStr.length);\r\n                continue;\r\n            }\r\n            try {\r\n                if (i.substring(0, 1) === '_') {\r\n                    arg.invalidVar = true;\r\n                    return str;\r\n                }\r\n                for (const reserved of reservedWords) {\r\n                    if (i === reserved) {\r\n                        arg.invalidVar = true;\r\n                        return str;\r\n                    }\r\n                }\r\n                for (const funcName of mathFuncs) {\r\n                    if (i === funcName) {\r\n                        arg.invalidVar = true;\r\n                        return str;\r\n                    }\r\n                }\r\n                let currentWindow;\r\n                if (window.hasOwnProperty(i)) {\r\n                    currentWindow = window[i];\r\n                }\r\n                const fn = new Function('', `${i}=1;`);\r\n                fn();\r\n                delete window[i];\r\n                if (currentWindow) {\r\n                    window[i] = currentWindow;\r\n                }\r\n\r\n                arg.invalidVar = false;\r\n            } catch (ex) {\r\n                // console.log(ex.message);\r\n                arg.invalidVar = true;\r\n                return str;\r\n            }\r\n        }\r\n        return str;\r\n\r\n    }\r\n\r\n\r\n    // delete this procedure\r\n    emitDelete(): void {\r\n        this.delete.emit();\r\n    }\r\n\r\n    // select this procedure\r\n    emitSelect(event, procedure: IProcedure) {\r\n        event.stopPropagation();\r\n        this.select.emit({'ctrl': event.ctrlKey, 'prod': procedure});\r\n    }\r\n\r\n    // delete child procedure (after receiving emitDelete from child procedure)\r\n    deleteChild(index: number): void {\r\n        this.data.children.splice(index, 1);\r\n    }\r\n\r\n    // select child procedure (after receiving emitSelect from child procedure)\r\n    selectChild(event, procedure: IProcedure) {\r\n        this.select.emit(event);\r\n    }\r\n\r\n    markPrint() {\r\n        this.data.print = !this.data.print;\r\n    }\r\n\r\n    markDisabled() {\r\n        this.data.enabled = !this.data.enabled;\r\n    }\r\n\r\n    canBePrinted() {\r\n        return this.data.type === ProcedureTypes.Return ||\r\n               (this.data.argCount > 0 && this.data.args[0].name === 'var_name');\r\n    }\r\n\r\n    haveHelpText() {\r\n        return (this.data.type === ProcedureTypes.Function || this.data.type ===  ProcedureTypes.Imported);\r\n    }\r\n\r\n    emitHelpText($event) {\r\n        if ($event) {\r\n            this.helpText.emit($event);\r\n            return;\r\n        }\r\n        try {\r\n            if (this.data.type === ProcedureTypes.Imported) {\r\n                this.helpText.emit(this.data.meta.name);\r\n                // this.helpText.emit(this.ModuleDoc[this.data.meta.module][this.data.meta.name]);\r\n\r\n            } else {\r\n            this.helpText.emit(this.ModuleDoc[this.data.meta.module][this.data.meta.name]);\r\n            }\r\n        } catch (ex) {\r\n            this.helpText.emit('error');\r\n        }\r\n\r\n    }\r\n\r\n    // stopPropagation to prevent cut/paste with input box focused\r\n    stopProp(event): void {\r\n        // event.stopPropagation();\r\n    }\r\n\r\n    // modify variable input: replace space \" \" with underscore \"_\"\r\n    varMod(event: string) {\r\n        if (!event) { return event; }\r\n        return ProcedureItemComponent.modifyVarArg(event, this.data.args[0]);\r\n    }\r\n\r\n\r\n    // modify argument input: check if input is valid\r\n    argMod(event: Event, argIndex: number) {\r\n        // this.dataService.focusedInput = [event.target, (<HTMLInputElement>event.target).selectionStart];\r\n        this.dataService.focusedInput = event.target;\r\n        if (!this.data.args[argIndex].value) { return; }\r\n        this.data.args[argIndex].value = this.data.args[argIndex].value.replace(\r\n            /\\s*([\\[\\]])\\s*/g, '$1').replace(\r\n            // /([\\+\\-\\*\\/\\%\\[\\]\\{\\}\\(\\)\\,])/g, ' $1 ').trim().replace(/[ ]{2,}/g, ' ');\r\n            /([\\+\\-\\*\\/\\%\\{\\}\\(\\)\\,\\<\\>\\=\\!])/g, ' $1 ')\r\n            .replace(/([\\<\\>\\=\\!])\\s+=/g, '$1=')\r\n            .trim().replace(/\\s{2,}/g, ' ');\r\n            // /([\\+\\-\\*\\/\\%\\[\\]\\{\\}\\(\\)\\,])/g, ' $1 ').replace(\r\n            // /@[a-z0-9]+\\s\\[\\s/g, '[').trim().replace(/[ ]{2,}/g, ' ');\r\n    }\r\n\r\n    // argHighlight(value: any) {\r\n    //     return value.replace(\r\n    //         inline_fn_regEx, '<span class = \"inline-function\">' + value.match(inline_fn_regEx) + '</span>'\r\n    //     );\r\n    // }\r\n\r\n    inputSize(val) {\r\n        return ctx.measureText(val).width + 2;\r\n    }\r\n\r\n    checkEnum(param, index: number): boolean {\r\n        try {\r\n            if (param.name.substring(0, 1) === '_') {\r\n                return false;\r\n            }\r\n            // @ts-ignore\r\n            const arg = this.ModuleDoc[this.data.meta.module][this.data.meta.name].parameters[index];\r\n            if (arg.description.toLowerCase().indexOf('enum') === -1 || !Modules[this.data.meta.module][arg.type]) {\r\n                return false;\r\n            }\r\n            return true;\r\n        } catch (ex) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    getEnum(index: number) {\r\n        // @ts-ignore\r\n        const enm = Modules[this.data.meta.module][this.ModuleDoc[this.data.meta.module][this.data.meta.name].parameters[index].type];\r\n        const enumList = [];\r\n        for (const i in enm) {\r\n            if (! enm.hasOwnProperty(i)) {\r\n                continue;\r\n            }\r\n            enumList.push(enm[i]);\r\n        }\r\n        return enumList;\r\n    }\r\n}\r\n","module.exports = \"<h2 (click)='openNodeMenu($event)'><span id='node--name' title='{{getNode().name}}'>{{getFlowchart().meta.selected_nodes[0]}}. {{getNode().name}}</span><span id='node--arr'>▾</span></h2>\\r\\n\\r\\n<div id=\\\"nodeMenu\\\">\\r\\n    <div *ngFor='let nd of getFlowchart().nodes; let i = index;'>\\r\\n        <li (click)=\\\"changeNode(i)\\\"> \\r\\n            {{i}}. {{nd.name}}\\r\\n        </li>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<!--Divider-->\\r\\n<div class = \\\"divider\\\"></div>\\r\\n\\r\\n<div class = \\\"toolset--body\\\" (mouseover)='setCurrent($event)'>\\r\\n    <div [hidden]=\\\"getNode().type == 'start' && !getViewOutput()\\\">\\r\\n        <ng-container>\\r\\n            <!-- basic functions: variable, if, else, else if, for, while, continue, break -->\\r\\n        \\r\\n            <button id='basic-funcs' class=\\\"accordion\\\" \\r\\n            (click)='toggleAccordion(\\\"basic-funcs\\\")' >Basic</button>\\r\\n            <div class=\\\"panel\\\">\\r\\n                <ul class='toolset__basic'>\\r\\n                    <ng-container *ngFor=\\\"let type of ProcedureTypesArr\\\">\\r\\n                        <li *ngIf=\\\"8 > ProcedureTypes[type]\\\"\\r\\n                        class='tooltip'\\r\\n                        [class.invalid]='checkInvalid(type)'\\r\\n                        (click)='add(ProcedureTypes[type])'> \\r\\n                            {{type}}\\r\\n                        </li>\\r\\n                    </ng-container>\\r\\n                </ul>\\r\\n            </div>\\r\\n            \\r\\n            <!--Divider-->\\r\\n            <div class = \\\"divider\\\"></div>\\r\\n            <button id='Functions' class=\\\"accordion\\\"  (click)='toggleAccordionHead(\\\"Functions\\\")'>Functions\\r\\n            </button>\\r\\n            <!--Search Bar-->\\r\\n            <div class = 'searchbar--container'>\\r\\n                <input id='searchbarFunction' class='searchBar' placeholder='Search' (keyup)='searchFunction($event)'/>\\r\\n                <div class=\\\"panel\\\" [class.opened] = 'true' *ngIf='searchedFunctions.length > 0'>\\r\\n                    <ul class='toolset__functions--subset'>\\r\\n                        <ng-container *ngFor='let fn of searchedFunctions'>\\r\\n                            <li *ngIf='fn.type==\\\"function\\\"'\\r\\n                            (click)='add_function(fn.data)'>\\r\\n                                <span class='module-name'>{{fn.module}}.</span>{{fn.name}}\\r\\n                            </li>\\r\\n                            <li *ngIf='fn.type==\\\"imported\\\"'\\r\\n                            (click)='add_imported_function(fn.data)'>\\r\\n                                <span class='module-name'>user.</span>{{fn.name}}\\r\\n                            </li>\\r\\n                        </ng-container>\\r\\n                    </ul>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"panel\\\">\\r\\n                                        \\r\\n                <!-- functions from core.modules -->\\r\\n                <ng-container *ngFor='let mod of Modules' >\\r\\n                    <button id='{{mod.module}}' class=\\\"accordion\\\" \\r\\n                    (click)='toggleAccordion(mod.module)' >{{ mod.module }}</button>\\r\\n                    <div class=\\\"panel\\\">\\r\\n                        <ul class='toolset__functions--subset'>\\r\\n                            <ng-container *ngFor='let fn of mod.functions'>\\r\\n                                <div class='tooltip'>\\r\\n                                    <li \\r\\n                                    (click)='add_function(fn)'> \\r\\n                                        {{fn.name}} \\r\\n                                    </li>\\r\\n                                    <span class=\\\"tooltiptext\\\" [innerHTML]='fn.doc'></span>\\r\\n                                </div>\\r\\n                            </ng-container>\\r\\n                            <!--Divider-->\\r\\n                            <div class = \\\"divider--in\\\"></div>\\r\\n                        </ul>\\r\\n                    </div>\\r\\n                </ng-container>\\r\\n                <!-- imported functions -->\\r\\n                <ng-container>\\r\\n                    <button id='imported' class=\\\"accordion\\\" \\r\\n                    (click)='toggleAccordion(\\\"imported\\\")' >user</button>\\r\\n                    <div class=\\\"panel\\\">\\r\\n                        <ul class='toolset__functions--subset'>\\r\\n                            <li class = 'user--add'>\\r\\n                                <button class = 'add-btn' onclick=\\\"document.getElementById('selectedFile').click();\\\" title=\\\"Import Function from File\\\">\\r\\n                                        Import\\r\\n                                        <!--<mat-icon class='add-icon'>open_in_browser</mat-icon>-->\\r\\n                                </button>\\r\\n                            </li>\\r\\n                            <div class='tooltip user--def' *ngFor='let fn of getFlowchart().functions'>\\r\\n                                <div class = 'user--def-lnContainer'>\\r\\n                                    <li (click)='add_imported_function(fn)'> {{fn.name}} \\r\\n                                    </li>\\r\\n                                    <div class = 'btn--container'>\\r\\n                                        <button class='importedFunc-btn' (click)='delete_imported_function(fn)'>\\r\\n                                            <mat-icon class='importedFunc-btn-icon'>close</mat-icon>\\r\\n                                        </button>\\r\\n                                        <button class='importedFunc-btn' (click)='downloadImported($event, fn)'>\\r\\n                                            <mat-icon class='importedFunc-btn-icon'>get_app</mat-icon>\\r\\n                                        </button>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <span class=\\\"tooltiptext\\\">\\r\\n                                    <p class='funcDesc'>{{fn.doc.description}}</p>\\r\\n                                    <p *ngIf='fn.doc.parameters?.length > 0'><span>Parameters: </span></p>\\r\\n                                    <p class='paramP' *ngFor='let param of fn.doc.parameters'><span>{{param.name}} - </span> {{param.description}}</p>\\r\\n                                    <p *ngIf='fn.doc.returns'><span>Returns: </span>{{fn.doc.returns}}</p>\\r\\n                                </span>\\r\\n                            </div>\\r\\n                            \\r\\n                        </ul>\\r\\n    \\r\\n                        <input type=\\\"file\\\" id=\\\"selectedFile\\\" (change)=\\\"import_function($event)\\\" style=\\\"display: none;\\\" />  \\r\\n                    </div>\\r\\n                </ng-container>\\r\\n            </div>\\r\\n            \\r\\n            <!--Divider-->\\r\\n            <div class = \\\"divider\\\"></div>\\r\\n            \\r\\n            <button id='Inline' class=\\\"accordion\\\"  (click)='toggleAccordionHead(\\\"Inline\\\")'>Inline\\r\\n            </button>\\r\\n            <!--Search Bar-->\\r\\n            <div class = 'searchbar--container'>\\r\\n                <input id='searchbarInline' class='searchBar' placeholder='Search' (keyup)='searchInline($event)'/>\\r\\n                <div class=\\\"panel\\\" [class.opened] = 'true' *ngIf='searchedInlines.length > 0'>\\r\\n                    <ul class='toolset__functions--subset inline_set'>\\r\\n                        <ng-container *ngFor='let fnString of searchedInlines'>\\r\\n                            <li (click)='add_inline(fnString)'>\\r\\n                                {{fnString}}\\r\\n                            </li>\\r\\n                        </ng-container>\\r\\n                    </ul>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"panel\\\">\\r\\n                <button id='globals' class=\\\"accordion inline--cat\\\"  (click)='toggleAccordion(\\\"globals\\\")'>Globals</button>\\r\\n                <div class=\\\"panel\\\">\\r\\n                    <ul class='toolset__functions--subset inline_set'>\\r\\n                        <ng-container *ngFor='let cnst of getFlowchart().nodes[0].procedure'>\\r\\n                            <li *ngIf='cnst.type === 10' (click)='add_inline(cnst.args[cnst.argCount-2].value)'>\\r\\n                                {{cnst.args[cnst.argCount-2].value}}\\r\\n                            </li>\\r\\n                        </ng-container>\\r\\n                    </ul>\\r\\n                    <!--Divider-->\\r\\n                    <div class = \\\"divider--in\\\"></div>\\r\\n                </div>\\r\\n    \\r\\n                <button id='inlineExpr' class=\\\"accordion inline--cat\\\"  (click)='toggleAccordion(\\\"inlineExpr\\\")'>Expressions</button>\\r\\n                <div class=\\\"panel\\\">\\r\\n                    <button id='inlineQueryExpr' class=\\\"accordion\\\" (click)='toggleAccordion(\\\"inlineQueryExpr\\\")'>Inline Query Expr</button>\\r\\n                    <div class=\\\"panel\\\">\\r\\n                        <ul class='toolset__functions--subset inline_set'>\\r\\n                            <!-- <li *ngFor='let expr of inlineQueryExpr' (click)='add_inline(expr[0])' title='{{expr[1]}}'>\\r\\n                                {{expr[0]}}\\r\\n                            </li> -->\\r\\n                            <li *ngFor='let expr of inlineQueryExpr' (click)='add_inline(expr)' title='{{expr}}'>\\r\\n                                {{expr}}\\r\\n                            </li>\\r\\n                        </ul>\\r\\n                        <!--Divider-->\\r\\n                        <div class = \\\"divider--in\\\"></div>\\r\\n                    </div>\\r\\n                    <button id='inlineSortExpr' class=\\\"accordion\\\" (click)='toggleAccordion(\\\"inlineSortExpr\\\")'>Inline Sort Expr</button>\\r\\n                    <div class=\\\"panel\\\">\\r\\n                        <ul class='toolset__functions--subset inline_set'>\\r\\n                            <!-- <li *ngFor='let expr of inlineSortExpr' (click)='add_inline(expr[0])' title='{{expr[1]}}'>\\r\\n                                {{expr[0]}}\\r\\n                            </li> -->\\r\\n                            <li *ngFor='let expr of inlineSortExpr' (click)='add_inline(expr)' title='{{expr}}'>\\r\\n                                {{expr}}\\r\\n                            </li>\\r\\n                        </ul>\\r\\n                        <!--Divider-->\\r\\n                        <div class = \\\"divider--in\\\"></div>\\r\\n                    </div>\\r\\n                </div>\\r\\n    \\r\\n    \\r\\n                <button id='inlineFunc' class=\\\"accordion inline--cat\\\" (click)='toggleAccordion(\\\"inlineFunc\\\")'>Functions</button>\\r\\n                <div class=\\\"panel\\\">\\r\\n                    <ng-container *ngFor='let category of inlineFunc'>\\r\\n                        <button id='inlineFunc_{{category[0]}}' class=\\\"accordion\\\" (click)='toggleAccordion(\\\"inlineFunc_\\\"+category[0])'>{{category[0]}}</button>\\r\\n                        <div class=\\\"panel\\\">\\r\\n                            <ul class='toolset__functions--subset inline_set'>\\r\\n                                <li *ngFor='let funcString of category[1]' (click)='add_inline(funcString[0])' title='{{funcString[1]}}'>\\r\\n                                    {{funcString[0]}}\\r\\n                                </li>\\r\\n                                <!-- <li *ngFor='let funcString of category[1]' (click)='add_inline(funcString)' title='{{funcString}}'>\\r\\n                                    {{funcString}}\\r\\n                                </li> -->\\r\\n                            </ul>\\r\\n                            <!--Divider-->\\r\\n                            <div class = \\\"divider--in\\\"></div>\\r\\n                        </div>\\r\\n                    </ng-container>\\r\\n                </div>\\r\\n            </div>\\r\\n        </ng-container>\\r\\n        <div class = \\\"divider\\\"></div>\\r\\n    </div>\\r\\n    \\r\\n    <!-- functions for input nodes -->\\r\\n    <div id='toolset_inp' class = 'toolset' *ngIf=\\\"getNode().type == 'start'\\\">\\r\\n        <button id='startFuncs' class=\\\"accordion inline--cat\\\" (click)='toggleAccordion(\\\"startFuncs\\\")'>Parameters</button>\\r\\n        <div class=\\\"panel\\\">\\r\\n        <!-- <div class='toolset__functions'> -->\\r\\n            <section *ngFor='let type of ProcedureTypesArr' >\\r\\n                <div *ngIf='type.toUpperCase() == \\\"CONSTANT\\\"'>\\r\\n                    <ul class='toolset__functions--subset'>\\r\\n                        <li (click)='add(ProcedureTypes[type], 5)'> Constant </li>\\r\\n                        <li (click)='add(ProcedureTypes[type], 0)'> Simple Input </li>\\r\\n                        <li (click)='add(ProcedureTypes[type], 1)'> Slider </li>\\r\\n                        <li (click)='add(ProcedureTypes[type], 2)'> Checkbox </li>\\r\\n                        <li (click)='add(ProcedureTypes[type], 3)'> URL </li>\\r\\n                        <li (click)='add(ProcedureTypes[type], 4)'> File </li>\\r\\n                    </ul>\\r\\n                </div>\\r\\n                <!-- <div *ngIf='type.toUpperCase() == \\\"ADDDATA\\\"'>\\r\\n                    <ul class='toolset__functions--subset'>\\r\\n                        <li (click)='add(ProcedureTypes[type])'> Add Model </li>\\r\\n                    </ul>\\r\\n                </div> -->\\r\\n            </section>\\r\\n        </div>\\r\\n    </div>\\r\\n    \\r\\n</div>\\r\\n\"","module.exports = \":host {\\n  overflow: hidden auto;\\n  width: 100%;\\n  background-color: transparent;\\n  border: 1px; }\\n\\nh2 {\\n  min-height: 30px;\\n  color: #373737;\\n  padding-left: 8px;\\n  font-family: sans-serif;\\n  line-height: 30px;\\n  font-size: 12px;\\n  font-weight: 550;\\n  width: 100%;\\n  display: flex;\\n  flex-flow: row nowrap;\\n  cursor: pointer; }\\n\\nh2 #node--name {\\n    width: 80%;\\n    text-overflow: ellipsis;\\n    overflow: hidden;\\n    white-space: nowrap; }\\n\\nh2 #node--arr {\\n    width: 20%; }\\n\\n.toolset--body {\\n  overflow: hidden; }\\n\\n.toolset--body:hover {\\n    overflow-y: auto; }\\n\\n.toolset--body::-webkit-scrollbar {\\n    width: 8px; }\\n\\n.toolset--body::-webkit-scrollbar-track {\\n    background: #E6E6E6; }\\n\\n.toolset--body::-webkit-scrollbar-thumb {\\n    background: #CCCCCC;\\n    border-left: 2px solid #E6E6E6; }\\n\\n.toolset--body::-webkit-scrollbar-thumb:hover {\\n    background: #999999; }\\n\\n.searchbar--container {\\n  padding: 0px; }\\n\\n.searchBar {\\n  width: 100%;\\n  font-size: 12px;\\n  padding: 0px 8px;\\n  border: 0px;\\n  height: 15px;\\n  border-bottom: 5px solid white; }\\n\\nul {\\n  list-style-type: none;\\n  margin: 0px;\\n  padding: 0px;\\n  background-color: #E6E6E6;\\n  overflow: hidden;\\n  text-overflow: ellipsis; }\\n\\nul li {\\n    -webkit-user-select: none;\\n       -moz-user-select: none;\\n        -ms-user-select: none;\\n            user-select: none;\\n    margin: 0px;\\n    padding: 0px;\\n    padding-left: 8px;\\n    font-style: italic;\\n    font-weight: 550;\\n    color: #be8c1e;\\n    font-size: 12px;\\n    height: 18px;\\n    line-height: 18px;\\n    width: 100%;\\n    box-sizing: border-box;\\n    white-space: nowrap;\\n    overflow: hidden;\\n    text-overflow: ellipsis; }\\n\\nul .user--add {\\n    margin-bottom: 8px; }\\n\\nul :hover {\\n    background-color: #CCCCCC;\\n    transition: 0.4s; }\\n\\n.user--def .user--def-lnContainer {\\n  width: 100%;\\n  display: flex;\\n  flex-flow: row nowrap;\\n  justify-content: space-between; }\\n\\n.user--def .user--def-lnContainer .btn--container {\\n    display: flex;\\n    flex-flow: row nowrap; }\\n\\n.importedFunc-btn {\\n  background-color: transparent;\\n  border: none;\\n  width: 13px;\\n  height: 13px;\\n  height: 100%;\\n  padding: 0px; }\\n\\n.importedFunc-btn .importedFunc-btn-icon {\\n    font-size: 12px;\\n    color: #373737;\\n    width: 13px;\\n    height: 13px;\\n    line-height: 13px; }\\n\\n.importedFunc-btn:hover .importedFunc-btn-icon {\\n    color: #00006d; }\\n\\n#nodeMenu {\\n  display: none;\\n  position: fixed;\\n  transition: display 0.4s;\\n  top: 70px;\\n  width: 125px;\\n  z-index: 1;\\n  background-color: #fafafb;\\n  border-right: 1px solid #999999;\\n  border-bottom: 1px solid #999999;\\n  border-top: 1px solid #999999;\\n  cursor: pointer; }\\n\\n#nodeMenu button {\\n    display: block;\\n    background-color: #fafafb;\\n    border: 0px;\\n    margin: 0px;\\n    padding: 0px;\\n    line-height: 30px;\\n    height: 30px;\\n    font-size: 12px; }\\n\\n#nodeMenu li {\\n    display: block;\\n    overflow: hidden;\\n    text-overflow: ellipsis;\\n    white-space: nowrap;\\n    line-height: 20px;\\n    background-color: #fafafb;\\n    font-weight: 550;\\n    border: 0px;\\n    margin: 0px;\\n    padding: 0px 10px 0px 10px;\\n    line-height: 30px;\\n    height: 30px;\\n    font-size: 12px;\\n    color: #373737; }\\n\\n#nodeMenu li:hover {\\n      color: #00006d; }\\n\\n.accordion {\\n  background-color: #CCCCCC;\\n  color: #373737;\\n  cursor: pointer;\\n  width: 100%;\\n  height: 24px;\\n  padding: 2px 8px 2px 8px;\\n  border: none;\\n  display: block;\\n  text-align: left;\\n  outline: none;\\n  font-size: 12px;\\n  transition: 0.4s;\\n  font-weight: 550;\\n  overflow: hidden;\\n  text-overflow: ellipsis; }\\n\\n.active, .accordion:hover {\\n  background-color: #B3B3B3; }\\n\\n.panel {\\n  width: inherit;\\n  padding: 0px;\\n  display: none;\\n  background-color: #E6E6E6;\\n  overflow: hidden; }\\n\\n.panel button:not(.inline--cat) {\\n    font-weight: 550;\\n    color: #00006d;\\n    font-style: italic;\\n    white-space: nowrap; }\\n\\n.panel.opened {\\n    display: block; }\\n\\n.tooltip {\\n  display: block; }\\n\\n.tooltip.invalid {\\n    opacity: 0.5;\\n    pointer-events: none; }\\n\\n/* Tooltip text */\\n\\n.tooltip .tooltiptext {\\n  width: 250px;\\n  background-color: #fafafb;\\n  border: 1px solid #CCCCCC;\\n  color: #373737;\\n  pointer-events: none;\\n  padding: 0px 10px 0px 10px;\\n  opacity: 0;\\n  position: fixed;\\n  bottom: 0px;\\n  left: 125px;\\n  float: left;\\n  z-index: 1; }\\n\\n.tooltip .tooltiptext p {\\n    font-family: sans-serif;\\n    display: flex;\\n    flex-flow: row nowrap; }\\n\\n.tooltip .tooltiptext p.funcDesc {\\n      font-weight: 600; }\\n\\n.tooltip .tooltiptext p.paramP {\\n      padding-left: 5px; }\\n\\n.tooltip .tooltiptext p.paramP ::before {\\n        display: inline-block;\\n        content: '';\\n        border-radius: 0.25rem;\\n        height: 0.25rem;\\n        width: 0.25rem;\\n        margin: 0rem 0.3rem 0.15rem 0rem;\\n        background-color: #808080; }\\n\\n.tooltip .tooltiptext p span {\\n      font-style: italic;\\n      line-height: 15px;\\n      white-space: nowrap;\\n      margin-right: 2px; }\\n\\n/* Show the tooltip text when you mouse over the tooltip container */\\n\\n.tooltip:hover .tooltiptext {\\n  transition-delay: 0.5s;\\n  transition-duration: 0.3s;\\n  opacity: 1; }\\n\\n.add-btn {\\n  height: 20px;\\n  margin: 0px;\\n  padding: 0px;\\n  border: 0px;\\n  background-color: #E6E6E6;\\n  color: #373737 !important;\\n  font-style: normal !important;\\n  font-weight: normal !important;\\n  height: 18px;\\n  width: 100%;\\n  line-height: 18px;\\n  text-align: left;\\n  text-decoration: none;\\n  font-size: 12px; }\\n\\n.divider, .divider--in {\\n  background-color: #fafafb;\\n  height: 8px; }\\n\\n.divider:hover, .divider--in:hover {\\n    background-color: transparent !important; }\\n\\n.divider--in {\\n  background-color: #E6E6E6; }\\n\\n.module-name {\\n  color: #00006d; }\\n\\n.inline_set li {\\n  color: #127e88; }\\n\"","import { Component, Output, EventEmitter, Input, OnInit, ViewEncapsulation} from '@angular/core';\r\n\r\nimport { ProcedureTypes, IFunction, IProcedure } from '@models/procedure';\r\nimport { IFlowchart } from '@models/flowchart';\r\nimport * as CircularJSON from 'circular-json';\r\nimport { IArgument } from '@models/code';\r\nimport { ModuleList, ModuleDocList } from '@shared/decorators';\r\nimport { INode } from '@models/node';\r\n\r\nimport { DownloadUtils } from '@shared/components/file/download.utils';\r\nimport { inline_query_expr, inline_func, inline_sort_expr} from './toolset.inline';\r\nimport { DataService } from '@services';\r\nimport { _parameterTypes } from '@modules';\r\nimport { InputType } from '@models/port';\r\n\r\nconst keys = Object.keys(ProcedureTypes);\r\nconst inputEvent = new Event('input', {\r\n    'bubbles': true,\r\n    'cancelable': true\r\n});\r\n\r\n@Component({\r\n  selector: 'toolset',\r\n  templateUrl: './toolset.component.html',\r\n  styleUrls: ['./toolset.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class ToolsetComponent implements OnInit {\r\n\r\n    @Output() selected = new EventEmitter();\r\n    @Output() delete = new EventEmitter();\r\n    @Output() imported = new EventEmitter();\r\n    // @Input() functions: IFunction[];\r\n\r\n    ProcedureTypes = ProcedureTypes;\r\n    ProcedureTypesArr = keys.slice(keys.length / 2);\r\n    searchedFunctions = [];\r\n    searchedInlines = [];\r\n\r\n    inlineQueryExpr = inline_query_expr;\r\n    inlineSortExpr = inline_sort_expr;\r\n    inlineFunc = inline_func;\r\n\r\n    Modules = [];\r\n    ModuleDoc = ModuleDocList;\r\n\r\n    constructor(private dataService: DataService) {}\r\n\r\n    ngOnInit() {\r\n        for (const mod of ModuleList) {\r\n            if (mod.module.substring(0, 1) === '_') { continue; }\r\n            const nMod = {'module': mod.module, 'functions': []};\r\n            for (const fn of mod.functions) {\r\n                if (fn.name.substring(0, 1) === '_') { continue; }\r\n                if (ModuleDocList[mod.module] && ModuleDocList[mod.module][fn.name]) {\r\n                    fn['doc'] = ModuleDocList[mod.module][fn.name];\r\n                    let fnDocHtml = `<p class=\"funcDesc\">${fn.doc.summary || fn.doc.description}</p>`;\r\n                    if (fn.doc.parameters && fn.doc.parameters.length > 0) {\r\n                        fnDocHtml += `<p><span>Parameters: </span></p>`;\r\n                        for (const param of fn.doc.parameters) {\r\n                            if (!param) {continue; }\r\n                            fnDocHtml += `<p class=\"paramP\"><span>${param.name} - </span> ${param.description}</p>`;\r\n                        }\r\n                    }\r\n                    if (fn.doc.returns) {\r\n                        fnDocHtml += `<p><span>Returns: </span> ${fn.doc.returns}</p>`;\r\n                    }\r\n                    fn['doc'] = fnDocHtml;\r\n                } else {\r\n                    fn['doc'] = '<br>';\r\n                }\r\n                nMod.functions.push(fn);\r\n            }\r\n            this.Modules.push(nMod);\r\n        }\r\n    }\r\n\r\n    // add selected basic function as a new procedure\r\n    add(type: ProcedureTypes, data?): void {\r\n        this.selected.emit( { type: type, data: data } );\r\n    }\r\n\r\n    // add selected function from core.modules as a new procedure\r\n    add_function(fnData) {\r\n        // create a fresh copy of the params to avoid linked objects\r\n        // todo: figure out\r\n        fnData.args = fnData.args.map( (arg) => {\r\n            return {name: arg.name, value: arg.value, default: arg.default};\r\n            });\r\n\r\n        this.selected.emit( { type: ProcedureTypes.Function, data: fnData } );\r\n    }\r\n\r\n    // add selected imported function as a new procedure\r\n    add_imported_function(fnData) {\r\n        fnData.args = fnData.args.map( (arg) => {\r\n            if (arg.type === InputType.Constant) {\r\n                return {name: arg.name, value: arg.default, type: arg.type};\r\n            }\r\n            return {name: arg.name, value: arg.value, type: arg.type};\r\n            });\r\n        this.selected.emit( { type: ProcedureTypes.Imported, data: fnData } );\r\n    }\r\n\r\n    setCurrent(event) {\r\n        if (document.activeElement.tagName === 'INPUT' && document.activeElement.className !== 'searchBar') {\r\n            // this.dataService.focusedInput = [document.activeElement, (<HTMLInputElement>document.activeElement).selectionStart];\r\n            this.dataService.focusedInput = document.activeElement;\r\n        } else {\r\n            // this.dataService.focusedInput = undefined;\r\n        }\r\n    }\r\n\r\n    add_inline(string) {\r\n        if (!this.dataService.focusedInput) {\r\n            return;\r\n        }\r\n        this.dataService.focusedInput.focus();\r\n        const index = this.dataService.focusedInput.selectionDirection === 'backward' ?\r\n            this.dataService.focusedInput.selectionStart : this.dataService.focusedInput.selectionEnd;\r\n        this.dataService.focusedInput.value =\r\n            this.dataService.focusedInput.value.slice(0, index) +\r\n            string +\r\n            this.dataService.focusedInput.value.slice(index);\r\n\r\n        this.dataService.focusedInput.dispatchEvent(inputEvent);\r\n        this.dataService.focusedInput.selectionStart = index + string.length;\r\n        // this.dataService.focusedInput.trigger('input');\r\n    }\r\n\r\n    // delete imported function\r\n    delete_imported_function(fnData) {\r\n        this.delete.emit(fnData);\r\n    }\r\n\r\n\r\n    // import a flowchart as function\r\n    async import_function(event) {\r\n        // read the file and create the function based on the flowchart\r\n        const p = new Promise((resolve) => {\r\n            const reader = new FileReader();\r\n            reader.onload = function() {\r\n                // parse the flowchart\r\n                const fl = CircularJSON.parse(reader.result.toString()).flowchart;\r\n\r\n                // create function and documentation of the function\r\n                const funcs = [];\r\n                let funcName = fl.name.replace(/[^A-Za-z0-9_]/g, '_');\r\n                if (funcName.match(/^[\\d_]/)) {\r\n                    funcName = 'func' + funcName;\r\n                }\r\n                const documentation = {\r\n                    name: funcName,\r\n                    module: 'Imported',\r\n                    description: fl.description,\r\n                    summary: fl.description,\r\n                    parameters: [],\r\n                    returns: fl.returnDescription\r\n                };\r\n                const func: IFunction = <IFunction>{\r\n                    flowchart: <IFlowchart>{\r\n                        name: fl.name,\r\n                        nodes: fl.nodes,\r\n                        edges: fl.edges\r\n                    },\r\n                    name: funcName,\r\n                    module: 'Imported',\r\n                    doc: documentation,\r\n                    importedFile: reader.result.toString()\r\n                };\r\n\r\n                func.args = [];\r\n                for (const prod of fl.nodes[0].procedure) {\r\n                    if (!prod.enabled || prod.type !== ProcedureTypes.Constant) { continue; }\r\n                    let v: string = prod.args[prod.argCount - 2].value || 'undefined';\r\n                    if (v.substring(0, 1) === '\"' || v.substring(0, 1) === '\\'') { v = v.substring(1, v.length - 1); }\r\n                    if (prod.meta.inputMode !== InputType.Constant) {\r\n                        documentation.parameters.push({\r\n                            name: v,\r\n                            description: prod.meta.description\r\n                        });\r\n                    }\r\n                    func.args.push(<IArgument>{\r\n                        name: v,\r\n                        default: prod.args[prod.argCount - 1].default,\r\n                        value: undefined,\r\n                        type: prod.meta.inputMode,\r\n                    });\r\n                }\r\n                func.argCount = func.args.length;\r\n                /*\r\n                if (!func.argCount) {\r\n                    resolve('error');\r\n                }\r\n                */\r\n\r\n\r\n                // add func and all the imported functions of the imported flowchart to funcs\r\n                funcs.push(func);\r\n                for (const i of fl.functions) {\r\n                    funcs.push(i);\r\n                }\r\n                resolve(funcs);\r\n            };\r\n            reader.onerror = function() {\r\n                resolve('error');\r\n            };\r\n            reader.readAsText(event.target.files[0]);\r\n        });\r\n        const fnc = await p;\r\n        (<HTMLInputElement>document.getElementById('selectedFile')).value = '';\r\n        if (fnc === 'error') {\r\n            console.warn('Error reading file');\r\n            return;\r\n        }\r\n        this.imported.emit(fnc);\r\n    }\r\n\r\n    downloadImported(event: MouseEvent, fnData) {\r\n        event.stopPropagation();\r\n\r\n        const fileString = fnData.importedFile;\r\n        const fname = `${fnData.name}.mob`;\r\n        const blob = new Blob([fileString], {type: 'application/json'});\r\n        DownloadUtils.downloadFile(fname, blob);\r\n\r\n    }\r\n\r\n    toggleAccordion(id: string) {\r\n        if (this.dataService.focusedInput) {\r\n            this.dataService.focusedInput.focus();\r\n        }\r\n        const acc = document.getElementById(id);\r\n        // acc = document.getElementsByClassName(\"accordion\");\r\n        acc.classList.toggle('active');\r\n        const panel = <HTMLElement>acc.nextElementSibling;\r\n        if (panel.style.display === 'block') {\r\n            panel.style.display = 'none';\r\n        } else {\r\n            panel.style.display = 'block';\r\n        }\r\n    }\r\n\r\n    toggleAccordionHead(id: string) {\r\n        if (this.dataService.focusedInput) {\r\n            this.dataService.focusedInput.focus();\r\n        }\r\n        const acc = document.getElementById(id);\r\n        // acc = document.getElementsByClassName(\"accordion\");\r\n        acc.classList.toggle('active');\r\n        let panel = <HTMLElement>acc.nextElementSibling;\r\n        if (panel.className !== 'panel') {\r\n            panel = <HTMLElement>panel.nextElementSibling;\r\n        }\r\n        if (panel.style.display === 'block') {\r\n            panel.style.display = 'none';\r\n        } else {\r\n            panel.style.display = 'block';\r\n        }\r\n    }\r\n\r\n    openNodeMenu(e: MouseEvent) {\r\n        const stl = document.getElementById('nodeMenu').style;\r\n        if (!stl.display || stl.display === 'none') {\r\n            stl.display = 'block';\r\n        } else {\r\n            stl.display = 'none';\r\n        }\r\n        e.stopPropagation();\r\n\r\n    }\r\n\r\n    changeNode(index: number) {\r\n        this.dataService.flowchart.meta.selected_nodes = [index];\r\n    }\r\n\r\n    checkInvalid(type) {\r\n        const node = this.dataService.node;\r\n        const tp = type.toUpperCase();\r\n        if (tp === 'ELSE') {\r\n            if (!node.state.procedure[0]) {\r\n                return true;\r\n            }\r\n            if (node.state.procedure[0].type.toString() !== ProcedureTypes.If.toString()\r\n            && node.state.procedure[0].type.toString() !== ProcedureTypes.Elseif.toString()) {\r\n                return true;\r\n            }\r\n            let prods: IProcedure[];\r\n\r\n            if (node.state.procedure[0].parent) { prods = node.state.procedure[0].parent.children;\r\n            } else { prods = node.procedure; }\r\n\r\n            for (let i = 0 ; i < prods.length - 1; i++) {\r\n                if (prods[i].ID === node.state.procedure[0].ID) {\r\n                    if (prods[i + 1].type.toString() === ProcedureTypes.Elseif.toString() ||\r\n                    prods[i + 1].type.toString() === ProcedureTypes.Else.toString()) {\r\n                        return true;\r\n                    }\r\n                    return false;\r\n                }\r\n            }\r\n            return false;\r\n        } else if (tp === 'ELSEIF') {\r\n            if (!node.state.procedure[0]) {\r\n                return true;\r\n            }\r\n            return (node.state.procedure[0].type.toString() !== ProcedureTypes.If.toString()\r\n            && node.state.procedure[0].type.toString() !== ProcedureTypes.Elseif.toString());\r\n        } else {\r\n            if (tp === 'BREAK' || tp === 'CONTINUE') {\r\n                let checkNode = node.state.procedure[0];\r\n                if (!checkNode) {return true; }\r\n                while (checkNode.parent) {\r\n                    if (checkNode.parent.type.toString() === ProcedureTypes.Foreach.toString() ||\r\n                    checkNode.parent.type.toString() === ProcedureTypes.While.toString()) {\r\n                        return false;\r\n                    }\r\n                    checkNode = checkNode.parent;\r\n                }\r\n                return true;\r\n            }\r\n\r\n            if (node.state.procedure[0]) {\r\n                let prods: IProcedure[];\r\n\r\n                if (node.state.procedure[0].parent) { prods = node.state.procedure[0].parent.children;\r\n                } else { prods = node.procedure; }\r\n\r\n                if (node.state.procedure[0].type.toString() === ProcedureTypes.If.toString()\r\n                || node.state.procedure[0].type.toString() === ProcedureTypes.Elseif.toString()) {\r\n                    for (let i = 0 ; i < prods.length - 1; i++) {\r\n                        if (prods[i].ID === node.state.procedure[0].ID) {\r\n                            if (prods[i + 1].type.toString() === ProcedureTypes.Else.toString()\r\n                            || prods[i + 1].type.toString() === ProcedureTypes.Elseif.toString()) {\r\n                                return true;\r\n                            }\r\n                            return false;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n\r\n        }\r\n        return false;\r\n    }\r\n\r\n    searchFunction(event) {\r\n        const str = event.target.value.toLowerCase().replace(/ /g, '_');\r\n        this.searchedFunctions = [];\r\n        if (str.length === 0) {\r\n            return;\r\n        }\r\n        for (let i = 0; i < 8; i++) {\r\n            if (this.searchedFunctions.length >= 10) { break; }\r\n            if (this.ProcedureTypesArr[i].toLowerCase().indexOf(str) !== -1) {\r\n                this.searchedFunctions.push({\r\n                    'type': 'basic',\r\n                    'name': this.ProcedureTypesArr[i],\r\n                });\r\n            }\r\n        }\r\n\r\n        // @ts-ignore\r\n        for (const mod of this.Modules) {\r\n            if (this.searchedFunctions.length >= 10) { break; }\r\n            if (mod.module.substring(0, 1) === '_' || mod.module === 'Input' || mod.module === 'Output') {continue; }\r\n            for (const func of mod.functions) {\r\n                if (this.searchedFunctions.length >= 10) { break; }\r\n                if (func.name.substring(0, 1) === '_') {continue; }\r\n                if (func.name.toLowerCase().indexOf(str) !== -1) {\r\n                    this.searchedFunctions.push({\r\n                        'type': 'function',\r\n                        'name': func.name,\r\n                        'module': mod.module,\r\n                        'data': func\r\n                    });\r\n                }\r\n            }\r\n        }\r\n        for (const func of this.dataService.flowchart.functions) {\r\n            if (this.searchedFunctions.length >= 10) { break; }\r\n            if (func.name.toLowerCase().indexOf(str) !== -1) {\r\n                this.searchedFunctions.push({\r\n                    'type': 'imported',\r\n                    'name': func.name,\r\n                    'data': func\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    searchInline(event) {\r\n        const str = event.target.value.toLowerCase();\r\n        this.searchedInlines = [];\r\n        if (str.length === 0) {\r\n            return;\r\n        }\r\n        for (const cnst of this.dataService.flowchart.nodes[0].procedure) {\r\n            if (this.searchedInlines.length >= 10) { break; }\r\n            if (cnst.type !== ProcedureTypes.Constant) { continue; }\r\n            const cnstString = cnst.args[cnst.argCount - 2].value;\r\n            if (cnstString.toLowerCase().indexOf(str) !== -1) {\r\n                this.searchedInlines.push(cnstString);\r\n            }\r\n        }\r\n        for (const expr of this.inlineQueryExpr) {\r\n            if (this.searchedInlines.length >= 10) { break; }\r\n            if (expr[0].toLowerCase().indexOf(str) !== -1) {\r\n                this.searchedInlines.push(expr);\r\n            }\r\n        }\r\n        for (const category of this.inlineFunc) {\r\n            for (const funcString of category[1]) {\r\n                if (this.searchedInlines.length >= 10) { break; }\r\n                if (funcString[0].toLowerCase().indexOf(str) !== -1) {\r\n                    this.searchedInlines.push(funcString[0]);\r\n                }\r\n            }\r\n            if (this.searchedInlines.length >= 10) { break; }\r\n        }\r\n\r\n    }\r\n\r\n    getViewOutput() {\r\n        return this.dataService.getModelOutputView(this.dataService.node.id);\r\n    }\r\n\r\n    getFlowchart() { return this.dataService.flowchart; }\r\n    getNode() { return this.dataService.node; }\r\n\r\n}\r\n","export const inline_query_expr = [\r\n    ['#@name == value', 'Search attributes equal to a given value'],\r\n    ['#@name[i] == value', 'Search attribute index i equal to a given value'],\r\n    ['#@name != value', 'Search attributes not equal to a given value'],\r\n    ['#@name[i] != value', 'Search attribute index not equal to a given value'],\r\n    ['#@name > value', 'Search attributes greater than a given value'],\r\n    ['#@name[i] > value', 'Search attribute index greater than a given value'],\r\n    ['#@name >= value', 'Search attributes greater than or equal to a given value'],\r\n    ['#@name[i] >= value', 'Search attribute index greater than or equal to a given value'],\r\n    ['#@name < value', 'Search attributes less than a given value'],\r\n    ['#@name[i] < value', 'Search attribute index less than a given value'],\r\n    ['#@name <= value', 'Search attributes less than or equal to a given value'],\r\n    ['#@name[i] <= value', 'Search attribute index less than or equal to a given value']\r\n];\r\n\r\nexport const inline_sort_expr = [\r\n    ['#@name', 'Sort based on attribute value'],\r\n    ['#@name[i]', 'Sort based on attribute index value']\r\n];\r\n\r\nconst constants = [\r\n    ['PI', 'Generates a list of integers as a range'],\r\n    ['XY', 'A plane at the origin, aligned with the XY plane'],\r\n    ['YZ', 'A plane at the origin, aligned with the YZ plane'],\r\n    ['ZX', 'A plane at the origin, aligned with the ZX plane'],\r\n    ['YX', 'A plane at the origin, aligned with the YX plane'],\r\n    ['ZY', 'A plane at the origin, aligned with the ZY plane'],\r\n    ['XZ', 'A plane at the origin, aligned with the XZ plane']\r\n ];\r\n\r\nconst lists = [\r\n    ['range(start, end)', 'Generates a list of integers as a range'],\r\n    ['length(list)', 'Returns the number of items in the list'],\r\n    ['shuffle(list)', 'Shuffles the items in a list in random order'],\r\n    ['zip(lists)', 'Converts a set of lists from rows into columns, based on the shortest list.'],\r\n    ['zip2(lists)', 'Converts a set of lists from rows into columns, based on the longest list.']\r\n ];\r\n\r\n const vectors = [\r\n    ['vecAdd(v1, v2)', 'Adds two vectors'],\r\n    ['vecSub(v1, v2)', 'Subtracts vec2 from vec1'],\r\n    ['vecDiv(v, num)', 'Divides a vector by a number'],\r\n    ['vecMult(v, num)', 'Multiplies a vector by a number'],\r\n    ['vecLen(v)', 'Calculates the magnitude of a vector'],\r\n    ['vecSetLen(v, num)', 'Sets the magnitude of a vector'],\r\n    ['vecNorm(v)', 'Sets the magnitude of a vector to 1'],\r\n    ['vecRev(v)', 'Reverses the direction of a vector'],\r\n    ['vecFromTo(pt1, pt2)', 'Creates a vector between two points'],\r\n    ['vecAng(v1, v2)', 'Calculate the angle (0 to PI) between two vectors'],\r\n    ['vecAng2(v1, v2, n)', 'Calculate the angle (0 to 2PI) between two vectors, relative to the plane normal'],\r\n    ['vecDot(v1, v2)', 'Calculates the cross product of thre vectors'],\r\n    ['vecCross(v1, v2)', 'Calculates the dot product of two vectors'],\r\n    ['vecEqual(v1, v2, tol)', 'Returns true if the difference between two vectors is smaler than a specified tolerance']\r\n];\r\n\r\nconst conversion = [\r\n    ['boolean(val)', 'Converts the value to a boolean'],\r\n    ['number(val)', 'Converts the value to a number'],\r\n    ['string(val)', 'Converts the value to a string'],\r\n    ['radToDeg(rad)', 'Converts radians to degrees'],\r\n    ['degToRad(deg)', 'Converts degrees to radians']\r\n];\r\n\r\nconst random = [\r\n    ['rand(min, max)', 'Returns a random number in the specified range'],\r\n    ['randInt(min, max)', 'Returns a random integer in the specified range'],\r\n    ['randPick(list, num)', 'Returns a random set of items from the list']\r\n];\r\n\r\nconst arithmetic = [\r\n    ['abs(num)', 'Returns the absolute value of the number'],\r\n    ['square(num)', 'Returns the square of the number'],\r\n    ['cube(num)', 'Returns the cube of the number'],\r\n    ['pow(numb, pow)', 'Returns the number to the specified power'],\r\n    ['sqrt(num)', 'Returns the square root of the number'],\r\n    ['exp(num)', 'Returns the value of E to the power of the number'],\r\n    ['log(num)', 'Returns the natural logarithm (base E) of the number'],\r\n    ['round(num)', 'Returns the value of the number rounded to its nearest integer'],\r\n    ['ceil(num)', 'Returns the value of the number rounded up to its nearest integer'],\r\n    ['floor(num)', 'Returns the value of the number rounded down to its nearest integer'],\r\n    ['mod(num, num)', 'Converts the value to a boolean'],\r\n    ['sum(list)', 'Returns the sum of all values in a list'],\r\n    ['prod(list)', 'Returns the product of all values in a list'],\r\n    ['hypot(list)', 'Returns the hypothenuse of all values in a list'],\r\n    ['norm(list)', 'Returns the norm of a vector'],\r\n    ['distance(list, list)', 'Returns the Eucledian distance between two locations (each as a list of xyz coordinates)']\r\n];\r\n\r\nconst statistics = [\r\n    ['min(list)', 'Returns the number with the lowest value'],\r\n    ['max(list)', 'Returns the number with the highest value'],\r\n    ['mad(list)', 'Returns the median absolute deviation of the list'],\r\n    ['mean(list)', 'Returns the mean value of the list'],\r\n    ['median(list)', 'Returns the median of the list'],\r\n    ['mode(list)', 'Returns the mode of the list'],\r\n    ['std(list)', 'Returns the standard deviation of the list'],\r\n    ['vari(list)', 'Returns the variance of the list']\r\n];\r\n\r\nconst trigonometry = [\r\n    ['sin(rad)', 'Returns the sine of a value (in radians)'],\r\n    ['asin(num)', 'Returns the inverse sine of a value (in radians)'],\r\n    ['sinh(rad)', 'Returns the hyperbolic sine of a value (in radians)'],\r\n    ['asinh(num)', 'Returns the hyperbolic arcsine of a value (in radians)'],\r\n    ['cos(rad)', 'Returns the cosine of a value (in radians)'],\r\n    ['acos(num)', 'Returns the inverse cosine of a value (in radians)'],\r\n    ['cosh(rad)', 'Returns the hyperbolic cosine of a value (in radians)'],\r\n    ['acosh(num)', 'Returns the hyperbolic arccos of a value (in radians)'],\r\n    ['tan(rad)', 'Returns the tangent of a value (in radians)'],\r\n    ['atan(num)', 'Returns the inverse tangent of a value (in radians)'],\r\n    ['tanh(rad)', 'Returns the hyperbolic tangent of a value (in radians)'],\r\n    ['atanh(num)', 'Returns the hyperbolic arctangent of a value (in radians)'],\r\n    ['atan2(number1, number2)', 'Returns the inverse tangent function with two arguments, number1/number2']\r\n];\r\n\r\nconst str = [\r\n    ['replace(string,search_str,new_str)', 'Replace all instances of specified search with a new string']\r\n];\r\n\r\nexport const inline_func = [\r\n    ['constants', constants],\r\n    ['random', random],\r\n    ['lists', lists],\r\n    ['conversion', conversion],\r\n    ['vectors', vectors],\r\n    ['arithmetic', arithmetic],\r\n    ['statistics', statistics],\r\n    ['trigonometry', trigonometry]\r\n];\r\n\r\n// const inline_func_lst: string[][][] = inline_func.map(x => x[1]);\r\n// const inline_func_lst = [\r\n//     lists,\r\n//     conversion,\r\n//     arithmetic,\r\n//     statistics,\r\n//     trigonometry\r\n// ];\r\n\r\n// const inline_fn_names = [];\r\n// for (let i = 0; i < inline_func_lst.length; i++) {\r\n//     inline_func_lst[i].forEach((arr) => {\r\n//         const mtch = arr[0].match(/^\\w*(?=\\()/);\r\n//         let ret;\r\n//         if (mtch !== null) {\r\n//             ret = mtch[0];\r\n//         } else {\r\n//             ret = arr[0];\r\n//         }\r\n//         inline_fn_names.push(ret);\r\n//     });\r\n// }\r\n// export const inline_fn_regEx = RegExp(inline_fn_names.join('|'), 'g');\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { ViewEditorComponent } from './view-editor.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: ViewEditorComponent,\r\n    children: [\r\n      // {\r\n      //   path: '',\r\n      //   loadChildren: '../../mobius-viewer/mobius-viewer.module#MobiusViewerModule',\r\n      // }\r\n    ]\r\n  }\r\n];\r\n\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class ViewEditorRoutingModule { }\r\n","module.exports = \"<div class='container'>\\r\\n    <as-split direction=\\\"horizontal\\\" (dragEnd)='setSplit($event)'>\\r\\n        <as-split-area [size]=\\\"100 - getSplit()\\\">\\r\\n            <panel-header [title]='getFlowchart().name'></panel-header>\\r\\n            <!-- viewchild content -->\\r\\n            <div class='content__panel'>\\r\\n\\r\\n                <!-- <div class='container--editor' (mouseenter)='activateCopyPaste()'  (mouseleave)='deactivateCopyPaste()' -->\\r\\n                <div class='container--editor'\\r\\n                (copy)='copyProd()' (cut)='cutProd($event)' (paste)='pasteProd($event)'>\\r\\n                \\r\\n                    <div class='container__content'>\\r\\n                        <!-- toolset on the left side -->\\r\\n                        <div class=\\\"container--toolset\\\">\\r\\n                            <toolset \\r\\n                            (delete)='deleteFunction($event)' \\r\\n                            (selected)='add($event)' \\r\\n                            (imported)='importFunction($event)'></toolset>\\r\\n                        </div>\\r\\n                        <!-- procedure editor on the right side -->\\r\\n                        <div id='procedure' class=\\\"container--procedure\\\" (click)='unselectAll($event)'>\\r\\n                            <!-- parameter-editor only for start/end node -->\\r\\n                            <parameter-editor *ngIf=\\\"getNode().type == 'start'\\\" \\r\\n                            [flowchart]='getFlowchart()' \\r\\n                            [node]='getNode()'\\r\\n                            [prodCheck]='false'></parameter-editor>\\r\\n                            <ng-container *ngIf='getNode().enabled; else disabled_node'>\\r\\n                                <div id='modelViewButton--container' *ngIf=\\\"getNode().type !== 'start'\\\">\\r\\n                                    <button (click)='setViewOutput()'>Viewing \\r\\n                                        <span *ngIf='!getViewOutput()'>Input Model</span>\\r\\n                                        <span *ngIf='getViewOutput()'>Output Model</span></button>\\r\\n                                </div>\\r\\n\\r\\n                                <div id='modelViewButton--container' *ngIf=\\\"getNode().type == 'start'\\\">\\r\\n                                    <button (click)='setViewOutput()'>\\r\\n                                        <span *ngIf='getViewOutput()'>Viewing</span>\\r\\n                                        <span *ngIf='!getViewOutput()'>Hiding</span>\\r\\n                                    Test Model</button>\\r\\n                                </div>\\r\\n                            </ng-container>\\r\\n                            <ng-template #disabled_node>\\r\\n                                <div id='modelViewButton--container' *ngIf=\\\"getNode().type !== 'start'\\\">\\r\\n                                    <button disabled> Node Disabled </button>\\r\\n                                </div>\\r\\n                            </ng-template>\\r\\n                            \\r\\n                            <div class = 'procedureln--container' [ngClass]=\\\"{'procedureln--container-start': getNode().type == 'start'}\\\">\\r\\n                                <!-- list of procedure items for all nodes -->\\r\\n                                <div class = 'pro-container' [hidden]=\\\"getNode().type == 'start' && !getViewOutput()\\\">\\r\\n                                    <procedure-item \\r\\n                                    *ngFor=\\\"let line of getNode()?.procedure; let idx=index\\\" \\r\\n                                    [data]=\\\"line\\\"\\r\\n                                    (select)=\\\"selectProcedure($event)\\\"\\r\\n                                    (delete)=\\\"deleteChild(idx)\\\"\\r\\n                                    (helpText)='updateHelpView($event)'\\r\\n                                    ></procedure-item>\\r\\n                                </div>\\r\\n                                <div class = 'divider--container' *ngIf=\\\"getNode().type !== ''\\\">\\r\\n                                    <div class = 'divider' *ngIf=\\\"getNode().type == 'start'\\\"><span>Parameters</span></div>\\r\\n                                    <div class = 'divider' *ngIf=\\\"getNode().type == 'end'\\\"><span>Return</span></div>\\r\\n                                </div>\\r\\n                                <parameter-editor *ngIf=\\\"getNode().type !== ''\\\" \\r\\n                                [flowchart]='getFlowchart()' \\r\\n                                [node]='getNode()'\\r\\n                                [prodCheck]='true'\\r\\n                                (selectInp)='selectProcedure($event)'></parameter-editor>\\r\\n                                <div id = 'spacer'></div>\\r\\n                                \\r\\n                            </div>\\r\\n                            <!-- <button class='modelViewButton' (click)='setViewOutput(true)'>View Output</button> -->\\r\\n\\r\\n                            <br>\\r\\n                            <br>\\r\\n\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </as-split-area>\\r\\n\\r\\n        <as-split-area [size]=\\\"getSplit()\\\">\\r\\n            <!-- data viewers panel -->\\r\\n            <div class='content__viewer' >\\r\\n                <model-viewers-container [data]='viewerData()'></model-viewers-container>\\r\\n            </div>\\r\\n        </as-split-area>\\r\\n        \\r\\n    </as-split>\\r\\n\\r\\n<notification [message]='notificationMessage' [dummyTrigger]='notificationTrigger'></notification>\\r\\n\\r\\n</div>\\r\\n<spinner></spinner>\\r\\n<chrome></chrome>\\r\\n\\r\\n\"","module.exports = \".content__panel {\\n  margin-top: 40px; }\\n\\n.container--editor {\\n  display: block;\\n  height: 100%;\\n  width: 100%; }\\n\\n.container__heading {\\n  display: block;\\n  text-align: center;\\n  width: 100%; }\\n\\n.container__content {\\n  display: inline-flex;\\n  width: 100%;\\n  min-height: 100%;\\n  overflow: inherit; }\\n\\n.container--toolset {\\n  display: inline-flex;\\n  width: 125px;\\n  min-width: 125px;\\n  max-width: 125px;\\n  background-color: transparent;\\n  height: calc(100vh - 40px);\\n  overflow: hidden; }\\n\\n.container--toolset toolset {\\n    display: flex;\\n    flex-flow: column nowrap;\\n    overflow: hidden;\\n    width: 100%; }\\n\\n.pro-container {\\n  height: auto; }\\n\\n.container--procedure {\\n  width: calc(100% - 125px);\\n  background-color: transparent;\\n  padding: 0px; }\\n\\n.procedureln--container {\\n  padding: 0px;\\n  padding-bottom: 10px;\\n  overflow: hidden;\\n  margin: 0px 0px 5px 0px;\\n  height: calc(100vh - 40px - 25px); }\\n\\n.procedureln--container #spacer {\\n    height: 10px; }\\n\\n.procedureln--container:hover {\\n    overflow: auto; }\\n\\n.procedureln--container-start {\\n  height: calc(100vh - 40px - 25px - 56px); }\\n\\nhr {\\n  border-top: 2px solid #E6E6E6;\\n  width: 100%; }\\n\\nprocedure-item.ng-star-inserted {\\n  max-height: 100%; }\\n\\n.divider--container {\\n  height: 20px;\\n  display: flex;\\n  flex-flow: column nowrap;\\n  padding-left: 8px;\\n  padding-right: 5px;\\n  width: 100%;\\n  box-sizing: border-box;\\n  margin: 10px 0px 2px 0px; }\\n\\n.divider--container .divider {\\n    height: 100%;\\n    padding-left: 2px;\\n    padding-bottom: 2px;\\n    border-bottom: 3px solid #999999; }\\n\\n.divider--container .divider span {\\n      font-size: 12px;\\n      font-weight: 550;\\n      color: #00006d; }\\n\\n#modelViewButton--container {\\n  padding: 0px 13px 0px 0px;\\n  margin-bottom: 5px; }\\n\\n#modelViewButton--container button {\\n    width: 100%;\\n    margin: 0px 5px 2px 8px;\\n    background-color: #E6E6E6;\\n    color: #808080;\\n    text-align: center;\\n    text-decoration: none;\\n    font-size: 12px;\\n    transition: 0.4s;\\n    border: 2px solid transparent; }\\n\\n#modelViewButton--container button span {\\n      color: #00006d;\\n      font-weight: 550; }\\n\\n#modelViewButton--container button:hover, #modelViewButton--container button:active {\\n      background-color: #CCCCCC;\\n      color: #373737; }\\n\"","import { Component, Input, EventEmitter, Output} from '@angular/core';\r\nimport { IFlowchart } from '@models/flowchart';\r\nimport { NodeUtils, INode } from '@models/node';\r\nimport { ProcedureTypes, IFunction, IProcedure } from '@models/procedure';\r\nimport { DataService } from '@services';\r\nimport { Router } from '@angular/router';\r\nimport * as circularJSON from 'circular-json';\r\nimport { LoadUrlComponent } from '@shared/components/file/loadurl.component';\r\n\r\n@Component({\r\n  selector: 'view-editor',\r\n  templateUrl: './view-editor.component.html',\r\n  styleUrls: ['./view-editor.component.scss']\r\n})\r\nexport class ViewEditorComponent {\r\n    /*\r\n    @Input() flowchart: IFlowchart;\r\n    @Input() node: INode;\r\n    */\r\n\r\n    @Output() imported = new EventEmitter();\r\n    @Output() delete_Function = new EventEmitter();\r\n    notificationMessage = '';\r\n    notificationTrigger = true;\r\n\r\n    private copyCheck = true;\r\n\r\n    constructor(private dataService: DataService, private router: Router) {\r\n        new LoadUrlComponent(this.dataService, this.router).loadStartUpURL(this.router.url);\r\n    }\r\n\r\n    // add a procedure\r\n    add(data: {type: ProcedureTypes, data: IFunction}): void {\r\n        NodeUtils.add_procedure(this.dataService.node, data.type, data.data);\r\n    }\r\n\r\n    // delete a procedure\r\n    deleteChild(index: number): void {\r\n        this.dataService.node.procedure.splice(index, 1);\r\n        NodeUtils.deselect_procedure(this.dataService.node);\r\n    }\r\n\r\n    // select a procedure\r\n    selectProcedure(event): void {\r\n        if (!event.ctrl && document.activeElement.tagName === 'INPUT') {\r\n            return;\r\n        }\r\n        NodeUtils.select_procedure(this.dataService.node, event.prod, event.ctrl || false);\r\n    }\r\n\r\n    // copy selected procedures\r\n    copyProd() {\r\n        const node = this.dataService.node;\r\n        let i = 0;\r\n        while (i < node.state.procedure.length) {\r\n            if (node.state.procedure[i].type === ProcedureTypes.Blank || node.state.procedure[i].type === ProcedureTypes.Return) {\r\n                node.state.procedure[i].selected = false;\r\n                node.state.procedure.splice(i, 1);\r\n            } else {\r\n                i += 1;\r\n            }\r\n        }\r\n        if (!this.copyCheck || document.activeElement.nodeName === 'INPUT' || node.state.procedure.length === 0) { return; }\r\n        // console.log('copying', node.state.procedure);\r\n\r\n        this.dataService.copiedProd = node.state.procedure;\r\n\r\n        this.notificationMessage = `Copied ${this.dataService.copiedProd.length} Procedures`;\r\n        this.notificationTrigger = !this.notificationTrigger;\r\n    }\r\n\r\n    // cut selected procedures\r\n    cutProd() {\r\n        const node = this.dataService.node;\r\n        let i = 0;\r\n        while (i < node.state.procedure.length) {\r\n            if (node.state.procedure[i].type === ProcedureTypes.Blank || node.state.procedure[i].type === ProcedureTypes.Return) {\r\n                node.state.procedure[i].selected = false;\r\n                node.state.procedure.splice(i, 1);\r\n            } else {\r\n                i += 1;\r\n            }\r\n        }\r\n        if (!this.copyCheck || document.activeElement.nodeName === 'INPUT' || node.state.procedure.length === 0) { return; }\r\n        // console.log('cutting', node.state.procedure);\r\n\r\n        this.dataService.copiedProd = node.state.procedure;\r\n        let parentArray: IProcedure[];\r\n        for (const prod of this.dataService.copiedProd) {\r\n            if (prod.type === ProcedureTypes.Blank) { continue; }\r\n            if (prod.parent) {\r\n                parentArray = prod.parent.children;\r\n            } else { parentArray = node.procedure; }\r\n\r\n            for (let j = 0; j < parentArray.length; j++ ) {\r\n                if (parentArray[j] === prod) {\r\n                    parentArray.splice(j, 1);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        NodeUtils.deselect_procedure(node);\r\n\r\n        this.notificationMessage = `Cut ${this.dataService.copiedProd.length} Procedures`;\r\n        this.notificationTrigger = !this.notificationTrigger;\r\n    }\r\n\r\n    // paste copied procedures\r\n    pasteProd() {\r\n        const node = this.dataService.node;\r\n        if (this.copyCheck\r\n        && this.dataService.copiedProd\r\n        && document.activeElement.nodeName !== 'INPUT'\r\n        && document.activeElement.nodeName !== 'TEXTAREA') {\r\n            const pastingPlace = node.state.procedure[0];\r\n            const toBePasted = this.dataService.copiedProd;\r\n            if (pastingPlace === undefined) {\r\n                for (let i = 0; i < toBePasted.length; i++) {\r\n                    if (toBePasted[i].type === ProcedureTypes.Blank ||\r\n                        toBePasted[i].type === ProcedureTypes.Return) { continue; }\r\n                    // console.log('pasting', toBePasted[i].ID);\r\n                    NodeUtils.paste_procedure(node, toBePasted[i]);\r\n                    node.state.procedure[0].selected = false;\r\n                    node.state.procedure = [];\r\n                }\r\n            } else {\r\n                for (let i = toBePasted.length - 1; i >= 0; i --) {\r\n                    if (toBePasted[i].type === ProcedureTypes.Blank ||\r\n                        toBePasted[i].type === ProcedureTypes.Return) { continue; }\r\n                    // console.log('pasting', toBePasted[i].ID);\r\n                    NodeUtils.paste_procedure(node, toBePasted[i]);\r\n                    node.state.procedure[0].selected = false;\r\n                    pastingPlace.selected = true;\r\n                    node.state.procedure = [pastingPlace];\r\n                }\r\n            }\r\n            // toBePasted = undefined;\r\n            this.notificationMessage = `Pasted ${toBePasted.length} Procedures`;\r\n            this.notificationTrigger = !this.notificationTrigger;\r\n        }\r\n    }\r\n\r\n    // activate copying/cutting/pasting when the mouse hovers over the procedure list\r\n    activateCopyPaste(): void {\r\n        this.copyCheck = true;\r\n    }\r\n\r\n    // deactivate copying/cutting/pasting when the mouse exit the procedure list\r\n    deactivateCopyPaste(): void {\r\n        this.copyCheck = false;\r\n    }\r\n\r\n    // import a flowchart as function\r\n    importFunction(event) {\r\n        for (const func of event) {\r\n            this.dataService.flowchart.functions.push(func);\r\n        }\r\n    }\r\n\r\n    // delete an imported function\r\n    deleteFunction(event) {\r\n        for (let i = 0; i < this.dataService.flowchart.functions.length; i++) {\r\n            if (this.dataService.flowchart.functions[i] === event) {\r\n                this.dataService.flowchart.functions.splice(i, 1);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    updateHelpView(event) {\r\n        if (typeof(event) === 'string') {\r\n            for (const func of this.dataService.flowchart.functions) {\r\n                if (func.name === event) {\r\n                    this.dataService.helpView = func.doc;\r\n                }\r\n            }\r\n        } else {\r\n            this.dataService.helpView = event;\r\n        }\r\n        this.dataService.toggleHelp(true);\r\n    }\r\n\r\n    setViewOutput() {\r\n        this.dataService.setModelOutputView(this.dataService.node.id, !this.getViewOutput());\r\n        // this.dataService.modelOutputView = !this.dataService.modelOutputView;\r\n    }\r\n\r\n    getViewOutput() {\r\n        return this.dataService.getModelOutputView(this.dataService.node.id);\r\n    }\r\n\r\n    // setTestModel() {\r\n    //     this.dataService.testModel = !this.dataService.testModel;\r\n    //     this.dataService.modelOutputView = this.dataService.testModel;\r\n    // }\r\n\r\n    viewerData(): any {\r\n        const node = this.dataService.flowchart.nodes[this.dataService.flowchart.meta.selected_nodes[0]];\r\n        if (!node) { return ''; }\r\n        // if (node.type === 'output') { return node.input.value; }\r\n        if (this.getViewOutput()) {\r\n            return node.model;\r\n        }\r\n        return node.input.value;\r\n    }\r\n\r\n    setSplit(event) {\r\n        this.dataService.splitUpdate = true;\r\n        this.dataService.splitVal = event.sizes[1];\r\n    }\r\n\r\n    unselectAll(event) {\r\n        if (event.ctrlKey) { return; }\r\n        NodeUtils.deselect_procedure(this.dataService.node);\r\n    }\r\n    getSplit() { return this.dataService.splitVal; }\r\n    getFlowchart() { return this.dataService.flowchart; }\r\n    getNode() { return this.dataService.node; }\r\n\r\n}\r\n","import { NgModule, ModuleWithProviders } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { SharedModule } from '@shared/shared.module';\r\n\r\nimport { ViewEditorComponent } from './view-editor.component';\r\nimport { ProcedureItemComponent } from './procedure-item/procedure-item.component';\r\nimport { ToolsetComponent } from './toolset/toolset.component';\r\nimport { ParameterEditorComponent } from './parameter-editor/parameter-editor.component';\r\nimport { ProcedureInputEditorComponent } from './parameter-editor/procedure-input-editor/procedure-input-editor.component';\r\nimport { _parameterTypes} from '@modules';\r\nimport { ViewEditorRoutingModule } from './view-editor-routing.module';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ViewEditorComponent,\r\n    ProcedureItemComponent,\r\n    ToolsetComponent,\r\n    ParameterEditorComponent,\r\n    ProcedureInputEditorComponent,\r\n  ],\r\n  entryComponents: [\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    SharedModule,\r\n    ViewEditorRoutingModule\r\n  ],\r\n  exports: [\r\n    ViewEditorComponent,\r\n  ],\r\n  providers: []\r\n})\r\n\r\nexport class ViewEditorModule {\r\n  constructor () { }\r\n\r\n}\r\n","module.exports = \"<!--the main line-->\\r\\n<svg:polyline \\r\\nid=\\\"main-edge\\\" \\r\\nclass = \\\"edge\\\" \\r\\n[class.selected] = \\\"edge.selected\\\"\\r\\n[attr.points] = \\\"(edge.source.parentNode.position.x + outputOffset[0]) + ',' +\\r\\n                    (edge.source.parentNode.position.y + outputOffset[1]+ 8) + ' ' +\\r\\n\\r\\n                    (edge.source.parentNode.position.x + outputOffset[0]) + ',' +\\r\\n                    (edge.source.parentNode.position.y + outputOffset[1] + 16) + ' ' +\\r\\n\\r\\n                    (edge.target.parentNode.position.x + inputOffset[0]) + ',' +\\r\\n                    (edge.target.parentNode.position.y + inputOffset[1] - 27) + ' ' +\\r\\n\\r\\n                    (edge.target.parentNode.position.x + inputOffset[0]) + ',' +\\r\\n                    (edge.target.parentNode.position.y + inputOffset[1] - 22)\\\" \\r\\n/>\\r\\n\\r\\n<!--a wider invisible line to make the wire easier to click-->\\r\\n<svg:polyline \\r\\nid=\\\"invisible-edge\\\" \\r\\nclass = \\\"inviEdge\\\" \\r\\n[attr.points] = \\\"(edge.source.parentNode.position.x + outputOffset[0]) + ',' +\\r\\n                    (edge.source.parentNode.position.y + outputOffset[1]+ 15) + ' ' +\\r\\n\\r\\n                    (edge.source.parentNode.position.x + outputOffset[0]) + ',' +\\r\\n                    (edge.source.parentNode.position.y + outputOffset[1] + 17) + ' ' +\\r\\n\\r\\n                    (edge.target.parentNode.position.x + inputOffset[0]) + ',' +\\r\\n                    (edge.target.parentNode.position.y + inputOffset[1] - 27) + ' ' +\\r\\n\\r\\n                    (edge.target.parentNode.position.x + inputOffset[0]) + ',' +\\r\\n                    (edge.target.parentNode.position.y + inputOffset[1] - 12)\\\" \\r\\n(click)='select($event)'/>\\r\\n    \\r\\n\\r\\n\"","module.exports = \".edge {\\n  fill: none;\\n  stroke: #808080;\\n  stroke-linecap: round;\\n  stroke-linejoin: round;\\n  stroke-width: 2px;\\n  opacity: 1;\\n  pointer-events: stroke;\\n  marker-end: url(#arrow); }\\n\\n.inviEdge {\\n  fill: none;\\n  stroke: #999999;\\n  stroke-width: 30px;\\n  opacity: 0;\\n  pointer-events: stroke; }\\n\\n.selected {\\n  stroke: #00006d;\\n  opacity: 1;\\n  marker-end: url(#arrow_selected); }\\n\"","import {Component, OnInit, Input, ViewChild, ElementRef, DoCheck, Output, EventEmitter } from '@angular/core';\r\nimport { IEdge } from '@models/edge';\r\n\r\n@Component({\r\n  selector: '[edge]',\r\n  templateUrl: './edge.component.html',\r\n  styleUrls: ['./edge.component.scss']\r\n})\r\nexport class EdgeComponent {\r\n\r\n    @ViewChild('canvas') canvas: ElementRef;\r\n    @Input() edge: IEdge;\r\n    @Input() inputOffset;\r\n    @Input() outputOffset;\r\n\r\n    @Output() delete = new EventEmitter();\r\n    @Output() selected = new EventEmitter();\r\n\r\n    // select a wire\r\n    select(event) {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n        if (this.edge.selected) {\r\n            this.selected.emit(event.ctrlKey);\r\n        } else {\r\n            if (event.ctrlKey) { this.selected.emit('ctrl'); } else { this.selected.emit('single'); }\r\n        }\r\n    }\r\n\r\n    // delete a wire\r\n    deleteEdge() {\r\n        this.delete.emit();\r\n    }\r\n\r\n}\r\n","export enum ACTIONS {\r\n    SELECT,\r\n    DELETE,\r\n    COPY,\r\n    CONNECT,\r\n    DRAGNODE,\r\n    DROPPORT,\r\n    DRAGPORT,\r\n    PROCEDURE,\r\n}\r\n","module.exports = \"<!-- svg group for the selectable and draggable area of normal node -->\\r\\n<svg:g (click)='nodeSelect($event)' draggable=\\\"true\\\" \\r\\n(mousedown)='startDragNode($event)' \\r\\n(dblclick)='switchToProcedure($event)'\\r\\n*ngIf='node.type==\\\"\\\"'>\\r\\n\\r\\n    <!-- rectangular box with border -->\\r\\n    <rect class=\\\"node\\\" \\r\\n    width=\\\"100\\\" height=\\\"80\\\"\\r\\n    [class.node--selected]='selected'\\r\\n    [class.node--error]=\\\"node.hasError\\\"\\r\\n    [class.node--disabled]='!node.enabled'\\r\\n    [attr.x]=\\\"node.position.x\\\" \\r\\n    [attr.y]=\\\"node.position.y\\\"\\r\\n    />\\r\\n\\r\\n    <!-- node description inside the rectangular box -->\\r\\n    <svg:foreignObject [attr.x]=\\\"node.position.x\\\" [attr.y]=\\\"node.position.y + 3\\\" \\r\\n    width=\\\"100\\\" height = \\\"80\\\"\\r\\n    >\\r\\n        <xhtml:div class='textdiv'>\\r\\n            <xhtml:textarea \\r\\n                id={{node.id}}\\r\\n                autocomplete=off \\r\\n                [(ngModel)]='node.name'\\r\\n                [class.selected]='selected'\\r\\n                [class.disabled]='!node.enabled'\\r\\n                title={{node.name}}\\r\\n                style=\\\"font-weight: 600;\\\"\\r\\n                placeholder='Description of Node'/>  \\r\\n        </xhtml:div>\\r\\n    </svg:foreignObject>\\r\\n</svg:g>\\r\\n\\r\\n<!-- svg group for the selectable and draggable area of start node -->\\r\\n<svg:g (click)='nodeSelect($event)' draggable=\\\"true\\\" \\r\\n(mousedown)='startDragNode($event)' \\r\\n(dblclick)='switchToProcedure($event)'\\r\\n*ngIf='node.type==\\\"start\\\"'>\\r\\n\\r\\n    <!-- ellipse with border\\r\\n    <ellipse class=\\\"node\\\" \\r\\n        [class.node--selected]='selected'\\r\\n        [class.node--error]=\\\"node.hasError\\\"\\r\\n        [attr.cx]=\\\"node.position.x + inputOffset[0]\\\" \\r\\n        [attr.cy]=\\\"node.position.y + (inputOffset[1]+outputOffset[1])/2 + 10\\\"\\r\\n        [attr.rx]=\\\"40\\\"\\r\\n        [attr.ry]=\\\"30\\\"\\r\\n        />\\r\\n     -->\\r\\n\\r\\n    <!-- Triangle with border -->\\r\\n    <path class=\\\"node\\\" \\r\\n        [class.node--selected]='selected'\\r\\n        [class.node--error]=\\\"node.hasError\\\"\\r\\n        [attr.d]=\\\"'M'+node.position.x +' '+ (node.position.y + 30) +\\r\\n                 ' L'+ node.position.x +' '+ (node.position.y + 60) +\\r\\n                 ' L'+ (node.position.x + 50) +' '+ (node.position.y + 80) +\\r\\n                 ' L'+ (node.position.x + 100) +' '+ (node.position.y + 60) +\\r\\n                 ' L'+ (node.position.x + 100) +' '+ (node.position.y + 30) + ' Z'\\\" \\r\\n        />\\r\\n\\r\\n    <!-- circles as inputs of the node -->\\r\\n    <!-- <svg:circle\\r\\n    *ngFor=\\\"let prod of node.procedure; let i=index\\\"\\r\\n    r=3\\r\\n    [attr.cx]=\\\"node.position.x + (100 * (i+1) / (node.procedure.length + 1))\\\" \\r\\n    [attr.cy]=\\\"node.position.y + 22\\\"\\r\\n    class='inputPort'/> -->\\r\\n\\r\\n\\r\\n\\r\\n    <!-- node description inside the ellipse -->\\r\\n    <svg:foreignObject \\r\\n    [attr.x]=\\\"node.position.x\\\" [attr.y]=\\\"node.position.y + 38\\\" \\r\\n    width=\\\"100\\\" height = \\\"40\\\">\\r\\n        <xhtml:div class='textdiv'>\\r\\n            <xhtml:textarea \\r\\n                id={{node.id}}\\r\\n                class='textarea_startend'\\r\\n                autocomplete=off \\r\\n                [class.selected]='selected'\\r\\n                [(ngModel)]='node.name'/>  \\r\\n        </xhtml:div>\\r\\n    </svg:foreignObject>\\r\\n</svg:g>\\r\\n\\r\\n<!-- svg group for the selectable and draggable area of end node -->\\r\\n<svg:g (click)='nodeSelect($event)' draggable=\\\"true\\\" \\r\\n(mousedown)='startDragNode($event)' \\r\\n(dblclick)='switchToProcedure($event)'\\r\\n*ngIf='node.type==\\\"end\\\"'>\\r\\n\\r\\n    <!-- ellipse with border \\r\\n    <ellipse class=\\\"node\\\" \\r\\n        [class.node--selected]='selected'\\r\\n        [class.node--error]=\\\"node.hasError\\\"\\r\\n        [class.node--disabled]='!node.enabled'\\r\\n        [attr.cx]=\\\"node.position.x + inputOffset[0]\\\" \\r\\n        [attr.cy]=\\\"node.position.y + (inputOffset[1]+outputOffset[1])/2 - 10\\\"\\r\\n        [attr.rx]=\\\"40\\\"\\r\\n        [attr.ry]=\\\"30\\\"\\r\\n        />\\r\\n    -->\\r\\n    \\r\\n    <!-- Triangle with border -->\\r\\n    <path class=\\\"node\\\" \\r\\n        [class.node--selected]='selected'\\r\\n        [class.node--error]=\\\"node.hasError\\\"\\r\\n        [attr.d]=\\\"'M'+node.position.x +' '+ (node.position.y + 50) +\\r\\n                 ' L' + node.position.x +' '+ (node.position.y + 20) +\\r\\n                 ' L'+ (node.position.x + 50) +' '+ node.position.y +\\r\\n                 ' L'+ (node.position.x + 100) +' '+ (node.position.y + 20) +\\r\\n                 ' L'+ (node.position.x + 100) +' '+ (node.position.y + 50) + ' Z'\\\" \\r\\n        />\\r\\n\\r\\n    <!-- <svg:circle\\r\\n    *ngIf=\\\"node.procedure.length > 0\\\"\\r\\n    r=3\\r\\n    [attr.cx]=\\\"node.position.x + 50\\\" \\r\\n    [attr.cy]=\\\"node.position.y + 58\\\"\\r\\n    class='inputPort'/> -->\\r\\n    \\r\\n\\r\\n    <!-- node description inside the ellipse -->\\r\\n    <svg:foreignObject [attr.x]=\\\"node.position.x\\\" [attr.y]=\\\"node.position.y + 18\\\" \\r\\n    width=\\\"100\\\" height = \\\"40\\\">\\r\\n        <xhtml:div class='textdiv'>\\r\\n            <xhtml:textarea \\r\\n                id={{node.id}}\\r\\n                class='textarea_startend'\\r\\n                autocomplete=off \\r\\n                [class.selected]='selected'\\r\\n                [class.disabled]='!node.enabled'\\r\\n                [(ngModel)]='node.name'/>  \\r\\n        </xhtml:div>\\r\\n    </svg:foreignObject>\\r\\n</svg:g>\\r\\n\\r\\n\\r\\n\\r\\n<!-- circles as draggable input/output ports of the node -->\\r\\n<svg:circle\\r\\nr=3\\r\\n[attr.cx]=\\\"node.position.x + inputOffset[0]\\\" \\r\\n[attr.cy]=\\\"node.position.y + inputOffset[1]\\\"\\r\\n*ngIf=\\\"inputDraggable()\\\" \\r\\nclass='inputPort'\\r\\nid = 'node.input.id'\\r\\n(mousedown)='startDragPort($event, \\\"input\\\")'/>\\r\\n\\r\\n<svg:circle *ngIf=\\\"outputDraggable()\\\" \\r\\nclass='outputPort'\\r\\nid = 'node.output.id'\\r\\n(mousedown)='startDragPort($event, \\\"output\\\")' \\r\\n[attr.cx]=\\\"node.position.x + outputOffset[0]\\\" \\r\\n[attr.cy]=\\\"node.position.y + outputOffset[1]\\\" \\r\\npointer-events=\\\"all\\\"\\r\\nr=3\\r\\nfill=\\\"black\\\"/>\\r\\n\\r\\n\"","module.exports = \".node {\\n  fill: #fafafa;\\n  stroke-width: 2px;\\n  stroke: #808080;\\n  stroke-opacity: 1;\\n  stroke-linecap: round;\\n  stroke-linejoin: round; }\\n  .node.node--disabled {\\n    stroke-opacity: 0.5;\\n    fill-opacity: 0.5; }\\n  .node.node--selected {\\n    stroke: #00006d; }\\n  .node.node--error {\\n    stroke: red; }\\n  .textdiv {\\n  text-align: center;\\n  width: 94px; }\\n  .foreignObject {\\n  width: 100;\\n  height: 80; }\\n  textarea {\\n  cursor: pointer;\\n  font-family: sans-serif;\\n  background: transparent;\\n  display: inline-block;\\n  border: none;\\n  font-size: 15px;\\n  width: 100%;\\n  height: 70px;\\n  font-weight: 600;\\n  text-align: center;\\n  vertical-align: middle;\\n  resize: none;\\n  overflow: hidden;\\n  color: #808080; }\\n  textarea.selected {\\n    color: #00006d; }\\n  textarea.disabled {\\n    opacity: 0.5; }\\n  .textarea_startend {\\n  font-size: 15px;\\n  font-weight: 600;\\n  color: #808080;\\n  height: 20px;\\n  pointer-events: none; }\\n  .inputPort {\\n  stroke: transparent;\\n  stroke-width: 20px;\\n  pointer-events: all;\\n  fill: #808080; }\\n  .outputPort {\\n  stroke: transparent;\\n  stroke-width: 20px;\\n  pointer-events: all;\\n  fill: #808080; }\\n\"","import { Component, Input, Output, EventEmitter, HostListener } from '@angular/core';\r\nimport { INode } from '@models/node';\r\nimport { ACTIONS } from './node.actions';\r\n\r\n\r\n\r\n@Component({\r\n  selector: '[node]',\r\n  templateUrl: './node.component.html',\r\n  styleUrls: ['./node.component.scss']\r\n})\r\nexport class NodeComponent {\r\n\r\n    @Input() node: INode;\r\n    @Input() selected: boolean;\r\n    @Input() inputOffset; // position offset of the input port as compared to the position of the node in svg\r\n    @Input() outputOffset; // position offset of the output port as compared to the position of the node in svg\r\n\r\n\r\n    @Output() action = new EventEmitter();\r\n    startType: string;\r\n    last = [0, 0];\r\n    isDown = false;\r\n\r\n    /*\r\n    update the position of the node\r\n    */\r\n    updatePosition(position) {\r\n        this.node.position = position;\r\n    }\r\n\r\n    /*\r\n    select a node\r\n    */\r\n    nodeSelect(event) {\r\n        event.stopPropagation();\r\n        this.action.emit({ action: ACTIONS.SELECT, ctrlKey: event.ctrlKey });\r\n    }\r\n\r\n\r\n    /*\r\n    check if the input port of the node is draggable --> false only for start node, true otherwise\r\n    */\r\n    inputDraggable(): boolean {\r\n        return !(this.node.type === 'start');\r\n    }\r\n\r\n    /*\r\n    check if the output port of the node is draggable --> false only for end node, true otherwise\r\n    */\r\n    outputDraggable(): boolean {\r\n        return !(this.node.type === 'end');\r\n    }\r\n\r\n    /*\r\n    initiate dragging node when mousedown inside the node group\r\n    */\r\n    startDragNode(event: MouseEvent) {\r\n        event.stopPropagation();\r\n        // if (document.activeElement.tagName === 'TEXTAREA') { return; }\r\n        event.preventDefault();\r\n        this.action.emit({ action: ACTIONS.DRAGNODE, data: event});\r\n    }\r\n\r\n    /*\r\n    initiate dragging port when mousedown inside the port (inside the invisible stroke of the port)\r\n    */\r\n    startDragPort(event: MouseEvent, portType) {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n        let pos = this.node.position;\r\n        let data: any;\r\n        if (portType === 'input') {\r\n            data = this.node.input;\r\n            pos = [pos.x + this.inputOffset[0], pos.y + this.inputOffset[1]];\r\n        } else {\r\n            data = this.node.output;\r\n            pos = [pos.x + this.outputOffset[0], pos.y + this.outputOffset[1]];\r\n        }\r\n        this.action.emit({ action: ACTIONS.DRAGPORT, data: data, position: pos, type: portType});\r\n    }\r\n\r\n    /*\r\n    focus on the description of the node when mouse down inside the node\r\n    ** no stopPropagation to allow propagation to startDragNode --> node can still be dragged\r\n    */\r\n    focusText(event: MouseEvent) {\r\n        document.getElementById(this.node.id).focus();\r\n    }\r\n\r\n    /*\r\n    switch the viewchild of the appModule to the node's procedure view when double-click on the node\r\n    */\r\n    switchToProcedure(event: Event) {\r\n        event.stopPropagation();\r\n        this.action.emit({action: ACTIONS.PROCEDURE});\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { ViewFlowchartComponent } from './view-flowchart.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: ViewFlowchartComponent,\r\n    children: [\r\n      // {\r\n      //   path: '',\r\n      //   loadChildren: '../../mobius-viewer/mobius-viewer.module#MobiusViewerModule',\r\n      // }\r\n    ]\r\n  }\r\n];\r\n\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class ViewFlowchartRoutingModule { }\r\n","module.exports = \"<div class='container'>\\r\\n    <as-split #flowchartSplit\\r\\n    direction=\\\"horizontal\\\" \\r\\n    (dragStart)='dragSplitStart($event)'\\r\\n    (dragEnd)='dragSplitEnd($event)'>\\r\\n        <as-split-area [size]=\\\"100 - getSplit()\\\">\\r\\n            <panel-header [title]='getFlowchart().name'></panel-header>\\r\\n            <!-- viewchild content -->\\r\\n            <div id = 'flowchart-main-container' class='flowchart-container'>\\r\\n                <!--\\r\\n                -->\\r\\n            \\r\\n                <!-- svg component -->\\r\\n                <!--\\r\\n                (panstart)='panStart($event)'\\r\\n                (panmove)='handleMouseMove($event)'\\r\\n                (panend)='handleMouseUp($event)'\\r\\n                -->\\r\\n                <svg id=\\\"svg-canvas\\\" class = \\\"svgCanvas\\\" \\r\\n                xmlns=\\\"http://www.w3.org/2000/svg\\\"\\r\\n\\r\\n                [attr.viewBox]=\\\"viewbox\\\"\\r\\n                (mouseenter)='activateKeyEvent()'\\r\\n                (mouseleave)='deactivateKeyEvent($event)'\\r\\n                (mousedown)='panStart($event)'\\r\\n                (mousemove)='handleMouseMove($event)'\\r\\n                (mouseup)='handleMouseUp($event)'\\r\\n                (click)='deselectAll($event)'\\r\\n                (wheel)='scale($event)'\\r\\n                (dblclick)='addNode($event)'\\r\\n                >\\r\\n                    <!-- definitions for svg: grid patterns, arrow head for connecting wire-->\\r\\n                    <defs>\\r\\n                        <!-- grid pattern -->\\r\\n                        <!-- <pattern id=\\\"smallGrid\\\" width=\\\"20\\\" height=\\\"20\\\" patternUnits=\\\"userSpaceOnUse\\\">\\r\\n                            <path d=\\\"M 20 0 L 0 0 0 20\\\" fill=\\\"none\\\" stroke=\\\"gray\\\" stroke-width=\\\"0.5\\\"/>\\r\\n                        </pattern>\\r\\n                        <pattern id=\\\"grid\\\" width=\\\"100\\\" height=\\\"100\\\" patternUnits=\\\"userSpaceOnUse\\\">\\r\\n                            <rect width=\\\"100\\\" height=\\\"100\\\" fill=\\\"url(#smallGrid)\\\"/>\\r\\n                            <path d=\\\"M 100 0 L 0 0 0 100\\\" fill=\\\"none\\\" stroke=\\\"gray\\\" stroke-width=\\\"1\\\"/>\\r\\n                        </pattern> -->\\r\\n            \\r\\n                        <!-- arrow head -->\\r\\n                        <marker id=\\\"arrow\\\" markerWidth=\\\"30\\\" markerHeight=\\\"30\\\" refX=\\\"0\\\" refY=\\\"4\\\" orient=\\\"auto\\\" markerUnits=\\\"strokeWidth\\\" viewBox=\\\"0 0 40 40\\\">\\r\\n                            <path d=\\\"M0,0 L0,8 L9,4 z\\\"/>\\r\\n                        </marker>\\r\\n                        <marker id=\\\"arrow_selected\\\" markerWidth=\\\"30\\\" markerHeight=\\\"30\\\" refX=\\\"0\\\" refY=\\\"4\\\" orient=\\\"auto\\\" markerUnits=\\\"strokeWidth\\\" viewBox=\\\"0 0 40 40\\\">\\r\\n                            <path d=\\\"M0,0 L0,8 L9,4 z\\\"/>\\r\\n                        </marker>\\r\\n                    </defs>\\r\\n            \\r\\n                    <!-- svg frame-->\\r\\n                    <rect width=\\\"100%\\\" height=\\\"100%\\\" fill=\\\"url(#grid)\\\" />\\r\\n                                \\r\\n            \\r\\n                    <!-- wires => edge.component -->\\r\\n                    <g edge *ngFor=\\\"let edge of getFlowchart().edges; let edge_index = index\\\" \\r\\n                    [edge]='edge'\\r\\n                    [inputOffset]='inputOffset'\\r\\n                    [outputOffset]='outputOffset'\\r\\n                    (selected)='selectEdge($event, edge_index)'\\r\\n                    />\\r\\n            \\r\\n                    <!-- temporary wire while dragging port, default position to <(0,0),(0,0)>, modified when a port is being dragged -->\\r\\n                    <line id=\\\"temporary-wire\\\" class=\\\"temp-wire\\\" x1=\\\"0\\\" y1='0' x2='0' y2='0'></line>\\r\\n            \\r\\n                    <!-- nodes => node.component -->\\r\\n                    <g node *ngFor=\\\"let node of getFlowchart().nodes; let node_index = index\\\" \\r\\n                    id='flw_node_{{node_index}}'\\r\\n                    [node]='node' \\r\\n                    [selected]='isSelected(node_index)'\\r\\n                    [inputOffset]='inputOffset'\\r\\n                    [outputOffset]='outputOffset'\\r\\n                    (action)='nodeAction($event, node_index)'\\r\\n                    />\\r\\n                </svg>\\r\\n            \\r\\n                <!-- focus on flowchart button on the top right of the svg -->\\r\\n                <button id='zoomToFit' class='btn resetViewer-button' mat-icon-button disableRipple='true' (click)='focusFlowchart()' title=\\\"Zoom to Fit\\\">\\r\\n                    <mat-icon svgIcon=\\\"cZoom\\\"></mat-icon>\\r\\n                </button>\\r\\n                \\r\\n            \\r\\n            </div>\\r\\n                        \\r\\n        </as-split-area>\\r\\n\\r\\n        <as-split-area [size]=\\\"getSplit()\\\">\\r\\n            <!-- data viewers panel -->\\r\\n            <div class='content__viewer' >\\r\\n                <model-viewers-container [data]='viewerData()'></model-viewers-container>\\r\\n            </div>\\r\\n        </as-split-area>\\r\\n        \\r\\n    </as-split>\\r\\n    <notification [message]='notificationMessage' [dummyTrigger]='notificationTrigger'></notification>\\r\\n\\r\\n</div>\\r\\n<spinner></spinner>\\r\\n<chrome></chrome>\\r\\n\\r\\n\"","module.exports = \".flowchart-container {\\n  position: relative;\\n  width: 100%;\\n  height: 100%;\\n  overflow: visible;\\n  background: transparent; }\\n  .flowchart-container .svgCanvas {\\n    -webkit-transform-origin: top left 0px;\\n            transform-origin: top left 0px; }\\n  .flowchart-container .svgCanvas .temp-wire {\\n      stroke: #808080;\\n      stroke-width: 2px;\\n      stroke-dasharray: 10 15;\\n      opacity: 0.5; }\\n  .button-row {\\n  position: absolute;\\n  bottom: 50px;\\n  left: 10px; }\\n  .button-row button {\\n    color: #808080;\\n    background-color: transparent;\\n    border: none;\\n    height: 24px;\\n    width: 24px;\\n    text-align: center;\\n    font-size: 24px;\\n    padding: 0px; }\\n  .resetViewer-button {\\n  cursor: pointer;\\n  z-index: 2;\\n  background-color: transparent;\\n  border: none;\\n  position: absolute;\\n  top: 0px;\\n  right: 0px;\\n  color: #808080;\\n  border: none;\\n  padding: 0px;\\n  background-color: transparent;\\n  width: 40px;\\n  height: 40px; }\\n  #arrow {\\n  stroke: #808080;\\n  fill: transparent; }\\n  #arrow_selected {\\n  stroke: #00006d;\\n  fill: transparent; }\\n\"","import { Component, Input, Output, EventEmitter, OnInit, AfterViewInit, ViewChild } from '@angular/core';\r\n\r\nimport { NodeUtils, INode } from '@models/node';\r\nimport { IEdge } from '@models/edge';\r\n\r\nimport { ACTIONS } from './node/node.actions';\r\nimport * as circularJSON from 'circular-json';\r\nimport { fromEvent } from 'rxjs';\r\nimport { DataService } from '@services';\r\n\r\n// import size of the canvas\r\nimport { canvasSize } from '@models/flowchart';\r\nimport { Router } from '@angular/router';\r\nimport { SplitComponent } from 'angular-split';\r\nimport { LoadUrlComponent } from '@shared/components/file/loadurl.component';\r\n\r\ndeclare const InstallTrigger: any;\r\n\r\n\r\n@Component({\r\n    selector: 'view-flowchart',\r\n    templateUrl: './view-flowchart.component.html',\r\n    styleUrls: ['./view-flowchart.component.scss']\r\n})\r\nexport class ViewFlowchartComponent implements OnInit, AfterViewInit {\r\n\r\n    @Output() switch = new EventEmitter();\r\n    @ViewChild('flowchartSplit') flowchartSplit: SplitComponent;\r\n\r\n    constructor(private dataService: DataService, private router: Router) {\r\n        new LoadUrlComponent(this.dataService, this.router).loadStartUpURL(this.router.url);\r\n    }\r\n\r\n    viewbox = `0 0 ${canvasSize} ${canvasSize}`;\r\n\r\n    // general variable for mouse events\r\n    private isDown: number;\r\n    private starTxyzs = [];\r\n    private canvas: any;\r\n    private element: any;\r\n\r\n    // variable for flowchart zooming\r\n    private mousePos = [0, 0];\r\n    private zoom = 10;\r\n    private minZoom = 5;\r\n    private maxZoom = 25;\r\n    private zoomFactor = 1;\r\n\r\n    // variable for edge\r\n    private edge: IEdge = { source: undefined, target: undefined, selected: false };\r\n    private selectedEdge = [];\r\n    private startType: string;\r\n\r\n    // variable for copied node\r\n    private copied: string;\r\n    private copySub: any;\r\n    private pasteSub: any;\r\n    private keydownSub: any;\r\n    private splitDragSub: any;\r\n\r\n    // listener for events, only activated when the mouse is hovering over the svg component\r\n    private keydownListener = fromEvent(document, 'keydown');\r\n    private copyListener = fromEvent(document, 'copy');\r\n    private pasteListener = fromEvent(document, 'paste');\r\n    private listenerActive = false;\r\n\r\n    notificationMessage = '';\r\n    notificationTrigger = true;\r\n\r\n\r\n    // position of the current canvas view relative to the top left of the page\r\n    private offset: number[];\r\n\r\n    // constants for offset positions of input/output port relative to the node's position\r\n    inputOffset = [50, -8];\r\n    outputOffset = [50, 88];\r\n\r\n\r\n    static enableNode(node: INode) {\r\n        for (const edge of node.input.edges) {\r\n            if (!edge.source.parentNode.enabled) { return; }\r\n        }\r\n        node.enabled = true;\r\n        for (const edge of node.output.edges) {\r\n            ViewFlowchartComponent.enableNode(edge.target.parentNode);\r\n        }\r\n    }\r\n\r\n\r\n    static disableNode(node: INode) {\r\n        node.enabled = false;\r\n        for (const edge of node.output.edges) {\r\n            ViewFlowchartComponent.disableNode(edge.target.parentNode);\r\n        }\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.canvas = <HTMLElement>document.getElementById('svg-canvas');\r\n        // const panZoom = svgPanZoom(this.canvas);\r\n        const bRect = <DOMRect>this.canvas.getBoundingClientRect();\r\n        const boundingDiv = <DOMRect>document.getElementById('flowchart-main-container').getBoundingClientRect();\r\n        this.offset = [bRect.left, bRect.top];\r\n\r\n        /*\r\n        */\r\n        // transform\r\n        if (!this.dataService.flowchartPos) {\r\n            this.dataService.flowchartPos = 'matrix(' + this.zoom + ', 0, 0,' + this.zoom + ', -' +\r\n            boundingDiv.width * this.zoom / 2 + ', -' + boundingDiv.width * this.zoom / 2 + ')';\r\n        } else {\r\n            this.zoom = Number(this.dataService.flowchartPos.split(',')[3]);\r\n        }\r\n\r\n        this.canvas.style.transform = this.dataService.flowchartPos;\r\n\r\n        // copy: copy node\r\n        this.copySub = this.copyListener.subscribe(val => {\r\n            // || document.activeElement.tagName === 'TEXTAREA'\r\n            if (!this.listenerActive) { return; }\r\n            const node = this.dataService.node;\r\n            if (node.type === '') {\r\n                // console.log('copied node:', node);\r\n                const cp = circularJSON.parse(circularJSON.stringify(node));\r\n                this.copied = circularJSON.stringify(cp);\r\n\r\n                this.notificationMessage = `Copied Last Selected Node`;\r\n                this.notificationTrigger = !this.notificationTrigger;\r\n            }\r\n        });\r\n\r\n        // paste: paste copied node\r\n        this.pasteSub = this.pasteListener.subscribe((val: ClipboardEvent) => {\r\n            //\r\n            if (!this.listenerActive || document.activeElement.tagName === 'TEXTAREA') { return; }\r\n            if (this.copied) {\r\n                event.preventDefault();\r\n                const newNode = <INode>circularJSON.parse(this.copied);\r\n                const pt = this.canvas.createSVGPoint();\r\n                pt.x = 20;\r\n                pt.y = 100;\r\n\r\n                const svgP = this.convertCoord(pt);\r\n\r\n                NodeUtils.updateNode(newNode, svgP);\r\n                this.dataService.flowchart.nodes.push(newNode);\r\n                // console.log('pasting node:', newNode);\r\n                this.notificationMessage = `Pasted Node`;\r\n                this.notificationTrigger = !this.notificationTrigger;\r\n\r\n                this.dataService.registerAction({'type': 'add', 'nodes': [newNode]});\r\n            }\r\n        });\r\n\r\n        // delete: delete selected edge(s)\r\n        this.keydownSub = this.keydownListener.subscribe((event: KeyboardEvent) => {\r\n            if (!this.listenerActive) { return; }\r\n            if (event.key === 'Delete') {\r\n                if (this.selectedEdge.length > 0) {\r\n                    this.deleteSelectedEdges();\r\n                } else {\r\n                    if (document.activeElement.id !== this.dataService.node.id) {\r\n                        this.deleteSelectedNodes();\r\n                    }\r\n                }\r\n            } else if (event.key.toLowerCase() === 'z' && event.ctrlKey === true) {\r\n                let act: any;\r\n                if (event.shiftKey) {\r\n                    act = this.dataService.redo();\r\n                } else {\r\n                    act = this.dataService.undo();\r\n                }\r\n                if (!act) { return; }\r\n                if ( (act.type === 'add') !== event.shiftKey ) {\r\n                    if (act.edges) {\r\n                        for (const tbrEdge of act.edges) {\r\n                            for (let i = 0; i < this.dataService.flowchart.edges.length; i++) {\r\n                                if (this.dataService.flowchart.edges[i] === tbrEdge) {\r\n                                    this.deleteEdge(i);\r\n                                    break;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    if (!act.nodes) { return; }\r\n                    for (const tbrNode of act.nodes) {\r\n                        let nodeIndex: number;\r\n                        for (let i = 0; i < this.dataService.flowchart.nodes.length; i++) {\r\n                            const node = this.dataService.flowchart.nodes[i];\r\n                            if (tbrNode.id === node.id) {\r\n                                nodeIndex = i;\r\n                                this.dataService.flowchart.nodes.splice(i, 1);\r\n                                break;\r\n                            }\r\n                        }\r\n                        let tbrSel: number;\r\n                        for (let j = 0; j < this.dataService.flowchart.meta.selected_nodes.length; j++) {\r\n                            if (tbrSel) {\r\n                                this.dataService.flowchart.meta.selected_nodes[j] -= 1;\r\n                            }\r\n                            if (this.dataService.flowchart.meta.selected_nodes[j] === nodeIndex) {\r\n                                tbrSel = nodeIndex;\r\n                            }\r\n                        }\r\n                        this.dataService.flowchart.meta.selected_nodes.splice(tbrSel, 1);\r\n                    }\r\n                } else {\r\n                    if (act.nodes) {\r\n                        for (const tbaNode of act.nodes) {\r\n                            this.dataService.flowchart.nodes.push(tbaNode);\r\n                        }\r\n                    }\r\n                    if (!act.edges) { return; }\r\n                    for (const tbaEdge of act.edges) {\r\n                        this.dataService.flowchart.edges.push(tbaEdge);\r\n                        tbaEdge.target.edges.push(tbaEdge);\r\n                        tbaEdge.source.edges.push(tbaEdge);\r\n                        tbaEdge.selected = false;\r\n                        if (tbaEdge.source.parentNode.enabled) {\r\n                            tbaEdge.target.parentNode.enabled = true;\r\n                        }\r\n                    }\r\n                    while (true) {\r\n                        let check = false;\r\n                        for (const node of this.dataService.flowchart.nodes) {\r\n                            if (node.enabled) { continue; }\r\n                            for (const inp of node.input.edges) {\r\n                                if (inp.source.parentNode.enabled) {\r\n                                    node.enabled = true;\r\n                                    check = true;\r\n                                    break;\r\n                                }\r\n                            }\r\n                        }\r\n                        if (!check) {\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n    }\r\n    convertCoord(pt) {\r\n        const isFirefox = typeof InstallTrigger !== 'undefined';\r\n        if (isFirefox) {\r\n            const ctm = this.canvas.getScreenCTM();\r\n            const bRect = this.canvas.getBoundingClientRect();\r\n            ctm.a = ctm.a * this.zoom;\r\n            ctm.d = ctm.d * this.zoom;\r\n            ctm.e = bRect.x;\r\n            ctm.f = bRect.y;\r\n            return pt.matrixTransform(ctm.inverse());\r\n        } else {\r\n            return pt.matrixTransform(this.canvas.getScreenCTM().inverse());\r\n        }\r\n\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        if (this.dataService.newFlowchart) {\r\n            this.focusFlowchart();\r\n            this.dataService.newFlowchart = false;\r\n        } else if (this.dataService.splitUpdate) {\r\n            this.focusFlowchart();\r\n            this.dataService.splitUpdate = false;\r\n        }\r\n\r\n    }\r\n\r\n    /*\r\n    handle event received from node component\r\n    */\r\n    nodeAction(event, node_index): void {\r\n\r\n        switch (event.action) {\r\n\r\n            // switch the viewchild of the appModule to the node's procedure view when double-click on the node\r\n            case ACTIONS.PROCEDURE:\r\n                this.router.navigate(['/editor']);\r\n                // this.switch.emit('editor');\r\n                this.deactivateKeyEvent();\r\n                break;\r\n\r\n            // select a node\r\n            case ACTIONS.SELECT:\r\n                const selectedNode = this.dataService.flowchart.nodes[node_index];\r\n                if (event.ctrlKey) {\r\n                    document.getElementById('executeButton').focus();\r\n                    const index = this.dataService.flowchart.meta.selected_nodes.indexOf(node_index);\r\n                    if (index === -1) {\r\n                        this.dataService.flowchart.meta.selected_nodes = [node_index].concat(\r\n                            this.dataService.flowchart.meta.selected_nodes);\r\n                    } else {\r\n                        if (this.dataService.flowchart.meta.selected_nodes.length > 1) {\r\n                            this.dataService.flowchart.meta.selected_nodes.splice(index, 1);\r\n                        }\r\n                    }\r\n                } else {\r\n                    if (selectedNode.type === ''\r\n                    && this.dataService.flowchart.meta.selected_nodes.length === 1\r\n                    && this.dataService.flowchart.meta.selected_nodes[0] === node_index) {\r\n                        if (document.activeElement.id !== selectedNode.id) {\r\n                            const textarea = <HTMLTextAreaElement>document.getElementById(selectedNode.id);\r\n                            textarea.focus();\r\n                            textarea.select();\r\n                        }\r\n                    } else {\r\n                        document.getElementById('executeButton').focus();\r\n                    }\r\n                    this.dataService.flowchart.meta.selected_nodes = [ node_index ];\r\n                }\r\n                break;\r\n\r\n            // initiate dragging node\r\n            case ACTIONS.DRAGNODE:\r\n                this.element = this.dataService.flowchart.nodes[node_index];\r\n                const pt = this.canvas.createSVGPoint();\r\n\r\n                // get current mouse position in the page\r\n                pt.x = event.data.pageX;\r\n                pt.y = event.data.pageY;\r\n\r\n                // convert mouse position to svg position (special procedure for firefox)\r\n                const svgP = this.convertCoord(pt);\r\n\r\n                // save the svg position as starTxyzs\r\n                this.starTxyzs = [\r\n                    svgP.x,\r\n                    svgP.y\r\n                ];\r\n                if (this.starTxyzs[0] === NaN) {\r\n                    this.starTxyzs = [0, 0];\r\n                }\r\n                // mark the dragging mode as dragNode\r\n                this.isDown = 2;\r\n                break;\r\n\r\n            // initiate dragging input/output port\r\n            case ACTIONS.DRAGPORT:\r\n                // create a new edge\r\n                this.edge = <IEdge>{source: undefined, target: undefined, selected: false};\r\n\r\n                // assign the port to the edge's input/output accordingly\r\n                if (event.type === 'input') {\r\n                    this.edge.target = event.data;\r\n                } else {\r\n                    this.edge.source = event.data;\r\n                }\r\n                this.startType = event.type;\r\n\r\n                // modify the temporary-edge's coordinate\r\n                this.element = <HTMLElement>document.getElementById('temporary-wire');\r\n                this.element.setAttribute('x1', event.position[0]);\r\n                this.element.setAttribute('y1', event.position[1]);\r\n                this.element.setAttribute('x2', event.position[0]);\r\n                this.element.setAttribute('y2', event.position[1]);\r\n                this.isDown = 3;\r\n                break;\r\n        }\r\n    }\r\n\r\n    // check if the node at node_index is selected\r\n    isSelected(node_index: number): boolean {\r\n        return this.dataService.flowchart.meta.selected_nodes.indexOf(node_index) > -1;\r\n    }\r\n\r\n    // add a new node\r\n    addNode(event?): void {\r\n        // create a new node\r\n        const newNode = NodeUtils.getNewNode();\r\n\r\n        // the new node's position would be (20,100) relative to the current view\r\n        const pt = this.canvas.createSVGPoint();\r\n\r\n        pt.x = event.pageX - 40;\r\n        pt.y = event.pageY - 35;\r\n\r\n\r\n        // convert the position to svg position\r\n        const svgP = this.convertCoord(pt);\r\n\r\n        // assign the position to the new node and add it to the flowchart\r\n        newNode.position.x = svgP.x;\r\n        newNode.position.y = svgP.y;\r\n        this.dataService.flowchart.nodes.splice(this.dataService.flowchart.nodes.length - 1, 0, newNode);\r\n        this.dataService.registerAction({'type': 'add', 'nodes': [newNode]});\r\n    }\r\n\r\n    // activate event listener for copy (ctrl+c), paste (ctrl+v), delete (Delete) when mouse hover over the svg component\r\n    activateKeyEvent(): void {\r\n        this.listenerActive = true;\r\n    }\r\n\r\n    // deactivate the event listeners when the mouse exit the svg component\r\n    deactivateKeyEvent(event?: MouseEvent): void {\r\n        this.listenerActive = false;\r\n        if (this.isDown) {\r\n            this.handleMouseUp(event);\r\n        }\r\n    }\r\n\r\n    // delete selected node\r\n    deleteSelectedNodes() {\r\n\r\n        const deletedNodes = [];\r\n        const deletedEdges = [];\r\n        this.dataService.flowchart.meta.selected_nodes = this.dataService.flowchart.meta.selected_nodes.sort();\r\n        // for each of the selected node\r\n        while (this.dataService.flowchart.meta.selected_nodes.length > 0) {\r\n            const node_index = this.dataService.flowchart.meta.selected_nodes.pop();\r\n            const node = this.dataService.flowchart.nodes[node_index];\r\n            // continue if the node is a start/end node\r\n            if (node.type !== '') { continue; }\r\n\r\n            deletedNodes.push(node);\r\n\r\n            let edge_index = 0;\r\n\r\n            // delete all the edges connected to the node\r\n            while (edge_index < this.dataService.flowchart.edges.length) {\r\n                const tbrEdge = this.dataService.flowchart.edges[edge_index];\r\n\r\n\r\n                if (tbrEdge.target.parentNode === node || tbrEdge.source.parentNode === node) {\r\n                    deletedEdges.push(tbrEdge);\r\n                    this.deleteEdge(edge_index);\r\n                    continue;\r\n                }\r\n                edge_index += 1;\r\n            }\r\n\r\n            // remove the node from the flowchart\r\n            this.dataService.flowchart.nodes.splice(Number(node_index), 1);\r\n        }\r\n        const nodes = this.dataService.flowchart.nodes;\r\n        for ( let i = 0; i < nodes.length; i ++ ) {\r\n            if (nodes[i].type === 'end') {\r\n                this.dataService.flowchart.meta.selected_nodes = [i];\r\n                break;\r\n            }\r\n        }\r\n        this.dataService.registerAction({'type': 'del', 'nodes': deletedNodes, 'edges': deletedEdges});\r\n\r\n\r\n    }\r\n\r\n    // delete an edge with a known index\r\n    deleteEdge(edge_index) {\r\n        const tbrEdge = this.dataService.flowchart.edges[edge_index];\r\n\r\n        // remove the edge from the target node's list of edges\r\n        for (const i in this.dataService.flowchart.edges) {\r\n            if (tbrEdge.target.edges[i] === tbrEdge) {\r\n                tbrEdge.target.edges.splice(Number(i), 1);\r\n                break;\r\n            }\r\n        }\r\n\r\n        // remove the edge from the source node's list of edges\r\n        for (const i in tbrEdge.source.edges) {\r\n            if (tbrEdge.source.edges[i] === tbrEdge) {\r\n                tbrEdge.source.edges.splice(Number(i), 1);\r\n                break;\r\n            }\r\n        }\r\n\r\n        tbrEdge.target.parentNode.enabled = false;\r\n        for (const remainingEdge of tbrEdge.target.edges) {\r\n            if (remainingEdge.source.parentNode.enabled) {\r\n                tbrEdge.target.parentNode.enabled = true;\r\n                break;\r\n            }\r\n        }\r\n        /*\r\n        if (tbrEdge.target.parentNode.input.edges.length === 0 && deletedNode !== tbrEdge.target.parentNode.id) {\r\n            ViewFlowchartComponent.disableNode(tbrEdge.target.parentNode);\r\n        } else {\r\n            ViewFlowchartComponent.enableNode(tbrEdge.target.parentNode);\r\n        }\r\n        */\r\n\r\n        // remove the edge from the general list of edges\r\n        this.dataService.flowchart.edges.splice(edge_index, 1);\r\n        this.dataService.flowchart.ordered = false;\r\n    }\r\n\r\n\r\n    // delete all the selected edges\r\n    deleteSelectedEdges() {\r\n        this.selectedEdge.sort().reverse();\r\n        const deletedEdges = [];\r\n        for (const edge_index of this.selectedEdge) {\r\n            deletedEdges.push(this.dataService.flowchart.edges[edge_index]);\r\n            this.deleteEdge(edge_index);\r\n        }\r\n        this.dataService.registerAction({'type': 'del', 'edges': deletedEdges});\r\n        this.selectedEdge = [];\r\n    }\r\n\r\n    // select an edge\r\n    selectEdge(event, edge_index) {\r\n\r\n        // if ctrl is pressed, add the edge into the list of selected edges\r\n        if (event === 'ctrl') {\r\n            this.selectedEdge.push(edge_index);\r\n            this.dataService.flowchart.edges[edge_index].selected = true;\r\n        } else if (event === 'single' || (event === false && this.selectedEdge.length > 1)) {\r\n            if (this.selectedEdge.length > 0) {\r\n                for (const e of this.selectedEdge) { this.dataService.flowchart.edges[e].selected = false; }\r\n            }\r\n            this.selectedEdge = [edge_index];\r\n            this.dataService.flowchart.edges[edge_index].selected = true;\r\n        } else {\r\n            this.dataService.flowchart.edges[edge_index].selected = false;\r\n            for (let i = 0; i < this.selectedEdge.length; i ++) { if (this.selectedEdge[i] === edge_index) {\r\n                this.selectedEdge.splice(i, 1);\r\n                break;\r\n            }\r\n            }\r\n        }\r\n    }\r\n\r\n    // focus view onto the flowchart\r\n    focusFlowchart(): void {\r\n        // find the frame of the flowchart: frame = [minX, minY, maxX, maxY]\r\n        const frame = [this.dataService.flowchart.nodes[0].position.x, this.dataService.flowchart.nodes[0].position.y,\r\n                                this.dataService.flowchart.nodes[0].position.x, this.dataService.flowchart.nodes[0].position.y];\r\n        for (const node of this.dataService.flowchart.nodes) {\r\n            if (node.position.x < frame[0]) {\r\n                frame[0] = node.position.x;\r\n            } else if (node.position.x > frame[2]) {\r\n                frame[2] = node.position.x;\r\n            }\r\n            if (node.position.y < frame[1]) {\r\n                frame[1] = node.position.y;\r\n            } else if (node.position.y > frame[3]) {\r\n                frame[3] = node.position.y;\r\n            }\r\n        }\r\n        frame[2] += 100;\r\n        frame[3] += 100;\r\n\r\n        // calculate the zoom to fit the whole flowchart\r\n        const bRect = <DOMRect>this.canvas.getBoundingClientRect();\r\n        let zoom = canvasSize  / (frame[2] - frame[0]);\r\n        const heightZoom = canvasSize / (frame[3] - frame[1]);\r\n\r\n        zoom = Math.min(zoom, heightZoom, this.maxZoom);\r\n        zoom = Math.max(zoom, this.minZoom);\r\n\r\n\r\n        const boundingDiv = <DOMRect>document.getElementById('flowchart-main-container').getBoundingClientRect();\r\n        // const ctm = this.zoom * boundingDiv.width / canvasSize;\r\n        const ctm = bRect.width / canvasSize;\r\n\r\n        let nX = (boundingDiv.width  - (frame[2] + frame[0]) * ctm * zoom / this.zoom) / 2;\r\n        let nY = (boundingDiv.height - (frame[3] + frame[1]) * ctm * zoom / this.zoom) / 2;\r\n\r\n        /*\r\n        frame[0] = -( frame[0] * ctm.a * zoom / this.zoom );\r\n        frame[1] = -( frame[1] * ctm.a * zoom / this.zoom );\r\n        */\r\n\r\n        // -( frame[0] * ctm.a * zoom / this.zoom )\r\n\r\n        /*\r\n        // calculate the difference between height and width, if height is bigger than width,\r\n        // centering the flowchart based on the difference\r\n        const height_width_diff = ((frame[3] - frame[1]) - (frame[2] - frame[0])) / 2;\r\n        if (height_width_diff > 0) {\r\n            frame[0] -= height_width_diff;\r\n        }\r\n        */\r\n\r\n        // if the minX or minY goes below 0 (outside of svg frame), change them back to 0\r\n        if (nX > 0) { nX = 0; }\r\n        if (nY > 0) { nY = 0; }\r\n\r\n        // transform\r\n        /*\r\n        this.dataService.flowchartPos = `matrix(${zoom},0,0,${zoom},${\r\n            -frame[0] * ctm.a * zoom / this.zoom},${-frame[1] * ctm.a * zoom / this.zoom})`;\r\n            */\r\n        this.dataService.flowchartPos = `matrix(${zoom},0,0,${zoom},${nX},${nY})`;\r\n        this.canvas.style.transform = this.dataService.flowchartPos;\r\n\r\n        this.zoom = zoom;\r\n    }\r\n\r\n\r\n    // scale view on mouse wheel\r\n    scale(event: WheelEvent): void {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n\r\n        // calculate new zoom value\r\n        let value: number = this.zoom - (Math.sign(event.deltaY)) * this.zoomFactor;\r\n\r\n        // limit the zoom value to be between 1 and 2.5\r\n        if (value >= this.minZoom && value <= this.maxZoom) {\r\n            value = Number( (value).toPrecision(5) );\r\n        } else {\r\n            return;\r\n        }\r\n\r\n\r\n        /*\r\n        // VER 1: translate before and after re-scaling\r\n        this.mousePos = [event.pageX - this.offset[0], event.pageY - this.offset[1]];\r\n\r\n        const bRect = <DOMRect>this.canvas.getBoundingClientRect();\r\n        const beforeX = this.mousePos[0] - bRect.x + this.offset[0];\r\n        const beforeY = this.mousePos[1] - bRect.y + this.offset[1];\r\n\r\n        const afterX = beforeX / value + this.mousePos[0] * (value - this.zoom);\r\n        const afterY = beforeY / value + this.mousePos[1] * (value - this.zoom);\r\n\r\n        // find transformation matrix\r\n        const m = this.canvas.createSVGMatrix()\r\n        .translate(beforeX / this.zoom, beforeY / this.zoom)\r\n        .scale(value)\r\n        .translate(-afterX, -afterY);\r\n\r\n        this.dataService.flowchartPos = 'matrix(' + m.a + ',' + m.b + ',' + m.c + ',' + m.d + ',' + m.e + ',' + m.f + ')';\r\n        */\r\n\r\n        /*\r\n        // VER 2 : transform relative to the top-left of the bounding box of the canvas and adjust based on mouse position\r\n\r\n        this.mousePos = [event.pageX - this.offset[0], event.pageY - this.offset[1]];\r\n\r\n        const bRect = <DOMRect>this.canvas.getBoundingClientRect();\r\n        let newX = (bRect.left - this.offset[0] - this.mousePos[0] * (value - this.zoom)) / this.zoom;\r\n        let newY = (bRect.top - this.offset[1]  - this.mousePos[1] * (value - this.zoom)) / this.zoom;\r\n        const boundingDiv = <DOMRect>document.getElementById('flowchart-main-container').getBoundingClientRect();\r\n\r\n        const m = this.canvas.createSVGMatrix()\r\n        .scale(value)\r\n        .translate(newX, newY);\r\n\r\n        newX = m.e;\r\n        newY = m.f;\r\n\r\n        if (newX > 0) {\r\n            newX = 0;\r\n        } else if (boundingDiv.width - newX > bRect.width * value / this.zoom) {\r\n            newX = boundingDiv.width - bRect.width * value / this.zoom;\r\n        }\r\n        if (newY > 0) {\r\n            newY = 0;\r\n        } else if (boundingDiv.height - newY > bRect.height * value / this.zoom) {\r\n            newY = boundingDiv.height - bRect.height * value / this.zoom;\r\n        }\r\n        if (newY > 0) { newY = 0; }\r\n\r\n\r\n        this.dataService.flowchartPos = 'matrix(' + value + ', 0, 0,' + value + ',' + newX + ',' + newY + ')';\r\n        */\r\n\r\n        /*\r\n        // VER 3: transform relative to the center of the canvas\r\n\r\n        const bRect = <DOMRect>this.canvas.getBoundingClientRect();\r\n        const boundingDiv = <DOMRect>document.getElementById('flowchart-main-container').getBoundingClientRect();\r\n\r\n        let newX = (bRect.left - this.offset[0]) / this.zoom;\r\n        let newY = (bRect.top - this.offset[1] ) / this.zoom;\r\n\r\n\r\n        const m = this.canvas.createSVGMatrix()\r\n        .scale(value)\r\n        .translate(newX, newY);\r\n\r\n        newX = m.e - boundingDiv.width * (value - this.zoom) / (2 * this.zoom);\r\n        newY = m.f - boundingDiv.width * (value - this.zoom) / (2 * this.zoom);\r\n\r\n        if (newX > 0) {\r\n            newX = 0;\r\n        } else if (boundingDiv.width - newX > bRect.width * value / this.zoom) {\r\n            newX = boundingDiv.width - bRect.width * value / this.zoom;\r\n        }\r\n        if (newY > 0) {\r\n            newY = 0;\r\n        } else if (boundingDiv.height - newY > bRect.height * value / this.zoom) {\r\n            newY = boundingDiv.height - bRect.height * value / this.zoom;\r\n        }\r\n        if (newY > 0) { newY = 0; }\r\n        */\r\n\r\n        // VER 4: transform relative to the mouse position\r\n        this.mousePos = [event.pageX - this.offset[0], event.pageY - this.offset[1]];\r\n\r\n        const bRect = <DOMRect>this.canvas.getBoundingClientRect();\r\n        const boundingDiv = <DOMRect>document.getElementById('flowchart-main-container').getBoundingClientRect();\r\n\r\n        let newX = ((bRect.left - this.offset[0]) * value - this.mousePos[0] * (value - this.zoom)) / this.zoom;\r\n        let newY = ((bRect.top  - this.offset[1]) * value - this.mousePos[1] * (value - this.zoom)) / this.zoom;\r\n\r\n        // snapping back the x and y coordinates if the zoom goes out of the bounding box\r\n        if (newX > 0) {\r\n            newX = 0;\r\n        } else if (boundingDiv.width - newX > bRect.width * value / this.zoom) {\r\n            newX = boundingDiv.width - bRect.width * value / this.zoom;\r\n        }\r\n        if (newY > 0) {\r\n            newY = 0;\r\n        } else if (boundingDiv.height - newY > bRect.height * value / this.zoom) {\r\n            newY = boundingDiv.height - bRect.height * value / this.zoom;\r\n        }\r\n        if (newY > 0) { newY = 0; }\r\n\r\n        this.dataService.flowchartPos = 'matrix(' + value + ', 0, 0,' + value + ',' + newX + ',' + newY + ')';\r\n\r\n        // transform\r\n        this.canvas.style.transform = this.dataService.flowchartPos;\r\n\r\n        this.zoom = value;\r\n    }\r\n\r\n\r\n    // initiate dragging the view window\r\n    panStart(event: any) {\r\n        event.preventDefault();\r\n        const bRect = <DOMRect>this.canvas.getBoundingClientRect();\r\n        // set start coords to current view window position\r\n        this.starTxyzs = [\r\n            event.clientX - (bRect.left - this.offset[0]),\r\n            event.clientY - (bRect.top - this.offset[1])\r\n            // event.deltaX - (bRect.left - this.offset[0]),\r\n            // event.deltaY - (bRect.top - this.offset[1])\r\n        ];\r\n        // set drag mode to drag view\r\n        this.isDown = 1;\r\n    }\r\n\r\n    // handle mouse move for dragging view/node/port\r\n    handleMouseMove(event: any) {\r\n        // return if no dragging initiated\r\n        if (!this.isDown) {\r\n            return;\r\n\r\n        // if drag view\r\n        } else if (this.isDown === 1) {\r\n            event.preventDefault();\r\n            const bRect = <DOMRect>this.canvas.getBoundingClientRect();\r\n            let x = Number(event.clientX - this.starTxyzs[0]);\r\n            let y = Number(event.clientY - this.starTxyzs[1]);\r\n            // let x = Number(event.deltaX - this.starTxyzs[0]);\r\n            // let y = Number(event.deltaY - this.starTxyzs[1]);\r\n            const boundingDiv = <DOMRect>document.getElementById('flowchart-main-container').getBoundingClientRect();\r\n            if (x > 0 || bRect.width < boundingDiv.width) {\r\n                x = 0;\r\n            } else if (boundingDiv.width - x > bRect.width) {\r\n                x = boundingDiv.width - bRect.width;\r\n            }\r\n            if (y > 0 || bRect.height < boundingDiv.height) {\r\n                y = 0;\r\n            } else if (boundingDiv.height - y > bRect.height) {\r\n                y = boundingDiv.height - bRect.height;\r\n            }\r\n            this.dataService.flowchartPos = 'matrix(' + this.zoom + ',0,0,' + this.zoom + ',' + x + ',' + y + ')';\r\n            this.canvas.style.transform = this.dataService.flowchartPos;\r\n\r\n\r\n        // if drag node\r\n        } else if (this.isDown === 2) {\r\n\r\n            const pt = this.canvas.createSVGPoint();\r\n\r\n            pt.x = event.pageX;\r\n            pt.y = event.pageY;\r\n\r\n            const svgP = this.convertCoord(pt);\r\n\r\n            const xDiff = this.starTxyzs[0] - svgP.x;\r\n            const yDiff = this.starTxyzs[1] - svgP.y;\r\n            this.starTxyzs[0] = svgP.x;\r\n            this.starTxyzs[1] = svgP.y;\r\n\r\n            this.element.position.x -= xDiff;\r\n            this.element.position.y -= yDiff;\r\n\r\n    // if drag port\r\n    } else if (this.isDown === 3) {\r\n            event.preventDefault();\r\n            const pt = this.canvas.createSVGPoint();\r\n\r\n            pt.x = event.pageX;\r\n            pt.y = event.pageY;\r\n\r\n            const svgP = this.convertCoord(pt);\r\n            this.element.setAttribute('x2', svgP.x);\r\n            this.element.setAttribute('y2', svgP.y);\r\n\r\n\r\n        }\r\n\r\n    }\r\n\r\n    handleMouseUp(event) {\r\n        this.element = undefined;\r\n        if (this.isDown === 3) {\r\n            const pt = this.canvas.createSVGPoint();\r\n\r\n            pt.x = event.pageX;\r\n            pt.y = event.pageY;\r\n            const svgP = this.convertCoord(pt);\r\n\r\n\r\n            // reset temporary edge position to <(0,0),(0,0)>\r\n            const tempLine = <HTMLElement>document.getElementById('temporary-wire');\r\n            tempLine.setAttribute('x1', '0');\r\n            tempLine.setAttribute('y1', '0');\r\n            tempLine.setAttribute('x2', '0');\r\n            tempLine.setAttribute('y2', '0');\r\n\r\n            // go through all of the nodes' input/output ports\r\n            for (const n of this.dataService.flowchart.nodes) {\r\n                let pPos;\r\n\r\n                // find the node's corresponding port and its position\r\n                if (this.startType === 'input') {\r\n                    if (this.edge.target.parentNode === n || n.type === 'end') { continue; }\r\n                    this.edge.source = n.output;\r\n\r\n                    pPos = [n.position.x + this.outputOffset[0], n.position.y + this.outputOffset[1]];\r\n                } else {\r\n                    if (this.edge.source.parentNode === n || n.type === 'start') { continue; }\r\n                    this.edge.target = n.input;\r\n\r\n                    pPos = [n.position.x + this.inputOffset[0], n.position.y + this.inputOffset[1]];\r\n                }\r\n\r\n                // if the distance between the port's position and the dropped position is bigger than 15px, continue\r\n                if (Math.abs(pPos[0] - svgP.x) > this.maxZoom || Math.abs(pPos[1] - svgP.y) > this.maxZoom ) { continue; }\r\n\r\n                // if there is already an existing edge with the same source and target as the new edge, return\r\n                for (const edge of this.dataService.flowchart.edges) {\r\n                    if (edge.target === this.edge.target && edge.source === this.edge.source) {\r\n                        this.isDown = 0;\r\n                        return;\r\n                    }\r\n                }\r\n                this.edge.target.edges.push(this.edge);\r\n                this.edge.source.edges.push(this.edge);\r\n                this.dataService.flowchart.edges.push(this.edge);\r\n                this.dataService.flowchart.ordered = false;\r\n\r\n                if (this.edge.source.parentNode.enabled) {\r\n                    this.edge.target.parentNode.enabled = true;\r\n                }\r\n                /*\r\n                try {\r\n                    if (this.edge.source.parentNode.enabled) {\r\n                        ViewFlowchartComponent.enableNode(this.edge.target.parentNode);\r\n                    } else {\r\n                        ViewFlowchartComponent.disableNode(this.edge.target.parentNode);\r\n                    }\r\n                } catch (ex) {\r\n                    this.edge.target.parentNode.hasError = true;\r\n                    this.edge.source.parentNode.hasError = true;\r\n                }\r\n                */\r\n                break;\r\n            }\r\n            this.dataService.registerAction({'type': 'add', 'edges': [this.edge]});\r\n\r\n        }\r\n        this.isDown = 0;\r\n    }\r\n\r\n    newfile() {\r\n        document.getElementById('newfile').click();\r\n        this.focusFlowchart();\r\n    }\r\n\r\n    viewerData(): any {\r\n        const node = this.dataService.flowchart.nodes[this.dataService.flowchart.meta.selected_nodes[0]];\r\n        if (!node) { return ''; }\r\n        // if (node.type === 'output') { return node.input.value; }\r\n        return node.model;\r\n    }\r\n\r\n    dragSplitStart(e) {\r\n        const currentTransf: any = this.dataService.flowchartPos.split(',');\r\n        currentTransf[5] = currentTransf[5].split(')')[0];\r\n        // this.canvas.style.transition = 'transform 0ms linear';\r\n\r\n        // @ts-ignore\r\n        const dragProcess = this.flowchartSplit.dragProgress$ || this.flowchartSplit.dragProgress;\r\n        const bW = (<DOMRect>this.canvas.getBoundingClientRect()).width;\r\n        this.splitDragSub = dragProcess.subscribe(() => {\r\n            const nBW = (<DOMRect>this.canvas.getBoundingClientRect()).width / bW;\r\n            const nX = currentTransf[4] * nBW;\r\n            const nY = currentTransf[5] * nBW;\r\n            this.dataService.flowchartPos = currentTransf[0] + ', 0, 0,' + currentTransf[3] + ',' + nX + ',' + nY + ')';\r\n            this.canvas.style.transform = this.dataService.flowchartPos;\r\n        });\r\n    }\r\n\r\n    dragSplitEnd(e) {\r\n        this.splitDragSub.unsubscribe();\r\n        // this.canvas.style.transition = 'transform 0ms ease-in';\r\n        this.dataService.splitVal = e.sizes[1];\r\n    }\r\n\r\n    deselectAll(e) {\r\n        if (e.ctrlKey) {return; }\r\n\r\n        document.getElementById('executeButton').focus();\r\n        this.dataService.flowchart.meta.selected_nodes.splice(1, this.dataService.flowchart.meta.selected_nodes.length - 1);\r\n        for (const edgeIndex of this.selectedEdge) {\r\n            this.dataService.flowchart.edges[edgeIndex].selected = false;\r\n        }\r\n        this.selectedEdge = [];\r\n    }\r\n    getSplit() { return this.dataService.splitVal; }\r\n    getFlowchart() { return this.dataService.flowchart; }\r\n\r\n}\r\n\r\n","// import @angular stuff\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n// import app components\r\nimport { ViewFlowchartComponent } from './view-flowchart.component';\r\nimport { NodeComponent } from './node/node.component';\r\nimport { EdgeComponent } from './edge/edge.component';\r\nimport { SharedModule } from '@shared/shared.module';\r\nimport { ViewFlowchartRoutingModule } from './view-flowchart-routing.module';\r\n\r\n/**\r\n * ViewFlowchartModule\r\n */\r\n@NgModule({\r\n  declarations: [\r\n    ViewFlowchartComponent,\r\n    NodeComponent,\r\n    EdgeComponent,\r\n  ],\r\n  exports: [ ViewFlowchartComponent ],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    SharedModule,\r\n    ViewFlowchartRoutingModule\r\n    ],\r\n  entryComponents: [ ],\r\n  providers: [ ]\r\n})\r\nexport class ViewFlowchartModule {\r\n    constructor () { }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n/*\r\n * Shortens a name to a certain length and appends \"...\" infront of it\r\n * Usage:\r\n *   value | length:number\r\n * Example:\r\n *   {{ \"some_very_long_string\" | length:7 }}\r\n *   formats to: some_ve...\r\n*/\r\n@Pipe({name: 'simplename'})\r\nexport class SimpleNamePipe implements PipeTransform {\r\n  transform(value: string): string {\r\n    if (value.endsWith('.mob')) {\r\n        value = value.substr(0, value.length - 4);\r\n    }\r\n    value = value.split('_').join(' ');\r\n    value = value.split('-').join(' ');\r\n    return value;\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { ViewGalleryComponent } from './view-gallery.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: ViewGalleryComponent,\r\n    children: []\r\n  }\r\n];\r\n\r\n\r\n@NgModule({\r\n  imports: [ RouterModule.forChild(routes) ],\r\n  exports: [ RouterModule ]\r\n})\r\nexport class ViewGalleryRoutingModule { }\r\n","module.exports = \"<div class='container'>\\r\\n    <as-split direction=\\\"horizontal\\\" (dragEnd)='setSplit($event)'>\\r\\n        <as-split-area [size]=\\\"100 - getSplit()\\\">\\r\\n            <panel-header [title]='getFlowchart().name'></panel-header>\\r\\n            <!-- viewchild content -->\\r\\n            <div class='content__panel'>\\r\\n                <h3 id = 'gallery-tab' (click)='openGalleryMenu($event)'>{{getActiveGallery().name}}<span>▾</span></h3>\\r\\n                <div id=\\\"galleryMenu\\\">\\r\\n                    <div *ngFor='let galleryName of allGalleries;'>\\r\\n                        <li (click)=\\\"switchGallery(galleryName)\\\">\\r\\n                            {{galleryName}}\\r\\n                        </li>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class = 'content--container'>\\r\\n                    <div class=\\\"container__element container__element--project-container\\\">\\r\\n                        <div class=\\\"project-container__project\\\" *ngFor=\\\"let f of getActiveGallery().files\\\">\\r\\n                            <div class=\\\"tile--contents\\\" (click)='loadFile(getActiveGallery().link + f)'>\\r\\n                                <img src ='{{getActiveGallery().link+\\\"imgs/\\\"+f+\\\".JPG\\\"}}' alt = 'project image'>\\r\\n                            </div>\\r\\n                            <span class = 'project__title'>{{ f | simplename }}</span>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </as-split-area>\\r\\n\\r\\n        <as-split-area [size]=\\\"getSplit()\\\">\\r\\n            <!-- data viewers panel -->\\r\\n            <div class='content__viewer' >\\r\\n                <model-viewers-container [data]='viewerData()'></model-viewers-container>\\r\\n            </div>\\r\\n        </as-split-area>\\r\\n        \\r\\n    </as-split>\\r\\n\\r\\n</div>\\r\\n<spinner></spinner>\\r\\n<chrome></chrome>\\r\\n\"","module.exports = \".content__panel {\\n  margin-top: 40px;\\n  margin-left: 11px;\\n  height: calc(100vh - 40px);\\n  overflow: hidden;\\n  overflow-y: hidden; }\\n\\n.content--container {\\n  display: inline-block;\\n  box-sizing: border-box;\\n  width: 100%;\\n  margin-left: -11px;\\n  height: calc(100vh - 70px);\\n  overflow: hidden;\\n  overflow-y: auto; }\\n\\n.container__element--project-container {\\n  display: flex;\\n  flex-flow: row wrap;\\n  padding: 15px 19px 15px 30px;\\n  font-size: 30px;\\n  line-height: 32px;\\n  font-weight: 300;\\n  width: -webkit-fit-content;\\n  width: -moz-fit-content;\\n  width: fit-content;\\n  box-sizing: border-box; }\\n\\n.project-container__project {\\n  position: relative;\\n  margin: 10px;\\n  width: 200px;\\n  display: flex;\\n  flex-flow: column nowrap; }\\n\\n.project-container__project .tile--contents {\\n    height: 150px;\\n    width: inherit;\\n    box-sizing: border-box;\\n    display: flex;\\n    flex-flow: column nowrap;\\n    justify-content: center;\\n    border: 1px solid #808080;\\n    padding: 1px; }\\n\\n.project-container__project .tile--contents img {\\n      height: 100%;\\n      width: 100%;\\n      transition: 0.4s; }\\n\\n.project-container__project .tile--contents:hover {\\n      border: 2px solid #00006d;\\n      opacity: 1;\\n      padding: 0px; }\\n\\n.project-container__project .project__title {\\n    width: 100%;\\n    font-size: 12px;\\n    line-height: 15px;\\n    overflow: hidden; }\\n\\nh2 {\\n  color: #CCCCCC;\\n  background-color: #999999;\\n  text-align: left;\\n  padding-left: 15px;\\n  font-size: 12px;\\n  line-height: 19px; }\\n\\nh4 {\\n  color: #808080;\\n  text-align: left;\\n  padding-left: 15px;\\n  font-size: 12px;\\n  line-height: 16px; }\\n\\np {\\n  color: #808080;\\n  text-align: left;\\n  padding-left: 15px;\\n  font-size: 12px;\\n  line-height: 14px; }\\n\\nhr {\\n  border-top: 2px solid #E6E6E6;\\n  margin: 0px; }\\n\\nh3 {\\n  cursor: pointer; }\\n\\n#gallery-tab {\\n  line-height: 30px;\\n  height: 30px;\\n  color: #373737; }\\n\\n#galleryMenu {\\n  display: none;\\n  position: absolute;\\n  width: -webkit-fit-content;\\n  width: -moz-fit-content;\\n  width: fit-content;\\n  left: 0px;\\n  transition: display 0.4s;\\n  z-index: 1;\\n  background-color: #fafafb;\\n  border-bottom: 1px solid #808080; }\\n\\n#galleryMenu button {\\n    cursor: pointer;\\n    display: block;\\n    min-width: 100px;\\n    max-width: 200px;\\n    background-color: #fafafb;\\n    border: 0px;\\n    margin: 0px;\\n    padding: 0px;\\n    line-height: 30px;\\n    height: 30px;\\n    font-size: 12px; }\\n\\n#galleryMenu li {\\n    cursor: pointer;\\n    display: block;\\n    min-width: 100px;\\n    max-width: 300px;\\n    overflow: hidden;\\n    line-height: 20px;\\n    background-color: #fafafb;\\n    border: 0px;\\n    margin: 0px;\\n    padding: 0px 10px 0px 10px;\\n    line-height: 30px;\\n    height: 30px;\\n    font-size: 12px;\\n    color: #373737; }\\n\\n#galleryMenu li:hover {\\n      color: #00006d; }\\n\"","import { Component, Output, EventEmitter, OnInit } from '@angular/core';\r\nimport { LoadUrlComponent } from '@shared/components/file/loadurl.component';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Constants } from './view-gallery.config';\r\nimport { Observable } from 'rxjs';\r\nimport { IMobius } from '@models/mobius';\r\n// import {Router} from '@angular/router';\r\n\r\nimport { DataService } from '@services';\r\nimport * as circularJSON from 'circular-json';\r\nimport { Router } from '@angular/router';\r\n\r\nimport * as galleryUrls from '@assets/gallery/__config__.json';\r\n\r\n@Component({\r\n  selector: 'view-gallery',\r\n  templateUrl: './view-gallery.component.html',\r\n  styleUrls: ['./view-gallery.component.scss']\r\n})\r\nexport class ViewGalleryComponent {\r\n\r\n    // private allFiles: Observable<any>;\r\n    private allGalleries = [];\r\n    @Output() switch = new EventEmitter();\r\n\r\n    /*\r\n    constructor(private http: HttpClient, private dataService: DataService, private router: Router) {\r\n        this.allFiles = this.getFilesFromURL();\r\n    }\r\n\r\n    */\r\n\r\n    constructor(private http: HttpClient, private dataService: DataService, private router: Router) {\r\n        this.allGalleries = galleryUrls.data.map(gallery => gallery.name);\r\n        if (!this.dataService.activeGallery || !this.switchGallery(this.dataService.activeGallery.name)) {\r\n            this.dataService.activeGallery = galleryUrls.data[0];\r\n        }\r\n        /*\r\n        if (!this.dataService.galleryFiles) {\r\n            this.dataService.galleryFiles = this.getFilesFromURL();\r\n        }\r\n        */\r\n        new LoadUrlComponent(this.dataService, this.router).loadStartUpURL(this.router.url);\r\n   }\r\n\r\n    getFilesFromURL(): Observable<any> {\r\n        return this.http.get(Constants.GALLERY_URL, {responseType: 'json'});\r\n    }\r\n\r\n    openGalleryMenu(e: MouseEvent) {\r\n        const stl = document.getElementById('galleryMenu').style;\r\n        if (!stl.display || stl.display === 'none') {\r\n            stl.display = 'block';\r\n        } else {\r\n            stl.display = 'none';\r\n        }\r\n        e.stopPropagation();\r\n\r\n    }\r\n\r\n\r\n    switchGallery(galleryName: string): boolean {\r\n        for (const gallery of galleryUrls.data) {\r\n            if (gallery.name === galleryName) {\r\n                this.dataService.activeGallery = gallery;\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    loadFile(fileLink) {\r\n\r\n        new LoadUrlComponent(this.dataService, this.router).loadURL(fileLink + '.mob');\r\n        this.router.navigate(['/dashboard']);\r\n\r\n        // const stream = Observable.create(observer => {\r\n        //     const request = new XMLHttpRequest();\r\n\r\n        //     request.open('GET', fileLink + '.mob');\r\n        //     request.onload = () => {\r\n        //         if (request.status === 200) {\r\n        //             const f = circularJSON.parse(request.responseText);\r\n        //             const file: IMobius = {\r\n        //                 name: f.name,\r\n        //                 author: f.author,\r\n        //                 flowchart: f.flowchart,\r\n        //                 last_updated: f.last_updated,\r\n        //                 version: f.version\r\n        //             };\r\n        //             observer.next(file);\r\n        //             observer.complete();\r\n        //         } else {\r\n        //             observer.error('error happened');\r\n        //         }\r\n        //     };\r\n\r\n        //     request.onerror = () => {\r\n        //     observer.error('error happened');\r\n        //     };\r\n        //     request.send();\r\n        // });\r\n        // stream.subscribe(loadeddata => {\r\n        //     this.dataService.file = loadeddata;\r\n        //     this.dataService.newFlowchart = true;\r\n        //     if (this.dataService.node.type !== 'end') {\r\n        //         for (let i = 0; i < loadeddata.flowchart.nodes.length; i++) {\r\n        //             if (loadeddata.flowchart.nodes[i].type === 'end') {\r\n        //                 loadeddata.flowchart.meta.selected_nodes = [i];\r\n        //                 break;\r\n        //             }\r\n        //         }\r\n        //     }\r\n        //     this.router.navigate(['/dashboard']);\r\n        //     document.getElementById('executeButton').click();\r\n        // });\r\n    }\r\n\r\n    viewerData(): any {\r\n        const node = this.dataService.flowchart.nodes[this.dataService.flowchart.meta.selected_nodes[0]];\r\n        if (!node) { return ''; }\r\n        // if (node.type === 'output') { return node.input.value; }\r\n        return node.model;\r\n    }\r\n\r\n    setSplit(event) {\r\n        this.dataService.splitUpdate = true;\r\n        this.dataService.splitVal = event.sizes[1];\r\n    }\r\n\r\n    getSplit() { return this.dataService.splitVal; }\r\n    getFlowchart() { return this.dataService.flowchart; }\r\n    getActiveGallery() { return this.dataService.activeGallery; }\r\n}\r\n","export class Constants {\r\n    public static get GALLERY_URL(): string {\r\n        return 'https://api.github.com/repos/design-automation/mobius-parametric-modeller/contents/src/assets/gallery?ref=master';\r\n    }\r\n\r\n    public static get FILE_URL(): string {\r\n        return 'https://raw.githubusercontent.com/design-automation/mobius-gallery/master/examples/';\r\n    }\r\n}\r\n","\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { SharedModule } from '@shared/shared.module';\r\n\r\nimport { ViewGalleryRoutingModule } from './view-gallery-routing.module';\r\nimport { ViewGalleryComponent } from './view-gallery.component';\r\nimport { SimpleNamePipe } from './simple-name.pipe';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ViewGalleryComponent,\r\n    SimpleNamePipe\r\n  ],\r\n  exports: [],\r\n  imports: [\r\n    CommonModule,\r\n    ViewGalleryRoutingModule,\r\n    SharedModule\r\n  ],\r\n  entryComponents: [ ],\r\n  providers: [ ]\r\n})\r\nexport class ViewGalleryModule {\r\n    constructor () { }\r\n}\r\n","// The file contents for the current environment will overwrite these during build.\r\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\r\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\r\n// The list of which env maps to which file can be found in `.angular-cli.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n","/**\r\n * Download a file.\r\n * @param data\r\n * @param filename\r\n */\r\nexport function download(data: string, filename: string): boolean {\r\n      const data_type = 'text/plain;charset=utf-8';\r\n      const data_bom = decodeURIComponent('%ef%bb%bf');\r\n      if (window.navigator.msSaveBlob) {\r\n          const blob = new Blob([data_bom + data], { type: data_type } );\r\n          window.navigator.msSaveBlob(blob, data);\r\n      } else {\r\n          const link = document.createElement('a');\r\n          const content = data_bom + data;\r\n          const uriScheme = ['data:', data_type, ','].join('');\r\n          link.href = uriScheme + content;\r\n          link.download = filename;\r\n          // FF requires the link in actual DOM\r\n          document.body.appendChild(link);\r\n          link.click();\r\n          document.body.removeChild(link);\r\n      }\r\n      return true;\r\n}\r\n","import { EQueryOperatorTypes, EAttribDataTypeStrs, TAttribDataTypes, IAttribData } from './common';\r\n\r\n/**\r\n * Geo-info attribute class for one attribute.\r\n * The attributs stores key-value pairs.\r\n * Multiple keys point to the same value.\r\n * So for example, [[1,3], \"a\"],[[0,4], \"b\"] can be converted into sequential arrays.\r\n * The values would be [\"a\", \"b\"]\r\n * The keys would be [1,0,,0,1] (Note the undefined value in the middle.)\r\n *\r\n */\r\nexport class GIAttribMap {\r\n    private _name: string;\r\n    private _data_type: EAttribDataTypeStrs;\r\n    private _data_size: number;\r\n    // that data in this map\r\n    private _num_vals: number; // count of the number of unique values (including any deleted values)\r\n    private _map_val_k_to_val_i: Map<string|number, number>; // unique, no duplicates\r\n    private _map_val_i_to_val: Map<number, TAttribDataTypes>; // unique, no duplicates\r\n    private _map_val_i_to_ents_i: Map<number, number[]>;\r\n    private _map_ent_i_to_val_i: Map<number, number>;\r\n    /**\r\n     * Creates an attribute.\r\n     * @param attrib_data\r\n     */\r\n    constructor(name: string, data_type: EAttribDataTypeStrs, data_size: number) {\r\n        this._name = name;\r\n        this._data_type = data_type;\r\n        this._data_size = data_size;\r\n        // the maps\r\n        this._num_vals = -1;\r\n        this._map_val_k_to_val_i = new Map();\r\n        this._map_val_i_to_val = new Map();\r\n        this._map_val_i_to_ents_i = new Map();\r\n        this._map_ent_i_to_val_i = new Map();\r\n    }\r\n    /**\r\n     * Returns the JSON data for this attribute.\r\n     */\r\n    public getData(): IAttribData {\r\n        const _data: Array<[number[], TAttribDataTypes]> = [];\r\n        this._map_val_i_to_ents_i.forEach((ents_i: number[], val_i: number) => {\r\n            const val: TAttribDataTypes = this._map_val_i_to_val.get(val_i);\r\n            _data.push([ents_i, val]);\r\n        });\r\n        return {\r\n            name: this._name,\r\n            data_type: this._data_type,\r\n            data_size: this._data_size,\r\n            data: _data\r\n        };\r\n    }\r\n    /**\r\n     * Adds ent_ities to this attribute from JSON data.\r\n     * The existing attribute data in the model is not deleted.\r\n     * @param attrib_data The JSON data for the new ent_ities.\r\n     */\r\n    public addData(attrib_data: IAttribData, ent_i_offset: number): void {\r\n        if (this._name !== attrib_data.name ||\r\n            this._data_type !== attrib_data.data_type ||\r\n            this._data_size !== attrib_data.data_size) {\r\n            throw Error('Attributes do not match.');\r\n        }\r\n        // increment all the keys by the number of ent_ities in the existing data\r\n        attrib_data.data.forEach( keys_value => {\r\n            const new_keys: number[] = keys_value[0].map(key => key + ent_i_offset);\r\n            const value: TAttribDataTypes = keys_value[1];\r\n            this.setEntVal(new_keys, value);\r\n        });\r\n\r\n    }\r\n    /**\r\n     * Returns the name of this attribute.\r\n     */\r\n    public getName(): string {\r\n        return this._name;\r\n    }\r\n    /**\r\n     * Returns the data type of this attribute.\r\n     */\r\n    public getDataType(): EAttribDataTypeStrs {\r\n        return this._data_type;\r\n    }\r\n    /**\r\n     * Returns the data size of this attribute.\r\n     */\r\n    public getDataSize(): number {\r\n        return this._data_size;\r\n    }\r\n    /**\r\n     * Returns true if this value exists in the attributes.\r\n     */\r\n    public hasVal(val: TAttribDataTypes): boolean {\r\n        return this._map_val_k_to_val_i.has(this._valToValkey(val));\r\n    }\r\n    /**\r\n     * Returns true if thereis an entity that has a value (i.e. the value is not undefined).\r\n     */\r\n    public hasEnt(ent_i: number): boolean {\r\n        return this._map_ent_i_to_val_i.has(ent_i);\r\n    }\r\n    /**\r\n     * Sets the value for a given entity or entities.\r\n     * @param ent_i\r\n     * @param val\r\n     */\r\n    public setEntVal(ents_i: number|number[], val: TAttribDataTypes): void {\r\n        const val_k: string | number = this._valToValkey(val);\r\n        let val_i: number;\r\n        if (this._map_val_k_to_val_i.has(val_k)) {\r\n            val_i = this._map_val_k_to_val_i.get(val_k);\r\n        } else {\r\n            this._num_vals += 1;\r\n            val_i = this._num_vals;\r\n            this._map_val_i_to_val.set(val_i, val);\r\n            this._map_val_k_to_val_i.set(val_k, val_i);\r\n            this._map_val_i_to_ents_i.set(val_i, []);\r\n        }\r\n        ents_i = (Array.isArray(ents_i)) ? ents_i : [ents_i];\r\n        ents_i.forEach(e => this._map_ent_i_to_val_i.set(e, val_i));\r\n        const ents_i_union: number[] = Array.from(new Set([...this._map_val_i_to_ents_i.get(val_i), ...ents_i]));\r\n        this._map_val_i_to_ents_i.set(val_i, ents_i_union);\r\n    }\r\n    /**\r\n     * Sets the indexed value for a given entity or entities.\r\n     * This assumes that this attribute has a data_size > 1.\r\n     * @param ent_i\r\n     * @param val\r\n     */\r\n    public setEntIdxVal(ent_i: number|number[], val_index: number, val: number|string): void {\r\n        const exist_value_arr: number[]|string[] = this.getEntVal(ent_i) as number[]|string[];\r\n        const new_value_arr: number[]|string[] = exist_value_arr.slice(); // IMPORTANT clone the array\r\n        new_value_arr[val_index] = val;\r\n        this.setEntVal(ent_i, new_value_arr);\r\n    }\r\n    /**\r\n     * Gets the value for a given entity, or an array of values given an array of entities.\r\n     * Returns undefined if the entity does not exist\r\n     * @param ent_i\r\n     */\r\n    public getEntVal(ents_i: number|number[]): TAttribDataTypes|TAttribDataTypes[] {\r\n        if (!Array.isArray(ents_i)) {\r\n            const ent_i: number = ents_i as number;\r\n            const val_i: number = this._map_ent_i_to_val_i.get(ent_i);\r\n            if (val_i === undefined) { return undefined; }\r\n            return this._map_val_i_to_val.get(val_i) as TAttribDataTypes;\r\n        } else {\r\n            return ents_i.map(ent_i => this.getEntVal(ent_i)) as TAttribDataTypes[];\r\n        }\r\n    }\r\n    /**\r\n     * Gets the indexed value for a given entity.\r\n     * Returns undefined if the entity does not exist\r\n     * This assumes that this attribute has a data_size > 1.\r\n     * @param ent_i\r\n     */\r\n    public getEntIdxVal(ents_i: number|number[], val_index: number): number|string|number[]|string[] {\r\n        if (!Array.isArray(ents_i)) {\r\n            const ent_i: number = ents_i as number;\r\n            const exist_value_arr: number[]|string[] = this.getEntVal(ent_i) as number[]|string[];\r\n            return exist_value_arr[val_index] as number|string;\r\n        } else {\r\n            return ents_i.map(ent_i => this.getEntVal(ent_i)) as number[]|string[];\r\n        }\r\n    }\r\n    /**\r\n     * Gets all the keys that have a given value\r\n     * If the value does not exist an empty array is returned\r\n     * @param val\r\n     */\r\n    public getEntsFromVal(val: TAttribDataTypes): number[] {\r\n        const val_i: number = this._map_val_k_to_val_i.get(this._valToValkey(val));\r\n        if (val_i === undefined) { return []; }\r\n        return this._map_val_i_to_ents_i.get(val_i);\r\n    }\r\n    /**\r\n     * Returns an array of entity indicies which do not have a value (undefined)\r\n     */\r\n    public getEntsWithoutVal(ents_i: number[]): number[] {\r\n        return ents_i.filter(ent_i => !this._map_ent_i_to_val_i.has(ent_i));\r\n    }\r\n    /**\r\n     * Returns an array of entity indicies which have a value (not undefined)\r\n     */\r\n    public getEntsWithVal(ents_i: number[]): number[] {\r\n        return ents_i.filter(ent_i => this._map_ent_i_to_val_i.has(ent_i));\r\n    }\r\n    // /**\r\n    //  * Gets an array of values, given an array of entity indicies\r\n    //  */\r\n    // public getEntsVals(ents_i: number[]): TAttribDataTypes[] {\r\n    //     const vals: TAttribDataTypes[] = [];\r\n    //     ents_i.forEach( ent_i => {\r\n    //         const val_i: number = this._map_ent_i_to_val_i.get(ent_i);\r\n    //         if (val_i === undefined) {\r\n    //             vals.push(null);\r\n    //         } else {\r\n    //             const val: TAttribDataTypes = this._map_val_i_to_val.get(val_i);\r\n    //             vals.push(val);\r\n    //         }\r\n    //     });\r\n    //     return vals;\r\n    // }\r\n    /**\r\n     * Executes a query\r\n     * @param ents_i\r\n     * @param val_arr_index The index of the value in the array\r\n     * @param operator The relational operator, ==, !=, <=, >=, etc\r\n     * @param val_k The string version of the value.\r\n     */\r\n    public queryVal(ents_i: number[], val_arr_index: number, operator: EQueryOperatorTypes, val_k: string): number[] {\r\n        // check the val_arr_index\r\n        const indexed = (val_arr_index !== null && val_arr_index !== undefined);\r\n        if (indexed) {\r\n            if (!Number.isInteger(val_arr_index)) {\r\n                throw new Error('Query index \"' + val_arr_index + '\" cannot be converted to an integer: ' + val_arr_index);\r\n            }\r\n            if (!(this._data_size > 0))  { throw new Error('Query attribute ' + this._name + ' is not a list.'); }\r\n        }\r\n        // search\r\n        const re_spaces: RegExp = /\\s+/g;\r\n        if (val_arr_index === null || val_arr_index === undefined) {\r\n            // in these cases we just leave value_str as a string, but we clean it up\r\n            val_k = val_k.replace(re_spaces, '');\r\n            // in this case we can only use == or !=\r\n            if (operator !== EQueryOperatorTypes.IS_EQUAL && operator !== EQueryOperatorTypes.IS_NOT_EQUAL) {\r\n                { throw new Error('Query operator \"' + operator + '\" and query \"' + val_k + '\" value are incompatible.'); }\r\n            }\r\n            if (val_k === 'null' && operator === EQueryOperatorTypes.IS_EQUAL ) {\r\n                return this.getEntsWithoutVal(ents_i);\r\n            } else if (val_k === 'null' && operator === EQueryOperatorTypes.IS_NOT_EQUAL ) {\r\n                return this.getEntsWithVal(ents_i);\r\n            } else if (operator === EQueryOperatorTypes.IS_EQUAL ) {\r\n                const found_keys: number[] = this.getEntsFromVal(val_k);\r\n                if (found_keys === undefined) { return []; }\r\n                return ents_i.filter(ent_i => found_keys.indexOf(ent_i) !== -1);\r\n            } else if (operator === EQueryOperatorTypes.IS_NOT_EQUAL ) {\r\n                const found_keys: number[] = this.getEntsFromVal(val_k);\r\n                if (found_keys === undefined) { return []; }\r\n                return ents_i.filter(ent_i => found_keys.indexOf(ent_i) === -1);\r\n            }\r\n        } else { // value_index is defined, so this query is indexing a value in an array\r\n            if (!(this._data_size > 0)) {\r\n                { throw new Error('Query with [index] can only be used on attributes whose data type is a list.'); }\r\n            }\r\n            if (this._data_type === EAttribDataTypeStrs.FLOAT) {\r\n                // a number from an array of numbers\r\n                let val_num: number;\r\n                // first deal with null case\r\n                if (val_k === 'null') { // TODO change to constant\r\n                    if (operator !== EQueryOperatorTypes.IS_EQUAL && operator !== EQueryOperatorTypes.IS_NOT_EQUAL) {\r\n                        { throw new Error('Query operator ' + operator + ' and query \"null\" value are incompatible.'); }\r\n                    }\r\n                    val_num = null;\r\n                } else { // value_str must be a number\r\n                    val_num = Number.parseFloat(val_k);\r\n                    if (isNaN(val_num)) {\r\n                        throw new Error('Query value \"' + val_k + '\" cannot be converted to a number: ' + val_k);\r\n                    }\r\n                }\r\n                // do the search\r\n                const found_keys: number[] = [];\r\n                for (const ent_i of ents_i) {\r\n                    const search_value_arr: TAttribDataTypes = this.getEntVal(ent_i) as TAttribDataTypes;\r\n                    if ((search_value_arr !== undefined) &&\r\n                       this._compare(operator, search_value_arr[val_arr_index], val_num) ) {\r\n                        found_keys.push(ent_i);\r\n                    }\r\n                }\r\n                return found_keys;\r\n            } else if (this._data_type === EAttribDataTypeStrs.STRING) {\r\n                // a string from a list of strings\r\n                if (operator !== EQueryOperatorTypes.IS_EQUAL && operator !== EQueryOperatorTypes.IS_NOT_EQUAL) {\r\n                    { throw new Error('Query operator and query value are incompatible.'); }\r\n                }\r\n                // clean up the string\r\n                const value_str_clean: string = val_k.replace(re_spaces, '');\r\n                // do the search\r\n                const found_keys: number[] = [];\r\n                for (const ent_i of ents_i) {\r\n                    const search_value_arr: TAttribDataTypes = this.getEntVal(ent_i) as TAttribDataTypes;\r\n                    if ( this._compare(operator, value_str_clean, search_value_arr[val_arr_index]) ) {\r\n                        found_keys.push(ent_i);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    //  ===============================================================================================================\r\n    //  Private methods\r\n    //  ===============================================================================================================\r\n    /**\r\n     * Convert a value into a map key\r\n     */\r\n    private _valToValkey(val: TAttribDataTypes): string|number {\r\n        if (this._data_size === 1 && this._data_type === EAttribDataTypeStrs.STRING) {\r\n            if (typeof val === 'string') {\r\n                return val as string;\r\n            } else {\r\n                return String(val);\r\n            }\r\n        }\r\n        if (this._data_size === 1 && this._data_type === EAttribDataTypeStrs.FLOAT) {\r\n            if (typeof val === 'string') {\r\n                return parseFloat(val);\r\n            } else {\r\n                return val as number;\r\n            }\r\n        }\r\n        return JSON.stringify(val);\r\n    }\r\n    /**\r\n     * Compare two values\r\n     * @param operator\r\n     * @param val1\r\n     * @param val2\r\n     */\r\n    private _compare(operator: EQueryOperatorTypes, val1: any, val2: any): boolean {\r\n        if (val1 === undefined) { val1 = null; }\r\n        if (val2 === undefined) { val2 = null; }\r\n        switch (operator) {\r\n            // ==\r\n            case EQueryOperatorTypes.IS_EQUAL:\r\n                return val1 === val2;\r\n            // !=\r\n            case EQueryOperatorTypes.IS_NOT_EQUAL:\r\n                return val1 !== val2;\r\n            // >\r\n            case EQueryOperatorTypes.IS_GREATER:\r\n                return val1 > val2;\r\n            // >=\r\n            case EQueryOperatorTypes.IS_GREATER_OR_EQUAL:\r\n                return val1 >= val2;\r\n            // <\r\n            case EQueryOperatorTypes.IS_LESS:\r\n                return val1 < val2;\r\n            // <=\r\n            case EQueryOperatorTypes.IS_LESS_OR_EQUAL:\r\n                return val1 <= val2;\r\n            default:\r\n                throw new Error('Query operator not found: ' + operator);\r\n        }\r\n    }\r\n}\r\n","import { GIAttribsAdd } from './GIAttribsAdd';\r\nimport { GIAttribsThreejs } from './GIAttribsThreejs';\r\nimport { GIAttribsQuery } from './GIAttribsQuery';\r\nimport { GIModel } from './GIModel';\r\nimport { EEntType, EAttribNames,  IAttribsData, EAttribDataTypeStrs, IAttribsMaps } from './common';\r\n\r\n/**\r\n * Class for attributes.\r\n */\r\nexport class GIAttribs {\r\n    private _model: GIModel;\r\n    // maps, the key is the name, the value is the attrib map clas\r\n    private _attribs_maps: IAttribsMaps = {\r\n        ps: new Map(),\r\n        _v: new Map(),\r\n        _e: new Map(),\r\n        _w: new Map(),\r\n        _f: new Map(),\r\n        pt: new Map(),\r\n        pl: new Map(),\r\n        pg: new Map(),\r\n        co: new Map()\r\n    };\r\n    // sub classes with methods\r\n    public add: GIAttribsAdd;\r\n    public query: GIAttribsQuery;\r\n    public threejs: GIAttribsThreejs;\r\n   /**\r\n     * Creates an object to store the attribute data.\r\n     * @param model The JSON data\r\n     */\r\n    constructor(model: GIModel) {\r\n        this._model = model;\r\n        this.add = new GIAttribsAdd(model, this._attribs_maps);\r\n        this.query = new GIAttribsQuery(model, this._attribs_maps);\r\n        this.threejs = new GIAttribsThreejs(model, this._attribs_maps);\r\n        this.add.addAttrib(EEntType.POSI, EAttribNames.COORDS, EAttribDataTypeStrs.FLOAT, 3);\r\n    }\r\n    /**\r\n     * Returns the JSON data for this model.\r\n     */\r\n    public getData(): IAttribsData {\r\n        return {\r\n            positions: Array.from(this._attribs_maps.ps.values()).map(attrib => attrib.getData()),\r\n            vertices: Array.from(this._attribs_maps._v.values()).map(attrib => attrib.getData()),\r\n            edges: Array.from(this._attribs_maps._e.values()).map(attrib => attrib.getData()),\r\n            wires: Array.from(this._attribs_maps._w.values()).map(attrib => attrib.getData()),\r\n            faces: Array.from(this._attribs_maps._f.values()).map(attrib => attrib.getData()),\r\n            points: Array.from(this._attribs_maps.pt.values()).map(attrib => attrib.getData()),\r\n            polylines: Array.from(this._attribs_maps.pl.values()).map(attrib => attrib.getData()),\r\n            polygons: Array.from(this._attribs_maps.pg.values()).map(attrib => attrib.getData()),\r\n            collections: Array.from(this._attribs_maps.co.values()).map(attrib => attrib.getData())\r\n        };\r\n    }\r\n}\r\n","import { GIModel } from './GIModel';\r\nimport { IAttribsData, IModelData, IAttribData, TAttribDataTypes, EEntType,\r\n    EAttribDataTypeStrs, IGeomData, IAttribsMaps, EAttribNames, Txyz, EEntTypeStr } from './common';\r\nimport { GIAttribMap } from './GIAttribMap';\r\nimport { vecAdd } from '@libs/geom/vectors';\r\n\r\n/**\r\n * Class for attributes.\r\n */\r\nexport class GIAttribsAdd {\r\n    private _model: GIModel;\r\n    private _attribs_maps: IAttribsMaps;\r\n   /**\r\n     * Creates an object to store the attribute data.\r\n     * @param model The JSON data\r\n     */\r\n    constructor(model: GIModel, attribs_maps: IAttribsMaps) {\r\n        this._model = model;\r\n        this._attribs_maps = attribs_maps;\r\n    }\r\n    /**\r\n     * Adds data to this model from JSON data.\r\n     * The existing data in the model is not deleted.\r\n     * @param model_data The JSON data for the model.\r\n     */\r\n    public addData(model_data: IModelData): void {\r\n        // helper function to ddd attributes to model\r\n        function _addAttribData(\r\n                exist_attribs_maps:  Map<string, GIAttribMap>,\r\n                new_attribs_data: IAttribData[],\r\n                num_existing_entities: number): void {\r\n            // loop through all attributes, adding data\r\n            new_attribs_data.forEach( new_attrib_data => {\r\n                if (!exist_attribs_maps.has(new_attrib_data.name)) {\r\n                    exist_attribs_maps.set(new_attrib_data.name, new GIAttribMap(\r\n                        new_attrib_data.name,\r\n                        new_attrib_data.data_type,\r\n                        new_attrib_data.data_size\r\n                    ));\r\n                }\r\n                exist_attribs_maps.get(new_attrib_data.name).addData(new_attrib_data, num_existing_entities);\r\n            });\r\n        }\r\n        // data for all the new atttributes\r\n        const attribs_data: IAttribsData = model_data.attributes;\r\n        const geom_data: IGeomData = model_data.geometry;\r\n        // add the attribute data\r\n        // exist_attribs_maps, new_attribs_data, num_existing_entities, num_new_entities\r\n        if (attribs_data.positions !== undefined) {\r\n            _addAttribData(this._attribs_maps.ps, attribs_data.positions,\r\n                this._model.geom.query.nextEntIndex(EEntType.POSI));\r\n        }\r\n        if (attribs_data.vertices !== undefined) {\r\n            _addAttribData(this._attribs_maps._v, attribs_data.vertices,\r\n                this._model.geom.query.nextEntIndex(EEntType.VERT));\r\n        }\r\n        if (attribs_data.edges !== undefined) {\r\n            _addAttribData(this._attribs_maps._e, attribs_data.edges,\r\n                this._model.geom.query.nextEntIndex(EEntType.EDGE));\r\n        }\r\n        if (attribs_data.wires !== undefined) {\r\n            _addAttribData(this._attribs_maps._w, attribs_data.wires,\r\n                this._model.geom.query.nextEntIndex(EEntType.WIRE));\r\n        }\r\n        if (attribs_data.faces !== undefined) {\r\n            _addAttribData(this._attribs_maps._f, attribs_data.faces,\r\n                this._model.geom.query.nextEntIndex(EEntType.FACE));\r\n        }\r\n        if (attribs_data.points !== undefined) {\r\n            _addAttribData(this._attribs_maps.pt, attribs_data.points,\r\n                this._model.geom.query.nextEntIndex(EEntType.POINT));\r\n        }\r\n        if (attribs_data.polylines !== undefined) {\r\n            _addAttribData(this._attribs_maps.pl, attribs_data.polylines,\r\n                this._model.geom.query.nextEntIndex(EEntType.PLINE));\r\n        }\r\n        if (attribs_data.polygons !== undefined) {\r\n            _addAttribData(this._attribs_maps.pg, attribs_data.polygons,\r\n                this._model.geom.query.nextEntIndex(EEntType.PGON));\r\n        }\r\n        if (attribs_data.collections !== undefined) {\r\n            _addAttribData(this._attribs_maps.co, attribs_data.collections,\r\n                this._model.geom.query.nextEntIndex(EEntType.COLL));\r\n        }\r\n    }\r\n    /**\r\n     * Creates a new attribte.\r\n     * @param ent_type The level at which to create the attribute.\r\n     * @param name The name of the attribute.\r\n     * @param data_type The data type of the attribute.\r\n     * @param data_size The data size of the attribute. For example, an XYZ vector has size=3.\r\n     */\r\n    public addAttrib(ent_type: EEntType, name: string, data_type: EAttribDataTypeStrs, data_size: number): GIAttribMap {\r\n        const attribs_maps_key: string = EEntTypeStr[ent_type];\r\n        const attribs: Map<string, GIAttribMap> = this._attribs_maps[attribs_maps_key];\r\n        if (!attribs.has(name)) {\r\n            const attrib: GIAttribMap = new GIAttribMap(name, data_type, data_size);\r\n            attribs.set(name, attrib);\r\n        }\r\n        return attribs[name];\r\n    }\r\n    /**\r\n     * Set an entity attrib value\r\n     * If the attribute does not exist, then it is created.\r\n     * @param id\r\n     * @param name\r\n     * @param value\r\n     */\r\n    public setAttribValue(ent_type: EEntType, ents_i: number|number[], name: string, value: TAttribDataTypes): void {\r\n        const attribs_maps_key: string = EEntTypeStr[ent_type];\r\n        const attribs: Map<string, GIAttribMap> = this._attribs_maps[attribs_maps_key];\r\n        if (attribs.get(name) === undefined) {\r\n            const [data_type, data_size]: [EAttribDataTypeStrs, number] = this._checkDataTypeSize(value);\r\n            this.addAttrib(ent_type, name, data_type, data_size);\r\n        }\r\n        attribs.get(name).setEntVal(ents_i, value);\r\n    }\r\n    /**\r\n     * Set an entity attrib indexed value.\r\n     * If the attribute does not exist, it throws an error.\r\n     * @param id\r\n     * @param name\r\n     * @param value\r\n     */\r\n    public setAttribIndexedValue(ent_type: EEntType, ents_i: number|number[], name: string,\r\n            value_index: number, value: number|string): void {\r\n        const attribs_maps_key: string = EEntTypeStr[ent_type];\r\n        const attribs: Map<string, GIAttribMap> = this._attribs_maps[attribs_maps_key];\r\n        const attrib: GIAttribMap = attribs.get(name);\r\n        if (attrib === undefined) { throw new Error('Attribute does not exist.'); }\r\n        if (attrib.getDataSize() === 1) { throw new Error('Attribute is not a list, so indexed values are not allowed.'); }\r\n        if (value_index >= attrib.getDataSize()) { throw new Error('Value index is out of range for attribute list size.'); }\r\n        attrib.setEntIdxVal(ents_i, value_index, value);\r\n    }\r\n    /**\r\n     * Set the xyz position by index\r\n     * @param index\r\n     * @param value\r\n     */\r\n    public setPosiCoords(index: number, xyz: Txyz): void {\r\n        this._attribs_maps.ps.get(EAttribNames.COORDS).setEntVal(index, xyz);\r\n    }\r\n    /**\r\n     * Move the xyz position by index\r\n     * @param index\r\n     * @param value\r\n     */\r\n    public movePosiCoords(index: number, xyz: Txyz): void {\r\n        const old_xyz: Txyz = this._attribs_maps.ps.get(EAttribNames.COORDS).getEntVal(index) as Txyz;\r\n        const new_xyz: Txyz = vecAdd(old_xyz, xyz);\r\n        this._attribs_maps.ps.get(EAttribNames.COORDS).setEntVal(index, new_xyz);\r\n    }\r\n    /**\r\n     * Copy attribs from one entity to another entity\r\n     * @param ent_type\r\n     * @param name\r\n     */\r\n    public copyAttribs(ent_type: EEntType, from_ent_i: number, to_ent_i: number): void {\r\n        // get the attrib names\r\n        const attribs_maps_key: string = EEntTypeStr[ent_type];\r\n        const attribs: Map<string, GIAttribMap> = this._attribs_maps[attribs_maps_key];\r\n        const attrib_names: string[] = Array.from(attribs.keys());\r\n        // copy each attrib\r\n        for (const attrib_name of attrib_names) {\r\n            const attrib: GIAttribMap = attribs.get(name);\r\n            const attrib_value: TAttribDataTypes =  attrib.getEntVal(from_ent_i) as TAttribDataTypes;\r\n            attrib.setEntVal(to_ent_i, attrib_value);\r\n        }\r\n    }\r\n    // ============================================================================\r\n    // Private methods\r\n    // ============================================================================\r\n    /**\r\n     * Utility method to check the data type and size of a value\r\n     * @param value\r\n     */\r\n    private _checkDataTypeSize(value: TAttribDataTypes): [EAttribDataTypeStrs, number] {\r\n        let data_size: number;\r\n        let first_value = null;\r\n        if (Array.isArray(value)) {\r\n            const values = value as number[] | string[];\r\n            if (values.length === 1) {\r\n                throw new Error('An array data type must have more than one value.');\r\n            }\r\n            first_value = values[0];\r\n            data_size = values.length;\r\n        } else {\r\n            first_value = value;\r\n            data_size = 1;\r\n        }\r\n        let data_type: EAttribDataTypeStrs = null;\r\n        if (typeof first_value === 'number') {\r\n            data_type = EAttribDataTypeStrs.FLOAT;\r\n        } else if (typeof first_value === 'string') {\r\n            data_type = EAttribDataTypeStrs.STRING;\r\n        } else {\r\n            throw new Error('Data type for new attribute not recognised.');\r\n        }\r\n        return [data_type, data_size];\r\n    }\r\n}\r\n","import { GIModel } from './GIModel';\r\nimport { TAttribDataTypes, IAttribsMaps, IQueryComponent,\r\n    Txyz, EAttribNames, EEntType, EQueryOperatorTypes, ISortComponent, ESort, EAttribDataTypeStrs, EEntTypeStr } from './common';\r\nimport { GIAttribMap } from './GIAttribMap';\r\n\r\n/**\r\n * Class for attributes.\r\n */\r\nexport class GIAttribsQuery {\r\n    private _model: GIModel;\r\n    private _attribs_maps: IAttribsMaps;\r\n   /**\r\n     * Creates an object to store the attribute data.\r\n     * @param model The JSON data\r\n     */\r\n    constructor(model: GIModel, attribs_maps: IAttribsMaps) {\r\n        this._model = model;\r\n        this._attribs_maps = attribs_maps;\r\n    }\r\n    /**\r\n     * Get an entity attrib value\r\n     * @param ent_type\r\n     * @param name\r\n     */\r\n    public getAttribValue(ent_type: EEntType, name: string, ents_i: number|number[]): TAttribDataTypes|TAttribDataTypes[] {\r\n        const attribs_maps_key: string = EEntTypeStr[ent_type];\r\n        const attribs: Map<string, GIAttribMap> = this._attribs_maps[attribs_maps_key];\r\n        if (attribs.get(name) === undefined) { throw new Error('Attribute does not exist.'); }\r\n        return attribs.get(name).getEntVal(ents_i);\r\n    }\r\n    /**\r\n     * Get an entity attrib indexed value\r\n     * @param ent_type\r\n     * @param name\r\n     */\r\n    public getAttribIndexedValue(ent_type: EEntType, name: string, ents_i: number, value_index: number): number|string|number[]|string[] {\r\n        const attribs_maps_key: string = EEntTypeStr[ent_type];\r\n        const attribs: Map<string, GIAttribMap> = this._attribs_maps[attribs_maps_key];\r\n        const attrib: GIAttribMap = attribs.get(name);\r\n        if (attrib === undefined) { throw new Error('Attribute does not exist.'); }\r\n        if (attrib.getDataSize() === 1) { throw new Error('Attribute is not a list, so indexed values are not allowed.'); }\r\n        if (value_index >= attrib.getDataSize()) { throw new Error('Value index is out of range for attribute list size.'); }\r\n        return attrib.getEntIdxVal(ents_i, value_index) as number|string;\r\n    }\r\n    /**\r\n     * Check if attribute exists\r\n     * @param ent_type\r\n     * @param name\r\n     */\r\n    public hasAttrib(ent_type: EEntType, name: string): boolean {\r\n        const attribs_maps_key: string = EEntTypeStr[ent_type];\r\n        const attribs: Map<string, GIAttribMap> = this._attribs_maps[attribs_maps_key];\r\n        return attribs.has(name);\r\n    }\r\n    /**\r\n     * Get all the attribute names for an entity type\r\n     * @param ent_type\r\n     */\r\n    public getAttribNames(ent_type: EEntType): string[] {\r\n        const attribs_maps_key: string = EEntTypeStr[ent_type];\r\n        const attribs: Map<string, GIAttribMap> = this._attribs_maps[attribs_maps_key];\r\n        return Array.from(attribs.keys());\r\n    }\r\n    /**\r\n     * Get attrib\r\n     * @param ent_type\r\n     * @param name\r\n     */\r\n    public getAttrib(ent_type: EEntType, name: string): GIAttribMap {\r\n        const attribs_maps_key: string = EEntTypeStr[ent_type];\r\n        const attribs: Map<string, GIAttribMap> = this._attribs_maps[attribs_maps_key];\r\n        return attribs.get(name);\r\n    }\r\n    /**\r\n     * Query the model using a query strings.\r\n     * Returns a list of entities in the model.\r\n     * @param ent_type The type of the entities being search for\r\n     * @param query_str The query string, e.g. '#@name == value'\r\n     * @param indicies The indicies of entites in the model. These are assumed to be of type ent_type.\r\n     */\r\n    public queryAttribs(ent_type: EEntType, query_str: string, indicies: number[]): number[] {\r\n        // get the map that contains all the ettributes for the ent_type\r\n        const attribs_maps_key: string = EEntTypeStr[ent_type];\r\n        const attribs: Map<string, GIAttribMap> = this._attribs_maps[attribs_maps_key];\r\n        // parse the query\r\n        const queries: IQueryComponent[][] = parseQuery(query_str);\r\n        if (!queries) { return []; }\r\n        // do the query, one by one\r\n        // [[query1 && query2] || [query3 && query4]]\r\n        let union_query_results: number[] = [];\r\n        for (const and_queries of queries)  {\r\n            // get the ents_i to start the '&&' query\r\n            let query_ents_i: number[] = null;\r\n            if (indicies !== null && indicies !== undefined) {\r\n                query_ents_i = indicies;\r\n            } else {\r\n                query_ents_i = this._model.geom.query.getEnts(ent_type);\r\n            }\r\n            // do the '&&' queries\r\n            for (const and_query of and_queries) {\r\n                if (attribs && attribs.has(and_query.attrib_name)) {\r\n                    const attrib: GIAttribMap = attribs.get(and_query.attrib_name);\r\n                    query_ents_i = attrib.queryVal(\r\n                        query_ents_i,\r\n                        and_query.attrib_index,\r\n                        and_query.operator_type,\r\n                        and_query.attrib_value_str\r\n                    );\r\n                }\r\n            }\r\n            // combine the results of the '&&' queries\r\n            if (query_ents_i !== null && query_ents_i.length > 0) {\r\n                union_query_results = Array.from(new Set([...union_query_results, ...query_ents_i]));\r\n            }\r\n        }\r\n        // return the result\r\n        return union_query_results;\r\n    }\r\n    /**\r\n     * Query the model using a sort strings.\r\n     * Returns a list of entities in the model.\r\n     * @param ent_type The type of the entities being search for\r\n     * @param sort_str The sort string, e.g. '#@name && #@name2[3]'\r\n     * @param indicies The indicies of entites in the model. These are assumed to be of type ent_type.\r\n     */\r\n    public sortByAttribs(ent_type: EEntType, indicies: number[], sort_str: string, method: ESort): number[] {\r\n        // get the map that contains all the ettributes for the ent_type\r\n        const attribs_maps_key: string = EEntTypeStr[ent_type];\r\n        const attribs: Map<string, GIAttribMap> = this._attribs_maps[attribs_maps_key];\r\n        if (!attribs)  { throw new Error('Bad sort: Attribute does not exist.'); }\r\n        // parse the query\r\n        const sorts: ISortComponent[] = parseSort(sort_str);\r\n        if (!sorts) { return []; }\r\n        // create the sort copmapre function\r\n        function _sortCompare(ent1_i: number, ent2_i: number): number {\r\n            // do the '&&' sorts\r\n            for (const sort of sorts) {\r\n                if (!attribs.has(sort.attrib_name)) {\r\n                    throw new Error('Bad sort: Attribute does not exist.');\r\n                }\r\n                const attrib: GIAttribMap = attribs.get(sort.attrib_name);\r\n                const data_size: number = attrib.getDataSize();\r\n                if (sort.attrib_index !== undefined && data_size === 1) {\r\n                    throw new Error('Bad sort: Attribute with index must have a size greater than 1.');\r\n                }\r\n                let val1: TAttribDataTypes = attrib.getEntVal(ent1_i) as TAttribDataTypes;\r\n                let val2: TAttribDataTypes = attrib.getEntVal(ent2_i) as TAttribDataTypes;\r\n                if (sort.attrib_index !== undefined && sort.attrib_index !== null) {\r\n                    if (val1 !== undefined && val1 !== null) {\r\n                        val1 = val1[sort.attrib_index];\r\n                    }\r\n                    if (val2 !== undefined && val2 !== null) {\r\n                        val2 = val2[sort.attrib_index];\r\n                    }\r\n                }\r\n                if (method === ESort.DESCENDING) {\r\n                    if (val1 < val2) { return -1; }\r\n                    if (val1 > val2) { return 1; }\r\n                } else {\r\n                    if (val1 < val2) { return 1; }\r\n                    if (val1 > val2) { return -1; }\r\n                }\r\n            }\r\n            return 0;\r\n        }\r\n        // do the sort\r\n        indicies.sort(_sortCompare);\r\n        return indicies;\r\n    }\r\n    // ============================================================================\r\n    // Shortcuts for getting xyz\r\n    // ============================================================================\r\n    /**\r\n     * Shortcut for getting a coordinate from a numeric position index (i.e. this is not an ID)\r\n     * @param posi_i\r\n     */\r\n    public getPosiCoords(posi_i: number): Txyz {\r\n        const result = this._attribs_maps.ps.get(EAttribNames.COORDS).getEntVal(posi_i) as Txyz;\r\n        return result;\r\n    }\r\n    /**\r\n     * Shortcut for getting all coordinates\r\n     * @param posi_i\r\n     */\r\n    public getAllPosisCoords(): Txyz[] {\r\n        const posis_i: number[] = this._model.geom.query.getEnts(EEntType.POSI);\r\n        const coords_map: GIAttribMap = this._attribs_maps.ps.get(EAttribNames.COORDS);\r\n        return coords_map.getEntVal(posis_i) as Txyz[];\r\n    }\r\n    /**\r\n     * Shortcut for getting a coordinate from a numeric vertex index (i.e. this is not an ID)\r\n     * @param vert_i\r\n     */\r\n    public getVertCoords(vert_i: number): Txyz {\r\n        const posi_i: number = this._model.geom.query.navVertToPosi(vert_i);\r\n        return this._attribs_maps.ps.get(EAttribNames.COORDS).getEntVal(posi_i) as Txyz;\r\n    }\r\n    /**\r\n     * Shortcut for getting coords for all verts\r\n     * @param attrib_name\r\n     */\r\n    public getAllVertsCoords(attrib_name: string): Txyz[] {\r\n        const verts_i: number[] = this._model.geom.query.getEnts(EEntType.VERT);\r\n        const posis_i: number[] = verts_i.map( vert_i => this._model.geom.query.navVertToPosi(vert_i));\r\n        const coords_map: GIAttribMap = this._attribs_maps.ps.get(EAttribNames.COORDS);\r\n        return coords_map.getEntVal(posis_i) as Txyz[];\r\n    }\r\n}\r\n// ================================================================================================\r\n// Functions for parsing queries\r\n// ================================================================================================\r\n/**\r\n * Parse a query string.\r\n * && takes precedence over ||\r\n * [ [ query1 && query2 ] || [ query3 && query4 ] ]\r\n */\r\nfunction parseQuery(query_str: string): IQueryComponent[][] {\r\n    if (!query_str.startsWith('#')) {throw new Error('Bad query, query string must start with #.'); }\r\n    const query_str_clean: string = query_str.replace(/\\s/g, '');\r\n    const or_query_strs: string[] = query_str_clean.split('||');\r\n    const query_list: IQueryComponent[][] = [];\r\n    or_query_strs.forEach(or_query_str => {\r\n        const and_query_strs: string[] = or_query_str.split('&&');\r\n        query_list.push(and_query_strs.map( and_query_str => _parse_query_component(and_query_str) ) );\r\n    });\r\n    return query_list;\r\n}\r\n\r\n/**\r\n * Parse a query component string.\r\n */\r\nfunction _parse_query_component(query_component: string): IQueryComponent {\r\n    let attrib_name_str = '' ;\r\n    let attrib_value_str = '' ;\r\n    let operator_type: EQueryOperatorTypes = null;\r\n    // split the query at the @ sign\r\n    const [_, attrib_name_value_str]: string[] = query_component.split('@');\r\n    if (!attrib_name_value_str) { throw new Error('Bad query.'); }\r\n    // split the attrib_name_value_str based on operator, ==, !=, etc...\r\n    for (const key of Object.keys(EQueryOperatorTypes)) {\r\n        const split_query = attrib_name_value_str.split(EQueryOperatorTypes[key]);\r\n        if (split_query.length === 2) {\r\n            attrib_name_str =  split_query[0];\r\n            attrib_value_str = split_query[1];\r\n            operator_type = EQueryOperatorTypes[key];\r\n            break;\r\n        }\r\n    }\r\n    // check\r\n    if (!attrib_name_str) {throw new Error('Bad attribute name in query.'); }\r\n    if (!attrib_value_str) {throw new Error('Bad attribute value in query.'); }\r\n    if (!operator_type) {throw new Error('Bad operator in query.'); }\r\n    // parse the name\r\n    const attrib_name_index = _parse_name_str(attrib_name_str);\r\n    const attrib_name  = attrib_name_index[0];\r\n    const attrib_index  = attrib_name_index[1];\r\n    // parse the value\r\n    attrib_value_str = _parse_value_str(attrib_value_str);\r\n    // return the data for the query component as an object\r\n    return {\r\n        attrib_name: attrib_name,\r\n        attrib_index: attrib_index,\r\n        attrib_value_str: attrib_value_str,\r\n        operator_type: operator_type\r\n    };\r\n}\r\n/**\r\n * Parse a sort string. #@name1 && #@name2\r\n * Rerurns an array,[ query1, query2 ]\r\n */\r\nfunction parseSort(sort_str: string): ISortComponent[] {\r\n    if (!sort_str.startsWith('#')) { throw new Error('Bad sort, sort string must start with #.'); }\r\n    if (sort_str.indexOf('||') !== -1) { throw new Error('Bad sort, sort string cannot contain || conditions.'); }\r\n    const sort_str_clean: string = sort_str.replace(/\\s/g, '');\r\n    const component_strs: string[] = sort_str_clean.split('&&');\r\n    const sort_list: ISortComponent[] = [];\r\n    component_strs.forEach(component_str => {\r\n        sort_list.push(_parse_sort_component(component_str));\r\n    });\r\n    return sort_list;\r\n}\r\n\r\n/**\r\n * Parse a query component string.\r\n */\r\nfunction _parse_sort_component(sort_component: string): ISortComponent {\r\n    // split the query at the @ sign\r\n    const [_, attrib_name_str]: string[] = sort_component.split('@');\r\n    // check\r\n    if (!attrib_name_str) {throw new Error('Bad attribute name in query.'); }\r\n    // parse the name\r\n    const attrib_name_index = _parse_name_str(attrib_name_str);\r\n    const attrib_name  = attrib_name_index[0];\r\n    const attrib_index  = attrib_name_index[1];\r\n    // return the data for the query component as an object\r\n    return {\r\n        attrib_name: attrib_name,\r\n        attrib_index: attrib_index\r\n    };\r\n}\r\n\r\n/**\r\n * Parse the attribute value. Handles sting with quotes, e.g. 'this' and \"that\".\r\n * Remove quotes from value string\r\n */\r\nfunction _parse_value_str(value_str: string): string {\r\n    const first_char: string = value_str.slice(0, 1);\r\n    if (first_char ===  '\\'' || first_char === '\"') {return value_str.slice(1, -1); }\r\n    return value_str;\r\n}\r\n/**\r\n * Parese the attribute name. Handles names with indexes, e.g. 'name[2]'\r\n * Split the name into the string name and the numeric index\r\n */\r\nfunction _parse_name_str(value_str: string): [string, number?] {\r\n    const last_char: string = value_str.slice(-1);\r\n    if (last_char === ']') {\r\n        const [name_str, index_str]: [string, string] = value_str.slice(0, -1).split('[') as [string, string];\r\n        const index: number = Number(index_str);\r\n        if (isNaN(index)) {throw new Error('Bad query'); }\r\n        return [name_str, index];\r\n    }\r\n    return [value_str, null];\r\n}\r\n","import { GIModel } from './GIModel';\r\nimport { TAttribDataTypes, EEntType, IAttribsMaps, EAttribNames, EEntTypeStr } from './common';\r\nimport { GIAttribMap } from './GIAttribMap';\r\n\r\n/**\r\n * Class for attributes.\r\n */\r\nexport class GIAttribsThreejs {\r\n    private _model: GIModel;\r\n    private _attribs_maps: IAttribsMaps;\r\n   /**\r\n     * Creates an object to store the attribute data.\r\n     * @param model The JSON data\r\n     */\r\n    constructor(model: GIModel, attribs_maps: IAttribsMaps) {\r\n        this._model = model;\r\n        this._attribs_maps = attribs_maps;\r\n    }\r\n    // ============================================================================\r\n    // Threejs\r\n    // For methods to get the array of edges and triangles, see the geom class\r\n    // get3jsTris() and get3jsEdges()\r\n    // ============================================================================\r\n    /**\r\n     * Get a flat array of all the coordinates of all the vertices.\r\n     * Verts that have been deleted will not be included\r\n     * @param verts An array of vertex indicies pointing to the positio.\r\n     */\r\n    public get3jsSeqVertsCoords(): number[] {\r\n        const verts_i: number[] = this._model.geom.query.getEnts(EEntType.VERT);\r\n        const posis_i: number[] = verts_i.map(vert_i => this._model.geom.query.navVertToPosi(vert_i));\r\n        const coords_attrib: GIAttribMap = this._attribs_maps.ps.get(EAttribNames.COORDS);\r\n\r\n        // @ts-ignore\r\n        return coords_attrib.getEntVal(posis_i).flat(1);\r\n        // return [].concat(...coords_attrib.getEntsVals(posis_i));\r\n    }\r\n    /**\r\n     * Get a flat array of attribute values for all the vertices.\r\n     * Verts that have been deleted will not be included\r\n     * @param attrib_name The name of the vertex attribute. Either NORMAL or COLOR.\r\n     */\r\n    public get3jsSeqVertsAttrib(attrib_name: string): number[] {\r\n        if (!this._attribs_maps._v.has(attrib_name)) { return null; }\r\n        const verts_i: number[] = this._model.geom.query.getEnts(EEntType.VERT);\r\n        const verts_attrib: GIAttribMap = this._attribs_maps._v.get(attrib_name);\r\n\r\n        // @ts-ignore\r\n        return verts_attrib.getEntVal(verts_i).flat(1);\r\n        // return [].concat(...verts_attrib.getEntsVals(verts_i));\r\n    }\r\n    /**\r\n     *\r\n     * @param ent_type\r\n     */\r\n    public getAttribsForTable(ent_type: EEntType): any[] {\r\n        // get the attribs map for this ent type\r\n        const attribs_maps_key: string = EEntTypeStr[ent_type];\r\n        const attribs: Map<string, GIAttribMap> = this._attribs_maps[attribs_maps_key];\r\n        // create a map of objects to store the data\r\n        const data_obj_map: Map< number, { id: string} > = new Map();\r\n        // create the ID for each table row\r\n        const ents_i: number[] = this._model.geom.query.getEnts(ent_type);\r\n        for (const ent_i of ents_i) {\r\n            data_obj_map.set(ent_i, { id: `${attribs_maps_key}${ent_i}` } );\r\n        }\r\n\r\n        // loop through all the attributes\r\n        attribs.forEach( (attrib, attrib_name) => {\r\n            const data_size: number = attrib.getDataSize();\r\n            for (const ent_i of ents_i) {\r\n                const attrib_value = attrib.getEntVal(ent_i);\r\n                if ( data_size > 1 ) {\r\n                    (attrib_value as any[]).forEach( (v, i) => {\r\n                        data_obj_map.get(ent_i)[`${attrib_name}[${i}]`] = v;\r\n                    });\r\n                } else {\r\n                    data_obj_map.get(ent_i)[`${attrib_name}`] = attrib_value;\r\n                }\r\n            }\r\n        });\r\n        return Array.from(data_obj_map.values());\r\n    }\r\n\r\n    /**\r\n     * @param ent_type\r\n     * @param ents_i\r\n     */\r\n    public getEntsVals(selected_ents: Map<string, number>, ent_type: EEntType) {\r\n        const attribs_maps_key: string = EEntTypeStr[ent_type];\r\n        const attribs: Map<string, GIAttribMap> = this._attribs_maps[attribs_maps_key];\r\n        const data_obj_map: Map< number, { id: string} > = new Map();\r\n        if (!selected_ents || selected_ents === undefined) {\r\n            return [];\r\n        }\r\n        selected_ents.forEach(ent => {\r\n            data_obj_map.set(ent, { id: `${attribs_maps_key}${ent}` } );\r\n        });\r\n        attribs.forEach( (attrib, attrib_name) => {\r\n            const data_size: number = attrib.getDataSize();\r\n            for (const ent_i of Array.from(selected_ents.values())) {\r\n                const attrib_value = attrib.getEntVal(ent_i);\r\n                if ( data_size > 1 ) {\r\n                    (attrib_value as any[]).forEach( (v, i) => {\r\n                        data_obj_map.get(ent_i)[`${attrib_name}[${i}]`] = v;\r\n                    });\r\n                } else {\r\n                    data_obj_map.get(ent_i)[`${attrib_name}`] = attrib_value;\r\n                }\r\n            }\r\n        });\r\n        return Array.from(data_obj_map.values());\r\n    }\r\n}\r\n","import { GIModel } from './GIModel';\r\nimport { IGeomData, IGeomArrays } from './common';\r\nimport { GIGeomAdd } from './GIGeomAdd';\r\nimport { GIGeomQuery } from './GIGeomQuery';\r\nimport { GIGeomThreejs } from './GIGeomThreejs';\r\n\r\n/**\r\n * Class for geometry.\r\n */\r\nexport class GIGeom {\r\n    public model: GIModel;\r\n    //  all arrays\r\n    private _geom_arrays: IGeomArrays = {\r\n        num_posis: 0,\r\n        dn_verts_posis: [],\r\n        dn_tris_verts: [],\r\n        dn_edges_verts: [],\r\n        dn_wires_edges: [],\r\n        dn_faces_wirestris: [],\r\n        dn_points_verts: [],\r\n        dn_plines_wires: [],\r\n        dn_pgons_faces: [],\r\n        dn_colls_objs: [],\r\n        up_posis_verts: [],\r\n        up_tris_faces: [],\r\n        up_verts_edges: [],\r\n        up_verts_tris: [],\r\n        up_verts_points: [],\r\n        up_edges_wires: [],\r\n        up_wires_faces: [],\r\n        up_wires_plines: [],\r\n        up_faces_pgons: [],\r\n        up_points_colls: [],\r\n        up_plines_colls: [],\r\n        up_pgons_colls: []\r\n    };\r\n    // sub classes with methods\r\n    public add: GIGeomAdd;\r\n    public query: GIGeomQuery;\r\n    public threejs: GIGeomThreejs;\r\n    /**\r\n     * Creates an object to store the geometry data.\r\n     * @param geom_data The JSON data\r\n     */\r\n    constructor(model: GIModel) {\r\n        this.model = model;\r\n        this.add = new GIGeomAdd(this, this._geom_arrays);\r\n        this.query = new GIGeomQuery(this, this._geom_arrays);\r\n        this.threejs = new GIGeomThreejs(this, this._geom_arrays);\r\n    }\r\n    /**\r\n     * Returns the JSON data for this model.\r\n     */\r\n    public getData(): IGeomData {\r\n        return {\r\n            num_positions: this._geom_arrays.num_posis,\r\n            triangles: this._geom_arrays.dn_tris_verts,\r\n            vertices: this._geom_arrays.dn_verts_posis,\r\n            edges: this._geom_arrays.dn_edges_verts,\r\n            wires: this._geom_arrays.dn_wires_edges,\r\n            faces: this._geom_arrays.dn_faces_wirestris,\r\n            points: this._geom_arrays.dn_points_verts,\r\n            polylines: this._geom_arrays.dn_plines_wires,\r\n            polygons: this._geom_arrays.dn_pgons_faces,\r\n            collections: this._geom_arrays.dn_colls_objs\r\n        };\r\n    }\r\n}\r\n","import { EEntType, TTri, TVert, TEdge, TWire, TFace,\r\n    TColl, IGeomData, TPoint, TPline, TPgon, Txyz, IGeomArrays, IGeomCopy, TAttribDataTypes, IGeomPack } from './common';\r\nimport { triangulate } from '../triangulate/triangulate';\r\nimport { GIGeom } from './GIGeom';\r\n\r\n/**\r\n * Class for geometry.\r\n */\r\nexport class GIGeomAdd {\r\n    private _geom: GIGeom;\r\n    private _geom_arrays: IGeomArrays;\r\n    /**\r\n     * Creates an object to store the geometry data.\r\n     * @param geom_data The JSON data\r\n     */\r\n    constructor(geom: GIGeom, geom_arrays: IGeomArrays) {\r\n        this._geom = geom;\r\n        this._geom_arrays = geom_arrays;\r\n    }\r\n    /**\r\n     * Adds data to this model from JSON data.\r\n     * The existing data in the model is not deleted.\r\n     * @param geom_data The JSON data\r\n     */\r\n    public addData(geom_data: IGeomData): IGeomPack {\r\n        // get lengths before we start adding stuff\r\n        const num_posis: number = this._geom_arrays.num_posis;\r\n        const num_verts: number = this._geom_arrays.dn_verts_posis.length;\r\n        const num_tris: number = this._geom_arrays.dn_tris_verts.length;\r\n        const num_edges: number = this._geom_arrays.dn_edges_verts.length;\r\n        const num_wires: number = this._geom_arrays.dn_wires_edges.length;\r\n        const num_faces: number = this._geom_arrays.dn_faces_wirestris.length;\r\n        const num_points: number = this._geom_arrays.dn_points_verts.length;\r\n        const num_plines: number = this._geom_arrays.dn_plines_wires.length;\r\n        const num_pgons: number = this._geom_arrays.dn_pgons_faces.length;\r\n        const num_colls: number = this._geom_arrays.dn_colls_objs.length;\r\n        // Add vertices to model\r\n        const new_verts: TVert[] = geom_data.vertices.map(p => p + num_posis as TVert);\r\n        for (const v of new_verts) {\r\n            this._geom_arrays.dn_verts_posis.push( v );\r\n        }\r\n        // Add triangles to model\r\n        // const new_triangles: TTri[] = geom_data.triangles.map(t => t.map(v => v + num_verts) as TTri);\r\n        // // this._geom_arrays.dn_tris_verts.push( ...new_triangles );\r\n        // for (const v of new_triangles) {\r\n        //     this._geom_arrays.dn_tris_verts.push( v );\r\n        // }\r\n        for (const triangle of geom_data.triangles) {\r\n            if (triangle !== null) {\r\n                const new_triangle: TTri = triangle.map(v => v + num_verts) as TTri;\r\n                this._geom_arrays.dn_tris_verts.push( new_triangle );\r\n            } else {\r\n                this._geom_arrays.dn_tris_verts.push( null );\r\n            }\r\n        }\r\n\r\n\r\n\r\n        // Add edges to model\r\n        const new_edges: TEdge[] = geom_data.edges.map(e => e.map(v => v + num_verts) as TEdge);\r\n        // this._geom_arrays.dn_edges_verts.push( ...new_edges );\r\n        for (const v of new_edges) {\r\n            this._geom_arrays.dn_edges_verts.push( v );\r\n        }\r\n        // Add wires to model\r\n        const new_wires: TWire[] = geom_data.wires.map(w => w.map(e => e + num_edges) as TWire);\r\n        // this._geom_arrays.dn_wires_edges.push( ...new_wires );\r\n        for (const v of new_wires) {\r\n            this._geom_arrays.dn_wires_edges.push( v );\r\n        }\r\n        // Add faces to model\r\n        const new_faces: TFace[] = geom_data.faces.map(f => [\r\n            f[0].map( w => w + num_wires),\r\n            f[1].map( t => t + num_tris)\r\n        ] as TFace);\r\n        // this._geom_arrays.dn_faces_wirestris.push( ...new_faces );\r\n        for (const v of new_faces) {\r\n            this._geom_arrays.dn_faces_wirestris.push( v );\r\n        }\r\n        // Add points to model\r\n        const new_points: TPoint[] = geom_data.points.map(v => v + num_verts as TPoint);\r\n        // this._geom_arrays.dn_points_verts.push( ...new_points );\r\n        for (const v of new_points) {\r\n            this._geom_arrays.dn_points_verts.push( v );\r\n        }\r\n        // Add lines to model\r\n        const new_plines: TPline[] = geom_data.polylines.map(w => w + num_wires as TPline);\r\n        // this._geom_arrays.dn_plines_wires.push( ...new_plines );\r\n        for (const v of new_plines) {\r\n            this._geom_arrays.dn_plines_wires.push( v );\r\n        }\r\n        // Add pgons to model\r\n        const new_pgons: TPgon[] = geom_data.polygons.map(f => f + num_faces as TPgon);\r\n        // this._geom_arrays.dn_pgons_faces.push( ...new_pgons );\r\n        for (const v of new_pgons) {\r\n            this._geom_arrays.dn_pgons_faces.push( v );\r\n        }\r\n        // Add collections to model\r\n        const new_colls: TColl[] = geom_data.collections.map(c => [\r\n            c[0] === -1 ? -1 : c[0] + num_colls,\r\n            c[1].map( point => point + num_points),\r\n            c[2].map( line => line + num_plines),\r\n            c[3].map( pgon => pgon + num_pgons)\r\n        ] as TColl);\r\n        // this._geom_arrays.dn_colls_objs.push( ...new_colls );\r\n        for (const v of new_colls) {\r\n            this._geom_arrays.dn_colls_objs.push( v );\r\n        }\r\n        // Update the reverse arrays\r\n        this._updateRevArrays();\r\n        // update the positions array\r\n        this._geom_arrays.num_posis += geom_data.num_positions;\r\n        // return\r\n        let num_new_posis = 0;\r\n        // if (new_verts.length > 0) { num_new_posis = Math.max(...new_verts); }\r\n        if (new_verts.length > 0) { new_verts.map(val => {\r\n            if (val > num_new_posis) {\r\n                num_new_posis = val;\r\n            }\r\n        }); }\r\n\r\n\r\n\r\n        return {\r\n            posis_i:  Array.from(Array(num_new_posis).keys()).map(k => k +  num_posis),\r\n            points_i: Array.from(Array(new_points.length).keys()).map(k => k + num_points),\r\n            plines_i: Array.from(Array(new_plines.length).keys()).map(k => k + num_plines),\r\n            pgons_i:  Array.from(Array(new_pgons.length).keys()).map(k => k +  num_pgons),\r\n            colls_i:  Array.from(Array(new_colls.length).keys()).map(k => k +  num_colls)\r\n        };\r\n    }\r\n    // ============================================================================\r\n    // Private method to update the reverse arrays after addData()\r\n    // ============================================================================\r\n    /**\r\n     * Updates the rev arrays the create the reveres links.\r\n     */\r\n    private _updateRevArrays() {\r\n        // posis->verts\r\n        this._geom_arrays.up_posis_verts = [];\r\n        this._geom_arrays.dn_verts_posis.forEach( (pos_i, vert_i) => {\r\n            if (this._geom_arrays.up_posis_verts[pos_i] === undefined) {\r\n                this._geom_arrays.up_posis_verts[pos_i] = [];\r\n            }\r\n            this._geom_arrays.up_posis_verts[pos_i].push(vert_i);\r\n        });\r\n\r\n        // verts->tris, one to many\r\n        this._geom_arrays.up_verts_tris = [];\r\n        this._geom_arrays.dn_tris_verts.forEach( (vert_i_arr, tri_i) => {\r\n            if (vert_i_arr !== null) {\r\n                vert_i_arr.forEach( vert_i => {\r\n                    if (this._geom_arrays.up_verts_tris[vert_i] === undefined) {\r\n                        this._geom_arrays.up_verts_tris[vert_i] = [];\r\n                    }\r\n                    this._geom_arrays.up_verts_tris[vert_i].push(tri_i);\r\n                });\r\n            }\r\n        });\r\n        // verts->edges, one to two\r\n        this._geom_arrays.up_verts_edges = [];\r\n        this._geom_arrays.dn_edges_verts.forEach( (vert_i_arr, edge_i) => {\r\n            vert_i_arr.forEach( vert_i => {\r\n                if (this._geom_arrays.up_verts_edges[vert_i] === undefined) {\r\n                    this._geom_arrays.up_verts_edges[vert_i] = [];\r\n                }\r\n                this._geom_arrays.up_verts_edges[vert_i].push(edge_i);\r\n            });\r\n        });\r\n        // edges->wires\r\n        this._geom_arrays.up_edges_wires = [];\r\n        this._geom_arrays.dn_wires_edges.forEach( (edge_i_arr, wire_i) => {\r\n            edge_i_arr.forEach( edge_i => {\r\n                this._geom_arrays.up_edges_wires[edge_i] = wire_i;\r\n            });\r\n        });\r\n        // wires->faces, tris->faces, faces->wirestris\r\n        this._geom_arrays.up_wires_faces = [];\r\n        this._geom_arrays.up_tris_faces = [];\r\n        this._geom_arrays.dn_faces_wirestris.forEach( ([wire_i_arr, tri_i_arr], face_i) => {\r\n            wire_i_arr.forEach( wire_i => {\r\n                this._geom_arrays.up_wires_faces[wire_i] = face_i;\r\n            });\r\n            tri_i_arr.forEach( tri_i => {\r\n                this._geom_arrays.up_tris_faces[tri_i] = face_i;\r\n            });\r\n        });\r\n        // points, lines, polygons\r\n        this._geom_arrays.up_verts_points = [];\r\n        this._geom_arrays.dn_points_verts.forEach( (vert_i, point_i) => {\r\n            this._geom_arrays.up_verts_points[vert_i] = point_i;\r\n        });\r\n        this._geom_arrays.up_wires_plines = [];\r\n        this._geom_arrays.dn_plines_wires.forEach( (wire_i, line_i) => {\r\n            this._geom_arrays.up_wires_plines[wire_i] = line_i;\r\n        });\r\n        this._geom_arrays.up_faces_pgons = [];\r\n        this._geom_arrays.dn_pgons_faces.forEach( (face_i, pgon_i) => {\r\n            this._geom_arrays.up_faces_pgons[face_i] = pgon_i;\r\n        });\r\n        // collections of points, polylines, polygons\r\n        this._geom_arrays.up_points_colls = [];\r\n        this._geom_arrays.up_plines_colls = [];\r\n        this._geom_arrays.up_pgons_colls = [];\r\n        this._geom_arrays.dn_colls_objs.forEach( ([parent, point_i_arr, pline_i_arr, pgon_i_arr], coll_i) => {\r\n            point_i_arr.forEach( point_i => {\r\n                if (this._geom_arrays.up_points_colls[point_i] === undefined) {\r\n                    this._geom_arrays.up_points_colls[point_i] = [coll_i];\r\n                } else {\r\n                    this._geom_arrays.up_points_colls[point_i].push(coll_i);\r\n                }\r\n            });\r\n            pline_i_arr.forEach( pline_i => {\r\n                if (this._geom_arrays.up_plines_colls[pline_i] === undefined) {\r\n                    this._geom_arrays.up_plines_colls[pline_i] = [coll_i];\r\n                } else {\r\n                    this._geom_arrays.up_plines_colls[pline_i].push(coll_i);\r\n                }\r\n            });\r\n            pgon_i_arr.forEach( pgon_i => {\r\n                if (this._geom_arrays.up_pgons_colls[pgon_i] === undefined) {\r\n                    this._geom_arrays.up_pgons_colls[pgon_i] = [coll_i];\r\n                } else {\r\n                    this._geom_arrays.up_pgons_colls[pgon_i].push(coll_i);\r\n                }\r\n            });\r\n        });\r\n    }\r\n    // ============================================================================\r\n    // Private methods to create the topological entities\r\n    // ============================================================================\r\n    /**\r\n     * Adds a vertex and updates the arrays.\r\n     * @param posi_i\r\n     */\r\n    private _addVertex(posi_i: number): number {\r\n        // update down arrays\r\n        const vert_i: number = this._geom_arrays.dn_verts_posis.push(posi_i) - 1;\r\n        // u[date up arrays]\r\n        if (this._geom_arrays.up_posis_verts[posi_i] === undefined) {\r\n            this._geom_arrays.up_posis_verts[posi_i] = [];\r\n        }\r\n        this._geom_arrays.up_posis_verts[posi_i].push(vert_i);\r\n        // return the numeric index of the vertex\r\n        return vert_i;\r\n    }\r\n    /**\r\n     * Adds an edge and updates the arrays.\r\n     * @param vert_i1\r\n     * @param vert_i2\r\n     */\r\n    private _addEdge(vert_i1: number, vert_i2: number): number {\r\n        // update down arrays\r\n        const edge_i: number = this._geom_arrays.dn_edges_verts.push([vert_i1, vert_i2]) - 1;\r\n        // update up arrays\r\n        if (this._geom_arrays.up_verts_edges[vert_i1] === undefined) {\r\n            this._geom_arrays.up_verts_edges[vert_i1] = [];\r\n        }\r\n        this._geom_arrays.up_verts_edges[vert_i1].push(edge_i);\r\n        if (this._geom_arrays.up_verts_edges[vert_i2] === undefined) {\r\n            this._geom_arrays.up_verts_edges[vert_i2] = [];\r\n        }\r\n        this._geom_arrays.up_verts_edges[vert_i2].push(edge_i);\r\n        // return the numeric index pf teh edge\r\n        return edge_i;\r\n    }\r\n    /**\r\n     * Adds a wire and updates the arrays.\r\n     * Edges are assumed to be sequential!\r\n     * @param edges_i\r\n     */\r\n    private _addWire(edges_i: number[], close: boolean = false): number {\r\n        // update down arrays\r\n        const wire_i: number = this._geom_arrays.dn_wires_edges.push(edges_i) - 1;\r\n        // update up arrays\r\n        edges_i.forEach( edge_i => this._geom_arrays.up_edges_wires[edge_i] = wire_i );\r\n        // return the numeric index of the wire\r\n        return wire_i;\r\n    }\r\n    /**\r\n     * Adds trangles and updates the arrays.\r\n     * Wires are assumed to be closed!\r\n     * @param wire_i\r\n     */\r\n    private _addTris(wire_i: number, hole_wires_i?: number[]): number[] {\r\n        // save all verts\r\n        const all_verts_i: number[] = [];\r\n        // get the coords of the outer perimeter edge\r\n        const wire_verts_i: number[] = this._geom.query.navAnyToVert(EEntType.WIRE, wire_i);\r\n        wire_verts_i.forEach(wire_vert_i => all_verts_i.push(wire_vert_i));\r\n        const wire_posis_i: number[] = wire_verts_i.map( vert_i => this._geom_arrays.dn_verts_posis[vert_i] );\r\n        const wire_coords: Txyz[] = wire_posis_i.map( posi_i => this._geom.model.attribs.query.getPosiCoords(posi_i) );\r\n        // get the coords of the holes\r\n        const all_hole_coords: Txyz[][] = [];\r\n        if (hole_wires_i !== undefined) {\r\n            for (const hole_wire_i of hole_wires_i) {\r\n                const hole_wire_verts_i: number[] = this._geom.query.navAnyToVert(EEntType.WIRE, hole_wire_i);\r\n                hole_wire_verts_i.forEach(wire_vert_i => all_verts_i.push(wire_vert_i));\r\n                const hole_wire_posis_i: number[] = hole_wire_verts_i.map( vert_i => this._geom_arrays.dn_verts_posis[vert_i] );\r\n                const hole_wire_coords: Txyz[] = hole_wire_posis_i.map( posi_i => this._geom.model.attribs.query.getPosiCoords(posi_i) );\r\n                all_hole_coords.push(hole_wire_coords);\r\n            }\r\n        }\r\n        // create the triangles\r\n        const tris_corners: number[][] = triangulate(wire_coords, all_hole_coords);\r\n        const tris_verts_i: TTri[] = tris_corners.map(tri_corners => tri_corners.map( corner => all_verts_i[corner] ) as TTri );\r\n        // update down arrays\r\n        const tris_i: number[] = tris_verts_i.map(tri_verts_i => this._geom_arrays.dn_tris_verts.push(tri_verts_i) - 1);\r\n        // update up arrays\r\n        for (let i = 0; i < tris_verts_i.length; i++) {\r\n            const tri_verts_i: TTri = tris_verts_i[i];\r\n            const tri_i: number = tris_i[i];\r\n            for (const tri_vert_i of tri_verts_i) {\r\n                if (this._geom_arrays.up_verts_tris[tri_vert_i] === undefined) {\r\n                    this._geom_arrays.up_verts_tris[tri_vert_i] = [];\r\n                }\r\n                this._geom_arrays.up_verts_tris[tri_vert_i].push(tri_i);\r\n            }\r\n        }\r\n        // return an array of numeric indicies of the triangles\r\n        return tris_i;\r\n    }\r\n    /**\r\n     * Adds a face and updates the arrays.\r\n     * Wires are assumed to be closed!\r\n     * This also calls addTris()\r\n     * @param wire_i\r\n     */\r\n    private _addFace(wire_i: number): number {\r\n        // create the triangles\r\n        const tris_i: number[] = this._addTris(wire_i);\r\n        // create the face\r\n        const face: TFace = [[wire_i], tris_i];\r\n        // update down arrays\r\n        const face_i: number = this._geom_arrays.dn_faces_wirestris.push(face) - 1;\r\n        // update up arrays\r\n        this._geom_arrays.up_wires_faces[wire_i] = face_i;\r\n        tris_i.forEach( tri_i => this._geom_arrays.up_tris_faces[tri_i] = face_i );\r\n        // return the numeric index of the face\r\n        return face_i;\r\n    }\r\n    /**\r\n     * Adds a face with a hole and updates the arrays.\r\n     * Wires are assumed to be closed!\r\n     * This also calls addTris()\r\n     * @param wire_i\r\n     */\r\n    private _addFaceWithHoles(wire_i: number, holes_wires_i: number[]): number {\r\n        // create the triangles\r\n        const tris_i: number[] = this._addTris(wire_i, holes_wires_i);\r\n        // create the face\r\n        const face_wires_i: number[] = [wire_i].concat(holes_wires_i);\r\n        const face: TFace = [face_wires_i, tris_i];\r\n        // update down arrays\r\n        const face_i: number = this._geom_arrays.dn_faces_wirestris.push(face) - 1;\r\n        // update up arrays\r\n        face_wires_i.forEach(face_wire_i => this._geom_arrays.up_wires_faces[face_wire_i] = face_i);\r\n        tris_i.forEach( tri_i => this._geom_arrays.up_tris_faces[tri_i] = face_i );\r\n        // return the numeric index of the face\r\n        return face_i;\r\n    }\r\n    /**\r\n     * Adds a hole to a face and updates the arrays.\r\n     * Wires are assumed to be closed!\r\n     * This also calls addTris()\r\n     * @param wire_i\r\n     */\r\n    private _addFaceHoles(face_i: number, hole_wires_i: number[]): number {\r\n        // get the wires and triangles arrays\r\n        const [face_wires_i, old_face_tris_i]: [number[], number[]] = this._geom_arrays.dn_faces_wirestris[face_i];\r\n        // get the outer wire\r\n        const outer_wire_i: number = face_wires_i[0];\r\n        // get the hole wires\r\n        const all_hole_wires_i: number[] = [];\r\n        if (face_wires_i.length > 1) {\r\n            face_wires_i.slice(1).forEach(wire_i => all_hole_wires_i.push(wire_i));\r\n        }\r\n        hole_wires_i.forEach(wire_i => all_hole_wires_i.push(wire_i));\r\n        // create the triangles\r\n        const new_tris_i: number[] = this._addTris(outer_wire_i, all_hole_wires_i);\r\n        // create the face\r\n        const new_wires_i: number[] = face_wires_i.concat(hole_wires_i);\r\n        const new_face: TFace = [new_wires_i, new_tris_i];\r\n        // update down arrays\r\n        this._geom_arrays.dn_faces_wirestris[face_i] = new_face;\r\n        // update up arrays\r\n        hole_wires_i.forEach(hole_wire_i => this._geom_arrays.up_wires_faces[hole_wire_i] = face_i);\r\n        new_tris_i.forEach( tri_i => this._geom_arrays.up_tris_faces[tri_i] = face_i );\r\n        // delete the old trianges\r\n        for (const old_face_tri_i of old_face_tris_i) {\r\n            for (const vertex_i of this._geom_arrays.dn_tris_verts[old_face_tri_i]) {\r\n                const tris_i: number[] = this._geom_arrays.up_verts_tris[vertex_i];\r\n                const index: number = tris_i.indexOf(old_face_tri_i);\r\n                if (index === -1) {\r\n                    throw new Error('There was a problem with triangulation during hole operation.');\r\n                }\r\n                tris_i.splice(index, 1);\r\n            }\r\n            this._geom_arrays.dn_tris_verts[old_face_tri_i] = null;\r\n        }\r\n        // TODO deal with the old triangles, stored in face_tris_i\r\n        // TODO These are still there and are still pointing up at this face\r\n        // TODO the have to be deleted...\r\n\r\n        // return the numeric index of the face\r\n        return face_i;\r\n    }\r\n    // ============================================================================\r\n    // Create geometry\r\n    // ============================================================================\r\n    /**\r\n     * Adds a new position to the model and returns the index to that position.\r\n     */\r\n    public addPosition(): number {\r\n        this._geom_arrays.num_posis += 1;\r\n        return this._geom_arrays.num_posis - 1;\r\n    }\r\n    /**\r\n     * Adds a new point entity to the model.\r\n     * @param posi_i The position for the point.\r\n     */\r\n    public addPoint(posi_i: number): number {\r\n        // create verts\r\n        const vert_i = this._addVertex(posi_i);\r\n        // create point\r\n        const point_i: number = this._geom_arrays.dn_points_verts.push(vert_i) - 1;\r\n        this._geom_arrays.up_verts_points[vert_i] = point_i;\r\n        return point_i;\r\n    }\r\n    /**\r\n     * Adds a new pline entity to the model using numeric indicies.\r\n     * @param posis_i\r\n     */\r\n    public addPline(posis_i: number[], close: boolean = false): number {\r\n        // create verts, edges, wires\r\n        const vert_i_arr: number[] = posis_i.map( posi_i => this._addVertex(posi_i));\r\n        const edges_i_arr: number[] = [];\r\n        for (let i = 0; i < vert_i_arr.length - 1; i++) {\r\n            edges_i_arr.push( this._addEdge(vert_i_arr[i], vert_i_arr[i + 1]));\r\n        }\r\n        if (close) {\r\n            edges_i_arr.push( this._addEdge(vert_i_arr[vert_i_arr.length - 1], vert_i_arr[0]));\r\n        }\r\n        const wire_i: number = this._addWire(edges_i_arr, close);\r\n        // create pline\r\n        const pline_i: number = this._geom_arrays.dn_plines_wires.push(wire_i) - 1;\r\n        this._geom_arrays.up_wires_plines[wire_i] = pline_i;\r\n        return pline_i;\r\n    }\r\n    /**\r\n     * Adds a new polygon entity to the model using numeric indicies.\r\n     * @param posis_id\r\n     */\r\n    public addPgon(posis_i: number[]): number {\r\n        // create verts, edges, wires, faces\r\n        const vert_i_arr: number[] = posis_i.map( posi_i => this._addVertex(posi_i));\r\n        const edges_i_arr: number[] = [];\r\n        for (let i = 0; i < vert_i_arr.length - 1; i++) {\r\n            edges_i_arr.push( this._addEdge(vert_i_arr[i], vert_i_arr[i + 1]));\r\n        }\r\n        edges_i_arr.push( this._addEdge(vert_i_arr[vert_i_arr.length - 1], vert_i_arr[0]));\r\n        const wire_i: number = this._addWire(edges_i_arr, true);\r\n        const face_i: number = this._addFace(wire_i);\r\n        // create polygon\r\n        const pgon_i: number = this._geom_arrays.dn_pgons_faces.push(face_i) - 1;\r\n        this._geom_arrays.up_faces_pgons[face_i] = pgon_i;\r\n        return pgon_i;\r\n    }\r\n    /**\r\n     * Adds a new polygon + hole entity to the model using numeric indicies.\r\n     * @param posis_id\r\n     */\r\n    public addPgonWithHole(posis_i: number[], holes_posis_i: number[][]): number {\r\n        // create verts, edges, wire for face\r\n        const vert_i_arr: number[] = posis_i.map( posi_i => this._addVertex(posi_i));\r\n        const edges_i_arr: number[] = [];\r\n        for (let i = 0; i < vert_i_arr.length - 1; i++) {\r\n            edges_i_arr.push( this._addEdge(vert_i_arr[i], vert_i_arr[i + 1]));\r\n        }\r\n        edges_i_arr.push( this._addEdge(vert_i_arr[vert_i_arr.length - 1], vert_i_arr[0]));\r\n        const wire_i: number = this._addWire(edges_i_arr, true);\r\n        // create verts, edges, wire for holes\r\n        const holes_wires_i: number[] = [];\r\n        for (const hole_posis_i of holes_posis_i) {\r\n            const hole_vert_i_arr: number[] = hole_posis_i.map( posi_i => this._addVertex(posi_i));\r\n            const hole_edges_i_arr: number[] = [];\r\n            for (let i = 0; i < hole_vert_i_arr.length - 1; i++) {\r\n                hole_edges_i_arr.push( this._addEdge(hole_vert_i_arr[i], hole_vert_i_arr[i + 1]));\r\n            }\r\n            hole_edges_i_arr.push( this._addEdge(hole_vert_i_arr[hole_vert_i_arr.length - 1], hole_vert_i_arr[0]));\r\n            const hole_wire_i: number = this._addWire(hole_edges_i_arr, true);\r\n            holes_wires_i.push(hole_wire_i);\r\n        }\r\n        // create the new face with a hole\r\n        const face_i: number = this._addFaceWithHoles(wire_i, holes_wires_i);\r\n        // create polygon\r\n        const pgon_i: number = this._geom_arrays.dn_pgons_faces.push(face_i) - 1;\r\n        this._geom_arrays.up_faces_pgons[face_i] = pgon_i;\r\n        return pgon_i;\r\n    }\r\n    /**\r\n     * Adds a collection and updates the rev array using numeric indicies.\r\n     * @param parent_i\r\n     * @param points_i\r\n     * @param plines_i\r\n     * @param pgons_i\r\n     */\r\n    public addColl(parent_i: number, points_i: number[], plines_i: number[], pgons_i: number[]): number {\r\n        // create collection\r\n        const coll_i: number = this._geom_arrays.dn_colls_objs.push([parent_i, points_i, plines_i, pgons_i]) - 1;\r\n        for (const point_i of points_i) {\r\n            if (this._geom_arrays.up_points_colls[point_i] === undefined) {\r\n                this._geom_arrays.up_points_colls[point_i] = [coll_i];\r\n            } else {\r\n                this._geom_arrays.up_points_colls[point_i].push(coll_i);\r\n            }\r\n        }\r\n        for (const pline_i of plines_i) {\r\n            if (this._geom_arrays.up_points_colls[pline_i] === undefined) {\r\n                this._geom_arrays.up_points_colls[pline_i] = [coll_i];\r\n            } else {\r\n                this._geom_arrays.up_points_colls[pline_i].push(coll_i);\r\n            }\r\n        }\r\n        for (const pgon_i of pgons_i) {\r\n            if (this._geom_arrays.up_points_colls[pgon_i] === undefined) {\r\n                this._geom_arrays.up_points_colls[pgon_i] = [coll_i];\r\n            } else {\r\n                this._geom_arrays.up_points_colls[pgon_i].push(coll_i);\r\n            }\r\n        }\r\n        return coll_i;\r\n    }\r\n    /**\r\n     * Copy positions.\r\n     * @param posis_i\r\n     * @param copy_attribs\r\n     */\r\n    public copyPosis(posis_i: number|number[], copy_attribs: boolean): number|number[] {\r\n        if (!Array.isArray(posis_i)) {\r\n            const xyz: Txyz = this._geom.model.attribs.query.getPosiCoords(posis_i as number);\r\n            const new_posi_i: number = this.addPosition();\r\n            this._geom.model.attribs.add.setPosiCoords(new_posi_i, xyz);\r\n            if (copy_attribs) {\r\n                const attrib_names: string[] = this._geom.model.attribs.query.getAttribNames(EEntType.POSI);\r\n                for (const attrib_name of attrib_names) {\r\n                    const value: TAttribDataTypes =\r\n                        this._geom.model.attribs.query.getAttribValue(EEntType.POSI, attrib_name, posis_i as number) as TAttribDataTypes;\r\n                    this._geom.model.attribs.add.setAttribValue(EEntType.POSI, new_posi_i, attrib_name, value);\r\n                }\r\n            }\r\n            return new_posi_i;\r\n        } else {\r\n            return (posis_i as number[]).map(posi_i => this.copyPosis(posi_i, copy_attribs)) as number[];\r\n        }\r\n    }\r\n    /**\r\n     * Copy an object (point, polyline, polygon).\r\n     * TODO copy attribs of topo entities\r\n     * @param ent_type\r\n     * @param index\r\n     * @param copy_posis\r\n     * @param copy_attribs\r\n     */\r\n    public copyObjs(ent_type: EEntType, ent_i: number|number[], copy_attribs: boolean): number|number[] {\r\n        // make copies\r\n        if (!Array.isArray(ent_i)) {\r\n            let posis_i: number[];\r\n            switch (ent_type) {\r\n                case EEntType.POINT:\r\n                    posis_i = this._geom.query.navAnyToPosi(ent_type, ent_i as number);\r\n                    const point_i: number = this.addPoint(posis_i[0]);\r\n                    if (copy_attribs) {\r\n                        this._geom.model.attribs.add.copyAttribs(ent_type, ent_i, point_i);\r\n                    }\r\n                    return point_i;\r\n                case EEntType.PLINE:\r\n                    posis_i = this._geom.query.navAnyToPosi(ent_type, ent_i as number);\r\n                    const wire_i: number = this._geom.query.navPlineToWire(ent_i as number);\r\n                    const is_closed: boolean = this._geom.query.istWireClosed(wire_i);\r\n                    const pline_i: number = this.addPline(posis_i, is_closed);\r\n                    if (copy_attribs) {\r\n                        this._geom.model.attribs.add.copyAttribs(ent_type, ent_i, pline_i);\r\n                    }\r\n                    return pline_i;\r\n                case EEntType.PGON:\r\n                    const wires_i: number[] = this._geom.query.navAnyToWire(ent_type, ent_i as number);\r\n                    posis_i = this._geom.query.navAnyToPosi(EEntType.WIRE, wires_i[0] as number);\r\n                    let pgon_i: number;\r\n                    if (wires_i.length === 1) {\r\n                        pgon_i = this.addPgon(posis_i);\r\n                    } else {\r\n                        const holes_posis_i: number[][] = [];\r\n                        for (let i = 1; i < wires_i.length; i++) {\r\n                            const hole_posis_i: number[] = this._geom.query.navAnyToPosi(EEntType.WIRE, wires_i[i] as number);\r\n                            holes_posis_i.push(hole_posis_i);\r\n                        }\r\n                        pgon_i = this.addPgonWithHole(posis_i, holes_posis_i);\r\n                    }\r\n                    if (copy_attribs) {\r\n                        this._geom.model.attribs.add.copyAttribs(ent_type, ent_i, pgon_i);\r\n                    }\r\n                    return pgon_i;\r\n                default:\r\n                    throw new Error('Cannot copy entity of this type: ' + ent_type);\r\n            }\r\n        } else { // AN array of ent_i\r\n            return (ent_i as number[]).map(one_ent_i => this.copyObjs(ent_type, one_ent_i, copy_attribs)) as number[];\r\n        }\r\n    }\r\n   /**\r\n     * Copy an object (point, polyline, polygon).\r\n     * TODO Copy attribs of object and topo entities\r\n     * @param ent_type\r\n     * @param index\r\n     * @param copy_posis\r\n     * @param copy_attribs\r\n     */\r\n    public copyColls(coll_i: number|number[], copy_attribs: boolean): number|number[] {\r\n        // make copies\r\n        if (!Array.isArray(coll_i)) {\r\n            // Make a deep copy of the objects in the collection\r\n            const points_i: number[] = this._geom.query.navCollToPoint(coll_i);\r\n            const res1 = this.copyObjs(EEntType.POINT, points_i, copy_attribs) as number[];\r\n            const plines_i: number[] = this._geom.query.navCollToPline(coll_i);\r\n            const res2 = this.copyObjs(EEntType.PLINE, plines_i, copy_attribs) as number[];\r\n            const pgons_i: number[] = this._geom.query.navCollToPgon(coll_i);\r\n            const res3 = this.copyObjs(EEntType.PGON, pgons_i, copy_attribs) as number[];\r\n            const parent: number = this._geom.query.getCollParent(coll_i);\r\n            // add the new collection\r\n            const new_coll_i: number = this.addColl(parent, res1, res2, res3);\r\n            // copy the attributes from old collection to new collection\r\n            if (copy_attribs) {\r\n                this._geom.model.attribs.add.copyAttribs(EEntType.COLL, coll_i, new_coll_i);\r\n            }\r\n            // return the new collection\r\n            return new_coll_i;\r\n        } else {\r\n            return (coll_i as number[]).map(one_coll_i => this.copyColls(one_coll_i, copy_attribs)) as number[];\r\n        }\r\n    }\r\n    // ============================================================================\r\n    // Modify geometry\r\n    // ============================================================================\r\n    /**\r\n     * Adds a new polygon entity to the model using numeric indicies.\r\n     * @param posis_id\r\n     */\r\n    public addFaceHoles(face_i: number, posis_i_arr: number[][]): number[] {\r\n        // make the wires for the holes\r\n        const hole_wires_i: number[] = [];\r\n        for (const hole_posis_i of posis_i_arr) {\r\n            const hole_vert_i_arr: number[] = hole_posis_i.map( posi_i => this._addVertex(posi_i));\r\n            const hole_edges_i_arr: number[] = [];\r\n            for (let i = 0; i < hole_vert_i_arr.length - 1; i++) {\r\n                hole_edges_i_arr.push( this._addEdge(hole_vert_i_arr[i], hole_vert_i_arr[i + 1]));\r\n            }\r\n            hole_edges_i_arr.push( this._addEdge(hole_vert_i_arr[hole_vert_i_arr.length - 1], hole_vert_i_arr[0]));\r\n            const hole_wire_i: number = this._addWire(hole_edges_i_arr, true);\r\n            hole_wires_i.push(hole_wire_i);\r\n        }\r\n        // create the holes\r\n        this._addFaceHoles(face_i, hole_wires_i);\r\n        // no need to change either the up or down arrays\r\n        // return the new wires\r\n        return hole_wires_i;\r\n    }\r\n    /**\r\n     * Close a wire\r\n     * @param wire_i The wire to close.\r\n     */\r\n    public closeWire(wire_i: number): void {\r\n        // get the wire start and end verts\r\n        const wire: TWire = this._geom_arrays.dn_wires_edges[wire_i];\r\n        const num_edges: number = wire.length;\r\n        const start_edge_i: number = wire[0];\r\n        const end_edge_i: number = wire[num_edges - 1];\r\n        const start_vert_i: number = this._geom.query.navEdgeToVert(start_edge_i)[0];\r\n        const end_vert_i: number = this._geom.query.navEdgeToVert(end_edge_i)[1];\r\n        if (start_vert_i === end_vert_i) { return; }\r\n        // add the edge to the model\r\n        const new_edge_i: number = this._addEdge(end_vert_i, start_vert_i);\r\n        // update the down arrays\r\n        this._geom_arrays.dn_wires_edges[wire_i].push(new_edge_i);\r\n        // update the up arrays\r\n        this._geom_arrays.up_edges_wires[new_edge_i] = wire_i;\r\n    }\r\n    /**\r\n     * Open a wire, by deleting an edge\r\n     * @param wire_i The wire to close.\r\n     */\r\n    public openWire(wire_i: number): void {\r\n        // This deletes an edge\r\n        throw new Error('Not implemented');\r\n    }\r\n    /**\r\n     * Insert a vertex into an edge and updates the wire with the new edge\r\n     * @param wire_i The wire to close.\r\n     */\r\n    public insertVertIntoEdge(edge_i: number, posi_i: number): number {\r\n        const wire_i: number = this._geom.query.navEdgeToWire(edge_i);\r\n        const wire: TWire = this._geom_arrays.dn_wires_edges[wire_i];\r\n        const old_edge: TEdge = this._geom_arrays.dn_edges_verts[edge_i];\r\n        // create one new vertex and one new edge\r\n        const new_vert_i: number = this._addVertex(posi_i);\r\n        const new_edge_i: number = this._addEdge(new_vert_i, old_edge[1]);\r\n        // update the down arrays\r\n        old_edge[1] = new_vert_i;\r\n        wire.splice(wire.indexOf(edge_i), 1, edge_i, new_edge_i);\r\n        // update the up arrays\r\n        this._geom_arrays.up_edges_wires[new_edge_i] = wire_i;\r\n        // return the new edge\r\n        return new_edge_i;\r\n    }\r\n    /**\r\n     * Delete a vertex from a wire\r\n     * @param wire_i The wire to close.\r\n     */\r\n    public deleteVertWire(edge_i: number, posi_i: number): void {\r\n        throw new Error(\"Not implemented.\");\r\n    }\r\n    /**\r\n     * Replace positions\r\n     * @param ent_type\r\n     * @param ent_i\r\n     * @param new_posis_i\r\n     */\r\n    public replacePosis(ent_type: EEntType, ent_i: number, new_posis_i: number[]): void {\r\n        const verts_i: number[] = this._geom.query.navAnyToVert(ent_type, ent_i);\r\n        if (verts_i.length !== new_posis_i.length) {\r\n            throw new Error('Replacing positions operation failed due to incorrect number of positions.');\r\n        }\r\n        for (let i = 0; i < verts_i.length; i++) {\r\n            this._geom_arrays.dn_verts_posis[verts_i[i]] = new_posis_i[i];\r\n        }\r\n    }\r\n    /**\r\n     * Unweld the vertices\r\n     * TODO copy attributes onto new positions?\r\n     * @param verts_i\r\n     */\r\n    public unweldVerts(verts_i: number[]): number[] {\r\n        const exist_posis_i_map: Map<number, number> = new Map(); // posi_i -> count\r\n        for (const vert_i of verts_i) {\r\n            const posi_i: number = this._geom.query.navVertToPosi(vert_i);\r\n            if (!exist_posis_i_map.has(posi_i)) {\r\n                exist_posis_i_map.set(posi_i, 0);\r\n            }\r\n            const vert_count: number = exist_posis_i_map.get(posi_i);\r\n            exist_posis_i_map.set(posi_i, vert_count + 1);\r\n        }\r\n        // copy positions on the perimeter and make a map\r\n        const old_to_new_posis_i_map: Map<number, number> = new Map();\r\n        exist_posis_i_map.forEach( (vert_count, old_posi_i) => {\r\n            const all_old_verts_i: number[] = this._geom.query.navPosiToVert(old_posi_i);\r\n            const all_vert_count: number = all_old_verts_i.length;\r\n            if (vert_count !== all_vert_count) {\r\n                if (!old_to_new_posis_i_map.has(old_posi_i)) {\r\n                    const new_posi_i: number = this.copyPosis(old_posi_i, true) as number;\r\n                    old_to_new_posis_i_map.set(old_posi_i, new_posi_i);\r\n                }\r\n            }\r\n        });\r\n        // now go through the geom again and rewire to the new posis\r\n        for (const vert_i of verts_i) {\r\n            const old_posi_i: number = this._geom.query.navVertToPosi(vert_i);\r\n            let new_posi_i: number = old_posi_i;\r\n            if (old_to_new_posis_i_map.has(old_posi_i)) {\r\n                new_posi_i = old_to_new_posis_i_map.get(old_posi_i);\r\n            }\r\n            // update the down arrays\r\n            this._geom_arrays.dn_verts_posis[vert_i] = new_posi_i;\r\n            // update the up arrays\r\n            if (this._geom_arrays.up_posis_verts[new_posi_i] === undefined) {\r\n                this._geom_arrays.up_posis_verts[new_posi_i] = [];\r\n            }\r\n            this._geom_arrays.up_posis_verts[new_posi_i].push(new_posi_i);\r\n        }\r\n        // return all the new positions\r\n        return Array.from(old_to_new_posis_i_map.values());\r\n    }\r\n    /**\r\n     * Reverse the edges of a wire.\r\n     * Theis lists the edges in reverse order, and flips each edge.\r\n     * The attributes ...\r\n     */\r\n    public reverse(wire_i: number): void {\r\n        const wire: TWire = this._geom_arrays.dn_wires_edges[wire_i];\r\n        wire.reverse();\r\n        // reverse the edges\r\n        for (const edge_i of wire) {\r\n            const edge: TEdge = this._geom_arrays.dn_edges_verts[edge_i];\r\n            edge.reverse();\r\n        }\r\n        // if this is a face, reverse the triangles\r\n        if (this._geom_arrays.up_wires_faces[wire_i] !== undefined) {\r\n            const face_i: number = this._geom_arrays.up_wires_faces[wire_i];\r\n            const face: TFace = this._geom_arrays.dn_faces_wirestris[face_i];\r\n            for (const tri_i of face[1]) {\r\n                const tri: TTri = this._geom_arrays.dn_tris_verts[tri_i];\r\n                tri.reverse();\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Reverse the edges of a wire.\r\n     * Theis lists the edges in reverse order, and flips each edge.\r\n     * The attributes ...\r\n     */\r\n    public shift(wire_i: number, offset: number): void {\r\n        const wire: TWire = this._geom_arrays.dn_wires_edges[wire_i];\r\n        wire.unshift.apply( wire, wire.splice( offset, wire.length ) );\r\n    }\r\n}\r\n","\r\nimport {  EEntType, IGeomArrays, EEntStrToGeomArray, TWire } from './common';\r\nimport { isPosi, isVert, isPoint, isEdge, isWire, isPline, isFace, isPgon, isColl, isTri } from './id';\r\nimport { GIGeom } from './GIGeom';\r\n/**\r\n * Class for geometry.\r\n */\r\nexport class GIGeomQuery {\r\n    private _geom: GIGeom;\r\n    private _geom_arrays: IGeomArrays;\r\n    /**\r\n     * Creates an object to store the geometry data.\r\n     * @param geom_data The JSON data\r\n     */\r\n    constructor(geom: GIGeom, geom_arrays: IGeomArrays) {\r\n        this._geom = geom;\r\n        this._geom_arrays = geom_arrays;\r\n    }\r\n    // ============================================================================\r\n    // Get entity indicies, and num ents\r\n    // ============================================================================\r\n    /**\r\n     * Returns a list of indicies for all, including ents that are null\r\n     * TODO This seems unecessary\r\n     * @param ent_type\r\n     */\r\n    public getEnts(ent_type: EEntType): number[] {\r\n        if (isPosi(ent_type)) {\r\n            // TODO how to handle deleted positions\r\n            return Array.from(Array(this._geom_arrays.num_posis).keys());\r\n        }\r\n        const geom_array_key: string = EEntStrToGeomArray[ent_type];\r\n        const geom_array: any[] = this._geom_arrays[geom_array_key];\r\n        // console.log(\"ent_type\", ent_type);\r\n        // console.log(\"geom_array_key\", geom_array_key);\r\n        // console.log(\"geom_array\", geom_array);\r\n        const ents_i: number[] = [];\r\n        geom_array.forEach( (entity, index) => {\r\n            ents_i.push(index);\r\n        });\r\n        return ents_i;\r\n    }\r\n    /**\r\n     * Returns the number of entities, including deleted entities (which are set to null)\r\n     * @param ent_type\r\n     */\r\n    public numEnts(ent_type: EEntType): number {\r\n        return this.getEnts(ent_type).length;\r\n    }\r\n    /**\r\n     * Returns the number of entities, including deleted entities\r\n     * @param ent_type\r\n     */\r\n    public nextEntIndex(ent_type: EEntType): number {\r\n        if (isPosi(ent_type)) {\r\n            // TODO how to handle deleted positions\r\n            return this._geom_arrays.num_posis;\r\n        }\r\n        const geom_array_key: string = EEntStrToGeomArray[ent_type];\r\n        const geom_array: any[] = this._geom_arrays[geom_array_key];\r\n        return geom_array.length;\r\n    }\r\n    // ============================================================================\r\n    // Util\r\n    // ============================================================================\r\n    /**\r\n     * Check if an entity exists\r\n     * @param index\r\n     */\r\n    public entExists(ent_type: EEntType, index: number): boolean {\r\n        const geom_arrays_key: string = EEntStrToGeomArray[ent_type];\r\n        return (this._geom_arrays[geom_arrays_key][index] !== undefined);\r\n    }\r\n    /**\r\n     * Check if a wire is closed.\r\n     * @param wire_i\r\n     */\r\n    public istWireClosed(wire_i: number): boolean {\r\n        // get the wire start and end verts\r\n        const wire: TWire = this._geom_arrays.dn_wires_edges[wire_i];\r\n        const num_edges: number = wire.length;\r\n        const start_edge_i: number = wire[0];\r\n        const end_edge_i: number = wire[num_edges - 1];\r\n        const start_vert_i: number = this._geom.query.navEdgeToVert(start_edge_i)[0];\r\n        const end_vert_i: number = this._geom.query.navEdgeToVert(end_edge_i)[1];\r\n        // if start and end verts are the same, then wire is closed\r\n        return (start_vert_i === end_vert_i);\r\n    }\r\n    /**\r\n     * Returns the vertices.\r\n     * For a closed wire, #vertices = #edges\r\n     * For an open wire, #vertices = #edges + 1\r\n     */\r\n    private getWireVerts(wire_i: number): number[] {\r\n        const edges_i: number[] = this._geom_arrays.dn_wires_edges[wire_i];\r\n        const verts_i: number[] = edges_i.map(edge_i => this._geom_arrays.dn_edges_verts[edge_i][0]);\r\n        // if wire is open, then add final vertex\r\n        if (this._geom_arrays.dn_edges_verts[edges_i[0]][0] !== this._geom_arrays.dn_edges_verts[edges_i[edges_i.length - 1]][1]) {\r\n            verts_i.push(this._geom_arrays.dn_edges_verts[edges_i[edges_i.length - 1]][1]);\r\n        }\r\n        return verts_i;\r\n    }\r\n    /**\r\n     * Get the parent of a collection.\r\n     * @param wire_i\r\n     */\r\n    public getCollParent(coll_i: number): number {\r\n        return this._geom_arrays.dn_colls_objs[coll_i][0];\r\n    }\r\n    // ============================================================================\r\n    // Navigate down the hierarchy\r\n    // ============================================================================\r\n    public navVertToPosi(vert_i: number): number {\r\n        return this._geom_arrays.dn_verts_posis[vert_i];\r\n    }\r\n    public navTriToVert(tri_i: number): number[] {\r\n        return this._geom_arrays.dn_tris_verts[tri_i];\r\n    }\r\n    public navEdgeToVert(edge_i: number): number[] {\r\n        return this._geom_arrays.dn_edges_verts[edge_i];\r\n    }\r\n    public navWireToEdge(wire_i: number): number[] {\r\n        return this._geom_arrays.dn_wires_edges[wire_i];\r\n    }\r\n    public navFaceToWire(face_i: number): number[] {\r\n        return this._geom_arrays.dn_faces_wirestris[face_i][0];\r\n    }\r\n    public navFaceToTri(face_i: number): number[] {\r\n        return this._geom_arrays.dn_faces_wirestris[face_i][1];\r\n    }\r\n    public navPointToVert(point_i: number): number {\r\n        return this._geom_arrays.dn_points_verts[point_i];\r\n    }\r\n    public navPlineToWire(line_i: number): number {\r\n        return this._geom_arrays.dn_plines_wires[line_i];\r\n    }\r\n    public navPgonToFace(pgon_i: number): number {\r\n        return this._geom_arrays.dn_pgons_faces[pgon_i];\r\n    }\r\n    public navCollToPoint(coll_i: number): number[] {\r\n        return this._geom_arrays.dn_colls_objs[coll_i][1]; // coll points\r\n    }\r\n    public navCollToPline(coll_i: number): number[] {\r\n        return this._geom_arrays.dn_colls_objs[coll_i][2]; // coll lines\r\n    }\r\n    public navCollToPgon(coll_i: number): number[] {\r\n        return this._geom_arrays.dn_colls_objs[coll_i][3]; // coll pgons\r\n    }\r\n    public navCollToColl(coll_i: number): number {\r\n        return coll_i[0]; // coll parent\r\n    }\r\n    // ============================================================================\r\n    // Navigate up the hierarchy\r\n    // ============================================================================\r\n    public navPosiToVert(posi_i: number): number[] {\r\n        return this._geom_arrays.up_posis_verts[posi_i];\r\n    }\r\n    public navVertToTri(vert_i: number): number[] {\r\n        return this._geom_arrays.up_verts_tris[vert_i];\r\n    }\r\n    public navVertToEdge(vert_i: number): number[] {\r\n        return this._geom_arrays.up_verts_edges[vert_i];\r\n    }\r\n    public navTriToFace(tri_i: number): number {\r\n        return this._geom_arrays.up_tris_faces[tri_i];\r\n    }\r\n    public navEdgeToWire(edge_i: number): number {\r\n        return this._geom_arrays.up_edges_wires[edge_i];\r\n    }\r\n    public navWireToFace(wire_i: number): number {\r\n        return this._geom_arrays.up_wires_faces[wire_i];\r\n    }\r\n    public navVertToPoint(vert_i: number): number {\r\n        return this._geom_arrays.up_verts_points[vert_i];\r\n    }\r\n    public navWireToPline(wire_i: number): number {\r\n        return this._geom_arrays.up_wires_plines[wire_i];\r\n    }\r\n    public navFaceToPgon(face: number): number {\r\n        return this._geom_arrays.up_faces_pgons[face];\r\n    }\r\n    public navPointToColl(point_i: number): number[] {\r\n        return this._geom_arrays.up_points_colls[point_i];\r\n    }\r\n    public navPlineToColl(line_i: number): number[] {\r\n        return this._geom_arrays.up_plines_colls[line_i];\r\n    }\r\n    public navPgonToColl(pgon_i: number): number[] {\r\n        return this._geom_arrays.up_pgons_colls[pgon_i];\r\n    }\r\n    // ============================================================================\r\n    // Navigate from any level to ? (up or down)\r\n    // ============================================================================\r\n    /**\r\n     * Navigate from any level to the colls\r\n     * @param ent_type\r\n     * @param index\r\n     */\r\n    public navAnyToColl(ent_type: EEntType, index: number): number[] {\r\n        if (isColl(ent_type)) { return [index]; }\r\n        const points_i: number[] = this.navAnyToPoint(ent_type, index);\r\n        const colls1_i: number[] = [].concat(...points_i.map(point_i => this.navPointToColl(point_i)));\r\n        const plines_i: number[] = this.navAnyToPline(ent_type, index);\r\n        const colls2_i: number[] = [].concat(...plines_i.map(pline_i => this.navPlineToColl(pline_i)));\r\n        const pgons_i: number[] = this.navAnyToPgon(ent_type, index);\r\n        const colls3_i: number[] = [].concat(...pgons_i.map(pgon_i => this.navPgonToColl(pgon_i)));\r\n        return Array.from(new Set([...colls1_i, ...colls2_i, ...colls3_i])).filter(coll_i => coll_i !== undefined); // remove duplicates\r\n    }\r\n    /**\r\n     * Navigate from any level to the pgons\r\n     * @param ent_type\r\n     * @param index\r\n     */\r\n    public navAnyToPgon(ent_type: EEntType, index: number): number[] {\r\n        if (isPgon(ent_type)) { return [index]; }\r\n        const faces_i: number[] = this.navAnyToFace(ent_type, index);\r\n        return faces_i.map( face_i => this.navFaceToPgon(face_i) ).filter(pgon_i => pgon_i !== undefined);\r\n    }\r\n    /**\r\n     * Navigate from any level to the plines\r\n     * @param ent_type\r\n     * @param index\r\n     */\r\n    public navAnyToPline(ent_type: EEntType, index: number): number[] {\r\n        if (isPline(ent_type)) { return [index]; }\r\n        const wires_i: number[] = this.navAnyToWire(ent_type, index);\r\n        return wires_i.map( wire_i => this.navWireToPline(wire_i) ).filter(pline_i => pline_i !== undefined);\r\n    }\r\n    /**\r\n     * Navigate from any level to the points\r\n     * @param ent_type\r\n     * @param index\r\n     */\r\n    public navAnyToPoint(ent_type: EEntType, index: number): number[] {\r\n        if (isPoint(ent_type)) { return [index]; }\r\n        const verts_i: number[] = this.navAnyToVert(ent_type, index);\r\n        return verts_i.map( vert_i => this.navVertToPoint(vert_i) ).filter(point_i => point_i !== undefined);\r\n    }\r\n    /**\r\n     * Navigate from any level to the faces\r\n     * @param ent_type\r\n     * @param index\r\n     */\r\n    public navAnyToFace(ent_type: EEntType, index: number): number[] {\r\n        if (isPosi(ent_type)) {\r\n            const verts_i: number[] = this.navPosiToVert(index);\r\n            return [].concat(...verts_i.map( vert_i => this.navAnyToFace(EEntType.VERT, vert_i) ));\r\n        } else if (isVert(ent_type)) {\r\n            const edges_i: number[] = this.navVertToEdge(index);\r\n            return [].concat(...edges_i.map( edge_i => this.navAnyToFace(EEntType.EDGE, edge_i) ));\r\n        } else if (isTri(ent_type)) {\r\n            return [this.navTriToFace(index)];\r\n        } else if (isEdge(ent_type)) {\r\n            const wire_i: number = this.navEdgeToWire(index);\r\n            return this.navAnyToFace(EEntType.WIRE, wire_i);\r\n        } else if (isWire(ent_type)) {\r\n            return [this.navWireToFace(index)];\r\n        } else if (isFace(ent_type)) { // target\r\n            return [index];\r\n        } else if (isPoint(ent_type)) {\r\n            return [];\r\n        } else if (isPline(ent_type)) {\r\n            return [];\r\n        } else if (isPgon(ent_type)) {\r\n            return [this.navPgonToFace(index)];\r\n        } else if (isColl(ent_type)) {\r\n            const pgons_i: number[] = this.navCollToPgon(index);\r\n            return pgons_i.map(pgon_i => this.navPgonToFace(pgon_i));\r\n        }\r\n        throw new Error('Bad navigation: ' + ent_type + index);\r\n    }\r\n    /**\r\n     * Navigate from any level to the wires\r\n     * @param ent_type\r\n     * @param index\r\n     */\r\n    public navAnyToWire(ent_type: EEntType, index: number): number[] {\r\n        if (isPosi(ent_type)) {\r\n            const verts_i: number[] = this.navPosiToVert(index);\r\n            return [].concat(...verts_i.map( vert_i => this.navAnyToWire(EEntType.VERT, vert_i) ));\r\n        } else if (isVert(ent_type)) {\r\n            const edges_i: number[] = this.navVertToEdge(index);\r\n            return [].concat(...edges_i.map( edge_i => this.navEdgeToWire(edge_i) ));\r\n        } else if (isTri(ent_type)) {\r\n            return [];\r\n        } else if (isEdge(ent_type)) {\r\n            return [this.navEdgeToWire(index)];\r\n        } else if (isWire(ent_type)) { // target\r\n            return [index];\r\n        } else if (isFace(ent_type)) {\r\n            return this.navFaceToWire(index);\r\n        } else if (isPoint(ent_type)) {\r\n            return [];\r\n        } else if (isPline(ent_type)) {\r\n            return [this.navPlineToWire(index)];\r\n        } else if (isPgon(ent_type)) {\r\n            const face_i: number = this.navPgonToFace(index);\r\n            return this.navFaceToWire(face_i);\r\n        } else if (isColl(ent_type)) {\r\n            const plines_i: number[] = this.navCollToPline(index);\r\n            const wires1_i: number[] = [].concat(...plines_i.map(pline_i => this.navAnyToWire(EEntType.PLINE, pline_i)));\r\n            const pgons_i: number[] = this.navCollToPgon(index);\r\n            const wires2_i: number[] = [].concat(...pgons_i.map(pgon_i => this.navAnyToWire(EEntType.PGON, pgon_i)));\r\n            return [...wires1_i, ...wires2_i];\r\n        }\r\n        throw new Error('Bad navigation: ' + ent_type + index);\r\n    }\r\n    /**\r\n     * Navigate from any level to the edges\r\n     * @param ent_type\r\n     * @param index\r\n     */\r\n    public navAnyToEdge(ent_type: EEntType, index: number): number[] {\r\n        if (isPosi(ent_type)) {\r\n            const verts_i: number[] = this.navPosiToVert(index);\r\n            return [].concat(...verts_i.map( vert_i => this.navVertToEdge(vert_i) ));\r\n        } else if (isVert(ent_type)) {\r\n            return this.navVertToEdge(index);\r\n        } else if (isTri(ent_type)) {\r\n            return [];\r\n        } else if (isEdge(ent_type)) {\r\n            return [index];\r\n        } else if (isWire(ent_type)) {\r\n            return this.navWireToEdge(index);\r\n        } else if (isFace(ent_type)) {\r\n            const wires_i: number[] = this.navFaceToWire(index);\r\n            return [].concat(...wires_i.map(wire_i => this.navWireToEdge(wire_i)));\r\n        } else if (isPoint(ent_type)) {\r\n            return [];\r\n        } else if (isPline(ent_type)) {\r\n            const wire_i: number = this.navPlineToWire(index);\r\n            return this.navAnyToEdge(EEntType.WIRE, wire_i);\r\n        } else if (isPgon(ent_type)) {\r\n            const face_i: number = this.navPgonToFace(index);\r\n            return this.navAnyToEdge(EEntType.FACE, face_i);\r\n        } else if (isColl(ent_type)) {\r\n            const plines_i: number[] = this.navCollToPline(index);\r\n            const edges1_i: number[] = [].concat(plines_i.map( pline_i => this.navAnyToEdge(EEntType.PLINE, pline_i) ));\r\n            const pgons_i:  number[] = this.navCollToPgon(index);\r\n            const edges2_i: number[] = [].concat(pgons_i.map( pgon_i => this.navAnyToEdge(EEntType.PGON, pgon_i) ));\r\n            return [...edges1_i, ...edges2_i];\r\n        }\r\n        throw new Error('Bad navigation: ' + ent_type + index);\r\n    }\r\n    /**\r\n     * Navigate from any level to the vertices\r\n     * @param ent_type\r\n     * @param index\r\n     */\r\n    public navAnyToVert(ent_type: EEntType, index: number): number[] {\r\n        if (isPosi(ent_type)) {\r\n            return this.navPosiToVert(index);\r\n        } else if (isVert(ent_type)) {\r\n            return [index];\r\n        } else if (isTri(ent_type)) {\r\n            return this.navTriToVert(index);\r\n        } else if (isEdge(ent_type)) {\r\n            return this.navEdgeToVert(index);\r\n        } else if (isWire(ent_type)) {\r\n            return this.getWireVerts(index); // avoids duplicate verts\r\n        } else if (isFace(ent_type)) {\r\n            const wires_i: number[] = this.navFaceToWire(index);\r\n            return [].concat(...wires_i.map(wire_i => this.getWireVerts(wire_i))); // avoids duplicate verts\r\n        } else if (isPoint(ent_type)) {\r\n            return  [this.navPointToVert(index)];\r\n        } else if (isPline(ent_type)) {\r\n            const wire_i: number = this.navPlineToWire(index);\r\n            return this.navAnyToVert(EEntType.WIRE, wire_i);\r\n        } else if (isPgon(ent_type)) {\r\n            const face_i: number = this.navPgonToFace(index);\r\n            return this.navAnyToVert(EEntType.FACE, face_i);\r\n        } else if (isColl(ent_type)) {\r\n            const points_i: number[] = this.navCollToPoint(index);\r\n            const verts1_i: number[] = [].concat(points_i.map( point_i => this.navAnyToVert(EEntType.POINT, point_i) ));\r\n            const plines_i: number[] = this.navCollToPline(index);\r\n            const verts2_i: number[] = [].concat(plines_i.map( pline_i => this.navAnyToVert(EEntType.PLINE, pline_i) ));\r\n            const pgons_i:  number[] = this.navCollToPgon(index);\r\n            const verts3_i: number[] = [].concat(pgons_i.map( pgon_i => this.navAnyToVert(EEntType.PGON, pgon_i) ));\r\n            return [...verts1_i, ...verts2_i, ...verts3_i];\r\n        }\r\n        throw new Error('Bad navigation: ' + ent_type + index);\r\n    }\r\n    /**\r\n     * Navigate from any level to the positions\r\n     * @param ent_type\r\n     * @param index\r\n     */\r\n    public navAnyToPosi(ent_type: EEntType, index: number): number[] {\r\n        if (isPosi(ent_type)) { return [index]; }\r\n        const verts_i: number[] = this.navAnyToVert(ent_type, index);\r\n        const posis_i: number[] = verts_i.map(vert_i => this.navVertToPosi(vert_i));\r\n        return Array.from(new Set(posis_i)); // remove duplicates\r\n    }\r\n    // ============================================================================\r\n    // Navigate from any to any, general method\r\n    // ============================================================================\r\n    /**\r\n     * Navigate from any level down to the positions\r\n     * @param index\r\n     */\r\n    public navAnyToAny(from_ets: EEntType, to_ets: EEntType, index: number): number[] {\r\n        // same level\r\n        if (from_ets === to_ets) { return [index]; }\r\n        // from -> to\r\n        switch (to_ets) {\r\n            case EEntType.POSI:\r\n                return this.navAnyToPosi(from_ets, index);\r\n            case EEntType.VERT:\r\n                return this.navAnyToVert(from_ets, index);\r\n            case EEntType.EDGE:\r\n                return this.navAnyToEdge(from_ets, index);\r\n            case EEntType.WIRE:\r\n                return this.navAnyToWire(from_ets, index);\r\n            case EEntType.FACE:\r\n                return this.navAnyToFace(from_ets, index);\r\n            case EEntType.POINT:\r\n                return this.navAnyToPoint(from_ets, index);\r\n            case EEntType.PLINE:\r\n                return this.navAnyToPline(from_ets, index);\r\n            case EEntType.PGON:\r\n                return this.navAnyToPgon(from_ets, index);\r\n            case EEntType.COLL:\r\n                return this.navAnyToColl(from_ets, index);\r\n            default:\r\n                throw new Error('Bad navigation: ' + to_ets + index);\r\n        }\r\n    }\r\n    // ============================================================================\r\n    // Other methods\r\n    // ============================================================================\r\n    /**\r\n     * Get the welded neighbour vertices of a set of vertices.\r\n     * @param ent_type\r\n     * @param index\r\n     */\r\n    public neighbours(from_ets: EEntType, to_ets: EEntType, index: number): number[] {\r\n        const verts_i: number[] = this.navAnyToVert(from_ets, index);\r\n        const posis_i: number[] = this.navAnyToPosi(from_ets, index);\r\n        const neighbour_ents_i: Set<number> = new Set();\r\n        for (const posi_i of posis_i) {\r\n            const found_verts_i: number[] = this.navPosiToVert(posi_i);\r\n            for (const found_vert_i of found_verts_i) {\r\n                if (verts_i.indexOf(found_vert_i) === -1) {\r\n                    const found_ents_i: number[] = this.navAnyToAny(EEntType.VERT, to_ets, found_vert_i);\r\n                    found_ents_i.forEach( found_ent_i => neighbour_ents_i.add(found_ent_i));\r\n                }\r\n            }\r\n        }\r\n        return Array.from(neighbour_ents_i);\r\n    }\r\n}\r\n","import { GIGeom } from './GIGeom';\r\nimport { IGeomArrays, TTri, TEdge, TPgon, TPoint } from './common';\r\nimport { GIAttribs } from './GIAttribs';\r\n\r\n/**\r\n * Class for geometry.\r\n */\r\nexport class GIGeomThreejs {\r\n    private _geom: GIGeom;\r\n    private _geom_arrays: IGeomArrays;\r\n    /**\r\n     * Creates an object to store the geometry data.\r\n     * @param geom The GIGeom obect\r\n     * @param geom_arrays The geometry arrays\r\n     */\r\n    constructor(geom: GIGeom, geom_arrays: IGeomArrays) {\r\n        this._geom = geom;\r\n        this._geom_arrays = geom_arrays;\r\n    }\r\n    // ============================================================================\r\n    // ThreeJS\r\n    // Get arrays for threejs, these retrun arrays of indexes to positions\r\n    // For a method to get the array of positions, see the attrib class\r\n    // getSeqCoords()\r\n    // ============================================================================\r\n    /**\r\n     * Returns a flat list of all vertices.\r\n     * The indices in the list point to the sequential coordinates.\r\n     */\r\n    public get3jsVerts(): number[] {\r\n        return this._geom_arrays.dn_verts_posis;\r\n    }\r\n    /**\r\n     * Returns a flat list of the sequence of verices for all the triangles.\r\n     * This list will be assumed to be in pairs.\r\n     * The indices in the list point to the vertices.\r\n     */\r\n    public get3jsTris(): [number[], Map<number, number>] {\r\n        const tris_verts_i_filt: TTri[] = [];\r\n        const tri_select_map: Map<number, number> = new Map();\r\n        for (let gi_i = 0; gi_i < this._geom_arrays.dn_tris_verts.length; gi_i++) {\r\n            const tri_verts_i: TTri = this._geom_arrays.dn_tris_verts[gi_i];\r\n            if (tri_verts_i !== null) {\r\n                const tjs_i = tris_verts_i_filt.push(tri_verts_i) - 1;\r\n                tri_select_map.set(tjs_i, gi_i);\r\n            }\r\n        }\r\n        // @ts-ignore\r\n        return [tris_verts_i_filt.flat(1), tri_select_map];\r\n\r\n        //return this._geom_arrays.dn_tris_verts.flat(1);\r\n        // return [].concat(...this._geom_arrays.dn_tris_verts);\r\n    }\r\n    /**\r\n     * Returns a flat list of the sequence of verices for all the edges.\r\n     * This list will be assumed to be in pairs.\r\n     * The indices in the list point to the vertices.\r\n     */\r\n    public get3jsEdges(): [number[], Map<number, number>] {\r\n        const edges_verts_i_filt: TEdge[] = [];\r\n        const edge_select_map: Map<number, number> = new Map();\r\n        for (let gi_i = 0; gi_i < this._geom_arrays.dn_edges_verts.length; gi_i++) {\r\n            const edge_verts_i: TEdge = this._geom_arrays.dn_edges_verts[gi_i];\r\n            if (edge_verts_i !== null) {\r\n                const tjs_i = edges_verts_i_filt.push(edge_verts_i) - 1;\r\n                edge_select_map.set(tjs_i, gi_i);\r\n            }\r\n        }\r\n        // @ts-ignore\r\n        return [edges_verts_i_filt.flat(1), edge_select_map];\r\n\r\n        // @ts-ignore\r\n        //return this._geom_arrays.dn_edges_verts.flat(1);\r\n        // return [].concat(...this._geom_arrays.dn_edges_verts);\r\n    }\r\n    /**\r\n     * Returns a flat list of the sequence of verices for all the points.\r\n     * The indices in the list point to the vertices.\r\n     */\r\n    public get3jsPoints(): [number[], Map<number, number>] {\r\n        const points_verts_i_filt: TPoint[] = [];\r\n        const point_select_map: Map<number, number> = new Map();\r\n        for (let gi_i = 0; gi_i < this._geom_arrays.dn_points_verts.length; gi_i++) {\r\n            const point_verts_i: TPoint = this._geom_arrays.dn_points_verts[gi_i];\r\n            if (point_verts_i !== null) {\r\n                const tjs_i = points_verts_i_filt.push(point_verts_i) - 1;\r\n                point_select_map.set(tjs_i, gi_i);\r\n            }\r\n        }\r\n        return [points_verts_i_filt, point_select_map];\r\n        // return this._geom_arrays.dn_points_verts;\r\n    }\r\n}\r\n","import { GIGeom } from './GIGeom';\r\nimport { GIAttribs } from './GIAttribs';\r\nimport { EAttribNames, IModelData, IGeomData, IAttribsData, EEntType, IGeomPack, Txyz } from './common';\r\nimport { IThreeJS } from './ThreejsJSON';\r\n/**\r\n * Geo-info model class.\r\n */\r\nexport class GIModel {\r\n    [x: string]: any; // TODO: What is this???\r\n    public  geom: GIGeom;\r\n    public  attribs: GIAttribs;\r\n    /**\r\n     * Creates a model.\r\n     * @param model_data The JSON data\r\n     */\r\n    constructor(model_data?: IModelData) {\r\n        this.geom = new GIGeom(this);\r\n        this.attribs = new GIAttribs(this);\r\n        if (model_data) {\r\n            this.addData(model_data);\r\n        }\r\n    }\r\n    /**\r\n     * Sets the data in this model from JSON data.\r\n     * The existing data in the model is deleted.\r\n     * @param model_data The JSON data.\r\n     */\r\n    public addData (model_data: IModelData): IGeomPack {\r\n        this.attribs.add.addData(model_data); // warning: must be before this.geom.add.addData()\r\n        return this.geom.add.addData(model_data.geometry);\r\n    }\r\n    /**\r\n     * Adds data to this model from a GI model.\r\n     * The existing data in the model is not deleted.\r\n     * @param model_data The GI model.\r\n     */\r\n    public merge(model: GIModel): IGeomPack {\r\n        return this.addData(model.getData());\r\n    }\r\n    /**\r\n     * Returns the JSON data for this model.\r\n     */\r\n    public getData(): IModelData {\r\n        return {\r\n            geometry: this.geom.getData(),\r\n            attributes: this.attribs.getData()\r\n        };\r\n    }\r\n    /**\r\n     * Returns the JSON data for the geometry in this model.\r\n     */\r\n    public getGeomData(): IGeomData {\r\n        return this.geom.getData();\r\n    }\r\n    /**\r\n     * Returns the JSON data for the attributes in this model.\r\n     */\r\n    public getAttribsData(): IAttribsData {\r\n        return this.attribs.getData();\r\n    }\r\n    /**\r\n     * Generate a default color if none exists.\r\n     */\r\n    private _generateColors(): number[] {\r\n        const colors = [];\r\n        const numEnts = this.geom.query.numEnts(EEntType.VERT);\r\n        for (let index = 0; index < numEnts; index++) {\r\n            colors.push(1, 1, 1);\r\n        }\r\n        return colors;\r\n    }\r\n    /**\r\n     * Generate default normals if non exist.\r\n     */\r\n    private _generateNormals(): number[] {\r\n        const normals = [];\r\n        const numEnts = this.geom.query.numEnts(EEntType.VERT);\r\n        for (let index = 0; index < numEnts; index++) {\r\n            normals.push(0, 0, 0);\r\n        }\r\n        return normals;\r\n    }\r\n    /**\r\n     * Returns arrays for visualization in Threejs.\r\n     */\r\n    public get3jsData(): IThreeJS {\r\n        // get the attribs at the vertex level\r\n        const coords_values: number[] = this.attribs.threejs.get3jsSeqVertsCoords();\r\n        let normals_values: number[] = this.attribs.threejs.get3jsSeqVertsAttrib(EAttribNames.NORMAL);\r\n        let colors_values: number[] = this.attribs.threejs.get3jsSeqVertsAttrib(EAttribNames.COLOUR);\r\n        // add normals and colours\r\n        if (!normals_values) {\r\n            normals_values = this._generateNormals();\r\n        }\r\n        if (!colors_values) {\r\n            colors_values = this._generateColors();\r\n        }\r\n        // get the indices of the vertices for edges, points and triangles\r\n        const [tris_verts_i, triangle_select_map]: [number[], Map<number, number>] = this.geom.threejs.get3jsTris();\r\n        const [edges_verts_i, edge_select_map]: [number[], Map<number, number>] = this.geom.threejs.get3jsEdges();\r\n        const [points_verts_i, point_select_map]: [number[], Map<number, number>] = this.geom.threejs.get3jsPoints();\r\n        // return an object containing all the data\r\n        return {\r\n            positions: coords_values,\r\n            normals: normals_values,\r\n            colors: colors_values,\r\n            point_indices: points_verts_i,\r\n            point_select_map: point_select_map,\r\n            edge_indices: edges_verts_i,\r\n            edge_select_map: edge_select_map,\r\n            triangle_indices: tris_verts_i,\r\n            triangle_select_map: triangle_select_map\r\n        };\r\n    }\r\n}\r\n","import { GIAttribMap } from './GIAttribMap';\r\n\r\n// some constants\r\nexport const XYPLANE: TPlane = [[0, 0, 0], [1, 0, 0], [0, 1, 0]];\r\nexport const YZPLANE: TPlane = [[0, 0, 0], [0, 1, 0], [0, 0, 1]];\r\nexport const ZXPLANE: TPlane = [[0, 0, 0], [0, 0, 1], [1, 0, 0]];\r\n\r\nexport const YXPLANE: TPlane = [[0, 0, 0], [0, 1, 0], [1, 0, 0]];\r\nexport const ZYPLANE: TPlane = [[0, 0, 0], [0, 0, 1], [0, 1, 0]];\r\nexport const XZPLANE: TPlane = [[0, 0, 0], [1, 0, 0], [0, 0, 1]];\r\n\r\n// EEntType and an index\r\nexport type TEntTypeIdx = [EEntType, number];\r\n\r\n// Object for entities\r\nexport interface IGeomPack {\r\n    posis_i: number[];\r\n    points_i: number[];\r\n    plines_i: number[];\r\n    pgons_i: number[];\r\n    colls_i: number[];\r\n}\r\n\r\n// Types\r\nexport type TRay = [Txyz, Txyz]; // an origin and a direction vector\r\nexport type TPlane = [Txyz, Txyz, Txyz]; // an origin, an x vec and a y vec\r\nexport type TQuery = string;\r\nexport type TId = string;\r\nexport type TColor = [number, number, number]; // TODO replace with Txyz\r\nexport type TNormal = [number, number, number]; // TODO replace with xyz\r\nexport type TTexture = [number, number];\r\n\r\n// Types of entities\r\nexport enum EEntType {\r\n    POSI,\r\n    TRI,\r\n    VERT,\r\n    EDGE,\r\n    WIRE,\r\n    FACE,\r\n    POINT,\r\n    PLINE,\r\n    PGON,\r\n    COLL\r\n}\r\n\r\n// Types of entities\r\nexport enum EEntTypeStr {\r\n    'ps',\r\n    '_t',\r\n    '_v',\r\n    '_e',\r\n    '_w',\r\n    '_f',\r\n    'pt',\r\n    'pl',\r\n    'pg',\r\n    'co'\r\n}\r\n\r\nexport enum EEntStrToGeomArray {\r\n    'posis',\r\n    'dn_tris_verts',\r\n    'dn_verts_posis',\r\n    'dn_edges_verts',\r\n    'dn_wires_edges',\r\n    'dn_faces_wirestris',\r\n    'dn_points_verts',\r\n    'dn_plines_wires',\r\n    'dn_pgons_faces',\r\n    'dn_colls_objs'\r\n}\r\n\r\n/**\r\n * Attribute maps\r\n */\r\nexport interface IAttribsMaps {\r\n    ps: Map<string, GIAttribMap>;\r\n    _v: Map<string, GIAttribMap>;\r\n    _e: Map<string, GIAttribMap>;\r\n    _w: Map<string, GIAttribMap>;\r\n    _f: Map<string, GIAttribMap>;\r\n    pt: Map<string, GIAttribMap>;\r\n    pl: Map<string, GIAttribMap>;\r\n    pg: Map<string, GIAttribMap>;\r\n    co: Map<string, GIAttribMap>;\r\n}\r\n\r\n// Names of attributes\r\nexport enum EAttribNames {\r\n    COORDS =  'xyz',\r\n    NORMAL =  'normal',\r\n    COLOUR =   'rgb',\r\n    TEXTURE = 'uv',\r\n    NAME = 'name'\r\n}\r\n\r\n/**\r\n * The types of operators that can be used in a query.\r\n */\r\nexport enum EQueryOperatorTypes {\r\n    IS_EQUAL = '==',\r\n    IS_NOT_EQUAL = '!=',\r\n    IS_GREATER_OR_EQUAL = '>=',\r\n    IS_LESS_OR_EQUAL = '<=',\r\n    IS_GREATER = '>',\r\n    IS_LESS = '<',\r\n    EQUAL = '='\r\n}\r\n\r\n/**\r\n * A query component.\r\n * Each query can consist of multiple components.\r\n * Some examples of queries\r\n * @name == value\r\n * @name > value\r\n * @name[2] <= value\r\n */\r\nexport interface IQueryComponent {\r\n    attrib_name: string;\r\n    attrib_index: number;\r\n    attrib_value_str: string;\r\n    operator_type: EQueryOperatorTypes;\r\n}\r\n\r\n/**\r\n * A sort component.\r\n * Each sort can consist of multiple components.\r\n * Some examples of queries\r\n * @name\r\n * @name[2]\r\n */\r\nexport interface ISortComponent {\r\n    attrib_name: string;\r\n    attrib_index: number;\r\n}\r\n\r\nexport enum ESort {\r\n    'DESCENDING' = 'descending',\r\n    'ASCENDING' = 'ascending'\r\n}\r\n\r\n/**\r\n * Geom arrays\r\n */\r\nexport interface IGeomArrays {\r\n    num_posis: number;\r\n    dn_verts_posis: TVert[];\r\n    dn_tris_verts: TTri[];\r\n    dn_edges_verts: TEdge[];\r\n    dn_wires_edges: TWire[];\r\n    dn_faces_wirestris: TFace[];\r\n    dn_points_verts: TPoint[];\r\n    dn_plines_wires: TPline[];\r\n    dn_pgons_faces: TPgon[];\r\n    dn_colls_objs: TColl[];\r\n    up_posis_verts: number[][]; // one to many\r\n    up_tris_faces: number[];\r\n    up_verts_edges: number[][]; // one to two\r\n    up_verts_tris: number[][]; // one to many\r\n    up_verts_points: number[];\r\n    up_edges_wires: number[];\r\n    up_wires_faces: number[];\r\n    up_wires_plines: number[];\r\n    up_faces_pgons: number[];\r\n    up_points_colls: number[][]; // one to many\r\n    up_plines_colls: number[][]; // one to many\r\n    up_pgons_colls: number[][]; // one to many\r\n}\r\n\r\n// copy geometry\r\nexport interface IGeomCopy {\r\n    points: number[];\r\n    plines: number[];\r\n    pgons: number[];\r\n    colls: number[];\r\n}\r\n// ================================================================================================\r\n// JSON DATA\r\n// ================================================================================================\r\n\r\n// enums\r\nexport enum EAttribDataTypeStrs {\r\n    // INT = 'Int',\r\n    FLOAT = 'Float',\r\n    STRING = 'String'\r\n}\r\n\r\n// types\r\nexport type Txyz = [number, number, number]; // in use\r\nexport type TPosi = number;\r\nexport type TTri = [number, number, number]; // [position, position, position]\r\nexport type TVert = number; // positions\r\nexport type TEdge = [number, number]; // [vertex, vertex]\r\nexport type TWire = number[]; // [edge, edge,....]\r\nexport type TFace = [number[], number[]]; // [[wire, ....], [triangle, ...]]\r\nexport type TPoint = number; // [vertex,....]\r\nexport type TPline = number; // [wire,....]\r\nexport type TPgon = number; // [face,....]\r\nexport type TColl = [number, number[], number[], number[]]; // [parent, [point, ...], [polyline, ...], [polygon, ....]]\r\nexport type TEntity = TTri | TVert | TEdge | TWire | TFace | TPoint | TPline | TPgon | TColl;\r\nexport type TAttribDataTypes = string | string[] | number | number[];\r\nexport type TAttribValuesArr = Array<[number[], TAttribDataTypes]>;\r\n// interfaces for JSON data\r\n\r\nexport interface IGeomData {\r\n    num_positions: number;\r\n    triangles: TTri[];\r\n    vertices: TVert[];\r\n    edges: TEdge[];\r\n    wires: TWire[];\r\n    faces: TFace[];\r\n    points: TPoint[];\r\n    polylines: TPline[];\r\n    polygons: TPgon[];\r\n    collections: TColl[];\r\n}\r\nexport interface IAttribData {\r\n    name: string;\r\n    data_type: EAttribDataTypeStrs;\r\n    data_size: number;\r\n    data: TAttribValuesArr;\r\n}\r\nexport interface IAttribsData {\r\n    positions: IAttribData[];\r\n    vertices: IAttribData[];\r\n    edges: IAttribData[];\r\n    wires: IAttribData[];\r\n    faces: IAttribData[];\r\n    points: IAttribData[];\r\n    polylines: IAttribData[];\r\n    polygons: IAttribData[];\r\n    collections: IAttribData[];\r\n}\r\nexport interface IModelData {\r\n    geometry: IGeomData;\r\n    attributes: IAttribsData;\r\n}\r\n","import { GIModel } from './GIModel';\r\nimport { TColor, TNormal, TTexture, EAttribNames, Txyz, EEntType} from './common';\r\n/**\r\n * Export to obj\r\n */\r\nexport function exportObj(model: GIModel): string {\r\n    const h_str = '# File generated by Mobius.\\n';\r\n    // the order of data is 1) vertex, 2) texture, 3) normal\r\n    let v_str = '';\r\n    let vt_str = '';\r\n    let vn_str = '';\r\n    let f_str = '';\r\n    let l_str = '';\r\n    // do we have color, texture, normal?\r\n    const has_color_attrib: boolean = model.attribs.query.hasAttrib(EEntType.VERT, EAttribNames.COLOUR);\r\n    const has_normal_attrib: boolean = model.attribs.query.hasAttrib(EEntType.VERT, EAttribNames.NORMAL);\r\n    const has_texture_attrib: boolean = model.attribs.query.hasAttrib(EEntType.VERT, EAttribNames.TEXTURE);\r\n    const posis_i: number[] = model.geom.query.getEnts(EEntType.POSI);\r\n    const verts_i: number[] = model.geom.query.getEnts(EEntType.VERT);\r\n    // positions\r\n    if (has_color_attrib) {\r\n        for (const vert_i of verts_i) {\r\n            const color: TColor = model.attribs.query.getAttribValue(EEntType.VERT, EAttribNames.COLOUR, vert_i) as TColor;\r\n            const coord: Txyz = model.attribs.query.getVertCoords(vert_i);\r\n            v_str += 'v ' + coord.map( v => v.toString() ).join(' ') + color.map( c => c.toString() ).join(' ') + '\\n';\r\n        }\r\n    } else {\r\n        for (const posi_i of posis_i) {\r\n            const coord: Txyz = model.attribs.query.getPosiCoords(posi_i);\r\n            v_str += 'v ' + coord.map( v => v.toString() ).join(' ') + '\\n';\r\n        }\r\n    }\r\n    // textures, vt\r\n    if (has_texture_attrib) {\r\n        for (const vert_i of verts_i) {\r\n            const texture: TTexture = model.attribs.query.getAttribValue(EEntType.VERT, EAttribNames.TEXTURE, vert_i) as TTexture;\r\n            vt_str += 'v ' + texture.map( v => v.toString() ).join(' ') + '\\n';\r\n        }\r\n    }\r\n    // normals, vn\r\n    if (has_normal_attrib) {\r\n        for (const vert_i of verts_i) {\r\n            const normal: TNormal = model.attribs.query.getAttribValue(EEntType.VERT, EAttribNames.NORMAL, vert_i) as TNormal;\r\n            vn_str += 'v ' + normal.map( v => v.toString() ).join(' ') + '\\n';\r\n        }\r\n    }\r\n    // polygons, f\r\n    const pgons_i: number[] = model.geom.query.getEnts(EEntType.PGON);\r\n    for (const pgon_i of pgons_i) {\r\n        const pgon_verts_i_outer: number[] = model.geom.query.navAnyToVert(EEntType.PGON, pgon_i);\r\n        // const verts_i_outer = verts_i[0];\r\n        // TODO what about holes\r\n        if (has_texture_attrib) {\r\n            // TODO\r\n        }\r\n        if (has_normal_attrib) {\r\n            // TODO\r\n        }\r\n        if (has_color_attrib) {\r\n            f_str += 'f ' + pgon_verts_i_outer.map( vert_i => (vert_i + 1).toString() ).join(' ') + '\\n';\r\n        } else {\r\n            f_str += 'f ' + pgon_verts_i_outer.map( vert_i => (model.geom.query.navVertToPosi(vert_i) + 1).toString() ).join(' ') + '\\n';\r\n        }\r\n    }\r\n    // polylines, l\r\n    const plines_i: number[] = model.geom.query.getEnts(EEntType.PLINE);\r\n    for (const pline_i of plines_i) {\r\n        const pline_verts_i: number[] = model.geom.query.navAnyToVert(EEntType.PLINE, pline_i);\r\n        l_str += 'l ' + pline_verts_i.map( vert_i => (vert_i + 1).toString() ).join(' ') + '\\n';\r\n    }\r\n    // result\r\n    return h_str + v_str + v_str + vt_str + vn_str + f_str + l_str;\r\n}\r\n","import { TId, EEntType, EEntTypeStr, TEntTypeIdx } from './common';\r\n\r\n// ============================================================================\r\nexport function getArrDepth(arr: any): number {\r\n    if (Array.isArray(arr)) {\r\n        return 1 + getArrDepth(arr[0]);\r\n    }\r\n    return 0;\r\n}\r\n// ============================================================================\r\nexport function idsMakeFromIndicies(ent_type: EEntType, idxs: number|number[]|number[][]): TId|TId[]|TId[][] {\r\n    const depth: number = getArrDepth(idxs);\r\n    if (depth === 0) {\r\n        const idx: number = idxs as number;\r\n        return EEntTypeStr[ent_type as EEntType] + idx as TId;\r\n    } else if (depth === 1) {\r\n        const idxs_arr: number[] = idxs as number[];\r\n        if (idxs_arr.length === 0) { return []; } //  deal with empty array\r\n        return idxs_arr.map( idx => idsMakeFromIndicies(ent_type, idx) ) as TId[];\r\n    } else { // depth === 2\r\n        const idxs_arrs: number[][] = idxs as number[][];\r\n        return idxs_arrs.map( idxs_arr => idsMakeFromIndicies(ent_type, idxs_arr) ) as TId[][];\r\n    }\r\n}\r\nexport function idsMake(ent_type_idxs: TEntTypeIdx|TEntTypeIdx[]|TEntTypeIdx[][]): TId|TId[]|TId[][] {\r\n    const depth: number = getArrDepth(ent_type_idxs);\r\n    if (depth === 1) {\r\n        if (ent_type_idxs.length === 0) { return []; } //  deal with empty array\r\n        const ent_type_idx: TEntTypeIdx = ent_type_idxs as TEntTypeIdx;\r\n        return EEntTypeStr[ent_type_idx[0] as EEntType] + ent_type_idx[1] as TId;\r\n    } else if (depth === 2) {\r\n        const ent_type_idxs_arr: TEntTypeIdx[] = ent_type_idxs as TEntTypeIdx[];\r\n        return ent_type_idxs_arr.map( ent_type_idx => idsMake(ent_type_idx) ) as TId[];\r\n    } else { // depth === 3\r\n        const ent_type_idxs_arrs: TEntTypeIdx[][] = ent_type_idxs as TEntTypeIdx[][];\r\n        return ent_type_idxs_arrs.map( ent_type_idxs_arr => idsMake(ent_type_idxs_arr) ) as TId[][];\r\n    }\r\n}\r\nexport function idsBreak(ids: TId|TId[]|TId[][]): TEntTypeIdx|TEntTypeIdx[]|TEntTypeIdx[][] {\r\n    const depth: number = getArrDepth(ids);\r\n    if (depth === 0) {\r\n        const id: TId = ids as TId;\r\n        const ent_type_str: string = id.slice(0, 2);\r\n        const ent_type: EEntType = EEntTypeStr[ent_type_str];\r\n        const index: number = Number(id.slice(2));\r\n        return [ent_type, index];\r\n    } else if (depth === 1) {\r\n        const ids_arr: TId[] = ids as TId[];\r\n        return ids_arr.map( id => idsBreak(id) ) as TEntTypeIdx[];\r\n    } else { // depth === 2\r\n        const ids_arr: TId[][] = ids as TId[][];\r\n        return ids_arr.map( id => idsBreak(id) ) as TEntTypeIdx[][];\r\n    }\r\n}\r\nexport function idIndicies(ents_arr: TEntTypeIdx[]): number[] {\r\n    return ents_arr.map( ents => ents[1] );\r\n}\r\n// ============================================================================\r\nexport function isPosi(ent_type: EEntType): boolean {\r\n    return ent_type === EEntType.POSI;\r\n}\r\nexport function isVert(ent_type: EEntType): boolean {\r\n    return ent_type === EEntType.VERT;\r\n}\r\nexport function isTri(ent_type: EEntType): boolean {\r\n    return ent_type === EEntType.TRI;\r\n}\r\nexport function isEdge(ent_type: EEntType): boolean {\r\n    return ent_type === EEntType.EDGE;\r\n}\r\nexport function isWire(ent_type: EEntType): boolean {\r\n    return ent_type === EEntType.WIRE;\r\n}\r\nexport function isFace(ent_type: EEntType): boolean {\r\n    return ent_type === EEntType.FACE;\r\n}\r\nexport function isPoint(ent_type: EEntType): boolean {\r\n    return ent_type === EEntType.POINT;\r\n}\r\nexport function isPline(ent_type: EEntType): boolean {\r\n    return ent_type === EEntType.PLINE;\r\n}\r\nexport function isPgon(ent_type: EEntType): boolean {\r\n    return ent_type === EEntType.PGON;\r\n}\r\nexport function isColl(ent_type: EEntType): boolean {\r\n    return ent_type === EEntType.COLL;\r\n}\r\n// more general test\r\nexport function isTopo(ent_type: EEntType): boolean {\r\n    if (ent_type === EEntType.VERT) { return true; }\r\n    if (ent_type === EEntType.EDGE) { return true; }\r\n    if (ent_type === EEntType.WIRE) { return true; }\r\n    if (ent_type === EEntType.FACE) { return true; }\r\n    return false;\r\n}\r\nexport function isObj(ent_type: EEntType): boolean {\r\n    if (ent_type === EEntType.PGON) { return true; }\r\n    if (ent_type === EEntType.PLINE) { return true; }\r\n    if (ent_type === EEntType.POINT) { return true; }\r\n    return false;\r\n}\r\nexport function isDim0(ent_type: EEntType): boolean {\r\n    if (ent_type === EEntType.POSI) { return true; }\r\n    if (ent_type === EEntType.VERT) { return true; }\r\n    if (ent_type === EEntType.POINT) { return true; }\r\n    return false;\r\n}\r\nexport function isDim1(ent_type: EEntType): boolean {\r\n    if (ent_type === EEntType.EDGE) { return true; }\r\n    if (ent_type === EEntType.PLINE) { return true; }\r\n    return false;\r\n}\r\nexport function isDim2(ent_type: EEntType): boolean {\r\n    if (ent_type === EEntType.FACE) { return true; }\r\n    if (ent_type === EEntType.PGON) { return true; }\r\n    return false;\r\n}\r\n","import { GIModel } from './GIModel';\r\nimport { TNormal, TTexture, EAttribNames, Txyz, EEntType } from './common';\r\n/**\r\n * Import to obj\r\n */\r\nexport function importObj(obj_str: string): GIModel {\r\n    const model: GIModel = new GIModel();\r\n    enum EObjLine {\r\n        OBJ_COMMENT = '#',\r\n        OBJ_COORD = 'v ',\r\n        OBJ_TEXTURE = 'vt ',\r\n        OBJ_NORMAL = 'vn ',\r\n        OBJ_FACE = 'f ',\r\n        OBJ_LINE = 'l '\r\n    }\r\n    const obj_lines: string[] = obj_str.split(/\\r?\\n/);\r\n    const coords: Txyz[] = [];\r\n    const normals: TNormal[] = [];\r\n    const textures: TTexture[] = [];\r\n    const faces: number[][][] = [];\r\n    const plines: number[][] = [];\r\n    for (const obj_line of obj_lines) {\r\n        if (obj_line.startsWith( EObjLine.OBJ_COMMENT )) {\r\n            // Do not do anything\r\n        } else if (obj_line.startsWith( EObjLine.OBJ_COORD )) {\r\n            const coord: Txyz = obj_line.split(' ').slice(1, 4).map( v => parseFloat(v) ) as Txyz;\r\n            coords.push(coord);\r\n        } else if (obj_line.startsWith( EObjLine.OBJ_TEXTURE )) {\r\n            const normal: TNormal = obj_line.split(' ').slice(1, 4).map( v => parseFloat(v) ) as TNormal;\r\n            normals.push(normal);\r\n        } else if (obj_line.startsWith( EObjLine.OBJ_NORMAL )) {\r\n            const texture: TTexture = obj_line.split(' ').slice(1, 3).map( v => parseFloat(v) ) as TTexture;\r\n            textures.push(texture);\r\n        } else if (obj_line.startsWith( EObjLine.OBJ_FACE )) {\r\n            const face_strs: string[] = obj_line.split(' ').slice(1);\r\n            const v_indexes: number[] = [];\r\n            const t_indexes: number[] = [];\r\n            const n_indexes: number[] = [];\r\n            face_strs.forEach( face_str => {\r\n                const face_sub_indexes: number[] = face_str.split('/').map( str => parseInt(str, 10) - 1 );\r\n                v_indexes.push(face_sub_indexes[0]);\r\n                t_indexes.push(face_sub_indexes[1]);\r\n                n_indexes.push(face_sub_indexes[2]);\r\n            });\r\n            faces.push([v_indexes, t_indexes, n_indexes]);\r\n        } else if (obj_line.startsWith( EObjLine.OBJ_LINE )) {\r\n            const pline: number[] = obj_line.split(' ').slice(1).map( v => parseInt(v, 10) - 1 ) as TTexture;\r\n            plines.push(pline);\r\n        } else {\r\n            console.log('Found unrecognised line of data in OBJ file');\r\n        }\r\n    }\r\n    for (const coord of coords) {\r\n        const posi_i: number = model.geom.add.addPosition();\r\n        model.attribs.add.setAttribValue(EEntType.POSI, posi_i, EAttribNames.COORDS, coord);\r\n    }\r\n    for (const face of faces) {\r\n        console.log(face[0]);\r\n        const face_i: number = model.geom.add.addPgon(face[0]);\r\n        // TODO: texture uv\r\n        // TODO: normals\r\n    }\r\n    return model;\r\n}\r\n","import * as GIAttribs from './GIAttribs';\r\nimport * as GIModel from './GIModel';\r\nimport * as GICommon from './common';\r\nexport {GIAttribs, GIModel, GICommon};\r\n","import * as three from 'three';\r\ntype Txyz = [number, number, number];\r\nconst EPS = 1e-6;\r\n\r\nexport function distance(v1: Txyz, v2: Txyz): number {\r\n    const vec: Txyz = [\r\n        v1[0] - v2[0],\r\n        v1[1] - v2[1],\r\n        v1[2] - v2[2],\r\n    ];\r\n    return Math.hypot(...vec);\r\n}\r\n","import * as three from 'three';\r\nimport { vecNorm, vecCross } from './vectors';\r\nimport { Vector3 } from 'three';\r\ntype Txyz = [number, number, number]; // x, y, z\r\ntype TPlane = [Txyz, Txyz, Txyz]; // origin, xaxis, yaxis\r\nconst EPS = 1e-6;\r\n\r\nexport function multMatrix(xyz: Txyz, m: three.Matrix4): Txyz {\r\n    const v2: three.Vector3 = new three.Vector3(...xyz as Txyz);\r\n    v2.applyMatrix4(m);\r\n    return v2.toArray() as Txyz;\r\n}\r\n\r\nexport function mirrorMatrix(origin: Txyz, normal: Txyz): three.Matrix4 {\r\n    // plane normal\r\n    const [a, b, c]: number[] = vecNorm(normal);\r\n    // rotation matrix\r\n    const matrix_mirror: three.Matrix4 = new three.Matrix4();\r\n    matrix_mirror.set(\r\n        1 - (2 * a * a), -2 * a * b, -2 * a * c, 0,\r\n        -2 * a * b, 1 - (2 * b * b), -2 * b * c, 0,\r\n        -2 * a * c, -2 * b * c, 1 - (2 * c * c), 0,\r\n        0, 0, 0, 1\r\n    );\r\n    // translation matrix\r\n    const matrix_trn1: three.Matrix4 = new three.Matrix4();\r\n    matrix_trn1.makeTranslation(-origin[0], -origin[1], -origin[2]);\r\n    const matrix_trn2: three.Matrix4 = new three.Matrix4();\r\n    matrix_trn2.makeTranslation(origin[0], origin[1], origin[2]);\r\n    // final matrix\r\n    const move_mirror_move: three.Matrix4 = matrix_trn2.multiply(matrix_mirror.multiply(matrix_trn1));\r\n    // do the xform\r\n    return move_mirror_move;\r\n}\r\n\r\nexport function rotateMatrix(origin: Txyz, axis: Txyz, angle: number): three.Matrix4 {\r\n    // norm the axis\r\n    axis = vecNorm(axis);\r\n    // rotation matrix\r\n    const matrix_rot: three.Matrix4 = new three.Matrix4();\r\n    matrix_rot.makeRotationAxis(new three.Vector3(...axis), angle);\r\n    // translation matrix\r\n    const matrix_trn1: three.Matrix4 = new three.Matrix4();\r\n    matrix_trn1.makeTranslation(-origin[0], -origin[1], -origin[2]);\r\n    const matrix_trn2: three.Matrix4 = new three.Matrix4();\r\n    matrix_trn2.makeTranslation(origin[0], origin[1], origin[2]);\r\n    // final matrix\r\n    const move_rot_move: three.Matrix4 = matrix_trn2.multiply(matrix_rot.multiply(matrix_trn1));\r\n    // do the xform\r\n    return move_rot_move;\r\n}\r\n\r\nexport function scaleMatrix(origin: Txyz|TPlane, factor: Txyz): three.Matrix4 {\r\n    const origin_point: Txyz = (Array.isArray(origin[0])) ? origin[0] : origin as Txyz;\r\n    // TODO deal with the case where origin is a plane\r\n    // scale matrix\r\n    const matrix_scale: three.Matrix4 = new three.Matrix4();\r\n    matrix_scale.makeScale(factor[0], factor[1], factor[2]);\r\n    // translation matrix\r\n    const matrix_trn1: three.Matrix4 = new three.Matrix4();\r\n    matrix_trn1.makeTranslation(-origin_point[0], -origin_point[1], -origin_point[2]);\r\n    const matrix_trn2: three.Matrix4 = new three.Matrix4();\r\n    matrix_trn2.makeTranslation(origin_point[0], origin_point[1], origin_point[2]);\r\n    // final matrix\r\n    const move_scale_move: three.Matrix4 = matrix_trn2.multiply(matrix_scale.multiply(matrix_trn1));\r\n    // do the xform\r\n    return move_scale_move;\r\n}\r\n\r\nexport function xfromSourceTargetMatrix(source_plane: TPlane, target_plane: TPlane): three.Matrix4 {\r\n    // matrix to xform from source to gcs, then from gcs to target\r\n    const matrix_source_to_gcs: three.Matrix4 = _xformMatrixFromXYZVectors(\r\n        source_plane[0], source_plane[1], source_plane[2], true);\r\n    const matrix_gcs_to_target: three.Matrix4 = _xformMatrixFromXYZVectors(\r\n        target_plane[0], target_plane[1], target_plane[2], false);\r\n    // final matrix\r\n    const xform: three.Matrix4 = matrix_gcs_to_target.multiply(matrix_source_to_gcs);\r\n    // return the matrix\r\n    return xform;\r\n}\r\n\r\n// ================================================================================================\r\n// Helper functions\r\n// ================================================================================================\r\n\r\nfunction _crossVectors(v1: three.Vector3, v2: three.Vector3, norm: boolean = false): three.Vector3 {\r\n    const v3: three.Vector3 = new three.Vector3();\r\n    v3.crossVectors(v1, v2);\r\n    if (norm) { v3.normalize(); }\r\n    return v3;\r\n}\r\n\r\nfunction _dotVectors(v1: three.Vector3, v2: three.Vector3): number {\r\n    return v1.dot(v2);\r\n}\r\n\r\nfunction _xformMatrixFromXYZVectors(o: Txyz, xaxis: Txyz, xyplane: Txyz, neg: boolean): three.Matrix4 {\r\n    const x_vec: three.Vector3 = new three.Vector3(...xaxis).normalize();\r\n    const xyplane_vec: three.Vector3 = new three.Vector3(...xyplane).normalize();\r\n    const z_vec: three.Vector3 = _crossVectors(x_vec, xyplane_vec);\r\n    const y_vec: three.Vector3 = _crossVectors(z_vec, x_vec);\r\n    if (neg) {\r\n        return _xformMatrixNeg(new three.Vector3(...o), x_vec, y_vec);\r\n    }\r\n    return xformMatrixPos(new three.Vector3(...o), x_vec, y_vec);\r\n}\r\n\r\nfunction _xformMatrixNeg(o: three.Vector3, x: three.Vector3, y: three.Vector3): three.Matrix4 {\r\n    const m1: three.Matrix4 = new three.Matrix4();\r\n    const o_neg: three.Vector3 = o.clone().negate();\r\n    m1.setPosition(o_neg);\r\n    const m2: three.Matrix4 = new three.Matrix4();\r\n    m2.makeBasis(x.normalize(), y.normalize(), _crossVectors(x, y, true));\r\n    m2.getInverse(m2);\r\n    const m3: three.Matrix4 = new three.Matrix4();\r\n    // first translate to (0,0,0), then xform, so m1 x m2\r\n    m3.multiplyMatrices(m2, m1);\r\n    return m3;\r\n}\r\n\r\nfunction xformMatrixPos(o: three.Vector3, x: three.Vector3, y: three.Vector3): three.Matrix4 {\r\n    const m1: three.Matrix4 = new three.Matrix4();\r\n    m1.setPosition(o);\r\n    const m2: three.Matrix4 = new three.Matrix4();\r\n    m2.makeBasis(x.normalize(), y.normalize(), _crossVectors(x, y, true));\r\n    const m3: three.Matrix4 = new three.Matrix4();\r\n    // first xform, then translate to origin, so m1 x m2\r\n    m3.multiplyMatrices(m1, m2);\r\n    return m3;\r\n}\r\n\r\n// ---------------------------------------------------------------------------------\r\n\r\nfunction _matrixFromXYZ(pts: Txyz[],\r\n    from_origin: Txyz, from_vectors: Txyz[],\r\n    to_origin: Txyz, to_vectors: Txyz[]): number[][] {\r\n\r\n    const e1: three.Vector3 = new three.Vector3(from_vectors[0][0]).normalize();\r\n    const e2: three.Vector3 = new three.Vector3(from_vectors[0][1]).normalize();\r\n    const e3: three.Vector3 = new three.Vector3(from_vectors[0][2]).normalize();\r\n\r\n    const b1: three.Vector3 = new three.Vector3(to_vectors[0][0]).normalize();\r\n    const b2: three.Vector3 = new three.Vector3(to_vectors[0][1]).normalize();\r\n    const b3: three.Vector3 = new three.Vector3(to_vectors[0][2]).normalize();\r\n\r\n    if (e1.dot(e2) === 0) { throw new Error('Orthonormal initial basis required'); }\r\n    if (e1.dot(e3) === 0) { throw new Error('Orthonormal initial basis required'); }\r\n    if (e2.dot(e3) === 0) { throw new Error('Orthonormal initial basis required'); }\r\n    if (b1.dot(b2) === 0) { throw new Error('Orthonormal initial basis required'); }\r\n    if (b1.dot(b3) === 0) { throw new Error('Orthonormal initial basis required'); }\r\n    if (b2.dot(b3) === 0) { throw new Error('Orthonormal initial basis required'); }\r\n\r\n    const matrix: three.Matrix3 = new three.Matrix3();\r\n    matrix.set(e1.dot(b1), e1.dot(b2), e1.dot(b3),\r\n    e2.dot(b1), e2.dot(b2), e2.dot(b3),\r\n    e3.dot(b1), e3.dot(b2), e3.dot(b3));\r\n\r\n    const t_x: number = to_origin[0] - from_origin[0];\r\n    const t_y: number = to_origin[1] - from_origin[1];\r\n    const t_z: number = to_origin[2] - from_origin[2];\r\n\r\n    return [[e1.dot(b1), e1.dot(b2), e1.dot(b3), t_x],\r\n    [e2.dot(b1), e2.dot(b2), e2.dot(b3), t_y],\r\n    [e3.dot(b1), e3.dot(b2), e3.dot(b3), t_z],\r\n    [0, 0, 0, 1]];\r\n}\r\n","import * as three from 'three';\r\nimport { Vector3, Triangle } from 'three';\r\ntype Txyz = [number, number, number];\r\nconst EPS = 1e-6;\r\n\r\nexport function normal(v1: Txyz, v2: Txyz, v3: Txyz, norm: boolean = false): Txyz {\r\n    const _v1: three.Vector3 = new Vector3(...v1);\r\n    const _v2: three.Vector3 = new Vector3(...v2);\r\n    const _v3: three.Vector3 = new Vector3(...v3);\r\n    const t: three.Triangle = new Triangle(_v1, _v2, _v3);\r\n    const _normal: three.Vector3 = new Vector3();\r\n    t.getNormal(_normal);\r\n    if (norm) {\r\n        _normal.normalize();\r\n    }\r\n    return _normal.toArray() as Txyz;\r\n}\r\n\r\nexport function area(v1: Txyz, v2: Txyz, v3: Txyz): number {\r\n    const _v1: three.Vector3 = new Vector3(...v1);\r\n    const _v2: three.Vector3 = new Vector3(...v2);\r\n    const _v3: three.Vector3 = new Vector3(...v3);\r\n    const t: three.Triangle = new Triangle(_v1, _v2, _v3);\r\n    return t.getArea();\r\n}\r\n","import * as three from 'three';\r\nimport * as mathjs from 'mathjs';\r\ntype Txyz = [number, number, number];\r\nconst EPS = 1e-6;\r\n\r\n//  Vectors using Txyz =======================================================================================================\r\nexport function vecEqual(v1: Txyz, v2: Txyz, tol: number): boolean {\r\n    if (Math.abs(v1[0] - v2[0]) > tol) { return false; }\r\n    if (Math.abs(v1[1] - v2[1]) > tol) { return false; }\r\n    if (Math.abs(v1[2] - v2[2]) > tol) { return false; }\r\n    return true;\r\n}\r\n\r\nexport function vecSub(v1: Txyz, v2: Txyz, norm: boolean = false): Txyz {\r\n    const v3: Txyz = [\r\n        v1[0] - v2[0],\r\n        v1[1] - v2[1],\r\n        v1[2] - v2[2],\r\n    ];\r\n    if (norm) {\r\n        this.vectorNorm(v3);\r\n    }\r\n    return v3;\r\n}\r\n\r\nexport function vecAdd(v1: Txyz, v2: Txyz, norm: boolean = false): Txyz {\r\n    const v3: Txyz = [\r\n        v1[0] + v2[0],\r\n        v1[1] + v2[1],\r\n        v1[2] + v2[2],\r\n    ];\r\n    if (norm) {\r\n        this.vectorNorm(v3);\r\n    }\r\n    return v3;\r\n}\r\n\r\nexport function vecSum(vecs: Txyz[], norm: boolean = false): Txyz {\r\n    const vec_sum: Txyz = [0, 0, 0];\r\n    for (const vec of vecs) {\r\n        vec_sum[0] += vec[0];\r\n        vec_sum[1] += vec[1];\r\n        vec_sum[2] += vec[2];\r\n    }\r\n    if (norm) {\r\n        this.vectorNorm(vec_sum);\r\n    }\r\n    return vec_sum;\r\n}\r\n\r\nexport function vecDiv(vec: Txyz, divisor: number): Txyz {\r\n    return [\r\n        vec[0] / divisor,\r\n        vec[1] / divisor,\r\n        vec[2] / divisor\r\n    ];\r\n}\r\n\r\nexport function vecMult(vec: Txyz, multiplier: number): Txyz {\r\n    return [\r\n        vec[0] * multiplier,\r\n        vec[1] * multiplier,\r\n        vec[2] * multiplier\r\n    ];\r\n}\r\n\r\nexport function vecCross(v1: Txyz, v2: Txyz, norm: boolean = false): Txyz {\r\n    return mathjs.cross(v1, v2);\r\n}\r\n\r\nexport function vecDot(v1: Txyz, v2: Txyz): number {\r\n    return mathjs.dot(v1, v2);\r\n}\r\n\r\nexport function vecNorm(v: Txyz): Txyz {\r\n    const length: number = Math.hypot(...v);\r\n    return [v[0] / length, v[1] / length, v[2] / length];\r\n}\r\n\r\nexport function vecAng(v1: Txyz, v2: Txyz): number {\r\n    const v1n: Txyz = vecNorm(v1);\r\n    const v2n: Txyz = vecNorm(v2);\r\n    const d: number = mathjs.dot(v1n, v2n);\r\n    if ((1 - Math.abs(d)) < EPS) { return 0; }\r\n    return Math.acos( d );\r\n}\r\n\r\nexport function vecAng2(v1: Txyz, v2: Txyz, n: Txyz): number {\r\n    const v1n: Txyz = vecNorm(v1);\r\n    const v2n: Txyz = vecNorm(v2);\r\n    const d: number = mathjs.dot(v1n, v2n);\r\n    if ((1 - Math.abs(d)) < EPS) { return 0; }\r\n    let angle: number = Math.acos( d );\r\n    const c: Txyz = mathjs.cross(v1n, v2n);\r\n    angle = angle * mathjs.compare(mathjs.dot(n, c), 0);\r\n    if (angle < 0) { angle = angle + (Math.PI * 2); }\r\n    return angle;\r\n}\r\n\r\nexport function vecLen(v: Txyz): number {\r\n    return Math.hypot(...v);\r\n}\r\nexport function vecSetLen(v: Txyz, len: number): Txyz {\r\n    const fac: number = len / Math.hypot(...v);\r\n    return [v[0] * fac, v[1] * fac, v[2] * fac];\r\n}\r\nexport function vecRev(v: Txyz): Txyz {\r\n    return [\r\n        v[0] * -1,\r\n        v[1] * -1,\r\n        v[2] * -1\r\n    ];\r\n}\r\n\r\nexport function vecFromTo(v1: Txyz, v2: Txyz): Txyz {\r\n    return vecSub(v2, v1);\r\n}\r\n\r\nexport function vecMakeOrtho(v1: Txyz, v2: Txyz): Txyz {\r\n    return vecCross(v2, vecCross(v1, v2));\r\n}\r\n\r\nexport function vecCodir(v1: Txyz, v2: Txyz) {\r\n    v1  = vecNorm(v1);\r\n    v2  = vecNorm(v2);\r\n    if (Math.abs(1 - mathjs.dot(v1, v2)) > EPS) { return false; }\r\n    return true;\r\n}\r\n\r\nexport function dist(p1: Txyz, p2: Txyz): number {\r\n    return mathjs.distance(p1, p2);\r\n}\r\n\r\n/**\r\n * Finds the normal to a set of points using Newell's method\r\n */\r\nexport function newellNorm(pts: Txyz[]): Txyz {\r\n\r\n    const normal: Txyz = [0, 0, 0];\r\n    for (let i = 0; i < pts.length - 1; i++) {\r\n        const p0: Txyz = pts[i];\r\n        const p1: Txyz = pts[i + 1];\r\n        normal[0] += (p0[1] - p1[1]) * (p0[2] + p1[2]);\r\n        normal[1] += (p0[2] - p1[2]) * (p0[0] + p1[0]);\r\n        normal[2] += (p0[0] - p1[0]) * (p0[1] + p1[1]);\r\n    }\r\n    return vecNorm(normal);\r\n}\r\n\r\n/**\r\n * Create new points between two points.\r\n */\r\nexport function interpByNum(pt1: Txyz, pt2: Txyz, num_points: number): Txyz[] {\r\n    if (num_points < 1) {return []; }\r\n    const sub_vec: Txyz = vecDiv(vecSub(pt2, pt1), num_points + 1);\r\n    const points: Txyz[] = [];\r\n    let next: Txyz = pt1;\r\n    for (let i = 0; i < num_points; i++) {\r\n        next = vecAdd(next, sub_vec);\r\n        points.push(next);\r\n    }\r\n    return points;\r\n}\r\nexport function interpByLen(pt1: Txyz, pt2: Txyz, len: number): Txyz[] {\r\n    const vec: Txyz = vecSub(pt2, pt1);\r\n    const num_points: number = Math.floor(vecLen(vec) / len);\r\n    const sub_vec: Txyz = vecMult(vecNorm(vec), len);\r\n    const points: Txyz[] = [];\r\n    let next: Txyz = pt1;\r\n    for (let i = 0; i < num_points; i++) {\r\n        next = vecAdd(next, sub_vec);\r\n        points.push(next);\r\n    }\r\n    return points;\r\n}\r\n\r\n","/**\r\n * @author Mugen87 / https://github.com/Mugen87\r\n * Port from https://github.com/mapbox/earcut (v2.1.2)\r\n */\r\n\r\nconst Earcut = {\r\n\r\n    triangulate: function ( data, holeIndices?, dim? ) {\r\n\r\n        dim = dim || 2;\r\n\r\n        const hasHoles = holeIndices && holeIndices.length;\r\n        const outerLen = hasHoles ? holeIndices[ 0 ] * dim : data.length;\r\n        let outerNode = linkedList( data, 0, outerLen, dim, true );\r\n        const triangles = [];\r\n\r\n        if ( ! outerNode ) { return triangles; }\r\n\r\n        let minX, minY, maxX, maxY, x, y, invSize;\r\n\r\n        if ( hasHoles ) { outerNode = eliminateHoles( data, holeIndices, outerNode, dim ); }\r\n\r\n        // if the shape is not too simple, we'll use z-order curve hash later; calculate polygon bbox\r\n\r\n        if ( data.length > 80 * dim ) {\r\n\r\n            minX = maxX = data[ 0 ];\r\n            minY = maxY = data[ 1 ];\r\n\r\n            for ( let i = dim; i < outerLen; i += dim ) {\r\n\r\n                x = data[ i ];\r\n                y = data[ i + 1 ];\r\n                if ( x < minX ) { minX = x; }\r\n                if ( y < minY ) { minY = y; }\r\n                if ( x > maxX ) { maxX = x; }\r\n                if ( y > maxY ) { maxY = y; }\r\n\r\n            }\r\n\r\n            // minX, minY and invSize are later used to transform coords into integers for z-order calculation\r\n\r\n            invSize = Math.max( maxX - minX, maxY - minY );\r\n            invSize = invSize !== 0 ? 1 / invSize : 0;\r\n\r\n        }\r\n\r\n        earcutLinked( outerNode, triangles, dim, minX, minY, invSize );\r\n\r\n        return triangles;\r\n\r\n    }\r\n\r\n};\r\n\r\n// create a circular doubly linked list from polygon points in the specified winding order\r\n\r\nfunction linkedList( data, start, end, dim, clockwise ) {\r\n\r\n    let i, last;\r\n\r\n    if ( clockwise === ( signedArea( data, start, end, dim ) > 0 ) ) {\r\n\r\n        for ( i = start; i < end; i += dim ) { last = insertNode( i, data[ i ], data[ i + 1 ], last ); }\r\n\r\n    } else {\r\n\r\n        for ( i = end - dim; i >= start; i -= dim ) { last = insertNode( i, data[ i ], data[ i + 1 ], last ); }\r\n\r\n    }\r\n\r\n    if ( last && equals( last, last.next ) ) {\r\n\r\n        removeNode( last );\r\n        last = last.next;\r\n\r\n    }\r\n\r\n    return last;\r\n\r\n}\r\n\r\n// eliminate colinear or duplicate points\r\n\r\nfunction filterPoints( start, end? ) {\r\n\r\n    if ( ! start ) { return start; }\r\n    if ( ! end ) { end = start; }\r\n\r\n    let p = start, again;\r\n\r\n    do {\r\n\r\n        again = false;\r\n\r\n        if ( ! p.steiner && ( equals( p, p.next ) || area( p.prev, p, p.next ) === 0 ) ) {\r\n\r\n            removeNode( p );\r\n            p = end = p.prev;\r\n            if ( p === p.next ) { break; }\r\n            again = true;\r\n\r\n        } else {\r\n\r\n            p = p.next;\r\n\r\n        }\r\n\r\n    } while ( again || p !== end );\r\n\r\n    return end;\r\n\r\n}\r\n\r\n// main ear slicing loop which triangulates a polygon (given as a linked list)\r\n\r\nfunction earcutLinked( ear, triangles, dim, minX, minY, invSize, pass? ) {\r\n\r\n    if ( ! ear ) { return; }\r\n\r\n    // interlink polygon nodes in z-order\r\n\r\n    if ( ! pass && invSize ) { indexCurve( ear, minX, minY, invSize ); }\r\n\r\n    let stop = ear, prev, next;\r\n\r\n    // iterate through ears, slicing them one by one\r\n\r\n    while ( ear.prev !== ear.next ) {\r\n\r\n        prev = ear.prev;\r\n        next = ear.next;\r\n\r\n        if ( invSize ? isEarHashed( ear, minX, minY, invSize ) : isEar( ear ) ) {\r\n\r\n            // cut off the triangle\r\n            triangles.push( prev.i / dim );\r\n            triangles.push( ear.i / dim );\r\n            triangles.push( next.i / dim );\r\n\r\n            removeNode( ear );\r\n\r\n            // skipping the next vertice leads to less sliver triangles\r\n            ear = next.next;\r\n            stop = next.next;\r\n\r\n            continue;\r\n\r\n        }\r\n\r\n        ear = next;\r\n\r\n        // if we looped through the whole remaining polygon and can't find any more ears\r\n\r\n        if ( ear === stop ) {\r\n\r\n            // try filtering points and slicing again\r\n\r\n            if ( ! pass ) {\r\n\r\n                earcutLinked( filterPoints( ear ), triangles, dim, minX, minY, invSize, 1 );\r\n\r\n                // if this didn't work, try curing all small self-intersections locally\r\n\r\n            } else if ( pass === 1 ) {\r\n\r\n                ear = cureLocalIntersections( ear, triangles, dim );\r\n                earcutLinked( ear, triangles, dim, minX, minY, invSize, 2 );\r\n\r\n            // as a last resort, try splitting the remaining polygon into two\r\n\r\n            } else if ( pass === 2 ) {\r\n\r\n                splitEarcut( ear, triangles, dim, minX, minY, invSize );\r\n\r\n            }\r\n\r\n            break;\r\n\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\n// check whether a polygon node forms a valid ear with adjacent nodes\r\n\r\nfunction isEar( ear ) {\r\n\r\n    const a = ear.prev,\r\n        b = ear,\r\n        c = ear.next;\r\n\r\n    if ( area( a, b, c ) >= 0 ) { return false; } // reflex, can't be an ear\r\n\r\n    // now make sure we don't have other points inside the potential ear\r\n    let p = ear.next.next;\r\n\r\n    while ( p !== ear.prev ) {\r\n\r\n        if ( pointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y ) && area( p.prev, p, p.next ) >= 0 ) {\r\n\r\n            return false;\r\n\r\n        }\r\n\r\n        p = p.next;\r\n\r\n    }\r\n\r\n    return true;\r\n\r\n}\r\n\r\nfunction isEarHashed( ear, minX, minY, invSize ) {\r\n\r\n    const a = ear.prev,\r\n        b = ear,\r\n        c = ear.next;\r\n\r\n    if ( area( a, b, c ) >= 0 ) { return false; } // reflex, can't be an ear\r\n\r\n    // triangle bbox; min & max are calculated like this for speed\r\n\r\n    const minTX = a.x < b.x ? ( a.x < c.x ? a.x : c.x ) : ( b.x < c.x ? b.x : c.x ),\r\n        minTY = a.y < b.y ? ( a.y < c.y ? a.y : c.y ) : ( b.y < c.y ? b.y : c.y ),\r\n        maxTX = a.x > b.x ? ( a.x > c.x ? a.x : c.x ) : ( b.x > c.x ? b.x : c.x ),\r\n        maxTY = a.y > b.y ? ( a.y > c.y ? a.y : c.y ) : ( b.y > c.y ? b.y : c.y );\r\n\r\n    // z-order range for the current triangle bbox;\r\n\r\n    const minZ = zOrder( minTX, minTY, minX, minY, invSize ),\r\n        maxZ = zOrder( maxTX, maxTY, minX, minY, invSize );\r\n\r\n    // first look for points inside the triangle in increasing z-order\r\n\r\n    let p = ear.nextZ;\r\n\r\n    while ( p && p.z <= maxZ ) {\r\n\r\n        if ( p !== ear.prev && p !== ear.next &&\r\n                pointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y ) &&\r\n                area( p.prev, p, p.next ) >= 0 ) { return false; }\r\n        p = p.nextZ;\r\n\r\n    }\r\n\r\n    // then look for points in decreasing z-order\r\n\r\n    p = ear.prevZ;\r\n\r\n    while ( p && p.z >= minZ ) {\r\n\r\n        if ( p !== ear.prev && p !== ear.next &&\r\n                pointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y ) &&\r\n                area( p.prev, p, p.next ) >= 0 ) { return false; }\r\n\r\n        p = p.prevZ;\r\n\r\n    }\r\n\r\n    return true;\r\n\r\n}\r\n\r\n// go through all polygon nodes and cure small local self-intersections\r\n\r\nfunction cureLocalIntersections( start, triangles, dim ) {\r\n\r\n    let p = start;\r\n\r\n    do {\r\n\r\n        const a = p.prev, b = p.next.next;\r\n\r\n        if ( ! equals( a, b ) && intersects( a, p, p.next, b ) && locallyInside( a, b ) && locallyInside( b, a ) ) {\r\n\r\n            triangles.push( a.i / dim );\r\n            triangles.push( p.i / dim );\r\n            triangles.push( b.i / dim );\r\n\r\n            // remove two nodes involved\r\n\r\n            removeNode( p );\r\n            removeNode( p.next );\r\n\r\n            p = start = b;\r\n\r\n        }\r\n\r\n        p = p.next;\r\n\r\n    } while ( p !== start );\r\n\r\n    return p;\r\n\r\n}\r\n\r\n// try splitting polygon into two and triangulate them independently\r\n\r\nfunction splitEarcut( start, triangles, dim, minX, minY, invSize ) {\r\n\r\n    // look for a valid diagonal that divides the polygon into two\r\n\r\n    let a = start;\r\n\r\n    do {\r\n\r\n        let b = a.next.next;\r\n\r\n        while ( b !== a.prev ) {\r\n\r\n            if ( a.i !== b.i && isValidDiagonal( a, b ) ) {\r\n\r\n                // split the polygon in two by the diagonal\r\n\r\n                let c = splitPolygon( a, b );\r\n\r\n                // filter colinear points around the cuts\r\n\r\n                a = filterPoints( a, a.next );\r\n                c = filterPoints( c, c.next );\r\n\r\n                // run earcut on each half\r\n\r\n                earcutLinked( a, triangles, dim, minX, minY, invSize );\r\n                earcutLinked( c, triangles, dim, minX, minY, invSize );\r\n                return;\r\n\r\n            }\r\n\r\n            b = b.next;\r\n\r\n        }\r\n\r\n        a = a.next;\r\n\r\n    } while ( a !== start );\r\n\r\n}\r\n\r\n// link every hole into the outer loop, producing a single-ring polygon without holes\r\n\r\nfunction eliminateHoles( data, holeIndices, outerNode, dim ) {\r\n\r\n    let queue = [], i, len, start, end, list;\r\n\r\n    for ( i = 0, len = holeIndices.length; i < len; i ++ ) {\r\n\r\n        start = holeIndices[ i ] * dim;\r\n        end = i < len - 1 ? holeIndices[ i + 1 ] * dim : data.length;\r\n        list = linkedList( data, start, end, dim, false );\r\n        if ( list === list.next ) { list.steiner = true; }\r\n        queue.push( getLeftmost( list ) );\r\n\r\n    }\r\n\r\n    queue.sort( compareX );\r\n\r\n    // process holes from left to right\r\n\r\n    for ( i = 0; i < queue.length; i ++ ) {\r\n\r\n        eliminateHole( queue[ i ], outerNode );\r\n        outerNode = filterPoints( outerNode, outerNode.next );\r\n\r\n    }\r\n\r\n    return outerNode;\r\n\r\n}\r\n\r\nfunction compareX( a, b ) {\r\n\r\n    return a.x - b.x;\r\n\r\n}\r\n\r\n// find a bridge between vertices that connects hole with an outer ring and and link it\r\n\r\nfunction eliminateHole( hole, outerNode ) {\r\n\r\n    outerNode = findHoleBridge( hole, outerNode );\r\n\r\n    if ( outerNode ) {\r\n\r\n        const b = splitPolygon( outerNode, hole );\r\n\r\n        filterPoints( b, b.next );\r\n\r\n    }\r\n\r\n}\r\n\r\n// David Eberly's algorithm for finding a bridge between hole and outer polygon\r\n\r\nfunction findHoleBridge( hole, outerNode ) {\r\n\r\n    let p = outerNode;\r\n    const hx = hole.x;\r\n    const hy = hole.y;\r\n    let qx = - Infinity;\r\n    let m;\r\n\r\n    // find a segment intersected by a ray from the hole's leftmost point to the left;\r\n    // segment's endpoint with lesser x will be potential connection point\r\n\r\n    do {\r\n\r\n        if ( hy <= p.y && hy >= p.next.y && p.next.y !== p.y ) {\r\n\r\n            const x = p.x + ( hy - p.y ) * ( p.next.x - p.x ) / ( p.next.y - p.y );\r\n\r\n            if ( x <= hx && x > qx ) {\r\n\r\n                qx = x;\r\n\r\n                if ( x === hx ) {\r\n\r\n                    if ( hy === p.y ) { return p; }\r\n                    if ( hy === p.next.y ) { return p.next; }\r\n\r\n                }\r\n\r\n                m = p.x < p.next.x ? p : p.next;\r\n\r\n            }\r\n\r\n        }\r\n\r\n        p = p.next;\r\n\r\n    } while ( p !== outerNode );\r\n\r\n    if ( ! m ) { return null; }\r\n\r\n    if ( hx === qx ) { return m.prev; } // hole touches outer segment; pick lower endpoint\r\n\r\n    // look for points inside the triangle of hole point, segment intersection and endpoint;\r\n    // if there are no points found, we have a valid connection;\r\n    // otherwise choose the point of the minimum angle with the ray as connection point\r\n\r\n    const stop = m;\r\n    const mx = m.x;\r\n    const my = m.y;\r\n    let tanMin = Infinity;\r\n    let tan;\r\n\r\n    p = m.next;\r\n\r\n    while ( p !== stop ) {\r\n\r\n        if ( hx >= p.x && p.x >= mx && hx !== p.x &&\r\n                        pointInTriangle( hy < my ? hx : qx, hy, mx, my, hy < my ? qx : hx, hy, p.x, p.y ) ) {\r\n\r\n            tan = Math.abs( hy - p.y ) / ( hx - p.x ); // tangential\r\n\r\n            if ( ( tan < tanMin || ( tan === tanMin && p.x > m.x ) ) && locallyInside( p, hole ) ) {\r\n\r\n                m = p;\r\n                tanMin = tan;\r\n\r\n            }\r\n\r\n        }\r\n\r\n        p = p.next;\r\n\r\n    }\r\n\r\n    return m;\r\n\r\n}\r\n\r\n// interlink polygon nodes in z-order\r\n\r\nfunction indexCurve( start, minX, minY, invSize ) {\r\n\r\n    let p = start;\r\n\r\n    do {\r\n\r\n        if ( p.z === null ) { p.z = zOrder( p.x, p.y, minX, minY, invSize ); }\r\n        p.prevZ = p.prev;\r\n        p.nextZ = p.next;\r\n        p = p.next;\r\n\r\n    } while ( p !== start );\r\n\r\n    p.prevZ.nextZ = null;\r\n    p.prevZ = null;\r\n\r\n    sortLinked( p );\r\n\r\n}\r\n\r\n// Simon Tatham's linked list merge sort algorithm\r\n// http://www.chiark.greenend.org.uk/~sgtatham/algorithms/listsort.html\r\n\r\nfunction sortLinked( list ) {\r\n\r\n    let i, p, q, e, tail, numMerges, pSize, qSize, inSize = 1;\r\n\r\n    do {\r\n\r\n        p = list;\r\n        list = null;\r\n        tail = null;\r\n        numMerges = 0;\r\n\r\n        while ( p ) {\r\n\r\n            numMerges ++;\r\n            q = p;\r\n            pSize = 0;\r\n\r\n            for ( i = 0; i < inSize; i ++ ) {\r\n\r\n                pSize ++;\r\n                q = q.nextZ;\r\n                if ( ! q ) { break; }\r\n\r\n            }\r\n\r\n            qSize = inSize;\r\n\r\n            while ( pSize > 0 || ( qSize > 0 && q ) ) {\r\n\r\n                if ( pSize !== 0 && ( qSize === 0 || ! q || p.z <= q.z ) ) {\r\n\r\n                    e = p;\r\n                    p = p.nextZ;\r\n                    pSize --;\r\n\r\n                } else {\r\n\r\n                    e = q;\r\n                    q = q.nextZ;\r\n                    qSize --;\r\n\r\n                }\r\n\r\n                if ( tail ) { tail.nextZ = e; } else { list = e; }\r\n\r\n                e.prevZ = tail;\r\n                tail = e;\r\n\r\n            }\r\n\r\n            p = q;\r\n\r\n        }\r\n\r\n        tail.nextZ = null;\r\n        inSize *= 2;\r\n\r\n    } while ( numMerges > 1 );\r\n\r\n    return list;\r\n\r\n}\r\n\r\n// z-order of a point given coords and inverse of the longer side of data bbox\r\n\r\nfunction zOrder( x, y, minX, minY, invSize ) {\r\n\r\n    // coords are transformed into non-negative 15-bit integer range\r\n\r\n    x = 32767 * ( x - minX ) * invSize;\r\n    y = 32767 * ( y - minY ) * invSize;\r\n\r\n    x = ( x | ( x << 8 ) ) & 0x00FF00FF;\r\n    x = ( x | ( x << 4 ) ) & 0x0F0F0F0F;\r\n    x = ( x | ( x << 2 ) ) & 0x33333333;\r\n    x = ( x | ( x << 1 ) ) & 0x55555555;\r\n\r\n    y = ( y | ( y << 8 ) ) & 0x00FF00FF;\r\n    y = ( y | ( y << 4 ) ) & 0x0F0F0F0F;\r\n    y = ( y | ( y << 2 ) ) & 0x33333333;\r\n    y = ( y | ( y << 1 ) ) & 0x55555555;\r\n\r\n    return x | ( y << 1 );\r\n\r\n}\r\n\r\n// find the leftmost node of a polygon ring\r\n\r\nfunction getLeftmost( start ) {\r\n\r\n    let p = start, leftmost = start;\r\n\r\n    do {\r\n\r\n        if ( p.x < leftmost.x ) { leftmost = p; }\r\n        p = p.next;\r\n\r\n    } while ( p !== start );\r\n\r\n    return leftmost;\r\n\r\n}\r\n\r\n// check if a point lies within a convex triangle\r\n\r\nfunction pointInTriangle( ax, ay, bx, by, cx, cy, px, py ) {\r\n\r\n    return ( cx - px ) * ( ay - py ) - ( ax - px ) * ( cy - py ) >= 0 &&\r\n     ( ax - px ) * ( by - py ) - ( bx - px ) * ( ay - py ) >= 0 &&\r\n     ( bx - px ) * ( cy - py ) - ( cx - px ) * ( by - py ) >= 0;\r\n\r\n}\r\n\r\n// check if a diagonal between two polygon nodes is valid (lies in polygon interior)\r\n\r\nfunction isValidDiagonal( a, b ) {\r\n\r\n    return a.next.i !== b.i && a.prev.i !== b.i && ! intersectsPolygon( a, b ) &&\r\n        locallyInside( a, b ) && locallyInside( b, a ) && middleInside( a, b );\r\n\r\n}\r\n\r\n// signed area of a triangle\r\n\r\nfunction area( p, q, r ) {\r\n\r\n    return ( q.y - p.y ) * ( r.x - q.x ) - ( q.x - p.x ) * ( r.y - q.y );\r\n\r\n}\r\n\r\n// check if two points are equal\r\n\r\nfunction equals( p1, p2 ) {\r\n\r\n    return p1.x === p2.x && p1.y === p2.y;\r\n\r\n}\r\n\r\n// check if two segments intersect\r\n\r\nfunction intersects( p1, q1, p2, q2 ) {\r\n\r\n    if ( ( equals( p1, q1 ) && equals( p2, q2 ) ) ||\r\n            ( equals( p1, q2 ) && equals( p2, q1 ) ) ) { return true; }\r\n\r\n    return area( p1, q1, p2 ) > 0 !== area( p1, q1, q2 ) > 0 &&\r\n                 area( p2, q2, p1 ) > 0 !== area( p2, q2, q1 ) > 0;\r\n\r\n}\r\n\r\n// check if a polygon diagonal intersects any polygon segments\r\n\r\nfunction intersectsPolygon( a, b ) {\r\n\r\n    let p = a;\r\n\r\n    do {\r\n\r\n        if ( p.i !== a.i && p.next.i !== a.i && p.i !== b.i && p.next.i !== b.i &&\r\n                        intersects( p, p.next, a, b ) ) {\r\n\r\n            return true;\r\n\r\n        }\r\n\r\n        p = p.next;\r\n\r\n    } while ( p !== a );\r\n\r\n    return false;\r\n\r\n}\r\n\r\n// check if a polygon diagonal is locally inside the polygon\r\n\r\nfunction locallyInside( a, b ) {\r\n\r\n    return area( a.prev, a, a.next ) < 0 ?\r\n        area( a, b, a.next ) >= 0 && area( a, a.prev, b ) >= 0 :\r\n        area( a, b, a.prev ) < 0 || area( a, a.next, b ) < 0;\r\n\r\n}\r\n\r\n// check if the middle point of a polygon diagonal is inside the polygon\r\n\r\nfunction middleInside( a, b ) {\r\n\r\n    let p = a;\r\n    let inside = false;\r\n    const px = ( a.x + b.x ) / 2;\r\n    const py = ( a.y + b.y ) / 2;\r\n\r\n    do {\r\n\r\n        if ( ( ( p.y > py ) !== ( p.next.y > py ) ) && p.next.y !== p.y &&\r\n                        ( px < ( p.next.x - p.x ) * ( py - p.y ) / ( p.next.y - p.y ) + p.x ) ) {\r\n\r\n            inside = ! inside;\r\n\r\n        }\r\n\r\n        p = p.next;\r\n\r\n    } while ( p !== a );\r\n\r\n    return inside;\r\n\r\n}\r\n\r\n// link two polygon vertices with a bridge; if the vertices belong to the same ring, it splits polygon into two;\r\n// if one belongs to the outer ring and another to a hole, it merges it into a single ring\r\n\r\nfunction splitPolygon( a, b ) {\r\n\r\n    const a2 = new Node( a.i, a.x, a.y ),\r\n        b2 = new Node( b.i, b.x, b.y ),\r\n        an = a.next,\r\n        bp = b.prev;\r\n\r\n    a.next = b;\r\n    b.prev = a;\r\n\r\n    a2.next = an;\r\n    an.prev = a2;\r\n\r\n    b2.next = a2;\r\n    a2.prev = b2;\r\n\r\n    bp.next = b2;\r\n    b2.prev = bp;\r\n\r\n    return b2;\r\n\r\n}\r\n\r\n// create a node and optionally link it with previous one (in a circular doubly linked list)\r\n\r\nfunction insertNode( i, x, y, last ) {\r\n\r\n    const p = new Node( i, x, y );\r\n\r\n    if ( ! last ) {\r\n\r\n        p.prev = p;\r\n        p.next = p;\r\n\r\n    } else {\r\n\r\n        p.next = last.next;\r\n        p.prev = last;\r\n        last.next.prev = p;\r\n        last.next = p;\r\n\r\n    }\r\n\r\n    return p;\r\n\r\n}\r\n\r\nfunction removeNode( p ) {\r\n\r\n    p.next.prev = p.prev;\r\n    p.prev.next = p.next;\r\n\r\n    if ( p.prevZ ) { p.prevZ.nextZ = p.nextZ; }\r\n    if ( p.nextZ ) { p.nextZ.prevZ = p.prevZ; }\r\n\r\n}\r\n\r\nfunction Node( i, x, y ) {\r\n\r\n    // vertice index in coordinates array\r\n    this.i = i;\r\n\r\n    // vertex coordinates\r\n    this.x = x;\r\n    this.y = y;\r\n\r\n    // previous and next vertice nodes in a polygon ring\r\n    this.prev = null;\r\n    this.next = null;\r\n\r\n    // z-order curve value\r\n    this.z = null;\r\n\r\n    // previous and next nodes in z-order\r\n    this.prevZ = null;\r\n    this.nextZ = null;\r\n\r\n    // indicates whether this is a steiner point\r\n    this.steiner = false;\r\n\r\n}\r\n\r\nfunction signedArea( data, start, end, dim ) {\r\n\r\n    let sum = 0;\r\n\r\n    for ( let i = start, j = end - dim; i < end; i += dim ) {\r\n\r\n        sum += ( data[ j ] - data[ i ] ) * ( data[ i + 1 ] + data[ j + 1 ] );\r\n        j = i;\r\n\r\n    }\r\n\r\n    return sum;\r\n\r\n}\r\n\r\nexport { Earcut };\r\n","import * as three from 'three';\r\n\r\nconst EPS = 1e-6;\r\n/**\r\n * Utility functions for threejs.\r\n */\r\n\r\n // Matrices ======================================================================================================\r\n\r\nexport function multVectorMatrix(v: three.Vector3, m: three.Matrix4): three.Vector3 {\r\n    const v2: three.Vector3 = v.clone();\r\n    v2.applyMatrix4(m);\r\n    return v2;\r\n}\r\n\r\nexport function xformMatrix(o: three.Vector3, x: three.Vector3, y: three.Vector3, z: three.Vector3): three.Matrix4 {\r\n    x.normalize();\r\n    y.normalize();\r\n    z.normalize();\r\n    const m1: three.Matrix4 = new three.Matrix4();\r\n    const o_neg: three.Vector3 = o.clone().negate();\r\n    m1.setPosition(o_neg);\r\n    const m2: three.Matrix4 = new three.Matrix4();\r\n    m2.makeBasis(x, y, z);\r\n    m2.getInverse(m2);\r\n    const m3: three.Matrix4 = new three.Matrix4();\r\n    m3.multiplyMatrices(m2, m1);\r\n    return m3;\r\n}\r\n\r\nexport function matrixInv(m: three.Matrix4): three.Matrix4 {\r\n    const m2: three.Matrix4 = new three.Matrix4();\r\n    return m2.getInverse(m);\r\n}\r\n\r\n//  Vectors =======================================================================================================\r\n\r\nexport function subVectors(v1: three.Vector3, v2: three.Vector3, norm: boolean = false): three.Vector3 {\r\n    const v3: three.Vector3 = new three.Vector3();\r\n    v3.subVectors(v1, v2);\r\n    if (norm) {v3.normalize(); }\r\n    return v3;\r\n}\r\n\r\nexport function addVectors(v1: three.Vector3, v2: three.Vector3, norm: boolean = false): three.Vector3 {\r\n    const v3: three.Vector3 = new three.Vector3();\r\n    v3.addVectors(v1, v2);\r\n    if (norm) {v3.normalize(); }\r\n    return v3;\r\n}\r\n\r\nexport function crossVectors(v1: three.Vector3, v2: three.Vector3, norm: boolean = false): three.Vector3 {\r\n    const v3: three.Vector3 = new three.Vector3();\r\n    v3.crossVectors(v1, v2);\r\n    if (norm) {v3.normalize(); }\r\n    return v3;\r\n}\r\n","\r\nimport * as three from 'three';\r\nimport * as threex from './threex';\r\nimport * as earcut from './earcut';\r\nimport {Txyz} from '../geo-info/common';\r\nimport {Arr} from './arr';  // TODO remove dependence on this\r\n\r\n//  3D to 2D ======================================================================================================\r\n\r\n/**\r\n * Function that returns a matrix to transform a set of vertices in 3d space onto the xy plane.\r\n * This function assumes that the vertices are co-planar.\r\n * Returns a set of three Vectors that represent points on the xy plane.\r\n */\r\nfunction _getMatrix(points: three.Vector3[]): three.Matrix4 {\r\n    const o: three.Vector3 = new three.Vector3();\r\n    for (const v of points) {\r\n        o.add(v);\r\n    }\r\n    o.divideScalar(points.length);\r\n    let vx: three.Vector3;\r\n    let vz: three.Vector3;\r\n    let got_vx = false;\r\n    for (let i = 0; i < points.length; i++) {\r\n        if (!got_vx) {\r\n            vx =  threex.subVectors(points[i], o).normalize();\r\n            if (vx.lengthSq() !== 0) {got_vx = true; }\r\n        } else {\r\n            vz = threex.crossVectors(vx, threex.subVectors(points[i], o).normalize()).normalize();\r\n            if (vz.lengthSq() !== 0) {break; }\r\n        }\r\n        if (i === points.length - 1) {return null; }\r\n    }\r\n    const vy: three.Vector3 =  threex.crossVectors(vz, vx);\r\n    const m: three.Matrix4 = threex.xformMatrix(o, vx, vy, vz);\r\n    return m;\r\n    // const points_2d: three.Vector3[] = points.map((v) => threex.multVectorMatrix(v, m));\r\n    // return points_2d;\r\n}\r\n\r\n/**\r\n * Triangulates a polygon in 3d with holes\r\n * @param coords\r\n */\r\nexport function triangulate(coords: Txyz[], holes?: Txyz[][]): number[][] {\r\n\r\n    // get the matrix to transform from 2D to 3D\r\n    const coords_v: three.Vector3[] = coords.map( coord => new three.Vector3(...coord));\r\n    const matrix: three.Matrix4 = _getMatrix( coords_v );\r\n\r\n    // create an array to store all x y vertex coordinates\r\n    const flat_vert_xys: number[] = [];\r\n\r\n    // get the perimeter vertices and add them to the array\r\n    const coords_v_2d: three.Vector3[] = coords_v.map((coord_v) => threex.multVectorMatrix(coord_v, matrix));\r\n    if (coords_v_2d === undefined || coords_v_2d === null || coords_v_2d.length === 0) {\r\n        console.log('WARNING: triangulation failed.');\r\n        return [];\r\n    }\r\n    coords_v_2d.forEach(coord_v_2d => flat_vert_xys.push(coord_v_2d.x, coord_v_2d.y));\r\n\r\n    // hole vertices uing EARCUT\r\n    // holes is an array of hole indices if any (e.g. [5, 8] for a 12-vertex input would mean \r\n    // one hole with vertices 5–7 and another with 8–11).\r\n    const hole_indices: number[] = [];\r\n    let index_counter: number = coords_v.length;\r\n    if (holes !== undefined && holes.length) {\r\n        for (const hole of holes) {\r\n            hole_indices.push(index_counter);\r\n            if (hole.length) {\r\n                const hole_coords_v: three.Vector3[] = hole.map( hole_coord => new three.Vector3(...hole_coord));\r\n                const hole_coords_v_2d: three.Vector3[] = hole_coords_v.map((hole_coord_v) =>\r\n                    threex.multVectorMatrix(hole_coord_v, matrix));\r\n                const one_hole: number[] = [];\r\n                hole_coords_v_2d.forEach(hole_coord_v => flat_vert_xys.push(hole_coord_v.x, hole_coord_v.y));\r\n                index_counter += hole.length;\r\n            }\r\n        }\r\n    }\r\n\r\n    // do the triangulation\r\n    const flat_tris_i: number[] = earcut.Earcut.triangulate(flat_vert_xys, hole_indices);\r\n\r\n    // convert the triangles into lists of three and return them\r\n    const tris_i: number[][] = [];\r\n    for (let i = 0; i < flat_tris_i.length; i += 3) {\r\n        tris_i.push([flat_tris_i[i], flat_tris_i[i + 1], flat_tris_i[i + 2]]);\r\n    }\r\n\r\n    // return the list of triangles\r\n    return tris_i;\r\n}\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/appmodule/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nwindow['CESIUM_BASE_URL'] = 'assets/cesium';\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n"],"sourceRoot":""}