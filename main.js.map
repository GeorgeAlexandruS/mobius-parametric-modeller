{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/appmodule/app-routing.module.ts","webpack:///./src/app/appmodule/app.component.html","webpack:///./src/app/appmodule/app.component.scss","webpack:///./src/app/appmodule/app.component.ts","webpack:///./src/app/appmodule/app.module.ts","webpack:///./src/app/core/core.module.ts","webpack:///./src/app/core/modules/Model.ts","webpack:///./src/app/core/modules/_parameterTypes.ts","webpack:///./src/app/core/modules/index.ts","webpack:///./src/app/core/modules/input.ts","webpack:///./src/app/core/modules/output.ts","webpack:///./src/app/core/services/data.service.ts","webpack:///./src/app/core/services/index.ts","webpack:///./src/app/core/services/viewer.service.ts","webpack:///./src/app/model-viewers/all-viewers/console-viewer/viewer.component.ts","webpack:///./src/app/model-viewers/all-viewers/general-viewer.scss","webpack:///./src/app/model-viewers/all-viewers/gi-viewer/data/data.service.ts","webpack:///./src/app/model-viewers/all-viewers/gi-viewer/data/data.subscriber.ts","webpack:///./src/app/model-viewers/all-viewers/gi-viewer/data/data.threejs.ts","webpack:///./src/app/model-viewers/all-viewers/gi-viewer/gi-viewer.component.html","webpack:///./src/app/model-viewers/all-viewers/gi-viewer/gi-viewer.component.scss","webpack:///./src/app/model-viewers/all-viewers/gi-viewer/gi-viewer.component.ts","webpack:///./src/app/model-viewers/all-viewers/gi-viewer/gi-viewer.module.ts","webpack:///./src/app/model-viewers/all-viewers/gi-viewer/threejs/threejs-viewer.component.html","webpack:///./src/app/model-viewers/all-viewers/gi-viewer/threejs/threejs-viewer.component.scss","webpack:///./src/app/model-viewers/all-viewers/gi-viewer/threejs/threejs-viewer.component.ts","webpack:///./src/app/model-viewers/all-viewers/help-viewer/viewer.component.ts","webpack:///./src/app/model-viewers/all-viewers/text-viewer/viewer.component.ts","webpack:///./src/app/model-viewers/model-viewers-container.component.html","webpack:///./src/app/model-viewers/model-viewers-container.component.scss","webpack:///./src/app/model-viewers/model-viewers-container.component.ts","webpack:///./src/app/model-viewers/model-viewers-container.module.ts","webpack:///./src/app/model-viewers/model-viewers.config.ts","webpack:///./src/app/shared/components/add-components/add_input.component.ts","webpack:///./src/app/shared/components/add-components/add_node.component.ts","webpack:///./src/app/shared/components/add-components/add_output.component.ts","webpack:///./src/app/shared/components/execute/execute.component.ts","webpack:///./src/app/shared/components/file/download.utils.ts","webpack:///./src/app/shared/components/file/index.ts","webpack:///./src/app/shared/components/file/loadfile.component.ts","webpack:///./src/app/shared/components/file/newfile.component.ts","webpack:///./src/app/shared/components/file/savefile.component.ts","webpack:///./src/app/shared/components/header/header.component.ts","webpack:///./src/app/shared/components/navigation/navigation.component.ts","webpack:///./src/app/shared/components/not-found/not-found.component.html","webpack:///./src/app/shared/components/not-found/not-found.component.scss","webpack:///./src/app/shared/components/not-found/not-found.component.ts","webpack:///./src/app/shared/components/parameter-viewer/input-port-viewer/input-port-viewer.component.html","webpack:///./src/app/shared/components/parameter-viewer/input-port-viewer/input-port-viewer.component.scss","webpack:///./src/app/shared/components/parameter-viewer/input-port-viewer/input-port-viewer.component.ts","webpack:///./src/app/shared/components/parameter-viewer/parameter-viewer.component.html","webpack:///./src/app/shared/components/parameter-viewer/parameter-viewer.component.scss","webpack:///./src/app/shared/components/parameter-viewer/parameter-viewer.component.ts","webpack:///./src/app/shared/components/parameter-viewer/procedure-input-viewer/procedure-input-viewer.component.html","webpack:///./src/app/shared/components/parameter-viewer/procedure-input-viewer/procedure-input-viewer.component.scss","webpack:///./src/app/shared/components/parameter-viewer/procedure-input-viewer/procedure-input-viewer.component.ts","webpack:///./src/app/shared/decorators/index.ts","webpack:///./src/app/shared/decorators/module-aware.decorator.ts","webpack:///./src/app/shared/decorators/porttypes-aware.decorator.ts","webpack:///./src/app/shared/decorators/prodtypes-aware.decorator.ts","webpack:///./src/app/shared/decorators/viewertypes-aware.decorator.ts","webpack:///./src/app/shared/directives/filesys/index.ts","webpack:///./src/app/shared/directives/filesys/mobfile-reader.directive.ts","webpack:///./src/app/shared/directives/textarea/autogrow.directive.ts","webpack:///./src/app/shared/directives/textarea/index.ts","webpack:///./src/app/shared/models/code/code.utils.ts","webpack:///./src/app/shared/models/code/execute.utils.ts","webpack:///./src/app/shared/models/code/index.ts","webpack:///./src/app/shared/models/flowchart/flowchart.interface.ts","webpack:///./src/app/shared/models/flowchart/flowchart.utils.ts","webpack:///./src/app/shared/models/flowchart/index.ts","webpack:///./src/app/shared/models/node/index.ts","webpack:///./src/app/shared/models/node/node.utils.ts","webpack:///./src/app/shared/models/port/index.ts","webpack:///./src/app/shared/models/port/port.utils.ts","webpack:///./src/app/shared/models/port/types.ts","webpack:///./src/app/shared/models/procedure/index.ts","webpack:///./src/app/shared/models/procedure/types.ts","webpack:///./src/app/shared/shared.module.ts","webpack:///./src/app/shared/utils/GUID.ts","webpack:///./src/app/shared/utils/index.ts","webpack:///./src/app/views/index.ts","webpack:///./src/app/views/view-dashboard/view-dashboard-routing.module.ts","webpack:///./src/app/views/view-dashboard/view-dashboard.component.html","webpack:///./src/app/views/view-dashboard/view-dashboard.component.scss","webpack:///./src/app/views/view-dashboard/view-dashboard.component.ts","webpack:///./src/app/views/view-dashboard/view-dashboard.module.ts","webpack:///./src/app/views/view-editor/parameter-editor/parameter-editor.component.html","webpack:///./src/app/views/view-editor/parameter-editor/parameter-editor.component.scss","webpack:///./src/app/views/view-editor/parameter-editor/parameter-editor.component.ts","webpack:///./src/app/views/view-editor/parameter-editor/procedure-input-editor/procedure-input-editor.component.html","webpack:///./src/app/views/view-editor/parameter-editor/procedure-input-editor/procedure-input-editor.component.scss","webpack:///./src/app/views/view-editor/parameter-editor/procedure-input-editor/procedure-input-editor.component.ts","webpack:///./src/app/views/view-editor/procedure-item/procedure-item.component.html","webpack:///./src/app/views/view-editor/procedure-item/procedure-item.component.scss","webpack:///./src/app/views/view-editor/procedure-item/procedure-item.component.ts","webpack:///./src/app/views/view-editor/toolset/toolset.component.html","webpack:///./src/app/views/view-editor/toolset/toolset.component.scss","webpack:///./src/app/views/view-editor/toolset/toolset.component.ts","webpack:///./src/app/views/view-editor/view-editor-routing.module.ts","webpack:///./src/app/views/view-editor/view-editor.component.html","webpack:///./src/app/views/view-editor/view-editor.component.scss","webpack:///./src/app/views/view-editor/view-editor.component.ts","webpack:///./src/app/views/view-editor/view-editor.module.ts","webpack:///./src/app/views/view-flowchart/edge/edge.component.html","webpack:///./src/app/views/view-flowchart/edge/edge.component.ts","webpack:///./src/app/views/view-flowchart/node/node.actions.ts","webpack:///./src/app/views/view-flowchart/node/node.component.html","webpack:///./src/app/views/view-flowchart/node/node.component.scss","webpack:///./src/app/views/view-flowchart/node/node.component.ts","webpack:///./src/app/views/view-flowchart/view-flowchart-routing.module.ts","webpack:///./src/app/views/view-flowchart/view-flowchart.component.html","webpack:///./src/app/views/view-flowchart/view-flowchart.component.scss","webpack:///./src/app/views/view-flowchart/view-flowchart.component.ts","webpack:///./src/app/views/view-flowchart/view-flowchart.module.ts","webpack:///./src/app/views/view-gallery/simple-name.pipe.ts","webpack:///./src/app/views/view-gallery/view-gallery-routing.module.ts","webpack:///./src/app/views/view-gallery/view-gallery.component.html","webpack:///./src/app/views/view-gallery/view-gallery.component.scss","webpack:///./src/app/views/view-gallery/view-gallery.component.ts","webpack:///./src/app/views/view-gallery/view-gallery.config.ts","webpack:///./src/app/views/view-gallery/view-gallery.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/libs/arr/arr.ts","webpack:///./src/libs/geo-info/BiMap.ts","webpack:///./src/libs/geo-info/GIAttribMap.ts","webpack:///./src/libs/geo-info/GIAttribs.ts","webpack:///./src/libs/geo-info/GICommon.ts","webpack:///./src/libs/geo-info/GIGeom.ts","webpack:///./src/libs/geo-info/GIJson.ts","webpack:///./src/libs/geo-info/GIModel.ts","webpack:///./src/libs/threex/threex.ts","webpack:///./src/libs/triangulate/earcut.ts","webpack:///./src/libs/triangulate/triangulate.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","/**/\r\n\r\nimport { NgModule }                            from '@angular/core';\r\nimport { RouterModule, Routes }    from '@angular/router';\r\nimport { Component } from '@angular/core';\r\n\r\nimport { ViewFlowchartModule, ViewGalleryModule, ViewDashboardModule, ViewEditorModule } from '@views';\r\n\r\nconst appRoutes: Routes = [\r\n    { path: 'flowchart', loadChildren: () => ViewFlowchartModule },\r\n    { path: 'gallery', loadChildren: () => ViewGalleryModule },\r\n    { path: 'dashboard', loadChildren: () => ViewDashboardModule },\r\n    { path: 'editor', loadChildren: () => ViewEditorModule },\r\n    { path: '',     redirectTo: '/gallery', pathMatch: 'full' },\r\n    { path: '**', component: ViewGalleryModule }\r\n];\r\n\r\n@NgModule({\r\n    imports: [\r\n        RouterModule.forRoot(\r\n            appRoutes,\r\n            { enableTracing: false } // <-- debugging purposes only\r\n        )\r\n    ],\r\n    exports: [\r\n        RouterModule\r\n    ]\r\n})\r\nexport class AppRoutingModule {}\r\n","module.exports = \"<router-outlet></router-outlet>\"","module.exports = \".container {\\n  position: relative;\\n  overflow: auto;\\n  height: 100%;\\n  width: 100%;\\n  display: flex;\\n  flex-direction: column;\\n  justify-content: space-around; }\\n  .container h1, .container h2, .container h3, .container h4, .container h5, .container h6, .container p {\\n    margin: 0px;\\n    padding: 0px; }\\n  .container .container__header {\\n    flex: 0 1 auto;\\n    min-height: 35px;\\n    display: flex;\\n    flex-direction: row;\\n    justify-content: space-between;\\n    padding: 0px 0px 0px 15px;\\n    background-color: #ccc;\\n    border-bottom: 3px solid #eeeeee;\\n    line-height: 35px;\\n    font-size: 18px;\\n    font-weight: 600;\\n    text-align: center;\\n    /* tab styling */\\n    /* dropdown menu styling */ }\\n  .container .container__header .tab {\\n      border: 2px;\\n      overflow: hidden;\\n      background-color: #ccc; }\\n  .container .container__header .tab button {\\n      display: inline-block;\\n      vertical-align: bottom;\\n      background-color: inherit;\\n      color: #505050;\\n      border: none;\\n      outline: none;\\n      cursor: pointer;\\n      padding: 8px 10px;\\n      transition: 0.3s;\\n      font-size: 14px; }\\n  .container .container__header .tab button:hover {\\n      color: blue; }\\n  .container .container__header .tab button.active {\\n      background-color: #ccc;\\n      color: #000096;\\n      font-weight: 600;\\n      border-color: #222 !important; }\\n  .container .container__header .dropmenu {\\n      display: inline-flex; }\\n  .container .container__content {\\n    flex-grow: 1;\\n    height: 0px;\\n    border: 2px solid #3F4651;\\n    overflow: auto; }\\n  .container .container__footer {\\n    text-align: center;\\n    font-size: 12px;\\n    line-height: 18px;\\n    background-color: #3F4651;\\n    color: #E7BF00; }\\n  .content__panel {\\n  background-color: gainsboro;\\n  height: 95%;\\n  overflow: hidden auto; }\\n  .content__viewer {\\n  background-color: gainsboro;\\n  height: 100%;\\n  overflow: auto; }\\n  ul.nav {\\n  margin: 0px;\\n  padding: 0px; }\\n  li.link {\\n  display: inline;\\n  border: 2px solid gray;\\n  border-radius: 4px;\\n  margin: 5px 5px 0px 0px;\\n  padding: 5px;\\n  text-transform: uppercase;\\n  line-height: 12px;\\n  font-weight: 600;\\n  cursor: pointer;\\n  font-size: 12px; }\\n  li.link:hover {\\n  background-color: gray;\\n  color: white; }\\n  button.btn {\\n  display: inline-block;\\n  vertical-align: middle;\\n  margin: 0px 0px 0px 0px;\\n  font-size: 12px;\\n  line-height: 10px;\\n  height: 30px;\\n  border: none;\\n  border-radius: 4px;\\n  background-color: transparent;\\n  color: #505050; }\\n  button.btn:hover {\\n  color: blue; }\\n  .active {\\n  background-color: #222;\\n  color: white;\\n  border-color: #222 !important; }\\n\"","import { Component, Injector } from '@angular/core';\r\nimport { DataService } from '@services';\r\n\r\n// @ts-ignore\r\nconsole.stdlog = console.log.bind(console);\r\n// @ts-ignore\r\nconsole.logs = [];\r\n// @ts-ignore\r\nconsole.log = function() {\r\n    // @ts-ignore\r\n    console.logs.push(Array.from(arguments));\r\n    // @ts-ignore\r\n    console.stdlog.apply(console, arguments);\r\n};\r\n/*\r\n\r\n*/\r\n@Component({\r\n    selector: 'app-root',\r\n    templateUrl: 'app.component.html',\r\n    styleUrls: ['app.component.scss']\r\n})\r\nexport class AppComponent {\r\n\r\n    constructor(private dataService: DataService, private injector: Injector) {}\r\n\r\n}\r\n","// import @angular stuff\r\nimport { NgModule, Component } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { MatMenuModule, MatIconModule, MatButtonModule } from '@angular/material';\r\n// import app services\r\nimport { DataService } from '@services';\r\nimport { DataService as GiViewerDataService } from '../model-viewers/all-viewers/gi-viewer/data/data.service';\r\n// import app modules\r\nimport { CoreModule } from '../core/core.module';\r\nimport { SharedModule } from '@shared/shared.module';\r\n// import { AppRoutingModule } from './app-routing.module';\r\n// import app components\r\nimport { AppComponent } from './app.component';\r\nimport {ViewEditorModule, ViewDashboardModule, ViewGalleryModule,\r\n    ViewEditorComponent, ViewDashboardComponent, ViewGalleryComponent,\r\n    ViewFlowchartComponent, ViewFlowchartModule} from '@views';\r\nimport { AppRoutingModule } from './app-routing.module';\r\n\r\n\r\n\r\n/**\r\n * AppModule, the root module for the whole app.\r\n */\r\n@NgModule({\r\n    declarations: [\r\n        AppComponent,\r\n    ],\r\n    imports: [\r\n        BrowserModule,\r\n        BrowserAnimationsModule,\r\n        HttpClientModule,\r\n        FormsModule,\r\n        AppRoutingModule,\r\n        CoreModule,\r\n        ViewGalleryModule,\r\n        ViewEditorModule,\r\n        ViewDashboardModule,\r\n        ViewFlowchartModule,\r\n        SharedModule,\r\n    ],\r\n    entryComponents: [\r\n        ViewEditorComponent,\r\n        ViewDashboardComponent,\r\n        ViewFlowchartComponent,\r\n        ViewGalleryComponent,\r\n    ],\r\n    providers: [ DataService, GiViewerDataService ],\r\n    bootstrap: [ AppComponent ]\r\n})\r\nexport class AppModule {\r\n    /**\r\n     * constructor\r\n     */\r\n    constructor () {\r\n        // Do nothing\r\n    }\r\n}\r\n\r\n","/*\r\n *  This module is to be imported ONLY by the AppModule\r\n *  Contains all global services\r\n *\r\n */\r\nimport { NgModule, SkipSelf, Optional } from '@angular/core';\r\nimport { DataService, ViewerService } from '@services';\r\n\r\n@NgModule({\r\n    imports: [ ],\r\n    declarations: [ ],\r\n    providers: [ DataService, ViewerService ],\r\n    exports: [ ],\r\n    entryComponents: []\r\n})\r\nexport class CoreModule {\r\n    constructor(@Optional() @SkipSelf() core: CoreModule) {\r\n        /// Prevents any module apart from AppModule from re-importing\r\n        if (core) {\r\n            throw new Error('Core Module has already been imported');\r\n        }\r\n    }\r\n}\r\n","import { GIModel } from '../../../libs/geo-info/GIModel';\r\nimport { IModelData, TCoord, EAttribDataTypeStrs } from '../../../libs/geo-info/GIJson';\r\n\r\n//  ===============================================================================================================\r\n//  Functions used by Mobius\r\n//  ===============================================================================================================\r\n\r\n/**\r\n * Creates a new empty model.\r\n *\r\n * @returns New model empty.\r\n */\r\nexport function __new__(): GIModel {\r\n    const model: GIModel = new GIModel();\r\n    model.attribs().addPosiAttrib('coordinates', EAttribDataTypeStrs.FLOAT, 3);\r\n    return model;\r\n}\r\n\r\n/**\r\n * A function to preprocess the model, before it enters the node.\r\n * In cases where there is more than one model connected to a node,\r\n * the preprocess function will be called before the merge function.\r\n *\r\n * @param model The model to preprocess.\r\n */\r\nexport function __preprocess__(__model__: GIModel): void {\r\n    // TODO\r\n}\r\n\r\n/**\r\n * A function to postprocess the model, after it enters the node.\r\n *\r\n * @param model The model to postprocess.\r\n */\r\nexport function __postprocess__(__model__: GIModel): void {\r\n    // TODO\r\n    // Remove all undefined values for the arrays\r\n}\r\n\r\n/**\r\n * Merges the second model into the first model. The geometry, attribues, and groups are all merged.\r\n * If the models contain contain groups with the same names, then the groups will be merged.\r\n *\r\n * @param model1 The model to merge into.\r\n * @param model2 The model to merge from    .\r\n */\r\nexport function __merge__(model1: GIModel, model2: GIModel): void {\r\n    model1.merge(model2);\r\n}\r\n/**\r\n * Returns a string representation of this model.\r\n * @param __model__\r\n */\r\nexport function __stringify__(__model__: GIModel): string {\r\n    return JSON.stringify(__model__.getData());\r\n}\r\n\r\n//  ===============================================================================================================\r\n//  Functions visible in the Mobius interface.\r\n//  ===============================================================================================================\r\n\r\n/**\r\n * Add new data to the model.\r\n *\r\n * @param model_data The model data in gs-json format.\r\n * @returns New model if successful, null if unsuccessful or on error.\r\n */\r\nexport function addData(__model__: GIModel, model_data: IModelData): void {\r\n    const model: GIModel = new GIModel(model_data);\r\n    __merge__(__model__, model);\r\n}\r\n\r\n/**\r\n *  Gets the number of points in the model.\r\n * @param __model__\r\n */\r\nexport function numPoints(__model__: GIModel): number {\r\n    return __model__.geom().numPoints();\r\n}\r\n/**\r\n *  Gets the number of linestrings in the model.\r\n * @param __model__\r\n */\r\nexport function numLinestrings(__model__: GIModel): number {\r\n    return __model__.geom().numLines();\r\n}\r\n/**\r\n *  Gets the number of polygons in the model.\r\n * @param __model__\r\n */\r\nexport function numPolygons(__model__: GIModel): number {\r\n    return __model__.geom().numPgons();\r\n}\r\n/**\r\n * Adds a new position to the model.\r\n * @param __model__\r\n * @param coords\r\n */\r\nexport function addPosition(__model__: GIModel, coords: TCoord): string {\r\n    const posi_id: string = __model__.geom().addPosition();\r\n    __model__.attribs().setAttribValue(posi_id, 'coordinates', coords);\r\n    return posi_id;\r\n}\r\n/**\r\n * Adds a new point to the model.\r\n * @param __model__\r\n * @param coords\r\n */\r\nexport function addPoint(__model__: GIModel, position: string): string {\r\n    return __model__.geom().addPoint(position);\r\n}\r\n/**\r\n * Adds a new linestring to the model.\r\n * @param __model__\r\n * @param coords\r\n */\r\nexport function addLinestring(__model__: GIModel, positions: string[]): string {\r\n    return __model__.geom().addLine(positions);\r\n}\r\n/**\r\n * Adds a new polygon to the model.\r\n * @param __model__\r\n * @param coords\r\n */\r\nexport function addPolygon(__model__: GIModel, positions: string[]): string {\r\n    return __model__.geom().addPgon(positions);\r\n}\r\n/**\r\n * Gets all the positions in the model.\r\n * @param __model__\r\n */\r\nexport function getPositions(__model__: GIModel): string[] {\r\n    return __model__.geom().getPosis();\r\n}\r\n/**\r\n * Gets all the points in the model.\r\n * @param __model__\r\n */\r\nexport function getPoints(__model__: GIModel): string[] {\r\n    return __model__.geom().getPoints();\r\n}\r\n/**\r\n * Gets all the lines in the model.\r\n * @param __model__\r\n */\r\nexport function getLines(__model__: GIModel): string[] {\r\n    return __model__.geom().getLines();\r\n}\r\n/**\r\n * Gets all the points in the model.\r\n * @param __model__\r\n */\r\nexport function getPolygons(__model__: GIModel): string[] {\r\n    return __model__.geom().getPgons();\r\n}\r\n/**\r\n * Gets all the collections in the model.\r\n * @param __model__\r\n */\r\nexport function getCollections(__model__: GIModel): string[] {\r\n    return __model__.geom().getColls();\r\n}\r\n","import {__new__, __merge__} from './Model';\r\n\r\nexport const _parameterTypes = {\r\n    constList: '__constList__',\r\n    model: '__model__',\r\n    input: '__input__',\r\n\r\n    new: 'Model.__new__', // TODO - make this genric\r\n    newFn: __new__,\r\n\r\n    merge: 'Model.__merge__', // TODO - make this genric\r\n    mergeFn: __merge__,\r\n\r\n    preprocess: 'Model.__preprocess__', // TODO - make this genric\r\n    postprocess: 'Model.__postprocess__' // TODO - make this genric\r\n};\r\n","import * as Model from './Model';\r\nexport {Model};\r\nimport * as Input from './input';\r\nexport {Input};\r\nimport * as Output from './output';\r\nexport {Output};\r\nexport * from './_parameterTypes';\r\n","/**\r\n * Declare a new constant for the input node\r\n * @summary Declare new constant\r\n *\r\n * @param {JSON} __constList__  List of constants to be added.\r\n * @param {string} const_name  Name of the constant.\r\n * @param {any} __input__  Value of the constant.\r\n *\r\n * @returns Void\r\n */\r\nexport function declare_constant(__constList__: JSON, const_name: string, __input__: any): void {\r\n    __constList__[const_name] = __input__;\r\n}\r\n","\r\n/**\r\n* Return certain value from the model for the flowchart's end node\r\n * @summary Return a specific value\r\n * @param {any[]} __model__  Model of the node.\r\n * @param {number} index  Index of the value to be returned.\r\n * @returns {any} Value\r\n */\r\nexport function return_value(__model__: any[], index: number): any {\r\n    if (index > __model__.length) { return __model__; }\r\n    return __model__[index].value;\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { IMobius } from '@models/mobius';\r\nimport { IFlowchart, FlowchartUtils } from '@models/flowchart';\r\nimport { INode } from '@models/node';\r\n\r\n@Injectable()\r\nexport class DataService {\r\n    private static _data: IMobius = {\r\n        name: 'default_file',\r\n        author: 'new_user',\r\n        last_updated: new Date(),\r\n        version: 1,\r\n        flowchart: FlowchartUtils.newflowchart()\r\n    };\r\n    private static _flowchartPosition: string = undefined;\r\n    private static _newFlowchart = true;\r\n\r\n    private static _activeModelView: string = undefined;\r\n\r\n    private static _splitVal = 55;\r\n\r\n    get file() { return DataService._data; }\r\n    set file(data: IMobius) {\r\n        DataService._data = <IMobius>{\r\n            name: data.name,\r\n            author: data.author,\r\n            flowchart: data.flowchart,\r\n            last_updated: data.last_updated,\r\n            version: data.version\r\n        };\r\n    }\r\n\r\n    get flowchartPos() {return DataService._flowchartPosition; }\r\n    set flowchartPos(transf: string) {DataService._flowchartPosition = transf; }\r\n\r\n    get newFlowchart() {return DataService._newFlowchart; }\r\n    set newFlowchart(check: boolean) {DataService._newFlowchart = check; }\r\n\r\n    get activeView() {return DataService._activeModelView; }\r\n    set activeView(view: string) {DataService._activeModelView = view; }\r\n\r\n    get splitVal() {return DataService._splitVal; }\r\n    set splitVal(num: number) {DataService._splitVal = num; }\r\n\r\n    get flowchart(): IFlowchart { return DataService._data.flowchart; }\r\n    get node(): INode { return DataService._data.flowchart.nodes[DataService._data.flowchart.meta.selected_nodes[0]]; }\r\n\r\n}\r\n","export * from './data.service';\r\nexport * from './viewer.service';\r\n","import { Injectable, ComponentFactoryResolver, Injector  } from '@angular/core';\r\nimport { Observable, Subject } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class ViewerService {\r\n    contextReceivedSource = new Subject<any>();\r\n    contextReceived$ = this.contextReceivedSource.asObservable();\r\n\r\n    receiveContext(componentFactoryResolver: ComponentFactoryResolver, injector: Injector) {\r\n        this.contextReceivedSource.next({ resolver: componentFactoryResolver, injector: injector });\r\n    }\r\n}\r\n","import { Component, Input, OnInit, DoCheck, AfterViewInit, AfterViewChecked } from '@angular/core';\r\n\r\n/**\r\n * ConsoleViewerComponent\r\n */\r\n@Component({\r\n    selector: 'console-viewer',\r\n    template: `<textarea id='console_textarea'>{{ text || \"\" }}</textarea>`,\r\n    styleUrls: [`../general-viewer.scss`]\r\n})\r\nexport class ConsoleViewerComponent implements OnInit, AfterViewInit, DoCheck, AfterViewChecked {\r\n    text: string;\r\n    scrollcheck: boolean;\r\n\r\n    /**\r\n     * constructor\r\n     */\r\n    constructor() {\r\n        // console.log(`Console Viewer Created`);\r\n    }\r\n    /**\r\n     * ngOnInit\r\n     */\r\n    ngOnInit() {\r\n        // @ts-ignore\r\n        this.text = console.logs.join('\\n');\r\n    }\r\n\r\n    /**\r\n     * ngOnInit\r\n     */\r\n    ngAfterViewInit() {\r\n        const ct = document.getElementById('console_textarea');\r\n        ct.scrollTo(0, ct.scrollHeight);\r\n    }\r\n\r\n    /**\r\n     * ngDoCheck\r\n     */\r\n    ngDoCheck() {\r\n        // @ts-ignore\r\n        const t = console.logs.join('\\n');\r\n        if (this.text !== t) {\r\n            this.text = t;\r\n            this.scrollcheck = true;\r\n        }\r\n    }\r\n\r\n    ngAfterViewChecked() {\r\n        if (this.scrollcheck) {\r\n            const ct = document.getElementById('console_textarea');\r\n            ct.scrollTo(0, ct.scrollHeight);\r\n            this.scrollcheck = false;\r\n        }\r\n    }\r\n}\r\n","module.exports = \":host {\\n  height: 100%;\\n  width: 100%; }\\n\\ntextarea {\\n  height: 93%;\\n  width: 99%;\\n  overflow: auto;\\n  resize: none;\\n  font-family: sans-serif;\\n  background-color: gainsboro;\\n  color: #505050;\\n  border: none; }\\n\\ndiv {\\n  font-family: sans-serif;\\n  color: #505050;\\n  width: 100%;\\n  padding-left: 10px; }\\n\\nh5 {\\n  font-weight: 700;\\n  font-size: 12px; }\\n\\n.funcDesc {\\n  font-weight: 600; }\\n\\n.paramP {\\n  padding-left: 5px; }\\n\\nspan {\\n  font-weight: 550;\\n  font-style: italic; }\\n\"","import { Observable } from 'rxjs';\r\nimport { Subject } from 'rxjs/Subject';\r\nimport { GIModel } from '@libs/geo-info/GIModel';\r\nimport { DataThreejs } from './data.threejs';\r\n// import @angular stuff\r\nimport { Injectable } from '@angular/core';\r\n\r\n/**\r\n * DataService\r\n * The data service for the Goe-Info viewer.\r\n */\r\n@Injectable()\r\nexport class DataService {\r\n    // GI Model\r\n    private _model: GIModel;\r\n    private _data_threejs: DataThreejs;\r\n    // Others\r\n    imVisible: boolean;\r\n    selecting: any = [];\r\n    // Subscription Handling\r\n    private subject = new Subject<any>();\r\n    /**\r\n     * Create a data service.\r\n     */\r\n    constructor() {\r\n        // Do nothing\r\n        console.log('CALLING constructor in DATA SERVICE');\r\n    }\r\n    /**\r\n     * Msg\r\n     * @param message\r\n     */\r\n    sendMessage(message?: string) {\r\n        this.subject.next({ text: message });\r\n    }\r\n    /**\r\n     * Msg\r\n     */\r\n    clearMessage() {\r\n        this.subject.next();\r\n    }\r\n    /**\r\n     * Msg\r\n     */\r\n    getMessage(): Observable<any> {\r\n        return this.subject.asObservable();\r\n    }\r\n    /**\r\n     * Get the GI Model\r\n     */\r\n    getGIModel(): GIModel {\r\n        // console.log('CALLING getModel in DATA SERVICE');\r\n        return this._model;\r\n    }\r\n    /**\r\n     * Get the THreejs Scene\r\n     */\r\n    getThreejsScene(): DataThreejs {\r\n        // console.log('CALLING getThreejs Scene in DATA SERVICE');\r\n        return this._data_threejs;\r\n    }\r\n\r\n    newThreejsScene(model: any) {\r\n        // this._threejs_scene = new ThreejsScene(model);\r\n    }\r\n\r\n    /**\r\n     * Set the GI Model\r\n     * @param model\r\n     */\r\n    setModel(model: GIModel) {\r\n        console.log('CALLING setModel in DATA SERVICE');\r\n        this._model = model;\r\n        this._data_threejs = new DataThreejs(model);\r\n        this.sendMessage('model_update');\r\n    }\r\n}\r\n","import { DataService } from './data.service';\r\nimport { Subscription } from 'rxjs/Subscription';\r\n// import @angular stuff\r\nimport { Injector } from '@angular/core';\r\n\r\n/**\r\n * DataSubscriber\r\n */\r\nexport class DataSubscriber {\r\n    protected dataService: DataService;\r\n    private _subscription: Subscription;\r\n    private _message: any;\r\n    /**\r\n     * Constructs a new data subscriber.\r\n     * @param injector\r\n     */\r\n    constructor(injector: Injector) {\r\n        this.dataService = injector.get(DataService);\r\n        this.dataService.getMessage().subscribe(message => {\r\n            this._message = message;\r\n            // this.notify(message.text);\r\n        });\r\n    }\r\n    /**\r\n     * TODO\r\n     * @param message\r\n     */\r\n    // notify(message: string) {\r\n    //     console.warn('Notify function not Implemented');\r\n    // }\r\n}\r\n","import * as THREE from 'three';\r\nimport * as OrbitControls from 'three-orbit-controls';\r\nimport { GIModel } from '@libs/geo-info/GIModel';\r\nimport { IThreeJS } from '@libs/geo-info/ThreejsJSON';\r\n\r\n/**\r\n * ThreejsScene\r\n */\r\nexport class DataThreejs {\r\n    // threeJS objects\r\n    public _scene: THREE.Scene;\r\n    public _renderer: THREE.WebGLRenderer;\r\n    public _camera: THREE.PerspectiveCamera;\r\n    public _controls: THREE.OrbitControls;\r\n    public _raycaster: THREE.Raycaster;\r\n    public _mouse: THREE.Vector2;\r\n    // interaction and selection\r\n    public _select_visible = 'Objs';\r\n    public _text: string;\r\n    // number of threejs points, lines, triangles\r\n    public _threejs_nums: [number, number, number] = [0, 0, 0];\r\n    // grid\r\n    public _grid_show = true;\r\n    public _grid_center = [0, 0, 0];\r\n    // the GI model to display\r\n    public _model: GIModel;\r\n    /**\r\n     * Constructs a new data subscriber.\r\n     */\r\n    constructor(model: GIModel) {\r\n        console.log(\"Calling constructor in DataThreejs\");\r\n        //\r\n        this._model = model;\r\n        // scene\r\n        this._scene = new THREE.Scene();\r\n        this._scene.background = new THREE.Color( 0xcccccc );\r\n\r\n        // renderer\r\n        this._renderer =  new THREE.WebGLRenderer( {antialias: true} );\r\n        this._renderer.setPixelRatio( window.devicePixelRatio );\r\n        this._renderer.setSize(window.innerWidth / 2, 1000);\r\n\r\n        // camera settings\r\n        this._camera = new THREE.PerspectiveCamera( 50, 1, 0.01, 20000 );\r\n        this._camera.position.x = 150;\r\n        this._camera.position.y = 100;\r\n        this._camera.position.z = 70;\r\n        this._camera.aspect = 1;\r\n        this._camera.up.set(0, 0, 1);\r\n        this._camera.lookAt( this._scene.position );\r\n        this._camera.updateProjectionMatrix();\r\n\r\n        // orbit controls\r\n        const orbit_controls = OrbitControls(THREE);\r\n        this._controls = new orbit_controls( this._camera, this._renderer.domElement );\r\n        this._controls.enableKeys = false;\r\n        this._controls.update();\r\n\r\n        // mouse\r\n        this._mouse = new THREE.Vector2();\r\n\r\n        // selecting\r\n        this._raycaster = new THREE.Raycaster();\r\n        this._raycaster.linePrecision = 0.05;\r\n\r\n        // add grid and lights to the scene\r\n        this._addGrid();\r\n        this._addHemisphereLight();\r\n\r\n        // add geometry to the scene\r\n        if (model) {\r\n            // add geometry\r\n            const threejs_data: IThreeJS = model.get3jsData();\r\n\r\n            // Create buffers that will be used by all geometry\r\n            const posis_buffer = new THREE.Float32BufferAttribute( threejs_data.positions, 3 );\r\n            const normals_buffer = new THREE.Float32BufferAttribute( threejs_data.normals, 3 );\r\n            const colors_buffer = new THREE.Float32BufferAttribute( threejs_data.colors, 3 );\r\n\r\n            // Add geometry\r\n            this._addTris(threejs_data.triangle_indices, posis_buffer, normals_buffer, colors_buffer);\r\n            this._addLines(threejs_data.edge_indices, posis_buffer, normals_buffer);\r\n            this._addPoints(threejs_data.point_indices, posis_buffer, colors_buffer);\r\n        }\r\n    }\r\n    // ============================================================================\r\n    // Private methods\r\n    // ============================================================================\r\n    /**\r\n     * Creates a hemisphere light\r\n     */\r\n    private _addHemisphereLight() {\r\n        const light: THREE.HemisphereLight = new THREE.HemisphereLight(\r\n            0xffffbb, // skyColor\r\n            0x080820, // groundColor\r\n            1 // intensity\r\n        );\r\n        this._scene.add( light );\r\n    }\r\n    /**\r\n     * Creates an ambient light\r\n     */\r\n    private _addAmbientLight(color: string, intensity: number) {\r\n        const light = new THREE.AmbientLight( color, intensity ); // soft white light\r\n        this._scene.add( light );\r\n    }\r\n\r\n    // Creates a Directional Light\r\n    private _addDirectionalLight() {\r\n        const light = new THREE.DirectionalLight( 0xffffff, 0.5 );\r\n        light.position.set( 0, 0, 1 ).normalize();\r\n        this._scene.add( light );\r\n    }\r\n    /**\r\n     * Draws a grid on the XY plane.\r\n     */\r\n    private _addGrid() {\r\n        for (let i = 0; i < this._scene.children.length; i++) {\r\n            if (this._scene.children[i].name === 'GridHelper') {\r\n                this._scene.remove(this._scene.children[i]);\r\n                i = i - 1;\r\n            }\r\n        }\r\n        // todo: change grid -> grid_value\r\n        if (this._grid_show) {\r\n            const gridhelper = new THREE.GridHelper( 500, 50);\r\n            gridhelper.name = 'GridHelper';\r\n            const vector = new THREE.Vector3(0, 1, 0);\r\n            gridhelper.lookAt(vector);\r\n            gridhelper.position.set(0, 0, 0);\r\n            this._scene.add( gridhelper);\r\n            this._grid_center = [0, 0, 0];\r\n        }\r\n    }\r\n    /**\r\n     * Add threejs triangles to the scene\r\n     */\r\n    private _addTris(tris_i: number[],\r\n            posis_buffer: THREE.Float32BufferAttribute,\r\n            normals_buffer: THREE.Float32BufferAttribute,\r\n            colors_buffer: THREE.Float32BufferAttribute): void {\r\n        const geom = new THREE.BufferGeometry();\r\n        geom.setIndex( tris_i );\r\n        geom.addAttribute( 'position',  posis_buffer);\r\n        geom.addAttribute( 'normal', normals_buffer );\r\n        geom.addAttribute( 'color', colors_buffer);\r\n        const mat = new THREE.MeshPhongMaterial( {\r\n            // specular:  new THREE.Color('rgb(255, 0, 0)'), // 0xffffff,\r\n            specular: 0xffffff,\r\n            emissive: 0xdddddd,\r\n            shininess: 0, // 250\r\n            side: THREE.DoubleSide,\r\n            vertexColors: THREE.VertexColors,\r\n            // wireframe: true\r\n        });\r\n        const mesh: THREE.Mesh = new THREE.Mesh( geom, mat);\r\n        mesh.geometry.computeBoundingSphere();\r\n        mesh.geometry.computeVertexNormals();\r\n\r\n        // show vertex normals\r\n        const vnh = new THREE.VertexNormalsHelper( mesh, 3, 0x0000ff );\r\n        this._scene.add( vnh );\r\n\r\n        // this._geometries.push(geom);\r\n        // this._meshes.push(mesh);\r\n\r\n        // add mesh to scene\r\n        this._scene.add( mesh );\r\n        this._threejs_nums[2] = tris_i.length / 3;\r\n    }\r\n    /**\r\n     * Add threejs lines to the scene\r\n     */\r\n    private _addLines(lines_i: number[],\r\n        posis_buffer: THREE.Float32BufferAttribute,\r\n        normals_buffer: THREE.Float32BufferAttribute): void {\r\n        const geom = new THREE.BufferGeometry();\r\n        geom.setIndex( lines_i );\r\n        geom.addAttribute( 'position', posis_buffer );\r\n        geom.addAttribute( 'normal', normals_buffer);\r\n        // geom.addAttribute( 'color', new THREE.Float32BufferAttribute( colors_flat, 3 ) );\r\n        const mat = new THREE.LineBasicMaterial( {\r\n            color: 0x777777,\r\n            linewidth: 0.1,\r\n            linecap: 'round', // ignored by WebGLRenderer\r\n            linejoin:  'round' // ignored by WebGLRenderer\r\n        } );\r\n\r\n        // this._geometries.push(geom);\r\n\r\n        this._scene.add(new THREE.LineSegments(geom, mat) );\r\n        this._threejs_nums[1] = lines_i.length / 2;\r\n    }\r\n    /**\r\n     * Add threejs points to the scene\r\n     */\r\n    private _addPoints(points_i: number[],\r\n        posis_buffer: THREE.Float32BufferAttribute,\r\n        colors_buffer: THREE.Float32BufferAttribute): void {\r\n        const geom = new THREE.BufferGeometry();\r\n        geom.setIndex( points_i );\r\n        geom.addAttribute( 'position', posis_buffer );\r\n        geom.addAttribute( 'color', colors_buffer );\r\n        // geom.computeBoundingSphere();\r\n        const mat = new THREE.PointsMaterial( {\r\n            size: 0.1,\r\n            vertexColors: THREE.VertexColors\r\n        } );\r\n\r\n        // this._geometries.push(geom);\r\n\r\n        this._scene.add( new THREE.Points(geom, mat) );\r\n        this._threejs_nums[0] = points_i.length;\r\n    }\r\n}\r\n","module.exports = \"<div id=\\\"gi-viewer-container\\\" (mousedown)=\\\"leaflet()\\\">\\r\\n    <threejs-viewer></threejs-viewer>\\r\\n</div>\\r\\n\\r\\n<!-- <div id=\\\"appdiv\\\" (mousedown)=\\\"leaflet()\\\"> -->\\r\\n\\t<!-- <as-split direction=\\\"vertical\\\"> -->\\r\\n\\t\\t<!-- <as-split-area [size]=\\\"90\\\" id=\\\"splitcontainer\\\"> -->\\r\\n\\t\\t  <!-- <div style=\\\"height: 100%\\\"> -->\\r\\n\\t\\t    <!-- <as-split direction=\\\"horizontal\\\"> -->\\r\\n\\t\\t\\t\\t\\t<!-- <as-split-area [size]=\\\"0.5\\\" id=\\\"splitgroups\\\" style=\\\"overflow-x:hidden;overflow-y: auto;\\\"> -->\\r\\n\\t\\t\\t\\t\\t\\t<!-- group -->\\r\\n\\t\\t      <!-- </as-split-area> -->\\r\\n\\t\\t      <!-- <as-split-area [size]=\\\"99.5\\\" id=\\\"splitviewer\\\"> -->\\r\\n\\t\\t        <!-- <viewer-container *ngIf=\\\"imVisible===false\\\"></viewer-container>\\r\\n\\t\\t        <app-map *ngIf=\\\"imVisible===true\\\"></app-map> -->\\r\\n\\t\\t        <!-- <threejs-viewer></threejs-viewer> -->\\r\\n\\t\\t      <!-- </as-split-area> -->\\r\\n\\t\\t    <!-- </as-split> -->\\r\\n\\t\\t  <!-- </div> -->\\r\\n\\t\\t<!-- </as-split-area> -->\\r\\n\\t\\t<!-- <as-split-area [size]=\\\"10\\\" id=\\\"splittoolwindow\\\"> -->\\r\\n\\t\\t\\t<!-- tool window -->\\r\\n\\t\\t<!-- </as-split-area> -->\\r\\n\\t<!-- </as-split> -->\\r\\n<!-- </div> -->\"","module.exports = \"#gi-viewer-container {\\n  width: 100%;\\n  height: 100%;\\n  background-color: yellow;\\n  overflow: hidden; }\\n\"","import { GIModel } from '@libs/geo-info/GIModel';\r\n// import @angular stuff\r\nimport { Component, Input, OnInit, DoCheck } from '@angular/core';\r\n// import app services\r\nimport { DataService } from './data/data.service';\r\n// import others\r\n\r\n/**\r\n * GIViewerComponent\r\n * This component is used in /app/model-viewers/model-viewers-container.component.html\r\n */\r\n@Component({\r\n  selector: 'gi-viewer',\r\n  templateUrl: './gi-viewer.component.html',\r\n  styleUrls: ['./gi-viewer.component.scss']\r\n})\r\nexport class GIViewerComponent implements OnInit, DoCheck {\r\n    imVisible = false; // TODO what is this?\r\n    dataservice: DataService; // TODO why is this here?\r\n    // model data passed to the viewer\r\n    @Input() data: GIModel;\r\n    modelData: GIModel;\r\n    /**\r\n     * constructor\r\n     * @param dataService\r\n     */\r\n    constructor(private dataService: DataService) {\r\n        // Do nothing\r\n    }\r\n    /**\r\n     * setModel Sets the model in the data service.\r\n     * @param data\r\n     */\r\n    setModel(data: GIModel): void {\r\n        try {\r\n            this.dataService.setModel(data);\r\n        } catch (ex) {\r\n            this.modelData = undefined;\r\n            console.error('Error generating model', ex);\r\n        }\r\n    }\r\n    /**\r\n     * ngOnInit\r\n     */\r\n    ngOnInit() {\r\n        this.modelData = this.data;\r\n        this.setModel(this.modelData);\r\n        // this.dataService.newThreejsScene(this.modelData);\r\n    }\r\n    /**\r\n     * ngDoCheck TODO: change to ngOnChange and ngOnDestroy\r\n     */\r\n    ngDoCheck() {\r\n        if (this.modelData !== this.data) {\r\n            this.modelData = this.data;\r\n            this.setModel(this.modelData);\r\n        }\r\n    }\r\n    /**\r\n     * ??? what does this do?\r\n     */\r\n    leaflet() {\r\n        this.imVisible = this.dataService.imVisible;\r\n    }\r\n}\r\n","import { AngularSplitModule } from 'angular-split';\r\nimport { NgxPaginationModule} from 'ngx-pagination';\r\n// import @angular stuff\r\nimport { NgModule, ModuleWithProviders } from '@angular/core';\r\nimport { MatSliderModule } from '@angular/material/slider';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MatTabsModule} from '@angular/material/tabs';\r\nimport { MatTooltipModule} from '@angular/material/tooltip';\r\nimport { MatSortModule} from '@angular/material/sort';\r\nimport { MatExpansionModule} from '@angular/material/expansion';\r\n\r\n// import app components\r\nimport { GIViewerComponent } from './gi-viewer.component';\r\nimport { ThreejsViewerComponent } from './threejs/threejs-viewer.component';\r\n\r\n/**\r\n * GIViewer\r\n * A viewer for Geo-Info models.\r\n */\r\n@NgModule({\r\n    declarations: [\r\n        GIViewerComponent,\r\n        ThreejsViewerComponent,\r\n    ],\r\n    exports: [\r\n        GIViewerComponent,\r\n    ],\r\n    imports: [\r\n        CommonModule,\r\n        AngularSplitModule,\r\n        MatSliderModule,\r\n        NgxPaginationModule,\r\n        MatExpansionModule,\r\n        MatTabsModule,\r\n        MatTooltipModule,\r\n        MatSortModule,\r\n    ]\r\n})\r\nexport class GIViewer {\r\n     static forRoot(): ModuleWithProviders {\r\n        return {\r\n            ngModule: GIViewer\r\n        };\r\n    }\r\n}\r\n","module.exports = \"<div id=\\\"threejs-container\\\" (click)=\\\"render(this)\\\" >\\r\\n    <div *ngIf=\\\"_model_error\\\" style=\\\"position:absolute;color:red;margin-top: 50px;left:40%;width: auto;text-align: center;font-family:sans-serif;font-size: 14px;background-color: white;\\\">Error displaying model:{{text}}</div>\\r\\n    <div *ngIf=\\\"_no_model\\\" style=\\\"position:absolute;color:red;margin-top: 50px;left:40%;width: auto;text-align: center;font-family:sans-serif;font-size: 14px;background-color: white;\\\">Model or Scene not defined.</div>\\r\\n\\r\\n    <button id=\\\"zoomingfit\\\"  \\r\\n        [class.visible]=\\\"Visible === 'zoomfit'\\\" \\r\\n        (click)=\\\"zoomfit()\\\">\\r\\n        <span matTooltip=\\\"zoom to fit\\\"><i class=\\\"fa fa-arrows-alt\\\"></i></span>\\r\\n    </button> \\r\\n    \\r\\n    <!-- <button id=\\\"selecting\\\" [class.visible]=\\\"Visible === 'select'\\\" (click)= \\\"select($event, Visible)\\\" ><i class=\\\"fa fa-mouse-pointer\\\"></i></button> -->\\r\\n    <!-- <button id=\\\"setting\\\" [class.selected]=\\\"settingVisible\\\" (click)= \\\"setting(settingVisible)\\\"><i class=\\\"fa fa-cog\\\"></i></button> -->\\r\\n\\r\\n    <button id=\\\"selecting\\\" [class.selected]=\\\"seVisible\\\" (click)= \\\"select(seVisible)\\\" ><span matTooltip=\\\"select\\\"><i class=\\\"fa fa-mouse-pointer\\\"></i></span></button>\\r\\n    <div id=\\\"shownumber\\\">\\r\\n        <tr>\\r\\n            <td  align=left style=\\\"width: 60px;\\\">Triangles&nbsp;&nbsp;</td>\\r\\n            <td  align=left style=\\\"width: 10px;\\\">{{_threejs_nums[2]}}</td>\\r\\n        </tr>\\r\\n        <tr>\\r\\n            <td  align=left style=\\\"width: 60px;\\\">Lines</td>\\r\\n            <td  align=left style=\\\"width: 10px;\\\">{{_threejs_nums[1]}}</td>\\r\\n        </tr>\\r\\n        <tr>\\r\\n            <td  align=left style=\\\"width: 60px;\\\">Points&nbsp;&nbsp;</td>\\r\\n            <td  align=left style=\\\"width: 10px;\\\">{{_threejs_nums[0]}}</td>\\r\\n        </tr>\\r\\n    </div>\\r\\n\\r\\n    <!-- <button id=\\\"imagery\\\"  \\r\\n        [class.selected]=\\\"imVisible\\\" (click)=\\\"leaflet()\\\">I\\r\\n        </button> -->\\r\\n    <!--setting-->\\r\\n    \\r\\n    <!-- <app-setting *ngIf=\\\"settingVisible == true\\\"></app-setting> -->\\r\\n    <div *ngIf=\\\"seVisible == true\\\">\\r\\n        <button id=\\\"points\\\" [class.selectvisible]=\\\"SelectVisible === 'Points'\\\"><span matTooltip=\\\"Select Points\\\">P</span></button>\\r\\n        <button id=\\\"vertices\\\" [class.selectvisible]=\\\"SelectVisible === 'Vertices'\\\"><span matTooltip=\\\"Select Vertices\\\">V</span></button>\\r\\n        <button id=\\\"edges\\\" [class.selectvisible]=\\\"SelectVisible === 'Edges'\\\"><span matTooltip=\\\"Select Edges\\\">E</span></button>\\r\\n        <button id=\\\"wires\\\" [class.selectvisible]=\\\"SelectVisible === 'Wires'\\\"><span matTooltip=\\\"Select Wires\\\">W</span></button>\\r\\n        <button id=\\\"faces\\\" [class.selectvisible]=\\\"SelectVisible === 'Faces'\\\"><span matTooltip=\\\"Select Faces\\\">F</span></button>\\r\\n        <button id=\\\"objects\\\" [class.selectvisible]=\\\"SelectVisible === 'Objs'\\\"><span matTooltip=\\\"Select Objects\\\">O</span></button>\\r\\n      </div>\\r\\n</div>\\r\\n\"","module.exports = \":host {\\n  width: 100%;\\n  height: 100%;\\n  background-color: green;\\n  overflow: hidden; }\\n\\n#threejs-container {\\n  height: 100%;\\n  width: 100%;\\n  margin: 0px;\\n  overflow: hidden;\\n  color: blue;\\n  font-family: sans-serif; }\\n\\n#container-top-right-resize {\\n  top: 0px;\\n  right: 0px; }\\n\\n#shownumber {\\n  position: absolute;\\n  float: right;\\n  color: black;\\n  right: 0px;\\n  width: 115px;\\n  bottom: 0px;\\n  color: #395d73;\\n  font-family: sans-serif; }\\n\\n/*#rotating{\\r\\n    width: 30px;\\r\\n    height: 25px;\\r\\n    font-size:15px;\\r\\n    right:0px; \\r\\n    text-align:center;\\r\\n    position: absolute;\\r\\n    top: 0px;\\r\\n    background-color:transparent;\\r\\n    border:0;\\r\\n}\\r\\n\\r\\n#paning{\\r\\n    width: 30px;\\r\\n    height: 25px;\\r\\n    font-size:15px;\\r\\n    right:0px; \\r\\n    text-align:center;\\r\\n    position: absolute;\\r\\n    top: 25px;\\r\\n    background-color:transparent;\\r\\n    border:0;\\r\\n}\\r\\n\\r\\n#zooming{\\r\\n    width: 30px;\\r\\n    height: 25px;\\r\\n    font-size:15px;\\r\\n    right:0px; \\r\\n    text-align:center;\\r\\n    position: absolute;\\r\\n    margin-top: 50px;\\r\\n    background-color:transparent;\\r\\n    border:0;\\r\\n}*/\\n\\n/*#imagery{\\r\\n    width: 30px;\\r\\n    height: 25px;\\r\\n    font-size:14px;\\r\\n    right:0px; \\r\\n    text-align:center;\\r\\n    position: absolute;\\r\\n    margin-top: 10px;\\r\\n    background-color:transparent;\\r\\n    border:0;\\r\\n}*/\\n\\n#zoomingfit {\\n  width: 30px;\\n  height: 25px;\\n  font-size: 14px;\\n  right: 0px;\\n  text-align: center;\\n  position: absolute;\\n  margin-top: 10px;\\n  background-color: transparent;\\n  border: 0; }\\n\\n#selecting {\\n  width: 30px;\\n  height: 25px;\\n  font-size: 14px;\\n  right: 0px;\\n  text-align: center;\\n  position: absolute;\\n  margin-top: 35px;\\n  background-color: transparent;\\n  border: 0; }\\n\\n#points {\\n  width: 30px;\\n  height: 25px;\\n  font: 14px bolder;\\n  right: 0px;\\n  text-align: center;\\n  position: absolute;\\n  margin-top: 70px;\\n  background-color: transparent;\\n  border: 0;\\n  font-family: sans-serif; }\\n\\n#vertices {\\n  width: 30px;\\n  height: 25px;\\n  font: 14px bolder;\\n  right: 0px;\\n  text-align: center;\\n  position: absolute;\\n  margin-top: 95px;\\n  background-color: transparent;\\n  border: 0;\\n  font-family: sans-serif; }\\n\\n#edges {\\n  width: 30px;\\n  height: 25px;\\n  font: 14px bolder;\\n  right: 0px;\\n  text-align: center;\\n  position: absolute;\\n  margin-top: 120px;\\n  background-color: transparent;\\n  border: 0;\\n  font-family: sans-serif; }\\n\\n#wires {\\n  width: 30px;\\n  height: 25px;\\n  font: 14px bolder;\\n  right: 0px;\\n  text-align: center;\\n  position: absolute;\\n  margin-top: 145px;\\n  background-color: transparent;\\n  border: 0;\\n  font-family: sans-serif; }\\n\\n#faces {\\n  width: 30px;\\n  height: 25px;\\n  font: 14px bolder;\\n  right: 0px;\\n  text-align: center;\\n  position: absolute;\\n  margin-top: 170px;\\n  background-color: transparent;\\n  border: 0;\\n  font-family: sans-serif; }\\n\\n#objects {\\n  width: 30px;\\n  height: 25px;\\n  font: 14px bolder;\\n  right: 0px;\\n  text-align: center;\\n  position: absolute;\\n  margin-top: 195px;\\n  background-color: transparent;\\n  border: 0;\\n  font-family: sans-serif; }\\n\\n#setting {\\n  width: 30px;\\n  height: 25px;\\n  font-size: 14px;\\n  right: 0px;\\n  text-align: center;\\n  position: absolute;\\n  top: 10px;\\n  background-color: transparent;\\n  border: 0; }\\n\\n.selected {\\n  color: grey; }\\n\\n.visible {\\n  color: grey; }\\n\\n.selectvisible {\\n  background-color: white !important;\\n  color: #395d73; }\\n\"","import { GIModel } from '@libs/geo-info/GIModel';\r\nimport { DataSubscriber } from '../data/data.subscriber';\r\n// import @angular stuff\r\nimport { Component, OnInit, DoCheck, Injector, ElementRef } from '@angular/core';\r\nimport { DataThreejs } from '../data/data.threejs';\r\n\r\n/**\r\n * A threejs viewer for viewing geo-info (GI) models.\r\n * This component gets used in /app/model-viewers/all-viewers/gi-viewer/gi-viewer.component.html\r\n */\r\n@Component({\r\n    selector: 'threejs-viewer',\r\n    templateUrl: './threejs-viewer.component.html',\r\n    styleUrls: ['./threejs-viewer.component.scss']\r\n})\r\nexport class ThreejsViewerComponent extends DataSubscriber implements OnInit, DoCheck {\r\n    public _elem;\r\n    // viewer size\r\n    public _width: number;\r\n    public _height: number;\r\n    // threeJS scene data\r\n    public _data_threejs: DataThreejs;\r\n    // the GI model to display\r\n    public _gi_model: GIModel;\r\n    // num of positions, edges, triangles in threejs\r\n    public _threejs_nums: [number, number, number];\r\n    // flags for displayinhg text in viewer, see html\r\n    public _no_model = false;\r\n    public _model_error = false;\r\n    /**\r\n     * Creates a new viewer,\r\n     * @param injector\r\n     * @param elem\r\n     */\r\n    constructor(injector: Injector, elem: ElementRef) {\r\n        super(injector);\r\n        this._elem = elem;\r\n    }\r\n    /**\r\n     * Called when the viewer is initialised.\r\n     */\r\n    ngOnInit() {\r\n        // console.log('CALLING ngOnInit in THREEJS VIEWER COMPONENT');\r\n        const container = this._elem.nativeElement.children.namedItem('threejs-container');\r\n        // check for container\r\n        if (!container) {\r\n            console.error('No container in Three Viewer');\r\n            return;\r\n        }\r\n        // size of window\r\n        this._width = container.offsetWidth; // container.client_width;\r\n        this._height = container.offsetHeight; // container.client_height;\r\n        // get the model and scene\r\n        this._gi_model = this.dataService.getGIModel();\r\n        this._data_threejs = this.dataService.getThreejsScene();\r\n        container.appendChild( this._data_threejs._renderer.domElement );\r\n        // set the numbers of entities\r\n        this._threejs_nums = this._data_threejs._threejs_nums;\r\n        // ??? What is happening here?\r\n        const self = this;\r\n        this._data_threejs._controls.addEventListener( 'change', function() {self.render( self ); });\r\n        self._data_threejs._renderer.render( self._data_threejs._scene, self._data_threejs._camera );\r\n        // update the model, calles getModel() from data service\r\n        this.updateModel();\r\n    }\r\n    /**\r\n     * TODO What is \"self\"? why not use \"this\"\r\n     * @param self\r\n     */\r\n    public render(self) {\r\n        console.log('CALLING render in THREEJS VIEWER COMPONENT');\r\n        self._data_threejs._renderer.render( self._data_threejs._scene, self._data_threejs._camera );\r\n    }\r\n    /**\r\n     * Called when anything changes\r\n     */\r\n    ngDoCheck() {\r\n        const container = this._elem.nativeElement.children.namedItem('threejs-container');\r\n        const width: number = container.offsetWidth;\r\n        const height: number = container.offsetHeight;\r\n        // this is when dimensions change\r\n        if (width !== this._width || height !== this._height) {\r\n            setTimeout(() => {\r\n                this.onResize();\r\n            }, 50);\r\n        }\r\n    }\r\n    /**\r\n     * Called on window resize.\r\n     */\r\n    public onResize(): void {\r\n        console.log('CALLING onResize in THREEJS VIEWER COMPONENT');\r\n        const container = this._elem.nativeElement.children.namedItem('threejs-container');\r\n        /// check for container\r\n        if (!container) {\r\n            console.error('No container in Three Viewer');\r\n            return;\r\n        }\r\n        ///\r\n        this._width = container.offsetWidth;\r\n        this._height = container.offsetHeight;\r\n        this._data_threejs._camera.aspect = this._width / this._height;\r\n        this._data_threejs._camera.updateProjectionMatrix();\r\n        this._data_threejs._renderer.setSize(this._width, this._height);\r\n        // console.log('ASPECT:::::', this._data_threejs._camera.aspect);\r\n        // this.updateModel();\r\n    }\r\n    /**\r\n     * Called on model updated.\r\n     * @param message\r\n     */\r\n    // public notify(message: string): void {\r\n    //     console.log('CALLING notify in THREEJS VIEWER');\r\n    //     if (message === 'model_update' && this._data_threejs) {\r\n    //         this.updateModel();\r\n    //     }\r\n    // }\r\n    /**\r\n     * Update the model in the viewer.\r\n     */\r\n    public updateModel(): void {\r\n        // console.log('CALLING updateModel in THREEJS VIEWER COMPONENT');\r\n        if ( !this._gi_model || !this._data_threejs ) {\r\n            console.warn('Model or Scene not defined.');\r\n            this._no_model = true;\r\n            return;\r\n        }\r\n        try {\r\n            // Set model flags\r\n            this._model_error = false;\r\n            this._no_model = false;\r\n            // set renderer size\r\n            this._data_threejs._renderer.setSize(this._width, this._height);\r\n            // set camera aspect ratio\r\n            this._data_threejs._camera.aspect = this._width / this._height;\r\n            // render the scene\r\n            this.render(this);\r\n            // console log the scene\r\n            console.log('>> this.scene >>', this._data_threejs._scene);\r\n        } catch (ex) {\r\n            console.error('Error displaying model:', ex);\r\n            this._model_error = true;\r\n            this._data_threejs._text = ex;\r\n        }\r\n    }\r\n}\r\n","import { Component, Input } from '@angular/core';\r\nimport { ModuleDocAware } from '@shared/decorators';\r\n\r\n/**\r\n * HelpViewerComponent\r\n */\r\n@ModuleDocAware\r\n@Component({\r\n  selector: 'procedure-help',\r\n  template: `\r\n  <div *ngIf='output'>\r\n    <h2>{{output.name}}</h2>\r\n    <h4>Module: <span>{{output.module}}</span></h4>\r\n    <h5><span>Description:</span></h5>\r\n    <p>{{output.description}}</p>\r\n    <h5 *ngIf='output.parameters?.length > 0'><span>Parameters: </span></h5>\r\n    <p class='paramP' *ngFor='let param of output.parameters'><span>{{param.name}} - </span>{{param.description}}</p>\r\n    <h5 *ngIf='output.returns'>Returns:</h5>\r\n    <p *ngIf='output.returns'>{{output.returns}}</p>\r\n  </div>\r\n\r\n\r\n  `,\r\n  styleUrls: ['../general-viewer.scss']\r\n})\r\nexport class HelpViewerComponent {\r\n    @Input() output;\r\n    /**\r\n     * constructor\r\n     */\r\n    constructor() {\r\n        // console.log(`Help Viewer Created`);\r\n    }\r\n}\r\n","import { Component, Input, OnInit, DoCheck } from '@angular/core';\r\nimport { Model } from '@modules';\r\n\r\n/**\r\n * TextViewerComponent\r\n */\r\n@Component({\r\n    selector: 'text-viewer',\r\n    template: `<textarea>{{ output || \"no-value\" }}</textarea>`,\r\n    styleUrls: [`../general-viewer.scss`]\r\n})\r\nexport class TextViewerComponent implements OnInit, DoCheck {\r\n    @Input() data;\r\n    output: string;\r\n    /**\r\n     * constructor\r\n     */\r\n    constructor() {\r\n        // console.log(`Text Viewer Created`);\r\n    }\r\n    /**\r\n     * ngOnInit\r\n     */\r\n    ngOnInit() {\r\n        if (typeof this.data === 'number' || this.data === undefined) {\r\n            this.output = this.data;\r\n        } else if (typeof this.data === 'string') {\r\n            this.output = '\"' + this.data + '\"';\r\n        } else if (this.data.constructor === [].constructor) {\r\n            this.output = JSON.stringify(this.data);\r\n        } else if (this.data.constructor === {}.constructor) {\r\n            this.output = JSON.stringify(this.data);\r\n        } else {\r\n            // console.log('Unknown output type:', this.data);\r\n            // this.output = functions.__stringify__(this.data);\r\n            this.output = Model.__stringify__(this.data); // TODO - make this generic\r\n        }\r\n    }\r\n    /**\r\n     * ngDoCheck\r\n     */\r\n    ngDoCheck() {\r\n        if (typeof this.data === 'number' || this.data === undefined) {\r\n            this.output = this.data;\r\n        } else if (typeof this.data === 'string') {\r\n            this.output = '\"' + this.data + '\"';\r\n        } else if (this.data.constructor === [].constructor) {\r\n            this.output = JSON.stringify(this.data);\r\n        } else if (this.data.constructor === {}.constructor) {\r\n            this.output = JSON.stringify(this.data);\r\n        } else {\r\n            // console.log('Unknown output type:', this.data);\r\n            this.output = Model.__stringify__(this.data); // TODO - make this generic\r\n        }\r\n    }\r\n}\r\n","module.exports = \"<div class='viewers-container'>  \\r\\n    <div class='container__header'>\\r\\n        <div class=\\\"tab\\\">\\r\\n            <button class='btn-tab' \\r\\n                [class.active]='view.name == activeView.name'\\r\\n                *ngFor='let view of Viewers;' \\r\\n                (click)='updateView(view)'>\\r\\n            {{view.name}}\\r\\n            </button>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class='content__panel'>\\r\\n        <ng-container #vc></ng-container>\\r\\n    </div>\\r\\n</div>\"","module.exports = \".viewers-container {\\n  display: block;\\n  height: 100%;\\n  overflow: hidden; }\\n\\n.container__header {\\n  flex: 0 1 auto;\\n  height: 35px;\\n  width: 100%;\\n  display: flex;\\n  flex-direction: row;\\n  justify-content: space-between;\\n  padding: 0px 0px 0px 0px;\\n  background-color: #ccc;\\n  border-bottom: 3px solid #eeeeee;\\n  line-height: 35px;\\n  font-size: 18px;\\n  font-weight: 600;\\n  text-align: center; }\\n\\n.content__panel {\\n  background-color: gainsboro;\\n  width: 100%;\\n  height: 100%;\\n  overflow: auto; }\\n\\nbutton.btn {\\n  margin: 10px;\\n  font-size: 14px;\\n  line-height: 18px;\\n  border: 2px solid gray;\\n  border-radius: 4px;\\n  padding: 2px 10px;\\n  background-color: transparent;\\n  color: #505050; }\\n\\nbutton.btn:hover {\\n  color: blue; }\\n\\n/* tab styling */\\n\\n.tab {\\n  border: 2px;\\n  overflow: hidden;\\n  background-color: #ccc; }\\n\\n.tab button {\\n  display: inline-block;\\n  vertical-align: bottom;\\n  background-color: inherit;\\n  color: #505050;\\n  border: none;\\n  outline: none;\\n  cursor: pointer;\\n  padding: 8px 10px;\\n  transition: 0.3s;\\n  font-size: 14px; }\\n\\n.tab button:hover {\\n  color: blue; }\\n\\n.tab button.active {\\n  background-color: #ccc;\\n  color: #000096;\\n  font-weight: 600;\\n  border-color: #222 !important; }\\n\"","import { Component, Injector, Input,\r\n    ViewChild, ViewContainerRef, ComponentFactoryResolver, OnDestroy, OnInit, OnChanges } from '@angular/core';\r\nimport { IView } from './view.interface';\r\nimport { Viewers } from './model-viewers.config';\r\nimport { INode } from '@models/node';\r\nimport { EventEmitter } from 'events';\r\nimport { DataService } from '@services';\r\n\r\n/**\r\n * A component that contains all the viewers.\r\n * This component is used in /app/appmodule/app.component.html\r\n */\r\n@Component({\r\n    // tslint:disable-next-line:component-selector\r\n    selector: 'model-viewers-container',\r\n    templateUrl: 'model-viewers-container.component.html',\r\n    styleUrls: ['model-viewers-container.component.scss']\r\n})\r\nexport class DataViewersContainerComponent implements OnChanges, OnInit, OnDestroy {\r\n    @ViewChild('vc', {read: ViewContainerRef}) vc: ViewContainerRef;\r\n    @Input() data: any;\r\n    @Input() helpView: any;\r\n    currentHelpView: any;\r\n    private views = [];\r\n    private activeView: IView;\r\n    Viewers = Viewers;\r\n    /**\r\n     * Construct the viewer container.\r\n     * @param injector\r\n     * @param r\r\n     */\r\n    constructor(private injector: Injector, private r: ComponentFactoryResolver, private dataService: DataService) {\r\n        // do nothing\r\n    }\r\n    /**\r\n     * ngOnInit\r\n     */\r\n    ngOnInit() {\r\n        this.activeView = this.Viewers[0];\r\n        if (this.dataService.activeView) {\r\n            for (const view of this.Viewers) {\r\n                if (view.name === this.dataService.activeView) {\r\n                    this.activeView = view;\r\n                }\r\n            }\r\n        }\r\n        this.updateView( this.activeView );\r\n    }\r\n    /**\r\n     * ngOnDestroy\r\n     */\r\n    ngOnDestroy() {\r\n        this.dataService.activeView = this.activeView.name;\r\n        this.vc.clear();\r\n        for (const view in this.views) {\r\n            if (this.views[view]) {\r\n                this.views[view].destroy();\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * ngOnChanges\r\n     */\r\n    ngOnChanges() {\r\n        if (this.currentHelpView !== this.helpView) {\r\n            let view;\r\n            for (const v of this.Viewers) {\r\n                if (v.name === 'Help') { view = v; }\r\n            }\r\n            this.currentHelpView = this.helpView;\r\n            this.updateView(view);\r\n        } else { this.updateValue(); }\r\n    }\r\n    /**\r\n     * createView\r\n     * @param view\r\n     */\r\n    createView(view: IView) {\r\n        const component = view.component;\r\n        const factory = this.r.resolveComponentFactory(component);\r\n        const componentRef = factory.create(this.injector);\r\n        /*\r\n        if (view.name != 'Console'){\r\n            componentRef.instance[\"data\"] = this.data;\r\n        }\r\n        */\r\n        return componentRef;\r\n    }\r\n    /**\r\n     * updateView\r\n     * @param view\r\n     */\r\n    updateView(view: IView): void {\r\n        this.activeView = view;\r\n\r\n        if ( this.views[ this.activeView.name ] === undefined) {\r\n            this.views[ this.activeView.name ] = this.createView(view);\r\n        }\r\n\r\n        this.updateValue();\r\n\r\n        this.vc.detach();\r\n        this.vc.insert( this.views[ this.activeView.name ].hostView );\r\n    }\r\n    /**\r\n     * updateValue\r\n     */\r\n    updateValue() {\r\n        try {\r\n            const componentRef =  this.views[ this.activeView.name ];\r\n            if (this.activeView.name === 'Help') {\r\n                componentRef.instance['output'] = this.currentHelpView;\r\n            } else if (this.activeView.name !== 'Console') {\r\n                componentRef.instance['data'] = this.data;\r\n            } else {\r\n                componentRef.instance['scrollcheck'] = true;\r\n            }\r\n        } catch (ex) {\r\n            // console.log(`Active View not defined`);\r\n        }\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { DataViewersContainerComponent } from './model-viewers-container.component';\r\nimport { VIEWER_ARR } from './model-viewers.config';\r\n// viewers\r\nimport { TextViewerComponent } from './all-viewers/text-viewer/viewer.component';\r\nimport { ConsoleViewerComponent } from './all-viewers/console-viewer/viewer.component';\r\nimport { HelpViewerComponent } from './all-viewers/help-viewer/viewer.component';\r\nimport { GIViewer } from './all-viewers/gi-viewer/gi-viewer.module';\r\n// import { ThreejsViewerComponent } from './viewers/gi-viewer/threejs/threejs-viewer.component';\r\n// import { MobiusCesium } from './viewers/cesium-viewer/mobius-cesium.module';\r\n// import { VisualiseComponent } from \"./viewers/cesium-viewer/setting/visualise.component\";\r\n// import { AttributesComponent } from \"./viewers/cesium-viewer/setting/attributes.copmponent\";\r\n\r\n/**\r\n * DataViewersContainer, NgModule\r\n */\r\n@NgModule({\r\n    declarations: [\r\n        DataViewersContainerComponent,\r\n        TextViewerComponent,\r\n        ConsoleViewerComponent,\r\n        HelpViewerComponent,\r\n    ],\r\n    exports: [\r\n        DataViewersContainerComponent\r\n    ],\r\n    imports: [\r\n        CommonModule,\r\n        FormsModule,\r\n        GIViewer,\r\n    ],\r\n    entryComponents: [\r\n        ...VIEWER_ARR\r\n    ],\r\n    providers: [ ]\r\n})\r\nexport class DataViewersContainer {\r\n    /**\r\n     * constructor\r\n     */\r\n    constructor () {\r\n        // do nothing\r\n    }\r\n}\r\n","import { IView } from './view.interface';\r\n// Step-1: Add new ViewerComponet here\r\nimport { TextViewerComponent } from './all-viewers/text-viewer/viewer.component';\r\nimport { ConsoleViewerComponent } from './all-viewers/console-viewer/viewer.component';\r\nimport { HelpViewerComponent } from './all-viewers/help-viewer/viewer.component';\r\nimport { GIViewerComponent } from './all-viewers/gi-viewer/gi-viewer.component';\r\n\r\nexport const VIEWER_ARR = [\r\n    // Step-2: Add Component here\r\n    GIViewerComponent,\r\n    TextViewerComponent,\r\n    ConsoleViewerComponent,\r\n    HelpViewerComponent,\r\n    // JSONViewerComponent,\r\n    // ThreeViewerComponent\r\n    // CesiumViewerComponent,\r\n    // MobiuscesiumComponent,\r\n];\r\n\r\nexport const Viewers: IView[] = [\r\n    // Step-3: Add Viewer Definition here: name, icon and component\r\n    { name: '3D Viewer', icon: undefined, component: GIViewerComponent },\r\n    { name: 'Summary', icon: undefined, component: TextViewerComponent },\r\n    { name: 'Console', icon: undefined, component: ConsoleViewerComponent },\r\n    { name: 'Help', icon: undefined, component: HelpViewerComponent },\r\n    // { name: 'json-viewer', icon: undefined, component: JSONViewerComponent },\r\n    // { name: 'three-viewer', icon: undefined, component: ThreeViewerComponent },\r\n    // { name: 'cesium-viewer', icon: undefined, component: CesiumViewerComponent },\r\n    // { name: 'mobius-cesium', icon: undefined, component: MobiuscesiumComponent },\r\n];\r\n\r\n","import { Component, Input } from '@angular/core';\r\nimport { INode } from '@models/node';\r\nimport { PortUtils } from '@models/port';\r\n\r\n@Component({\r\n  selector: 'add-input',\r\n  template:  `<button (click)='addInput()'>AddInput</button>`,\r\n  styles: [ ]\r\n})\r\nexport class AddInputComponent {\r\n\r\n    @Input() node: INode;\r\n    constructor() {}\r\n\r\n    addInput(): void {\r\n      return;\r\n      /*\r\n      let newPort = PortUtils.getNewInput();\r\n      newPort.parentNode = this.node;\r\n      this.node.input.push(newPort);\r\n      */\r\n    }\r\n\r\n}\r\n","import { Component, Input } from '@angular/core';\r\nimport { NodeUtils } from '@models/node';\r\nimport { IFlowchart } from '@models/flowchart';\r\n\r\n@Component({\r\n  selector: 'add-node',\r\n  template:  `<button (click)='addNode()'>AddNode</button>`,\r\n  styles: [ ]\r\n})\r\nexport class AddNodeComponent {\r\n\r\n    @Input() flowchart: IFlowchart;\r\n    constructor() {}\r\n\r\n    addNode(): void {  this.flowchart.nodes.push(NodeUtils.getNewNode()); }\r\n\r\n}\r\n","import { Component, Input } from '@angular/core';\r\nimport { INode } from '@models/node';\r\nimport { PortUtils } from '@models/port';\r\n\r\n@Component({\r\n  selector: 'add-output',\r\n  template:  `<button (click)='addOutput()'>AddOutput</button>`,\r\n  styles: [ ]\r\n})\r\nexport class AddOutputComponent {\r\n\r\n    @Input() node: INode;\r\n    constructor() {}\r\n\r\n    addOutput(): void {\r\n      return;\r\n      /*\r\n      let newPort = PortUtils.getNewOutput();\r\n      newPort.parentNode = this.node;\r\n      this.node.output.push(newPort);\r\n      */\r\n    }\r\n\r\n}\r\n","import { Component, Input } from '@angular/core';\r\nimport { IFlowchart, FlowchartUtils } from '@models/flowchart';\r\nimport { CodeUtils } from '@models/code';\r\nimport { INode } from '@models/node';\r\nimport { IProcedure } from '@models/procedure';\r\n\r\nimport * as Modules from '@modules';\r\nimport * as gs from 'gs-json';\r\nimport { _parameterTypes } from '@modules';\r\nimport { DataService } from '@services';\r\n\r\nexport const mergeInputsFunc = `\r\nfunction mergeInputs(models){\r\n    let result = __modules__.${_parameterTypes.new}();\r\n    for (let model of models){\r\n        __modules__.${_parameterTypes.merge}(result, model);\r\n    }\r\n    return result;\r\n}\r\n`;\r\n\r\n@Component({\r\n  selector: 'execute',\r\n  /*\r\n  template: `<button class=\"btn--execute\"\r\n                    (click)=\"execute()\">\r\n                Execute\r\n             </button>`,\r\n    */\r\n   template: `<button id='executeButton' class=\"btn\" mat-icon-button title=\"Execute\" (click)=\"execute()\">\r\n    <mat-icon>play_circle_outline</mat-icon>\r\n    </button>\r\n    `,\r\n  styles: [\r\n            `.btn--execute{\r\n                display: inline-block;\r\n                vertical-align: middle;\r\n                font-size: 14px;\r\n                line-height: 18px;\r\n                border: 3px solid #E0C229;\r\n                border-radius: 4px;\r\n                padding: 1px 10px;\r\n                background-color: #E0C229;\r\n                color: #494D59;\r\n                font-weight: 600;\r\n                text-transform: uppercase;\r\n              }\r\n              .btn{\r\n                vertical-align: middle;\r\n                background-color: transparent;\r\n                border: none;\r\n                color: rgb(80,80,80);\r\n              }\r\n              .btn:hover{\r\n                color: blue;\r\n              }`\r\n          ]\r\n})\r\nexport class ExecuteComponent {\r\n\r\n    private globalVars: string;\r\n\r\n    constructor(private dataService: DataService) {}\r\n\r\n    async execute(): Promise<any> {\r\n        const p = new Promise(async (resolve) => {\r\n            this.globalVars = '';\r\n\r\n            // @ts-ignore\r\n            console.logs = [];\r\n\r\n            // reset input of all nodes except start\r\n            for (const node of this.dataService.flowchart.nodes) {\r\n                if (node.type !== 'start') {\r\n                    if (node.input.edges) {\r\n                        node.input.value = undefined;\r\n                    }\r\n                }\r\n            }\r\n\r\n            // order the flowchart\r\n            if (!this.dataService.flowchart.ordered) {\r\n                FlowchartUtils.orderNodes(this.dataService.flowchart);\r\n            }\r\n\r\n            // get the string of all imported functions\r\n            const funcStrings = {};\r\n            for (const func of this.dataService.flowchart.functions) {\r\n                funcStrings[func.name] = await CodeUtils.getFunctionString(func);\r\n            }\r\n\r\n            // execute each node\r\n            for (const node of this.dataService.flowchart.nodes) {\r\n                if (!node.enabled) {\r\n                    node.output.value = undefined;\r\n                    continue;\r\n                }\r\n                await this.executeNode(node, funcStrings);\r\n            }\r\n            resolve('');\r\n        });\r\n        return p;\r\n\r\n\r\n        /*\r\n        this.globalVars = '';\r\n\r\n        // @ts-ignore\r\n        //console.logs = []\r\n\r\n        // reset input of all nodes except start\r\n        for (let node of this.dataService.flowchart.nodes){\r\n            if (node.type != 'start'){\r\n                if (node.input.edges){\r\n                    node.input.value = undefined;\r\n                }\r\n            }\r\n        }\r\n\r\n        // order the flowchart\r\n        if (!this.dataService.flowchart.ordered){\r\n            FlowchartUtils.orderNodes(this.dataService.flowchart);\r\n        }\r\n\r\n        // get the string of all imported functions\r\n        let funcStrings = {};\r\n        for (let func of this.dataService.flowchart.functions){\r\n            funcStrings[func.name] = await CodeUtils.getFunctionString(func);\r\n        }\r\n\r\n        // execute each node\r\n        for (let node of this.dataService.flowchart.nodes){\r\n            if (!node.enabled) {\r\n                node.output.value = undefined;\r\n                continue;\r\n            }\r\n            await this.executeNode(node, funcStrings);\r\n        }\r\n        */\r\n    }\r\n\r\n    async executeNode(node: INode, funcStrings) {\r\n        const params = {'currentProcedure': ['']};\r\n        try {\r\n            // get the code for the node\r\n            const nodeCode = await CodeUtils.getNodeCode(node, true);\r\n            let fnString = nodeCode.join('\\n');\r\n            // add the constants from the start node\r\n            fnString = this.globalVars + fnString;\r\n            params['model'] = node.input.value;\r\n\r\n            // add the imported functions code\r\n            let hasFunctions = false;\r\n            for (const funcName in funcStrings) {\r\n                if (funcStrings.hasOwnProperty(funcName)) {\r\n                    fnString = funcStrings[funcName] + fnString;\r\n                    hasFunctions = true;\r\n                }\r\n            }\r\n            if (hasFunctions) {\r\n                fnString = mergeInputsFunc + '\\n\\n' + fnString;\r\n            }\r\n            console.log(`______________________________________________________________\\n/*     ${node.name.toUpperCase()}     */\\n`);\r\n\r\n            for (const i of nodeCode) {\r\n                if (i.substring(0, 18) === '__params__.current') {\r\n                    continue;\r\n                }\r\n                if (i.length > 500) {\r\n                    console.log(i.substring(0, 500) + '...\\n});\\n');\r\n                } else {\r\n                    console.log(i);\r\n                }\r\n            }\r\n            console.log(`--------------------------\\n`);\r\n            // create the function with the string: new Function ([arg1[, arg2[, ...argN]],] functionBody)\r\n            const fn = new Function('__modules__', '__params__', fnString);\r\n            // execute the function\r\n            const result = fn(Modules, params);\r\n            node.output.value = result;\r\n            if (node.type === 'start') {\r\n                for (const constant in params['constants']) {\r\n                    if (params['constants'].hasOwnProperty(constant)) {\r\n                        const constString = JSON.stringify(params['constants'][constant]);\r\n                        this.globalVars += `const ${constant} = ${constString};\\n`;\r\n                    }\r\n                }\r\n                this.globalVars += '\\n';\r\n            }\r\n        } catch (ex) {\r\n            throw ex;\r\n            node.hasError = true;\r\n            // console.warn(`${node.name} errored`);\r\n\r\n            // Unexpected Identifier\r\n            // Unexpected token\r\n            const prodWithError: string = params['currentProcedure'][0];\r\n            const markError = function(prod: IProcedure, id: string) {\r\n                if (prod['ID'] && id && prod['ID'] === id) {\r\n                    prod.hasError = true;\r\n                }\r\n                if (prod.hasOwnProperty('children')) {\r\n                    prod.children.map(function(p) {\r\n                        markError(p, id);\r\n                    });\r\n                }\r\n            };\r\n            if (prodWithError !== '') {\r\n                node.procedure.map(function(prod: IProcedure) {\r\n                    if (prod['ID'] === prodWithError) {\r\n                        prod.hasError = true;\r\n                    }\r\n                    if (prod.hasOwnProperty('children')) {\r\n                        prod.children.map(function(p) {\r\n                            markError(p, prodWithError);\r\n                        });\r\n                    }\r\n                });\r\n            }\r\n            let error: Error;\r\n            if (ex.toString().indexOf('Unexpected identifier') > -1) {\r\n                error = new Error('Unexpected Identifier error. Did you declare everything?' +\r\n                    'Check that your strings are enclosed in quotes (\")');\r\n            } else if (ex.toString().indexOf('Unexpected token') > -1) {\r\n                error = new Error('Unexpected token error. Check for stray spaces or reserved keywords?');\r\n            } else {\r\n                 error = new Error(ex);\r\n            }\r\n            // @ts-ignore\r\n            console.logs = [];\r\n            console.log(error);\r\n            throw error;\r\n\r\n        }\r\n    }\r\n\r\n}\r\n","\r\nexport class DownloadUtils {\r\n\r\n    static downloadFile(fileName: string, fileContent: Blob) {\r\n        if (window.navigator.msSaveOrOpenBlob) {\r\n            window.navigator.msSaveOrOpenBlob(fileContent, fileName);\r\n        } else {\r\n            const a = document.createElement('a');\r\n            document.body.appendChild(a);\r\n            const url = window.URL.createObjectURL(fileContent);\r\n            a.href = url;\r\n            a.download = fileName;\r\n            a.click();\r\n            setTimeout(() => {\r\n                window.URL.revokeObjectURL(url);\r\n                document.body.removeChild(a);\r\n            }, 0);\r\n        }\r\n    }\r\n}\r\n","export { SaveFileComponent } from './savefile.component';\r\nexport { LoadFileComponent } from './loadfile.component';\r\nexport { NewFileComponent } from './newfile.component';\r\n","import { Component, Output, EventEmitter } from '@angular/core';\r\nimport { IMobius } from '@models/mobius';\r\nimport { Observable } from 'rxjs';\r\nimport { ProcedureTypes } from '@shared/models/procedure';\r\nimport * as circularJSON from 'circular-json';\r\nimport * as funcs from '@modules';\r\nimport { DataService } from '@services';\r\n\r\n@Component({\r\n  selector: 'file-load',\r\n  template:  `<button id='loadfile' class='btn' onclick=\"document.getElementById('file-input').click();\">Load</button>\r\n              <input id=\"file-input\" type=\"file\" name=\"name\" (change)=\"sendloadfile()\" style=\" display: none;\" />`,\r\n  styles: [\r\n            `\r\n            button.btn{\r\n                margin: 0px 0px 0px 0px;\r\n                font-size: 10px;\r\n                line-height: 12px;\r\n                border: 2px solid gray;\r\n                border-radius: 4px;\r\n                padding: 2px 5px;\r\n                background-color: #3F4651;\r\n                color: #E7BF00;\r\n                font-weight: 600;\r\n                text-transform: uppercase;\r\n             }\r\n            button.btn:hover{\r\n                background-color: gray;\r\n                color: white;\r\n            }\r\n\r\n             `\r\n          ]\r\n})\r\nexport class LoadFileComponent {\r\n\r\n    constructor(private dataService: DataService) {}\r\n\r\n\r\n    sendloadfile() {\r\n        const selectedFile = (<HTMLInputElement>document.getElementById('file-input')).files[0];\r\n        const stream = Observable.create(observer => {\r\n            const reader = new FileReader();\r\n            reader.onloadend = () => {\r\n                function checkMissingProd(prodList: any[]) {\r\n                    let check = true;\r\n                    for (const prod of prodList) {\r\n                        if (prod.children) {\r\n                            if (!checkMissingProd(prod.children)) {\r\n                                check = false;\r\n                            }\r\n                        }\r\n                        prod.hasError = false;\r\n                        if (prod.type !== ProcedureTypes.Function) { continue; }\r\n                        if (!funcs[prod.meta.module] || !funcs[prod.meta.module][prod.meta.name]) {\r\n                            prod.hasError = true;\r\n                            check = false;\r\n                        }\r\n                    }\r\n                    return check;\r\n                }\r\n                // if (typeof reader.result === 'string') {}\r\n                const f = circularJSON.parse(<string>reader.result);\r\n                const file: IMobius = {\r\n                    name: f.name,\r\n                    author: f.author,\r\n                    flowchart: f.flowchart,\r\n                    last_updated: f.last_updated,\r\n                    version: f.version\r\n                };\r\n                let hasError = false;\r\n                for (const node of file.flowchart.nodes) {\r\n                    if (!checkMissingProd(node.procedure)) {\r\n                        node.hasError = true;\r\n                        hasError = true;\r\n                    }\r\n                }\r\n                if (hasError) {\r\n                    alert('The flowchart contains functions that does not exist in the current version of Mobius');\r\n                }\r\n                observer.next(file);\r\n                observer.complete();\r\n                };\r\n            reader.readAsText(selectedFile);\r\n        });\r\n        stream.subscribe(loadeddata => {\r\n            this.dataService.file = loadeddata;\r\n            this.dataService.newFlowchart = true;\r\n            if (this.dataService.node.type !== 'end') {\r\n                for (let i = 0; i < loadeddata.flowchart.nodes.length; i++) {\r\n                    if (loadeddata.flowchart.nodes[i].type === 'end') {\r\n                        loadeddata.flowchart.meta.selected_nodes = [i];\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            document.getElementById('executeButton').click();\r\n            const zooming = document.getElementById('zoomToFit');\r\n            if (zooming) {\r\n                zooming.click();\r\n                this.dataService.newFlowchart = false;\r\n            } else {\r\n                this.dataService.newFlowchart = true;\r\n            }\r\n        });\r\n        (<HTMLInputElement>document.getElementById('file-input')).value = '';\r\n    }\r\n\r\n\r\n    //   @ViewChild('fileInput') fileInput: ElementRef;\r\n    //   openPicker(): void{\r\n    //     let el: HTMLElement = this.fileInput.nativeElement as HTMLElement;\r\n    //     el.click();\r\n    //   }\r\n\r\n    //   loadFile(url ?:string): void{\r\n    //     let file = this.fileInput.nativeElement.files[0];\r\n    //     if (file) {\r\n    //         let reader = new FileReader();\r\n    //         reader.readAsText(file, \"UTF-8\");\r\n    //         let fs = this.flowchartService;\r\n    //         reader.onload = function (evt) {\r\n    //           let fileString: string = evt.target[\"result\"];\r\n    //           fs.loadFile(fileString);\r\n    //         }\r\n    //         reader.onerror = function (evt) {\r\n    //             console.log(\"Error reading file\");\r\n    //         }\r\n    //     }\r\n    // this.flowchartService.loadFile(url);\r\n}\r\n","import { Component, Output, EventEmitter, ChangeDetectorRef } from '@angular/core';\r\nimport { IMobius } from '@models/mobius';\r\nimport { FlowchartUtils } from '@models/flowchart';\r\nimport * as circularJSON from 'circular-json';\r\nimport { DataService } from '@services';\r\n\r\n@Component({\r\n  selector: 'file-new',\r\n  template:  `<button id='newfile' class='btn' (click)='sendNewFile()'>New</button>`,\r\n  styles: [\r\n            `\r\n            button.btn{\r\n                margin: 0px 0px 0px 0px;\r\n                font-size: 10px;\r\n                line-height: 12px;\r\n                border: 2px solid gray;\r\n                border-radius: 4px;\r\n                padding: 2px 5px;\r\n                background-color: #3F4651;\r\n                color: #E7BF00;\r\n                font-weight: 600;\r\n                text-transform: uppercase;\r\n            }\r\n            button.btn:hover{\r\n                background-color: gray;\r\n                color: white;\r\n            }\r\n             `\r\n          ]\r\n})\r\nexport class NewFileComponent {\r\n\r\n    @Output() create = new EventEmitter();\r\n\r\n    constructor(private dataService: DataService, private cdr: ChangeDetectorRef) {}\r\n\r\n    sendNewFile() {\r\n        const confirmed = confirm('Resetting would delete the current flowchart. Would you like to continue?');\r\n        if (!confirmed) { return; }\r\n        const file: IMobius = {\r\n            name: 'default_file.mob',\r\n            author: 'new_user',\r\n            flowchart: FlowchartUtils.newflowchart(),\r\n            last_updated: new Date(),\r\n            version: 1\r\n        };\r\n        this.dataService.file = file;\r\n        const zooming = document.getElementById('zoomToFit');\r\n        if (zooming) {\r\n            zooming.click();\r\n            this.dataService.newFlowchart = false;\r\n        } else {\r\n            this.dataService.newFlowchart = true;\r\n        }\r\n        this.cdr.detectChanges();\r\n    }\r\n}\r\n","import { Component, Input} from '@angular/core';\r\nimport { IMobius } from '@models/mobius';\r\nimport { DownloadUtils } from './download.utils';\r\nimport * as circularJSON from 'circular-json';\r\nimport { FlowchartUtils } from '@models/flowchart';\r\nimport { DataService } from '@services';\r\n\r\n@Component({\r\n  selector: 'file-save',\r\n  template:  `<button id='savefile' class='btn' (click)='download()'>Save</button>`,\r\n  styles: [\r\n            `\r\n            button.btn{\r\n                margin: 0px 0px 0px 0px;\r\n                font-size: 10px;\r\n                line-height: 12px;\r\n                border: 2px solid gray;\r\n                border-radius: 4px;\r\n                padding: 2px 5px;\r\n                background-color: #3F4651;\r\n                color: #E7BF00;\r\n                font-weight: 600;\r\n                text-transform: uppercase;\r\n             }\r\n            button.btn:hover{\r\n                background-color: gray;\r\n                color: white;\r\n            }\r\n             `\r\n          ]\r\n})\r\nexport class SaveFileComponent {\r\n\r\n    constructor(private dataService: DataService) {}\r\n\r\n\r\n    // todo: save file\r\n    download() {\r\n        const f = this.dataService.file;\r\n\r\n        if (!f.flowchart.ordered) {\r\n            FlowchartUtils.orderNodes(f.flowchart);\r\n        }\r\n        const savedfile = circularJSON.parse(circularJSON.stringify(f));\r\n        for (const node of savedfile.flowchart.nodes) {\r\n            if (node.input.hasOwnProperty('value')) {\r\n                node.input.value = undefined;\r\n            }\r\n            if (node.output.hasOwnProperty('value')) {\r\n                node.output.value = undefined;\r\n            }\r\n            for (const prod of node.state.procedure) {\r\n                prod.selected = false;\r\n            }\r\n            node.state.procedure = [];\r\n        }\r\n\r\n        // **** need to modify this when changing the input's constant function:\r\n        // **** this part resets the value of the last argument of the function when saving the file\r\n        /*\r\n        for (const prod of savedfile.flowchart.nodes[0].procedure) {\r\n            prod.args[prod.argCount - 1].value = undefined;\r\n        }\r\n        */\r\n\r\n\r\n        savedfile.flowchart.meta.selected_nodes = [0];\r\n        for (const edge of savedfile.flowchart.edges) {\r\n            edge.selected = false;\r\n        }\r\n\r\n        savedfile.name = savedfile.flowchart.name;\r\n\r\n        const fileString = circularJSON.stringify(savedfile);\r\n        const fname = `${savedfile.flowchart.name.replace(/\\ /g, '_')}.mob`;\r\n        const blob = new Blob([fileString], {type: 'application/json'});\r\n        DownloadUtils.downloadFile(fname, blob);\r\n\r\n    }\r\n\r\n}\r\n","import { Component, Input } from '@angular/core';\r\nimport { INode } from '@models/node';\r\n\r\n@Component({\r\n  selector: 'panel-header',\r\n  template:  `<div class='panel__header'>\r\n                    <h3>{{node?.name}} // {{title}}</h3>\r\n              </div>`,\r\n  styles: [\r\n            `.panel__header{\r\n                font-weight: 600;\r\n                border: 2px solid #222;\r\n                border-radius: 4px;\r\n                padding: 5px;\r\n             }\r\n             h3{\r\n                margin: 0px;\r\n             }`\r\n          ]\r\n})\r\nexport class HeaderComponent {\r\n\r\n    @Input() node: INode;\r\n    @Input() title: string;\r\n\r\n    constructor() {}\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'navigation',\r\n  template: `<ul class='nav'>\r\n                <li class='link' *ngFor='let link of _links;'\r\n                      [class.active]='link.path == _router.url'\r\n                      [routerLink]=\"link.path\"\r\n                      >{{link.name}}</li>\r\n              </ul>`,\r\n  styles: [`\r\n      ul.nav{\r\n        margin: 0px;\r\n        padding: 0px;\r\n      }\r\n\r\n      li.link{\r\n        display: inline;\r\n        border: 2px solid gray;\r\n        border-radius: 4px;\r\n        margin: 15px 15px 15px 0px;\r\n        padding: 5px;\r\n        text-transform: uppercase;\r\n        font-weight: 600;\r\n        cursor: pointer;\r\n        font-size: 16px;\r\n      }\r\n\r\n      li.link:hover{\r\n        background-color: gray;\r\n        color: white;\r\n      }\r\n\r\n      .active{\r\n        background-color: #222;\r\n        color: white;\r\n        border-color: #222 !important;\r\n      }\r\n  `],\r\n})\r\nexport class NavigationComponent {\r\n\r\n    _links = [\r\n      { path: '/about',\r\n        name: 'about'\r\n      },\r\n      { path: '/gallery',\r\n        name: 'gallery'\r\n      },\r\n      { path: '/dashboard',\r\n        name: 'dashboard'\r\n      },\r\n      { path: '/editor',\r\n        name: 'editor'\r\n      },\r\n\r\n    ];\r\n\r\n    constructor(private _router: Router) { }\r\n\r\n}\r\n","module.exports = \"<h1>Page Not Found</h1>\\r\\n<p>Dolore ex aliqua ut incididunt laborum deserunt pariatur officia.</p>\\r\\n\"","module.exports = \"\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'page-not-found',\r\n  templateUrl: './not-found.component.html',\r\n  styleUrls: ['./not-found.component.scss'],\r\n})\r\nexport class PageNotFoundComponent {\r\n\r\n    constructor() {  }\r\n\r\n}\r\n","module.exports = \"<div class='container container--parameter'>\\r\\n\\r\\n    <div class='parameter__name'>{{ port.name }}</div>\\r\\n\\r\\n    <!-- Slider, SimpleInput ... etc -->\\r\\n    <div class='parameter__mode' [ngSwitch]=\\\"port.meta.mode\\\">\\r\\n        \\r\\n        <!-- Simple Input Template -->\\r\\n        <div *ngSwitchCase=\\\"PortTypes.SimpleInput\\\">\\r\\n            <input [(ngModel)]='port.value' name='port.name' placeholder='Enter Value: Defaults to {{port.default}}'> \\r\\n        </div>\\r\\n\\r\\n        <div *ngSwitchCase=\\\"PortTypes.Slider\\\">\\r\\n            <!-- <input  placeholder='Enter Value: Defaults to {{port.default}}'> -->\\r\\n            <input [(ngModel)]='port.value' value='port.value' placeholder='{{port.default}}' disabled>\\r\\n            <input [(ngModel)]='port.value' name='port.name' placeholder='{{port.default}}' type=\\\"range\\\">\\r\\n        </div>\\r\\n\\r\\n        <div *ngSwitchCase=\\\"PortTypes.Checkbox\\\">\\r\\n            <input *ngSwitchCase=\\\"PortTypes.Checkbox\\\" [(ngModel)]='port.value' name='port.name' type=\\\"checkbox\\\">\\r\\n        </div>\\r\\n\\r\\n        <div *ngSwitchCase=\\\"PortTypes.URL\\\">\\r\\n            <input [(ngModel)]='port.value' name='port.name' placeholder='Enter URL: Defaults to {{port.default}}'> \\r\\n        </div>\\r\\n        <div *ngSwitchCase=\\\"PortTypes.File\\\">\\r\\n            <input (change)=\\\"onFileChange($event)\\\" type=\\\"file\\\">\\r\\n        </div>\\r\\n    \\r\\n        <!-- TODO1: SwitchCase for remaining PortTypes -->\\r\\n        <!-- TODO2: Connect values to port.value -->\\r\\n    \\r\\n    </div>\\r\\n\\r\\n</div>\"","module.exports = \".container {\\n  margin: 5px 0px; }\\n\\n.container--parameter {\\n  display: flex;\\n  flex-direction: row;\\n  flex-wrap: wrap; }\\n\\n.parameter__name {\\n  width: 100px;\\n  height: auto;\\n  word-wrap: break-word; }\\n\"","import { Component, Input, Output, EventEmitter } from '@angular/core';\r\nimport { IPortInput, InputType } from '@models/port';\r\n\r\n@Component({\r\n  selector: 'input-port-viewer',\r\n  templateUrl: './input-port-viewer.component.html',\r\n  styleUrls: ['./input-port-viewer.component.scss']\r\n})\r\nexport class InputPortViewerComponent {\r\n\r\n    @Input() port: IPortInput;\r\n    PortTypes = InputType;\r\n\r\n    constructor() { }\r\n\r\n    onFileChange(event) {\r\n      this.port.value = event.target.files[0];\r\n    }\r\n\r\n}\r\n","module.exports = \"<h2>{{displayName()}}</h2>\\r\\n<textarea id='display-flowchart-desc' [(ngModel)]='flowchart.description' placeholder=\\\"Flowchart Description\\\" disabled></textarea>\\r\\n<hr>\\r\\n\\r\\n<!-- <p>Edit the parameters of your flowchart here. These parameters are visible in the viewer when you share your flowchart.</p> -->\\r\\n<procedure-input-viewer *ngFor=\\\"let prod of startNode.procedure\\\" [prod]=\\\"prod\\\"></procedure-input-viewer>\\r\\n\"","module.exports = \".container {\\n  background-color: transparent;\\n  width: auto;\\n  height: auto;\\n  display: flex;\\n  flex-direction: column;\\n  flex-wrap: wrap; }\\n\\nh2 {\\n  color: #505050;\\n  text-align: left;\\n  padding-left: 15px;\\n  font-size: 12px;\\n  line-height: 16px; }\\n\\np {\\n  color: #505050;\\n  text-align: left;\\n  padding-left: 15px;\\n  font-size: 12px;\\n  line-height: 14px; }\\n\\nhr {\\n  border-top: 2px solid #efefef; }\\n\\ndiv[class^=\\\"container--\\\"] {\\n  display: flex;\\n  flex-direction: column;\\n  margin: 10px 0px; }\\n\\ntextarea {\\n  color: #505050;\\n  background-color: gainsboro;\\n  border: none;\\n  padding: 2px 0px 0px 15px;\\n  font-family: sans-serif;\\n  font-size: 12px;\\n  margin: 0px;\\n  width: 90%;\\n  min-height: 20px;\\n  max-height: 300px;\\n  resize: none; }\\n\"","import { Component, Input, AfterViewInit } from '@angular/core';\r\nimport { INode } from '@models/node';\r\nimport { IFlowchart } from '@models/flowchart';\r\n\r\nconst canvas = document.createElement('canvas');\r\nconst ctx = canvas.getContext('2d');\r\nctx.font = '12px sans-serif';\r\n\r\n@Component({\r\n  selector: 'parameter-viewer',\r\n  templateUrl: './parameter-viewer.component.html',\r\n  styleUrls: ['./parameter-viewer.component.scss']\r\n})\r\nexport class ParameterViewerComponent implements AfterViewInit {\r\n    @Input() flowchart: IFlowchart;\r\n    @Input() startNode: INode;\r\n    @Input() endNode: INode;\r\n\r\n    ngAfterViewInit() {\r\n        const textarea = document.getElementById('display-flowchart-desc');\r\n        const desc = this.flowchart.description.split('\\n');\r\n        const textareaWidth = textarea.getBoundingClientRect().width;\r\n        let lineCount = desc.length;\r\n        for (const line of desc) {\r\n            lineCount += Math.floor(ctx.measureText(line).width / textareaWidth) + 1;\r\n        }\r\n\r\n        textarea.style.height = lineCount * 7.5 + 'px';\r\n    }\r\n\r\n    displayName() {\r\n        return this.flowchart.name.replace(/_/g, ' ');\r\n    }\r\n\r\n}\r\n\r\n\r\n","module.exports = \"<div class='container'>\\r\\n    <div class='container--parameter'>\\r\\n        <input class='input-const-name' [class.disabled-input]='true' [value]='displayConstName()' \\r\\n        [style.width.px]='inputSize(prod.args[prod.argCount-2].value,\\\"Undefined\\\") + 10' disabled>\\r\\n\\r\\n        <ng-container class='parameter__name' [ngSwitch]=\\\"prod.meta.inputMode\\\">\\r\\n\\r\\n            <input *ngSwitchCase=\\\"PortTypes.SimpleInput\\\" [(ngModel)]='prod.args[prod.argCount-1].value' \\r\\n            placeholder='{{prod.args[prod.argCount-1].default}}'\\r\\n            [style.width.px]='inputSize(prod.args[prod.argCount-1].value, prod.args[prod.argCount-1].default)'>\\r\\n            \\r\\n            <ng-container *ngSwitchCase=\\\"PortTypes.Slider\\\">\\r\\n                <mat-slider\\r\\n                    [(ngModel)]='prod.args[prod.argCount-1].value'\\r\\n                    thumbLabel\\r\\n                    tickInterval=\\\"auto\\\"\\r\\n                    min={{prod.args[prod.argCount-1].min||0}}\\r\\n                    max={{prod.args[prod.argCount-1].max||100}}></mat-slider>\\r\\n                <input [class.disabled-input]='true' [(ngModel)]='prod.args[prod.argCount-1].value' \\r\\n                [style.width.px]='inputSize(prod.args[prod.argCount-1].value, \\\"\\\")' disabled>\\r\\n\\r\\n\\r\\n                <!--\\r\\n                <input [(ngModel)]='prod.args[prod.argCount-1].value' name='prod.args[prod.argCount-1].value' type=\\\"range\\\" placeholder='{{prod.args[prod.argCount-1].default}}'>\\r\\n                <input [(ngModel)]='prod.args[prod.argCount-1].value' value='prod.args[prod.argCount-1].value'  placeholder='{{prod.args[prod.argCount-1].default}}' disabled>\\r\\n                -->\\r\\n            </ng-container>\\r\\n            <input *ngSwitchCase=\\\"PortTypes.Checkbox\\\" [(ngModel)]='prod.args[prod.argCount-1].value' type=\\\"checkbox\\\">\\r\\n            <input *ngSwitchCase=\\\"PortTypes.URL\\\" [(ngModel)]='prod.args[prod.argCount-1].value' placeholder='{{prod.args[prod.argCount-1].default}}' \\r\\n            [style.width.px]='inputSize(prod.args[prod.argCount-1].value, prod.args[prod.argCount-1].default)'>\\r\\n            <input *ngSwitchCase=\\\"PortTypes.File\\\" (change)=\\\"onFileChange($event)\\\" type=\\\"file\\\">\\r\\n        </ng-container>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n\"","module.exports = \".container {\\n  display: block;\\n  margin: 5px 0px 0px 5px;\\n  width: 100%; }\\n\\n.container--parameter {\\n  display: inline-block;\\n  flex-direction: row;\\n  flex-wrap: wrap;\\n  bottom: 0px;\\n  padding-bottom: 5px;\\n  border-bottom: 1px solid #efefef;\\n  border-left: 1px solid #efefef;\\n  width: 100%; }\\n\\n.container--input {\\n  display: inline-flex;\\n  flex-direction: row; }\\n\\ninput {\\n  color: #505050;\\n  background-color: gainsboro;\\n  max-width: 96%;\\n  border: none;\\n  border-bottom: 1px solid #505050;\\n  margin-left: 5px;\\n  vertical-align: bottom; }\\n\\ninput.disabled-input {\\n    border-bottom: none; }\\n\\n.input-const-name {\\n  min-width: 100px; }\\n\\n.parameter__name {\\n  display: inline-block;\\n  flex-direction: row;\\n  flex-wrap: wrap;\\n  width: 100px; }\\n\\nmat-slider {\\n  width: 300px; }\\n\"","import { Component, Input, Output, EventEmitter } from '@angular/core';\r\nimport { IProcedure } from '@models/procedure';\r\nimport { InputType } from '@models/port';\r\n\r\nconst canvas = document.createElement('canvas');\r\nconst ctx = canvas.getContext('2d');\r\nctx.font = '13px Arial';\r\n\r\n@Component({\r\n  selector: 'procedure-input-viewer',\r\n  templateUrl: './procedure-input-viewer.component.html',\r\n  styleUrls: ['./procedure-input-viewer.component.scss']\r\n})\r\nexport class ProcedureInputViewerComponent {\r\n\r\n    @Input() prod: IProcedure;\r\n    @Output() delete = new EventEmitter();\r\n    PortTypes = InputType;\r\n\r\n    constructor() { }\r\n\r\n    editOptions(): void { }\r\n\r\n    onFileChange(event) {\r\n      this.prod.args[this.prod.argCount - 1].value = event.target.files[0];\r\n    }\r\n\r\n    displayConstName() {\r\n        let val = this.prod.args[this.prod.argCount - 2].value;\r\n        if (!val) {\r\n            return 'undefined :';\r\n        }\r\n        if (val.substring(0, 1) === '\"' || val.substring(0, 1) === '\\'') {\r\n            val = val.substring(1, val.length - 1);\r\n        }\r\n        return val.replace(/_/g, ' ') + ':';\r\n    }\r\n\r\n    inputSize(val, defaultVal) {\r\n        if (val === undefined || val === '') { return ctx.measureText(defaultVal).width + 5; }\r\n        return ctx.measureText(val).width + 5;\r\n    }\r\n\r\n\r\n}\r\n","export { ModuleAware } from './module-aware.decorator';\r\nexport { ModuleDocAware } from './module-aware.decorator';\r\nexport { ProcedureTypesAware } from './prodtypes-aware.decorator';\r\nexport { ViewerTypesAware } from './viewertypes-aware.decorator';\r\nexport { PortTypesAware } from './porttypes-aware.decorator';\r\n","import { Injectable } from '@angular/core';\r\n\r\nimport { IModule, IFunction } from '@models/procedure';\r\nimport { IArgument } from '@models/code';\r\n//import * as doc from '@assets/typedoc-json/doc.json';\r\nconst doc = require('@assets/typedoc-json/doc.json');\r\n\r\nimport * as Modules from '@modules';\r\n\r\nlet docs;\r\nconst module_list = [];\r\n\r\n// todo: bug fix for defaults\r\nfunction extract_params(func: Function): [IArgument[], boolean] {\r\n    const fnStr = func.toString().replace( /((\\/\\/.*$)|(\\/\\*[\\s\\S]*?\\*\\/))/mg, '');\r\n\r\n    let result = fnStr.slice(fnStr.indexOf('(') + 1, fnStr.indexOf(')')).split(','); // .match( /([^\\s,]+)/g);\r\n    if (result === null || result[0] === '') {\r\n         result = [];\r\n    }\r\n    const final_result = result.map(function(r) {\r\n        r = r.trim();\r\n        const r_value = r.split('=');\r\n\r\n        if (r_value.length === 1) {\r\n            return { name: r_value[0].trim(), value: undefined, default: 0};\r\n        } else {\r\n            return { name: r_value[0].trim(), value: undefined, default: 0 };\r\n        }\r\n\r\n    });\r\n    let hasReturn = true;\r\n    if (fnStr.indexOf('return') === -1 || fnStr.indexOf('return;') !== -1) {\r\n        hasReturn = false;\r\n    }\r\n    return [final_result, hasReturn];\r\n}\r\n\r\nexport function ModuleAware(constructor: Function) {\r\n    if (module_list.length === 0) {\r\n        for ( const m_name in Modules ) {\r\n            if (m_name[0] === '_') { continue; }\r\n\r\n            const modObj = <IModule>{};\r\n            modObj.module = m_name;\r\n            modObj.functions = [];\r\n\r\n            for ( const fn_name of Object.keys(Modules[m_name])) {\r\n\r\n                const func = Modules[m_name][fn_name];\r\n\r\n                const fnObj = <IFunction>{};\r\n                fnObj.module = m_name;\r\n                fnObj.name = fn_name;\r\n                fnObj.argCount = func.length;\r\n                const args = extract_params(func);\r\n                fnObj.args = args[0];\r\n                fnObj.hasReturn = args[1];\r\n                modObj.functions.push(fnObj);\r\n            }\r\n            module_list.push(modObj);\r\n        }\r\n    }\r\n    constructor.prototype.Modules = module_list;\r\n}\r\n\r\nexport function ModuleDocAware(constructor: Function) {\r\n    if (!docs) {\r\n        docs = {};\r\n        for (const mod of doc.children) {\r\n            let modName = mod.name.split('/');\r\n            modName = modName[modName.length - 1];\r\n            if (modName.substr(0,1) === '\"' || modName.substr(0,1) === \"'\"){\r\n                modName = modName.substr(1, modName.length - 2);\r\n            } else {\r\n                modName = modName.substr(0, modName.length - 1);\r\n            }\r\n            if (modName.substr(0, 1) === '_' || modName === 'index') {\r\n                continue;\r\n            }\r\n            const moduleDoc = {};\r\n            for (const func of mod.children) {\r\n                const fn = {};\r\n                fn['name'] = func.name;\r\n                fn['module'] = modName;\r\n                if (!func['signatures']) { continue; }\r\n                if (func['signatures'][0].comment) {\r\n                    const cmmt = func['signatures'][0].comment;\r\n                    fn['description'] = cmmt.shortText;\r\n                    if (cmmt.tags) {\r\n                        for (const fnTag of cmmt.tags) {\r\n                            if (fnTag.tag === 'summary') { fn['summary'] = fnTag.text; }\r\n                        }\r\n                    }\r\n                    fn['returns'] = cmmt.returns;\r\n                    if (fn['returns']) { fn['returns'] = fn['returns'].trim(); }\r\n                }\r\n                fn['parameters'] = [];\r\n                if (func['signatures'][0].parameters) {\r\n                    for (const param of func['signatures'][0].parameters) {\r\n                        let namecheck = true;\r\n                        for (const systemVarName in Modules._parameterTypes) {\r\n                            if (param.name === Modules._parameterTypes[systemVarName]) {\r\n                                namecheck = false;\r\n                                break;\r\n                            }\r\n                        }\r\n                        if (!namecheck) { continue; }\r\n                        const pr = {};\r\n\r\n                        pr['name'] = param.name;\r\n                        if (param.comment) {\r\n                            pr['description'] = param.comment.shortText || param.comment.text;\r\n                        }\r\n                        if (param.type.type === 'array') {\r\n                            pr['type'] = `${param.type.elementType.name}[]`;\r\n                        } else if (param.type.type === 'intrinsic') {\r\n                            pr['type'] = param.type.name;\r\n                        } else if (param.type.type === 'reference') {\r\n                            pr['type'] = param.type.name;\r\n                        } else {\r\n                            /**\r\n                             * TODO: Update param type here\r\n                             */\r\n                            console.log('param type requires updating:', param.type);\r\n                            pr['type'] = param.type.type;\r\n                        }\r\n                        fn['parameters'].push(pr);\r\n                    }\r\n                }\r\n                moduleDoc[func.name] = fn;\r\n            }\r\n            docs[modName] = moduleDoc;\r\n        }\r\n    }\r\n    constructor.prototype.ModuleDoc = docs;\r\n}\r\n","import { InputType } from '@models/port';\r\n\r\nexport function PortTypesAware(constructor: Function) {\r\n    constructor.prototype.PortTypes = InputType;\r\n\r\n    // array form\r\n    const keys = Object.keys(InputType);\r\n    constructor.prototype.PortTypesArr = keys.slice(keys.length / 2);\r\n}\r\n","import { ProcedureTypes } from '@models/procedure';\r\n\r\nexport function ProcedureTypesAware(constructor: Function) {\r\n    constructor.prototype.ProcedureTypes = ProcedureTypes;\r\n\r\n    // array form\r\n    const keys = Object.keys(ProcedureTypes);\r\n    constructor.prototype.ProcedureTypesArr = keys.slice(keys.length / 2);\r\n}\r\n","import { OutputType } from '@models/port';\r\n\r\nexport function ViewerTypesAware(constructor: Function) {\r\n    constructor.prototype.ViewerTypes = OutputType;\r\n\r\n    // array form\r\n    const keys = Object.keys(OutputType);\r\n    constructor.prototype.ViewerTypesArr = keys.slice(keys.length / 2);\r\n}\r\n","export * from './mobfile-reader.directive';\r\n","/*\r\n *  Adding this to an HTML5 input element\r\n *  allows for the file being read to be converted into a Mobius\r\n *  Flowchart\r\n *\r\n */\r\nimport { Directive, ElementRef, Input, Output, HostBinding, HostListener, EventEmitter } from '@angular/core';\r\nimport * as CircularJSON from 'circular-json';\r\n\r\n@Directive({\r\n  selector: '[mbFileReader]'\r\n})\r\nexport class MbFileReaderDirective {\r\n\r\n  @Input() data: any = {};\r\n  @Output() load = new EventEmitter();\r\n\r\n  constructor(private el: ElementRef) { }\r\n\r\n  @HostListener('change')\r\n  onFileChange() {\r\n    const f = this.el.nativeElement.files[0];\r\n    if (f) {\r\n        const reader = new FileReader();\r\n        reader.readAsText(f, 'UTF-8');\r\n        const ins = this;\r\n        reader.onload = function (evt) {\r\n            const fileString: string = evt.target['result'];\r\n            ins.load_flowchart_from_string(fileString);\r\n        };\r\n        reader.onerror = function (evt) {\r\n            console.log('Error reading file');\r\n        };\r\n    }\r\n  }\r\n\r\n\r\n  //\r\n  // Input: string\r\n  // Output: MobiusFile DS\r\n  //\r\n  //\r\n  private load_flowchart_from_string(fileString: string): void {\r\n    const _this = this;\r\n    // let jsonData: {language: string, flowchart: JSON, modules: JSON};\r\n    // let flowchart: any; // IFlowchart;\r\n\r\n    try {\r\n      const data = CircularJSON.parse(fileString);\r\n      this.load.emit(data);\r\n      // this.data.flowchart = data.flowchart;\r\n      // this.data.modules = data.modules;\r\n      // this.data.language = data.language;\r\n\r\n      // this.update_code_generator(CodeFactory.getCodeGenerator(data[\"language\"]));\r\n      // TODO: this.update_modules();\r\n\r\n      // flowchart = FlowchartReader.read_flowchart_from_data(data[\"flowchart\"]);\r\n      // TODO: select a node\r\n    } catch (err) {\r\n      console.error('Mob-file-reader error', err);\r\n    }\r\n\r\n  }\r\n\r\n\r\n}\r\n","import { Directive, ElementRef, Input, Output, HostBinding, HostListener, EventEmitter } from '@angular/core';\r\nimport * as CircularJSON from 'circular-json';\r\n\r\n@Directive({\r\n    selector: '[autogrow]'\r\n})\r\nexport class AutogrowDirective {\r\n\r\n    constructor(private el: ElementRef) {\r\n    }\r\n\r\n    @HostListener('keyup')\r\n    onKeyUp() {\r\n        this.el.nativeElement.style.height = '5px';\r\n        this.el.nativeElement.style.height = (this.el.nativeElement.scrollHeight) + 'px';\r\n    }\r\n\r\n    @HostListener('keydown')\r\n    onKeyDown() {\r\n        this.el.nativeElement.style.height = '5px';\r\n        this.el.nativeElement.style.height = (this.el.nativeElement.scrollHeight) + 'px';\r\n    }\r\n}\r\n","export * from './autogrow.directive';\r\n","import { INode, NodeUtils } from '@models/node';\r\nimport { IProcedure, ProcedureTypes, IFunction } from '@models/procedure';\r\nimport { IPortInput, InputType } from '@models/port';\r\nimport { Observable } from 'rxjs';\r\nimport * as circularJSON from 'circular-json';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Input } from '@angular/core';\r\nimport { promise } from 'protractor';\r\nimport { IEdge } from '@models/edge';\r\nimport { _parameterTypes } from '@modules';\r\n\r\n\r\nexport class CodeUtils {\r\n\r\n    static async getProcedureCode(prod: IProcedure, existingVars: string[], addProdArr: Boolean): Promise<string[]> {\r\n        if (prod.enabled === false) { return ['']; }\r\n\r\n        prod.hasError = false;\r\n\r\n        let codeStr: string[] = [];\r\n        const args = prod.args;\r\n        const prefix = args.hasOwnProperty('0') && existingVars.indexOf(args[0].value) === -1 ? 'let ' : '';\r\n        codeStr.push('');\r\n        if (addProdArr && prod.type !== ProcedureTypes.Else && prod.type !== ProcedureTypes.Elseif) {\r\n            codeStr.push(`__params__.currentProcedure[0] = \"${prod.ID}\";`);\r\n        }\r\n\r\n        switch ( prod.type ) {\r\n            case ProcedureTypes.Variable:\r\n                if (args[0].value.indexOf('__params__') !== -1 || args[1].value.indexOf('__params__') !== -1) {\r\n                    throw new Error('Unexpected Identifier');\r\n                }\r\n                codeStr.push(`${prefix}${args[0].value} = ${args[1].value};`);\r\n                if (prefix === 'let ') {\r\n                    existingVars.push(args[0].value);\r\n                }\r\n                break;\r\n\r\n            case ProcedureTypes.If:\r\n                if (args[0].value.indexOf('__params__') !== -1) { throw new Error('Unexpected Identifier'); }\r\n                codeStr.push(`if (${args[0].value}){`);\r\n                break;\r\n\r\n            case ProcedureTypes.Else:\r\n                codeStr.push(`else {`);\r\n                break;\r\n\r\n            case ProcedureTypes.Elseif:\r\n                if (args[0].value.indexOf('__params__') !== -1) { throw new Error('Unexpected Identifier'); }\r\n                codeStr.push(`else if(${args[0].value}){`);\r\n                break;\r\n\r\n            case ProcedureTypes.Foreach:\r\n                // codeStr.push(`for (${prefix} ${args[0].value} of [...Array(${args[1].value}).keys()]){`);\r\n                if (args[0].value.indexOf('__params__') !== -1) { throw new Error('Unexpected Identifier'); }\r\n                codeStr.push(`for (${prefix} ${args[0].value} of ${args[1].value}){`);\r\n                break;\r\n\r\n            case ProcedureTypes.While:\r\n                if (args[0].value.indexOf('__params__') !== -1) { throw new Error('Unexpected Identifier'); }\r\n                codeStr.push(`while (${args[0].value}){`);\r\n                break;\r\n\r\n            case ProcedureTypes.Break:\r\n                codeStr.push(`break;`);\r\n                break;\r\n\r\n            case ProcedureTypes.Continue:\r\n                codeStr.push(`continue;`);\r\n                break;\r\n\r\n            case ProcedureTypes.Constant:\r\n                let constName = args[0].value;\r\n                if (constName.substring(0, 1) === '\"' || constName.substring(0, 1) === '\\'') {\r\n                    constName = args[0].value.substring(1, args[0].value.length - 1);\r\n                }\r\n\r\n                const val = await CodeUtils.getStartInput(args[1].value || args[1].default, prod.meta.inputMode);\r\n                codeStr.push(`__params__['constants']['${constName}'] = ${val};`);\r\n\r\n                break;\r\n\r\n            case ProcedureTypes.Return:\r\n                codeStr.push(`if (${args[0].value} > __params__['model'].length) { return __params__['model']; }`);\r\n                codeStr.push(`return __params__['model'][${args[0].value}].value;`);\r\n                break;\r\n\r\n\r\n            case ProcedureTypes.Function:\r\n                const argVals = [];\r\n                for (const arg of args.slice(1)) {\r\n                    if (arg.name === _parameterTypes.input) {\r\n                        const argVal = await CodeUtils.getStartInput(arg.value || arg.default, prod.meta.inputMode);\r\n                        argVals.push(argVal);\r\n                        continue;\r\n                    }\r\n                    if (arg.value && arg.value.indexOf('__params__') !== -1) { throw new Error('Unexpected Identifier'); }\r\n                    if (arg.name === _parameterTypes.constList) {\r\n                        argVals.push('__params__.constants');\r\n                        continue;\r\n                    }\r\n                    if (arg.name === _parameterTypes.model) {\r\n                        argVals.push('__params__.model');\r\n                        continue;\r\n                    }\r\n                    if (arg.value && arg.value.substring(0, 1) === '@') {\r\n                        if (prod.meta.module.toUpperCase() === 'QUERY'\r\n                            && prod.meta.name.toUpperCase() === 'SET'\r\n                            && arg.name.toUpperCase() === 'STATEMENT') {\r\n                            argVals.push('\"' + arg.value.replace(/\"/g, '\\'') + '\"');\r\n                            continue;\r\n                        }\r\n                        argVals.push('__modules__.Query.get( __params__.model,\"' + arg.value.replace(/\"/g, '\\'') + '\" )');\r\n                        continue;\r\n                    }\r\n                    // else if (arg.name.indexOf('__') != -1) return '\"'+args[args.indexOf(arg)+1].value+'\"';\r\n                    argVals.push(arg.value);\r\n\r\n                }\r\n                const argValues = argVals.join(',');\r\n                await argValues;\r\n                const fnCall = `__modules__.${prod.meta.module}.${prod.meta.name}( ${argValues} )`;\r\n                if ( prod.meta.module.toUpperCase() === 'OUTPUT') {\r\n                    codeStr.push(`return ${fnCall};`);\r\n                } else if (args[0].name === '__none__') {\r\n                    codeStr.push(`${fnCall};`);\r\n                } else {\r\n                    codeStr.push(`${prefix}${args[0].value} = ${fnCall};`);\r\n                    if (prefix === 'let ') {\r\n                        existingVars.push(args[0].value);\r\n                    }\r\n                }\r\n                break;\r\n            case ProcedureTypes.Imported:\r\n                let argsVals: any = [];\r\n                for (let i = 1; i < args.length; i++) {\r\n                    const arg = args[i];\r\n                    // args.slice(1).map((arg) => {\r\n                    if (arg.type.toString() !== InputType.URL.toString()) {argsVals.push(arg.value); }\r\n                    const r = await CodeUtils.getStartInput(arg.value, InputType.URL);\r\n                    argsVals.push(r);\r\n                }\r\n                argsVals = argsVals.join(',');\r\n\r\n                const fn = `${prod.meta.name}(__params__, ${argsVals} )`;\r\n                codeStr.push(`${prefix}${args[0].value} = ${fn};`);\r\n                if (prefix === 'let ') {\r\n                    existingVars.push(args[0].value);\r\n                }\r\n                break;\r\n\r\n        }\r\n        if (prod.children) {\r\n            for (const p of prod.children) {\r\n                codeStr = codeStr.concat(await CodeUtils.getProcedureCode(p, existingVars, addProdArr));\r\n            }\r\n            codeStr.push(`}`);\r\n        }\r\n\r\n        if (prod.print) {\r\n            codeStr.push(`console.log('${prod.args[0].value}: '+ ${prod.args[0].value});`);\r\n            // codeStr.push(`wait(5000);`);\r\n        }\r\n        return codeStr;\r\n    }\r\n\r\n    static async getStartInput(val, inputMode): Promise<any> {\r\n        let result: any;\r\n        if (inputMode.toString() === InputType.URL.toString() ) {\r\n            if (val.indexOf('dropbox') !== -1) {\r\n                val = val.replace('www', 'dl').replace('dl=0', 'dl=1');\r\n            }\r\n            const p = new Promise((resolve) => {\r\n                const request = new XMLHttpRequest();\r\n                request.open('GET', val);\r\n                request.onload = () => {\r\n                    resolve(request.responseText);\r\n                };\r\n                request.send();\r\n            });\r\n            result = await p;\r\n        } else if (inputMode.toString() === InputType.File.toString()) {\r\n            const p = new Promise((resolve) => {\r\n                const reader = new FileReader();\r\n                reader.onload = function() {\r\n                    resolve(reader.result);\r\n                };\r\n                reader.readAsText(val);\r\n            });\r\n            result = await p;\r\n        }\r\n        return result;\r\n    }\r\n\r\n    static loadFile(f) {\r\n        const stream = Observable.create(observer => {\r\n          const request = new XMLHttpRequest();\r\n\r\n          request.open('GET', f.download_url);\r\n          request.onload = () => {\r\n              if (request.status === 200) {\r\n                  const fl = circularJSON.parse(request.responseText);\r\n                  observer.next(fl);\r\n                  observer.complete();\r\n              } else {\r\n                  observer.error('error happened');\r\n              }\r\n          };\r\n\r\n          request.onerror = () => {\r\n          observer.error('error happened');\r\n          };\r\n          request.send();\r\n        });\r\n\r\n        stream.subscribe(loadeddata => {\r\n          return loadeddata;\r\n        });\r\n    }\r\n\r\n    static mergeInputs(models): any {\r\n        const result = _parameterTypes['newFn']();\r\n        for (const model of models) {\r\n            _parameterTypes['mergeFn'](result, model);\r\n        }\r\n        return result;\r\n    }\r\n\r\n\r\n\r\n    static getInputValue(inp: IPortInput, node: INode): Promise<string> {\r\n        let input: any;\r\n        if (node.type === 'start' || inp.edges.length === 0) {\r\n            input = _parameterTypes['newFn']();\r\n        } else {\r\n            input = CodeUtils.mergeInputs(inp.edges.map(edge => edge.source.value));\r\n            /*\r\n            if (input.constructor === gsConstructor) {\r\n                input = `new __MODULES__.gs.Model(${input.toJSON()})`\r\n            } else {\r\n                // do nothing\r\n            }\r\n            */\r\n        }\r\n        return input;\r\n    }\r\n\r\n    public static async getNodeCode(node: INode, addProdArr = false): Promise<string[]> {\r\n        node.hasError = false;\r\n        let codeStr = [];\r\n        const varsDefined: string[] = [];\r\n        // input initializations\r\n        if (addProdArr) {\r\n            const input = await CodeUtils.getInputValue(node.input, node);\r\n            node.input.value = input;\r\n        }\r\n\r\n        if (node.type === 'start') {\r\n            codeStr.push('__params__.constants = {};\\n');\r\n        }\r\n\r\n\r\n        codeStr.push(`__modules__.${_parameterTypes.preprocess}( __params__.model);`);\r\n        // procedure\r\n        for (const prod of node.procedure) {\r\n            if (node.type === 'start' && !addProdArr) { break; }\r\n            codeStr = codeStr.concat(await CodeUtils.getProcedureCode(prod, varsDefined, addProdArr) );\r\n        }\r\n        if (node.type === 'end' && node.procedure.length > 0) {\r\n            codeStr.push('}');\r\n            return ['{'].concat(codeStr);\r\n            // return `{\\n${codeStr.join('\\n')}\\n}`;\r\n        } else {\r\n            codeStr.push(`__modules__.${_parameterTypes.postprocess}( __params__.model);`);\r\n        }\r\n\r\n        codeStr.push('return __params__.model;');\r\n        return codeStr;\r\n        // return `\\n${codeStr.join('\\n')}\\n\\nreturn __params__.model;\\n`;\r\n\r\n\r\n        // return `{\\n${codeStr.join('\\n')}\\nreturn result;\\n}`;\r\n        // return `/*    ${node.name.toUpperCase()}    */\\n\\n{\\n${codeStr.join('\\n')}\\nreturn ${node.output.name};\\n}`;\r\n\r\n\r\n    }\r\n\r\n    static async getFunctionString(func: IFunction): Promise<string> {\r\n        let fullCode = '';\r\n        /*\r\n        let fnCode = `function ${func.name}(${func.args.map(arg=>{return arg.name}).join(',')})` +\r\n        `{\\nvar merged;\\nlet __params__={\"currentProcedure\": [''],\"model\":{}};\\n`;\r\n        */\r\n        let fnCode = `function ${func.name}(__mainParams__,${func.args.map(arg => arg.name).join(',')})` +\r\n        `{\\nvar merged;\\nlet __params__={\"currentProcedure\": [''],\"model\":__modules__.${_parameterTypes['new']}()};\\n`;\r\n\r\n        for (const node of func.flowchart.nodes) {\r\n            let code: any = await CodeUtils.getNodeCode(node, false);\r\n            code = '{\\n' + code.join('\\n') + '\\n}';\r\n            fullCode += `function ${node.id}(__params__, ${func.args.map(arg => arg.name).join(',')})` + code + `\\n\\n`;\r\n            if (node.type === 'start') {\r\n                // fnCode += `let result_${node.id} = ${node.id}(__params__);\\n`\r\n                fnCode += `let result_${node.id} = __params__.model;\\n`;\r\n            } else if (node.input.edges.length === 1) {\r\n                fnCode += `__params__.model = JSON.parse(JSON.stringify(result_${node.input.edges[0].source.parentNode.id}));\\n`;\r\n                fnCode += `let result_${node.id} = ${node.id}(__params__, ${func.args.map(arg => arg.name).join(',')});\\n`;\r\n            } else {\r\n                fnCode += `merged = mergeInputs([${node.input.edges.map((edge) => 'result_' + edge.source.parentNode.id).join(',')}]);\\n`;\r\n                fnCode += `__params__.model = merged;\\n`;\r\n                fnCode += `let result_${node.id} = ${node.id}(__params__, ${func.args.map(arg => arg.name).join(',')});\\n`;\r\n            }\r\n            /*\r\n            } else if (node.input.edges.length == 1) {\r\n                fnCode += `let result_${node.id} = ${node.id}(result_${node.input.edges[0].source.parentNode.id});\\n`\r\n            } else {\r\n                fnCode += `merged = mergeResults([${node.input.edges.map((edge)=>'result_'+edge.source.parentNode.id).join(',')}]);\\n`;\r\n                fnCode += `let result_${node.id} = ${node.id}(merged);\\n`\r\n\r\n\r\n            */\r\n            if (node.type === 'end') {\r\n                fnCode += `\\n__mainParams__.model = mergeInputs([__mainParams__.model,__params__.model]);\\n`;\r\n                fnCode += `return result_${node.id};\\n`;\r\n            }\r\n            // fnCode += `console.log(result_${node.id});\\n`;\r\n        }\r\n        fnCode += '}\\n\\n';\r\n        fullCode += fnCode;\r\n        // console.log(fullCode)\r\n        return fullCode;\r\n    }\r\n\r\n}\r\n","export class ExecuteUtils {\r\n\r\n}\r\n","export { IArgument } from './argument.interface';\r\nexport { CodeUtils } from './code.utils';\r\nexport { ExecuteUtils } from './execute.utils';\r\n","//\r\n//\r\n// The flowchart is the basic datastructure in Mobius - it is essentially a linked-list.\r\n// It also\r\n//\r\n\r\nimport { INode } from '@models/node';\r\nimport { IEdge } from '@models/edge';\r\nimport { IFunction } from '@models/procedure';\r\n\r\nexport interface IFlowchart {\r\n    name: string;\r\n    description: string;\r\n    language: string;\r\n\r\n    nodes: INode[];\r\n    edges: IEdge[];\r\n    functions: IFunction[];\r\n    ordered: boolean;\r\n\r\n    meta: {\r\n        selected_nodes: number[];\r\n    };\r\n}\r\n\r\nexport const canvasSize = 10000;\r\n\r\n","import { IFlowchart, canvasSize } from './flowchart.interface';\r\nimport { NodeUtils, INode } from '@models/node';\r\nimport { NgModuleFactoryLoader } from '@angular/core';\r\nimport { IEdge } from '@models/edge';\r\n\r\nexport class FlowchartUtils {\r\n\r\n    public static newflowchart(): IFlowchart {\r\n        const startNode = NodeUtils.getStartNode();\r\n        startNode.position = {x: canvasSize * 1.07 / 2, y: canvasSize / 2};\r\n\r\n        const middleNode = NodeUtils.getNewNode();\r\n        middleNode.position = {x: canvasSize * 1.07 / 2, y: 200 + canvasSize / 2};\r\n\r\n        const endNode = NodeUtils.getEndNode();\r\n        endNode.position = {x: canvasSize * 1.07 / 2, y: 400 + canvasSize / 2};\r\n\r\n        const startMid: IEdge = {\r\n            source: startNode.output,\r\n            target: middleNode.input,\r\n            selected: false\r\n        };\r\n        startNode.output.edges = [startMid];\r\n        middleNode.input.edges = [startMid];\r\n\r\n        const midEnd: IEdge = {\r\n            source: middleNode.output,\r\n            target: endNode.input,\r\n            selected: false\r\n        };\r\n        middleNode.output.edges = [midEnd];\r\n        endNode.input.edges = [midEnd];\r\n\r\n        middleNode.enabled = true;\r\n        endNode.enabled = true;\r\n\r\n        const flw: IFlowchart = {\r\n            name: 'new_flowchart',\r\n            description: '',\r\n            language: 'js',\r\n            meta: {\r\n                selected_nodes: [2]\r\n            },\r\n            nodes: [ startNode, middleNode, endNode ],\r\n            edges: [ startMid, midEnd ],\r\n            functions: [],\r\n            ordered: true\r\n        };\r\n\r\n        return flw;\r\n    }\r\n\r\n    static checkNode(nodeOrder: INode[], node: INode, enabled: boolean) {\r\n        if (node.hasExecuted) {\r\n            return;\r\n        } else if (node.type === 'start' ) {\r\n            nodeOrder.push(node);\r\n        } else {\r\n            for (const edge of node.input.edges) {\r\n                if (!edge.source.parentNode.hasExecuted) {\r\n                    return;\r\n                }\r\n            }\r\n            nodeOrder.push(node);\r\n        }\r\n        node.hasExecuted = true;\r\n        node.enabled = enabled;\r\n        for (const edge of node.output.edges) {\r\n            FlowchartUtils.checkNode(nodeOrder, edge.target.parentNode, enabled);\r\n        }\r\n    }\r\n\r\n    public static orderNodes(flw: IFlowchart) {\r\n        let startNode;\r\n        for (const node of flw.nodes) {\r\n            if (node.type === 'start') {\r\n                startNode = node;\r\n            }\r\n            node.hasExecuted = false;\r\n        }\r\n        const nodeOrder = [];\r\n        FlowchartUtils.checkNode(nodeOrder, startNode, true);\r\n        if (nodeOrder.length < flw.nodes.length) {\r\n            for (const node of flw.nodes) {\r\n                if (node.type !== 'start' && node.input.edges.length === 0) {\r\n                    FlowchartUtils.checkNode(nodeOrder, node, false);\r\n                }\r\n            }\r\n        }\r\n        flw.nodes = nodeOrder;\r\n        flw.ordered = true;\r\n    }\r\n}\r\n","export { IFlowchart, canvasSize } from './flowchart.interface';\r\nexport { FlowchartUtils } from './flowchart.utils';\r\n","export { INode } from './node.interface';\r\nexport { NodeUtils } from './node.utils';\r\n","import { INode } from './node.interface';\r\nimport { ProcedureTypes, IFunction, IProcedure } from '@models/procedure';\r\nimport { PortType, InputType, OutputType, PortUtils } from '@models/port';\r\nimport { not } from '@angular/compiler/src/output/output_ast';\r\nimport * as circularJSON from 'circular-json';\r\nimport { IdGenerator } from '@utils';\r\nimport { templateJitUrl } from '@angular/compiler';\r\n\r\nexport abstract class NodeUtils {\r\n\r\n    static getNewNode(): INode {\r\n        const node: INode = <INode>{\r\n            name: 'Node',\r\n            id: IdGenerator.getNodeID(),\r\n            position: {x: 0, y: 0},\r\n            enabled: false,\r\n            type: '',\r\n            procedure: [],\r\n            state: {\r\n                procedure: [],\r\n                input_port: undefined,\r\n                output_port: undefined\r\n            },\r\n            input: PortUtils.getNewInput(),\r\n            output: PortUtils.getNewOutput()\r\n        };\r\n        node.input.parentNode = node;\r\n        node.output.parentNode = node;\r\n\r\n        return node;\r\n    }\r\n\r\n    static getStartNode(): INode {\r\n        const node = NodeUtils.getNewNode();\r\n        node.enabled = true;\r\n        node.name = 'Start';\r\n        node.type = 'start';\r\n        return node;\r\n    }\r\n\r\n    static getEndNode(): INode {\r\n        const node = NodeUtils.getNewNode();\r\n        node.name = 'End';\r\n        node.type = 'end';\r\n        return node;\r\n    }\r\n\r\n\r\n    static deselect_procedure(node: INode) {\r\n        for (const prod of node.state.procedure) {\r\n            prod.selected = false;\r\n        }\r\n        node.state.procedure = [];\r\n    }\r\n\r\n\r\n    static rearrangeSelected(prodList: IProcedure[], tempList: IProcedure[], prods: IProcedure[]) {\r\n        for (const pr of prods) {\r\n            if (!pr.selected) {\r\n                if (pr.children) { NodeUtils.rearrangeSelected(prodList, tempList, pr.children); }\r\n                continue;\r\n            }\r\n            let i = 0;\r\n            while (i < tempList.length) {\r\n                if (tempList[i] === pr) {\r\n                    prodList.push(pr);\r\n                    tempList.splice(i, 1);\r\n                    break;\r\n                }\r\n                i += 1;\r\n            }\r\n            if (pr.children) { NodeUtils.rearrangeSelected(prodList, tempList, pr.children); }\r\n        }\r\n    }\r\n\r\n    static select_procedure(node: INode, procedure: IProcedure, ctrl: boolean) {\r\n        if (!procedure) {\r\n            return;\r\n        }\r\n        if (ctrl) {\r\n            let selIndex = 0;\r\n            let selected = false;\r\n            while (selIndex < node.state.procedure.length) {\r\n                if (node.state.procedure[selIndex] === procedure) {\r\n                    selected = true;\r\n                    node.state.procedure.splice(selIndex, 1);\r\n                    procedure.selected = false;\r\n                    break;\r\n                }\r\n                selIndex += 1;\r\n            }\r\n            if (!selected) {\r\n                procedure.selected = true;\r\n                node.state.procedure.push(procedure);\r\n                const tempArray = node.state.procedure.splice(0, node.state.procedure.length);\r\n                NodeUtils.rearrangeSelected(node.state.procedure, tempArray, node.procedure);\r\n                console.log(node.state.procedure);\r\n            }\r\n        } else {\r\n            const sel = procedure.selected;\r\n            for (const prod of node.state.procedure) {\r\n                prod.selected = false;\r\n            }\r\n            if (sel && node.state.procedure.length === 1 && node.state.procedure[0] === procedure) {\r\n                node.state.procedure = [];\r\n            } else {\r\n                node.state.procedure = [procedure];\r\n                procedure.selected = true;\r\n            }\r\n        }\r\n    }\r\n\r\n    static insert_procedure(node: INode, prod: IProcedure) {\r\n        if (node.state.procedure[0]) {\r\n            if (node.state.procedure[0].children) {\r\n                node.state.procedure[0].children.push(prod);\r\n                prod.parent = node.state.procedure[0];\r\n            } else {\r\n                let list;\r\n                if (node.state.procedure[0].parent) {\r\n                    prod.parent = node.state.procedure[0].parent;\r\n                    list = prod.parent.children;\r\n                } else {\r\n                    list = node.procedure;\r\n                }\r\n                for (const index in list) {\r\n                    if (list[index].selected) {\r\n                        list.splice(parseInt(index, 10) + 1, 0, prod);\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            node.procedure.push(prod);\r\n        }\r\n\r\n    }\r\n\r\n    static add_procedure(node: INode, type: ProcedureTypes, data: IFunction ) {\r\n        const prod: IProcedure = <IProcedure>{};\r\n        prod.type = type;\r\n\r\n        NodeUtils.insert_procedure(node, prod);\r\n\r\n        // add ID to the procedure\r\n        prod.ID = IdGenerator.getProdID();\r\n        prod.enabled = true;\r\n        prod.print = false;\r\n\r\n        // select the procedure\r\n        NodeUtils.select_procedure(node, prod, false);\r\n\r\n        switch (prod.type) {\r\n            case ProcedureTypes.Variable:\r\n                prod.argCount = 2;\r\n                prod.args = [\r\n                    {name: 'var_name', value: undefined, default: undefined},\r\n                    {name: 'value', value: undefined, default: undefined} ];\r\n                break;\r\n\r\n            case ProcedureTypes.Foreach:\r\n                prod.argCount = 2;\r\n                prod.args = [ {name: 'i', value: undefined, default: undefined}, {name: 'arr', value: undefined, default: []} ];\r\n                prod.children = [];\r\n                break;\r\n\r\n            case ProcedureTypes.While:\r\n                prod.argCount = 1;\r\n                prod.args = [ {name: 'condition', value: undefined, default: undefined} ];\r\n                prod.children = [];\r\n                break;\r\n\r\n            case ProcedureTypes.If:\r\n            case ProcedureTypes.Elseif:\r\n                prod.argCount = 1;\r\n                prod.args = [ {name: 'condition', value: undefined, default: undefined} ];\r\n                prod.children = [];\r\n                break;\r\n\r\n            case ProcedureTypes.Else:\r\n                prod.argCount = 0;\r\n                prod.args = [];\r\n                prod.children = [];\r\n                break;\r\n\r\n            case ProcedureTypes.Break:\r\n            case ProcedureTypes.Continue:\r\n                prod.argCount = 0;\r\n                prod.args = [];\r\n                break;\r\n\r\n            case ProcedureTypes.Constant:\r\n                prod.argCount = 2;\r\n                prod.meta = { module: 'Input', name: 'Constant', inputMode: InputType.SimpleInput, description: undefined};\r\n                prod.args = [\r\n                    {name: 'const_name', value: undefined, default: 0},\r\n                    {name: '__input__', value: undefined, default: 0} ];\r\n                break;\r\n\r\n            case ProcedureTypes.Return:\r\n                prod.meta = { module: 'Output', name: 'Return', description: undefined};\r\n                prod.argCount = 1;\r\n                prod.args = [ {name: 'index', value: undefined, default: 0} ];\r\n                break;\r\n\r\n            case ProcedureTypes.Function:\r\n                if (!data) { throw Error('No function data'); }\r\n\r\n                prod.meta = { module: data.module, name: data.name};\r\n                prod.argCount = data.argCount + 1;\r\n                let returnArg = {name: 'var_name', value: undefined, default: undefined};\r\n                if (!data.hasReturn) {\r\n                    returnArg = {name: '__none__', value: undefined, default: undefined};\r\n                }\r\n\r\n                prod.args = [ returnArg, ...data.args];\r\n                break;\r\n\r\n            case ProcedureTypes.Imported:\r\n                prod.meta = { module: data.module, name: data.name};\r\n                prod.argCount = data.argCount + 1;\r\n                prod.args = [ {name: 'var_name', value: undefined, default: undefined}, ...data.args];\r\n                break;\r\n        }\r\n    }\r\n\r\n    static updateNode(newNode: INode, newPos): INode {\r\n        newNode.id = IdGenerator.getNodeID();\r\n        newNode.input = PortUtils.getNewInput();\r\n        newNode.output = PortUtils.getNewOutput();\r\n        newNode.input.parentNode = newNode;\r\n        newNode.output.parentNode = newNode;\r\n        newNode.position.x = newPos.x;\r\n        newNode.position.y = newPos.y;\r\n        return newNode;\r\n    }\r\n\r\n    static updateID(prod: IProcedure): any {\r\n        if (prod.hasOwnProperty('children')) {\r\n            prod.children.map((child: IProcedure) => {\r\n                NodeUtils.updateID(child);\r\n            });\r\n        }\r\n        prod.ID = IdGenerator.getProdID();\r\n        return prod;\r\n    }\r\n\r\n    static paste_procedure(node: INode, prod: IProcedure ) {\r\n        const newProd = NodeUtils.updateID(circularJSON.parse(circularJSON.stringify(prod)));\r\n        newProd.parent = undefined;\r\n        NodeUtils.insert_procedure(node, newProd);\r\n        NodeUtils.select_procedure(node, newProd, false);\r\n    }\r\n\r\n}\r\n","export { IPortInput, IPortOutput } from './port.interface';\r\nexport * from './types';\r\nexport { PortUtils } from './port.utils';\r\n","import { IPortOutput, IPortInput } from './port.interface';\r\nimport { PortType, OutputType, InputType } from './types';\r\nimport { IdGenerator } from '@shared/utils';\r\n\r\nexport class PortUtils {\r\n\r\n    static getNewInput(): IPortInput {\r\n        const inp: IPortInput = <IPortInput>{\r\n            id: IdGenerator.getId(),\r\n            name: 'input',\r\n            type: PortType.Input,\r\n            value: undefined,\r\n            default: undefined,\r\n            edges: [],\r\n            meta: {\r\n                mode: InputType.SimpleInput,\r\n                opts: {}\r\n            }\r\n        };\r\n\r\n        return inp;\r\n    }\r\n\r\n    static getNewOutput(): IPortOutput {\r\n        const oup: IPortOutput = <IPortOutput>{\r\n            id: IdGenerator.getId(),\r\n            name: 'output',\r\n            type: PortType.Output,\r\n            edges: [],\r\n            meta: {\r\n                mode: OutputType.Text,\r\n            }\r\n        };\r\n        return oup;\r\n    }\r\n\r\n}\r\n","export enum PortType {\r\n    Input,\r\n    Output\r\n}\r\n\r\nexport enum InputType {\r\n    SimpleInput,\r\n    Slider,\r\n    Checkbox,\r\n    URL,\r\n    File\r\n}\r\n\r\nexport enum OutputType {\r\n    Text,\r\n    Code\r\n}\r\n","export { IProcedure, IModule, IFunction } from './procedure.interface';\r\nexport { ProcedureTypes } from './types';\r\n","export enum ProcedureTypes {\r\n    Variable,\r\n    If,\r\n    Elseif,\r\n    Else,\r\n    Foreach,\r\n    While,\r\n    Break,\r\n    Continue,\r\n    Function,\r\n    Imported,\r\n    Constant,\r\n    Return\r\n}\r\n\r\n","/*\r\n *  This module is to be imported ONLY by the AppModule\r\n *  Contains all global services\r\n *\r\n */\r\nimport { AngularSplitModule } from 'angular-split';\r\n// @angular stuff\r\nimport { NgModule, SkipSelf, Optional } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { MatSliderModule, MatCheckboxModule, MatIconModule, MatMenuModule,\r\n    MatButtonModule, MatExpansionModule, MatSelectModule, MatFormFieldModule } from '@angular/material';\r\n// app directives\r\nimport { MbFileReaderDirective } from './directives/filesys';\r\nimport { AutogrowDirective } from './directives/textarea';\r\n// app components\r\nimport { ExecuteComponent } from './components/execute/execute.component';\r\nimport { PageNotFoundComponent } from './components/not-found/not-found.component';\r\nimport { NavigationComponent } from './components/navigation/navigation.component';\r\nimport { HeaderComponent } from './components/header/header.component';\r\nimport { AddOutputComponent } from './components/add-components/add_output.component';\r\nimport { AddNodeComponent } from './components/add-components/add_node.component';\r\nimport { AddInputComponent } from './components/add-components/add_input.component';\r\nimport { ParameterViewerComponent } from './components/parameter-viewer/parameter-viewer.component';\r\nimport { InputPortViewerComponent } from './components/parameter-viewer/input-port-viewer/input-port-viewer.component';\r\nimport { ProcedureInputViewerComponent } from './components/parameter-viewer/procedure-input-viewer/procedure-input-viewer.component';\r\nimport { NewFileComponent, SaveFileComponent, LoadFileComponent } from './components/file';\r\n// app model viewers\r\nimport { DataViewersContainer } from '../model-viewers/model-viewers-container.module';\r\n\r\n@NgModule({\r\n    providers: [ ],\r\n    declarations: [\r\n            MbFileReaderDirective,\r\n            AutogrowDirective,\r\n            ExecuteComponent,\r\n            PageNotFoundComponent,\r\n            NavigationComponent,\r\n            HeaderComponent,\r\n            AddNodeComponent, AddInputComponent, AddOutputComponent,\r\n            ParameterViewerComponent,  InputPortViewerComponent, ProcedureInputViewerComponent,\r\n            NewFileComponent, SaveFileComponent, LoadFileComponent\r\n        ],\r\n    imports: [\r\n            CommonModule,\r\n            RouterModule,\r\n            MatSliderModule, MatCheckboxModule,\r\n            DataViewersContainer,\r\n            AngularSplitModule,\r\n            FormsModule,\r\n            MatMenuModule,\r\n            MatIconModule,\r\n            MatButtonModule,\r\n            MatExpansionModule,\r\n            MatSelectModule,\r\n            MatFormFieldModule,\r\n        ],\r\n    entryComponents: [  ],\r\n    exports: [\r\n            FormsModule,\r\n            MatMenuModule,\r\n            MatIconModule,\r\n            MatButtonModule,\r\n            MatSliderModule,\r\n            MatExpansionModule,\r\n            MatSelectModule,\r\n            MatFormFieldModule,\r\n            DataViewersContainer,\r\n            AngularSplitModule,\r\n            MbFileReaderDirective,\r\n            AutogrowDirective,\r\n            ExecuteComponent,\r\n            PageNotFoundComponent,\r\n            NavigationComponent,\r\n            HeaderComponent,\r\n            AddNodeComponent,\r\n            AddInputComponent,\r\n            AddOutputComponent,\r\n            ParameterViewerComponent,\r\n            NewFileComponent, SaveFileComponent, LoadFileComponent\r\n    ]\r\n})\r\nexport class SharedModule {\r\n    constructor(@Optional() @SkipSelf() shared: SharedModule) {\r\n        /*\r\n        /// Prevents any module apart from AppModule from re-importing\r\n        if(shared){\r\n            throw new Error(\"Core Module has already been imported\");\r\n        }\r\n        */\r\n    }\r\n}\r\n","export abstract class IdGenerator {\r\n\r\n  private static s4(): string {\r\n      return Math.floor((1 + Math.random()) * 0x10000)\r\n        .toString(16)\r\n        .substring(1);\r\n  }\r\n\r\n  static getId(): string {\r\n    return this.s4() + this.s4() + '-' + this.s4() + '-' + this.s4() + '-' +\r\n      this.s4() + '-' + this.s4() + this.s4() + this.s4();\r\n  }\r\n\r\n  static getNodeID(): string {\r\n    return 'node_' + Math.random().toString(36).substr(2, 16);\r\n  }\r\n\r\n  static getProdID() {\r\n    return 'prod-' + Math.random().toString(36).substr(2, 16);\r\n  }\r\n}\r\n","export * from './GUID';\r\n","export * from './view-editor/view-editor.component'\r\nexport * from './view-editor/view-editor.module'\r\nexport * from './view-flowchart/view-flowchart.component'\r\nexport * from './view-flowchart/view-flowchart.module'\r\nexport * from './view-gallery/view-gallery.component'\r\nexport * from './view-gallery/view-gallery.module'\r\nexport * from './view-dashboard/view-dashboard.component'\r\nexport * from './view-dashboard/view-dashboard.module'\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { ViewDashboardComponent } from './view-dashboard.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: ViewDashboardComponent,\r\n    children: [ ]\r\n  }\r\n];\r\n\r\n\r\n@NgModule({\r\n  imports: [ RouterModule.forChild(routes) ],\r\n  exports: [ RouterModule ]\r\n})\r\nexport class ViewDashboardRoutingModule { }\r\n","module.exports = \"<div class='container'>\\r\\n    <as-split direction=\\\"horizontal\\\" (dragEnd)='setSplit($event)'>\\r\\n        <as-split-area [size]=\\\"100 - dataService.splitVal\\\">\\r\\n            <div class='container__header'>\\r\\n\\r\\n                <!-- top left tab menu  -->\\r\\n                <div class=\\\"tab\\\">\\r\\n                    <button class='btn-tab' [class.active]='router.url==\\\"/gallery\\\"' [routerLink]=\\\"'/gallery'\\\">Gallery</button>\\r\\n                    <button class='btn-tab' [class.active]='router.url==\\\"/dashboard\\\"' [routerLink]=\\\"'/dashboard'\\\">Dashboard</button>\\r\\n                    <button class='btn-tab' [class.active]='router.url==\\\"/flowchart\\\"' [routerLink]=\\\"'/flowchart'\\\">Flowchart</button>\\r\\n                    <!--\\r\\n                    <button class='btn' [class.active]='false' (click)='updateView(\\\"editor\\\")'>Procedures</button>\\r\\n                    -->\\r\\n                </div>\\r\\n\\r\\n                <!-- hidden components (new file, save file, loaf file) for the dropdown menu-->\\r\\n                <div style=\\\"display: none;\\\">\\r\\n                    <file-new></file-new>\\r\\n                    <file-save></file-save>\\r\\n                    <file-load></file-load>        \\r\\n                </div>\\r\\n\\r\\n                <!-- top right dropdown menu -->\\r\\n                <div class=\\\"dropmenu\\\">\\r\\n                    <!-- execute button -->\\r\\n                    <div>\\r\\n                        <execute></execute>\\r\\n                    </div>\\r\\n                    <!-- dropdown menu for new file, save file, loaf file-->\\r\\n                    <div>\\r\\n                        <button class='btn' mat-icon-button [matMenuTriggerFor]=\\\"menu\\\">\\r\\n                            <mat-icon>more_vert</mat-icon>\\r\\n                        </button>\\r\\n                        <mat-menu #menu=\\\"matMenu\\\">\\r\\n                            <button  mat-menu-item onclick=\\\"document.getElementById('newfile').click();\\\"\\r\\n                            title=\\\"Create New Flowchart\\\">\\r\\n                                <mat-icon>rotate_left</mat-icon>\\r\\n                                <span>New File</span>\\r\\n                            </button>\\r\\n                            <button mat-menu-item onclick=\\\"document.getElementById('savefile').click();\\\"\\r\\n                            title=\\\"Save Flowchart File to Computer\\\">\\r\\n                                <mat-icon>save_alt</mat-icon>\\r\\n                                <span>Save File</span>\\r\\n                            </button>\\r\\n                            <button mat-menu-item onclick=\\\"document.getElementById('file-input').click();\\\"\\r\\n                            title=\\\"Load Flowchart File from Computer\\\">\\r\\n                                <mat-icon>launch</mat-icon>\\r\\n                                <span>Load File</span>\\r\\n                            </button>\\r\\n                        </mat-menu>\\r\\n                    </div>\\r\\n                    \\r\\n                </div>\\r\\n            </div>\\r\\n            <!-- viewchild content -->\\r\\n            <div class='content__panel'>\\r\\n                <parameter-viewer [flowchart]='dataService.flowchart' [startNode]='dataService.flowchart.nodes[0]' [endNode]='getEndNode()'></parameter-viewer>\\r\\n            </div>\\r\\n        </as-split-area>\\r\\n\\r\\n        <as-split-area [size]=\\\"dataService.splitVal\\\">\\r\\n            <!-- data viewers panel -->\\r\\n            <div class='content__viewer' >\\r\\n                <model-viewers-container [data]='viewerData()' [helpView]='helpView'></model-viewers-container>\\r\\n            </div>\\r\\n        </as-split-area>\\r\\n        \\r\\n    </as-split>\\r\\n\\r\\n</div>\\r\\n    \\r\\n\\r\\n\"","module.exports = \"as-split-area {\\n  overflow: hidden !important; }\\n\\n.container {\\n  position: relative;\\n  overflow: auto;\\n  height: 100%;\\n  width: 100%;\\n  display: flex;\\n  flex-direction: column;\\n  justify-content: space-around; }\\n\\n.container h1, .container h2, .container h3, .container h4, .container h5, .container h6, .container p {\\n    margin: 0px;\\n    padding: 0px; }\\n\\n.container .container__header {\\n    flex: 0 1 auto;\\n    min-height: 35px;\\n    display: flex;\\n    flex-direction: row;\\n    justify-content: space-between;\\n    padding: 0px 0px 0px 15px;\\n    background-color: #ccc;\\n    border-bottom: 3px solid #eeeeee;\\n    line-height: 35px;\\n    font-size: 18px;\\n    font-weight: 600;\\n    text-align: center;\\n    /* tab styling */\\n    /* dropdown menu styling */ }\\n\\n.container .container__header .tab {\\n      border: 2px;\\n      overflow: hidden;\\n      background-color: #ccc; }\\n\\n.container .container__header .tab button {\\n      display: inline-block;\\n      vertical-align: bottom;\\n      background-color: inherit;\\n      color: #505050;\\n      border: none;\\n      outline: none;\\n      cursor: pointer;\\n      padding: 8px 10px;\\n      transition: 0.3s;\\n      font-size: 14px; }\\n\\n.container .container__header .tab button:hover {\\n      color: blue; }\\n\\n.container .container__header .tab button.active {\\n      background-color: #ccc;\\n      color: #000096;\\n      font-weight: 600;\\n      border-color: #222 !important; }\\n\\n.container .container__header .dropmenu {\\n      display: inline-flex; }\\n\\n.container .container__content {\\n    flex-grow: 1;\\n    height: 0px;\\n    border: 2px solid #3F4651;\\n    overflow: auto; }\\n\\n.container .container__footer {\\n    text-align: center;\\n    font-size: 12px;\\n    line-height: 18px;\\n    background-color: #3F4651;\\n    color: #E7BF00; }\\n\\n.content__panel {\\n  background-color: gainsboro;\\n  height: 95%;\\n  overflow: hidden auto; }\\n\\n.content__viewer {\\n  background-color: gainsboro;\\n  height: 100%;\\n  overflow: auto; }\\n\\nul.nav {\\n  margin: 0px;\\n  padding: 0px; }\\n\\nli.link {\\n  display: inline;\\n  border: 2px solid gray;\\n  border-radius: 4px;\\n  margin: 5px 5px 0px 0px;\\n  padding: 5px;\\n  text-transform: uppercase;\\n  line-height: 12px;\\n  font-weight: 600;\\n  cursor: pointer;\\n  font-size: 12px; }\\n\\nli.link:hover {\\n  background-color: gray;\\n  color: white; }\\n\\nbutton.btn {\\n  display: inline-block;\\n  vertical-align: middle;\\n  margin: 0px 0px 0px 0px;\\n  font-size: 12px;\\n  line-height: 10px;\\n  height: 30px;\\n  border: none;\\n  border-radius: 4px;\\n  background-color: transparent;\\n  color: #505050; }\\n\\nbutton.btn:hover {\\n  color: blue; }\\n\\n.active {\\n  background-color: #222;\\n  color: white;\\n  border-color: #222 !important; }\\n\"","import { Component, Input } from '@angular/core';\r\nimport { IFlowchart } from '@models/flowchart';\r\nimport { INode } from '@models/node';\r\nimport { DataService } from '@services';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'view-dashboard',\r\n  templateUrl: './view-dashboard.component.html',\r\n  styleUrls: ['./view-dashboard.component.scss']\r\n})\r\nexport class ViewDashboardComponent {\r\n\r\n    constructor(private dataService: DataService, private router: Router) {}\r\n\r\n    selectNode(node_index: number): void {\r\n      if ( typeof(node_index) === 'number' ) {\r\n          this.dataService.flowchart.meta.selected_nodes = [node_index];\r\n      }\r\n    }\r\n\r\n    getEndNode(): INode {\r\n      for (const node of this.dataService.flowchart.nodes) {\r\n        if (node.type === 'end') { return node; }\r\n      }\r\n    }\r\n\r\n    viewerData(): any {\r\n        const node = this.dataService.flowchart.nodes[this.dataService.flowchart.meta.selected_nodes[0]];\r\n        if (!node) { return ''; }\r\n        if (node.type === 'output') { return node.input.value; }\r\n        return node.output.value;\r\n    }\r\n    setSplit(e) { this.dataService.splitVal = e.sizes[1]; }\r\n\r\n}\r\n\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { SharedModule } from '@shared/shared.module';\r\nimport { ViewDashboardRoutingModule } from './view-dashboard-routing.module';\r\nimport { ViewDashboardComponent } from './view-dashboard.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ViewDashboardComponent\r\n  ],\r\n  exports: [\r\n    ViewDashboardComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    SharedModule,\r\n    ViewDashboardRoutingModule\r\n  ],\r\n  entryComponents: [ ],\r\n  providers: [ ]\r\n})\r\nexport class ViewDashboardModule {\r\n    constructor () { }\r\n}\r\n","module.exports = \"<div class='flowchart-info' *ngIf=\\\"node.type=='start'\\\">\\r\\n    <input id='flowchart-name' [(ngModel)]='flowchart.name' placeholder=\\\"flowchart name\\\" size={{flowchart.name?.length||12}}>\\r\\n    <textarea autogrow\\r\\n    id='flowchart-desc' [(ngModel)]='flowchart.description' placeholder=\\\"flowchart description\\\"></textarea>\\r\\n</div>\\r\\n<hr *ngIf=\\\"node.type=='start'\\\">\\r\\n<div class='container--input'>\\r\\n    <procedure-input-editor *ngFor=\\\"let prod of node.procedure\\\" [prod]=\\\"prod\\\" ></procedure-input-editor>\\r\\n</div>\\r\\n\\r\\n<!--\\r\\n<section *ngIf=\\\"node.type != 'end'\\\">\\r\\n    <panel-header [node]='node' [title]=\\\"'inputs'\\\"></panel-header>\\r\\n    <div class='container--input'>\\r\\n        <input-port-editor [port]=\\\"node?.input\\\" ></input-port-editor>\\r\\n    </div>\\r\\n</section>\\r\\n<section *ngIf=\\\"node.type != 'start'\\\">\\r\\n    <panel-header [node]='node' [title]=\\\"'output'\\\"></panel-header>\\r\\n    <div class='container--output'>\\r\\n        <output-port-editor [port]=\\\"node?.output\\\" ></output-port-editor>\\r\\n    </div>\\r\\n</section>\\r\\n-->\\r\\n\"","module.exports = \"div[class^=\\\"container--\\\"] {\\n  display: flex;\\n  flex-direction: column;\\n  padding-left: 10px;\\n  margin: 0px 0px; }\\n\\n.flowchart-info {\\n  display: -ms-grid;\\n  display: grid;\\n  padding-left: 10px;\\n  margin: 5px 0px;\\n  width: 100%; }\\n\\ninput {\\n  color: #505050;\\n  background-color: #fafafa;\\n  border: none;\\n  width: -webkit-fit-content;\\n  width: -moz-fit-content;\\n  width: fit-content;\\n  border-left: 1px solid gainsboro;\\n  border-bottom: 1px solid gainsboro;\\n  padding: 5px;\\n  margin-left: 3px;\\n  font-weight: 600;\\n  font-style: italic;\\n  min-width: 40px;\\n  max-width: 300px;\\n  font-size: 12px;\\n  vertical-align: bottom; }\\n\\ninput.disabled-input {\\n    border-bottom: none; }\\n\\ntextarea {\\n  color: #505050;\\n  background-color: #fafafa;\\n  border: none;\\n  border-left: 1px solid gainsboro;\\n  border-bottom: 1px solid gainsboro;\\n  padding-left: 5px;\\n  font-family: sans-serif;\\n  font-size: 12px;\\n  margin: 10px 0px 5px 3px;\\n  width: 90%;\\n  resize: none; }\\n\\nhr {\\n  width: inherit;\\n  border-top: 2px solid gainsboro; }\\n\"","import { Component, Input, AfterContentInit, AfterViewInit, AfterViewChecked } from '@angular/core';\r\nimport { INode } from '@models/node';\r\nimport { PortType } from '@models/port';\r\nimport { IFlowchart } from '@models/flowchart';\r\nimport { MatTextareaAutosize } from '@angular/material';\r\n\r\nconst canvas = document.createElement('canvas');\r\nconst ctx = canvas.getContext('2d');\r\nctx.font = '12px sans-serif';\r\n\r\n@Component({\r\n  selector: 'parameter-editor',\r\n  templateUrl: './parameter-editor.component.html',\r\n  styleUrls: ['./parameter-editor.component.scss']\r\n})\r\nexport class ParameterEditorComponent implements AfterViewInit {\r\n    @Input() node: INode;\r\n    @Input() flowchart: IFlowchart;\r\n\r\n    ngAfterViewInit() {\r\n        const textarea = document.getElementById('flowchart-desc');\r\n        if (!textarea) { return; }\r\n        const desc = this.flowchart.description.split('\\n');\r\n        const textareaWidth = textarea.getBoundingClientRect().width;\r\n        let lineCount = desc.length;\r\n        for (const line of desc) {\r\n            lineCount += Math.floor(ctx.measureText(line).width / textareaWidth) + 1;\r\n        }\r\n\r\n        textarea.style.height = lineCount * 7.5 + 'px';\r\n    }\r\n\r\n}\r\n\r\n\r\n","module.exports = \"<div class='container container--parameter' *ngIf='prod.meta?.module==\\\"Input\\\"'>\\r\\n    <input class='input-const-name' [class.disabled-input]='true' value='{{prod.args[prod.argCount-2].value||\\\"Undefined\\\"}}:'\\r\\n    [style.width.px]='inputSize(prod.args[prod.argCount-2].value,\\\"Undefined\\\") + 10' disabled>\\r\\n\\r\\n    <select name={{prod.ID}}_type [(ngModel)]=\\\"prod.meta.inputMode\\\" tabindex=\\\"-1\\\">\\r\\n        <option \\r\\n            *ngFor=\\\"let ptype of PortTypesArr\\\" \\r\\n            [value]=\\\"PortTypes[ptype]\\\" \\r\\n            [selected]=\\\"prod.meta.inputMode == ptype\\\">{{ptype}}</option>\\r\\n    </select>\\r\\n    <ng-container [ngSwitch]=\\\"prod.meta.inputMode\\\" >\\r\\n        <input *ngSwitchCase=\\\"PortTypes.SimpleInput\\\" [(ngModel)]='prod.args[prod.argCount-1].default' placeholder='Default Value' \\r\\n        [style.width.px]='inputSize(prod.args[prod.argCount-1].default,\\\"Default Value\\\")'>\\r\\n\\r\\n        <div class='div--slider' *ngSwitchCase=\\\"PortTypes.Slider\\\">\\r\\n            <input [(ngModel)]='prod.args[prod.argCount-1].min' placeholder='Min'\\r\\n            [style.width.px]='inputSize(prod.args[prod.argCount-1].min,\\\"Min\\\")'>\\r\\n            <input [(ngModel)]='prod.args[prod.argCount-1].max' placeholder='Max'\\r\\n            [style.width.px]='inputSize(prod.args[prod.argCount-1].max,\\\"Max\\\")'>\\r\\n            <mat-slider\\r\\n                [(ngModel)]='prod.args[prod.argCount-1].default'\\r\\n                thumbLabel\\r\\n                tickInterval=\\\"auto\\\"\\r\\n                min={{prod.args[prod.argCount-1].min||0}}\\r\\n                max={{prod.args[prod.argCount-1].max||100}}></mat-slider>\\r\\n            <input [class.disabled-input]='true' [(ngModel)]='prod.args[prod.argCount-1].default'\\r\\n            [style.width.px]='inputSize(prod.args[prod.argCount-1].default,\\\"\\\")' disabled>\\r\\n\\r\\n        </div>\\r\\n        <input *ngSwitchCase=\\\"PortTypes.Checkbox\\\" [(ngModel)]='prod.args[prod.argCount-1].default' name='prod.args[prod.argCount-1].default' type=\\\"checkbox\\\">\\r\\n        <input *ngSwitchCase=\\\"PortTypes.URL\\\" [(ngModel)]='prod.args[prod.argCount-1].default' name='prod.args[prod.argCount-1].default' placeholder='Default URL'\\r\\n        [style.width.px]='inputSize(prod.args[prod.argCount-1].default,\\\"Default URL\\\")'>\\r\\n        <input *ngSwitchCase=\\\"PortTypes.File\\\" (change)=\\\"onFileChange($event)\\\" type=\\\"file\\\">\\r\\n    </ng-container>\\r\\n    <div>\\r\\n        <input class='inp--desc' placeholder='Constant Description' [(ngModel)]='prod.meta.description'\\r\\n        [style.width.px]='inputSize(prod.meta.description,\\\"Constant Description\\\")'>\\r\\n    </div>\\r\\n\\r\\n</div>\\r\\n<div class='container container--parameter' *ngIf='prod.meta.module==\\\"Output\\\"'>\\r\\n    <input class='inp--desc' placeholder='Return Description' [(ngModel)]='prod.meta.description'\\r\\n    [style.width.px]='inputSize(prod.meta.description,\\\"Return Description\\\")'>\\r\\n</div>\"","module.exports = \".container {\\n  margin: 5px 0px; }\\n\\n.container--parameter {\\n  display: inline-block;\\n  flex-direction: row;\\n  flex-wrap: wrap;\\n  color: #505050;\\n  vertical-align: bottom;\\n  padding-bottom: 5px;\\n  border-bottom: 1px solid gainsboro;\\n  border-left: 1px solid gainsboro;\\n  width: 100%; }\\n\\nselect {\\n  color: #505050;\\n  background-color: #fafafa;\\n  border: 1px solid #505050; }\\n\\ninput {\\n  color: #505050;\\n  background-color: #fafafa;\\n  border: none;\\n  border-bottom: 1px solid #505050;\\n  margin-left: 5px;\\n  max-width: 95%;\\n  vertical-align: bottom; }\\n\\ninput.disabled-input {\\n    border-bottom: none; }\\n\\n.input-const-name {\\n  min-width: 100px; }\\n\\n.slider-val {\\n  color: #505050;\\n  resize: horizontal;\\n  size: 2;\\n  min-width: 1px;\\n  max-width: 300px;\\n  width: 20px; }\\n\\n.container--input {\\n  display: inline-flex;\\n  flex-direction: row; }\\n\\n.div--slider {\\n  display: inline-flex;\\n  flex-direction: row; }\\n\\n.inp--desc {\\n  font-size: 13px;\\n  padding-top: 5px;\\n  max-width: 95%; }\\n\\n.parameter__name {\\n  width: 100px;\\n  height: auto;\\n  word-wrap: break-word; }\\n\\nmat-slider {\\n  width: 300px; }\\n\"","import { Component, Input, Output, EventEmitter, AfterViewInit } from '@angular/core';\r\nimport { IProcedure, ProcedureTypes } from '@models/procedure';\r\nimport { InputType } from '@models/port';\r\nconst keys = Object.keys(InputType);\r\nconst canvas = document.createElement('canvas');\r\nconst ctx = canvas.getContext('2d');\r\nctx.font = '13px Arial';\r\n\r\n@Component({\r\n  selector: 'procedure-input-editor',\r\n  templateUrl: './procedure-input-editor.component.html',\r\n  styleUrls: ['./procedure-input-editor.component.scss']\r\n})\r\nexport class ProcedureInputEditorComponent implements AfterViewInit {\r\n\r\n    @Input() prod: IProcedure;\r\n\r\n    PortTypes = InputType;\r\n    PortTypesArr = keys.slice(keys.length / 2);\r\n\r\n    constructor() {\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        // console.log(this.prod);\r\n    }\r\n\r\n    editOptions(): void { }\r\n\r\n    onFileChange(event) {\r\n      this.prod.args[this.prod.argCount - 1].default = event.target.files[0];\r\n    }\r\n\r\n    inputSize(val, defaultVal) {\r\n        if (val === undefined || val === '') { return ctx.measureText(defaultVal).width + 5; }\r\n        return ctx.measureText(val).width + 5;\r\n    }\r\n\r\n}\r\n","module.exports = \"<div class='container--line' \\r\\n    [class.selected]=\\\"data.selected\\\"\\r\\n    [class.error]=\\\"data.hasError\\\"\\r\\n    [class.disabled]=\\\"!data.enabled\\\"\\r\\n    [ngSwitch]=\\\"data.type\\\"\\r\\n    (click)='emitSelect($event, data)'>\\r\\n    <div class='container--item' >\\r\\n        <!-- Variable Assignment Template -->\\r\\n        <div class='line--item' *ngSwitchCase=\\\"ProcedureTypes.Variable\\\">\\r\\n            <input class='input--var'\\r\\n                [ngModel]='data.args[0].value'\\r\\n                (ngModelChange)='data.args[0].value=varMod($event)'\\r\\n                name='data.args[0].name'\\r\\n                placeholder={{data.args[0].name}}>  \\r\\n            = \\r\\n            <input \\r\\n                class='input--arg'\\r\\n                [ngModel]='data.args[1].value'\\r\\n                (ngModelChange)='data.args[1].value=argMod($event)'\\r\\n                name='data.args[1].name'\\r\\n                placeholder={{data.args[1].name}}\\r\\n                [style.width.px]='inputSize(data.args[1].value||data.args[1].name)'>  \\r\\n            </div>\\r\\n\\r\\n        <!-- IF Template -->\\r\\n        <div class='line--item hasChildren' *ngSwitchCase=\\\"ProcedureTypes.If\\\">\\r\\n            <div class='function-text'>\\r\\n                If\\r\\n            </div>\\r\\n            ( <input class='input--arg'\\r\\n                    (cut)='stopProp($event)' (paste)='stopProp($event)'\\r\\n                    [(ngModel)]='data.args[0].value'\\r\\n                    name='data.args[0].name'\\r\\n                    placeholder={{data.args[0].name}}\\r\\n                    [style.width.px]='inputSize(data.args[0].value||data.args[0].name)'\\r\\n                    >  \\r\\n                    )\\r\\n\\r\\n        </div>\\r\\n\\r\\n        <!-- ELSEIF Template -->\\r\\n        <div class='line--item hasChildren' *ngSwitchCase=\\\"ProcedureTypes.Elseif\\\">\\r\\n            <div class='function-text'>\\r\\n                Else if\\r\\n            </div>\\r\\n            \\r\\n        \\r\\n        ( <input class='input--arg'\\r\\n                (cut)='stopProp($event)' (paste)='stopProp($event)' \\r\\n                [(ngModel)]='data.args[0].value'\\r\\n                name='data.args[0].name'\\r\\n                placeholder={{data.args[0].name}}\\r\\n                [style.width.px]='inputSize(data.args[0].value||data.args[0].name)'\\r\\n                >  \\r\\n                )\\r\\n        </div>\\r\\n\\r\\n        <!-- ELSE Template -->\\r\\n        <div class='line--item hasChildren' *ngSwitchCase=\\\"ProcedureTypes.Else\\\">\\r\\n            <div class='function-text'>\\r\\n                Else\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <!-- BREAK Template -->\\r\\n        <div class='line--item' *ngSwitchCase=\\\"ProcedureTypes.Break\\\">\\r\\n            <div class='function-text'>\\r\\n                Break\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <!-- CONTINUE Template -->\\r\\n        <div class='line--item' *ngSwitchCase=\\\"ProcedureTypes.Continue\\\">\\r\\n            <div class='function-text'>\\r\\n                Continue\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n\\r\\n    <!-- FOREACH Template -->\\r\\n        <div class='line--item hasChildren' *ngSwitchCase=\\\"ProcedureTypes.Foreach\\\">\\r\\n                <div class='function-text'>\\r\\n                    For\\r\\n                </div>\\r\\n                <input class='input--arg'\\r\\n                    (cut)='stopProp($event)' (paste)='stopProp($event)'\\r\\n                    [(ngModel)]='data.args[0].value'\\r\\n                    name='data.args[0].name'\\r\\n                    placeholder={{data.args[0].name}}\\r\\n                    [style.width.px]='inputSize(data.args[0].value||data.args[0].name)'\\r\\n                    >  \\r\\n                <div class='function-text'>\\r\\n                    in\\r\\n                </div>\\r\\n                <input class='input--arg'\\r\\n                    (cut)='stopProp($event)' (paste)='stopProp($event)'\\r\\n                    [(ngModel)]='data.args[1].value'\\r\\n                    name='data.args[1].name'\\r\\n                    placeholder={{data.args[1].name}}\\r\\n                    [style.width.px]='inputSize(data.args[1].value||data.args[1].name)'\\r\\n                    >  \\r\\n                    \\r\\n        </div>\\r\\n\\r\\n        <!-- WHILE Template -->\\r\\n        <div class='line--item hasChildren' *ngSwitchCase=\\\"ProcedureTypes.While\\\">\\r\\n            <div class='function-text'>\\r\\n                While\\r\\n            </div>\\r\\n            <input class='input--arg' \\r\\n                    (cut)='stopProp($event)' (paste)='stopProp($event)'\\r\\n                    [(ngModel)]='data.args[0].value'\\r\\n                    name='data.args[0].name'\\r\\n                    placeholder={{data.args[0].name}}\\r\\n                    [style.width.px]='inputSize(data.args[0].value||data.args[0].name)'\\r\\n                    >  \\r\\n\\r\\n        </div>\\r\\n\\r\\n        <!-- Constant (Only visible in start node) Template -->\\r\\n        <div class='line--item' *ngSwitchCase=\\\"ProcedureTypes.Constant\\\">\\r\\n            <div class='function-text'>Constant</div>\\r\\n\\r\\n            <input class='input--arg' \\r\\n                    (cut)='stopProp($event)' (paste)='stopProp($event)'\\r\\n                    [(ngModel)]='data.args[0].value'\\r\\n                    name='data.args[0].name'\\r\\n                    placeholder={{data.args[0].name}}\\r\\n                    [style.width.px]='inputSize(data.args[0].value||data.args[0].name)'\\r\\n                    >  \\r\\n\\r\\n        </div>\\r\\n        \\r\\n        <!-- Return (Only visible in End node) Template -->\\r\\n        <div class='line--item' *ngSwitchCase=\\\"ProcedureTypes.Return\\\">\\r\\n            <div class='function-text'>Return</div>\\r\\n\\r\\n            <input class='input--arg' \\r\\n                    (cut)='stopProp($event)' (paste)='stopProp($event)'\\r\\n                    [(ngModel)]='data.args[0].value'\\r\\n                    name='data.args[0].name'\\r\\n                    placeholder={{data.args[0].name}}\\r\\n                    [style.width.px]='inputSize(data.args[0].value||data.args[0].name)'\\r\\n                    >  \\r\\n        </div>\\r\\n        \\r\\n\\r\\n        \\r\\n        <!-- Function Template -->\\r\\n        <div class='line--item' *ngSwitchCase=\\\"ProcedureTypes.Function\\\">\\r\\n            <ng-container *ngIf=\\\"data.meta.module.toUpperCase() !='OUTPUT' && data.args[0].name !=='__none__'\\\">\\r\\n                <input class='input--var'\\r\\n                [ngModel]='data.args[0].value'\\r\\n                (ngModelChange)='data.args[0].value=varMod($event)'\\r\\n                (cut)='stopProp($event)' \\r\\n                (paste)='stopProp($event)'\\r\\n                placeholder={{data.args[0].name}}>  \\r\\n                = \\r\\n\\r\\n            </ng-container>\\r\\n            <div class='function-text'>{{data.meta.module}}.{{data.meta.name}} </div>\\r\\n\\r\\n            <ng-container *ngFor='let p of data.args.slice(1);let i=index'>\\r\\n                <!--\\r\\n                <input *ngIf=\\\"p.name.toUpperCase() !== '__MODEL__'; else text_template\\\" \\r\\n                \\r\\n                (cut)='stopProp($event)' \\r\\n                (paste)='stopProp($event)' \\r\\n                [(ngModel)]='p.value' \\r\\n                placeholder={{p.name}}>    \\r\\n                \\r\\n                <ng-template #text_template>\\r\\n                    model,\\r\\n                </ng-template>\\r\\n                -->\\r\\n\\r\\n                <input *ngIf=\\\"p.name.indexOf('__') == -1\\\" \\r\\n                        class='input--arg' \\r\\n                        (cut)='stopProp($event)' \\r\\n                        (paste)='stopProp($event)' \\r\\n                        [(ngModel)]='p.value' \\r\\n                        placeholder={{p.name}}\\r\\n                        [style.width.px]='inputSize(p.value||p.name)'\\r\\n                        >    \\r\\n                \\r\\n\\r\\n            </ng-container>\\r\\n\\r\\n        </div>\\r\\n\\r\\n        <!-- Imported Function Template -->\\r\\n        <div class='line--item' *ngSwitchCase=\\\"ProcedureTypes.Imported\\\">\\r\\n            <input class='input--var'\\r\\n                    [ngModel]='data.args[0].value'\\r\\n                    (ngModelChange)='data.args[0].value=varMod($event)'\\r\\n                    (cut)='stopProp($event)' (paste)='stopProp($event)'\\r\\n                    placeholder={{data.args[0].name}}>  \\r\\n            = \\r\\n            <div class='function-text'>{{data.meta.name}} </div> \\r\\n            \\r\\n            <ng-container *ngFor='let p of data.args.slice(1);let i=index'>\\r\\n                <input class='input--arg' \\r\\n                        (cut)='stopProp($event)' (paste)='stopProp($event)' \\r\\n                        [(ngModel)]='p.value' \\r\\n                        placeholder={{p.name}}\\r\\n                        [style.width.px]='inputSize(p.value||p.name)'>    \\r\\n            </ng-container>\\r\\n            \\r\\n\\r\\n        </div>\\r\\n\\r\\n\\r\\n        <!-- delete button-->\\r\\n        <button class='btn' mat-icon-button title=\\\"Delete Procedure\\\" (click)=\\\"emitDelete()\\\" tabindex=\\\"-1\\\">\\r\\n            <mat-icon class='icon'>delete_outline</mat-icon>\\r\\n        </button>\\r\\n        <!-- Disable button-->\\r\\n        <button class='btn' mat-icon-button title=\\\"Disable Procedure\\\" [class.highlighted]='!data.enabled' (click)='markDisabled()' tabindex=\\\"-1\\\">\\r\\n            <mat-icon class='icon'>tv_off</mat-icon>\\r\\n        </button>\\r\\n        <!-- Print button-->\\r\\n        <button *ngIf='canBePrinted()' class='btn' mat-icon-button title=\\\"Print Result In Console\\\" [class.highlighted]='data.print' (click)='markPrint()' tabindex=\\\"-1\\\">\\r\\n            <mat-icon class='icon'>print</mat-icon>\\r\\n        </button>\\r\\n        <!-- help button-->\\r\\n        <button *ngIf='haveHelpText()' class='btn' mat-icon-button title=\\\"Help\\\" tabindex=\\\"-1\\\" (click)='emitHelpText(undefined)'>\\r\\n            <mat-icon class='icon'>help</mat-icon>\\r\\n        </button>\\r\\n    </div>\\r\\n    <!-- list of child procedures (if the procedure has children) -->\\r\\n    <div *ngIf=\\\"data?.children\\\" class='container--nested'>\\r\\n        <procedure-item \\r\\n            *ngFor=\\\"let line of data?.children; let idx=index\\\" \\r\\n            [data]=\\\"line\\\"\\r\\n            (select)='selectChild($event, line)'\\r\\n            (delete)='deleteChild(idx)'\\r\\n            (helpText)='emitHelpText($event)'></procedure-item>\\r\\n    </div>\\r\\n\\r\\n\\r\\n</div>\\r\\n\"","module.exports = \".container--nested {\\n  padding-left: 0px; }\\n\\n.container--line {\\n  margin: 8px 0px 2px 10px;\\n  padding: 2px 0px 2px 2px;\\n  border-bottom: 1px solid gainsboro;\\n  border-left: 1px solid gainsboro;\\n  color: #505050;\\n  min-height: 22px;\\n  opacity: 1; }\\n\\n.container--line.disabled {\\n    opacity: 0.5; }\\n\\n.container--line.selected {\\n    border: 1px solid #000096;\\n    background-color: gainsboro; }\\n\\n.container--line.error {\\n    border: 1px solid red; }\\n\\n.container--line .input--var {\\n    width: 70px;\\n    background-color: #fafafa;\\n    border: none;\\n    border-bottom: 1px solid #505050;\\n    margin-right: 5px; }\\n\\n.container--line .input--arg {\\n    resize: horizontal;\\n    min-width: 1px;\\n    max-width: 300px;\\n    background-color: #fafafa;\\n    border: none;\\n    border-bottom: 1px solid #505050;\\n    margin-left: 5px; }\\n\\n.container--line .input--arg.error {\\n      border: 1px solid red; }\\n\\n.container--line input:focus {\\n    border: 1px solid #000096; }\\n\\n.container--item {\\n  margin: none;\\n  padding: none;\\n  border: none; }\\n\\n.btn {\\n  height: 24px;\\n  width: 24px;\\n  float: right;\\n  background-color: transparent;\\n  border: none;\\n  display: none;\\n  color: #777; }\\n\\n.btn.highlighted {\\n    background-color: #ff9696; }\\n\\n.container--item:hover .btn {\\n  display: block; }\\n\\n.icon {\\n  vertical-align: top;\\n  font-size: 20px; }\\n\\n.line--item {\\n  display: inline-block;\\n  color: #505050; }\\n\\n/*\\r\\n.hasChildren::before{\\r\\n    content: '\\\\25B6';\\r\\n    position: absolute;\\r\\n    left: 3px;\\r\\n    font-size: 8px;\\r\\n}\\r\\n*/\\n\\n.function-text {\\n  display: inline-block;\\n  white-space: normal;\\n  font-style: italic;\\n  color: #be8c1e;\\n  font-weight: 600; }\\n\"","import { Component, Input, Output,  EventEmitter, OnInit, OnDestroy, AfterViewInit} from '@angular/core';\r\n\r\nimport { IProcedure, ProcedureTypes } from '@models/procedure';\r\nimport { ProcedureTypesAware, ModuleDocAware } from '@shared/decorators';\r\n\r\nimport { _parameterTypes} from '@modules';\r\n\r\nconst canvas = document.createElement('canvas');\r\nconst ctx = canvas.getContext('2d');\r\nctx.font = '13px Arial';\r\n\r\n@ProcedureTypesAware\r\n@ModuleDocAware\r\n@Component({\r\n    selector: 'procedure-item',\r\n    templateUrl: './procedure-item.component.html',\r\n    styleUrls: ['procedure-item.component.scss']\r\n})\r\nexport class ProcedureItemComponent implements AfterViewInit {\r\n    @Input() data: IProcedure;\r\n    @Output() delete = new EventEmitter();\r\n    @Output() select = new EventEmitter();\r\n    @Output() copied = new EventEmitter();\r\n    @Output() pasteOn = new EventEmitter();\r\n    @Output() helpText = new EventEmitter();\r\n\r\n    ProcedureTypes = ProcedureTypes;\r\n\r\n    ngAfterViewInit() {\r\n        const elements = document.getElementsByClassName('input--arg');\r\n        [].forEach.call(elements, function (el) {\r\n            console.log(el);\r\n        });\r\n    }\r\n\r\n    // delete this procedure\r\n    emitDelete(): void {\r\n        this.delete.emit();\r\n    }\r\n\r\n    // select this procedure\r\n    emitSelect(event, procedure: IProcedure) {\r\n        event.stopPropagation();\r\n        this.select.emit({'ctrl': event.ctrlKey, 'prod': procedure});\r\n    }\r\n\r\n    // delete child procedure (after receiving emitDelete from child procedure)\r\n    deleteChild(index: number): void {\r\n        this.data.children.splice(index, 1);\r\n    }\r\n\r\n    // select child procedure (after receiving emitSelect from child procedure)\r\n    selectChild(event, procedure: IProcedure) {\r\n        this.select.emit(event);\r\n    }\r\n\r\n    markPrint() {\r\n        this.data.print = !this.data.print;\r\n    }\r\n\r\n    markDisabled() {\r\n        this.data.enabled = !this.data.enabled;\r\n    }\r\n\r\n    canBePrinted() {\r\n        return (this.data.argCount > 0 && this.data.args[0].name === 'var_name');\r\n    }\r\n\r\n    haveHelpText() {\r\n        return (this.data.type === ProcedureTypes.Function || this.data.type ===  ProcedureTypes.Imported);\r\n    }\r\n\r\n    emitHelpText($event) {\r\n        if ($event) {\r\n            this.helpText.emit($event);\r\n            return;\r\n        }\r\n        try {\r\n            if (this.data.type === ProcedureTypes.Imported) {\r\n                this.helpText.emit(this.data.meta.name);\r\n                // this.helpText.emit(this.ModuleDoc[this.data.meta.module][this.data.meta.name]);\r\n\r\n            } else {\r\n            // @ts-ignore\r\n            this.helpText.emit(this.ModuleDoc[this.data.meta.module][this.data.meta.name]);\r\n            }\r\n        } catch (ex) {\r\n            this.helpText.emit('error');\r\n        }\r\n\r\n    }\r\n\r\n    // stopPropagation to prevent cut/paste with input box focused\r\n    stopProp(event): void {\r\n        event.stopPropagation();\r\n    }\r\n\r\n    // modify variable input: replace space \" \" with underscore \"_\"\r\n    varMod(event) {\r\n        if (!event) { return event; }\r\n        let str = event.trim();\r\n        str = str.replace(/ /g, '_');\r\n        return str;\r\n    }\r\n\r\n    // modify argument input: check if input is valid\r\n    argMod(event: string) {\r\n        return event;\r\n\r\n        console.log(event);\r\n        const string = event.trim();\r\n        if ( string.substring(0, 1) === '@' || (/^[a-zA-Z_$][0-9a-zA-Z_$]*/i).test(string)) {\r\n            return event;\r\n        }\r\n        try {\r\n            JSON.parse(string);\r\n        } catch (ex) {\r\n            console.log('.........', ex);\r\n            // document.activeElement.style.error = true;\r\n        }\r\n\r\n        return event;\r\n    }\r\n\r\n    inputSize(val) {\r\n        return ctx.measureText(val).width + 5;\r\n    }\r\n}\r\n","module.exports = \"<ng-container *ngIf=\\\"nodeType == ''\\\">\\r\\n    <!-- basic functions: variable, if, else, else if, for, while, continue, break -->\\r\\n\\r\\n    <button id='basic-funcs' class=\\\"accordion\\\" \\r\\n    (click)='toggleAccordion(\\\"basic-funcs\\\")' >Basic</button>\\r\\n    <div class=\\\"panel\\\">\\r\\n        <ul class='toolset__basic'>\\r\\n            <ng-container *ngFor=\\\"let type of ProcedureTypesArr\\\">\\r\\n                <li *ngIf='type.toUpperCase() !== \\\"FUNCTION\\\" && type.toUpperCase() !== \\\"IMPORTED\\\"\\r\\n                && type.toUpperCase() !== \\\"CONSTANT\\\" && type.toUpperCase() !== \\\"RETURN\\\"'\\r\\n                class='tooltip'\\r\\n                (click)='add(ProcedureTypes[type])'> \\r\\n                    {{type}}\\r\\n                </li>\\r\\n            </ng-container>\\r\\n        </ul>\\r\\n    </div>\\r\\n\\r\\n    <!-- functions from core.modules -->\\r\\n    <ng-container *ngFor='let mod of Modules' >\\r\\n\\r\\n        <button id='{{mod.module}}' class=\\\"accordion\\\" \\r\\n        *ngIf='mod.module.toUpperCase() != \\\"INPUT\\\" && mod.module.toUpperCase() != \\\"OUTPUT\\\"'\\r\\n        (click)='toggleAccordion(mod.module)' >{{ mod.module }}</button>\\r\\n        <div class=\\\"panel\\\">\\r\\n            <ul class='toolset__functions--subset'>\\r\\n                <ng-container *ngFor='let fn of mod.functions'>\\r\\n                    <div class='tooltip' *ngIf='fn.name.substring(0,1)!=\\\"_\\\"'>\\r\\n                        <li \\r\\n                        (click)='add_function(fn)'> \\r\\n                            {{fn.name}} \\r\\n                        </li>\\r\\n                        <span class=\\\"tooltiptext\\\" *ngIf='ModuleDoc[mod.module] && ModuleDoc[mod.module][fn.name]'>\\r\\n                            <p class='funcDesc'>{{ModuleDoc[mod.module][fn.name].summary||ModuleDoc[mod.module][fn.name].description}}</p>\\r\\n                            <p *ngIf='ModuleDoc[mod.module][fn.name].parameters?.length > 0'><span>Parameters: </span></p>\\r\\n                            <p class='paramP' *ngFor='let param of ModuleDoc[mod.module][fn.name].parameters'><span>{{param.name}} - </span> {{param.description}}</p>\\r\\n                            <p *ngIf='ModuleDoc[mod.module][fn.name].returns'><span>Returns: </span> {{ModuleDoc[mod.module][fn.name].returns}}</p>\\r\\n                        </span>\\r\\n                    </div>\\r\\n                </ng-container>\\r\\n            </ul>\\r\\n        </div>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- imported functions -->\\r\\n    <ng-container>\\r\\n        <button id='imported' class=\\\"accordion\\\" \\r\\n        (click)='toggleAccordion(\\\"imported\\\")' >Imported</button>\\r\\n        <div class=\\\"panel\\\">\\r\\n            <ul class='toolset__functions--subset'>\\r\\n                <div class='tooltip' *ngFor='let fn of functions'>\\r\\n                    <li (click)='add_imported_function(fn)'> {{fn.name}} \\r\\n                        <button class='remove-btn' (click)='delete_imported_function(fn)'>\\r\\n                            <mat-icon class='remove-icon'>close</mat-icon>\\r\\n                        </button>\\r\\n                    </li>\\r\\n                    <span class=\\\"tooltiptext\\\">\\r\\n                        <p class='funcDesc'>{{fn.doc.description}}</p>\\r\\n                        <p *ngIf='fn.doc.parameters?.length > 0'><span>Parameters: </span></p>\\r\\n                        <p class='paramP' *ngFor='let param of fn.doc.parameters'><span>{{param.name}} - </span> {{param.description}}</p>\\r\\n                        <p *ngIf='fn.doc.returns'><span>Returns: </span> {{fn.doc.returns}}</p>\\r\\n                    </span>\\r\\n                </div>\\r\\n            </ul>\\r\\n            <br>\\r\\n            <input type=\\\"file\\\" id=\\\"selectedFile\\\" (change)=\\\"import_function($event)\\\" style=\\\"display: none;\\\" />\\r\\n            <button class='add-btn' onclick=\\\"document.getElementById('selectedFile').click();\\\" title=\\\"Import Function from File\\\">\\r\\n                <mat-icon class='add-icon'>open_in_browser</mat-icon>\\r\\n            </button>\\r\\n        </div>\\r\\n    </ng-container>\\r\\n</ng-container>\\r\\n\\r\\n<!-- functions for input nodes -->\\r\\n<div id='toolset_inp' class = 'toolset' *ngIf=\\\"nodeType == 'start'\\\">\\r\\n    <div class='toolset__functions'>\\r\\n        <section *ngFor='let type of ProcedureTypesArr' >\\r\\n            <div *ngIf='type.toUpperCase() == \\\"CONSTANT\\\"'>\\r\\n                <ul class='toolset__functions--subset'>\\r\\n                    <li (click)='add(ProcedureTypes[type])'> {{type}} </li>\\r\\n                </ul>\\r\\n            </div>\\r\\n        </section>\\r\\n        <!--\\r\\n        <section *ngFor='let mod of Modules' >\\r\\n            <div *ngIf='mod.module.toUpperCase() == \\\"INPUT\\\"'>\\r\\n                <ul class='toolset__functions--subset'>\\r\\n                    <li *ngFor='let fn of mod.functions' (click)='add_function(fn)'> {{fn.name}} </li>\\r\\n                </ul>\\r\\n            </div>\\r\\n        </section>\\r\\n        -->\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<!-- functions for output nodes -->\\r\\n<div id='toolset_inp' class = 'toolset' *ngIf=\\\"nodeType == 'end'\\\">\\r\\n    <div class='toolset__functions' *ngIf=\\\"hasProd===false\\\">\\r\\n        <!--\\r\\n        <section *ngFor='let type of ProcedureTypesArr' >\\r\\n            <div *ngIf='type.toUpperCase() == \\\"RETURN\\\"'>\\r\\n                <ul class='toolset__functions--subset'>\\r\\n                    <li (click)='add(ProcedureTypes[type])'> {{type}} </li>\\r\\n                </ul>\\r\\n            </div>\\r\\n        </section>\\r\\n        -->\\r\\n        <section *ngFor='let mod of Modules' >\\r\\n            <div *ngIf='mod.module.toUpperCase() == \\\"OUTPUT\\\"'>\\r\\n                <ul class='toolset__functions--subset'>\\r\\n                    <li *ngFor='let fn of mod.functions' (click)='add_function(fn)'> {{fn.name}} </li>\\r\\n                </ul>\\r\\n            </div>\\r\\n        </section>\\r\\n    </div>\\r\\n</div>\\r\\n\"","module.exports = \":host {\\n  width: 100%;\\n  background-color: #efefef; }\\n\\nul {\\n  list-style-type: none;\\n  margin: 0px;\\n  padding: 0px;\\n  padding-left: 15px; }\\n\\nul li {\\n    -webkit-user-select: none;\\n       -moz-user-select: none;\\n        -ms-user-select: none;\\n            user-select: none;\\n    margin: 0px;\\n    padding: 0px;\\n    color: #505050;\\n    font-size: 12px;\\n    line-height: 18px; }\\n\\n.remove-btn {\\n  background-color: transparent;\\n  border: none;\\n  height: 13px;\\n  float: right; }\\n\\n.remove-btn .remove-icon {\\n    font-size: 11px;\\n    height: 11px;\\n    color: #505050; }\\n\\n.add-btn {\\n  background-color: transparent;\\n  border: none;\\n  float: left;\\n  padding: 6px;\\n  transition: 0.4s; }\\n\\n.add-btn :hover {\\n    background-color: gainsboro; }\\n\\n.add-btn .add-icon {\\n    float: left;\\n    color: #505050; }\\n\\n.accordion {\\n  background-color: gainsboro;\\n  color: #505050;\\n  cursor: pointer;\\n  width: 100%;\\n  padding: 8px 8px 8px 8px;\\n  border: none;\\n  display: block;\\n  text-align: left;\\n  outline: none;\\n  font-size: 12px;\\n  transition: 0.4s;\\n  font-weight: 550; }\\n\\n.active, .accordion:hover {\\n  background-color: #ccc; }\\n\\n.panel {\\n  width: inherit;\\n  padding: 0px 10px 0px 0px;\\n  display: none;\\n  background-color: #efefef;\\n  overflow: hidden; }\\n\\n.tooltip {\\n  display: block; }\\n\\n/* Tooltip text */\\n\\n.tooltip .tooltiptext {\\n  min-width: 50px;\\n  max-width: 500px;\\n  background-color: #efefef;\\n  border: 1px solid #ccc;\\n  color: #505050;\\n  pointer-events: none;\\n  padding: 0px 10px 0px 10px;\\n  opacity: 0;\\n  position: absolute;\\n  z-index: 1; }\\n\\n.tooltip .tooltiptext p {\\n    font-family: sans-serif; }\\n\\n.tooltip .tooltiptext p.funcDesc {\\n      font-weight: 600; }\\n\\n.tooltip .tooltiptext p.paramP {\\n      padding-left: 5px; }\\n\\n.tooltip .tooltiptext p.paramP ::before {\\n        display: inline-block;\\n        content: '';\\n        border-radius: 0.25rem;\\n        height: 0.25rem;\\n        width: 0.25rem;\\n        margin: 0rem 0.3rem 0.15rem 0rem;\\n        background-color: #505050; }\\n\\n.tooltip .tooltiptext p span {\\n      font-style: italic; }\\n\\n/* Show the tooltip text when you mouse over the tooltip container */\\n\\n.tooltip:hover .tooltiptext {\\n  transition-delay: 1s;\\n  transition-duration: 0.3s;\\n  opacity: 1; }\\n\"","import { Component, Output, EventEmitter, Input} from '@angular/core';\r\n\r\nimport { ProcedureTypes, IFunction, IModule } from '@models/procedure';\r\nimport { IFlowchart } from '@models/flowchart';\r\nimport * as CircularJSON from 'circular-json';\r\nimport { IArgument } from '@models/code';\r\nimport * as Modules from '@modules';\r\nimport { ModuleAware, ModuleDocAware } from '@shared/decorators';\r\n\r\n\r\nconst keys = Object.keys(ProcedureTypes);\r\n\r\n@ModuleAware\r\n@ModuleDocAware\r\n@Component({\r\n  selector: 'toolset',\r\n  templateUrl: './toolset.component.html',\r\n  styleUrls: ['./toolset.component.scss']\r\n})\r\nexport class ToolsetComponent {\r\n\r\n    @Output() select = new EventEmitter();\r\n    @Output() delete = new EventEmitter();\r\n    @Output() imported = new EventEmitter();\r\n    @Input() functions: IFunction[];\r\n    @Input() nodeType: string;\r\n    @Input() hasProd: boolean;\r\n\r\n    ProcedureTypes = ProcedureTypes;\r\n    ProcedureTypesArr = keys.slice(keys.length / 2);\r\n\r\n    constructor() {}\r\n\r\n    // add selected basic function as a new procedure\r\n    add(type: ProcedureTypes): void {\r\n        this.select.emit( { type: type, data: undefined } );\r\n    }\r\n\r\n    // add selected function from core.modules as a new procedure\r\n    add_function(fnData) {\r\n        // create a fresh copy of the params to avoid linked objects\r\n        // todo: figure out\r\n        fnData.args = fnData.args.map( (arg) => {\r\n            return {name: arg.name, value: arg.value, default: arg.default};\r\n            });\r\n\r\n        this.select.emit( { type: ProcedureTypes.Function, data: fnData } );\r\n    }\r\n\r\n    // add selected imported function as a new procedure\r\n    add_imported_function(fnData) {\r\n        fnData.args = fnData.args.map( (arg) => {\r\n            return {name: arg.name, value: arg.value, type: arg.type};\r\n            });\r\n        this.select.emit( { type: ProcedureTypes.Imported, data: fnData } );\r\n    }\r\n\r\n    // delete imported function\r\n    delete_imported_function(fnData) {\r\n        this.delete.emit(fnData);\r\n    }\r\n\r\n\r\n    // import a flowchart as function\r\n    async import_function(event) {\r\n        // read the file and create the function based on the flowchart\r\n        const p = new Promise((resolve) => {\r\n            const reader = new FileReader();\r\n            reader.onload = function() {\r\n                // parse the flowchart\r\n                const fl = CircularJSON.parse(reader.result.toString()).flowchart;\r\n\r\n                // create function and documentation of the function\r\n                const funcs = [];\r\n                const funcName = fl.name.replace(/\\ /g, '_');\r\n                const documentation = {\r\n                    name: funcName,\r\n                    module: 'Imported',\r\n                    description: fl.description,\r\n                    summary: fl.description,\r\n                    parameters: [],\r\n                    returns: undefined\r\n                };\r\n                const func: IFunction = <IFunction>{\r\n                    flowchart: <IFlowchart>{\r\n                        name: fl.name,\r\n                        nodes: fl.nodes,\r\n                        edges: fl.edges\r\n                    },\r\n                    name: funcName,\r\n                    module: 'Imported',\r\n                    doc: documentation\r\n                };\r\n\r\n                func.argCount = fl.nodes[0].procedure.length;\r\n                func.args = fl.nodes[0].procedure.map(prod => {\r\n                    documentation.parameters.push({\r\n                        name: prod.args[prod.argCount - 2].value.substring(1, prod.args[prod.argCount - 2].value.length - 1),\r\n                        description: prod.meta.description\r\n                    });\r\n                    return <IArgument>{\r\n                        name: prod.args[prod.argCount - 2].value.substring(1, prod.args[prod.argCount - 2].value.length - 1),\r\n                        default: prod.args[prod.argCount - 1].default,\r\n                        value: undefined,\r\n                        type: prod.meta.inputMode,\r\n                    };\r\n                });\r\n                if (!func.argCount) {\r\n                    resolve('error');\r\n                }\r\n\r\n                // go through the nodes\r\n                for (const node of fl.nodes) {\r\n                    if (node.type === 'end') {\r\n                        if (node.procedure.length > 0) {documentation.returns = node.procedure[0].meta.description; }\r\n                    }\r\n                }\r\n\r\n                // add func and all the imported functions of the imported flowchart to funcs\r\n                funcs.push(func);\r\n                for (const i of fl.functions) {\r\n                    funcs.push(i);\r\n                }\r\n                resolve(funcs);\r\n            };\r\n            reader.onerror = function() {\r\n                resolve('error');\r\n            };\r\n            reader.readAsText(event.target.files[0]);\r\n        });\r\n        const fnc = await p;\r\n        (<HTMLInputElement>document.getElementById('selectedFile')).value = '';\r\n        if (fnc === 'error') {\r\n            console.warn('Error reading file');\r\n            return;\r\n        }\r\n        this.imported.emit(fnc);\r\n    }\r\n\r\n    toggleAccordion(id: string) {\r\n        const acc = document.getElementById(id);\r\n        // acc = document.getElementsByClassName(\"accordion\");\r\n        acc.classList.toggle('active');\r\n        const panel = <HTMLElement>acc.nextElementSibling;\r\n        if (panel.style.display === 'block') {\r\n            panel.style.display = 'none';\r\n        } else {\r\n            panel.style.display = 'block';\r\n        }\r\n    }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { ViewEditorComponent } from './view-editor.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: ViewEditorComponent,\r\n    children: [\r\n      // {\r\n      //   path: '',\r\n      //   loadChildren: '../../mobius-viewer/mobius-viewer.module#MobiusViewerModule',\r\n      // }\r\n    ]\r\n  }\r\n];\r\n\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class ViewEditorRoutingModule { }\r\n","module.exports = \"<div class='container'>\\r\\n    <as-split direction=\\\"horizontal\\\" (dragEnd)='setSplit($event)'>\\r\\n        <as-split-area [size]=\\\"100 - dataService.splitVal\\\">\\r\\n            <div class='container__header'>\\r\\n\\r\\n                <!-- top left tab menu  -->\\r\\n                <div class=\\\"tab\\\">\\r\\n                    <button class='btn-tab' [class.active]='router.url==\\\"/gallery\\\"' [routerLink]=\\\"'/gallery'\\\">Gallery</button>\\r\\n                    <button class='btn-tab' [class.active]='router.url==\\\"/dashboard\\\"' [routerLink]=\\\"'/dashboard'\\\">Dashboard</button>\\r\\n                    <button class='btn-tab' [class.active]='router.url==\\\"/flowchart\\\"' [routerLink]=\\\"'/flowchart'\\\">Flowchart</button>\\r\\n                    <!--\\r\\n                    <button class='btn' [class.active]='false' (click)='updateView(\\\"editor\\\")'>Procedures</button>\\r\\n                    -->\\r\\n                </div>\\r\\n\\r\\n                <!-- hidden components (new file, save file, loaf file) for the dropdown menu-->\\r\\n                <div style=\\\"display: none;\\\">\\r\\n                    <file-new></file-new>\\r\\n                    <file-save></file-save>\\r\\n                    <file-load></file-load>        \\r\\n                </div>\\r\\n\\r\\n                <!-- top right dropdown menu -->\\r\\n                <div class=\\\"dropmenu\\\">\\r\\n                    <!-- execute button -->\\r\\n                    <div>\\r\\n                        <execute></execute>\\r\\n                    </div>\\r\\n                    <!-- dropdown menu for new file, save file, loaf file-->\\r\\n                    <div>\\r\\n                        <button class='btn' mat-icon-button [matMenuTriggerFor]=\\\"menu\\\">\\r\\n                            <mat-icon>more_vert</mat-icon>\\r\\n                        </button>\\r\\n                        <mat-menu #menu=\\\"matMenu\\\">\\r\\n                            <button  mat-menu-item onclick=\\\"document.getElementById('newfile').click();\\\"\\r\\n                            title=\\\"Create New Flowchart\\\">\\r\\n                                <mat-icon>rotate_left</mat-icon>\\r\\n                                <span>New File</span>\\r\\n                            </button>\\r\\n                            <button mat-menu-item onclick=\\\"document.getElementById('savefile').click();\\\"\\r\\n                            title=\\\"Save Flowchart File to Computer\\\">\\r\\n                                <mat-icon>save_alt</mat-icon>\\r\\n                                <span>Save File</span>\\r\\n                            </button>\\r\\n                            <button mat-menu-item onclick=\\\"document.getElementById('file-input').click();\\\"\\r\\n                            title=\\\"Load Flowchart File from Computer\\\">\\r\\n                                <mat-icon>launch</mat-icon>\\r\\n                                <span>Load File</span>\\r\\n                            </button>\\r\\n                        </mat-menu>\\r\\n                    </div>\\r\\n                    \\r\\n                </div>\\r\\n            </div>\\r\\n            <!-- viewchild content -->\\r\\n            <div class='content__panel'>\\r\\n                <h2>{{dataService.node?.name}}</h2>\\r\\n\\r\\n                <div class='container--editor' (mouseenter)='activateCopyPaste()'  (mouseleave)='deactivateCopyPaste()'\\r\\n                (copy)='copyProd()' (cut)='cutProd($event)' (paste)='pasteProd($event)'>\\r\\n                \\r\\n                    <div class='container__content'>\\r\\n                        <!-- toolset on the left side -->\\r\\n                        <div class=\\\"container--toolset\\\">\\r\\n                            <toolset [functions]='dataService.flowchart.functions' \\r\\n                            [nodeType]='dataService.node.type' \\r\\n                            [hasProd]='dataService.node.procedure.length>0' \\r\\n                            (delete)='deleteFunction($event)' \\r\\n                            (select)='add($event)' \\r\\n                            (imported)='importFunction($event)'></toolset>\\r\\n                        </div>\\r\\n                \\r\\n                        <!-- procedure editor on the right side -->\\r\\n                        <div id='procedure' class=\\\"container--procedure\\\">\\r\\n                            <!-- parameter-editor only for start node -->\\r\\n                            <parameter-editor *ngIf=\\\"dataService.node.type == 'start' || dataService.node.type == 'end'\\\" [flowchart]='dataService.flowchart' [node]='dataService.node'></parameter-editor>\\r\\n                \\r\\n                            <!-- list of procedure items for all nodes -->\\r\\n                            <procedure-item \\r\\n                            *ngFor=\\\"let line of dataService.node?.procedure; let idx=index\\\" \\r\\n                            [data]=\\\"line\\\"\\r\\n                            (select)=\\\"selectProcedure($event,line)\\\"\\r\\n                            (delete)=\\\"deleteChild(idx)\\\"\\r\\n                            (helpText)='updateHelpView($event)'></procedure-item>\\r\\n                            <br>\\r\\n                            <br>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </as-split-area>\\r\\n\\r\\n        <as-split-area [size]=\\\"dataService.splitVal\\\">\\r\\n            <!-- data viewers panel -->\\r\\n            <div class='content__viewer' >\\r\\n                <model-viewers-container [data]='viewerData()' [helpView]='helpView'></model-viewers-container>\\r\\n            </div>\\r\\n        </as-split-area>\\r\\n        \\r\\n    </as-split>\\r\\n\\r\\n</div>\\r\\n    \\r\\n\\r\\n\\r\\n\"","module.exports = \"as-split-area {\\n  overflow: hidden !important; }\\n\\n.container {\\n  position: relative;\\n  overflow: auto;\\n  height: 100%;\\n  width: 100%;\\n  display: flex;\\n  flex-direction: column;\\n  justify-content: space-around;\\n  /*\\r\\n    .container__content{\\r\\n        flex-grow: 1;\\r\\n        height: 0px;\\r\\n        border: 2px solid #3F4651;\\r\\n        overflow: auto;\\r\\n\\r\\n    }\\r\\n    */ }\\n\\n.container .container__header {\\n    flex: 0 1 auto;\\n    min-height: 35px;\\n    display: flex;\\n    flex-direction: row;\\n    justify-content: space-between;\\n    padding: 0px 0px 0px 15px;\\n    background-color: #ccc;\\n    border-bottom: 3px solid #eeeeee;\\n    line-height: 35px;\\n    font-size: 18px;\\n    font-weight: 600;\\n    text-align: center;\\n    /* tab styling */\\n    /* dropdown menu styling */ }\\n\\n.container .container__header .tab {\\n      border: 2px;\\n      overflow: hidden;\\n      background-color: #ccc; }\\n\\n.container .container__header .tab button {\\n      display: inline-block;\\n      vertical-align: bottom;\\n      background-color: inherit;\\n      color: #505050;\\n      border: none;\\n      outline: none;\\n      cursor: pointer;\\n      padding: 8px 10px;\\n      transition: 0.3s;\\n      font-size: 14px; }\\n\\n.container .container__header .tab button:hover {\\n      color: blue; }\\n\\n.container .container__header .tab button.active {\\n      background-color: #ccc;\\n      color: #000096;\\n      font-weight: 600;\\n      border-color: #222 !important; }\\n\\n.container .container__header .dropmenu {\\n      display: inline-flex; }\\n\\n.container .container__footer {\\n    text-align: center;\\n    font-size: 12px;\\n    line-height: 18px;\\n    background-color: #3F4651;\\n    color: #E7BF00; }\\n\\n.content__panel {\\n  background-color: gainsboro;\\n  height: 95%;\\n  overflow: hidden auto; }\\n\\n.content__viewer {\\n  background-color: gainsboro;\\n  height: 100%;\\n  overflow: auto; }\\n\\nul.nav {\\n  margin: 0px;\\n  padding: 0px; }\\n\\nli.link {\\n  display: inline;\\n  border: 2px solid gray;\\n  border-radius: 4px;\\n  margin: 5px 5px 0px 0px;\\n  padding: 5px;\\n  text-transform: uppercase;\\n  line-height: 12px;\\n  font-weight: 600;\\n  cursor: pointer;\\n  font-size: 12px; }\\n\\nli.link:hover {\\n  background-color: gray;\\n  color: white; }\\n\\nbutton.btn {\\n  display: inline-block;\\n  vertical-align: middle;\\n  margin: 0px 0px 0px 0px;\\n  font-size: 12px;\\n  line-height: 10px;\\n  height: 30px;\\n  border: none;\\n  border-radius: 4px;\\n  background-color: transparent;\\n  color: #505050; }\\n\\nbutton.btn:hover {\\n  color: blue; }\\n\\n.active {\\n  background-color: #222;\\n  color: white;\\n  border-color: #222 !important; }\\n\\nsplit-area {\\n  overflow: auto !important; }\\n\\n.container--editor {\\n  display: block;\\n  height: 95%;\\n  width: 100%; }\\n\\n.container__heading {\\n  display: block;\\n  text-align: center;\\n  width: 98%; }\\n\\nh2 {\\n  color: #505050;\\n  text-align: left;\\n  width: 100%;\\n  font-size: 12px;\\n  line-height: 14px;\\n  font-weight: 600;\\n  padding-left: 15px; }\\n\\nhr {\\n  border-top: 2px solid #eeeeee; }\\n\\n.container__content {\\n  display: inline-flex;\\n  width: 100%;\\n  min-height: 95%;\\n  overflow: inherit; }\\n\\n.container--toolset {\\n  display: inline-flex;\\n  width: 20%; }\\n\\n.container--procedure {\\n  display: block;\\n  width: 80%;\\n  bottom: 10px;\\n  background-color: #fafafa;\\n  padding: none; }\\n\\nhr {\\n  border-top: 2px solid #eeeeee;\\n  width: 100%; }\\n\\n/*\\r\\n$header-height: 45px;\\r\\n\\r\\n.container{\\r\\n    position: relative;\\r\\n    overflow: auto;\\r\\n    margin: 10px 10px;\\r\\n\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n    justify-content: space-around;\\r\\n        \\r\\n    h1, h2, h3, h4, h5, h6, p{\\r\\n        margin: 0px;\\r\\n        padding: 0px;\\r\\n    }\\r\\n\\r\\n    .container__header{\\r\\n        flex: 0 1 auto;\\r\\n        min-height: $header-height;\\r\\n\\r\\n        display: flex;\\r\\n        flex-direction: row;\\r\\n        justify-content: space-between;\\r\\n\\r\\n        padding: 0px 0px 0px 15px;\\r\\n\\r\\n        background-color: #3F4651;\\r\\n        color: #E7BF00;\\r\\n        \\r\\n        line-height: $header-height;\\r\\n        text-transform: uppercase;\\r\\n    \\r\\n        font-size: 18px;\\r\\n        font-weight: 600;\\r\\n        text-align: center;\\r\\n    }\\r\\n\\r\\n    .container__content{\\r\\n        flex-grow: 1;\\r\\n        height: 0px;\\r\\n        border: 2px solid #3F4651;\\r\\n        overflow: auto;\\r\\n\\r\\n        split{\\r\\n            height: 100%;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    .container__footer{\\r\\n        text-align: center;\\r\\n        font-size: 12px;\\r\\n        line-height: 18px;\\r\\n\\r\\n        background-color: #3F4651;\\r\\n        color: #E7BF00;\\r\\n    }\\r\\n}\\r\\n\\r\\n\\r\\n.content__panel{\\r\\n    height: 100%; \\r\\n    overflow: auto;\\r\\n\\r\\n    //padding: 10px 15px;\\r\\n}\\r\\n*/\\n\"","import { Component, Input, EventEmitter, Output} from '@angular/core';\r\nimport { IFlowchart } from '@models/flowchart';\r\nimport { NodeUtils, INode } from '@models/node';\r\nimport { ProcedureTypes, IFunction, IProcedure } from '@models/procedure';\r\nimport { DataService } from '@services';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'view-editor',\r\n  templateUrl: './view-editor.component.html',\r\n  styleUrls: ['./view-editor.component.scss']\r\n})\r\nexport class ViewEditorComponent {\r\n    /*\r\n    @Input() flowchart: IFlowchart;\r\n    @Input() node: INode;\r\n    */\r\n\r\n    @Output() imported = new EventEmitter();\r\n    @Output() delete_Function = new EventEmitter();\r\n    helpView: any;\r\n    copiedProd: IProcedure[];\r\n    copiedType: string;\r\n\r\n    private copyCheck = false;\r\n\r\n    constructor(private dataService: DataService, private router: Router) {\r\n    }\r\n\r\n    // add a procedure\r\n    add(data: {type: ProcedureTypes, data: IFunction}): void {\r\n      NodeUtils.add_procedure(this.dataService.node, data.type, data.data);\r\n    }\r\n\r\n    // delete a procedure\r\n    deleteChild(index: number): void {\r\n      this.dataService.node.procedure.splice(index, 1);\r\n      NodeUtils.deselect_procedure(this.dataService.node);\r\n    }\r\n\r\n    // select a procedure\r\n    selectProcedure(event, line): void {\r\n      NodeUtils.select_procedure(this.dataService.node, event.prod, event.ctrl || false);\r\n    }\r\n\r\n    // copy selected procedures\r\n    copyProd() {\r\n        const node = this.dataService.node;\r\n        if (!this.copyCheck || node.type === 'end') { return; }\r\n        console.log('copying', node.state.procedure);\r\n        this.copiedType = node.type;\r\n        this.copiedProd = node.state.procedure;\r\n    }\r\n\r\n    // cut selected procedures\r\n    cutProd(event) {\r\n        const node = this.dataService.node;\r\n        if (!this.copyCheck || document.activeElement.nodeName === 'INPUT' || node.type === 'end') { return; }\r\n        console.log('cutting', node.state.procedure);\r\n        this.copiedType = node.type;\r\n        this.copiedProd = node.state.procedure;\r\n        let parentArray;\r\n        for (const prod of this.copiedProd) {\r\n            if (prod.parent) {\r\n                parentArray = prod.parent.children;\r\n            } else { parentArray = node.procedure; }\r\n\r\n            for (let i = 0; i < parentArray.length; i++ ) {\r\n                if (parentArray[i] === prod) {\r\n                    parentArray.splice(i, 1);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        NodeUtils.deselect_procedure(node);\r\n    }\r\n\r\n    // paste copied procedures\r\n    pasteProd(event) {\r\n        const node = this.dataService.node;\r\n        if (this.copyCheck\r\n        && this.copiedProd\r\n        && this.copiedType === node.type\r\n        && document.activeElement.nodeName.toUpperCase() !== 'INPUT'\r\n        && document.activeElement.nodeName.toUpperCase() !== 'TEXTAREA') {\r\n            const pastingPlace = node.state.procedure[0];\r\n            if (pastingPlace === undefined) {\r\n            for (let i = 0; i < this.copiedProd.length; i++) {\r\n                console.log('pasting', this.copiedProd[i].ID);\r\n                NodeUtils.paste_procedure(node, this.copiedProd[i]);\r\n                node.state.procedure[0].selected = false;\r\n                node.state.procedure = [];\r\n            }\r\n            } else if (pastingPlace.children) {\r\n            for (let i = 0; i < this.copiedProd.length; i++) {\r\n                console.log('pasting', this.copiedProd[i].ID);\r\n                NodeUtils.paste_procedure(node, this.copiedProd[i]);\r\n                node.state.procedure[0].selected = false;\r\n                pastingPlace.selected = true;\r\n                node.state.procedure = [pastingPlace];\r\n            }\r\n\r\n            } else {\r\n            for (let i = this.copiedProd.length - 1; i >= 0; i --) {\r\n                console.log('pasting', this.copiedProd[i].ID);\r\n                NodeUtils.paste_procedure(node, this.copiedProd[i]);\r\n                node.state.procedure[0].selected = false;\r\n                pastingPlace.selected = true;\r\n                node.state.procedure = [pastingPlace];\r\n            }\r\n            }\r\n            // this.copiedProd = undefined;\r\n      }\r\n    }\r\n\r\n    // activate copying/cutting/pasting when the mouse hovers over the procedure list\r\n    activateCopyPaste(): void {\r\n      this.copyCheck = true;\r\n    }\r\n\r\n    // deactivate copying/cutting/pasting when the mouse exit the procedure list\r\n    deactivateCopyPaste(): void {\r\n      this.copyCheck = false;\r\n    }\r\n\r\n    // import a flowchart as function\r\n    importFunction(event) {\r\n      for (const func of event) {\r\n        this.dataService.flowchart.functions.push(func);\r\n      }\r\n    }\r\n\r\n    // delete an imported function\r\n    deleteFunction(event) {\r\n        for (let i = 0; i < this.dataService.flowchart.functions.length; i++) {\r\n            if (this.dataService.flowchart.functions[i] === event) {\r\n                this.dataService.flowchart.functions.splice(i, 1);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    updateHelpView(event) {\r\n        if (typeof(event) === 'string') {\r\n            for (const func of this.dataService.flowchart.functions) {\r\n                if (func.name === event) {\r\n                    this.helpView = func.doc;\r\n                }\r\n            }\r\n        } else {\r\n            this.helpView = event;\r\n        }\r\n    }\r\n\r\n    viewerData(): any {\r\n        const node = this.dataService.flowchart.nodes[this.dataService.flowchart.meta.selected_nodes[0]];\r\n        if (!node) { return ''; }\r\n        if (node.type === 'output') { return node.input.value; }\r\n        return node.output.value;\r\n    }\r\n    setSplit(e) { this.dataService.splitVal = e.sizes[1]; }\r\n\r\n}\r\n","import { NgModule, ModuleWithProviders } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { SharedModule } from '@shared/shared.module';\r\n\r\nimport { ViewEditorComponent } from './view-editor.component';\r\nimport { ProcedureItemComponent } from './procedure-item/procedure-item.component';\r\nimport { ToolsetComponent } from './toolset/toolset.component';\r\nimport { ParameterEditorComponent } from './parameter-editor/parameter-editor.component';\r\nimport { ProcedureInputEditorComponent } from './parameter-editor/procedure-input-editor/procedure-input-editor.component';\r\nimport { _parameterTypes} from '@modules';\r\nimport { MatSliderModule, MatIconModule, MatExpansionModule, MatButtonModule, MatSelectModule } from '@angular/material';\r\nimport { ViewEditorRoutingModule } from './view-editor-routing.module';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ViewEditorComponent,\r\n    ProcedureItemComponent,\r\n    ToolsetComponent,\r\n    ParameterEditorComponent,\r\n    ProcedureInputEditorComponent,\r\n  ],\r\n  entryComponents: [\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    SharedModule,\r\n    ViewEditorRoutingModule\r\n  ],\r\n  exports: [\r\n    ViewEditorComponent,\r\n  ],\r\n  providers: []\r\n})\r\n\r\nexport class ViewEditorModule {\r\n  constructor () { }\r\n\r\n}\r\n","module.exports = \"<!--the main line-->\\r\\n<svg:polyline \\r\\nid=\\\"main-edge\\\" \\r\\nclass = \\\"edge\\\" \\r\\n[class.selected] = \\\"edge.selected\\\"\\r\\n[attr.points] = \\\"(edge.source.parentNode.position.x + outputOffset[0]) + ',' +\\r\\n                    (edge.source.parentNode.position.y + outputOffset[1]+ 8) + ' ' +\\r\\n\\r\\n                    (edge.source.parentNode.position.x + outputOffset[0]) + ',' +\\r\\n                    (edge.source.parentNode.position.y + outputOffset[1] + 16) + ' ' +\\r\\n\\r\\n                    (edge.target.parentNode.position.x + inputOffset[0]) + ',' +\\r\\n                    (edge.target.parentNode.position.y + inputOffset[1] - 27) + ' ' +\\r\\n\\r\\n                    (edge.target.parentNode.position.x + inputOffset[0]) + ',' +\\r\\n                    (edge.target.parentNode.position.y + inputOffset[1] - 22)\\\" \\r\\n/>\\r\\n\\r\\n<!--a wider invisible line to make the wire easier to click-->\\r\\n<svg:polyline \\r\\nid=\\\"invisible-edge\\\" \\r\\nclass = \\\"inviEdge\\\" \\r\\n[attr.points] = \\\"(edge.source.parentNode.position.x + outputOffset[0]) + ',' +\\r\\n                    (edge.source.parentNode.position.y + outputOffset[1]+ 15) + ' ' +\\r\\n\\r\\n                    (edge.source.parentNode.position.x + outputOffset[0]) + ',' +\\r\\n                    (edge.source.parentNode.position.y + outputOffset[1] + 17) + ' ' +\\r\\n\\r\\n                    (edge.target.parentNode.position.x + inputOffset[0]) + ',' +\\r\\n                    (edge.target.parentNode.position.y + inputOffset[1] - 27) + ' ' +\\r\\n\\r\\n                    (edge.target.parentNode.position.x + inputOffset[0]) + ',' +\\r\\n                    (edge.target.parentNode.position.y + inputOffset[1] - 12)\\\" \\r\\n(click)='select($event)'/>\\r\\n    \\r\\n\\r\\n\"","import {Component, OnInit, Input, ViewChild, ElementRef, DoCheck, Output, EventEmitter } from '@angular/core';\r\nimport { IEdge } from '@models/edge';\r\n\r\n@Component({\r\n  selector: '[edge]',\r\n  templateUrl: './edge.component.html',\r\n  styles: [`\r\n    .edge{\r\n        fill: none;\r\n        stroke: rgb(80, 80, 80);\r\n        stroke-linecap: round;\r\n        stroke-linejoin: round;\r\n        stroke-width: 2px;\r\n        opacity: 1;\r\n        pointer-events: stroke;\r\n        marker-end: url(#arrow);\r\n    }\r\n    .inviEdge{\r\n        fill: none;\r\n        stroke: gray;\r\n        stroke-width: 30px;\r\n        opacity: 0;\r\n        pointer-events: stroke;\r\n    }\r\n    .selected{\r\n        stroke: rgb(0, 0, 150);\r\n        opacity: 1;\r\n        marker-end: url(#arrow_selected);\r\n\r\n    }\r\n  `]\r\n})\r\nexport class EdgeComponent {\r\n\r\n    @ViewChild('canvas') canvas: ElementRef;\r\n    @Input() edge: IEdge;\r\n    @Input() inputOffset;\r\n    @Input() outputOffset;\r\n\r\n    @Output() delete = new EventEmitter();\r\n    @Output() selected = new EventEmitter();\r\n\r\n    // select a wire\r\n    select(event) {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n        if (this.edge.selected) {\r\n            this.selected.emit(event.ctrlKey);\r\n        } else {\r\n            if (event.ctrlKey) { this.selected.emit('ctrl'); } else { this.selected.emit('single'); }\r\n        }\r\n    }\r\n\r\n    // delete a wire\r\n    deleteEdge() {\r\n        this.delete.emit();\r\n    }\r\n\r\n}\r\n","export enum ACTIONS {\r\n    SELECT,\r\n    DELETE,\r\n    COPY,\r\n    CONNECT,\r\n    DRAGNODE,\r\n    DROPPORT,\r\n    DRAGPORT,\r\n    PROCEDURE,\r\n}\r\n","module.exports = \"<!-- svg group for the selectable and draggable area of normal node -->\\r\\n<svg:g (click)='nodeSelect($event)' draggable=\\\"true\\\" \\r\\n(mousedown)='startDragNode($event)' \\r\\n(dblclick)='switchToProcedure($event)'\\r\\n*ngIf='node.type==\\\"\\\"'>\\r\\n\\r\\n    <!-- rectangular box with border -->\\r\\n    <rect class=\\\"node\\\" \\r\\n    width=\\\"100\\\" height=\\\"80\\\"\\r\\n    [class.node--selected]='selected'\\r\\n    [class.node--error]=\\\"node.hasError\\\"\\r\\n    [class.node--disabled]='!node.enabled'\\r\\n    [attr.x]=\\\"node.position.x\\\" \\r\\n    [attr.y]=\\\"node.position.y\\\"\\r\\n    />\\r\\n\\r\\n    <!-- node description inside the rectangular box -->\\r\\n    <svg:foreignObject [attr.x]=\\\"node.position.x\\\" [attr.y]=\\\"node.position.y + 3\\\" \\r\\n    width=\\\"100\\\" height = \\\"80\\\"\\r\\n    (mousedown)='focusText($event)'>\\r\\n        <xhtml:div class='textdiv'>\\r\\n            <xhtml:textarea \\r\\n                id={{node.id}}\\r\\n                autocomplete=off \\r\\n                [(ngModel)]='node.name'\\r\\n                [class.selected]='selected'\\r\\n                [class.disabled]='!node.enabled'\\r\\n                title={{node.name}}\\r\\n                style=\\\"font-weight: 600;\\\"\\r\\n                placeholder='Description of Node'/>  \\r\\n        </xhtml:div>\\r\\n    </svg:foreignObject>\\r\\n</svg:g>\\r\\n\\r\\n<!-- svg group for the selectable and draggable area of start node -->\\r\\n<svg:g (click)='nodeSelect($event)' draggable=\\\"true\\\" \\r\\n(mousedown)='startDragNode($event)' \\r\\n(dblclick)='switchToProcedure($event)'\\r\\n*ngIf='node.type==\\\"start\\\"'>\\r\\n\\r\\n    <!-- ellipse with border -->\\r\\n    <ellipse class=\\\"node\\\" \\r\\n        [class.node--selected]='selected'\\r\\n        [class.node--error]=\\\"node.hasError\\\"\\r\\n        [attr.cx]=\\\"node.position.x + inputOffset[0]\\\" \\r\\n        [attr.cy]=\\\"node.position.y + (inputOffset[1]+outputOffset[1])/2 + 10\\\"\\r\\n        [attr.rx]=\\\"40\\\"\\r\\n        [attr.ry]=\\\"30\\\"\\r\\n        />\\r\\n\\r\\n    <!-- node description inside the ellipse -->\\r\\n    <svg:foreignObject \\r\\n    [attr.x]=\\\"node.position.x\\\" [attr.y]=\\\"node.position.y + 38\\\" \\r\\n    width=\\\"100\\\" height = \\\"40\\\">\\r\\n        <xhtml:div class='textdiv'>\\r\\n            <xhtml:textarea \\r\\n                id={{node.id}}\\r\\n                class='textarea_startend'\\r\\n                autocomplete=off \\r\\n                [class.selected]='selected'\\r\\n                [(ngModel)]='node.name'/>  \\r\\n        </xhtml:div>\\r\\n    </svg:foreignObject>\\r\\n</svg:g>\\r\\n\\r\\n<!-- svg group for the selectable and draggable area of end node -->\\r\\n<svg:g (click)='nodeSelect($event)' draggable=\\\"true\\\" \\r\\n(mousedown)='startDragNode($event)' \\r\\n(dblclick)='switchToProcedure($event)'\\r\\n*ngIf='node.type==\\\"end\\\"'>\\r\\n\\r\\n    <!-- ellipse with border -->\\r\\n    <ellipse class=\\\"node\\\" \\r\\n        [class.node--selected]='selected'\\r\\n        [class.node--error]=\\\"node.hasError\\\"\\r\\n        [class.node--disabled]='!node.enabled'\\r\\n        [attr.cx]=\\\"node.position.x + inputOffset[0]\\\" \\r\\n        [attr.cy]=\\\"node.position.y + (inputOffset[1]+outputOffset[1])/2 - 10\\\"\\r\\n        [attr.rx]=\\\"40\\\"\\r\\n        [attr.ry]=\\\"30\\\"\\r\\n        />\\r\\n\\r\\n    <!-- node description inside the ellipse -->\\r\\n    <svg:foreignObject [attr.x]=\\\"node.position.x\\\" [attr.y]=\\\"node.position.y + 18\\\" \\r\\n    width=\\\"100\\\" height = \\\"40\\\">\\r\\n        <xhtml:div class='textdiv'>\\r\\n            <xhtml:textarea \\r\\n                id={{node.id}}\\r\\n                class='textarea_startend'\\r\\n                autocomplete=off \\r\\n                [class.selected]='selected'\\r\\n                [class.disabled]='!node.enabled'\\r\\n                [(ngModel)]='node.name'/>  \\r\\n        </xhtml:div>\\r\\n    </svg:foreignObject>\\r\\n</svg:g>\\r\\n\\r\\n\\r\\n\\r\\n<!-- circles as draggable input/output ports of the node -->\\r\\n<svg:circle\\r\\nr=3\\r\\n[attr.cx]=\\\"node.position.x + inputOffset[0]\\\" \\r\\n[attr.cy]=\\\"node.position.y + inputOffset[1]\\\"\\r\\n*ngIf=\\\"inputDraggable()\\\" \\r\\nclass='inputPort'\\r\\nid = 'node.input.id'\\r\\n(mousedown)='startDragPort($event, \\\"input\\\")'/>\\r\\n\\r\\n<svg:circle *ngIf=\\\"outputDraggable()\\\" \\r\\nclass='outputPort'\\r\\nid = 'node.output.id'\\r\\n(mousedown)='startDragPort($event, \\\"output\\\")' \\r\\n[attr.cx]=\\\"node.position.x + outputOffset[0]\\\" \\r\\n[attr.cy]=\\\"node.position.y + outputOffset[1]\\\" \\r\\npointer-events=\\\"all\\\"\\r\\nr=3\\r\\nfill=\\\"black\\\"/>\\r\\n\\r\\n\"","module.exports = \"/*\\r\\n$color-main: #2D4885;\\r\\n$color-accent: #50ABB9;\\r\\n$color-muted: #88D4DD;\\r\\n$color-text-accent: #DC772F;\\r\\n*/\\n.node {\\n  fill: #fafafa;\\n  stroke-width: 2px;\\n  stroke: #505050;\\n  stroke-opacity: 1;\\n  stroke-linecap: round;\\n  stroke-linejoin: round; }\\n.node.node--disabled {\\n    stroke-opacity: 0.5;\\n    fill-opacity: 0.5; }\\n.node.node--selected {\\n    stroke: #000096; }\\n.node.node--error {\\n    stroke: red; }\\n.textdiv {\\n  text-align: center;\\n  width: 94px; }\\n.foreignObject {\\n  width: 100;\\n  height: 80; }\\ntextarea {\\n  font-family: sans-serif;\\n  background: transparent;\\n  display: inline-block;\\n  border: none;\\n  font-size: 14px;\\n  width: 100%;\\n  height: 70px;\\n  font-weight: 600;\\n  text-align: center;\\n  vertical-align: middle;\\n  resize: none;\\n  overflow: hidden;\\n  color: #505050; }\\ntextarea.selected {\\n    color: #000096; }\\ntextarea.disabled {\\n    opacity: 0.5; }\\n.textarea_startend {\\n  font-size: 14px;\\n  font-weight: 600;\\n  color: #505050;\\n  height: 20px;\\n  pointer-events: none; }\\n.inputPort {\\n  stroke: transparent;\\n  stroke-width: 20px;\\n  pointer-events: all;\\n  fill: #505050; }\\n.outputPort {\\n  stroke: transparent;\\n  stroke-width: 20px;\\n  pointer-events: all;\\n  fill: #505050; }\\n\"","import { Component, Input, Output, EventEmitter, HostListener } from '@angular/core';\r\nimport { INode } from '@models/node';\r\nimport { ACTIONS } from './node.actions';\r\n\r\n\r\n\r\n@Component({\r\n  selector: '[node]',\r\n  templateUrl: './node.component.html',\r\n  styleUrls: ['./node.component.scss']\r\n})\r\nexport class NodeComponent {\r\n\r\n    @Input() node: INode;\r\n    @Input() selected: boolean;\r\n    @Input() inputOffset; // position offset of the input port as compared to the position of the node in svg\r\n    @Input() outputOffset; // position offset of the output port as compared to the position of the node in svg\r\n\r\n\r\n    @Output() action = new EventEmitter();\r\n    startType: string;\r\n    last = [0, 0];\r\n    isDown = false;\r\n\r\n    /*\r\n    update the position of the node\r\n    */\r\n    updatePosition(position) {\r\n        this.node.position = position;\r\n    }\r\n\r\n    /*\r\n    select a node\r\n    */\r\n    nodeSelect(event) {\r\n        this.action.emit({ action: ACTIONS.SELECT });\r\n    }\r\n\r\n\r\n    /*\r\n    check if the input port of the node is draggable --> false only for start node, true otherwise\r\n    */\r\n    inputDraggable(): boolean {\r\n        return !(this.node.type === 'start');\r\n    }\r\n\r\n    /*\r\n    check if the output port of the node is draggable --> false only for end node, true otherwise\r\n    */\r\n    outputDraggable(): boolean {\r\n        return !(this.node.type === 'end');\r\n    }\r\n\r\n    /*\r\n    initiate dragging node when mousedown inside the node group\r\n    */\r\n    startDragNode(event: MouseEvent) {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n        this.action.emit({ action: ACTIONS.DRAGNODE, data: event});\r\n    }\r\n\r\n    /*\r\n    initiate dragging port when mousedown inside the port (inside the invisible stroke of the port)\r\n    */\r\n    startDragPort(event: MouseEvent, portType) {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n        let pos = this.node.position;\r\n        let data: any;\r\n        if (portType === 'input') {\r\n            data = this.node.input;\r\n            pos = [pos.x + this.inputOffset[0], pos.y + this.inputOffset[1]];\r\n        } else {\r\n            data = this.node.output;\r\n            pos = [pos.x + this.outputOffset[0], pos.y + this.outputOffset[1]];\r\n        }\r\n        this.action.emit({ action: ACTIONS.DRAGPORT, data: data, position: pos, type: portType});\r\n    }\r\n\r\n    /*\r\n    focus on the description of the node when mouse down inside the node\r\n    ** no stopPropagation to allow propagation to startDragNode --> node can still be dragged\r\n    */\r\n    focusText(event: MouseEvent) {\r\n        document.getElementById(this.node.id).focus();\r\n    }\r\n\r\n    /*\r\n    switch the viewchild of the appModule to the node's procedure view when double-click on the node\r\n    */\r\n    switchToProcedure(event: Event) {\r\n        this.action.emit({action: ACTIONS.PROCEDURE});\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { ViewFlowchartComponent } from './view-flowchart.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: ViewFlowchartComponent,\r\n    children: [\r\n      // {\r\n      //   path: '',\r\n      //   loadChildren: '../../mobius-viewer/mobius-viewer.module#MobiusViewerModule',\r\n      // }\r\n    ]\r\n  }\r\n];\r\n\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class ViewFlowchartRoutingModule { }\r\n","module.exports = \"<div class='container'>\\r\\n        <as-split direction=\\\"horizontal\\\" (dragEnd)='setSplit($event)'>\\r\\n            <as-split-area [size]=\\\"100 - dataService.splitVal\\\">\\r\\n                <div class='container__header'>\\r\\n    \\r\\n                    <!-- top left tab menu  -->\\r\\n                    <div class=\\\"tab\\\">\\r\\n                        <button class='btn-tab' [class.active]='router.url==\\\"/gallery\\\"' [routerLink]=\\\"'/gallery'\\\">Gallery</button>\\r\\n                        <button class='btn-tab' [class.active]='router.url==\\\"/dashboard\\\"' [routerLink]=\\\"'/dashboard'\\\">Dashboard</button>\\r\\n                        <button class='btn-tab' [class.active]='router.url==\\\"/flowchart\\\"' [routerLink]=\\\"'/flowchart'\\\">Flowchart</button>\\r\\n                        <!--\\r\\n                        <button class='btn' [class.active]='false' (click)='updateView(\\\"editor\\\")'>Procedures</button>\\r\\n                        -->\\r\\n                    </div>\\r\\n    \\r\\n                    <!-- hidden components (new file, save file, loaf file) for the dropdown menu-->\\r\\n                    <div style=\\\"display: none;\\\">\\r\\n                        <file-new></file-new>\\r\\n                        <file-save></file-save>\\r\\n                        <file-load></file-load>        \\r\\n                    </div>\\r\\n    \\r\\n                    <!-- top right dropdown menu -->\\r\\n                    <div class=\\\"dropmenu\\\">\\r\\n                        <!-- execute button -->\\r\\n                        <div>\\r\\n                            <execute></execute>\\r\\n                        </div>\\r\\n                        <!-- dropdown menu for new file, save file, loaf file-->\\r\\n                        <div>\\r\\n                            <button class='btn' mat-icon-button [matMenuTriggerFor]=\\\"menu\\\">\\r\\n                                <mat-icon>more_vert</mat-icon>\\r\\n                            </button>\\r\\n                            <mat-menu #menu=\\\"matMenu\\\">\\r\\n                                <!--\\r\\n                                    \\r\\n                                    onclick=\\\"document.getElementById('file-input').click(); \\\"\\r\\n                                -->\\r\\n                                <button  mat-menu-item onclick=\\\"document.getElementById('newfile').click();\\\"\\r\\n                                title=\\\"Create New Flowchart\\\">\\r\\n                                    <mat-icon>rotate_left</mat-icon>\\r\\n                                    <span>New File</span>\\r\\n                                </button>\\r\\n                                <button mat-menu-item onclick=\\\"document.getElementById('savefile').click();\\\"\\r\\n                                title=\\\"Save Flowchart File to Computer\\\">\\r\\n                                    <mat-icon>save_alt</mat-icon>\\r\\n                                    <span>Save File</span>\\r\\n                                </button>\\r\\n                                <button mat-menu-item onclick=\\\"document.getElementById('file-input').click();\\\"\\r\\n                                title=\\\"Load Flowchart File from Computer\\\">\\r\\n                                    <mat-icon>launch</mat-icon>\\r\\n                                    <span>Load File</span>\\r\\n                                </button>\\r\\n                            </mat-menu>\\r\\n                        </div>\\r\\n                        \\r\\n                    </div>\\r\\n                </div>\\r\\n                <!-- viewchild content -->\\r\\n                <div class='content__panel'>\\r\\n                    <div id = 'flowchart-main-container' class='flowchart-container'>\\r\\n                            <!--\\r\\n                            -->\\r\\n                        \\r\\n                            <!-- svg component -->\\r\\n                            <svg id=\\\"svg-canvas\\\" class = \\\"svgCanvas\\\" \\r\\n                            [attr.viewBox]=\\\"viewbox\\\"\\r\\n                            (mouseenter)='activateKeyEvent()'\\r\\n                            (mouseleave)='deactivateKeyEvent($event)'\\r\\n                            (mousedown)='panStart($event)'\\r\\n                            (mousemove)='handleMouseMove($event)'  \\r\\n                            (mouseup)='handleMouseUp($event)'\\r\\n                            (wheel)='scale($event)'\\r\\n                            >\\r\\n                                <!-- definitions for svg: grid patterns, arrow head for connecting wire-->\\r\\n                                <defs>\\r\\n                                    <!-- grid pattern -->\\r\\n                                    <pattern id=\\\"smallGrid\\\" width=\\\"20\\\" height=\\\"20\\\" patternUnits=\\\"userSpaceOnUse\\\">\\r\\n                                        <path d=\\\"M 20 0 L 0 0 0 20\\\" fill=\\\"none\\\" stroke=\\\"gray\\\" stroke-width=\\\"0.5\\\"/>\\r\\n                                    </pattern>\\r\\n                                    <pattern id=\\\"grid\\\" width=\\\"100\\\" height=\\\"100\\\" patternUnits=\\\"userSpaceOnUse\\\">\\r\\n                                        <rect width=\\\"100\\\" height=\\\"100\\\" fill=\\\"url(#smallGrid)\\\"/>\\r\\n                                        <path d=\\\"M 100 0 L 0 0 0 100\\\" fill=\\\"none\\\" stroke=\\\"gray\\\" stroke-width=\\\"1\\\"/>\\r\\n                                    </pattern>\\r\\n                        \\r\\n                                    <!-- arrow head -->\\r\\n                                    <marker id=\\\"arrow\\\" markerWidth=\\\"30\\\" markerHeight=\\\"30\\\" refX=\\\"0\\\" refY=\\\"4\\\" orient=\\\"auto\\\" markerUnits=\\\"strokeWidth\\\" viewBox=\\\"0 0 40 40\\\">\\r\\n                                        <path d=\\\"M0,0 L0,8 L9,4 z\\\" stroke=\\\"rgb(80, 80, 80)\\\" fill=\\\"transparent\\\" />\\r\\n                                    </marker>\\r\\n                                    <marker id=\\\"arrow_selected\\\" markerWidth=\\\"30\\\" markerHeight=\\\"30\\\" refX=\\\"0\\\" refY=\\\"4\\\" orient=\\\"auto\\\" markerUnits=\\\"strokeWidth\\\" viewBox=\\\"0 0 40 40\\\">\\r\\n                                        <path d=\\\"M0,0 L0,8 L9,4 z\\\" stroke=\\\"rgb(0, 0, 150)\\\" fill=\\\"transparent\\\"  />\\r\\n                                    </marker>\\r\\n                                </defs>\\r\\n                        \\r\\n                                <!-- svg frame-->\\r\\n                                <rect width=\\\"100%\\\" height=\\\"100%\\\" fill=\\\"url(#grid)\\\" />\\r\\n                                            \\r\\n                        \\r\\n                                <!-- wires => edge.component -->\\r\\n                                <g edge *ngFor=\\\"let edge of dataService.flowchart.edges; let edge_index = index\\\" \\r\\n                                [edge]='edge'\\r\\n                                [inputOffset]='inputOffset'\\r\\n                                [outputOffset]='outputOffset'\\r\\n                                (selected)='selectEdge($event, edge_index)'\\r\\n                                />\\r\\n                        \\r\\n                                <!-- temporary wire while dragging port, default position to <(0,0),(0,0)>, modified when a port is being dragged -->\\r\\n                                <line id=\\\"temporary-wire\\\" class=\\\"temp-wire\\\" x1=\\\"0\\\" y1='0' x2='0' y2='0'></line>\\r\\n                        \\r\\n                                <!-- nodes => node.component -->\\r\\n                                <g node *ngFor=\\\"let node of dataService.flowchart.nodes; let node_index = index\\\" \\r\\n                                id='flw_node_{{node_index}}'\\r\\n                                [node]='node' \\r\\n                                [selected]='isSelected(node_index)'\\r\\n                                [inputOffset]='inputOffset'\\r\\n                                [outputOffset]='outputOffset'\\r\\n                                (action)='nodeAction($event, node_index)'\\r\\n                                />\\r\\n                            </svg>\\r\\n                        \\r\\n                            <!-- 3 top left buttons of the svg: add Node, delete Node and delete Wire -->\\r\\n                            <div class='button-row'>\\r\\n                                <button mat-icon-button disableRipple='true' (click)='addNode()' title=\\\"Add Node\\\">\\r\\n                                <mat-icon>add</mat-icon>\\r\\n                                </button>\\r\\n                                <button mat-icon-button disableRipple='true' (click)='deleteSelectedNodes()' title=\\\"Delete Selected Node\\\">\\r\\n                                <mat-icon>remove</mat-icon>\\r\\n                                </button>\\r\\n                                <button mat-icon-button disableRipple='true' (click)='deleteSelectedEdges()' title=\\\"Delete Selected Wires\\\">\\r\\n                                <mat-icon>link_off</mat-icon>\\r\\n                                </button>\\r\\n                            </div>\\r\\n                        \\r\\n                            <!-- focus on flowchart button on the top right of the svg -->\\r\\n                            <button id='zoomToFit' class='resetViewer-button' mat-icon-button disableRipple='true' (click)='focusFlowchart()' title=\\\"Zoom to Fit\\\">\\r\\n                                <mat-icon>control_camera</mat-icon>\\r\\n                            </button>\\r\\n                            \\r\\n                        \\r\\n                        </div>\\r\\n                            \\r\\n                </div>\\r\\n            </as-split-area>\\r\\n    \\r\\n            <as-split-area [size]=\\\"dataService.splitVal\\\">\\r\\n                <!-- data viewers panel -->\\r\\n                <div class='content__viewer' >\\r\\n                    <model-viewers-container [data]='viewerData()' [helpView]='helpView'></model-viewers-container>\\r\\n                </div>\\r\\n            </as-split-area>\\r\\n            \\r\\n        </as-split>\\r\\n    \\r\\n    </div>\\r\\n    \\r\\n\\r\\n\\r\\n\\r\\n\"","module.exports = \".reset {\\n  margin: 0px;\\n  padding: 0px; }\\n\\n.default {\\n  font-size: 12px;\\n  color: #8AA8C0;\\n  line-height: 150px;\\n  text-align: center; }\\n\\n.viewer {\\n  /*     width: 100%; \\r\\noverflow: auto;\\r\\n\\r\\npadding: 0px;\\r\\nmargin: 0px;\\r\\n\\r\\n.header{\\r\\n\\r\\n    display: flex; \\r\\n    flex-direction: row; \\r\\n    justify-content: space-between;\\r\\n\\r\\n    position: relative;\\r\\n    font-size: 14px; \\r\\n    font-weight: 600; \\r\\n    line-height: $header-height;\\r\\n    text-transform: uppercase;\\r\\n    letter-spacing: 1.5px;\\r\\n    height: $header-height;\\r\\n\\r\\n    color: #ADADAD;\\r\\n\\r\\n    .btn-group{\\r\\n        height: $header-height; \\r\\n\\r\\n        button{\\r\\n            width: 0.9*$header-height; \\r\\n            height: 0.9*$header-height; \\r\\n            margin: 0px;\\r\\n            border: 1px solid #B4B1B1;\\r\\n            box-shadow: none;\\r\\n\\r\\n            &:focus{\\r\\n                \\r\\n            }\\r\\n        }\\r\\n        \\r\\n    }\\r\\n\\r\\n}\\r\\n\\r\\n.container{\\r\\n}\\r\\n\\r\\nbutton{\\r\\n    &:focus{\\r\\n        \\r\\n    }\\r\\n} */ }\\n\\n.viewer .container {\\n    display: flex;\\n    flex-direction: row;\\n    height: 100%; }\\n\\n.viewer .container .sidebar {\\n      z-index: 100; }\\n\\n.viewer .container .view-container {\\n      box-sizing: border-box;\\n      height: 100%;\\n      width: 100%;\\n      padding-bottom: 30px;\\n      overflow: auto; }\\n\\n.container {\\n  position: relative;\\n  overflow: auto;\\n  height: 100%;\\n  width: 100%;\\n  display: flex;\\n  flex-direction: column;\\n  justify-content: space-around; }\\n\\n.container h1, .container h2, .container h3, .container h4, .container h5, .container h6, .container p {\\n    margin: 0px;\\n    padding: 0px; }\\n\\n.container .container__header {\\n    flex: 0 1 auto;\\n    min-height: 35px;\\n    display: flex;\\n    flex-direction: row;\\n    justify-content: space-between;\\n    padding: 0px 0px 0px 15px;\\n    background-color: #ccc;\\n    border-bottom: 3px solid #eeeeee;\\n    line-height: 35px;\\n    font-size: 18px;\\n    font-weight: 600;\\n    text-align: center;\\n    /* tab styling */\\n    /* dropdown menu styling */ }\\n\\n.container .container__header .tab {\\n      border: 2px;\\n      overflow: hidden;\\n      background-color: #ccc; }\\n\\n.container .container__header .tab button {\\n      display: inline-block;\\n      vertical-align: bottom;\\n      background-color: inherit;\\n      color: #505050;\\n      border: none;\\n      outline: none;\\n      cursor: pointer;\\n      padding: 8px 10px;\\n      transition: 0.3s;\\n      font-size: 14px; }\\n\\n.container .container__header .tab button:hover {\\n      color: blue; }\\n\\n.container .container__header .tab button.active {\\n      background-color: #ccc;\\n      color: #000096;\\n      font-weight: 600;\\n      border-color: #222 !important; }\\n\\n.container .container__header .dropmenu {\\n      display: inline-flex; }\\n\\n.container .container__content {\\n    flex-grow: 1;\\n    height: 0px;\\n    border: 2px solid #3F4651;\\n    overflow: auto; }\\n\\n.container .container__footer {\\n    text-align: center;\\n    font-size: 12px;\\n    line-height: 18px;\\n    background-color: #3F4651;\\n    color: #E7BF00; }\\n\\n.content__panel {\\n  background-color: gainsboro;\\n  height: 95%;\\n  overflow: hidden auto; }\\n\\n.content__viewer {\\n  background-color: gainsboro;\\n  height: 100%;\\n  overflow: auto; }\\n\\nul.nav {\\n  margin: 0px;\\n  padding: 0px; }\\n\\nli.link {\\n  display: inline;\\n  border: 2px solid gray;\\n  border-radius: 4px;\\n  margin: 5px 5px 0px 0px;\\n  padding: 5px;\\n  text-transform: uppercase;\\n  line-height: 12px;\\n  font-weight: 600;\\n  cursor: pointer;\\n  font-size: 12px; }\\n\\nli.link:hover {\\n  background-color: gray;\\n  color: white; }\\n\\nbutton.btn {\\n  display: inline-block;\\n  vertical-align: middle;\\n  margin: 0px 0px 0px 0px;\\n  font-size: 12px;\\n  line-height: 10px;\\n  height: 30px;\\n  border: none;\\n  border-radius: 4px;\\n  background-color: transparent;\\n  color: #505050; }\\n\\nbutton.btn:hover {\\n  color: blue; }\\n\\n.active {\\n  background-color: #222;\\n  color: white;\\n  border-color: #222 !important; }\\n\\n.flowchart-container {\\n  position: relative;\\n  width: 100%;\\n  height: 100%;\\n  overflow: hidden; }\\n\\n.flowchart-container .svgCanvas .temp-wire {\\n    stroke: #505050;\\n    stroke-width: 2px;\\n    stroke-dasharray: 10 15;\\n    opacity: 0.5; }\\n\\nsplit-area {\\n  overflow: auto !important; }\\n\\nas-split-area {\\n  overflow: hidden !important; }\\n\\ninput {\\n  border: none; }\\n\\ninput:focus {\\n  border-bottom: 1px dashed gray; }\\n\\n#flowchart__name {\\n  margin: 0 auto;\\n  font-size: 14px;\\n  line-height: 28px;\\n  font-weight: bold;\\n  color: #8AA8C0; }\\n\\n.button-row {\\n  position: absolute;\\n  top: 0px;\\n  left: 10px; }\\n\\n.button-row button {\\n    color: #505050;\\n    width: 28px; }\\n\\n.resetViewer-button {\\n  position: absolute;\\n  top: 0px;\\n  right: 0px;\\n  color: #505050; }\\n\\n.viewer {\\n  position: relative;\\n  height: 100%;\\n  width: 100%;\\n  display: flex;\\n  flex-direction: column;\\n  background-image: repeating-linear-gradient(0deg, transparent, transparent 70px, #F1F1F1 70px, #F1F1F1 71px), repeating-linear-gradient(-90deg, transparent, transparent 70px, #F1F1F1 70px, #F1F1F1 71px);\\n  background-size: 71px 71px;\\n  background-color: white;\\n  box-sizing: border-box;\\n  height: 100%;\\n  width: 100%;\\n  padding-bottom: 35px; }\\n\\n.viewer .container {\\n    position: absolute;\\n    height: 100%;\\n    overflow: hidden; }\\n\\n.viewer .container .disabled {\\n      color: #8AA8C0; }\\n\\n.viewer .container .disabled:hover {\\n        color: #8AA8C0 !important; }\\n\\n.viewer .container .sidebar {\\n      font-size: 12px;\\n      background-color: #F1F1F1;\\n      color: #395D73;\\n      white-space: nowrap;\\n      overflow-x: hidden !important; }\\n\\n.viewer .container .sidebar section {\\n        padding-left: 15px;\\n        padding-bottom: 5px;\\n        padding-top: 5px;\\n        border-bottom: 1px solid #8AA8C0; }\\n\\n.viewer .container .sidebar section div {\\n          cursor: pointer; }\\n\\n.viewer .container .sidebar section div:hover {\\n            color: #F0BFA0; }\\n\\n.viewer .content-wrapper {\\n    position: relative;\\n    height: 100%;\\n    width: 100%;\\n    -webkit-transform-origin: top left;\\n            transform-origin: top left; }\\n\\n.viewer .info-container {\\n    padding: 0px 30px;\\n    display: flex;\\n    flex-direction: row;\\n    justify-content: space-between; }\\n\\n.viewer .info-container .info {\\n      display: flex;\\n      flex-direction: column; }\\n\\n.viewer .info-container .info .label {\\n        font-size: 12px;\\n        font-weight: 100;\\n        color: #F07A79; }\\n\\n.viewer .info-container .info .value {\\n        color: #395D73;\\n        font-size: 11px;\\n        font-weight: 600; }\\n\\n.viewer .info-container .info .action {\\n        cursor: pointer;\\n        font-size: 11px;\\n        color: #8AA8C0; }\\n\\n.viewer .graph-container {\\n    position: absolute;\\n    height: 100%;\\n    width: 100%;\\n    -webkit-transform-origin: top left;\\n            transform-origin: top left; }\\n\\n.viewer .graph-container #graph-edges {\\n      background-color: transparent;\\n      z-index: 1000; }\\n\\n.viewer .graph-container #graph-edges #temporary-edge .hidden {\\n        display: none; }\\n\\n.viewer .graph-container #graph-nodes {\\n      background-color: transparent;\\n      overflow: hidden;\\n      z-index: 1000; }\\n\\n.viewer .info-container {\\n    position: absolute;\\n    right: 0;\\n    bottom: 0; }\\n\\n.viewer .info-container .label, .viewer .info-container .value {\\n      margin-right: 5px;\\n      font-weight: normal !important; }\\n\\n.viewer .node-container {\\n    position: relative; }\\n\\n.viewer .node-container .node {\\n      position: absolute;\\n      -webkit-transform-origin: top left;\\n              transform-origin: top left;\\n      z-index: 3;\\n      margin: 0px;\\n      color: #395D73; }\\n\\n.viewer .node-container .node.hidden {\\n        display: none; }\\n\\n.viewer .node-container .node .btn-container {\\n        position: absolute;\\n        right: -30px;\\n        display: flex;\\n        flex-direction: column;\\n        justify-content: space-between;\\n        height: 100px; }\\n\\n.viewer .node-container .node .btn-container .btn-group {\\n          position: relative;\\n          display: flex;\\n          flex-direction: column;\\n          justify-content: center;\\n          background: none; }\\n\\n.viewer .node-container .node .btn-container .btn-group .action-button {\\n            position: relative;\\n            width: 25px;\\n            height: 24px;\\n            cursor: pointer;\\n            font-size: 9px;\\n            text-align: center; }\\n\\n.viewer .node-container .node .btn-container .btn-group .action-button .material-icons {\\n              font-size: 18px;\\n              line-height: 24px;\\n              color: #8AA8C0; }\\n\\n.viewer .node-container .node .btn-container .btn-group .action-button:hover {\\n              color: white; }\\n\\n.viewer .node-container .node .btn-container .btn-group .action-button:hover .mat-icon {\\n                color: #F0BFA0; }\\n\\n.viewer .node-container .node .node-body {\\n        display: flex;\\n        flex-direction: column;\\n        justify-content: center;\\n        position: relative;\\n        min-height: 30px;\\n        min-width: 70px;\\n        width: auto;\\n        border: 1px solid #395D73;\\n        background-color: rgba(255, 255, 255, 0.7);\\n        cursor: move; }\\n\\n.viewer .node-container .node .node-body.disabled {\\n          opacity: 0.4; }\\n\\n.viewer .node-container .node .node-body.selected {\\n          border-color: green; }\\n\\n.viewer .node-container .node .node-body.library {\\n          border-color: #395D73;\\n          border-style: solid; }\\n\\n.viewer .node-container .node .node-body.error {\\n          background-color: #E94858; }\\n\\n.viewer .node-container .node .node-body.function {\\n          background-color: yellow;\\n          border: 1px dashed green; }\\n\\n.viewer .node-container .node .node-body .node-name {\\n          font-family: sans-serif;\\n          font-size: 12px;\\n          border-bottom: 1px solid #395D73;\\n          text-align: center;\\n          background-color: #F1F1F1; }\\n\\n.viewer .node-container .node .node-body .node-name input {\\n            background-color: inherit;\\n            border: 0px;\\n            color: #395D73;\\n            text-align: center; }\\n\\n.viewer .node-container .node .node-body .node-name.selected {\\n            background-color: #8AA8C0; }\\n\\n.viewer .node-container .node .node-body .node-name.selected input {\\n              color: white;\\n              font-weight: bold; }\\n\\n.viewer .node-container .node .node-body .node-name.selected input:focus {\\n                color: #395D73;\\n                background-color: #F0BFA0; }\\n\\n.viewer .node-container .node .node-body .port-container {\\n          display: flex;\\n          flex-direction: column;\\n          margin-top: 10px;\\n          margin-bottom: 10px; }\\n\\n.viewer .node-container .node .node-body .port-container .divider {\\n            height: 2px;\\n            width: 100%;\\n            background-color: #8AA8C0; }\\n\\n.viewer .node-container .node .node-body .port-container .port {\\n            display: flex;\\n            flex-direction: row;\\n            margin: 5px 0px; }\\n\\n.viewer .node-container .node .node-body .port-container .port.hidden {\\n              display: none; }\\n\\n.viewer .node-container .node .node-body .port-container .port .port-grip {\\n              width: 15px;\\n              height: 15px;\\n              border-radius: 50%;\\n              background-color: #F1F1F1;\\n              border: 1px solid #395D73;\\n              cursor: pointer; }\\n\\n.viewer .node-container .node .node-body .port-container .port .port-grip.isFunction {\\n                border-style: dashed;\\n                background-color: gray;\\n                border-radius: 0px; }\\n\\n.viewer .node-container .node .node-body .port-container .port .port-grip.selected {\\n                border: 2px solid #8AA8C0;\\n                background-color: #F0BFA0; }\\n\\n.viewer .node-container .node .node-body .port-container .port .port-grip:hover {\\n                background-color: #F0BFA0; }\\n\\n.viewer .node-container .node .node-body .port-container .port .port-name {\\n              font-size: 12px;\\n              margin: 0px 5px; }\\n\\n.viewer .node-container .node .node-body .port-container .port .port-name.isFunction {\\n                color: black;\\n                font-size: 9.6px; }\\n\\n.viewer .node-container .node .node-body .port-container .port.input {\\n              justify-content: flex-start;\\n              margin-left: -7.5px; }\\n\\n.viewer .node-container .node .node-body .port-container .port.output {\\n              justify-content: flex-end;\\n              margin-right: -7.5px; }\\n\\n.viewer .node-container .node:active {\\n        cursor: none; }\\n\"","import { Component, Input, Output, EventEmitter, OnInit, AfterViewInit } from '@angular/core';\r\nimport { NgClass } from '@angular/common';\r\n\r\n// todo: make internal to flowchart\r\nimport { IFlowchart } from '@models/flowchart';\r\nimport { NodeUtils, INode } from '@models/node';\r\nimport { IEdge } from '@models/edge';\r\n\r\nimport { ACTIONS } from './node/node.actions';\r\nimport * as circularJSON from 'circular-json';\r\nimport { fromEvent } from 'rxjs';\r\nimport { DataService } from '@services';\r\n\r\n// import size of the canvas\r\nimport { canvasSize } from '@models/flowchart';\r\nimport { Router } from '@angular/router';\r\n\r\ndeclare const InstallTrigger: any;\r\n\r\n\r\n@Component({\r\n    selector: 'view-flowchart',\r\n    templateUrl: './view-flowchart.component.html',\r\n    styleUrls: ['./view-flowchart.component.scss']\r\n})\r\nexport class ViewFlowchartComponent implements OnInit, AfterViewInit {\r\n\r\n    @Output() switch = new EventEmitter();\r\n\r\n    constructor(private dataService: DataService, private router: Router) {\r\n    }\r\n\r\n    viewbox = `0 0 ${canvasSize} ${canvasSize}`;\r\n\r\n    // general variable for mouse events\r\n    private isDown: number;\r\n    private startCoords = [];\r\n    private canvas: any;\r\n    private element: any;\r\n\r\n    // variable for flowchart zooming\r\n    private mousePos = [0, 0];\r\n    private zoom = 10;\r\n    private minZoom = 5;\r\n    private maxZoom = 25;\r\n    private zoomFactor = 1;\r\n\r\n    // variable for edge\r\n    private edge: IEdge = { source: undefined, target: undefined, selected: false };\r\n    private selectedEdge = [];\r\n    private startType: string;\r\n\r\n    // variable for copied node\r\n    private copied: string;\r\n    private copySub: any;\r\n    private pasteSub: any;\r\n    private keydownSub: any;\r\n\r\n    // listener for events, only activated when the mouse is hovering over the svg component\r\n    private keydownListener = fromEvent(document, 'keydown');\r\n    private copyListener = fromEvent(document, 'copy');\r\n    private pasteListener = fromEvent(document, 'paste');\r\n    private listenerActive = false;\r\n\r\n    // position of the current canvas view relative to the top left of the page\r\n    private offset;\r\n\r\n    // constants for offset positions of input/output port relative to the node's position\r\n    inputOffset = [50, -8];\r\n    outputOffset = [50, 88];\r\n\r\n    static enableNode(node: INode) {\r\n        for (const edge of node.input.edges) {\r\n            if (!edge.source.parentNode.enabled) { return; }\r\n        }\r\n        node.enabled = true;\r\n        for (const edge of node.output.edges) {\r\n            ViewFlowchartComponent.enableNode(edge.target.parentNode);\r\n        }\r\n    }\r\n\r\n\r\n    static disableNode(node: INode) {\r\n        node.enabled = false;\r\n        for (const edge of node.output.edges) {\r\n            ViewFlowchartComponent.disableNode(edge.target.parentNode);\r\n        }\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.canvas = <HTMLElement>document.getElementById('svg-canvas');\r\n        // const panZoom = svgPanZoom(this.canvas);\r\n        const bRect = <DOMRect>this.canvas.getBoundingClientRect();\r\n        const boundingDiv = <DOMRect>document.getElementById('flowchart-main-container').getBoundingClientRect();\r\n        this.offset = [bRect.left, bRect.top];\r\n\r\n        /*\r\n        */\r\n        // transform\r\n        if (!this.dataService.flowchartPos) {\r\n            this.dataService.flowchartPos = 'matrix(' + this.zoom + ', 0, 0,' + this.zoom + ', -' +\r\n            boundingDiv.width * this.zoom / 2 + ', -' + boundingDiv.width * this.zoom / 2 + ')';\r\n        } else {\r\n            this.zoom = Number(this.dataService.flowchartPos.split(',')[0].split('(')[1]);\r\n        }\r\n        this.canvas.style.transition = 'transform 0ms ease-in';\r\n        this.canvas.style.transformOrigin = `top left`;\r\n        this.canvas.style.transform = this.dataService.flowchartPos;\r\n\r\n        // copy: copy node\r\n        this.copySub = this.copyListener.subscribe(val => {\r\n            if (!this.listenerActive) { return; }\r\n            const node = this.dataService.flowchart.nodes[this.dataService.flowchart.meta.selected_nodes[0]];\r\n            if (node.type !== 'start' && node.type !== 'end') {\r\n                console.log('copied node:', node);\r\n                const cp = circularJSON.parse(circularJSON.stringify(node));\r\n                this.copied = circularJSON.stringify(cp);\r\n            }\r\n        });\r\n\r\n        // paste: paste copied node\r\n        this.pasteSub = this.pasteListener.subscribe(val => {\r\n            if (!this.listenerActive) { return; }\r\n            if (this.copied) {\r\n                event.preventDefault();\r\n                const newNode = <INode>circularJSON.parse(this.copied);\r\n                const pt = this.canvas.createSVGPoint();\r\n                pt.x = 20;\r\n                pt.y = 100;\r\n\r\n                let svgP: any;\r\n                const isFirefox = typeof InstallTrigger !== 'undefined';\r\n                if (isFirefox) {\r\n                        const ctm = this.canvas.getScreenCTM();\r\n                        // const bRect = this.canvas.getBoundingClientRect();\r\n                        ctm.a = ctm.a * this.zoom;\r\n                        ctm.d = ctm.d * this.zoom;\r\n                        ctm.e = bRect.x;\r\n                        ctm.f = bRect.y;\r\n                        svgP = pt.matrixTransform(ctm.inverse());\r\n                } else {\r\n                        svgP = pt.matrixTransform(this.canvas.getScreenCTM().inverse());\r\n                }\r\n\r\n                NodeUtils.updateNode(newNode, svgP);\r\n                this.dataService.flowchart.nodes.push(newNode);\r\n                console.log('pasting node:', newNode);\r\n            }\r\n        });\r\n\r\n        // delete: delete selected edge(s)\r\n        this.keydownSub = this.keydownListener.subscribe(val => {\r\n            if (!this.listenerActive) { return; }\r\n            if ((<KeyboardEvent> val).key === 'Delete') {\r\n                this.deleteSelectedEdges();\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        if (this.dataService.newFlowchart) {\r\n            this.focusFlowchart();\r\n            this.dataService.newFlowchart = false;\r\n        }\r\n    }\r\n\r\n    /*\r\n    handle event received from node component\r\n    */\r\n    nodeAction(event, node_index): void {\r\n\r\n        switch (event.action) {\r\n\r\n            // switch the viewchild of the appModule to the node's procedure view when double-click on the node\r\n            case ACTIONS.PROCEDURE:\r\n                this.router.navigate(['/editor']);\r\n                // this.switch.emit('editor');\r\n                this.deactivateKeyEvent();\r\n                break;\r\n\r\n            // select a node\r\n            case ACTIONS.SELECT:\r\n                this.dataService.flowchart.meta.selected_nodes = [ node_index ];\r\n                break;\r\n\r\n            // initiate dragging node\r\n            case ACTIONS.DRAGNODE:\r\n                this.element = this.dataService.flowchart.nodes[node_index];\r\n                const pt = this.canvas.createSVGPoint();\r\n\r\n                // get current mouse position in the page\r\n                pt.x = event.data.pageX;\r\n                pt.y = event.data.pageY;\r\n\r\n                // convert mouse position to svg position (special procedure for firefox)\r\n                let svgP: any;\r\n                const isFirefox = typeof InstallTrigger !== 'undefined';\r\n                if (isFirefox) {\r\n                    const ctm = this.canvas.getScreenCTM();\r\n                    const bRect = this.canvas.getBoundingClientRect();\r\n                    ctm.a = ctm.a * this.zoom;\r\n                    ctm.d = ctm.d * this.zoom;\r\n                    ctm.e = bRect.x;\r\n                    ctm.f = bRect.y;\r\n                    svgP = pt.matrixTransform(ctm.inverse());\r\n                } else {\r\n                    svgP = pt.matrixTransform(this.canvas.getScreenCTM().inverse());\r\n                }\r\n\r\n                // save the svg position as startCoords\r\n                this.startCoords = [\r\n                    svgP.x,\r\n                    svgP.y\r\n                ];\r\n                if (this.startCoords[0] === NaN) {\r\n                    this.startCoords = [0, 0];\r\n                }\r\n                // mark the dragging mode as dragNode\r\n                this.isDown = 2;\r\n                break;\r\n\r\n            // initiate dragging input/output port\r\n            case ACTIONS.DRAGPORT:\r\n                // create a new edge\r\n                this.edge = <IEdge>{source: undefined, target: undefined, selected: false};\r\n\r\n                // assign the port to the edge's input/output accordingly\r\n                if (event.type === 'input') {\r\n                    this.edge.target = event.data;\r\n                } else {\r\n                    this.edge.source = event.data;\r\n                }\r\n                this.startType = event.type;\r\n\r\n                // modify the temporary-edge's coordinate\r\n                this.element = <HTMLElement>document.getElementById('temporary-wire');\r\n                this.element.setAttribute('x1', event.position[0]);\r\n                this.element.setAttribute('y1', event.position[1]);\r\n                this.element.setAttribute('x2', event.position[0]);\r\n                this.element.setAttribute('y2', event.position[1]);\r\n                this.isDown = 3;\r\n                break;\r\n        }\r\n    }\r\n\r\n    // check if the node at node_index is selected\r\n    isSelected(node_index: number): boolean {\r\n        return this.dataService.flowchart.meta.selected_nodes.indexOf(node_index) > -1;\r\n    }\r\n\r\n    // add a new node\r\n    addNode(): void {\r\n\r\n        // create a new node\r\n        const newNode = NodeUtils.getNewNode();\r\n\r\n        // the new node's position would be (20,100) relative to the current view\r\n        const pt = this.canvas.createSVGPoint();\r\n\r\n        pt.x = 20;\r\n        pt.y = 100;\r\n\r\n        // convert the position to svg position\r\n        let svgP: any;\r\n        const isFirefox = typeof InstallTrigger !== 'undefined';\r\n        if (isFirefox) {\r\n            const ctm = this.canvas.getScreenCTM();\r\n            const bRect = this.canvas.getBoundingClientRect();\r\n            ctm.a = ctm.a * this.zoom;\r\n            ctm.d = ctm.d * this.zoom;\r\n            ctm.e = bRect.x;\r\n            ctm.f = bRect.y;\r\n            svgP = pt.matrixTransform(ctm.inverse());\r\n        } else {\r\n            svgP = pt.matrixTransform(this.canvas.getScreenCTM().inverse());\r\n        }\r\n\r\n        // assign the position to the new node and add it to the flowchart\r\n        newNode.position.x = svgP.x;\r\n        newNode.position.y = svgP.y;\r\n        this.dataService.flowchart.nodes.push(newNode);\r\n    }\r\n\r\n    // activate event listener for copy (ctrl+c), paste (ctrl+v), delete (Delete) when mouse hover over the svg component\r\n    activateKeyEvent(): void {\r\n        this.listenerActive = true;\r\n    }\r\n\r\n    // deactivate the event listeners when the mouse exit the svg component\r\n    deactivateKeyEvent(event?: MouseEvent): void {\r\n        this.listenerActive = false;\r\n        if (this.isDown) {\r\n            this.handleMouseUp(event);\r\n        }\r\n    }\r\n\r\n    // delete selected node\r\n    deleteSelectedNodes() {\r\n\r\n        // for each of the selected node\r\n        while (this.dataService.flowchart.meta.selected_nodes.length > 0) {\r\n            const node_index = this.dataService.flowchart.meta.selected_nodes.pop();\r\n            const node = this.dataService.flowchart.nodes[node_index];\r\n\r\n            // continue if the node is a start/end node\r\n            if (node.type === 'start' || node.type === 'end') { continue; }\r\n            let edge_index = 0;\r\n\r\n            // delete all the edges connected to the node\r\n            while (edge_index < this.dataService.flowchart.edges.length) {\r\n                const tbrEdge = this.dataService.flowchart.edges[edge_index];\r\n                if (tbrEdge.target.parentNode === node || tbrEdge.source.parentNode === node) {\r\n                    this.deleteEdge(edge_index, node.id);\r\n                    continue;\r\n                }\r\n                edge_index += 1;\r\n            }\r\n\r\n            // remove the node from the flowchart\r\n            this.dataService.flowchart.nodes.splice(Number(node_index), 1);\r\n        }\r\n    }\r\n\r\n    // delete an edge with a known index\r\n    deleteEdge(edge_index, deletedNode) {\r\n        const tbrEdge = this.dataService.flowchart.edges[edge_index];\r\n\r\n        // remove the edge from the target node's list of edges\r\n        for (const i in this.dataService.flowchart.edges) {\r\n            if (tbrEdge.target.edges[i] === tbrEdge) {\r\n                tbrEdge.target.edges.splice(Number(i), 1);\r\n                break;\r\n            }\r\n        }\r\n\r\n        // remove the edge from the source node's list of edges\r\n        for (const i in tbrEdge.source.edges) {\r\n            if (tbrEdge.source.edges[i] === tbrEdge) {\r\n                tbrEdge.source.edges.splice(Number(i), 1);\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (tbrEdge.target.parentNode.input.edges.length === 0 && deletedNode !== tbrEdge.target.parentNode.id) {\r\n            ViewFlowchartComponent.disableNode(tbrEdge.target.parentNode);\r\n        } else {\r\n            ViewFlowchartComponent.enableNode(tbrEdge.target.parentNode);\r\n        }\r\n\r\n        // remove the edge from the general list of edges\r\n        this.dataService.flowchart.edges.splice(edge_index, 1);\r\n        this.dataService.flowchart.ordered = false;\r\n    }\r\n\r\n\r\n    // delete all the selected edges\r\n    deleteSelectedEdges() {\r\n        this.selectedEdge.sort().reverse();\r\n        for (const edge_index of this.selectedEdge) {\r\n            this.deleteEdge(edge_index, undefined);\r\n        }\r\n        this.selectedEdge = [];\r\n    }\r\n\r\n    // select an edge\r\n    selectEdge(event, edge_index) {\r\n\r\n        // if ctrl is pressed, add the edge into the list of selected edges\r\n        if (event === 'ctrl') {\r\n            this.selectedEdge.push(edge_index);\r\n            this.dataService.flowchart.edges[edge_index].selected = true;\r\n        } else if (event === 'single' || (event === false && this.selectedEdge.length > 1)) {\r\n            if (this.selectedEdge.length > 0) {\r\n                for (const e of this.selectedEdge) { this.dataService.flowchart.edges[e].selected = false; }\r\n            }\r\n            this.selectedEdge = [edge_index];\r\n            this.dataService.flowchart.edges[edge_index].selected = true;\r\n        } else {\r\n            this.dataService.flowchart.edges[edge_index].selected = false;\r\n            for (let i = 0; i < this.selectedEdge.length; i ++) { if (this.selectedEdge[i] === edge_index) {\r\n                this.selectedEdge.splice(i, 1);\r\n                break;\r\n            }\r\n            }\r\n        }\r\n    }\r\n\r\n    // focus view onto the flowchart\r\n    focusFlowchart(): void {\r\n        // find the frame of the flowchart: frame = [minX, minY, maxX, maxY]\r\n        const frame = [this.dataService.flowchart.nodes[0].position.x, this.dataService.flowchart.nodes[0].position.y,\r\n                                this.dataService.flowchart.nodes[0].position.x, this.dataService.flowchart.nodes[0].position.y];\r\n        for (const node of this.dataService.flowchart.nodes) {\r\n            if (node.position.x < frame[0]) {\r\n                frame[0] = node.position.x;\r\n            } else if (node.position.x > frame[2]) {\r\n                frame[2] = node.position.x;\r\n            }\r\n            if (node.position.y < frame[1]) {\r\n                frame[1] = node.position.y;\r\n            } else if (node.position.y > frame[3]) {\r\n                frame[3] = node.position.y;\r\n            }\r\n        }\r\n        frame[2] += 100;\r\n        frame[3] += 150;\r\n\r\n        // calculate the zoom to fit the whole flowchart\r\n        const bRect = <DOMRect>this.canvas.getBoundingClientRect();\r\n        const ctm = <SVGMatrix>this.canvas.getScreenCTM();\r\n        let zoom = bRect.width / (ctm.a * (frame[2] - frame[0]));\r\n        const heightZoom = bRect.height / (ctm.d * (frame[3] - frame[1]));\r\n        if (zoom > heightZoom) { zoom = heightZoom; }\r\n        if (zoom > this.maxZoom) { zoom = this.maxZoom; } else if (zoom < this.minZoom) { zoom = this.minZoom; }\r\n\r\n        // calculate the difference between height and width, if height is bigger than width,\r\n        // centering the flowchart based on the difference\r\n        const height_width_diff = ((frame[3] - frame[1]) - (frame[2] - frame[0])) / 2;\r\n        if (height_width_diff > 0) {\r\n            frame[0] -= height_width_diff;\r\n        }\r\n\r\n        // if the minX or minY goes below 0 (outside of svg frame), change them back to 0\r\n        if (frame[0] < 0) { frame[0] = 0; }\r\n        if (frame[1] < 0) { frame[1] = 0; }\r\n\r\n        // transform\r\n        this.dataService.flowchartPos = `matrix(${zoom},0,0,${zoom},${-frame[0] * ctm.a *\r\n            zoom / this.zoom},${-frame[1] * ctm.a * zoom / this.zoom})`;\r\n        this.canvas.style.transform = this.dataService.flowchartPos;\r\n        this.zoom = zoom;\r\n    }\r\n\r\n\r\n    // scale view on mouse wheel\r\n    scale(event: WheelEvent): void {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n\r\n        // calculate new zoom value\r\n        let value: number = this.zoom - (Math.sign(event.deltaY)) * this.zoomFactor;\r\n\r\n        // limit the zoom value to be between 1 and 2.5\r\n        if (value >= this.minZoom && value <= this.maxZoom) {\r\n            value = Number( (value).toPrecision(5) );\r\n        } else {\r\n            return;\r\n        }\r\n\r\n\r\n        /*\r\n        // VER 1: translate before and after re-scaling\r\n        this.mousePos = [event.pageX - this.offset[0], event.pageY - this.offset[1]];\r\n\r\n        const bRect = <DOMRect>this.canvas.getBoundingClientRect();\r\n        const beforeX = this.mousePos[0] - bRect.x + this.offset[0];\r\n        const beforeY = this.mousePos[1] - bRect.y + this.offset[1];\r\n\r\n        const afterX = beforeX / value + this.mousePos[0] * (value - this.zoom);\r\n        const afterY = beforeY / value + this.mousePos[1] * (value - this.zoom);\r\n\r\n        // find transformation matrix\r\n        const m = this.canvas.createSVGMatrix()\r\n        .translate(beforeX / this.zoom, beforeY / this.zoom)\r\n        .scale(value)\r\n        .translate(-afterX, -afterY);\r\n\r\n        this.dataService.flowchartPos = 'matrix(' + m.a + ',' + m.b + ',' + m.c + ',' + m.d + ',' + m.e + ',' + m.f + ')';\r\n        */\r\n\r\n        /*\r\n        // VER 2 : transform relative to the top-left of the bounding box of the canvas and adjust based on mouse position\r\n\r\n        this.mousePos = [event.pageX - this.offset[0], event.pageY - this.offset[1]];\r\n\r\n        const bRect = <DOMRect>this.canvas.getBoundingClientRect();\r\n        let newX = (bRect.left - this.offset[0] - this.mousePos[0] * (value - this.zoom)) / this.zoom;\r\n        let newY = (bRect.top - this.offset[1]  - this.mousePos[1] * (value - this.zoom)) / this.zoom;\r\n        const boundingDiv = <DOMRect>document.getElementById('flowchart-main-container').getBoundingClientRect();\r\n\r\n        const m = this.canvas.createSVGMatrix()\r\n        .scale(value)\r\n        .translate(newX, newY);\r\n\r\n        newX = m.e;\r\n        newY = m.f;\r\n\r\n        if (newX > 0) {\r\n            newX = 0;\r\n        } else if (boundingDiv.width - newX > bRect.width * value / this.zoom) {\r\n            newX = boundingDiv.width - bRect.width * value / this.zoom;\r\n        }\r\n        if (newY > 0) {\r\n            newY = 0;\r\n        } else if (boundingDiv.height - newY > bRect.height * value / this.zoom) {\r\n            newY = boundingDiv.height - bRect.height * value / this.zoom;\r\n        }\r\n        if (newY > 0) { newY = 0; }\r\n\r\n\r\n        this.dataService.flowchartPos = 'matrix(' + value + ', 0, 0,' + value + ',' + newX + ',' + newY + ')';\r\n        */\r\n\r\n        /*\r\n        // VER 3: transform relative to the center of the canvas\r\n\r\n        const bRect = <DOMRect>this.canvas.getBoundingClientRect();\r\n        const boundingDiv = <DOMRect>document.getElementById('flowchart-main-container').getBoundingClientRect();\r\n\r\n        let newX = (bRect.left - this.offset[0]) / this.zoom;\r\n        let newY = (bRect.top - this.offset[1] ) / this.zoom;\r\n\r\n\r\n        const m = this.canvas.createSVGMatrix()\r\n        .scale(value)\r\n        .translate(newX, newY);\r\n\r\n        newX = m.e - boundingDiv.width * (value - this.zoom) / (2 * this.zoom);\r\n        newY = m.f - boundingDiv.width * (value - this.zoom) / (2 * this.zoom);\r\n\r\n        if (newX > 0) {\r\n            newX = 0;\r\n        } else if (boundingDiv.width - newX > bRect.width * value / this.zoom) {\r\n            newX = boundingDiv.width - bRect.width * value / this.zoom;\r\n        }\r\n        if (newY > 0) {\r\n            newY = 0;\r\n        } else if (boundingDiv.height - newY > bRect.height * value / this.zoom) {\r\n            newY = boundingDiv.height - bRect.height * value / this.zoom;\r\n        }\r\n        if (newY > 0) { newY = 0; }\r\n        */\r\n\r\n        // VER 4: transform relative to the mouse position\r\n        this.mousePos = [event.pageX - this.offset[0], event.pageY - this.offset[1]];\r\n\r\n        const bRect = <DOMRect>this.canvas.getBoundingClientRect();\r\n        const boundingDiv = <DOMRect>document.getElementById('flowchart-main-container').getBoundingClientRect();\r\n\r\n        let newX = ((bRect.left - this.offset[0]) * value - this.mousePos[0] * (value - this.zoom)) / this.zoom;\r\n        let newY = ((bRect.top  - this.offset[1]) * value - this.mousePos[1] * (value - this.zoom)) / this.zoom;\r\n\r\n        // snapping back the x and y coordinates if the zoom goes out of the bounding box\r\n        if (newX > 0) {\r\n            newX = 0;\r\n        } else if (boundingDiv.width - newX > bRect.width * value / this.zoom) {\r\n            newX = boundingDiv.width - bRect.width * value / this.zoom;\r\n        }\r\n        if (newY > 0) {\r\n            newY = 0;\r\n        } else if (boundingDiv.height - newY > bRect.height * value / this.zoom) {\r\n            newY = boundingDiv.height - bRect.height * value / this.zoom;\r\n        }\r\n        if (newY > 0) { newY = 0; }\r\n\r\n        this.dataService.flowchartPos = 'matrix(' + value + ', 0, 0,' + value + ',' + newX + ',' + newY + ')';\r\n\r\n        // transform\r\n        this.canvas.style.transform = this.dataService.flowchartPos;\r\n        this.zoom = value;\r\n    }\r\n\r\n\r\n    // initiate dragging the view window\r\n    panStart(event: MouseEvent) {\r\n        event.preventDefault();\r\n\r\n        const bRect = <DOMRect>this.canvas.getBoundingClientRect();\r\n\r\n        // set start coords to current view window position\r\n        this.startCoords = [\r\n            event.clientX - (bRect.left - this.offset[0]),\r\n            event.clientY - (bRect.top - this.offset[1])\r\n        ];\r\n        // set drag mode to drag view\r\n        this.isDown = 1;\r\n    }\r\n\r\n    // handle mouse move for dragging view/node/port\r\n    handleMouseMove(event: MouseEvent) {\r\n        // return if no dragging initiated\r\n        if (!this.isDown) {\r\n            return;\r\n\r\n        // if drag view\r\n        } else if (this.isDown === 1) {\r\n            event.preventDefault();\r\n            const bRect = <DOMRect>this.canvas.getBoundingClientRect();\r\n            let x = Number(event.clientX - this.startCoords[0]);\r\n            let y = Number(event.clientY - this.startCoords[1]);\r\n            const boundingDiv = <DOMRect>document.getElementById('flowchart-main-container').getBoundingClientRect();\r\n            if (x > 0 || bRect.width < boundingDiv.width) {\r\n                x = 0;\r\n            } else if (boundingDiv.width - x > bRect.width) {\r\n                x = boundingDiv.width - bRect.width;\r\n            }\r\n            if (y > 0 || bRect.height < boundingDiv.height) {\r\n                y = 0;\r\n            } else if (boundingDiv.height - y > bRect.height) {\r\n                y = boundingDiv.height - bRect.height;\r\n            }\r\n            this.dataService.flowchartPos = 'matrix(' + this.zoom + ',0,0,' + this.zoom + ',' + x + ',' + y + ')';\r\n            this.canvas.style.transform = this.dataService.flowchartPos;\r\n\r\n        // if drag node\r\n        } else if (this.isDown === 2) {\r\n\r\n            const pt = this.canvas.createSVGPoint();\r\n\r\n            pt.x = event.pageX;\r\n            pt.y = event.pageY;\r\n\r\n            let svgP: any;\r\n            const isFirefox = typeof InstallTrigger !== 'undefined';\r\n            if (isFirefox) {\r\n                const ctm = this.canvas.getScreenCTM();\r\n                const bRect = this.canvas.getBoundingClientRect();\r\n                ctm.a = ctm.a * this.zoom;\r\n                ctm.d = ctm.d * this.zoom;\r\n                ctm.e = bRect.x;\r\n                ctm.f = bRect.y;\r\n                svgP = pt.matrixTransform(ctm.inverse());\r\n            } else {\r\n                svgP = pt.matrixTransform(this.canvas.getScreenCTM().inverse());\r\n            }\r\n\r\n            const xDiff = this.startCoords[0] - svgP.x;\r\n            const yDiff = this.startCoords[1] - svgP.y;\r\n            this.startCoords[0] = svgP.x;\r\n            this.startCoords[1] = svgP.y;\r\n\r\n            this.element.position.x -= xDiff;\r\n            this.element.position.y -= yDiff;\r\n\r\n    // if drag port\r\n    } else if (this.isDown === 3) {\r\n            event.preventDefault();\r\n            const pt = this.canvas.createSVGPoint();\r\n\r\n            pt.x = event.pageX;\r\n            pt.y = event.pageY;\r\n\r\n\r\n            const isFirefox = typeof InstallTrigger !== 'undefined';\r\n            if (isFirefox) {\r\n                const ctm = this.canvas.getScreenCTM();\r\n                const bRect = this.canvas.getBoundingClientRect();\r\n                ctm.a = ctm.a * this.zoom;\r\n                ctm.d = ctm.d * this.zoom;\r\n                ctm.e = bRect.x;\r\n                ctm.f = bRect.y;\r\n                const svgP = pt.matrixTransform(ctm.inverse());\r\n                this.element.setAttribute('x2', svgP.x);\r\n                this.element.setAttribute('y2', svgP.y);\r\n\r\n            } else {\r\n                const svgP = pt.matrixTransform(this.canvas.getScreenCTM().inverse());\r\n                this.element.setAttribute('x2', svgP.x);\r\n                this.element.setAttribute('y2', svgP.y);\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    handleMouseUp(event) {\r\n        this.element = undefined;\r\n        if (this.isDown === 3) {\r\n            const pt = this.canvas.createSVGPoint();\r\n\r\n            pt.x = event.pageX;\r\n            pt.y = event.pageY;\r\n            let svgP: any;\r\n\r\n            const isFirefox = typeof InstallTrigger !== 'undefined';\r\n            if (isFirefox) {\r\n                const ctm = this.canvas.getScreenCTM();\r\n                const bRect = this.canvas.getBoundingClientRect();\r\n                ctm.a = ctm.a * this.zoom;\r\n                ctm.d = ctm.d * this.zoom;\r\n                ctm.e = bRect.x;\r\n                ctm.f = bRect.y;\r\n                svgP = pt.matrixTransform(ctm.inverse());\r\n            } else {\r\n                svgP = pt.matrixTransform(this.canvas.getScreenCTM().inverse());\r\n            }\r\n\r\n            // reset temporary edge position to <(0,0),(0,0)>\r\n            const tempLine = <HTMLElement>document.getElementById('temporary-wire');\r\n            tempLine.setAttribute('x1', '0');\r\n            tempLine.setAttribute('y1', '0');\r\n            tempLine.setAttribute('x2', '0');\r\n            tempLine.setAttribute('y2', '0');\r\n\r\n            // go through all of the nodes' input/output ports\r\n            for (const n of this.dataService.flowchart.nodes) {\r\n                let pPos;\r\n\r\n                // find the node's corresponding port and its position\r\n                if (this.startType === 'input') {\r\n                    if (this.edge.target.parentNode === n || n.type === 'end') { continue; }\r\n                    this.edge.source = n.output;\r\n\r\n                    pPos = [n.position.x + this.outputOffset[0], n.position.y + this.outputOffset[1]];\r\n                } else {\r\n                    if (this.edge.source.parentNode === n || n.type === 'start') { continue; }\r\n                    this.edge.target = n.input;\r\n\r\n                    pPos = [n.position.x + this.inputOffset[0], n.position.y + this.inputOffset[1]];\r\n                }\r\n\r\n                // if the distance between the port's position and the dropped position is bigger than 15px, continue\r\n                if (Math.abs(pPos[0] - svgP.x) > this.maxZoom || Math.abs(pPos[1] - svgP.y) > this.maxZoom ) { continue; }\r\n\r\n                // if there is already an existing edge with the same source and target as the new edge, return\r\n                for (const edge of this.dataService.flowchart.edges) {\r\n                    if (edge.target === this.edge.target && edge.source === this.edge.source) {\r\n                        this.isDown = 0;\r\n                        return;\r\n                    }\r\n                }\r\n                this.edge.target.edges.push(this.edge);\r\n                this.edge.source.edges.push(this.edge);\r\n                this.dataService.flowchart.edges.push(this.edge);\r\n                this.dataService.flowchart.ordered = false;\r\n                if (this.edge.source.parentNode.enabled) {\r\n                    ViewFlowchartComponent.enableNode(this.edge.target.parentNode);\r\n                } else {\r\n                    ViewFlowchartComponent.disableNode(this.edge.target.parentNode);\r\n                }\r\n                break;\r\n            }\r\n        }\r\n        this.isDown = 0;\r\n    }\r\n\r\n    newfile() {\r\n        document.getElementById('newfile').click();\r\n        this.focusFlowchart();\r\n    }\r\n\r\n    viewerData(): any {\r\n        const node = this.dataService.flowchart.nodes[this.dataService.flowchart.meta.selected_nodes[0]];\r\n        if (!node) { return ''; }\r\n        if (node.type === 'output') { return node.input.value; }\r\n        return node.output.value;\r\n    }\r\n\r\n    setSplit(e) { this.dataService.splitVal = e.sizes[1]; }\r\n\r\n}\r\n\r\n","// import @angular stuff\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { MatIconModule, MatButtonModule } from '@angular/material';\r\n// import app components\r\nimport { ViewFlowchartComponent } from './view-flowchart.component';\r\nimport { NodeComponent } from './node/node.component';\r\nimport { EdgeComponent } from './edge/edge.component';\r\nimport { SharedModule } from '@shared/shared.module';\r\nimport { ViewFlowchartRoutingModule } from './view-flowchart-routing.module';\r\n\r\n/**\r\n * ViewFlowchartModule\r\n */\r\n@NgModule({\r\n  declarations: [\r\n    ViewFlowchartComponent,\r\n    NodeComponent,\r\n    EdgeComponent,\r\n  ],\r\n  exports: [ ViewFlowchartComponent ],\r\n  imports: [ \r\n    CommonModule,\r\n    FormsModule,\r\n    SharedModule,\r\n    ViewFlowchartRoutingModule\r\n    ],\r\n  entryComponents: [ ],\r\n  providers: [ ]\r\n})\r\nexport class ViewFlowchartModule {\r\n    constructor () { }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n/*\r\n * Shortens a name to a certain length and appends \"...\" infront of it\r\n * Usage:\r\n *   value | length:number\r\n * Example:\r\n *   {{ \"some_very_long_string\" | length:7 }}\r\n *   formats to: some_ve...\r\n*/\r\n@Pipe({name: 'simplename'})\r\nexport class SimpleNamePipe implements PipeTransform {\r\n  transform(value: string): string {\r\n    if (value.endsWith('.mob')) {\r\n        value = value.substr(0, value.length - 4);\r\n    }\r\n    value = value.split('_').join(' ');\r\n    value = value.split('-').join(' ');\r\n    return value;\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { ViewGalleryComponent } from './view-gallery.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: ViewGalleryComponent,\r\n    children: []\r\n  }\r\n];\r\n\r\n\r\n@NgModule({\r\n  imports: [ RouterModule.forChild(routes) ],\r\n  exports: [ RouterModule ]\r\n})\r\nexport class ViewGalleryRoutingModule { }\r\n","module.exports = \"<div class='container'>\\r\\n    <as-split direction=\\\"horizontal\\\" (dragEnd)='setSplit($event)'>\\r\\n        <as-split-area [size]=\\\"100 - dataService.splitVal\\\">\\r\\n            <div class='container__header'>\\r\\n\\r\\n                <!-- top left tab menu  -->\\r\\n                <div class=\\\"tab\\\">\\r\\n                    <button class='btn-tab' [class.active]='router.url==\\\"/gallery\\\"' [routerLink]=\\\"'/gallery'\\\">Gallery</button>\\r\\n                    <button class='btn-tab' [class.active]='router.url==\\\"/dashboard\\\"' [routerLink]=\\\"'/dashboard'\\\">Dashboard</button>\\r\\n                    <button class='btn-tab' [class.active]='router.url==\\\"/flowchart\\\"' [routerLink]=\\\"'/flowchart'\\\">Flowchart</button>\\r\\n                    <!--\\r\\n                    <button class='btn' [class.active]='false' (click)='updateView(\\\"editor\\\")'>Procedures</button>\\r\\n                    -->\\r\\n                </div>\\r\\n\\r\\n                <!-- hidden components (new file, save file, loaf file) for the dropdown menu-->\\r\\n                <div style=\\\"display: none;\\\">\\r\\n                    <file-new></file-new>\\r\\n                    <file-save></file-save>\\r\\n                    <file-load></file-load>        \\r\\n                </div>\\r\\n\\r\\n                <!-- top right dropdown menu -->\\r\\n                <div class=\\\"dropmenu\\\">\\r\\n                    <!-- execute button -->\\r\\n                    <div>\\r\\n                        <execute></execute>\\r\\n                    </div>\\r\\n                    <!-- dropdown menu for new file, save file, loaf file-->\\r\\n                    <div>\\r\\n                        <button class='btn' mat-icon-button [matMenuTriggerFor]=\\\"menu\\\">\\r\\n                            <mat-icon>more_vert</mat-icon>\\r\\n                        </button>\\r\\n                        <mat-menu #menu=\\\"matMenu\\\">\\r\\n                            <button  mat-menu-item onclick=\\\"document.getElementById('newfile').click();\\\"\\r\\n                            title=\\\"Create New Flowchart\\\">\\r\\n                                <mat-icon>rotate_left</mat-icon>\\r\\n                                <span>New File</span>\\r\\n                            </button>\\r\\n                            <button mat-menu-item onclick=\\\"document.getElementById('savefile').click();\\\"\\r\\n                            title=\\\"Save Flowchart File to Computer\\\">\\r\\n                                <mat-icon>save_alt</mat-icon>\\r\\n                                <span>Save File</span>\\r\\n                            </button>\\r\\n                            <button mat-menu-item onclick=\\\"document.getElementById('file-input').click();\\\"\\r\\n                            title=\\\"Load Flowchart File from Computer\\\">\\r\\n                                <mat-icon>launch</mat-icon>\\r\\n                                <span>Load File</span>\\r\\n                            </button>\\r\\n                        </mat-menu>\\r\\n                    </div>\\r\\n                    \\r\\n                </div>\\r\\n            </div>\\r\\n            <!-- viewchild content -->\\r\\n            <div class='content__panel'>\\r\\n                <h2>Möbius Gallery</h2>\\r\\n                <hr>\\r\\n                <h4>Displaying {{ (allFiles | async)?.length}} projects</h4>\\r\\n                <div class=\\\"container__element container__element--project-container\\\">\\r\\n                    <div class=\\\"project-container__project\\\" *ngFor=\\\"let f of  (allFiles | async)\\\">\\r\\n                        <div class=\\\"project__content\\\" (click)='loadFile(f)'>\\r\\n                            {{ f.name | simplename }}\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </as-split-area>\\r\\n\\r\\n        <as-split-area [size]=\\\"dataService.splitVal\\\">\\r\\n            <!-- data viewers panel -->\\r\\n            <div class='content__viewer' >\\r\\n                <model-viewers-container [data]='viewerData()' [helpView]='helpView'></model-viewers-container>\\r\\n            </div>\\r\\n        </as-split-area>\\r\\n        \\r\\n    </as-split>\\r\\n\\r\\n</div>\\r\\n\"","module.exports = \"as-split-area {\\n  overflow: hidden !important; }\\n\\n.container {\\n  position: relative;\\n  overflow: auto;\\n  height: 100%;\\n  width: 100%;\\n  display: flex;\\n  flex-direction: column;\\n  justify-content: space-around; }\\n\\n.container h1, .container h2, .container h3, .container h4, .container h5, .container h6, .container p {\\n    margin: 0px;\\n    padding: 0px; }\\n\\n.container .container__header {\\n    flex: 0 1 auto;\\n    min-height: 35px;\\n    display: flex;\\n    flex-direction: row;\\n    justify-content: space-between;\\n    padding: 0px 0px 0px 15px;\\n    background-color: #ccc;\\n    border-bottom: 3px solid #eeeeee;\\n    line-height: 35px;\\n    font-size: 18px;\\n    font-weight: 600;\\n    text-align: center;\\n    /* tab styling */\\n    /* dropdown menu styling */ }\\n\\n.container .container__header .tab {\\n      border: 2px;\\n      overflow: hidden;\\n      background-color: #ccc; }\\n\\n.container .container__header .tab button {\\n      display: inline-block;\\n      vertical-align: bottom;\\n      background-color: inherit;\\n      color: #505050;\\n      border: none;\\n      outline: none;\\n      cursor: pointer;\\n      padding: 8px 10px;\\n      transition: 0.3s;\\n      font-size: 14px; }\\n\\n.container .container__header .tab button:hover {\\n      color: blue; }\\n\\n.container .container__header .tab button.active {\\n      background-color: #ccc;\\n      color: #000096;\\n      font-weight: 600;\\n      border-color: #222 !important; }\\n\\n.container .container__header .dropmenu {\\n      display: inline-flex; }\\n\\n.container .container__content {\\n    flex-grow: 1;\\n    height: 0px;\\n    border: 2px solid #3F4651;\\n    overflow: auto; }\\n\\n.container .container__footer {\\n    text-align: center;\\n    font-size: 12px;\\n    line-height: 18px;\\n    background-color: #3F4651;\\n    color: #E7BF00; }\\n\\n.content__panel {\\n  background-color: gainsboro;\\n  height: 95%;\\n  overflow: hidden auto; }\\n\\n.content__viewer {\\n  background-color: gainsboro;\\n  height: 100%;\\n  overflow: auto; }\\n\\nul.nav {\\n  margin: 0px;\\n  padding: 0px; }\\n\\nli.link {\\n  display: inline;\\n  border: 2px solid gray;\\n  border-radius: 4px;\\n  margin: 5px 5px 0px 0px;\\n  padding: 5px;\\n  text-transform: uppercase;\\n  line-height: 12px;\\n  font-weight: 600;\\n  cursor: pointer;\\n  font-size: 12px; }\\n\\nli.link:hover {\\n  background-color: gray;\\n  color: white; }\\n\\nbutton.btn {\\n  display: inline-block;\\n  vertical-align: middle;\\n  margin: 0px 0px 0px 0px;\\n  font-size: 12px;\\n  line-height: 10px;\\n  height: 30px;\\n  border: none;\\n  border-radius: 4px;\\n  background-color: transparent;\\n  color: #505050; }\\n\\nbutton.btn:hover {\\n  color: blue; }\\n\\n.active {\\n  background-color: #222;\\n  color: white;\\n  border-color: #222 !important; }\\n\\n.container__element {\\n  padding: 0px 10% 0px 10%; }\\n\\n.container__element--project-container {\\n  font-size: 26px;\\n  line-height: 32px;\\n  font-weight: 300;\\n  padding-top: 30px;\\n  padding-bottom: 30px;\\n  display: flex;\\n  flex-direction: row;\\n  flex-wrap: wrap;\\n  overflow: auto; }\\n\\n.project-container__project {\\n  position: relative;\\n  width: 25%;\\n  height: 150px;\\n  min-width: 200px; }\\n\\n.project-container__project .project__content {\\n    height: 90%;\\n    width: 90%;\\n    font-size: 12px;\\n    line-height: 24px;\\n    color: #000;\\n    overflow: hidden;\\n    border-radius: 4px;\\n    vertical-align: middle;\\n    overflow-wrap: break-word;\\n    word-wrap: break-word;\\n    word-break: break-word;\\n    border: 1px solid #bbb;\\n    border-radius: 2px; }\\n\\n.project-container__project .project__content a {\\n      display: block;\\n      height: 100%;\\n      margin: 10px;\\n      text-decoration: none;\\n      text-align: center;\\n      text-transform: uppercase;\\n      color: inherit;\\n      font-weight: 600; }\\n\\n.project-container__project .project__content a:visited {\\n        color: inherit; }\\n\\n.project-container__project .project__content:hover {\\n      border-color: #222; }\\n\\nh2 {\\n  color: #505050;\\n  text-align: left;\\n  padding-left: 15px;\\n  font-size: 12px;\\n  line-height: 19px; }\\n\\nh4 {\\n  color: #505050;\\n  text-align: left;\\n  padding-left: 15px;\\n  font-size: 12px;\\n  line-height: 16px; }\\n\\np {\\n  color: #505050;\\n  text-align: left;\\n  padding-left: 15px;\\n  font-size: 12px;\\n  line-height: 14px; }\\n\\nhr {\\n  border-top: 2px solid #eeeeee; }\\n\"","import { Component, Output, EventEmitter } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Constants } from './view-gallery.config';\r\nimport { Observable } from 'rxjs';\r\nimport { IMobius } from '@models/mobius';\r\n// import {Router} from '@angular/router';\r\n\r\nimport { DataService } from '@services';\r\nimport * as circularJSON from 'circular-json';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'view-gallery',\r\n  templateUrl: './view-gallery.component.html',\r\n  styleUrls: ['./view-gallery.component.scss']\r\n})\r\nexport class ViewGalleryComponent {\r\n\r\n    private allFiles: Observable<any>;\r\n    @Output() switch = new EventEmitter();\r\n\r\n    constructor(private http: HttpClient, private dataService: DataService, private router: Router) {\r\n        this.allFiles = this.getFilesFromURL();\r\n    }\r\n\r\n    getFilesFromURL(): Observable<any> {\r\n        return this.http.get(Constants.GALLERY_URL, {responseType: 'json'});\r\n    }\r\n\r\n    loadFile(fl) {\r\n        const stream = Observable.create(observer => {\r\n            const request = new XMLHttpRequest();\r\n\r\n            request.open('GET', fl.download_url);\r\n            request.onload = () => {\r\n                if (request.status === 200) {\r\n                    const f = circularJSON.parse(request.responseText);\r\n                    const file: IMobius = {\r\n                        name: f.name,\r\n                        author: f.author,\r\n                        flowchart: f.flowchart,\r\n                        last_updated: f.last_updated,\r\n                        version: f.version\r\n                    };\r\n                    observer.next(file);\r\n                    observer.complete();\r\n                } else {\r\n                    observer.error('error happened');\r\n                }\r\n            };\r\n\r\n            request.onerror = () => {\r\n            observer.error('error happened');\r\n            };\r\n            request.send();\r\n        });\r\n        stream.subscribe(loadeddata => {\r\n            this.dataService.file = loadeddata;\r\n            this.dataService.newFlowchart = true;\r\n            if (this.dataService.node.type !== 'end') {\r\n                for (let i = 0; i < loadeddata.flowchart.nodes.length; i++) {\r\n                    if (loadeddata.flowchart.nodes[i].type === 'end') {\r\n                        loadeddata.flowchart.meta.selected_nodes = [i];\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            this.router.navigate(['/dashboard']);\r\n            document.getElementById('executeButton').click();\r\n        });\r\n    }\r\n\r\n    viewerData(): any {\r\n        const node = this.dataService.flowchart.nodes[this.dataService.flowchart.meta.selected_nodes[0]];\r\n        if (!node) { return ''; }\r\n        if (node.type === 'output') { return node.input.value; }\r\n        return node.output.value;\r\n    }\r\n\r\n    setSplit(e) { this.dataService.splitVal = e.sizes[1]; }\r\n\r\n}\r\n","export class Constants {\r\n    public static get GALLERY_URL(): string {\r\n        return 'https://api.github.com/repos/design-automation/mobius-parametric-modeller/contents/src/assets/gallery?ref=master';\r\n    }\r\n\r\n    public static get FILE_URL(): string {\r\n        return 'https://raw.githubusercontent.com/design-automation/mobius-gallery/master/examples/';\r\n    }\r\n}\r\n","\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { SharedModule } from '@shared/shared.module';\r\n\r\nimport { ViewGalleryRoutingModule } from './view-gallery-routing.module';\r\nimport { ViewGalleryComponent } from './view-gallery.component';\r\nimport { SimpleNamePipe } from './simple-name.pipe';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ViewGalleryComponent,\r\n    SimpleNamePipe\r\n  ],\r\n  exports: [],\r\n  imports: [\r\n    CommonModule,\r\n    ViewGalleryRoutingModule,\r\n    SharedModule\r\n  ],\r\n  entryComponents: [ ],\r\n  providers: [ ]\r\n})\r\nexport class ViewGalleryModule {\r\n    constructor () { }\r\n}\r\n","// The file contents for the current environment will overwrite these during build.\r\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\r\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\r\n// The list of which env maps to which file can be found in `.angular-cli.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n","/**\r\n * A set of static methods for working with arrays of simple types.\r\n * The arrays can be nested, but they do not contain any objects.\r\n */\r\n\r\nexport class Arr {\r\n    /**\r\n     * Make an array of numbers. All elements in the array will have the same value.\r\n     * @param length The length of the new array. If length is 0, then an empty array is returned.\r\n     * @param value The values in the array.\r\n     * @returns The resulting array.\r\n     */\r\n    public static make(length: number, value: any): number[] {\r\n        if (length === 0) {return []; }\r\n        return Array.apply(0, new Array(length)).map((v, i) => value);\r\n    }\r\n    /**\r\n     * Make an array of numbers. All elements in the array will be a numerical sequence, 0, 1, 2, 3....\r\n     * @param length  The length of the new array. If length is 0, then an empty array is returned.\r\n     * @returns The resulting array.\r\n     */\r\n    public static makeSeq(length: number): number[] {\r\n        if (length === 0) {return []; }\r\n        return Array.apply(0, new Array(length)).map((v, i) => i);\r\n    }\r\n    /**\r\n     * Check if two nD arrays are equal (i.e. that all elements in the array are equal, ===.).\r\n     * If the arrays are unequal in length, false is returned.\r\n     * Elements in the array can have any value.\r\n     * @param arr1 The first value.\r\n     * @param arr2 The second values.\r\n     * @returns True or false.\r\n     */\r\n    public static equal(arr1: any, arr2: any): boolean {\r\n        if (!Array.isArray(arr1) || !Array.isArray(arr2)) {return arr1 === arr2; }\r\n        if (arr1.length !== arr2.length) {return false; }\r\n        for (let i = 0; i < arr1.length; i++) {\r\n            if (!this.equal(arr1[i], arr2[i])) {return false; }\r\n        }\r\n        return true;\r\n    }\r\n    /**\r\n     * Find the position of the first occurrence of a specified value in an array.\r\n     * The value can be an array (which is not the case for Array.indexOf()).\r\n     * If the value is not found or is undefined, return -1.\r\n     * If the array is null or undefined, return -1.\r\n     * @param value The value, can be a value or a 1D array of values.\r\n     * @returns The index in the array of the first occurance of the value.\r\n     */\r\n    public static indexOf(arr: any[], value: any): number {\r\n        if (!Array.isArray(arr)) {throw new Error('First argument must be a array.'); }\r\n        if (!Array.isArray(value)) {return arr.indexOf(value); }\r\n        for (let i = 0; i < arr.length; i++) {\r\n            if (Array.isArray(arr[i]) && this.equal(value, arr[i])) {\r\n                return i;\r\n            }\r\n        }\r\n        return -1;\r\n    }\r\n    /**\r\n     * Replace all occurrences of a specified value in an array.\r\n     * The input array is changed.\r\n     * The value can be an array.\r\n     * If the value is not found or is undefined, return -1.\r\n     * @param old_value The old value to replace.\r\n     * @param new_value The new value.\r\n     * @param arr The array.\r\n     */\r\n    public static replace(arr: any[], old_value: any, new_value: any): void {\r\n        if (!Array.isArray(arr)) {throw new Error('First argument must be a array.'); }\r\n        for (let i = 0; i < arr.length; i++) {\r\n            if (this.equal(arr[i], old_value)) {\r\n                arr[i] = new_value;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Take an nD array and flattens it.\r\n     * A new array is returned. The input array remains unchanged.\r\n     * For example, [1, 2, [3, 4], [5, 6]] will become [1, 2, 3, 4, 5, 6].\r\n     * If the input array is undefined, an empty array is returned.\r\n     * @param arr The multidimensional array to flatten.\r\n     * @returns A new 1D array.\r\n     */\r\n    public static flatten(arr: any[], depth?: number): any[] {\r\n        if (arr === undefined) {return []; }\r\n        return arr.reduce(function(flat, toFlatten) {\r\n            if (depth === undefined) {\r\n                return flat.concat(Array.isArray(toFlatten) ? Arr.flatten(toFlatten) : toFlatten);\r\n            } else {\r\n                return flat.concat((Array.isArray(toFlatten) && (depth !== 0)) ?\r\n                    Arr.flatten(toFlatten, depth - 1) : toFlatten);\r\n            }\r\n        }, []);\r\n    }\r\n    /**\r\n     * Make a copy of an nD array.\r\n     * If the input is not an array, then just return the same thing.\r\n     * A new array is returned. The input array remains unchanged.\r\n     * If the input array is undefined, an empty array is returned.\r\n     * If the input is s sparse array, then the output will alos be a sparse array.\r\n     * @param arr The nD array to copy.\r\n     * @returns The new nD array.\r\n     */\r\n    public static deepCopy(arr: any[]): any[] {\r\n        if (arr === undefined) {return []; }\r\n        if (!Array.isArray(arr)) {return arr; }\r\n        const arr2: any[] = [];\r\n        for (let i = 0; i < arr.length; i++) {\r\n            if (Array.isArray(arr[i])) {\r\n                arr2[i] = (Arr.deepCopy(arr[i]));\r\n            } else {\r\n                if (arr[i] !== undefined) {\r\n                    arr2[i] = (arr[i]);\r\n                }\r\n            }\r\n        }\r\n        return arr2;\r\n    }\r\n    /**\r\n     * Fills an nD array with new values (all the same value).\r\n     * The input array is changed.\r\n     * If the input array is undefined, an empty array is returned.\r\n     * The input can be a sparse array.\r\n     * @param arr The nD array to fill.\r\n     * @param value The value to insert into the array.\r\n     */\r\n    public static deepFill(arr: any[], value: any): void {\r\n        if (arr === undefined) {return; }\r\n        for (let i = 0; i < arr.length; i++) {\r\n            if (Array.isArray(arr[i])) {\r\n                Arr.deepFill(arr[i], value);\r\n            } else {\r\n                if (arr[i] !== undefined) {\r\n                    arr[i] = value;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Counts the number of values in an nD array .\r\n     * The input array remains unchanged.\r\n     * If the input array is undefined, 0 is returned.\r\n     * The input can be a sparse array. Undefined values are ignored.\r\n     * For example, for [1, 2, , , 3], the count will be 3.\r\n     * @param arr The nD array to count.\r\n     * @return The number of elements in the nD array.\r\n     */\r\n    public static deepCount(arr: any[]): number {\r\n        if (arr === undefined) {return 0; }\r\n        let a = 0 ;\r\n        for ( const i in arr) {\r\n            if (Array.isArray(arr[i])) {\r\n                a = a + Arr.deepCount(arr[i]);\r\n            } else {\r\n                if (arr[i] !== undefined) {\r\n                    a = a + 1 ;\r\n                }\r\n            }\r\n        }\r\n        return a ;\r\n    }\r\n}\r\n","/**\r\n * A bi-directional map that stores many-to-one key value mappings.\r\n * Multiple keys point to the same value.\r\n * Both the keys and values must be unique.\r\n * The keys are integers, the values can be any type.\r\n */\r\nexport class BiMapManyToOne<V> {\r\n    private readonly kv_map = new Map<number, V>();\r\n    private readonly vk_map = new Map<string, number[]>();\r\n    /**\r\n     * Creates a new bi-directional many-to-one map.\r\n     * If the data is provided, it will be added to the map.\r\n     * @param data\r\n     */\r\n    constructor(data?: Array<[number[], V]>) {\r\n        if (data) {\r\n            this.addData(data);\r\n        }\r\n    }\r\n    /**\r\n     * Populate the data in this map with an array.\r\n     * For example, [[1,3], 'a'],[[0,4], 'b']\r\n     * @param data\r\n     */\r\n    public addData(data: Array<[number[], V]>): void {\r\n        data.forEach(keys_value => {\r\n            keys_value[0].forEach(key => this.set(key, keys_value[1]));\r\n        });\r\n    }\r\n    /**\r\n     * Set a single key-value pair.\r\n     * @param key\r\n     * @param value\r\n     */\r\n    public set(key: number, value: V): void {\r\n        const value_str: string = JSON.stringify(value);\r\n        if (!this.vk_map.has(value_str)) {\r\n            this.vk_map.set(value_str, [key]);\r\n        } else {\r\n            if (this.vk_map.get(value_str).indexOf(key) === -1) {\r\n                this.vk_map.get(value_str).push(key);\r\n            }\r\n        }\r\n        this.kv_map.set(key, value);\r\n    }\r\n    /**\r\n     * Returns an array of all values.\r\n     */\r\n    public values(): Array<V> {\r\n        return Array.from(this.kv_map.values());\r\n    }\r\n    /**\r\n     * Returns an array of all keys.\r\n     */\r\n    public keys(): number[] {\r\n        return Array.from(this.kv_map.keys());\r\n    }\r\n    /**\r\n     * Returns an array of keys that point to this value.\r\n     * @param value\r\n     */\r\n    public getKeys(value: V): number[] {\r\n        const value_str: string = JSON.stringify(value);\r\n        return this.vk_map.get(value_str);\r\n    }\r\n    /**\r\n     * Returns the value to which this key points.\r\n     * @param key\r\n     */\r\n    public getValue(key: number): V {\r\n      return this.kv_map.get(key);\r\n    }\r\n    /**\r\n     * Returns true if the map contains the key.\r\n     * @param key\r\n     */\r\n    public hasKey(key: number): boolean {\r\n        return this.kv_map.has(key);\r\n    }\r\n    /**\r\n     * Returns true if the map contains the value.\r\n     * @param value\r\n     */\r\n    public hasValue(value: V): boolean {\r\n        const value_str: string = JSON.stringify(value);\r\n        return this.vk_map.has(value_str);\r\n    }\r\n    /**\r\n     * Total number of keys.\r\n     */\r\n    public numKeys(): number {\r\n        return this.kv_map.size;\r\n    }\r\n    /**\r\n     * Total number of values.\r\n     */\r\n    public numValues(): number {\r\n        return this.vk_map.size;\r\n    }\r\n    /**\r\n     * Return a a data array.\r\n     * For example, [[1,3], 'a'],[[0,4], 'b']\r\n     */\r\n    public getData(): Array<[number[], V]> {\r\n        const data: Array<[number[], V]> = [];\r\n        this.vk_map.forEach( (keys, value_str) => {\r\n            const value = JSON.parse(value_str); // TODO This is not good <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<\r\n            data.push([keys, value]);\r\n        });\r\n        return data;\r\n    }\r\n}\r\n","import { BiMapManyToOne } from './BiMap';\r\nimport { EAttribDataTypeStrs, TAttribDataTypes, IAttribData } from './GIJson';\r\n//  ===============================================================================================================\r\n//  Classes\r\n//  ===============================================================================================================\r\n/**\r\n * Geo-info attribute class.\r\n * The attributs are stores as key-value pairs.\r\n * Multiple keys point to the same values.\r\n * So for example, [[1,3], \"a\"],[[0,4], \"b\"] can be converted into sequentia arrays.\r\n * The sequential values would be [\"a\", \"b\"]\r\n * The sequentail keys would be [1,0,,0,1] (Note the undefined value in the middle.)\r\n *\r\n */\r\nexport class GIAttribMap {\r\n    private name: string;\r\n    private data_type: EAttribDataTypeStrs;\r\n    private data_size: number;\r\n    private bi_map: BiMapManyToOne<TAttribDataTypes>;\r\n    /**\r\n     * Creates an attribute.\r\n     * @param attrib_data\r\n     */\r\n    constructor(attrib_data: IAttribData) {\r\n        this.name = attrib_data.name;\r\n        this.data_type = attrib_data.data_type;\r\n        this.data_size = attrib_data.data_size;\r\n        this.bi_map = new BiMapManyToOne<TAttribDataTypes>(attrib_data.data);\r\n    }\r\n    /**\r\n     * Returns the JSON data for this attribute.\r\n     */\r\n    public getData(): IAttribData {\r\n        return {\r\n            name: this.name,\r\n            data_type: this.data_type,\r\n            data_size: this.data_size,\r\n            data: this.bi_map.getData()\r\n        };\r\n    }\r\n    /**\r\n     * Adds data to this attribute from JSON data.\r\n     * The existing data in the model is not deleted.\r\n     * @param attrib_data The JSON data.\r\n     */\r\n    public addData(attrib_data: IAttribData, offset: number): void {\r\n        if (this.name !== attrib_data.name ||\r\n            this.data_type !== attrib_data.data_type ||\r\n            this.data_size !== attrib_data.data_size) {\r\n            throw Error('Attributes do not match.');\r\n        }\r\n        attrib_data.data.forEach( keys_value => {\r\n            keys_value[0] = keys_value[0].map(key => key + offset);\r\n        });\r\n        this.bi_map.addData(attrib_data.data);\r\n    }\r\n    /**\r\n     * Sets a single attribute value.\r\n     * @param key\r\n     * @param value\r\n     */\r\n    public set(key: number, value: TAttribDataTypes): void {\r\n        this.bi_map.set(key, value);\r\n    }\r\n    /**\r\n     * Gets a single attribute value.\r\n     * @param key\r\n     */\r\n    public get(key: number): TAttribDataTypes {\r\n        return this.bi_map.getValue(key);\r\n    }\r\n    /**\r\n     * Gets a list of all the attribute keys, in sequential order.\r\n     * The key vaues are mapped.\r\n     * The key value gets maped to the new list position.\r\n     * The key index gets mapped to the new value.\r\n     * So for example, for [[1,3], 'a'],[[0,4], 'b'], the sequentail keys would be [1,0,,0,1].\r\n     */\r\n    public getSeqKeys(): number[] {\r\n        const seqKeys = [];\r\n        this.bi_map.getData().forEach( (keys_value, index) => keys_value[0].forEach( key => seqKeys[key] = index ) );\r\n        return seqKeys;\r\n    }\r\n    /**\r\n     * Gets a list of all the attribute values, in sequential order.\r\n     * So for example, for [[1,3], 'a'],[[0,4], 'b'], the sequentail values would be ['a', 'b']\r\n     */\r\n    public getSeqValues(): TAttribDataTypes[] {\r\n        return this.bi_map.values();\r\n    }\r\n}\r\n","import { IAttribsData, EAttribDataTypeStrs, TAttribDataTypes, IAttribData, TCoord} from './GIJson';\r\nimport { GIAttribMap } from './GIAttribMap';\r\nimport { GIModel } from './GIModel';\r\nimport { EEntityTypeStr, idBreak } from './GICommon';\r\n\r\n/**\r\n * Class for attributes.\r\n */\r\nexport class GIAttribs {\r\n    private model: GIModel;\r\n    // maps, the key is the name, the value is the map\r\n    private posis: Map<string, GIAttribMap> = new Map();\r\n    private verts: Map<string, GIAttribMap> = new Map();\r\n    private edges: Map<string, GIAttribMap> = new Map();\r\n    private wires: Map<string, GIAttribMap> = new Map();\r\n    private faces: Map<string, GIAttribMap> = new Map();\r\n    private colls: Map<string, GIAttribMap> = new Map();\r\n    // all maps\r\n    private attrib_maps = {\r\n        po: this.posis,\r\n        _v: this.verts,\r\n        _e: this.edges,\r\n        _w: this.wires,\r\n        _f: this.faces,\r\n        co: this.colls\r\n    };\r\n   /**\r\n     * Creates an object to store the attribute data.\r\n     * @param model The JSON data\r\n     */\r\n    constructor(model: GIModel) {\r\n        this.model = model;\r\n    }\r\n    /**\r\n     * Returns the JSON data for this model.\r\n     */\r\n    public getData(): IAttribsData {\r\n        return {\r\n            positions: Array.from(this.posis.values()).map(attrib => attrib.getData()),\r\n            vertices: Array.from(this.verts.values()).map(attrib => attrib.getData()),\r\n            edges: Array.from(this.edges.values()).map(attrib => attrib.getData()),\r\n            wires: Array.from(this.wires.values()).map(attrib => attrib.getData()),\r\n            faces: Array.from(this.faces.values()).map(attrib => attrib.getData()),\r\n            collections: Array.from(this.colls.values()).map(attrib => attrib.getData())\r\n        };\r\n    }\r\n    /**\r\n     * Adds data to this model from JSON data.\r\n     * The existing data in the model is not deleted.\r\n     * @param attribs_data The JSON data\r\n     */\r\n    public addData(attribs_data: IAttribsData): void {\r\n        // Helper function to ddd attributes to model\r\n        function _addAttribsData(exist_attribs_map:  Map<string, GIAttribMap>, new_attribs_data: IAttribData[], offset: number): void {\r\n            new_attribs_data.forEach( new_attrib_data => {\r\n                if (!exist_attribs_map.has(new_attrib_data.name)) {\r\n                    exist_attribs_map.set(new_attrib_data.name, new GIAttribMap(new_attrib_data));\r\n                } else {\r\n                    exist_attribs_map.get(new_attrib_data.name).addData(new_attrib_data, offset);\r\n                }\r\n            });\r\n        }\r\n        _addAttribsData(this.posis, attribs_data.positions, this.model.geom().numPosis());\r\n        _addAttribsData(this.verts, attribs_data.vertices, this.model.geom().numVerts());\r\n        _addAttribsData(this.edges, attribs_data.edges, this.model.geom().numEdges());\r\n        _addAttribsData(this.wires, attribs_data.wires, this.model.geom().numWires());\r\n        _addAttribsData(this.faces, attribs_data.faces, this.model.geom().numFaces());\r\n        _addAttribsData(this.colls, attribs_data.collections, this.model.geom().numColls());\r\n    }\r\n    // ============================================================================\r\n    // Private methods\r\n    // ============================================================================\r\n    /**\r\n     * Creates a new attribte.\r\n     * @param type_str The level at which to create the attribute.\r\n     * @param name The name of the attribute.\r\n     * @param data_type The data type of the attribute.\r\n     * @param data_size The data size of the attribute. For example, an XYZ vector has size=3.\r\n     */\r\n    private _addAttrib(type_str: EEntityTypeStr, name: string, data_type: EAttribDataTypeStrs, data_size: number): GIAttribMap {\r\n        const attribs: Map<string, GIAttribMap> = this.attrib_maps[type_str];\r\n        if (!attribs.has(name)) {\r\n            const attrib: GIAttribMap = new GIAttribMap({name: name, data_type: data_type, data_size: data_size, data: []});\r\n            attribs.set(name, attrib);\r\n        }\r\n        return attribs[name];\r\n    }\r\n    // ============================================================================\r\n    // Public methods\r\n    // ============================================================================\r\n    /**\r\n     * Set an entity attrib value\r\n     * @param id\r\n     * @param name\r\n     * @param value\r\n     */\r\n    public setAttribValue(id: string, name: string, value: TAttribDataTypes): void {\r\n        const [type_str, index]: [string, number] = idBreak(id);\r\n        const attribs: Map<string, GIAttribMap> = this.attrib_maps[type_str];\r\n        if (attribs.get(name) === undefined) { throw new Error('Attribute does not exist.'); }\r\n        attribs.get(name).set(index, value);\r\n    }\r\n    /**\r\n     * Get an entity attrib value\r\n     * @param id\r\n     * @param name\r\n     */\r\n    public getAttribValue(id: string, name: string): TAttribDataTypes {\r\n        const [type_str, index]: [string, number] = idBreak(id);\r\n        const attribs: Map<string, GIAttribMap> = this.attrib_maps[type_str];\r\n        if (attribs.get(name) === undefined) { throw new Error('Attribute does not exist.'); }\r\n        return attribs.get(name).get(index);\r\n    }\r\n    /**\r\n     * Shortcut for getting coordinates from a numeric index (i.e. this is not an ID)\r\n     * @param posi_i\r\n     */\r\n    public getPosiCoord(posi_i: number): TCoord {\r\n        return this.posis.get('coordinates').get(posi_i) as TCoord;\r\n    }\r\n    // ============================================================================\r\n    // Get entity attrib names\r\n    // ============================================================================\r\n    public getPosiAttribNames(): string[] {\r\n        return Array.from(this.posis.keys());\r\n    }\r\n    public getVertAttribNames(): string[] {\r\n        return Array.from(this.verts.keys());\r\n    }\r\n    public getEdgeAttribNames(): string[] {\r\n        return Array.from(this.edges.keys());\r\n    }\r\n    public getWireAttribNames(): string[] {\r\n        return Array.from(this.wires.keys());\r\n    }\r\n    public getFaceAttribNames(): string[] {\r\n        return Array.from(this.faces.keys());\r\n    }\r\n    public getCollAttribNames(): string[] {\r\n        return Array.from(this.colls.keys());\r\n    }\r\n   // ============================================================================\r\n    // Add an entity attrib\r\n    // ============================================================================\r\n    public addPosiAttrib(name: string, data_type: EAttribDataTypeStrs, data_size: number): GIAttribMap {\r\n        return this._addAttrib(EEntityTypeStr.POSI, name, data_type, data_size);\r\n    }\r\n    public addVertAttrib(name: string, data_type: EAttribDataTypeStrs, data_size: number): GIAttribMap {\r\n        return this._addAttrib(EEntityTypeStr.VERT, name, data_type, data_size);\r\n    }\r\n    public addEdgeAttrib(name: string, data_type: EAttribDataTypeStrs, data_size: number): GIAttribMap {\r\n        return this._addAttrib(EEntityTypeStr.EDGE, name, data_type, data_size);\r\n    }\r\n    public addWireAttrib(name: string, data_type: EAttribDataTypeStrs, data_size: number): GIAttribMap {\r\n        return this._addAttrib(EEntityTypeStr.WIRE, name, data_type, data_size);\r\n    }\r\n    public addFaceAttrib(name: string, data_type: EAttribDataTypeStrs, data_size: number): GIAttribMap {\r\n        return this._addAttrib(EEntityTypeStr.FACE, name, data_type, data_size);\r\n    }\r\n    public addCollAttrib(name: string, data_type: EAttribDataTypeStrs, data_size: number): GIAttribMap {\r\n        return this._addAttrib(EEntityTypeStr.COLL, name, data_type, data_size);\r\n    }\r\n    // ============================================================================\r\n    // Threejs\r\n    // For methods to get the array of edges and triangles, see the geom class\r\n    // get3jsTris() and get3jsEdges()\r\n    // ============================================================================\r\n    /**\r\n     * Get a flat array of all the coordinates of all the vertices.\r\n     * @param verts An array of vertex indicies pointing to the coordinates.\r\n     */\r\n    public get3jsSeqVertsCoords(verts: number[]): number[] {\r\n        const coords_attrib: GIAttribMap = this.posis.get('coordinates');\r\n        const coords_keys: number[] = coords_attrib.getSeqKeys();\r\n        const coords_values: TAttribDataTypes[] = coords_attrib.getSeqValues();\r\n        const verts_cords_values: number[] = [];\r\n        verts.forEach( coords_i => verts_cords_values.push(...coords_values[coords_keys[coords_i]] as number[]));\r\n        return verts_cords_values;\r\n    }\r\n    /**\r\n     * Get a flat array of attribute values for all the vertices.\r\n     * @param attrib_name The name of the vertex attribute. Either NORMAL or COLOR.\r\n     */\r\n    public get3jsSeqVertsAttrib(attrib_name: string): number[] {\r\n        if (!this.verts.has(attrib_name)) { return null; }\r\n        const attrib_map: GIAttribMap = this.verts.get(attrib_name);\r\n        const attrib_keys: number[] = attrib_map.getSeqKeys();\r\n        const attrib_values: TAttribDataTypes[] = attrib_map.getSeqValues();\r\n        const result = [].concat(...attrib_keys.map(attrib_key => attrib_values[attrib_key]));\r\n        return result;\r\n    }\r\n}\r\n","// Enum\r\nexport enum EEntityTypeStr {\r\n    POSI = 'po',\r\n    TRI  = '_t',\r\n    VERT = '_v',\r\n    EDGE = '_e',\r\n    WIRE = '_w',\r\n    FACE = '_f',\r\n    POINT = 'pt',\r\n    LINE = 'ls',\r\n    PGON = 'pg',\r\n    COLL = 'co'\r\n}\r\n// Names of attributes\r\nexport enum EAttribNames {\r\n    COORDS = 'coordinates',\r\n    NORMAL = 'normal',\r\n    COLOR = 'color'\r\n}\r\n\r\n// ============================================================================\r\n// Each entity in the model can be accessed using an ID string.\r\n// Below are functions for breaking ID strings into the component parts\r\n// IDs start with two characters followed by numeric digits.\r\n// For example '_v22' is vertex number 22.\r\n// ============================================================================\r\nexport function idBreak(id: string): [string, number] {\r\n    return [idEntityTypeStr(id), idIndex(id)];\r\n}\r\nexport function idIndex(id: string): number {\r\n    return Number(id.slice(2));\r\n}\r\nexport function idIndicies(ids: string[]): number[] {\r\n    return ids.map( id => Number(id.slice(2)));\r\n}\r\nexport function idEntityTypeStr(id: string): EEntityTypeStr {\r\n    return id.slice(0, 2) as EEntityTypeStr;\r\n}\r\n","import { TTri, TVert, TEdge, TWire, TFace, TColl, IGeomData, TPoint, TLine, TPgon, TCoord } from './GIJson';\r\nimport { GIModel } from './GIModel';\r\nimport { EEntityTypeStr, idBreak, idIndex, idIndicies } from './GICommon';\r\nimport { triangulate } from '../triangulate/triangulate';\r\n\r\n/**\r\n * Class for geometry.\r\n */\r\nexport class GIGeom {\r\n    private model: GIModel;\r\n    // positions\r\n    private num_posis = 0; // The total number of positions in the model.\r\n    private rev_posis_verts: number[][] = []; // 1 position -> many vertices\r\n    // triangles\r\n    private tris: TTri[] = []; // 1 triangles -> 3 vertices\r\n    private rev_tris_faces: number[] = []; // 1 tri -> 1 face\r\n    // vertices\r\n    private verts: TVert[] = []; // many vertices -> 1 position\r\n    private rev_verts_edges: number[] = []; // 1 vertex -> 1 edge\r\n    private rev_verts_tris: number[] = []; // 1 vertex -> 1 tri // TODO add code to update this\r\n    private rev_verts_points: number[] = []; // 1 vertex -> 1 point\r\n    // edges\r\n    private edges: TEdge[] = []; // 1 edge -> 2 vertices\r\n    private rev_edges_wires: number[] = []; // 1 edge -> 1 wire\r\n    // wires\r\n    private wires: TWire[] = []; // 1 wire -> many edges\r\n    private rev_wires_faces: number[] = []; // 1 wire -> 1 face\r\n    private rev_wires_lines: number[] = []; // 1 wire -> 1 line\r\n    // faces\r\n    private faces: TFace[] = []; // 1 face -> many wires\r\n    private rev_faces_pgons: number[] = []; // 1 face -> 1 pgon\r\n    // points\r\n    private points: TPoint[] = []; // 1 point -> 1 vertex\r\n    private rev_points_colls: number[] = []; // 1 point -> 1 collection\r\n    // polylines\r\n    private lines: TLine[] = []; // 1 polyline -> 1 wire\r\n    private rev_lines_colls: number[] = []; // 1 line -> 1 collection\r\n    // polygons\r\n    private pgons: TPgon[] = []; // 1 polygon -> 1 face\r\n    private rev_pgons_colls: number[] = []; // 1 pgon -> 1 collection\r\n    // collections\r\n    private colls: TColl[] = []; // 1 collection -> many points, many polylines, many polygons\r\n    // all arrays\r\n    private geom_arrs = {\r\n        _t: this.tris,\r\n        _v: this.verts,\r\n        _e: this.edges,\r\n        _w: this.wires,\r\n        _f: this.faces,\r\n        pt: this.points,\r\n        ls: this.lines,\r\n        pg: this.pgons,\r\n        co: this.colls\r\n    };\r\n    /**\r\n     * Creates an object to store the geometry data.\r\n     * @param geom_data The JSON data\r\n     */\r\n    constructor(model: GIModel) {\r\n        this.model = model;\r\n    }\r\n    /**\r\n     * Returns the JSON data for this model.\r\n     */\r\n    public getData(): IGeomData {\r\n        return {\r\n            num_positions: this.num_posis,\r\n            triangles: this.tris,\r\n            vertices: this.verts,\r\n            edges: this.edges,\r\n            wires: this.wires,\r\n            faces: this.faces,\r\n            points: this.points,\r\n            linestrings: this.lines,\r\n            polygons: this.pgons,\r\n            collections: this.colls\r\n        };\r\n    }\r\n    /**\r\n     * Adds data to this model from JSON data.\r\n     * The existing data in the model is not deleted.\r\n     * @param geom_data The JSON data\r\n     */\r\n    public addData(geom_data: IGeomData): void {\r\n        // get lengths before we start adding stuff\r\n        const num_tris: number = this.tris.length;\r\n        const num_verts: number = this.verts.length;\r\n        const num_edges: number = this.edges.length;\r\n        const num_wires: number = this.wires.length;\r\n        const num_faces: number = this.faces.length;\r\n        const num_points: number = this.points.length;\r\n        const num_lines: number = this.lines.length;\r\n        const num_pgons: number = this.pgons.length;\r\n        const num_colls: number = this.colls.length;\r\n        // Add triangles to model\r\n        const new_triangles: TTri[] = geom_data.triangles.map(t => t.map(p => p + this.num_posis ) as TTri);\r\n        this.tris.push( ...new_triangles );\r\n        // Add vertices to model\r\n        const new_verts: TVert[] = geom_data.vertices.map(p => p + this.num_posis as TVert);\r\n        this.verts.push( ...new_verts );\r\n        // Add edges to model\r\n        const new_edges: TEdge[] = geom_data.edges.map(e => e.map(v => v + num_verts) as TEdge);\r\n        this.edges.push( ...new_edges );\r\n        // Add wires to model\r\n        const new_wires: TWire[] = geom_data.wires.map(w => w.map(e => e + num_edges) as TWire);\r\n        this.wires.push( ...new_wires );\r\n        // Add faces to model\r\n        const new_faces: TFace[] = geom_data.faces.map(f => [\r\n            f[0].map( w => w + num_wires),\r\n            f[1].map( t => t + num_tris)\r\n        ] as TFace);\r\n        this.faces.push( ...new_faces );\r\n        // Add points to model\r\n        const new_points: TPoint[] = geom_data.points.map(v => v + num_verts as TPoint);\r\n        this.points.push( ...new_points );\r\n        // Add lines to model\r\n        const new_lines: TLine[] = geom_data.linestrings.map(w => w + num_wires as TLine);\r\n        this.lines.push( ...new_lines );\r\n        // Add pgons to model\r\n        const new_pgons: TPgon[] = geom_data.polygons.map(f => f + num_faces as TPgon);\r\n        this.pgons.push( ...new_pgons );\r\n        // Add collections to model\r\n        const new_colls: TColl[] = geom_data.collections.map(c => [\r\n            c[0] === -1 ? -1 : c[0] + num_colls,\r\n            c[1].map( point => point + num_points),\r\n            c[2].map( line => line + num_lines),\r\n            c[3].map( pgon => pgon + num_pgons)\r\n        ] as TColl);\r\n        this.colls.push( ...new_colls );\r\n        // Update the reverse arrays\r\n        this._updateRevArrays();\r\n        // update the positions array\r\n        this.num_posis += geom_data.num_positions;\r\n    }\r\n    // ============================================================================\r\n    // Private methods\r\n    // ============================================================================\r\n    /**\r\n     * Updates the rev arrays the create the reveres links.\r\n     */\r\n    private _updateRevArrays() {\r\n        // positions\r\n        this.rev_posis_verts = [];\r\n        this.verts.forEach( (pos_i, vert_i) => {\r\n            if (this.rev_posis_verts[pos_i] === undefined) {\r\n                this.rev_posis_verts[pos_i] = [];\r\n            }\r\n            this.rev_posis_verts[pos_i].push(vert_i);\r\n        });\r\n        // tris, edges, wires, faces\r\n        this.rev_verts_tris = [];\r\n        this.tris.forEach( (vert_i_arr, tri_i) => {\r\n            vert_i_arr.forEach( vert_i => {\r\n                this.rev_verts_tris[vert_i] = tri_i;\r\n            });\r\n        });\r\n        this.rev_verts_edges = [];\r\n        this.edges.forEach( (vert_i_arr, edge_i) => {\r\n            vert_i_arr.forEach( vert_i => {\r\n                this.rev_verts_edges[vert_i] = edge_i;\r\n            });\r\n        });\r\n        this.rev_edges_wires = [];\r\n        this.wires.forEach( (edge_i_arr, wire_i) => {\r\n            edge_i_arr.forEach( edge_i => {\r\n                this.rev_edges_wires[edge_i] = wire_i;\r\n            });\r\n        });\r\n        this.rev_wires_faces = [];\r\n        this.rev_tris_faces = [];\r\n        this.faces.forEach( ([wire_i_arr, tri_i_arr], face_i) => {\r\n            wire_i_arr.forEach( wire_i => {\r\n                this.rev_wires_faces[wire_i] = face_i;\r\n            });\r\n            tri_i_arr.forEach( tri_i => {\r\n                this.rev_tris_faces[tri_i] = face_i;\r\n            });\r\n        });\r\n        // points, lines, polygons\r\n        this.rev_verts_points = [];\r\n        this.points.forEach( (vert_i, point_i) => {\r\n            this.rev_verts_points[vert_i] = point_i;\r\n        });\r\n        this.rev_wires_lines = [];\r\n        this.lines.forEach( (wire_i, line_i) => {\r\n            this.rev_wires_lines[wire_i] = line_i;\r\n        });\r\n        this.rev_faces_pgons = [];\r\n        this.pgons.forEach( (face_i, pgon_i) => {\r\n            this.rev_faces_pgons[face_i] = pgon_i;\r\n        });\r\n        // collections of points, linestrings, polygons\r\n        this.rev_points_colls = [];\r\n        this.rev_lines_colls = [];\r\n        this.rev_pgons_colls = [];\r\n        this.colls.forEach( ([parent, point_i_arr, line_i_arr, pgon_i_arr], coll_i) => {\r\n            point_i_arr.forEach( point_i => {\r\n                this.rev_points_colls[point_i] = coll_i;\r\n            });\r\n            line_i_arr.forEach( line_i => {\r\n                this.rev_lines_colls[line_i] = coll_i;\r\n            });\r\n            pgon_i_arr.forEach( pgon_i => {\r\n                this.rev_pgons_colls[pgon_i] = coll_i;\r\n            });\r\n        });\r\n    }\r\n    // ============================================================================\r\n    // Navigate down the hierarchy\r\n    // ============================================================================\r\n    private _navVertToPosi(vert: number): number {\r\n        return this.verts[vert];\r\n    }\r\n    private _navEdgeToVert(edge: number): number[] {\r\n        return this.edges[edge];\r\n    }\r\n    private _navWireToEdge(wire: number): number[] {\r\n        return this.wires[wire];\r\n    }\r\n    private _navFaceToWire(face: number): number[] {\r\n        return this.faces[face][0];\r\n    }\r\n    private _navFaceToTri(face: number): number[] {\r\n        return this.faces[face][1];\r\n    }\r\n    private _navPointToVert(point: number): number {\r\n        return this.points[point];\r\n    }\r\n    private _navLineToVert(line: number): number {\r\n        return this.lines[line];\r\n    }\r\n    private _navPgonToVert(pgon: number): number {\r\n        return this.pgons[pgon];\r\n    }\r\n    private _navCollToPoint(coll: number): number[] {\r\n        return this.colls[coll][1]; // coll points\r\n    }\r\n    private _navCollToLine(coll: number): number[] {\r\n        return this.colls[coll][2]; // coll lines\r\n    }\r\n    private _navCollToPgon(coll: number): number[] {\r\n        return this.colls[coll][3]; // coll pgons\r\n    }\r\n    private _navCollToColl(coll: number): number {\r\n        return coll[0]; // coll parent\r\n    }\r\n    // ============================================================================\r\n    // Navigate up the hierarchy\r\n    // ============================================================================\r\n    private _navPosiToVert(posi: number): number[] {\r\n        return this.rev_posis_verts[posi];\r\n    }\r\n    private _navVertToTri(vert: number): number {\r\n        return this.rev_verts_tris[vert];\r\n    }\r\n    private _navVertToEdge(vert: number): number {\r\n        return this.rev_verts_edges[vert];\r\n    }\r\n    private _navTriToFace(tri: number): number {\r\n        return this.rev_tris_faces[tri];\r\n    }\r\n    private _navEdgeToWire(edge: number): number {\r\n        return this.rev_edges_wires[edge];\r\n    }\r\n    private _navWireToFace(wire: number): number {\r\n        return this.rev_wires_faces[wire];\r\n    }\r\n    private _navVertToPoint(vert: number): number {\r\n        return this.rev_verts_points[vert];\r\n    }\r\n    private _navWireToLine(wire: number): number {\r\n        return this.rev_wires_lines[wire];\r\n    }\r\n    private _navFaceToPgon(face: number): number {\r\n        return this.rev_faces_pgons[face];\r\n    }\r\n    private _navPointToColl(point: number): number {\r\n        return this.rev_points_colls[point];\r\n    }\r\n    private _navLineToColl(line: number): number {\r\n        return this.rev_lines_colls[line];\r\n    }\r\n    private _navPgonToColl(pgon: number): number {\r\n        return this.rev_pgons_colls[pgon];\r\n    }\r\n    // ============================================================================\r\n    // Create the topological entities, these methods are never public\r\n    // ============================================================================\r\n    /**\r\n     * Adds a vertex and updates the rev array.\r\n     * @param posi_i\r\n     */\r\n    private _addVertex(posi_i: number): number {\r\n        const vert_i: number = this.verts.push(posi_i) - 1;\r\n        if (this.rev_posis_verts[posi_i] === undefined) {\r\n            this.rev_posis_verts[posi_i] = [];\r\n        }\r\n        this.rev_posis_verts[posi_i].push(vert_i);\r\n        return vert_i;\r\n    }\r\n    /**\r\n     * Adds an edge and updates the rev array.\r\n     * @param vert_i1\r\n     * @param vert_i2\r\n     */\r\n    private _addEdge(vert_i1: number, vert_i2: number): number {\r\n        const edge_i: number = this.edges.push([vert_i1, vert_i2]) - 1;\r\n        this.rev_verts_edges[vert_i1] = edge_i;\r\n        this.rev_verts_edges[vert_i2] = edge_i;\r\n        return edge_i;\r\n    }\r\n    /**\r\n     * Adds a wire and updates the rev array.\r\n     * Edges are assumed to be sequential!\r\n     * @param edges_i\r\n     */\r\n    private _addWire(edges_i: number[], close: boolean = false): number {\r\n        const wire_i: number = this.wires.push(edges_i) - 1;\r\n        edges_i.forEach( edge_i => this.rev_edges_wires[edge_i] = wire_i );\r\n        return wire_i;\r\n    }\r\n    /**\r\n     * Adds a face and updates the rev array.\r\n     * Wires are assumed to be closed!\r\n     * No holes yet... TODO\r\n     * @param wire_i\r\n     */\r\n    private _addFace(wire_i: number): number {\r\n        // create the triangles\r\n        const wire_verts_i: number[] = this._getWireVerts(wire_i);\r\n        const wire_posis_i: number[] = wire_verts_i.map( vert_i => this.verts[vert_i] );\r\n        const wire_coords: TCoord[] = wire_posis_i.map( posi_i => this.model.attribs().getPosiCoord(posi_i) );\r\n        const tris_corners: number[][] = triangulate(wire_coords);\r\n        const tris_posis_i: TTri[] = tris_corners.map(tri_corners => tri_corners.map( corner => wire_verts_i[corner] ) as TTri );\r\n        const tris_i: number[] = tris_posis_i.map(tri_posis_i => this.tris.push(tri_posis_i) - 1);\r\n        // create the face\r\n        const face: TFace = [[wire_i], tris_i];\r\n        const face_i: number = this.faces.push(face);\r\n        return face_i;\r\n    }\r\n    /**\r\n     * Helper function to get check if wire is closed\r\n     */\r\n    private _istWireClosed(wire_i: number): boolean {\r\n        const edges_i: number[] = this.wires[wire_i];\r\n        return this.edges[edges_i[0]][0] === this.edges[edges_i[edges_i.length - 1]][1];\r\n    }\r\n    /**\r\n     * Helper function to get the vertices of a wire\r\n     * The function check is the wire is closed and returns correct number of vertices.\r\n     * For a cloased wire, #vertices = #edges\r\n     * For an open wire, #vertices = #edges + 1\r\n     */\r\n    private _getWireVerts(wire_i: number): number[] {\r\n        const edges_i: number[] = this.wires[wire_i];\r\n        const verts_i: number[] = edges_i.map(edge_i => this.edges[edge_i][0]);\r\n        if (this.edges[edges_i[0]][0] !== this.edges[edges_i[edges_i.length - 1]][1]) {\r\n            verts_i.push(this.edges[edges_i[edges_i.length - 1]][1]);\r\n        }\r\n        return verts_i;\r\n    }\r\n    // ============================================================================\r\n    // Create geometry, all these public methods return an string ID\r\n    // ============================================================================\r\n    /**\r\n     * Adds a new position to the model and returns the index to that position.\r\n     */\r\n    public addPosition(): string {\r\n        this.num_posis += 1;\r\n        const i = this.num_posis - 1;\r\n        return EEntityTypeStr.POSI + i;\r\n    }\r\n    /**\r\n     * Adds a new point entity to the model.\r\n     * @param posi_id The position for the point.\r\n     */\r\n    public addPoint(posi_id: string): string {\r\n        const posi_i: number = idIndex(posi_id);\r\n        // create verts\r\n        const vert_i = this._addVertex(posi_i);\r\n        // create point\r\n        const point_i: number = this.points.push(vert_i) - 1;\r\n        this.rev_verts_points[vert_i] = point_i;\r\n        return EEntityTypeStr.POINT + point_i;\r\n    }\r\n    /**\r\n     * Adds a new linestring entity to the model.\r\n     * @param posis_id\r\n     */\r\n    public addLine(posis_id: string[], close: boolean = false): string {\r\n        const posis_i: number[] = idIndicies(posis_id);\r\n        // create verts, edges, wires\r\n        const vert_i_arr: number[] = posis_i.map( posi_i => this._addVertex(posi_i));\r\n        const edges_i_arr: number[] = [];\r\n        for (let i = 0; i < vert_i_arr.length - 1; i++) {\r\n            edges_i_arr.push( this._addEdge(vert_i_arr[i], vert_i_arr[i + 1]));\r\n        }\r\n        if (close) {\r\n            edges_i_arr.push( this._addEdge(vert_i_arr[vert_i_arr.length - 1], vert_i_arr[0]));\r\n        }\r\n        const wire_i: number = this._addWire(edges_i_arr, close);\r\n        // create line\r\n        const line_i: number = this.lines.push(wire_i) - 1;\r\n        this.rev_wires_lines[wire_i] = line_i;\r\n        return EEntityTypeStr.LINE + line_i;\r\n    }\r\n    /**\r\n     * Adds a new polygon entity to the model.\r\n     * @param posis_id\r\n     */\r\n    public addPgon(posis_id: string[]): string {\r\n        const posis_i: number[] = idIndicies(posis_id);\r\n        // create verts, edges, wires, faces\r\n        const vert_i_arr: number[] = posis_i.map( posi_i => this._addVertex(posi_i));\r\n        const edges_i_arr: number[] = [];\r\n        for (let i = 0; i < vert_i_arr.length - 1; i++) {\r\n            edges_i_arr.push( this._addEdge(vert_i_arr[i], vert_i_arr[i + 1]));\r\n        }\r\n        edges_i_arr.push( this._addEdge(vert_i_arr[vert_i_arr.length - 1], vert_i_arr[0]));\r\n        const wire_i: number = this._addWire(edges_i_arr, true);\r\n        const face_i: number = this._addFace(wire_i);\r\n        // create polygon\r\n        const pgon_i: number = this.pgons.push(face_i) - 1;\r\n        this.rev_faces_pgons[face_i] = pgon_i;\r\n        return EEntityTypeStr.PGON + pgon_i;\r\n    }\r\n    /**\r\n     * Adds a collection and updates the rev array.\r\n     * @param parent_id\r\n     * @param points_id\r\n     * @param lines_id\r\n     * @param pgons_id\r\n     */\r\n    private addColl(parent_id: string, points_id: string[], lines_id: string[], pgons_id: string[]): string {\r\n        const parent_i: number = idIndex(parent_id);\r\n        const points_i: number[] = idIndicies(points_id);\r\n        const lines_i: number[] = idIndicies(lines_id);\r\n        const pgons_i: number[] = idIndicies(pgons_id);\r\n        // create collection\r\n        const coll_i: number = this.colls.push([parent_i, points_i, lines_i, pgons_i]) - 1;\r\n        points_i.forEach( point_i => this.rev_points_colls[point_i] = coll_i);\r\n        lines_i.forEach( line_i => this.rev_points_colls[line_i] = coll_i);\r\n        pgons_i.forEach( pgon_i => this.rev_points_colls[pgon_i] = coll_i);\r\n        return EEntityTypeStr.COLL + coll_i;\r\n    }\r\n    // ============================================================================\r\n    // Check if entity exists\r\n    // ============================================================================\r\n    public has(id: string): boolean {\r\n        const [type_str, index]: [string, number] = idBreak(id);\r\n        return (this.geom_arrs[type_str][index] !== undefined);\r\n    }\r\n    // ============================================================================\r\n    // Get arrays of entities, these retrun arrays of string IDs\r\n    // ============================================================================\r\n    public getPosis(): string[] {\r\n        return Array(this.num_posis).map( (_, index) =>  EEntityTypeStr.POSI + index );\r\n    }\r\n    public getVerts(): string[] {\r\n        return this.verts.map( (_, index) =>  EEntityTypeStr.VERT + index );\r\n    }\r\n    public getTris(): string[] {\r\n        return this.tris.map( (_, index) =>  EEntityTypeStr.TRI + index );\r\n    }\r\n    public getEdges(): string[] {\r\n        return this.edges.map( (_, index) =>  EEntityTypeStr.EDGE + index );\r\n    }\r\n    public getWires(): string[] {\r\n        return this.wires.map( (_, index) =>  EEntityTypeStr.WIRE + index );\r\n    }\r\n    public getFaces(): string[] {\r\n        return this.faces.map( (_, index) =>  EEntityTypeStr.FACE + index );\r\n    }\r\n    public getPoints(): string[] {\r\n        return this.points.map( (_, index) =>  EEntityTypeStr.POINT + index );\r\n    }\r\n    public getLines(): string[] {\r\n        return this.lines.map( (_, index) =>  EEntityTypeStr.LINE + index );\r\n    }\r\n    public getPgons(): string[] {\r\n        return this.pgons.map( (_, index) =>  EEntityTypeStr.PGON + index );\r\n    }\r\n    public getColls(): string[] {\r\n        return this.colls.map( (_, index) =>  EEntityTypeStr.COLL + index );\r\n    }\r\n\r\n    // ============================================================================\r\n    // Get array lengths\r\n    // ============================================================================\r\n    public numPosis(): number {\r\n        return this.num_posis;\r\n    }\r\n    public numVerts(): number {\r\n        return this.verts.length;\r\n    }\r\n    public numEdges(): number {\r\n        return this.edges.length;\r\n    }\r\n    public numWires(): number {\r\n        return this.wires.length;\r\n    }\r\n    public numFaces(): number {\r\n        return this.faces.length;\r\n    }\r\n    public numCollections(): number {\r\n        return this.colls.length;\r\n    }\r\n    public numPoints(): number {\r\n        return this.points.length;\r\n    }\r\n    public numLines(): number {\r\n        return this.lines.length;\r\n    }\r\n    public numPgons(): number {\r\n        return this.pgons.length;\r\n    }\r\n    public numColls(): number {\r\n        return this.colls.length;\r\n    }\r\n    // ============================================================================\r\n    // ThreeJS\r\n    // Get arrays for threejs, these retrun arrays of indexes to positions\r\n    // For a method to get the array of positions, see the attrib class\r\n    // getSeqCoords()\r\n    // ============================================================================\r\n    /**\r\n     * Returns a flat list of all vertices.\r\n     * The indices in the list point to the sequential coordinates.\r\n     */\r\n    public get3jsVerts(): number[] {\r\n        return this.verts;\r\n    }\r\n    /**\r\n     * Returns a flat list of the sequence of verices for all the triangles.\r\n     * This list will be assumed to be in pairs.\r\n     * The indices in the list point to the vertices.\r\n     */\r\n    public get3jsTris(): number[] {\r\n        return [].concat(...this.tris);\r\n    }\r\n    /**\r\n     * Returns a flat list of the sequence of verices for all the edges.\r\n     * This list will be assumed to be in pairs.\r\n     * The indices in the list point to the vertices.\r\n     */\r\n    public get3jsEdges(): number[] {\r\n        return [].concat(...this.edges);\r\n    }\r\n    /**\r\n     * Returns a flat list of the sequence of verices for all the points.\r\n     * The indices in the list point to the vertices.\r\n     */\r\n    public get3jsPoints(): number[] {\r\n        return this.points;\r\n    }\r\n}\r\n","// enums\r\nexport enum EAttribDataTypeStrs {\r\n    INT = 'Int',\r\n    FLOAT = 'Float',\r\n    STRING = 'String'\r\n}\r\n\r\n// types\r\nexport type TCoord = [number, number, number];\r\nexport type TTri = [number, number, number]; // [position, position, position]\r\nexport type TVert = number; // positions\r\nexport type TEdge = [number, number]; // [vertex, vertex]\r\nexport type TWire = number[]; // [edge, edge,....]\r\nexport type TFace = [number[], number[]]; // [[wire, ....], [triangle, ...]]\r\nexport type TPoint = number; // [vertex,....]\r\nexport type TLine = number; // [wire,....]\r\nexport type TPgon = number; // [face,....]\r\nexport type TColl = [number, number[], number[], number[]]; // [parent, [point, ...], [polyline, ...], [polygon, ....]]\r\nexport type TEntity = TTri | TVert | TEdge | TWire | TFace | TPoint | TLine | TPgon | TColl;\r\nexport type TAttribDataTypes = string | string[] | number | number[];\r\nexport type TAttribValuesArr = Array<[number[], TAttribDataTypes]>;\r\n// interfaces for JSON data\r\n\r\nexport interface IGeomData {\r\n    num_positions: number;\r\n    triangles: TTri[];\r\n    vertices: TVert[];\r\n    edges: TEdge[];\r\n    wires: TWire[];\r\n    faces: TFace[];\r\n    points: TPoint[];\r\n    linestrings: TLine[];\r\n    polygons: TPgon[];\r\n    collections: TColl[];\r\n}\r\nexport interface IAttribData {\r\n    name: string;\r\n    data_type: EAttribDataTypeStrs;\r\n    data_size: number;\r\n    data: TAttribValuesArr;\r\n}\r\nexport interface IAttribsData {\r\n    positions: IAttribData[];\r\n    vertices: IAttribData[];\r\n    edges: IAttribData[];\r\n    wires: IAttribData[];\r\n    faces: IAttribData[];\r\n    collections: IAttribData[];\r\n}\r\nexport interface IModelData {\r\n    geometry: IGeomData;\r\n    attributes: IAttribsData;\r\n}\r\n","import { IModelData, IGeomData, IAttribsData, TPoint } from './GIJson';\r\nimport { GIGeom } from './GIGeom';\r\nimport { GIAttribs } from './GIAttribs';\r\nimport { EAttribNames, EEntityTypeStr } from './GICommon';\r\nimport { IThreeJS } from './ThreejsJSON';\r\n/**\r\n * Geo-info model class.\r\n */\r\nexport class GIModel {\r\n    private _geom: GIGeom;\r\n    private _attribs: GIAttribs;\r\n    /**\r\n     * Creates a model.\r\n     * @param model_data The JSON data\r\n     */\r\n    constructor(model_data?: IModelData) {\r\n        this._geom = new GIGeom(this);\r\n        this._attribs = new GIAttribs(this);\r\n        if (model_data) {\r\n            this.addData(model_data);\r\n        }\r\n    }\r\n    // Getters and setters\r\n    public geom() {return this._geom; }\r\n    public attribs() {return this._attribs; }\r\n    /**\r\n     * Sets the data in this model from JSON data.\r\n     * The existing data in the model is deleted.\r\n     * @param model_data The JSON data\r\n     */\r\n    public addData (model_data: IModelData): void {\r\n        this._geom.addData(model_data.geometry);\r\n        this._attribs.addData(model_data.attributes);\r\n    }\r\n    /**\r\n     * Adds data to this model from JSON data.\r\n     * The existing data in the model is not deleted.\r\n     * @param model_data The JSON data\r\n     */\r\n    public merge(model: GIModel): void {\r\n        this._attribs.addData(model.getAttribsData()); // must be before addGeomData()\r\n        this._geom.addData(model.getGeomData());\r\n    }\r\n    /**\r\n     * Returns the JSON data for this model.\r\n     */\r\n    public getData(): IModelData {\r\n        return {\r\n            geometry: this._geom.getData(),\r\n            attributes: this._attribs.getData()\r\n        };\r\n    }\r\n    /**\r\n     * Returns the JSON data for the geometry in this model.\r\n     */\r\n    public getGeomData(): IGeomData {\r\n        return this._geom.getData();\r\n    }\r\n    /**\r\n     * Returns the JSON data for the attributes in this model.\r\n     */\r\n    public getAttribsData(): IAttribsData {\r\n        return this._attribs.getData();\r\n    }\r\n    /**\r\n     * Generate a default color if none exists.\r\n     */\r\n    private _generateColors(): number[] {\r\n        const colors = [];\r\n        for (let index = 0; index < this._geom.numVerts(); index++) {\r\n            colors.push(1, 1, 1);\r\n        }\r\n        return colors;\r\n    }\r\n    /**\r\n     * Generate default normals if non exist.\r\n     */\r\n    private _generateNormals(): number[] {\r\n        const normals = [];\r\n        for (let index = 0; index < this._geom.numVerts(); index++) {\r\n            normals.push(0, 0, 0);\r\n        }\r\n        return normals;\r\n    }\r\n    /**\r\n     * Returns arrays for visualization in Threejs.\r\n     */\r\n    public get3jsData(): IThreeJS {\r\n        // get the attrbs at the vertex level\r\n        const coords_values: number[] = this._attribs.get3jsSeqVertsCoords(this._geom.get3jsVerts());\r\n        let normals_values: number[] = this._attribs.get3jsSeqVertsAttrib(EAttribNames.NORMAL);\r\n        let colors_values: number[] = this._attribs.get3jsSeqVertsAttrib(EAttribNames.COLOR);\r\n        // add normals and colours\r\n        if (!normals_values) {\r\n            normals_values = this._generateNormals();\r\n        }\r\n        if (!colors_values) {\r\n            colors_values = this._generateColors();\r\n        }\r\n        // get the indices of the vertices for edges, points and triangles\r\n        const tris_verts_i: number[] = this._geom.get3jsTris();\r\n        const edges_verts_i: number[] = this._geom.get3jsEdges();\r\n        const points_verts_i: number[] = this._geom.get3jsPoints();\r\n        // return an object containing all the data\r\n        return {\r\n            positions: coords_values,\r\n            normals: normals_values,\r\n            colors: colors_values,\r\n            point_indices: points_verts_i,\r\n            edge_indices: edges_verts_i,\r\n            triangle_indices: tris_verts_i\r\n        };\r\n    }\r\n}\r\n","import * as three from 'three';\r\n\r\nconst EPS = 1e-6;\r\n/**\r\n * Utility functions for threejs.\r\n */\r\n\r\n // Matrices ======================================================================================================\r\n\r\nexport function multVectorMatrix(v: three.Vector3, m: three.Matrix4): three.Vector3 {\r\n    const v2: three.Vector3 = v.clone();\r\n    v2.applyMatrix4(m);\r\n    return v2;\r\n}\r\n\r\nexport function xformMatrix(o: three.Vector3, x: three.Vector3, y: three.Vector3, z: three.Vector3): three.Matrix4 {\r\n    x.normalize();\r\n    y.normalize();\r\n    z.normalize();\r\n    const m1: three.Matrix4 = new three.Matrix4();\r\n    const o_neg: three.Vector3 = o.clone().negate();\r\n    m1.setPosition(o_neg);\r\n    const m2: three.Matrix4 = new three.Matrix4();\r\n    m2.makeBasis(x, y, z);\r\n    m2.getInverse(m2);\r\n    const m3: three.Matrix4 = new three.Matrix4();\r\n    m3.multiplyMatrices(m2, m1);\r\n    return m3;\r\n}\r\n\r\nexport function matrixInv(m: three.Matrix4): three.Matrix4 {\r\n    const m2: three.Matrix4 = new three.Matrix4();\r\n    return m2.getInverse(m);\r\n}\r\n\r\n//  Vectors =======================================================================================================\r\n\r\nexport function subVectors(v1: three.Vector3, v2: three.Vector3, norm: boolean = false): three.Vector3 {\r\n    const v3: three.Vector3 = new three.Vector3();\r\n    v3.subVectors(v1, v2);\r\n    if (norm) {v3.normalize(); }\r\n    return v3;\r\n}\r\n\r\nexport function addVectors(v1: three.Vector3, v2: three.Vector3, norm: boolean = false): three.Vector3 {\r\n    const v3: three.Vector3 = new three.Vector3();\r\n    v3.addVectors(v1, v2);\r\n    if (norm) {v3.normalize(); }\r\n    return v3;\r\n}\r\n\r\nexport function crossVectors(v1: three.Vector3, v2: three.Vector3, norm: boolean = false): three.Vector3 {\r\n    const v3: three.Vector3 = new three.Vector3();\r\n    v3.crossVectors(v1, v2);\r\n    if (norm) {v3.normalize(); }\r\n    return v3;\r\n}\r\n","/**\r\n * @author Mugen87 / https://github.com/Mugen87\r\n * Port from https://github.com/mapbox/earcut (v2.1.2)\r\n */\r\n\r\nconst Earcut = {\r\n\r\n    triangulate: function ( data, holeIndices?, dim? ) {\r\n\r\n        dim = dim || 2;\r\n\r\n        const hasHoles = holeIndices && holeIndices.length;\r\n        const outerLen = hasHoles ? holeIndices[ 0 ] * dim : data.length;\r\n        let outerNode = linkedList( data, 0, outerLen, dim, true );\r\n        const triangles = [];\r\n\r\n        if ( ! outerNode ) { return triangles; }\r\n\r\n        let minX, minY, maxX, maxY, x, y, invSize;\r\n\r\n        if ( hasHoles ) { outerNode = eliminateHoles( data, holeIndices, outerNode, dim ); }\r\n\r\n        // if the shape is not too simple, we'll use z-order curve hash later; calculate polygon bbox\r\n\r\n        if ( data.length > 80 * dim ) {\r\n\r\n            minX = maxX = data[ 0 ];\r\n            minY = maxY = data[ 1 ];\r\n\r\n            for ( let i = dim; i < outerLen; i += dim ) {\r\n\r\n                x = data[ i ];\r\n                y = data[ i + 1 ];\r\n                if ( x < minX ) { minX = x; }\r\n                if ( y < minY ) { minY = y; }\r\n                if ( x > maxX ) { maxX = x; }\r\n                if ( y > maxY ) { maxY = y; }\r\n\r\n            }\r\n\r\n            // minX, minY and invSize are later used to transform coords into integers for z-order calculation\r\n\r\n            invSize = Math.max( maxX - minX, maxY - minY );\r\n            invSize = invSize !== 0 ? 1 / invSize : 0;\r\n\r\n        }\r\n\r\n        earcutLinked( outerNode, triangles, dim, minX, minY, invSize );\r\n\r\n        return triangles;\r\n\r\n    }\r\n\r\n};\r\n\r\n// create a circular doubly linked list from polygon points in the specified winding order\r\n\r\nfunction linkedList( data, start, end, dim, clockwise ) {\r\n\r\n    let i, last;\r\n\r\n    if ( clockwise === ( signedArea( data, start, end, dim ) > 0 ) ) {\r\n\r\n        for ( i = start; i < end; i += dim ) { last = insertNode( i, data[ i ], data[ i + 1 ], last ); }\r\n\r\n    } else {\r\n\r\n        for ( i = end - dim; i >= start; i -= dim ) { last = insertNode( i, data[ i ], data[ i + 1 ], last ); }\r\n\r\n    }\r\n\r\n    if ( last && equals( last, last.next ) ) {\r\n\r\n        removeNode( last );\r\n        last = last.next;\r\n\r\n    }\r\n\r\n    return last;\r\n\r\n}\r\n\r\n// eliminate colinear or duplicate points\r\n\r\nfunction filterPoints( start, end? ) {\r\n\r\n    if ( ! start ) { return start; }\r\n    if ( ! end ) { end = start; }\r\n\r\n    let p = start, again;\r\n\r\n    do {\r\n\r\n        again = false;\r\n\r\n        if ( ! p.steiner && ( equals( p, p.next ) || area( p.prev, p, p.next ) === 0 ) ) {\r\n\r\n            removeNode( p );\r\n            p = end = p.prev;\r\n            if ( p === p.next ) { break; }\r\n            again = true;\r\n\r\n        } else {\r\n\r\n            p = p.next;\r\n\r\n        }\r\n\r\n    } while ( again || p !== end );\r\n\r\n    return end;\r\n\r\n}\r\n\r\n// main ear slicing loop which triangulates a polygon (given as a linked list)\r\n\r\nfunction earcutLinked( ear, triangles, dim, minX, minY, invSize, pass? ) {\r\n\r\n    if ( ! ear ) { return; }\r\n\r\n    // interlink polygon nodes in z-order\r\n\r\n    if ( ! pass && invSize ) { indexCurve( ear, minX, minY, invSize ); }\r\n\r\n    let stop = ear, prev, next;\r\n\r\n    // iterate through ears, slicing them one by one\r\n\r\n    while ( ear.prev !== ear.next ) {\r\n\r\n        prev = ear.prev;\r\n        next = ear.next;\r\n\r\n        if ( invSize ? isEarHashed( ear, minX, minY, invSize ) : isEar( ear ) ) {\r\n\r\n            // cut off the triangle\r\n            triangles.push( prev.i / dim );\r\n            triangles.push( ear.i / dim );\r\n            triangles.push( next.i / dim );\r\n\r\n            removeNode( ear );\r\n\r\n            // skipping the next vertice leads to less sliver triangles\r\n            ear = next.next;\r\n            stop = next.next;\r\n\r\n            continue;\r\n\r\n        }\r\n\r\n        ear = next;\r\n\r\n        // if we looped through the whole remaining polygon and can't find any more ears\r\n\r\n        if ( ear === stop ) {\r\n\r\n            // try filtering points and slicing again\r\n\r\n            if ( ! pass ) {\r\n\r\n                earcutLinked( filterPoints( ear ), triangles, dim, minX, minY, invSize, 1 );\r\n\r\n                // if this didn't work, try curing all small self-intersections locally\r\n\r\n            } else if ( pass === 1 ) {\r\n\r\n                ear = cureLocalIntersections( ear, triangles, dim );\r\n                earcutLinked( ear, triangles, dim, minX, minY, invSize, 2 );\r\n\r\n            // as a last resort, try splitting the remaining polygon into two\r\n\r\n            } else if ( pass === 2 ) {\r\n\r\n                splitEarcut( ear, triangles, dim, minX, minY, invSize );\r\n\r\n            }\r\n\r\n            break;\r\n\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\n// check whether a polygon node forms a valid ear with adjacent nodes\r\n\r\nfunction isEar( ear ) {\r\n\r\n    const a = ear.prev,\r\n        b = ear,\r\n        c = ear.next;\r\n\r\n    if ( area( a, b, c ) >= 0 ) { return false; } // reflex, can't be an ear\r\n\r\n    // now make sure we don't have other points inside the potential ear\r\n    let p = ear.next.next;\r\n\r\n    while ( p !== ear.prev ) {\r\n\r\n        if ( pointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y ) && area( p.prev, p, p.next ) >= 0 ) {\r\n\r\n            return false;\r\n\r\n        }\r\n\r\n        p = p.next;\r\n\r\n    }\r\n\r\n    return true;\r\n\r\n}\r\n\r\nfunction isEarHashed( ear, minX, minY, invSize ) {\r\n\r\n    const a = ear.prev,\r\n        b = ear,\r\n        c = ear.next;\r\n\r\n    if ( area( a, b, c ) >= 0 ) { return false; } // reflex, can't be an ear\r\n\r\n    // triangle bbox; min & max are calculated like this for speed\r\n\r\n    const minTX = a.x < b.x ? ( a.x < c.x ? a.x : c.x ) : ( b.x < c.x ? b.x : c.x ),\r\n        minTY = a.y < b.y ? ( a.y < c.y ? a.y : c.y ) : ( b.y < c.y ? b.y : c.y ),\r\n        maxTX = a.x > b.x ? ( a.x > c.x ? a.x : c.x ) : ( b.x > c.x ? b.x : c.x ),\r\n        maxTY = a.y > b.y ? ( a.y > c.y ? a.y : c.y ) : ( b.y > c.y ? b.y : c.y );\r\n\r\n    // z-order range for the current triangle bbox;\r\n\r\n    const minZ = zOrder( minTX, minTY, minX, minY, invSize ),\r\n        maxZ = zOrder( maxTX, maxTY, minX, minY, invSize );\r\n\r\n    // first look for points inside the triangle in increasing z-order\r\n\r\n    let p = ear.nextZ;\r\n\r\n    while ( p && p.z <= maxZ ) {\r\n\r\n        if ( p !== ear.prev && p !== ear.next &&\r\n                pointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y ) &&\r\n                area( p.prev, p, p.next ) >= 0 ) { return false; }\r\n        p = p.nextZ;\r\n\r\n    }\r\n\r\n    // then look for points in decreasing z-order\r\n\r\n    p = ear.prevZ;\r\n\r\n    while ( p && p.z >= minZ ) {\r\n\r\n        if ( p !== ear.prev && p !== ear.next &&\r\n                pointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y ) &&\r\n                area( p.prev, p, p.next ) >= 0 ) { return false; }\r\n\r\n        p = p.prevZ;\r\n\r\n    }\r\n\r\n    return true;\r\n\r\n}\r\n\r\n// go through all polygon nodes and cure small local self-intersections\r\n\r\nfunction cureLocalIntersections( start, triangles, dim ) {\r\n\r\n    let p = start;\r\n\r\n    do {\r\n\r\n        const a = p.prev, b = p.next.next;\r\n\r\n        if ( ! equals( a, b ) && intersects( a, p, p.next, b ) && locallyInside( a, b ) && locallyInside( b, a ) ) {\r\n\r\n            triangles.push( a.i / dim );\r\n            triangles.push( p.i / dim );\r\n            triangles.push( b.i / dim );\r\n\r\n            // remove two nodes involved\r\n\r\n            removeNode( p );\r\n            removeNode( p.next );\r\n\r\n            p = start = b;\r\n\r\n        }\r\n\r\n        p = p.next;\r\n\r\n    } while ( p !== start );\r\n\r\n    return p;\r\n\r\n}\r\n\r\n// try splitting polygon into two and triangulate them independently\r\n\r\nfunction splitEarcut( start, triangles, dim, minX, minY, invSize ) {\r\n\r\n    // look for a valid diagonal that divides the polygon into two\r\n\r\n    let a = start;\r\n\r\n    do {\r\n\r\n        let b = a.next.next;\r\n\r\n        while ( b !== a.prev ) {\r\n\r\n            if ( a.i !== b.i && isValidDiagonal( a, b ) ) {\r\n\r\n                // split the polygon in two by the diagonal\r\n\r\n                let c = splitPolygon( a, b );\r\n\r\n                // filter colinear points around the cuts\r\n\r\n                a = filterPoints( a, a.next );\r\n                c = filterPoints( c, c.next );\r\n\r\n                // run earcut on each half\r\n\r\n                earcutLinked( a, triangles, dim, minX, minY, invSize );\r\n                earcutLinked( c, triangles, dim, minX, minY, invSize );\r\n                return;\r\n\r\n            }\r\n\r\n            b = b.next;\r\n\r\n        }\r\n\r\n        a = a.next;\r\n\r\n    } while ( a !== start );\r\n\r\n}\r\n\r\n// link every hole into the outer loop, producing a single-ring polygon without holes\r\n\r\nfunction eliminateHoles( data, holeIndices, outerNode, dim ) {\r\n\r\n    let queue = [], i, len, start, end, list;\r\n\r\n    for ( i = 0, len = holeIndices.length; i < len; i ++ ) {\r\n\r\n        start = holeIndices[ i ] * dim;\r\n        end = i < len - 1 ? holeIndices[ i + 1 ] * dim : data.length;\r\n        list = linkedList( data, start, end, dim, false );\r\n        if ( list === list.next ) { list.steiner = true; }\r\n        queue.push( getLeftmost( list ) );\r\n\r\n    }\r\n\r\n    queue.sort( compareX );\r\n\r\n    // process holes from left to right\r\n\r\n    for ( i = 0; i < queue.length; i ++ ) {\r\n\r\n        eliminateHole( queue[ i ], outerNode );\r\n        outerNode = filterPoints( outerNode, outerNode.next );\r\n\r\n    }\r\n\r\n    return outerNode;\r\n\r\n}\r\n\r\nfunction compareX( a, b ) {\r\n\r\n    return a.x - b.x;\r\n\r\n}\r\n\r\n// find a bridge between vertices that connects hole with an outer ring and and link it\r\n\r\nfunction eliminateHole( hole, outerNode ) {\r\n\r\n    outerNode = findHoleBridge( hole, outerNode );\r\n\r\n    if ( outerNode ) {\r\n\r\n        const b = splitPolygon( outerNode, hole );\r\n\r\n        filterPoints( b, b.next );\r\n\r\n    }\r\n\r\n}\r\n\r\n// David Eberly's algorithm for finding a bridge between hole and outer polygon\r\n\r\nfunction findHoleBridge( hole, outerNode ) {\r\n\r\n    let p = outerNode;\r\n    const hx = hole.x;\r\n    const hy = hole.y;\r\n    let qx = - Infinity;\r\n    let m;\r\n\r\n    // find a segment intersected by a ray from the hole's leftmost point to the left;\r\n    // segment's endpoint with lesser x will be potential connection point\r\n\r\n    do {\r\n\r\n        if ( hy <= p.y && hy >= p.next.y && p.next.y !== p.y ) {\r\n\r\n            const x = p.x + ( hy - p.y ) * ( p.next.x - p.x ) / ( p.next.y - p.y );\r\n\r\n            if ( x <= hx && x > qx ) {\r\n\r\n                qx = x;\r\n\r\n                if ( x === hx ) {\r\n\r\n                    if ( hy === p.y ) { return p; }\r\n                    if ( hy === p.next.y ) { return p.next; }\r\n\r\n                }\r\n\r\n                m = p.x < p.next.x ? p : p.next;\r\n\r\n            }\r\n\r\n        }\r\n\r\n        p = p.next;\r\n\r\n    } while ( p !== outerNode );\r\n\r\n    if ( ! m ) { return null; }\r\n\r\n    if ( hx === qx ) { return m.prev; } // hole touches outer segment; pick lower endpoint\r\n\r\n    // look for points inside the triangle of hole point, segment intersection and endpoint;\r\n    // if there are no points found, we have a valid connection;\r\n    // otherwise choose the point of the minimum angle with the ray as connection point\r\n\r\n    const stop = m;\r\n    const mx = m.x;\r\n    const my = m.y;\r\n    let tanMin = Infinity;\r\n    let tan;\r\n\r\n    p = m.next;\r\n\r\n    while ( p !== stop ) {\r\n\r\n        if ( hx >= p.x && p.x >= mx && hx !== p.x &&\r\n                        pointInTriangle( hy < my ? hx : qx, hy, mx, my, hy < my ? qx : hx, hy, p.x, p.y ) ) {\r\n\r\n            tan = Math.abs( hy - p.y ) / ( hx - p.x ); // tangential\r\n\r\n            if ( ( tan < tanMin || ( tan === tanMin && p.x > m.x ) ) && locallyInside( p, hole ) ) {\r\n\r\n                m = p;\r\n                tanMin = tan;\r\n\r\n            }\r\n\r\n        }\r\n\r\n        p = p.next;\r\n\r\n    }\r\n\r\n    return m;\r\n\r\n}\r\n\r\n// interlink polygon nodes in z-order\r\n\r\nfunction indexCurve( start, minX, minY, invSize ) {\r\n\r\n    let p = start;\r\n\r\n    do {\r\n\r\n        if ( p.z === null ) { p.z = zOrder( p.x, p.y, minX, minY, invSize ); }\r\n        p.prevZ = p.prev;\r\n        p.nextZ = p.next;\r\n        p = p.next;\r\n\r\n    } while ( p !== start );\r\n\r\n    p.prevZ.nextZ = null;\r\n    p.prevZ = null;\r\n\r\n    sortLinked( p );\r\n\r\n}\r\n\r\n// Simon Tatham's linked list merge sort algorithm\r\n// http://www.chiark.greenend.org.uk/~sgtatham/algorithms/listsort.html\r\n\r\nfunction sortLinked( list ) {\r\n\r\n    let i, p, q, e, tail, numMerges, pSize, qSize, inSize = 1;\r\n\r\n    do {\r\n\r\n        p = list;\r\n        list = null;\r\n        tail = null;\r\n        numMerges = 0;\r\n\r\n        while ( p ) {\r\n\r\n            numMerges ++;\r\n            q = p;\r\n            pSize = 0;\r\n\r\n            for ( i = 0; i < inSize; i ++ ) {\r\n\r\n                pSize ++;\r\n                q = q.nextZ;\r\n                if ( ! q ) { break; }\r\n\r\n            }\r\n\r\n            qSize = inSize;\r\n\r\n            while ( pSize > 0 || ( qSize > 0 && q ) ) {\r\n\r\n                if ( pSize !== 0 && ( qSize === 0 || ! q || p.z <= q.z ) ) {\r\n\r\n                    e = p;\r\n                    p = p.nextZ;\r\n                    pSize --;\r\n\r\n                } else {\r\n\r\n                    e = q;\r\n                    q = q.nextZ;\r\n                    qSize --;\r\n\r\n                }\r\n\r\n                if ( tail ) { tail.nextZ = e; } else { list = e; }\r\n\r\n                e.prevZ = tail;\r\n                tail = e;\r\n\r\n            }\r\n\r\n            p = q;\r\n\r\n        }\r\n\r\n        tail.nextZ = null;\r\n        inSize *= 2;\r\n\r\n    } while ( numMerges > 1 );\r\n\r\n    return list;\r\n\r\n}\r\n\r\n// z-order of a point given coords and inverse of the longer side of data bbox\r\n\r\nfunction zOrder( x, y, minX, minY, invSize ) {\r\n\r\n    // coords are transformed into non-negative 15-bit integer range\r\n\r\n    x = 32767 * ( x - minX ) * invSize;\r\n    y = 32767 * ( y - minY ) * invSize;\r\n\r\n    x = ( x | ( x << 8 ) ) & 0x00FF00FF;\r\n    x = ( x | ( x << 4 ) ) & 0x0F0F0F0F;\r\n    x = ( x | ( x << 2 ) ) & 0x33333333;\r\n    x = ( x | ( x << 1 ) ) & 0x55555555;\r\n\r\n    y = ( y | ( y << 8 ) ) & 0x00FF00FF;\r\n    y = ( y | ( y << 4 ) ) & 0x0F0F0F0F;\r\n    y = ( y | ( y << 2 ) ) & 0x33333333;\r\n    y = ( y | ( y << 1 ) ) & 0x55555555;\r\n\r\n    return x | ( y << 1 );\r\n\r\n}\r\n\r\n// find the leftmost node of a polygon ring\r\n\r\nfunction getLeftmost( start ) {\r\n\r\n    let p = start, leftmost = start;\r\n\r\n    do {\r\n\r\n        if ( p.x < leftmost.x ) { leftmost = p; }\r\n        p = p.next;\r\n\r\n    } while ( p !== start );\r\n\r\n    return leftmost;\r\n\r\n}\r\n\r\n// check if a point lies within a convex triangle\r\n\r\nfunction pointInTriangle( ax, ay, bx, by, cx, cy, px, py ) {\r\n\r\n    return ( cx - px ) * ( ay - py ) - ( ax - px ) * ( cy - py ) >= 0 &&\r\n     ( ax - px ) * ( by - py ) - ( bx - px ) * ( ay - py ) >= 0 &&\r\n     ( bx - px ) * ( cy - py ) - ( cx - px ) * ( by - py ) >= 0;\r\n\r\n}\r\n\r\n// check if a diagonal between two polygon nodes is valid (lies in polygon interior)\r\n\r\nfunction isValidDiagonal( a, b ) {\r\n\r\n    return a.next.i !== b.i && a.prev.i !== b.i && ! intersectsPolygon( a, b ) &&\r\n        locallyInside( a, b ) && locallyInside( b, a ) && middleInside( a, b );\r\n\r\n}\r\n\r\n// signed area of a triangle\r\n\r\nfunction area( p, q, r ) {\r\n\r\n    return ( q.y - p.y ) * ( r.x - q.x ) - ( q.x - p.x ) * ( r.y - q.y );\r\n\r\n}\r\n\r\n// check if two points are equal\r\n\r\nfunction equals( p1, p2 ) {\r\n\r\n    return p1.x === p2.x && p1.y === p2.y;\r\n\r\n}\r\n\r\n// check if two segments intersect\r\n\r\nfunction intersects( p1, q1, p2, q2 ) {\r\n\r\n    if ( ( equals( p1, q1 ) && equals( p2, q2 ) ) ||\r\n            ( equals( p1, q2 ) && equals( p2, q1 ) ) ) { return true; }\r\n\r\n    return area( p1, q1, p2 ) > 0 !== area( p1, q1, q2 ) > 0 &&\r\n                 area( p2, q2, p1 ) > 0 !== area( p2, q2, q1 ) > 0;\r\n\r\n}\r\n\r\n// check if a polygon diagonal intersects any polygon segments\r\n\r\nfunction intersectsPolygon( a, b ) {\r\n\r\n    let p = a;\r\n\r\n    do {\r\n\r\n        if ( p.i !== a.i && p.next.i !== a.i && p.i !== b.i && p.next.i !== b.i &&\r\n                        intersects( p, p.next, a, b ) ) {\r\n\r\n            return true;\r\n\r\n        }\r\n\r\n        p = p.next;\r\n\r\n    } while ( p !== a );\r\n\r\n    return false;\r\n\r\n}\r\n\r\n// check if a polygon diagonal is locally inside the polygon\r\n\r\nfunction locallyInside( a, b ) {\r\n\r\n    return area( a.prev, a, a.next ) < 0 ?\r\n        area( a, b, a.next ) >= 0 && area( a, a.prev, b ) >= 0 :\r\n        area( a, b, a.prev ) < 0 || area( a, a.next, b ) < 0;\r\n\r\n}\r\n\r\n// check if the middle point of a polygon diagonal is inside the polygon\r\n\r\nfunction middleInside( a, b ) {\r\n\r\n    let p = a;\r\n    let inside = false;\r\n    const px = ( a.x + b.x ) / 2;\r\n    const py = ( a.y + b.y ) / 2;\r\n\r\n    do {\r\n\r\n        if ( ( ( p.y > py ) !== ( p.next.y > py ) ) && p.next.y !== p.y &&\r\n                        ( px < ( p.next.x - p.x ) * ( py - p.y ) / ( p.next.y - p.y ) + p.x ) ) {\r\n\r\n            inside = ! inside;\r\n\r\n        }\r\n\r\n        p = p.next;\r\n\r\n    } while ( p !== a );\r\n\r\n    return inside;\r\n\r\n}\r\n\r\n// link two polygon vertices with a bridge; if the vertices belong to the same ring, it splits polygon into two;\r\n// if one belongs to the outer ring and another to a hole, it merges it into a single ring\r\n\r\nfunction splitPolygon( a, b ) {\r\n\r\n    const a2 = new Node( a.i, a.x, a.y ),\r\n        b2 = new Node( b.i, b.x, b.y ),\r\n        an = a.next,\r\n        bp = b.prev;\r\n\r\n    a.next = b;\r\n    b.prev = a;\r\n\r\n    a2.next = an;\r\n    an.prev = a2;\r\n\r\n    b2.next = a2;\r\n    a2.prev = b2;\r\n\r\n    bp.next = b2;\r\n    b2.prev = bp;\r\n\r\n    return b2;\r\n\r\n}\r\n\r\n// create a node and optionally link it with previous one (in a circular doubly linked list)\r\n\r\nfunction insertNode( i, x, y, last ) {\r\n\r\n    const p = new Node( i, x, y );\r\n\r\n    if ( ! last ) {\r\n\r\n        p.prev = p;\r\n        p.next = p;\r\n\r\n    } else {\r\n\r\n        p.next = last.next;\r\n        p.prev = last;\r\n        last.next.prev = p;\r\n        last.next = p;\r\n\r\n    }\r\n\r\n    return p;\r\n\r\n}\r\n\r\nfunction removeNode( p ) {\r\n\r\n    p.next.prev = p.prev;\r\n    p.prev.next = p.next;\r\n\r\n    if ( p.prevZ ) { p.prevZ.nextZ = p.nextZ; }\r\n    if ( p.nextZ ) { p.nextZ.prevZ = p.prevZ; }\r\n\r\n}\r\n\r\nfunction Node( i, x, y ) {\r\n\r\n    // vertice index in coordinates array\r\n    this.i = i;\r\n\r\n    // vertex coordinates\r\n    this.x = x;\r\n    this.y = y;\r\n\r\n    // previous and next vertice nodes in a polygon ring\r\n    this.prev = null;\r\n    this.next = null;\r\n\r\n    // z-order curve value\r\n    this.z = null;\r\n\r\n    // previous and next nodes in z-order\r\n    this.prevZ = null;\r\n    this.nextZ = null;\r\n\r\n    // indicates whether this is a steiner point\r\n    this.steiner = false;\r\n\r\n}\r\n\r\nfunction signedArea( data, start, end, dim ) {\r\n\r\n    let sum = 0;\r\n\r\n    for ( let i = start, j = end - dim; i < end; i += dim ) {\r\n\r\n        sum += ( data[ j ] - data[ i ] ) * ( data[ i + 1 ] + data[ j + 1 ] );\r\n        j = i;\r\n\r\n    }\r\n\r\n    return sum;\r\n\r\n}\r\n\r\nexport { Earcut };\r\n","\r\nimport * as three from 'three';\r\nimport * as threex from '../threex/threex';\r\nimport * as earcut from './earcut';\r\nimport {TCoord} from '../geo-info/GIJson';\r\nimport {Arr} from '../arr/arr';  // TODO remove dependence on this\r\n\r\n//  3D to 2D ======================================================================================================\r\n\r\n/**\r\n * Function to transform a set of vertices in 3d space onto the xy plane.\r\n * This function assumes that the vertices are co-planar.\r\n * Returns a set of three Vectors that represent points on the xy plane.\r\n */\r\nfunction _makeVertices2D(points: three.Vector3[]): three.Vector3[] {\r\n    const o: three.Vector3 = new three.Vector3();\r\n    for (const v of points) {\r\n        o.add(v);\r\n    }\r\n    o.divideScalar(points.length);\r\n    let vx: three.Vector3;\r\n    let vz: three.Vector3;\r\n    let got_vx = false;\r\n    for (let i = 0; i < points.length; i++) {\r\n        if (!got_vx) {\r\n            vx =  threex.subVectors(points[i], o).normalize();\r\n            if (vx.lengthSq() !== 0) {got_vx = true; }\r\n        } else {\r\n            vz = threex.crossVectors(vx, threex.subVectors(points[i], o).normalize()).normalize();\r\n            if (vz.lengthSq() !== 0) {break; }\r\n        }\r\n        if (i === points.length - 1) {return null; }\r\n    }\r\n    const vy: three.Vector3 =  threex.crossVectors(vz, vx);\r\n    const m: three.Matrix4 = threex.xformMatrix(o, vx, vy, vz);\r\n    const points_2d: three.Vector3[] = points.map((v) => threex.multVectorMatrix(v, m));\r\n    return points_2d;\r\n}\r\n\r\n/**\r\n * Triangulates a polygon\r\n * @param coords\r\n */\r\nexport function triangulate(coords: TCoord[]): number[][] {\r\n    const vects: three.Vector3[] = _makeVertices2D(coords.map( coord => new three.Vector3(...coord)) );\r\n    const flat_vert_xys: number[] = Arr.flatten(vects.map((v) => [v.x, v.y])); // TODO remove dependency\r\n    const flat_tris_i: number[] = earcut.Earcut.triangulate(flat_vert_xys);\r\n    const tris_i: number[][] = [];\r\n    for (let i = 0; i < flat_tris_i.length; i += 3) {\r\n        tris_i.push([flat_tris_i[i], flat_tris_i[i + 1], flat_tris_i[i + 2]]);\r\n    }\r\n    return tris_i;\r\n}\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/appmodule/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nwindow['CESIUM_BASE_URL'] = 'assets/cesium';\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n"],"sourceRoot":""}