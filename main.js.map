{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/appmodule/app.component.html","webpack:///./src/app/appmodule/app.component.scss","webpack:///./src/app/appmodule/app.component.ts","webpack:///./src/app/appmodule/app.module.ts","webpack:///./src/app/core/modules/_error_msgs_dev.ts","webpack:///./src/app/core/modules/_parameterTypes.ts","webpack:///./src/app/core/modules/_utils_dev.ts","webpack:///./src/app/core/modules/attrib.ts","webpack:///./src/app/core/modules/calc.ts","webpack:///./src/app/core/modules/circle.ts","webpack:///./src/app/core/modules/circle_dev.ts","webpack:///./src/app/core/modules/console.ts","webpack:///./src/app/core/modules/group.ts","webpack:///./src/app/core/modules/index.ts","webpack:///./src/app/core/modules/input.ts","webpack:///./src/app/core/modules/intersect.ts","webpack:///./src/app/core/modules/libs/arr/arr.ts","webpack:///./src/app/core/modules/libs/conics/circle3Points.ts","webpack:///./src/app/core/modules/libs/conics/circleCircle2D.ts","webpack:///./src/app/core/modules/libs/conics/circlePlane3D.ts","webpack:///./src/app/core/modules/libs/conics/circlePolyline2D.ts","webpack:///./src/app/core/modules/libs/conics/circleUtil.ts","webpack:///./src/app/core/modules/libs/conics/circles.ts","webpack:///./src/app/core/modules/libs/conics/trigo.ts","webpack:///./src/app/core/modules/libs/filesys/download.ts","webpack:///./src/app/core/modules/libs/poly/poly.ts","webpack:///./src/app/core/modules/libs/poly/polylinePipe.ts","webpack:///./src/app/core/modules/libs/poly/polylinePlane.ts","webpack:///./src/app/core/modules/libs/threex/threex.ts","webpack:///./src/app/core/modules/list.ts","webpack:///./src/app/core/modules/math.ts","webpack:///./src/app/core/modules/model.ts","webpack:///./src/app/core/modules/object.ts","webpack:///./src/app/core/modules/output.ts","webpack:///./src/app/core/modules/plane.ts","webpack:///./src/app/core/modules/pline.ts","webpack:///./src/app/core/modules/pmesh.ts","webpack:///./src/app/core/modules/point.ts","webpack:///./src/app/core/modules/query.ts","webpack:///./src/app/core/modules/ray.ts","webpack:///./src/app/core/modules/split.ts","webpack:///./src/app/core/modules/string.ts","webpack:///./src/app/core/modules/topo.ts","webpack:///./src/app/core/services/data.service.ts","webpack:///./src/app/core/services/index.ts","webpack:///./src/app/core/services/viewer.service.ts","webpack:///./src/app/mViewer/mobius-viewer.component.html","webpack:///./src/app/mViewer/mobius-viewer.component.scss","webpack:///./src/app/mViewer/mobius-viewer.component.ts","webpack:///./src/app/mViewer/mobius-viewer.module.ts","webpack:///./src/app/mViewer/viewers.config.ts","webpack:///./src/app/mViewer/viewers/console-viewer.component.ts","webpack:///./src/app/mViewer/viewers/gs-viewer/data/DataSubscriber.ts","webpack:///./src/app/mViewer/viewers/gs-viewer/data/data.service.ts","webpack:///./src/app/mViewer/viewers/gs-viewer/gs-viewer.component.html","webpack:///./src/app/mViewer/viewers/gs-viewer/gs-viewer.component.scss","webpack:///./src/app/mViewer/viewers/gs-viewer/gs-viewer.component.ts","webpack:///./src/app/mViewer/viewers/gs-viewer/gs-viewer.module.ts","webpack:///./src/app/mViewer/viewers/gs-viewer/setting/setting.component.css","webpack:///./src/app/mViewer/viewers/gs-viewer/setting/setting.component.html","webpack:///./src/app/mViewer/viewers/gs-viewer/setting/setting.component.ts","webpack:///./src/app/mViewer/viewers/gs-viewer/toolwindow/groups.component.css","webpack:///./src/app/mViewer/viewers/gs-viewer/toolwindow/groups.component.html","webpack:///./src/app/mViewer/viewers/gs-viewer/toolwindow/groups.component.ts","webpack:///./src/app/mViewer/viewers/gs-viewer/toolwindow/toolwindow.component.css","webpack:///./src/app/mViewer/viewers/gs-viewer/toolwindow/toolwindow.component.html","webpack:///./src/app/mViewer/viewers/gs-viewer/toolwindow/toolwindow.component.ts","webpack:///./src/app/mViewer/viewers/gs-viewer/viewer/viewer.component.css","webpack:///./src/app/mViewer/viewers/gs-viewer/viewer/viewer.component.html","webpack:///./src/app/mViewer/viewers/gs-viewer/viewer/viewer.component.ts","webpack:///./src/app/mViewer/viewers/index.ts","webpack:///./src/app/mViewer/viewers/mobius-cesium/data/DataSubscriber.ts","webpack:///./src/app/mViewer/viewers/mobius-cesium/data/data.service.ts","webpack:///./src/app/mViewer/viewers/mobius-cesium/mobius-cesium.component.html","webpack:///./src/app/mViewer/viewers/mobius-cesium/mobius-cesium.component.scss","webpack:///./src/app/mViewer/viewers/mobius-cesium/mobius-cesium.component.ts","webpack:///./src/app/mViewer/viewers/mobius-cesium/mobius-cesium.module.ts","webpack:///./src/app/mViewer/viewers/mobius-cesium/setting/attributes.component.css","webpack:///./src/app/mViewer/viewers/mobius-cesium/setting/attributes.component.html","webpack:///./src/app/mViewer/viewers/mobius-cesium/setting/attributes.copmponent.ts","webpack:///./src/app/mViewer/viewers/mobius-cesium/setting/display.copmponent.css","webpack:///./src/app/mViewer/viewers/mobius-cesium/setting/display.copmponent.html","webpack:///./src/app/mViewer/viewers/mobius-cesium/setting/display.copmponent.ts","webpack:///./src/app/mViewer/viewers/mobius-cesium/setting/publish.component.css","webpack:///./src/app/mViewer/viewers/mobius-cesium/setting/publish.component.html","webpack:///./src/app/mViewer/viewers/mobius-cesium/setting/publish.component.ts","webpack:///./src/app/mViewer/viewers/mobius-cesium/setting/setting.component.css","webpack:///./src/app/mViewer/viewers/mobius-cesium/setting/setting.component.html","webpack:///./src/app/mViewer/viewers/mobius-cesium/setting/setting.component.ts","webpack:///./src/app/mViewer/viewers/mobius-cesium/setting/visualise.component.css","webpack:///./src/app/mViewer/viewers/mobius-cesium/setting/visualise.component.html","webpack:///./src/app/mViewer/viewers/mobius-cesium/setting/visualise.component.ts","webpack:///./src/app/mViewer/viewers/mobius-cesium/viewer/viewer.component.css","webpack:///./src/app/mViewer/viewers/mobius-cesium/viewer/viewer.component.html","webpack:///./src/app/mViewer/viewers/mobius-cesium/viewer/viewer.component.ts","webpack:///./src/app/mViewer/viewers/viewer-text.component.ts","webpack:///./src/app/ngFlowchart-svg/edge/edge.component.html","webpack:///./src/app/ngFlowchart-svg/edge/edge.component.ts","webpack:///./src/app/ngFlowchart-svg/flowchart.component.html","webpack:///./src/app/ngFlowchart-svg/flowchart.component.scss","webpack:///./src/app/ngFlowchart-svg/flowchart.component.ts","webpack:///./src/app/ngFlowchart-svg/flowchart.module.ts","webpack:///./src/app/ngFlowchart-svg/index.ts","webpack:///./src/app/ngFlowchart-svg/node/node.actions.ts","webpack:///./src/app/ngFlowchart-svg/node/node.component.html","webpack:///./src/app/ngFlowchart-svg/node/node.component.scss","webpack:///./src/app/ngFlowchart-svg/node/node.component.ts","webpack:///./src/app/shared/components/add-components/add_input.component.ts","webpack:///./src/app/shared/components/add-components/add_node.component.ts","webpack:///./src/app/shared/components/add-components/add_output.component.ts","webpack:///./src/app/shared/components/execute/execute.component.ts","webpack:///./src/app/shared/components/file/download.utils.ts","webpack:///./src/app/shared/components/file/index.ts","webpack:///./src/app/shared/components/file/loadfile.component.ts","webpack:///./src/app/shared/components/file/newfile.component.ts","webpack:///./src/app/shared/components/file/savefile.component.ts","webpack:///./src/app/shared/components/header/header.component.ts","webpack:///./src/app/shared/components/navigation/navigation.component.ts","webpack:///./src/app/shared/components/not-found/not-found.component.html","webpack:///./src/app/shared/components/not-found/not-found.component.scss","webpack:///./src/app/shared/components/not-found/not-found.component.ts","webpack:///./src/app/shared/components/parameter-viewer/input-port-viewer/input-port-viewer.component.html","webpack:///./src/app/shared/components/parameter-viewer/input-port-viewer/input-port-viewer.component.scss","webpack:///./src/app/shared/components/parameter-viewer/input-port-viewer/input-port-viewer.component.ts","webpack:///./src/app/shared/components/parameter-viewer/parameter-viewer.component.html","webpack:///./src/app/shared/components/parameter-viewer/parameter-viewer.component.scss","webpack:///./src/app/shared/components/parameter-viewer/parameter-viewer.component.ts","webpack:///./src/app/shared/components/parameter-viewer/procedure-input-viewer/procedure-input-viewer.component.html","webpack:///./src/app/shared/components/parameter-viewer/procedure-input-viewer/procedure-input-viewer.component.scss","webpack:///./src/app/shared/components/parameter-viewer/procedure-input-viewer/procedure-input-viewer.component.ts","webpack:///./src/app/shared/decorators/index.ts","webpack:///./src/app/shared/decorators/module-aware.decorator.ts","webpack:///./src/app/shared/decorators/porttypes-aware.decorator.ts","webpack:///./src/app/shared/decorators/prodtypes-aware.decorator.ts","webpack:///./src/app/shared/decorators/viewertypes-aware.decorator.ts","webpack:///./src/app/shared/directives/filesys/index.ts","webpack:///./src/app/shared/directives/filesys/mobfile-reader.directive.ts","webpack:///./src/app/shared/directives/textarea/autogrow.directive.ts","webpack:///./src/app/shared/directives/textarea/index.ts","webpack:///./src/app/shared/models/code/code.utils.ts","webpack:///./src/app/shared/models/code/execute.utils.ts","webpack:///./src/app/shared/models/code/index.ts","webpack:///./src/app/shared/models/flowchart/flowchart.utils.ts","webpack:///./src/app/shared/models/flowchart/index.ts","webpack:///./src/app/shared/models/node/index.ts","webpack:///./src/app/shared/models/node/node.utils.ts","webpack:///./src/app/shared/models/port/index.ts","webpack:///./src/app/shared/models/port/port.utils.ts","webpack:///./src/app/shared/models/port/types.ts","webpack:///./src/app/shared/models/procedure/index.ts","webpack:///./src/app/shared/models/procedure/types.ts","webpack:///./src/app/shared/shared.module.ts","webpack:///./src/app/shared/utils/GUID.ts","webpack:///./src/app/shared/utils/index.ts","webpack:///./src/app/views/index.ts","webpack:///./src/app/views/view-editor/parameter-editor/parameter-editor.component.html","webpack:///./src/app/views/view-editor/parameter-editor/parameter-editor.component.scss","webpack:///./src/app/views/view-editor/parameter-editor/parameter-editor.component.ts","webpack:///./src/app/views/view-editor/parameter-editor/procedure-input-editor/procedure-input-editor.component.html","webpack:///./src/app/views/view-editor/parameter-editor/procedure-input-editor/procedure-input-editor.component.scss","webpack:///./src/app/views/view-editor/parameter-editor/procedure-input-editor/procedure-input-editor.component.ts","webpack:///./src/app/views/view-editor/procedure-item/procedure-item.component.html","webpack:///./src/app/views/view-editor/procedure-item/procedure-item.component.scss","webpack:///./src/app/views/view-editor/procedure-item/procedure-item.component.ts","webpack:///./src/app/views/view-editor/toolset/toolset.component.html","webpack:///./src/app/views/view-editor/toolset/toolset.component.scss","webpack:///./src/app/views/view-editor/toolset/toolset.component.ts","webpack:///./src/app/views/view-editor/view-editor.component.html","webpack:///./src/app/views/view-editor/view-editor.component.scss","webpack:///./src/app/views/view-editor/view-editor.component.ts","webpack:///./src/app/views/view-editor/view-editor.module.ts","webpack:///./src/app/views/view-publish/view-publish.component.html","webpack:///./src/app/views/view-publish/view-publish.component.scss","webpack:///./src/app/views/view-publish/view-publish.component.ts","webpack:///./src/app/views/view-publish/view-publish.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\\r\\n<div class='container'>\\r\\n    <as-split direction=\\\"horizontal\\\">\\r\\n        <as-split-area size=\\\"50\\\">\\r\\n            <div class='container__header'>\\r\\n\\r\\n                <!-- top left tab menu  -->\\r\\n                <div class=\\\"tab\\\">\\r\\n                    <button class='btn-tab' [class.active]='activeView==\\\"publish\\\"' (click)='updateView(\\\"publish\\\")'>Publish</button>\\r\\n                    <button class='btn-tab' [class.active]='activeView==\\\"flowchart\\\"' (click)='updateView(\\\"flowchart\\\")'>Flowchart</button>\\r\\n                    <!--\\r\\n                    <button class='btn' [class.active]='false' (click)='updateView(\\\"editor\\\")'>Procedures</button>\\r\\n                    -->\\r\\n                </div>\\r\\n\\r\\n                <!-- hidden components (new file, save file, loaf file) for the dropdown menu-->\\r\\n                <div style=\\\"display: none;\\\">\\r\\n                    <file-new (create)='updateFile($event)'></file-new>\\r\\n                    <file-save [file]='file'></file-save>\\r\\n                    <file-load (loaded)='updateFile($event)'></file-load>        \\r\\n                </div>\\r\\n\\r\\n                <!-- top right dropdown menu -->\\r\\n                <div class=\\\"dropmenu\\\">\\r\\n                    <!-- execute button -->\\r\\n                    <div>\\r\\n                        <execute [flowchart]='flowchart'></execute>\\r\\n                    </div>\\r\\n                    <!-- dropdown menu for new file, save file, loaf file-->\\r\\n                    <div>\\r\\n                        <button class='btn' mat-icon-button [matMenuTriggerFor]=\\\"menu\\\">\\r\\n                            <mat-icon>more_vert</mat-icon>\\r\\n                        </button>\\r\\n                        <mat-menu #menu=\\\"matMenu\\\">\\r\\n                            <button  mat-menu-item onclick=\\\"document.getElementById('newfile').click();\\\"\\r\\n                            title=\\\"Reset Flowchart to Default\\\">\\r\\n                                <mat-icon>rotate_left</mat-icon>\\r\\n                                <span>Reset</span>\\r\\n                            </button>\\r\\n                            <button mat-menu-item onclick=\\\"document.getElementById('savefile').click();\\\"\\r\\n                            title=\\\"Save Flowchart File to Computer\\\">\\r\\n                                <mat-icon>save_alt</mat-icon>\\r\\n                                <span>Save File</span>\\r\\n                            </button>\\r\\n                            <button mat-menu-item onclick=\\\"document.getElementById('file-input').click();\\\"\\r\\n                            title=\\\"Load Flowchart File from Computer\\\">\\r\\n                                <mat-icon>launch</mat-icon>\\r\\n                                <span>Load File</span>\\r\\n                            </button>\\r\\n                        </mat-menu>\\r\\n                    </div>\\r\\n                    \\r\\n                </div>\\r\\n            </div>\\r\\n            <!-- viewchild content -->\\r\\n            <div class='content__panel'>\\r\\n                <ng-container #vc></ng-container>\\r\\n            </div>\\r\\n        </as-split-area>\\r\\n\\r\\n        <as-split-area size=\\\"50\\\">\\r\\n            <!-- mViewer panel -->\\r\\n            <div class='content__panel' >\\r\\n                <mviewer [node]='flowchart.nodes[flowchart.meta.selected_nodes[0]]'></mviewer>\\r\\n            </div>\\r\\n        </as-split-area>\\r\\n        \\r\\n\\r\\n    </as-split>\\r\\n\\r\\n</div>\\r\\n\\r\\n\"","module.exports = \".container {\\n  position: relative;\\n  overflow: auto;\\n  height: 100%;\\n  width: 100%;\\n  display: flex;\\n  flex-direction: column;\\n  justify-content: space-around; }\\n  .container h1, .container h2, .container h3, .container h4, .container h5, .container h6, .container p {\\n    margin: 0px;\\n    padding: 0px; }\\n  .container .container__header {\\n    flex: 0 1 auto;\\n    min-height: 35px;\\n    display: flex;\\n    flex-direction: row;\\n    justify-content: space-between;\\n    padding: 0px 0px 0px 15px;\\n    background-color: #ccc;\\n    border-bottom: 3px solid #eeeeee;\\n    line-height: 35px;\\n    font-size: 18px;\\n    font-weight: 600;\\n    text-align: center;\\n    /* tab styling */\\n    /* dropdown menu styling */ }\\n  .container .container__header .tab {\\n      border: 2px;\\n      overflow: hidden;\\n      background-color: #ccc; }\\n  .container .container__header .tab button {\\n      display: inline-block;\\n      vertical-align: bottom;\\n      background-color: inherit;\\n      color: #505050;\\n      border: none;\\n      outline: none;\\n      cursor: pointer;\\n      padding: 8px 10px;\\n      transition: 0.3s;\\n      font-size: 14px; }\\n  .container .container__header .tab button:hover {\\n      color: blue; }\\n  .container .container__header .tab button.active {\\n      background-color: #ccc;\\n      color: #000096;\\n      font-weight: 600;\\n      border-color: #222 !important; }\\n  .container .container__header .dropmenu {\\n      display: inline-flex; }\\n  .container .container__content {\\n    flex-grow: 1;\\n    height: 0px;\\n    border: 2px solid #3F4651;\\n    overflow: auto; }\\n  .container .container__footer {\\n    text-align: center;\\n    font-size: 12px;\\n    line-height: 18px;\\n    background-color: #3F4651;\\n    color: #E7BF00; }\\n  .content__panel {\\n  background-color: gainsboro;\\n  height: 100%;\\n  overflow: auto; }\\n  ul.nav {\\n  margin: 0px;\\n  padding: 0px; }\\n  li.link {\\n  display: inline;\\n  border: 2px solid gray;\\n  border-radius: 4px;\\n  margin: 5px 5px 0px 0px;\\n  padding: 5px;\\n  text-transform: uppercase;\\n  line-height: 12px;\\n  font-weight: 600;\\n  cursor: pointer;\\n  font-size: 12px; }\\n  li.link:hover {\\n  background-color: gray;\\n  color: white; }\\n  button.btn {\\n  display: inline-block;\\n  vertical-align: middle;\\n  margin: 0px 0px 0px 0px;\\n  font-size: 12px;\\n  line-height: 10px;\\n  height: 30px;\\n  border: none;\\n  border-radius: 4px;\\n  background-color: transparent;\\n  color: #505050; }\\n  button.btn:hover {\\n  color: blue; }\\n  .active {\\n  background-color: #222;\\n  color: white;\\n  border-color: #222 !important; }\\n\"","import { Component, Injector, ComponentFactoryResolver, ViewContainerRef, ViewChild, EventEmitter, HostListener } from '@angular/core';\r\nimport { ViewEditorComponent, ViewPublishComponent } from '@views';\r\nimport { IMobius } from '@models/mobius';\r\nimport { IFlowchart } from '@models/flowchart';\r\nimport { DataService } from '@services';\r\nimport * as circularJSON from 'circular-json';\r\nimport { IView } from '../mViewer/view.interface';\r\nimport { FlowchartComponent } from '../ngFlowchart-svg/flowchart.component';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: 'app.component.html', \r\n  styleUrls: ['app.component.scss']\r\n})\r\nexport class AppComponent{\r\n\r\n  file: IMobius;\r\n  flowchart: IFlowchart; \r\n\r\n  @ViewChild('vc', {read: ViewContainerRef}) vc: ViewContainerRef;\r\n  private views = [];\r\n  private Viewers = {\r\n    \"editor\":ViewEditorComponent,   // src/views/editor/\r\n    \"publish\":ViewPublishComponent, // src/views/publish/\r\n    \"flowchart\":FlowchartComponent  // src/ngFlowchart-svg/\r\n                    };\r\n  activeView: string;\r\n\r\n  constructor(private dataService: DataService, private injector: Injector, private r: ComponentFactoryResolver){\r\n    this.file = dataService.file;\r\n    this.flowchart = dataService.flowchart;\r\n  }\r\n\r\n  ngOnInit(){\r\n    this.activeView = \"flowchart\";\r\n    this.updateView(\"flowchart\");\r\n     \r\n  }\r\n\r\n\r\n  updateFile(event: string){\r\n    this.dataService.file = circularJSON.parse(event);\r\n    this.file = this.dataService.file;\r\n    this.flowchart = this.dataService.flowchart;\r\n    this.updateValue();\r\n  }\r\n\r\n  createView(view: string){\r\n    let component = this.Viewers[view];\r\n    let factory = this.r.resolveComponentFactory(component);\r\n    let componentRef = factory.create(this.injector);\r\n    if (view == \"flowchart\"){\r\n      componentRef.instance[\"data\"] = this.flowchart;\r\n      componentRef.instance[\"switch\"].subscribe(data => this.updateView(data))\r\n  } else if(view == \"editor\"){\r\n      componentRef.instance[\"flowchart\"] = this.flowchart;\r\n      componentRef.instance[\"node\"] = this.flowchart.nodes[this.flowchart.meta.selected_nodes[0]];\r\n    } else if(view == \"publish\"){\r\n      componentRef.instance[\"flowchart\"] = this.flowchart;\r\n    }\r\n    return componentRef;\r\n  }\r\n\r\n  updateView(view: string): void{\r\n    this.activeView = view;\r\n\r\n    if( this.views[ view ] == undefined){\r\n        this.views[ view ] = this.createView(view);\r\n    } else this.updateValue();\r\n\r\n    this.vc.detach();\r\n    this.vc.insert( this.views[ view ].hostView );\r\n  }\r\n\r\n  updateValue(){\r\n    for (let view in this.Viewers){\r\n      if (!this.views[view]) continue;\r\n      let componentRef =  this.views[ view ]; \r\n      if (view == \"flowchart\"){\r\n        componentRef.instance[\"data\"] = this.flowchart;\r\n      } else if(view == \"editor\"){\r\n        componentRef.instance[\"flowchart\"] = this.flowchart;\r\n        componentRef.instance[\"node\"] = this.flowchart.nodes[this.flowchart.meta.selected_nodes[0]];\r\n      } else if(view == \"publish\"){\r\n        componentRef.instance[\"flowchart\"] = this.flowchart;\r\n      }\r\n\r\n    }\r\n  }\r\n\r\n}\r\n","import { NgModule, Component } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\nimport { CoreModule } from '../core/core.module';\r\n//import { AppRoutingModule } from './app-routing.module';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { ViewEditorModule } from '@views';\r\nimport { ViewEditorComponent } from '@views';\r\nimport { ViewPublishModule } from '@views';\r\nimport { ViewPublishComponent } from '@views';\r\nimport { SharedModule } from '@shared/shared.module';\r\nimport { DataService } from '@services';\r\nimport { FlowchartComponent } from '../ngFlowchart-svg/flowchart.component';\r\nimport { MatMenuModule, MatIconModule, MatButtonModule } from '@angular/material';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    HttpClientModule, \r\n    //FormsModule,\r\n    //AppRoutingModule,\r\n    //CoreModule,\r\n    ViewEditorModule,\r\n    ViewPublishModule,\r\n    SharedModule,\r\n    MatMenuModule,\r\n    MatIconModule,\r\n    MatButtonModule,\r\n  ],\r\n  entryComponents: [ \r\n    ViewEditorComponent,\r\n    ViewPublishComponent,\r\n    FlowchartComponent,\r\n  ],\r\n  providers: [ DataService ],\r\n  bootstrap: [ AppComponent ]\r\n})\r\n\r\nexport class AppModule {\r\n    constructor () { }\r\n}\r\n\r\n","/**\n * Objects are a type of entity. They consist of conics, polylines, polymeshes, planes and rays.\n *\n * Objects are formed by a combination of topologies. More information can be found on the page for topo.\n */\n\nimport * as gs from \"gs-json\";\n\n//  ===============================================================================================================\n//  Error messages for end users ====================================================================================================\n//  ===============================================================================================================\n\n// Entities ====================================================================================================\n\nexport function checkEnt(ent: gs.IEnt): gs.IModel {\n    if (!(ent instanceof gs.Ent)) {notEnt();}\n    if (!ent.exists()) {entNotExist();}\n    return ent.getModel();\n}\n\nexport function checkEntList(ents: gs.IEnt[], min_len: number): gs.IModel {\n    if (!Array.isArray(ents)) {mustBeEntList();}\n    if (ents.length < min_len) {objListTooFew();}\n    if (!(ents[0] instanceof gs.Ent)) {notEntInList();}\n    const model: gs.IModel = ents[0].getModel();\n    for (const ent of ents) {\n        if (!(ent instanceof gs.Ent)) {notEntInList();}\n        if (!ent.exists()) {entNotExist();}\n        if (ent.getModel() !== model) {entInOtherModel();}\n    }\n    return model;\n}\n\nexport function notEnt():void {\n    throw new Error(\"The argument must be a point or object.\");\n}\n\nexport function notEntInList():void {\n    throw new Error(\"One of the items in the list was neither a point nor an object.\");\n}\n\nexport function entNotExist():void {\n    throw new Error(\"Point or object does not exist. It was probably deleted.\");\n}\n\nexport function mustBeEntList():void {\n    throw new Error(\"A list of objects and/or points must be given.\");\n}\n\nexport function entListTooFew():void {\n    throw new Error(\"The list conatins too few objects and/or points.\");\n}\n\nexport function entInOtherModel():void {\n    throw new Error(\"Entity is in a different model.\");\n}\n\n// Objects ====================================================================================================\n\nexport function checkObjID(model: gs.IModel, obj_id: number, obj_tye?: gs.EObjType):gs.IObj {\n    const obj: gs.IObj = model.getGeom().getObj(obj_id);\n    if (!obj.exists()) {objNotExist();}\n    if (obj.getModel() !== model) {objInOtherModel();}\n    if (obj_tye !== undefined) {\n        if (obj.getObjType() !== obj_tye) {objWrongType();}\n    }\n    return obj;\n}\n\nexport function checkObj(obj: gs.IObj, obj_tye?: gs.EObjType): gs.IModel {\n    if (!obj.exists()) {objNotExist();}\n    if (obj_tye !== undefined) {\n        if (obj.getObjType() !== obj_tye) {objWrongType();}\n    }\n    return obj.getModel();\n}\n\nexport function checkObjList(objs: gs.IObj[], min_len: number, obj_tye?: gs.EObjType): gs.IModel {\n    if (!Array.isArray(objs)) {mustBeObjList();}\n    if (objs.length < min_len) {objListTooFew();}\n    const model: gs.IModel = objs[0].getModel();\n    if (model === undefined) {mustBeObjList();}\n    for (const obj of objs) {\n        if (!obj.exists()) {objNotExist();}\n        if (obj.getModel() !== model) {objInOtherModel();}\n        if (obj_tye !== undefined) {\n            if (obj.getObjType() !== obj_tye) {objWrongType();}\n        }\n    }\n    return model;\n}\n\nexport function checkObjsSameModel(objs: gs.IObj[]): void {\n    if (!Array.isArray(objs)) {mustBeObjList();}\n    const model: gs.IModel = objs[0].getModel();\n    for (const obj of objs) {\n        if (obj.getModel() !== model) {objInOtherModel();}\n    }\n}\n\nexport function objNotExist():void {\n    throw new Error(\"Object does not exist. It was probably deleted.\");\n}\n\nexport function objInOtherModel():void {\n    throw new Error(\"Object is in a different model.\");\n}\n\nexport function objWrongType():void {\n    throw new Error(\"Object is of wrong type.\");\n}\n\nexport function pointNotExist():void {\n    throw new Error(\"Point does not exist. It was probably deleted.\");\n}\n\nexport function objListTooFew():void {\n    throw new Error(\"The list conatins too few objects.\");\n}\n\nexport function objListEmpty():void {\n    throw new Error(\"The list of objects was empty.\");\n}\n\nexport function mustBeObjList():void {\n    throw new Error(\"A list of objects must be given.\");\n}\n\n// Points ====================================================================================================\n\nexport function checkPointID(model: gs.IModel, point_id: number):gs.IPoint {\n    const point: gs.IPoint = model.getGeom().getPoint(point_id);\n    if (!point.exists()) {pointNotExist();}\n    if (point.getModel() !== model) {pointInOtherModel();}\n    return point;\n}\n\nexport function checkPoint(point: gs.IPoint): gs.IModel {\n    if (!point.exists()) {objNotExist();}\n    return point.getModel();\n}\n\nexport function checkPointList(points: gs.IPoint[], min_len: number): gs.IModel {\n    if (!Array.isArray(points)) {mustBePointList();}\n    if (points.length < min_len) {pointListTooFew();}\n    const model: gs.IModel = points[0].getModel();\n    for (const point of points) {\n        if (!point.exists()) {pointNotExist();}\n        if (point.getModel() !== model) {pointInOtherModel();}\n    }\n    return model;\n}\n\nexport function checkPointNestedList(points: gs.IPoint[][], min_len1: number, min_len2: number): gs.IModel {\n    if (!Array.isArray(points)) {mustBePointNestedList();}\n    const list_len1: number = points.length;\n    if (list_len1 < min_len1) {pointNestedListTooFew();}\n    const list_len2: number = points[0].length;\n    if (list_len2 < min_len2) {pointListTooFew();}\n    const model: gs.IModel = points[0][0].getModel();\n    for (const point_list of points) {\n        if (!Array.isArray(point_list)) {mustBePointList();}\n        if (point_list.length < min_len2) {pointListTooFew();}\n        for (const point of point_list) {\n            if (!point.exists()) {pointNotExist();}\n            if (point.getModel() !== model) {pointInOtherModel();}\n        }\n    }\n    return model;\n}\n\nexport function checkPointsSameModel(points: gs.IPoint[]): void {\n    if (!Array.isArray(points)) {mustBePointList();}\n    const model: gs.IModel = points[0].getModel();\n    for (const point of points) {\n        if (point.getModel() !== model) {pointInOtherModel();}\n    }\n}\n\nexport function pointInOtherModel():void {\n    throw new Error(\"Point is in a different model.\");\n}\n\nexport function pointListEmpty():void {\n    throw new Error(\"The list of points was empty.\");\n}\n\nexport function pointListTooFew():void {\n    throw new Error(\"The list of points did not contain enough points.\");\n}\n\nexport function pointNestedListTooFew():void {\n    throw new Error(\"The list did not contain enough points lists.\");\n}\n\nexport function pointNestedListJagged():void {\n    throw new Error(\"The lists of points must all be of equal length.\");\n}\n\nexport function mustBePointList():void {\n    throw new Error(\"A list of points must be given.\");\n}\n\nexport function mustBePointNestedList():void {\n    throw new Error(\"A list of lists of points must be given.\");\n}\n\n// IDs ====================================================================================================\n\nexport function invalidID():void {\n    throw new Error(\"The ID is invalid. It must be an integer number.\");\n}\n\nexport function mustBeIDList():void {\n    throw new Error(\"A list of IDs must be given.\");\n}\n\n// GROUPS ====================================================================================================\n\nexport function checkGroup(model: gs.IModel,group_name: string):gs.IGroup {\n    const group: gs.IGroup = model.getGroup(group_name);\n    if (group === undefined) {groupNotExist();}\n    return group;\n}\n\nexport function groupNotExist():void {\n    throw new Error(\"Group does not exist.\");\n}\n\n// XYZ ====================================================================================================\n\nexport function checkXYZ(xyz: gs.XYZ):void {\n    if (xyz === undefined) {argUndefined();}\n    if (!Array.isArray(xyz)) {xyzNotList()}\n    if (xyz.length !== 3 ) {xyzWrongLength();}\n    if (isNaN(xyz[0]) || isNaN(xyz[1]) || isNaN(xyz[2])) {xyzInvalidData();}\n}\n\nexport function xyzWrongLength():void {\n    throw new Error(\"XYZ list is wrong length. It should consist of three numbers.\");\n}\n\nexport function xyzInvalidData():void {\n    throw new Error(\"XYZ list contains invalid data. It should consist of three numbers.\");\n}\n\nexport function xyzNotList():void {\n    throw new Error(\"XYZ list must be a list of three numbers.\");\n}\n\n// Angles ====================================================================================================\n\n// export function checkAngles(angles: [number, number]):void {\n//     if (angles === undefined) {argUndefined();}\n//     if (angles.length !== 2 ) {anglesWrongLength();}\n//     if (isNaN(angles[0]) || isNaN(angles[1])) {anglesInvalidData();}\n//     if (angles[0] < 0 || angles[0] > 360) {anglesInvalidData();}\n//     if (angles[1] < 0 || angles[1] > 360) {anglesInvalidData();}\n// }\n\n// export function anglesWrongLength():void {\n//     throw new Error(\"Angles list is wrong length. It should consist of two numbers between 0 and 360.\");\n// }\n\n// export function anglesInvalidData():void {\n//     throw new Error(\"Angles list contains invalid data. It should consist of two numbers between 0 and 360.\");\n// }\n\n// Numbers ====================================================================================================\n\nexport function checkNum(x: number):void {\n    if (x === undefined) {argUndefined();}\n}\n\nexport function checkPosNum(x: number):void {\n    if (x === undefined) {argUndefined();}\n    if (x < 0 ) {numMustBePos();}\n}\n\nexport function checkPosNums(nums: number[]):void {\n    if (nums === undefined) {argUndefined();}\n    for (const num of nums) {\n        if (num < 0 ) {numMustBePos();}\n    }\n}\n\nexport function checkNumListLength(list: any[], length:number):void {\n    if (list === undefined) {argUndefined();}\n    if (!Array.isArray(list)) {argMustBeNumList(length);}\n    if (list.length !== length) {argNumListWrongLength(length);}\n}\n\nexport function argMustBeNumList(length: number):void {\n    throw new Error(\"Argument must be a list of \" + length + \"numbers.\");\n}\n\nexport function argNumListWrongLength(length: number):void {\n    throw new Error(\"Argument must be a list of \" + length + \" numbers.\");\n}\n\nexport function numMustBePos():void {\n    throw new Error(\"Argument must be a positive number.\");\n}\n\n// GENERAL ====================================================================================================\n\nexport function argUndefined():void {\n    throw new Error(\"Argument is undefined.\");\n}\n\n\n","export const _parameterTypes = {\r\n    constList: \"__constList__\",\r\n    model: \"__model__\",\r\n    input: \"__input__\"\r\n};\r\n","import * as gs from \"gs-json\";\nimport * as three from \"three\";\n\nexport function copyObjPoints(obj: gs.IObj, reverse_faces: boolean): gs.IPoint[][][] {\n    const new_points_map: Map<number, gs.IPoint> = new Map();\n    const new_faces_points: gs.IPoint[][] = [];\n    const new_wires_points: gs.IPoint[][] = [];\n    const faces: gs.IFace[] = obj.getFaces();\n    for (const face of faces) {\n        const face_points: gs.IPoint[] = face.getVertices().map((v) => v.getPoint());\n        const new_face_points: gs.IPoint[] = [];\n        for (const point of face_points) {\n            if (new_points_map.has(point.getID())) {\n                new_face_points.push(new_points_map.get(point.getID()));\n            } else {\n                const new_point: gs.IPoint = point.copy() as gs.IPoint;\n                new_face_points.push(new_point);\n                new_points_map.set(point.getID(), new_point);\n            }\n        }\n        if (reverse_faces) {new_face_points.reverse()}\n        new_faces_points.push(new_face_points);\n    }\n    const wires: gs.IWire[] = obj.getWires();\n    for (const wire of wires) {\n        const wire_points: gs.IPoint[] = wire.getVertices().map((v) => v.getPoint());\n        const new_wire_points: gs.IPoint[] = [];\n        for (const point of wire_points) {\n            if (new_points_map.has(point.getID())) {\n                new_wire_points.push(new_points_map.get(point.getID()));\n            } else {\n                const new_point: gs.IPoint = point.copy() as gs.IPoint;\n                new_wire_points.push(new_point);\n                new_points_map.set(point.getID(), new_point);\n            }\n        }\n        new_wires_points.push(new_wire_points); // do not reverse\n    }\n    return [new_wires_points, new_faces_points];\n}\n","/**\n * Attributes are properties assigned to each object.\n */\n\nimport * as gs from \"gs-json\";\n\n//  ===============================================================================================================\n//  Attrib Get ====================================================================================================\n//  ===============================================================================================================\n\n/**\n * Gets attribute that apply for a specified geometry type from a model\n * @param model Model to get attribute from\n * @param name The attribute name\n * @param geom_type Type of geometry to get attribute from\n * @returns List of attributes\n */\nexport function Get(model: gs.IModel, name: string, geom_type: gs.EGeomType): gs.IAttrib {\n    switch (geom_type) {\n        case gs.EGeomType.points: case gs.EGeomType.objs:\n            return model.getEntAttrib(name, geom_type);\n        default:\n            return model.getTopoAttrib(name, geom_type);\n    }\n}\n\n/**\n * Gets all entity attribs\n * @param model Model to get attribute from\n * @returns List of attributes\n */\nexport function getAll(model: gs.IModel): gs.IAttrib[] {\n    return [...model.getAllEntAttribs(), ...model.getAllTopoAttribs()];\n}\n\n/**\n * Gets all entity attribs\n * @param model Model to get attribute from\n * @returns List of attributes\n */\nexport function getAllEnts(model: gs.IModel): gs.IAttrib[] {\n    return model.getAllEntAttribs();\n}\n\n/**\n * Gets all topo attribs\n * @param model Model to get attribute from\n * @returns List of attributes\n */\nexport function getAllTopos(model: gs.IModel): gs.IAttrib[] {\n    return model.getAllTopoAttribs();\n}\n\n//  ===============================================================================================================\n//  Attrib Constructors ===========================================================================================\n//  ===============================================================================================================\n\n/**\n * Adds an attribute to a model\n * @param model Model to add to\n * @param name Name of new attribute\n * @param geom_type Type of geometry to add to\n * @param geom_type Data type for attribute values. (number, string, boolean, number[], string[], boolean[])\n * @returns New attribute\n */\nexport function Create(model: gs.IModel, name: string, geom_type: gs.EGeomType,\n                       data_type: gs.EDataType): gs.IAttrib {\n    switch (geom_type) {\n        case gs.EGeomType.points: case gs.EGeomType.objs:\n            return model.addEntAttrib(name, geom_type, data_type);\n        default:\n            return model.addTopoAttrib(name, geom_type, data_type);\n    }\n}\n\n//  ===============================================================================================================\n//  Attrib Functions ==============================================================================================\n//  ===============================================================================================================\n\n/**\n * Deletes an attribute\n * @param attrib Attribute to delete\n * @returns True if successful\n */\nexport function del(attrib: gs.IAttrib): boolean {\n    return attrib.getModel().delAttrib(attrib);\n}\n\n/**\n * Gets the name of an attribute\n * @param attrib Attribute to get name of\n * @returns Name of specified attribute\n */\nexport function getName(attrib: gs.IAttrib): string {\n    return attrib.getName();\n}\n\n/**\n * Sets the name of an attribute\n * @param attrib Attribute to set name\n * @param name New name of attribute\n * @returns Old name of specified attribute\n */\nexport function setName(attrib: gs.IAttrib, name: string ): string {\n    return attrib.setName(name);\n}\n\n// TODO - see if these set and get methods can be combined\n\n/**\n * Gets the value of a ent attribute for a specified geometry\n * @param attrib Attribute\n * @param ent Geometry\n * @returns Value of attribute\n */\nexport function getEntValue(attrib: gs.IEntAttrib, ent:gs.IPoint | gs.IObj): any {\n    return ent.getAttribValue(attrib);\n}\n\n/**\n * Sets the value of a ent attribute for a specified geometry\n * @param attrib Attribute\n * @param ent Geometry\n * @param value New value of attribute\n * @returns Old value of specified attribute\n */\nexport function setEntValue(attrib: gs.IEntAttrib, ent: gs.IPoint | gs.IObj, value: any ): any {\n    return ent.setAttribValue(attrib, value);\n}\n\n/**\n * Gets the value of a topo attribute for a specified geometry\n * @param attrib Attribute\n * @param topo Geometry\n * @returns Value of attribute\n */\nexport function getTopoValue(attrib: gs.ITopoAttrib, topo:gs.ITopo): any {\n    return topo.getAttribValue(attrib);\n}\n\n/**\n * Sets the value of a topo attribute for a specified geometry\n * @param attrib Attribute\n * @param topo Geometry\n * @param value New value of attribute\n * @returns Old value of specified attribute\n */\nexport function setTopoValue(attrib: gs.ITopoAttrib, topo: gs.ITopo, value: any ): any {\n    return topo.setAttribValue(attrib, value);\n}\n","/**\n * Function for doing various geometric calculations.\n */\n\n/**\n *\n */\n\nimport * as gs from \"gs-json\";\nimport * as three from \"three\";\nimport * as threex from \"./libs/threex/threex\";\nimport * as error from \"./_error_msgs_dev\";\n\n//  ===============================================================================================================\n//  Pline Get and Copy ============================================================================================\n//  ===============================================================================================================\n\n/**\n * Calculate the distance between two points.\n *\n * @param point1 The first point.\n * @param point2 The second point.\n * @returns The distance.\n */\nexport function distBetweenPoints(point1: gs.IPoint, point2: gs.IPoint): number {\n    error.checkPoint(point1);\n    error.checkPoint(point2);\n    error.checkPointsSameModel([point1, point2]);\n    return threex.vectorFromPointsAtoB(point1, point2).length();\n}\n\n/**\n * Creates a vector (a list of 3 numbers) from point 1 to point 2.\n *\n * @param point1 The first point.\n * @param point2 The second point.\n * @returns A list of three numbers.\n */\nexport function vectorBetweenPoints(point1: gs.IPoint, point2: gs.IPoint): gs.XYZ {\n    error.checkPoint(point1);\n    error.checkPoint(point2);\n    error.checkPointsSameModel([point1, point2]);\n    return threex.vectorFromPointsAtoB(point1, point2).toArray() as gs.XYZ;\n}\n\n","/**\n * Functions for working with circles.\n * Circles are geometric objects definded by a single vertex and a set of parameters.\n * The circle object can be either a closed circle or an open arc.\n */\n\n/**\n * The parameters defined the orientation, radius, and arc angles of the circle.\n * The orientation is defined by two vectors, the X and Y vectors of the plane.\n * The radius is defined by the length of the X vector.\n * The arc angles define are two angles between 0 and 360 that define the start and end of the arc.\n * If the arc angles are null, then the circle is assumed to be a closed circle.\n */\n\nimport * as gs from \"gs-json\";\nimport * as util from \"./circle_dev\";\nimport * as three from \"three\";\nimport * as threex from \"./libs/threex/threex\";\nimport * as circles from \"./libs/conics/circles\";\nimport * as error from \"./_error_msgs_dev\";\n\n//  ===============================================================================================================\n//  Circle Get and Copy =====================================================================================================\n//  ===============================================================================================================\n\n/**\n * Gets a circle from the model based on an ID number.\n * In the viewer, the object label can display (it starts with 'o'), which contains the ID.\n * For example, if the label is \"o123\", then the ID is the number 123.\n *\n * @param model Model to get circle object from.\n * @param id ID number of circle object.\n * @returns Circle object.\n */\nexport function Get(model: gs.IModel, id: number): gs.ICircle {\n    // check args\n    const obj: gs.IObj = error.checkObjID(model, id, gs.EObjType.circle);\n    // return the circle\n    return obj as gs.ICircle;\n}\n\n/**\n * Create a copy of a circle object.\n *\n * @param circle The circle object to copy.\n * @param copy_attribs If true, attributes are copied to the new circle.\n * @returns Circle object.\n */\nexport function Copy(circle: gs.ICircle, copy_attribs?: boolean): gs.ICircle {\n    // check args\n    error.checkObj(circle, gs.EObjType.circle);\n    // copy and return\n    return circle.copy(copy_attribs) as gs.ICircle;\n}\n\n/**\n * Copies a circle from one model into another model.\n *\n * @param model The model to copy to.\n * @param circle The circle object to copy.\n * @returns The copied circle object in the model.\n */\nexport function CopyToModel(model: gs.IModel, circle: gs.ICircle): gs.ICircle {\n    // check args\n    error.checkObj(circle, gs.EObjType.circle);\n    // check it is not already in the model\n    if (circle.getModel() === model) { throw new Error(\"Error: circle is already in model.\"); }\n    // copy circle and return it\n    return model.getGeom().copyCircleFromModel(circle);\n}\n\n//  ===============================================================================================================\n//  Constructors ============================================================================================\n//  ===============================================================================================================\n\n/**\n * Creates a circle from an origin point parallel to a plane defined by the two X and Y vectors.\n * The radius will be equal to the length of the X vector.\n * If no angle is defined, a circle is created. Otherwise, an arc is created, with the specified angles\n * starting at the x-axis in an anti-clockwise direction.\n *\n * @param origin Point object, the center of the circle.\n * @param vec_x X-axis of the circle plane. (The length of the vecor described the radius.)\n * @param vec Vector on the circle plane.\n * @param angles Two angles between 0 and 360, or null for a circle.\n * @returns Circle object.\n */\nexport function FromOrigin2Vectors(origin: gs.IPoint, vec_x: gs.XYZ, vec: gs.XYZ,\n    angles: [number, number]): gs.ICircle {\n    error.checkPoint(origin);\n    error.checkXYZ(vec_x);\n    error.checkXYZ(vec);\n    // make the circle\n    return origin.getGeom().addCircle(origin, vec_x, vec, util._argsCheckAngles(angles));\n}\n\n/**\n * Create a circle at the origin point parallel to a plane that passes through two other points.\n * The radius will be equal to the distance from the origin to point1.\n * If angle is undefined, a circle is created. Otherwise, an arc is created, with the specified angles\n * starting at point1 in an anti-clockwise direction.\n *\n * @param origin Point object, the center of the circle.\n * @param point1 Point object, on the circle perimeter, and defining teh x-axis of the plane.\n * @param point2 Point object, on the plane.\n * @param angles Two angles between 0 and 360, or null for a circle.\n * @returns Circle object.\n */\nexport function FromOrigin2Points(origin: gs.IPoint, point1: gs.IPoint, point2: gs.IPoint,\n    angles: [number, number]): gs.ICircle {\n    error.checkPoint(origin);\n    error.checkPoint(point1);\n    error.checkPoint(point2);\n    // create the vectors\n    const vec_x: gs.XYZ = threex.vectorFromPointsAtoB(origin, point1).toArray() as gs.XYZ;\n    const vec: gs.XYZ = threex.vectorFromPointsAtoB(origin, point2).toArray() as gs.XYZ;\n    // make the circle\n    return origin.getGeom().addCircle(origin, vec_x, vec, util._argsCheckAngles(angles));\n}\n\n/**\n * Create a circle at the origin point parallel to the WCS XY plane, with the specified radius.\n * If angle is undefined, a circle is created. Otherwise, an arc is created, with the specified angles\n * starting at point1 in an anti-clockwise direction.\n *\n * @param origin Point object, the center of the circle.\n * @param radius Radius of circle.\n * @param angles Two angles between 0 and 360, or null for a circle.\n * @returns Circle object.\n */\nexport function FromOriginXY(origin: gs.IPoint, radius: number, angles: [number, number]): gs.ICircle {\n    error.checkPoint(origin);\n    error.checkPosNum(radius);\n    // create the vectors\n    const vec_x: gs.XYZ = [radius, 0, 0];\n    const vec: gs.XYZ = [0, 1, 0];\n    // make the circle\n    return origin.getGeom().addCircle(origin, vec_x, vec, util._argsCheckAngles(angles));\n}\n\n/**\n * Create a circle at the origin point parallel to the WCS YZ plane, with the specified radius.\n * If angle is undefined, a circle is created. Otherwise, an arc is created, with the specified angles\n * starting at point1 in an anti-clockwise direction.\n *\n * @param origin Point object, the center of the circle.\n * @param radius Radius of circle.\n * @param angles Two angles between 0 and 360, or null for a circle.\n * @returns Circle object.\n */\nexport function FromOriginYZ(origin: gs.IPoint, radius: number, angles: [number, number]): gs.ICircle {\n    error.checkPoint(origin);\n    error.checkPosNum(radius);\n    // create the vectors\n    const vec_x: gs.XYZ = [0, radius, 0];\n    const vec: gs.XYZ = [0, 0, 1];\n    // make the circle\n    return origin.getGeom().addCircle(origin, vec_x, vec, util._argsCheckAngles(angles));\n}\n\n/**\n * Create a circle at the origin point parallel to the WCS ZX plane, with the specified radius.\n * If angle is undefined, a circle is created. Otherwise, an arc is created, with the specified angles\n * starting at point1 in an anti-clockwise direction.\n *\n * @param origin Point object, the center of the circle.\n * @param radius Radius of circle.\n * @param angles Two angles between 0 and 360, or null for a circle.\n * @returns New circle (or arc).\n */\nexport function FromOriginZX(origin: gs.IPoint, radius: number, angles: [number, number]): gs.ICircle {\n    error.checkPoint(origin);\n    error.checkPosNum(radius);\n    // create the vectors\n    const vec_x: gs.XYZ = [0, 0, radius];\n    const vec: gs.XYZ = [1, 0, 0];\n    // make the circle\n    return origin.getGeom().addCircle(origin, vec_x, vec, util._argsCheckAngles(angles));\n}\n\n/**\n * Create a circle from a plane, with the specified radius.\n * If angle is undefined, a circle is created. Otherwise, an arc is created, with the specified angles\n * starting at point1 in an anti-clockwise direction.\n *\n * @param plane Plane object to construct circle on.\n * @param radius Radius of circle.\n * @param angles Two angles between 0 and 360, or null for a circle.\n * @returns New circle object.\n */\nexport function FromPlane(plane: gs.IPlane, radius: number, angles: [number, number]): gs.ICircle {\n    error.checkObj(plane, gs.EObjType.plane);\n    error.checkPosNum(radius);\n    // create the vectors\n    const vecs: gs.XYZ[] = plane.getAxes();\n    const vec_x: gs.XYZ = new three.Vector3(...vecs[0]).setLength(radius).toArray() as gs.XYZ;\n    const vec: gs.XYZ = vecs[1];\n    // make the circle\n    return plane.getGeom().addCircle(plane.getOrigin(), vec_x, vec, util._argsCheckAngles(angles));\n}\n\n/**\n * Create a circle that passes through three points.\n * If is_closed is false, an arc is created. Otherwise, an arc is created.\n *\n * @param point1 Point object, on the circle.\n * @param point2 Point object, on the circle.\n * @param point3 Point object, on the circle.\n * @param is_closed If false, an arc is generated that starts at point1 and end at point3, passing through point 2.\n * @returns New circle object.\n */\nexport function From3Points(point1: gs.IPoint, point2: gs.IPoint, point3: gs.IPoint, is_closed: boolean): gs.ICircle {\n    const model: gs.IModel = error.checkPointList([point1, point2, point3], 3);\n    // do the maths\n    const result = circles.circleFrom3Points(\n        point1.getPosition(), point2.getPosition(), point3.getPosition(), is_closed);\n    const origin: gs.IPoint = model.getGeom().addPoint(result.origin);\n    // make the circle or arc\n    if (is_closed) {\n        return origin.getGeom().addCircle(origin, result.vec_x, result.vec_y);\n    } else {\n        return origin.getGeom().addCircle(origin, result.vec_x, result.vec_y, [0, result.angle]);\n    }\n}\n\n//  ===============================================================================================================\n//  Get and Set ===================================================================================================\n//  ===============================================================================================================\n\n/**\n * Gets the origin of the circle.\n * @param circle Circle objject to obtain origin from.\n * @returns Point object, the origin of teh circle.\n */\nexport function getOrigin(circle: gs.ICircle): gs.IPoint {\n    error.checkObj(circle, gs.EObjType.circle);\n    return circle.getOrigin();\n}\n\n/**\n * Gets the X and Y vectors of the circle plane. The circle radius is equal to the length of the X vector.\n *\n * @param circle Circle object to get vectors from.\n * @returns Two vectors, the X and Y vectors of teh circle plane.\n */\nexport function getAxes(circle: gs.ICircle): gs.XYZ[] {\n    error.checkObj(circle, gs.EObjType.circle);\n    return circle.getAxes();\n}\n\n/**\n * Gets the arc angles of the circle.\n *\n * @param circle Circle object to get angles from.\n * @returns The angles, or null if it is a closed circle.\n */\nexport function getArcAngles(circle: gs.ICircle): [number, number] {\n    error.checkObj(circle, gs.EObjType.circle);\n    return circle.getAngles();\n}\n\n/**\n * Sets the angles for the arc.\n *\n * @param circle Circle object to set angles for.\n * @param angles The angles to set, two numbers between 0 and 360. If null, then the circle is closed.\n */\nexport function setArcAngles(circle: gs.ICircle, angles: [number, number]): [number, number] {\n    error.checkObj(circle, gs.EObjType.circle);\n    const old_angles: [number, number] = circle.getAngles();\n    circle.setAngles(util._argsCheckAngles(angles));\n    return old_angles;\n}\n\n/**\n * Checks if a circle object is closed. If it is not closed, then it must be an arc.\n *\n * @param circle Circle object to test.\n * @returns True if the circle is closed.\n */\nexport function isClosed(circle: gs.ICircle): boolean {\n    error.checkObj(circle, gs.EObjType.circle);\n    return circle.isClosed();\n}\n\n/**\n * Closes the arc, so that it becomes a circle.\n *\n * @param circle Circle object to close.\n * @return True if the open circle was closed, false if the circle was already closed.\n */\nexport function close(circle: gs.ICircle): boolean {\n    error.checkObj(circle, gs.EObjType.circle);\n    if (circle.isClosed()) { return false; }\n    circle.setAngles(undefined);\n    return true;\n}\n\n//  ===============================================================================================================\n//  Functions =====================================================================================================\n//  ===============================================================================================================\n\n/**\n * Returns the perimeter length of a circle.\n * If the circle is an open arc, then the length of the arc is returned.\n *\n * @param circle Circle object to calculate length for.\n * @returns Length of circle or arc.\n */\nexport function calcLength(circle: gs.ICircle): number {\n    error.checkObj(circle, gs.EObjType.circle);\n    return circle.length();\n}\n\n/**\n * Returns a point by evaluating the position along a circle.\n * The position is specified by a t parameter that starts at 0 and ends at 1.\n * If the circle object is closed, 0 and 1 will have the same position.\n * Values for of t<0 and t>1 are valid, they will loop around.\n * If the circle object is an open arc, the 0 will be the start of the arc, and 1 will be the end of the arc.\n * Values for of t<0 and t>1 are automatically converted to 0 and 1 respectively.\n *\n * @param circle Cricle object to evaluate.\n * @param t Parameter to evaluate (0 is the start of the circular arc, 1 is the end of the circular arc)\n * @returns Point.\n */\nexport function evalParam(circle: gs.ICircle, t: number): gs.IPoint {\n    error.checkObj(circle, gs.EObjType.circle);\n    error.checkNum(t);\n    if (circle.isClosed()) {\n        if (t < 0) {t = (t % 1) + 1;}\n        if (t > 1) {t = (t % 1) - 1;}\n    } else {\n        if (t < 0) {t = 0;}\n        if (t > 1) {t = 1;}\n    }\n    return circle.evalParam(t);\n}\n\n/**\n * Returns a tangent unit vector by evaluating the position along a circle.\n * The position is specified by a t parameter that starts at 0 and ends at 1.\n * If the circle object is closed, 0 and 1 will have the same position.\n * Values for of t<0 and t>1 are valid, they will loop around.\n * If the circle object is an open arc, the 0 will be the start of the arc, and 1 will be the end of the arc.\n * Values for of t<0 and t>1 are automatically converted to 0 and 1 respectively.\n *\n * @param circle Cricle object to evaluate.\n * @param t Parameter to evaluate (0 is the start of the circular arc, 1 is the end of the circular arc)\n * @returns Tangent unit vector (a list of three numbers).\n */\nexport function evalParamTangent(circle: gs.ICircle, t: number): gs.XYZ {\n    error.checkObj(circle, gs.EObjType.circle);\n    error.checkNum(t);\n    if (circle.isClosed()) {\n        if (t < 0) {t = (t % 1) + 1;}\n        if (t > 1) {t = (t % 1) - 1;}\n    } else {\n        if (t < 0) {t = 0;}\n        if (t > 1) {t = 1;}\n    }\n    return circle.evalParamTangent(t);\n}\n\n/**\n * Returns a t parameter by projecting a point onto a circle.\n * The t parameter represents a position on the circle.\n * The parameter starts at 0 and ends at 1.\n * If the circle object is closed, 0 and 1 will have the same position.\n * If the circle object is an open arc, the 0 will be the start of the arc, and 1 will be the end of the arc.\n * The point is projected onto the closest point on the circle, and t is then caclulated for that point.\n *\n * @param circle Cricle object to evaluate.\n * @param point The point to be projected onto the circle or arc.\n * @returns t parameter.\n */\nexport function evalPoint(circle: gs.ICircle, point: gs.IPoint): number {\n    error.checkObj(circle, gs.EObjType.circle);\n    error.checkPoint(point);\n    return circle.evalPoint(point);\n}\n\n/**\n * Returns two polylines that are tangential (inner tangents) to two coplanar circles.\n *\n * @param circle1 The first circle.\n * @param circle2 The second circle.\n * @returns Two polylines, or null if inner tangents cannot be calculated.\n */\nexport function tangentPlinesInner2D(circle1: gs.ICircle, circle2: gs.ICircle, ): [gs.IPolyline, gs.IPolyline] {\n    error.checkObj(circle1, gs.EObjType.circle);\n    error.checkObj(circle2, gs.EObjType.circle);\n    error.checkObjsSameModel([circle1, circle2]);\n    return circles.innerTangentsCircleCircle2D(circle1, circle2);\n}\n\n/**\n * Returns two polylines that are tangential (outer tangents) to two coplanar circles.\n *\n * @param circle1 The first circle.\n * @param circle2 The second circle.\n * @returns Two polylines, or null if outer tangents cannot be calculated.\n */\nexport function tangentPlinesOuter2D(circle1: gs.ICircle, circle2: gs.ICircle, ): [gs.IPolyline, gs.IPolyline] {\n    error.checkObj(circle1, gs.EObjType.circle);\n    error.checkObj(circle2, gs.EObjType.circle);\n    error.checkObjsSameModel([circle1, circle2]);\n    return circles.outerTangentsCircleCircle2D(circle1, circle2);\n}\n\n","import * as gs from \"gs-json\";\nimport * as threex from \"./libs/threex/threex\";\nimport * as three from \"three\";\nimport * as circles from \"./libs/conics/circles\";\nimport { Arr } from \"./libs/arr/arr\";\n\n//  ==========================================================================================================\n//  Util method\n//  ==========================================================================================================\nexport function _argsCheckAngles(angles: [number, number]): [number, number] {\n    //export function checkCircleAngles(angles: [number, number]): [number, number] {\n    if (angles === undefined || angles === null) { return null; }\n    // fix angle 0\n    if (Math.abs(angles[0]) > 360) {\n        angles[0] = angles[0] % 360;\n    }\n    if (angles[0] < 0) {\n        angles[0] = 360 + angles[0];\n    }\n    // fix angle 1\n    if (Math.abs(angles[1]) > 360) {\n        angles[1] = angles[1] % 360;\n    }\n    if (angles[1] < 0) {\n        angles[1] = 360 + angles[1];\n    }\n    // return the fixed angles\n    return angles;\n}\n\n//  ===============================================================================================================\n//  Circle Constructors ============================================================================================\n//  ===============================================================================================================\n\n// Still not working\n\n/**\n * Create a circle that passes three points.\n * If is_arc is false, a circle is created.\n * Otherwise, an arc is created.\n *\n * @param point1 Point object, on the circle.\n * @param point2 Point object, on the circle.\n * @param point3 Point object, on the circle.\n * @param is_arc If true, an arc is generated that starts at point1 and end at point3, passing through point 2.\n * @returns New circle object.\n */\nexport function From3Points(point1: gs.IPoint, point2: gs.IPoint, point3: gs.IPoint, is_closed: boolean): gs.ICircle {\n    if (!point1.exists()) { throw new Error(\"Error: point1 has been deleted.\"); }\n    if (!point2.exists()) { throw new Error(\"Error: point2 has been deleted.\"); }\n    if (!point3.exists()) { throw new Error(\"Error: point3 has been deleted.\"); }\n    // check\n    const model: gs.IModel = point1.getModel();\n    if (point2.getModel() !== model) { throw new Error(\"Error: Points must all be in same model.\"); }\n    if (point3.getModel() !== model) { throw new Error(\"Error: Points must all be in same model.\"); }\n    // do the maths\n    const result = circles.circleFrom3Points(\n        point1.getPosition(), point2.getPosition(), point3.getPosition(), is_closed);\n    const origin: gs.IPoint = model.getGeom().addPoint(result.origin);\n    const vec_x: gs.XYZ = result.vec_x;\n    const vec: gs.XYZ = result.vec_y;\n    // make the circle or arc\n    if (is_closed) {\n        return origin.getGeom().addCircle(origin, vec_x, vec);\n    } else {\n        return origin.getGeom().addCircle(origin, vec_x, vec, [0, result.angle]);\n    }\n}\n\n/**\n * Adds an arc to the model based on three points\n *\n * All points are taken to be points along the arc\n * @param pt1 Start point of arc\n * @param pt2 Second point on arc\n * @param pt3 End point of arc\n * @returns New arc if successful\n */\nexport function ArcFrom3Points(pt1: gs.IPoint, pt2: gs.IPoint, pt3: gs.IPoint): gs.ICircle {\n    const m1: gs.IModel = pt1.getModel();\n    const m2: gs.IModel = pt2.getModel();\n    const m3: gs.IModel = pt3.getModel();\n    if (m1 !== m2) { throw new Error(\"Points must be in the same model.\"); }\n    if (m1 !== m3) { throw new Error(\"Points must be in the same model.\"); }\n    const g1: gs.IGeom = m1.getGeom();\n    if (threex.vectorsAreCodir(threex.subPoints(pt1, pt2),\n            threex.subPoints(pt1, pt3))) { throw new Error(\"Points must be not aligned\"); }\n    const AB: three.Vector3 = threex.vectorFromPointsAtoB(pt1, pt2);\n    const AC: three.Vector3 = threex.vectorFromPointsAtoB(pt1, pt3);\n    const BC: three.Vector3 = threex.vectorFromPointsAtoB(pt2, pt3);\n    const radius: number = BC.length() / (2 * threex.crossVectors(AB.normalize(), AC.normalize(), false).length());\n    const m: gs.IModel = new gs.Model();\n    const g: gs.IGeom = m.getGeom();\n    const circle_1: gs.ICircle = g.addCircle(pt1, [radius, 0, 0], [0, radius, 0]);\n    const circle_2: gs.ICircle = g.addCircle(pt2, [radius, 0, 0], [0, radius, 0]);\n    const circle_3: gs.ICircle = g.addCircle(pt3, [radius, 0, 0], [0, radius, 0]);\n    const c1: gs.IPoint[] = circles.isectCircleCircle2D(circle_1, circle_2);\n    const c2: gs.IPoint[] = circles.isectCircleCircle2D(circle_1, circle_3);\n\n    let center: gs.IPoint = null;\n    if (Arr.equal(c1[0].getPosition(), c2[0].getPosition())) {\n        center = g.addPoint(c1[0].getPosition());\n        // center = g1.addPoint(c1[0].getPosition());\n    }\n    if (Arr.equal(c1[0].getPosition(), c2[1].getPosition())) {\n        center = g.addPoint(c1[0].getPosition());\n        // center = g1.addPoint(c1[0].getPosition());\n    }\n    if (Arr.equal(c1[1].getPosition(), c2[0].getPosition())) {\n        center = g.addPoint(c1[1].getPosition());\n        // center = g1.addPoint(c1[1].getPosition());\n    }\n    if (Arr.equal(c1[1].getPosition(), c2[1].getPosition())) {\n        center = g.addPoint(c1[1].getPosition());\n        // center = g1.addPoint(c1[1].getPosition());\n    }\n    if (center === null) { throw new Error(\"Review thresholds\"); }\n\n    const center_pt1: three.Vector3 = threex.vectorFromPointsAtoB(center, pt1);\n    const center_pt2: three.Vector3 = threex.vectorFromPointsAtoB(center, pt2);\n    const center_pt3: three.Vector3 = threex.vectorFromPointsAtoB(center, pt3);\n\n    const angle: number = Math.max(\n        Math.min(center_pt1.angleTo(center_pt2), center_pt2.angleTo(center_pt1)),\n        Math.min(center_pt1.angleTo(center_pt3), center_pt3.angleTo(center_pt1)),\n        Math.min(center_pt2.angleTo(center_pt3), center_pt3.angleTo(center_pt2)));\n\n    let start_point: gs.IPoint = null;\n    if (angle === center_pt1.angleTo(center_pt2)) {\n        start_point = g.addPoint(pt1.getPosition());\n    }\n    if (angle === center_pt2.angleTo(center_pt1)) {\n        start_point = g.addPoint(pt2.getPosition());\n    }\n    if (angle === center_pt1.angleTo(center_pt3)) {\n        start_point = g.addPoint(pt1.getPosition());\n    }\n    if (angle === center_pt3.angleTo(center_pt1)) {\n        start_point = g.addPoint(pt3.getPosition());\n    }\n    if (angle === center_pt2.angleTo(center_pt3)) {\n        start_point = g.addPoint(pt2.getPosition());\n    }\n    if (angle === center_pt3.angleTo(center_pt2)) {\n        start_point = g.addPoint(pt3.getPosition());\n    }\n    const u: three.Vector3 = threex.vectorFromPointsAtoB(center, start_point);\n    let normal: three.Vector3 = null;\n    normal = threex.crossVectors(u, center_pt1);\n    if (normal.length() === 0) { normal = threex.crossVectors(u, center_pt2); }\n    if (normal.length() === 0) { normal = threex.crossVectors(u, center_pt3); }\n    const v: three.Vector3 = threex.crossVectors(normal.normalize(), u);\n\n    return g1.addCircle(g1.addPoint(center.getPosition()), [u[0], u[1], u[2]], [v[0], v[1], v[2]], [0, angle]);\n}\n\n/**\n * Adds a closed circle to the model based on three points\n *\n * All points are taken to be points along the circumference of the circle\n * @param pt1 First point on circle\n * @param pt2 Second point on circle\n * @param pt3 Third point on circle\n * @returns New circle if successful\n */\nexport function CircleFrom3Points(pt1: gs.IPoint, pt2: gs.IPoint, pt3: gs.IPoint): gs.ICircle {\n    const m1: gs.IModel = pt1.getModel();\n    const m2: gs.IModel = pt2.getModel();\n    const m3: gs.IModel = pt3.getModel();\n    if (m1 !== m2) {\n        throw new Error(\"Points must be in the same model.\");\n    }\n    if (m1 !== m3) {\n        throw new Error(\"Points must be in the same model.\");\n    }\n    if (threex.vectorsAreCodir(threex.subPoints(pt1, pt2),\n            threex.subPoints(pt1, pt3))) { throw new Error(\"Points must be not aligned\"); }\n    const AB: three.Vector3 = threex.vectorFromPointsAtoB(pt1, pt2);\n    const AC: three.Vector3 = threex.vectorFromPointsAtoB(pt1, pt3);\n    const BC: three.Vector3 = threex.vectorFromPointsAtoB(pt2, pt3);\n    const radius: number = BC.length() / (2 * threex.crossVectors(AB.normalize(), AC.normalize(), false).length());\n    const m: gs.IModel = new gs.Model();\n    const g: gs.IGeom = m.getGeom();\n    const circle_1: gs.ICircle = g.addCircle(pt1, [radius, 0, 0], [0, radius, 0], [0, 360]);\n    const circle_2: gs.ICircle = g.addCircle(pt2, [radius, 0, 0], [0, radius, 0], [0, 360]);\n    const circle_3: gs.ICircle = g.addCircle(pt3, [radius, 0, 0], [0, radius, 0], [0, 360]);\n    const c1: gs.IPoint[] = circles.isectCircleCircle2D(circle_1, circle_2);\n    const c2: gs.IPoint[] = circles.isectCircleCircle2D(circle_1, circle_3);\n    const g1: gs.IGeom = m1.getGeom();\n    if (Arr.equal(c1[0].getPosition(), c2[0].getPosition())) {\n        return g1.addCircle(g1.addPoint(c1[0].getPosition()), [radius, 0, 0], [0, radius, 0], [0, 360]);\n    }\n    if (Arr.equal(c1[0].getPosition(), c2[1].getPosition())) {\n        return g1.addCircle(g1.addPoint(c1[0].getPosition()), [radius, 0, 0], [0, radius, 0], [0, 360]);\n    }\n    if (Arr.equal(c1[1].getPosition(), c2[0].getPosition())) {\n        return g1.addCircle(g1.addPoint(c1[1].getPosition()), [radius, 0, 0], [0, radius, 0], [0, 360]);\n    }\n    if (Arr.equal(c1[1].getPosition(), c2[1].getPosition())) {\n        return g1.addCircle(g1.addPoint(c1[1].getPosition()), [radius, 0, 0], [0, radius, 0], [0, 360]);\n    }\n    throw new Error(\"Review thresholds\");\n}\n\n//  ===============================================================================================================\n//  Conic Functions ===============================================================================================\n//  ===============================================================================================================\n\n// - WEEK 6 -\n/**\n * Returns a point on a conic curve based on a parameter between 0 and 1\n *\n * @param curve Conic curve to evaluate\n * @param t Parameter along curve to evaluate (0 is the start of the curve and 1 is the end)\n * @returns Point on curve\n */\nexport function evalParam(curve: gs.ICircle | gs.IEllipse, t: number): gs.IPoint {\n    throw new Error(\"Method not implemented\");\n}\n\n// - WEEK 6 -\n/**\n * Returns a parameter along a conic curve based on a point on the curve\n *\n * Returns null if point specified does not lie on the curve (within a tolerance of 0.1)\n * @param curve Conic curve to evaluate\n * @param point Point to evaluate\n * @returns Parameter on curve if successful, null if unsuccessful or on error\n */\nexport function evalPoint(curve: gs.ICircle | gs.IEllipse, point: gs.IPoint): number {\n    throw new Error(\"Method not implemented\");\n}\n\n/**\n * Extends an arc\n *\n * Changes the starting and ending angles for a conic curve such that the curve is lengthened<br/>\n * Conic curve should be either a circular arc or an elliptical arc<br/>\n * Extension will follow the original curvature of the circle or ellipse the arc was constructed from<br>\n * If extension causes length of curve to exceed the circumference of the underlying circle or ellipse,\n * returns a closed circle or ellipse.<br/>\n * Returns null if distance is negative\n * @param curve Conic curve to extend\n * @param direction Direction to extend curve in (0-Start, 1-End, 2-Both)\n * @param distance Distance to extend curve\n * @param copy Performs transformation on a duplicate copy of the input curve if true\n * @returns Extended conic curve, null if unsuccessful or on error\n */\nexport function extendArc(curve: gs.ICircle, direction: number, distance: number, copy: boolean):\ngs.ICircle {\n    throw new Error(\"Method not implemented\");\n}\n\n/**\n * Extends an elliptical arc\n *\n * Changes the starting and ending angles for a conic curve such that the curve is lengthened<br/>\n * Conic curve should be either a circular arc or an elliptical arc<br/>\n * Extension will follow the original curvature of the circle or ellipse the arc was constructed from<br>\n * If extension causes length of curve to exceed the circumference of the underlying circle or ellipse,\n * returns a closed circle or ellipse.<br/>\n * Returns null if distance is negative\n * @param curve Conic curve to extend\n * @param direction Direction to extend curve in (0-Start, 1-End, 2-Both)\n * @param distance Distance to extend curve\n * @param copy Performs transformation on a duplicate copy of the input curve if true\n * @returns Extended conic curve, null if unsuccessful or on error\n */\nexport function extendEllArc(curve: gs.IEllipse, direction: number, distance: number, copy: boolean):\ngs.IEllipse {\n    throw new Error(\"Method not implemented\");\n}\n","export module Console{\r\n    export function log(val: any): void{\r\n        \r\n        console.log('============================\\nConsole Log:\\n',val)\r\n    }\r\n}","/**\n * Functions for working with groups.\n */\n\n/**\n * Groups are collections of geometric objects, points, and topos.\n * Each group is identified by a unique name.\n * Groups can have a parent group, thereby allowing a herarchy of groups to be created.\n * If the parent group is null, then the group is assumed to be a top level group.\n *\n * Groups can have properties, which are key-value pairs.\n */\n\nimport * as gs from \"gs-json\";\n\n//  ===============================================================================================================\n//  Group Get =====================================================================================================\n//  ===============================================================================================================\n\n/**\n * Gets the names of all the groups in the model.\n *\n * @param model Model to get group names from.\n * @returns List of group names\n */\nexport function GetNames(model: gs.IModel): string[] {\n    return model.getAllGroups().map((group) => group.getName());\n}\n\n//  ===============================================================================================================\n//  Group Constructors ============================================================================================\n//  ===============================================================================================================\n\n/**\n * Creates a new group.\n *\n * @param model Model to create group in.\n * @param name Group name.\n * @returns Ture if the group was successfully created.\n */\nexport function Create(model: gs.IModel, name: string): boolean {\n    if (model.getGroup(name) !== null) {throw new Error(\"Group already exists.\");}\n    const group: gs.IGroup = model.addGroup(name);\n    if (group === undefined) {return false;}\n    return true;\n}\n\n/**\n * Creates a set of new groups.\n *\n * @param model Model to create groups in.\n * @param name List of group names.\n * @returns Ture if all groups were successfully created.\n */\nexport function Creates(model: gs.IModel, names: string[]): boolean {\n    let ok: boolean = true;\n    for (const name of names) {\n        if (model.getGroup(name) !== null) {throw new Error(\"Group already exists.\");}\n        const group: gs.IGroup = model.addGroup(name);\n        if (group === undefined) {ok = false;}\n    }\n    return ok;\n}\n\n//  ===============================================================================================================\n//  Group Functions ===============================================================================================\n//  ===============================================================================================================\n\n/**\n * Deletes a group from the model.\n *\n * @param model Model containing the groups.\n * @param group_name Group name to delete.\n * @param delete_geom If true, the objects and points in the group will be deleted.\n * @returns True if the group was successfully deleted.\n */\nexport function del(model: gs.IModel, group_name: string, delete_geom: boolean): boolean {\n    const group: gs.IGroup = model.getGroup(group_name);\n    if (group === null) {throw new Error(\"Group does not exist.\");}\n    if (delete_geom) {\n        model.getGeom().delObjs(group.getObjs(), false);\n        model.getGeom().delPoints(group.getPoints());\n    }\n    return group.getModel().delGroup(group);\n}\n\n/**\n * Gets the parent of a group.\n * Returns null if specified group does not have a parent group.\n *\n * @param model Model containing the groups.\n * @param group_name Group name to get parent from.\n * @returns Parent group of specified group if successful, null if unsuccessful or on error\n */\nexport function getParent(model: gs.IModel, group_name: string): string {\n    const group: gs.IGroup = model.getGroup(group_name);\n    if (group === null) {throw new Error(\"Group does not exist.\");}\n    return group.getParentGroup().getName();\n}\n\n/**\n * Sets the parent of a group.\n *\n * @param model Model containing the groups.\n * @param group_name Group name to set parent for.\n * @param parent_name Group name of parent.\n * @returns The old parent.\n */\nexport function setParent(model: gs.IModel, group_name: string, parent_name: string): string {\n    const group: gs.IGroup = model.getGroup(group_name);\n    const parent: gs.IGroup = model.getGroup(parent_name);\n    if (group === null) {throw new Error(\"Group does not exist.\");}\n    if (parent === null) {throw new Error(\"Group does not exist.\");}\n    return group.setParentGroup(parent).getName();\n}\n\n/**\n * Gets the list of names of groups that are children of this group.\n * Returns empty list if specified group does not have any children.\n *\n * @param model Model containing the groups.\n * @param group_name Group name to get children from.\n * @returns A list of group names.\n */\nexport function getChildren(model: gs.IModel, group_name: string): string[] {\n    const group: gs.IGroup = model.getGroup(group_name);\n    if (group === null) {throw new Error(\"Group does not exist.\");}\n    return group.getChildGroups().map((group) => group.getName());\n}\n","import * as model from \"./model\";\r\nexport {model};\r\n\r\nimport * as point from \"./point\";\r\nexport {point};\r\n\r\nimport * as pline from \"./pline\";\r\nexport {pline};\r\n\r\nimport * as plane from \"./plane\";\r\nexport {plane};\r\n\r\nimport * as pmesh from \"./pmesh\";\r\nexport {pmesh};\r\n\r\nimport * as circle from \"./circle\";\r\nexport {circle};\r\n\r\nimport * as intersect from \"./intersect\";\r\nexport {intersect};\r\n\r\nimport * as object from \"./object\";\r\nexport {object};\r\n\r\nimport * as calc from \"./calc\";\r\nexport {calc};\r\n\r\nimport * as attrib from \"./attrib\";\r\nexport {attrib};\r\n\r\nimport * as group from \"./group\";\r\nexport {group};\r\n\r\nimport * as query from \"./query\";\r\nexport {query};\r\n\r\nimport * as ray from \"./ray\";\r\nexport {ray};\r\n\r\nimport * as split from \"./split\";\r\nexport {split};\r\n\r\nimport * as topo from \"./topo\";\r\nexport {topo};\r\n\r\nimport * as list from \"./list\";\r\nexport {list};\r\n\r\nimport * as math from \"./math\";\r\nexport {math};\r\n\r\nimport * as string from \"./string\";\r\nexport {string};\r\n\r\nimport * as gs from \"gs-json\";\r\nexport {gs};\r\n\r\n\r\nexport * from './input';\r\nexport * from './output';\r\nexport * from './console';\r\nexport * from './_parameterTypes';\r\n\r\nconst gsConstructor = new gs.Model().constructor;\r\nexport {gsConstructor};\r\n","export module Input{\r\n    export function declare_constant(__constList__: JSON, const_name: string, __input__: any): void{\r\n        __constList__[const_name] = __input__;\r\n    }\r\n}","/**\n * Function for intersecting geometric objects.\n */\n\n/**\n * Intersect functions find points of intersection where the geometry of two objects intersect.\n * The functions return the intersections and overlaps and do not alter the original input objects.\n * Intersecting can be done either in 2D or in 3D, as indicated by the name of the intersect function.\n * The result of a intersect function will vary depending on the types of objects being intersected.\n */\n\nimport * as gs from \"gs-json\";\nimport * as three from \"three\";\nimport * as threex from \"./libs/threex/threex\";\nimport * as circles from \"./libs/conics/circles\";\nimport * as poly from \"./libs/poly/poly\";\nimport * as polylinePlane from \"./libs/poly/polylinePlane\";\nimport * as error from \"./_error_msgs_dev\";\n\n//  ===============================================================================================================\n//  Intersect Functions ===========================================================================================\n//  ===============================================================================================================\n\n/**\n * Finds the intersection points between two intersecting co-planar circles.\n *\n * @param circle1 Circle 1\n * @param circle2 Circle 2\n * @returns List of intersection points.\n */\nexport function circleCircle2D(circle1: gs.ICircle, circle2: gs.ICircle): gs.IPoint[] {\n    error.checkObjList([circle1, circle2], 2, gs.EObjType.circle);\n    return circles.isectCircleCircle2D(circle1, circle2);\n}\n\n/**\n * Finds the intersection points between two coplanar polylines.\n *\n * @param pline1 Polyline 1\n * @param pline2 Polyline 2\n * @returns List of intersection points.\n */\nexport function polylinePolyline2D(pline1: gs.IPolyline, pline2: gs.IPolyline): gs.IPoint[] {\n    error.checkObjList([pline1, pline2], 2, gs.EObjType.polyline);\n    return poly._isectPolylinePolyline2D(pline1, pline2);\n}\n\n/**\n * Finds the intersection points between a circle and a plane.\n * If no intersection points are found, or if the circle and plane are co-planar,\n * an empty list is returned.\n *\n * @param circle Circle\n * @param plane Plane\n * @returns List of intersection points (0, 1 or 2).\n */\nexport function circlePlane3D(circle: gs.ICircle, plane: gs.IPlane): gs.IPoint[] {\n    error.checkObj(circle, gs.EObjType.circle);\n    error.checkObj(plane, gs.EObjType.plane);\n    error.checkObjsSameModel([circle, plane]);\n    return circles.isectCirclePlane3D(circle, plane);\n}\n\n/**\n * Finds the intersection points between a polyine and a plane.\n * If no intersection points are found, an empty list is returned.\n *\n * @param pline Polyline\n * @param plane Plane\n * @returns List of intersection points.\n */\nexport function polylinePlane3D(pline: gs.IPolyline, plane: gs.IPlane): gs.IPoint[] {\n    const model: gs.IModel = error.checkObj(pline, gs.EObjType.polyline);\n    error.checkObj(plane, gs.EObjType.plane);\n    error.checkObjsSameModel([pline, plane]);\n    return polylinePlane.isectPolylinePlane3D(pline, plane);\n}\n","/**\n * A set of static methods for working with arrays of simple types.\n * The arrays can be nested, but they do not contain any objects.\n */\n\nexport class Arr {\n    /**\n     * Make an array of numbers. All elements in the array will have the same value.\n     * @param length The length of the new array. If length is 0, then an empty array is returned.\n     * @param value The values in the array.\n     * @returns The resulting array.\n     */\n    public static make(length: number, value: any): number[] {\n        if (length === 0) {return []; }\n        return Array.apply(0, new Array(length)).map((v, i) => value);\n    }\n    /**\n     * Make an array of numbers. All elements in the array will be a numerical sequence, 0, 1, 2, 3....\n     * @param length  The length of the new array. If length is 0, then an empty array is returned.\n     * @returns The resulting array.\n     */\n    public static makeSeq(length: number): number[] {\n        if (length === 0) {return []; }\n        return Array.apply(0, new Array(length)).map((v, i) => i);\n    }\n    /**\n     * Check if two nD arrays are equal (i.e. that all elements in the array are equal, ===.).\n     * If the arrays are unequal in length, false is returned.\n     * Elements in the array can have any value.\n     * @param arr1 The first value.\n     * @param arr2 The second values.\n     * @returns True or false.\n     */\n    public static equal(arr1: any, arr2: any): boolean {\n        if (!Array.isArray(arr1) || !Array.isArray(arr2)) {return arr1 === arr2; }\n        if (arr1.length !== arr2.length) {return false; }\n        for (let i = 0; i < arr1.length; i++) {\n            if (!this.equal(arr1[i],arr2[i])) {return false;}\n        }\n        return true;\n    }\n    /**\n     * Find the position of the first occurrence of a specified value in an array.\n     * The value can be an array (which is not the case for Array.indexOf()).\n     * If the value is not found or is undefined, return -1.\n     * If the array is null or undefined, return -1.\n     * @param value The value, can be a value or a 1D array of values.\n     * @returns The index in the array of the first occurance of the value.\n     */\n    public static indexOf(arr: any[], value: any): number {\n        if (!Array.isArray(arr)) {throw new Error(\"First argument must be a array.\"); }\n        if (!Array.isArray(value)) {return arr.indexOf(value); }\n        for (let i = 0; i < arr.length; i++) {\n            if (Array.isArray(arr[i]) && this.equal(value, arr[i])) {\n                return i;\n            }\n        }\n        return -1;\n    }\n    /**\n     * Replace all occurrences of a specified value in an array.\n     * The input array is changed.\n     * The value can be an array.\n     * If the value is not found or is undefined, return -1.\n     * @param old_value The old value to replace.\n     * @param new_value The new value.\n     * @param arr The array.\n     */\n    public static replace(arr: any[], old_value: any, new_value:any): void {\n        if (!Array.isArray(arr)) {throw new Error(\"First argument must be a array.\"); }\n        for (let i = 0; i < arr.length; i++) {\n            if (this.equal(arr[i], old_value)) {\n                arr[i] = new_value;\n            }\n        }\n    }\n\n    /**\n     * Take an nD array and flattens it.\n     * A new array is returned. The input array remains unchanged.\n     * For example, [1, 2, [3, 4], [5, 6]] will become [1, 2, 3, 4, 5, 6].\n     * If the input array is undefined, an empty array is returned.\n     * @param arr The multidimensional array to flatten.\n     * @returns A new 1D array.\n     */\n    public static flatten(arr: any[], depth?: number): any[] {\n        if (arr === undefined) {return []; }\n        return arr.reduce(function(flat, toFlatten) {\n            if (depth === undefined) {\n                return flat.concat(Array.isArray(toFlatten) ? Arr.flatten(toFlatten) : toFlatten);\n            } else {\n                return flat.concat((Array.isArray(toFlatten) && (depth !== 0)) ?\n                    Arr.flatten(toFlatten, depth - 1) : toFlatten);\n            }\n        }, []);\n    }\n    /**\n     * Make a copy of an nD array.\n     * If the input is not an array, then just return the same thing.\n     * A new array is returned. The input array remains unchanged.\n     * If the input array is undefined, an empty array is returned.\n     * If the input is s sparse array, then the output will alos be a sparse array.\n     * @param arr The nD array to copy.\n     * @returns The new nD array.\n     */\n    public static deepCopy(arr: any[]): any[] {\n        if (arr === undefined) {return []; }\n        if (!Array.isArray(arr)) {return arr; }\n        const arr2: any[] = [];\n        for (let i = 0; i < arr.length; i++) {\n            if (Array.isArray(arr[i])) {\n                arr2[i] = (Arr.deepCopy(arr[i]));\n            } else {\n                if (arr[i] !== undefined) {\n                    arr2[i] = (arr[i]);\n                }\n            }\n        }\n        return arr2;\n    }\n    /**\n     * Fills an nD array with new values (all the same value).\n     * The input array is changed.\n     * If the input array is undefined, an empty array is returned.\n     * The input can be a sparse array.\n     * @param arr The nD array to fill.\n     * @param value The value to insert into the array.\n     */\n    public static deepFill(arr: any[], value: any): void {\n        if (arr === undefined) {return; }\n        for (let i = 0; i < arr.length; i++) {\n            if (Array.isArray(arr[i])) {\n                Arr.deepFill(arr[i], value);\n            } else {\n                if (arr[i] !== undefined) {\n                    arr[i] = value;\n                }\n            }\n        }\n    }\n    /**\n     * Counts the number of values in an nD array .\n     * The input array remains unchanged.\n     * If the input array is undefined, 0 is returned.\n     * The input can be a sparse array. Undefined values are ignored.\n     * For example, for [1, 2, , , 3], the count will be 3.\n     * @param arr The nD array to count.\n     * @return The number of elements in the nD array.\n     */\n    public static deepCount(arr: any[]): number {\n        if (arr === undefined) {return 0; }\n        let a: number = 0 ;\n        for ( const i in arr) {\n            if (Array.isArray(arr[i])) {\n                a = a + Arr.deepCount(arr[i]);\n            } else {\n                if (arr[i] !== undefined) {\n                    a = a + 1 ;\n                }\n            }\n        }\n        return a ;\n    }\n}\n","import * as gs from \"gs-json\";\nimport * as mathjs from \"mathjs\";\nimport * as three from \"three\";\nimport * as threex from \"../threex/threex\";\nconst EPS = 1e-6;\n\n// import * as roots from \"poly-roots\";\n// import * as quadratic from \"solve-quadratic-equation\";\n// import * as trigo from \"./trigo\";\n// import * as pl from \"../../plane_dev\"; // TODO - can be reomved?\n\n/**\n * Find the center of a circle that passes through three XYZ positions in 3D space.\n * @returns An array of intersection points\n */\nfunction _circleCenterFrom3Points(a: gs.XYZ, b: gs.XYZ, c: gs.XYZ): gs.XYZ {\n    //https://math.stackexchange.com/questions/1076177/3d-coordinates-of-circle-center-given-three-point-on-the-circle\n    const ax = a[0];\n    const ay = a[1];\n    const az = a[2];\n    const bx = b[0];\n    const by = b[1];\n    const bz = b[2];\n    const cx = c[0];\n    const cy = c[1];\n    const cz = c[2];\n    const Cx = bx - ax;\n    const Cy = by - ay;\n    const Cz = bz - az;\n    const Bx = cx - ax;\n    const By = cy - ay;\n    const Bz = cz - az;\n    const B2 = ax ** 2 - cx ** 2 + ay ** 2 - cy ** 2 + az ** 2 - cz ** 2;\n    const C2 = ax ** 2 - bx ** 2 + ay ** 2 - by ** 2 + az ** 2 - bz ** 2;\n    const CByz = Cy * Bz - Cz * By;\n    const CBxz = Cx * Bz - Cz * Bx;\n    const CBxy = Cx * By - Cy * Bx;\n    const ZZ1 = -(Bz - Cz * Bx / Cx) / (By - Cy * Bx / Cx);\n    const Z01 = -(B2 - Bx / Cx * C2) / (2 * (By - Cy * Bx / Cx));\n    const ZZ2 = -(ZZ1 * Cy + Cz) / Cx;\n    const Z02 = -(2 * Z01 * Cy + C2) / (2 * Cx);\n    // and finally the coordinates of the center:\n    const dz = -((Z02 - ax) * CByz - (Z01 - ay) * CBxz - az * CBxy) / (ZZ2 * CByz - ZZ1 * CBxz + CBxy);\n    const dx = ZZ2 * dz + Z02;\n    const dy = ZZ1 * dz + Z01;\n    return [dx, dy, dz] as gs.XYZ;\n}\n\nexport function circleFrom3Points(xyz1: gs.XYZ, xyz2: gs.XYZ, xyz3: gs.XYZ, is_closed: boolean):\n        { origin: gs.XYZ, vec_x: gs.XYZ, vec_y: gs.XYZ, angle: number } {\n    // create vectors\n    const p1: three.Vector3 = new three.Vector3(...xyz1);\n    const p2: three.Vector3 = new three.Vector3(...xyz2);\n    const p3: three.Vector3 = new three.Vector3(...xyz3);\n    const world_x: three.Vector3 = new three.Vector3(1, 0, 0);\n    const world_y: three.Vector3 = new three.Vector3(0, 1, 0);\n    const world_z: three.Vector3 = new three.Vector3(0, 0, 1);\n    // calc vectors for xform matrix\n    const x_axis: three.Vector3 = threex.subVectors(p2, p1); // .normalize();\n    const tmp_vec: three.Vector3 = threex.subVectors(p3, p2);\n    const z_axis: three.Vector3 = threex.crossVectors(x_axis, tmp_vec); // .normalize();\n    const y_axis: three.Vector3 = threex.crossVectors(z_axis, x_axis); // .normalize();\n    // create the xform matrices to map 3d -> 2d\n    const m: three.Matrix4 = threex.xformMatrixNeg(p1, x_axis, y_axis);\n    const m_inv: three.Matrix4 = threex.matrixInverse(m);\n    // calc the circle origin\n    const p2_2d: three.Vector3 = threex.multVectorMatrix(p2, m);\n    const p3_2d: three.Vector3 = threex.multVectorMatrix(p3, m);\n    const origin_2d_xyz: gs.XYZ = _circleCenterFrom3Points(\n        [0, 0, 0], p2_2d.toArray() as gs.XYZ, p3_2d.toArray() as gs.XYZ);\n    const origin_2d: three.Vector3 = new three.Vector3(...origin_2d_xyz);\n    const circle_origin: three.Vector3 = threex.multVectorMatrix(origin_2d, m_inv);\n    // calc the circle radius\n    // const radius: number = origin_2d.length();\n    // is not arc? then return data for circle\n    m_inv.setPosition(new three.Vector3());\n    if (is_closed) {\n        const circle_x_axis_2d: three.Vector3 = new three.Vector3(origin_2d.length(), 0, 0);\n        const circle_x_axis: three.Vector3 = threex.multVectorMatrix(circle_x_axis_2d, m_inv);\n        const circle_y_axis_2d: three.Vector3 = new three.Vector3(0, 1, 0);\n        const circle_y_axis: three.Vector3 = threex.multVectorMatrix(circle_y_axis_2d, m_inv);\n        return {\n            origin: circle_origin.toArray() as gs.XYZ,\n            vec_x: circle_x_axis.toArray() as gs.XYZ,\n            vec_y: circle_y_axis.toArray() as gs.XYZ,\n            angle: null\n        };\n    }\n    // calc the circle vectors\n    const circle_x_axis_2d: three.Vector3 = threex.vectorNegate(origin_2d);\n    const circle_x_axis: three.Vector3 = threex.multVectorMatrix(circle_x_axis_2d, m_inv);\n    const circle_y_axis_2d: three.Vector3 = threex.crossVectors(world_z, circle_x_axis_2d);\n    const circle_y_axis: three.Vector3 = threex.multVectorMatrix(circle_y_axis_2d, m_inv);\n    // calc the circle angles\n    const angle_vec_2d: three.Vector3 = threex.subVectors(p3_2d, origin_2d);\n    let angle: number = circle_x_axis_2d.angleTo(angle_vec_2d);\n    angle = angle * 180 / Math.PI;\n    const angle_gt_180: boolean = (threex.crossVectors(circle_x_axis_2d, angle_vec_2d).z < 0);\n    const y_gt_0: boolean = (circle_origin.y > 0);\n    if (angle_gt_180) {\n        angle = 360 - angle;\n    }\n    // return the data for arc\n    return {\n        origin: circle_origin.toArray() as gs.XYZ,\n        vec_x: circle_x_axis.toArray() as gs.XYZ,\n        vec_y: circle_y_axis.toArray() as gs.XYZ,\n        angle: angle\n    };\n}\n\n","import * as gs from \"gs-json\";\nimport * as mathjs from \"mathjs\";\nimport * as three from \"three\";\nimport * as threex from \"../threex/threex\";\nimport * as kld from \"kld-intersections\";\nimport * as circleUtil from \"./circleUtil\";\nconst EPS = 1e-6;\n\n/**\n * Circle-circle intersection\n * @param circle1\n * @param circle2\n * @returns An array of intersection points\n */\nexport function isectCircleCircle2D(circle1: gs.ICircle, circle2: gs.ICircle): gs.IPoint[] {\n    const m1: gs.IModel = circle1.getModel();\n    const m2: gs.IModel = circle2.getModel();\n    if (m1 !== m2) { throw new Error(\"Entities must be in the same model.\"); }\n    const v1: [gs.XYZ, gs.XYZ, gs.XYZ] = circle1.getAxes();\n    const v2: [gs.XYZ, gs.XYZ, gs.XYZ] = circle2.getAxes();\n    if (!threex.planesAreCoplanar(circle1.getOrigin(), v1[2], circle2.getOrigin(), v2[2])) {\n        throw new Error(\"Entities must be coplanar.\");\n    }\n    const g1: gs.IGeom = m1.getGeom();\n    const r: number = circle1.getRadius() + circle2.getRadius();\n    const O1O2: three.Vector3 = threex.vectorFromPointsAtoB(circle1.getOrigin(), circle2.getOrigin(), false);\n    if (O1O2.length() > r) { return null; }\n    // Direct Orthonormal Basis of reference\n    const O1: three.Vector3 = new three.Vector3(0, 0, 0);\n    const e1: three.Vector3 = new three.Vector3(1, 0, 0);\n    const e2: three.Vector3 = new three.Vector3(0, 1, 0);\n    const e3: three.Vector3 = new three.Vector3(0, 0, 1);\n    // Circle 1 Direct Orthonormal Basis\n    const C1: three.Vector3 = new three.Vector3(...circle1.getOrigin().getPosition());\n    const U1: three.Vector3 = new three.Vector3(...v1[0]).normalize();\n    const V1: three.Vector3 = new three.Vector3(...v1[1]).normalize();\n    const W1: three.Vector3 = threex.crossVectors(U1, V1, true);\n    let angles1: [number, number] = circle1.getAngles();\n    if (angles1 === null) { angles1 = [0, 360]; }\n    const angles_circle_1: number = angles1[1] - angles1[0];\n    // Circle 2 Direct Orthonormal Basis\n    const C2: three.Vector3 = new three.Vector3(...circle2.getOrigin().getPosition());\n    const U2: three.Vector3 = new three.Vector3(...v2[0]).normalize();\n    const V2: three.Vector3 = new three.Vector3(...v2[1]).normalize();\n    const W2: three.Vector3 = threex.crossVectors(U2, V2, true);\n    let angles2: [number, number] = circle2.getAngles();\n    if (angles2 === null) { angles2 = [0, 360]; }\n    const angles_circle_2: number = angles2[1] - angles2[0];\n\n    // Rotation Matrix expressed in the reference direct orthonormal basis\n    // Circle 1\n    const C1O1: three.Vector3 = threex.subVectors(O1, C1, false);\n    const vec_O_1: three.Vector3 = new three.Vector3(\n        threex.dotVectors(C1O1, U1),\n        threex.dotVectors(C1O1, V1),\n        threex.dotVectors(C1O1, W1),\n    );\n    const x1: three.Vector3 = new three.Vector3(\n        threex.dotVectors(e1, U1),\n        threex.dotVectors(e1, V1),\n        threex.dotVectors(e1, W1),\n    );\n    const y1: three.Vector3 = new three.Vector3(\n        threex.dotVectors(e2, U1),\n        threex.dotVectors(e2, V1),\n        threex.dotVectors(e2, W1),\n    );\n    const rotation1: three.Matrix4 = threex.xformMatrixNeg(vec_O_1, x1, y1);\n    // Initial Rotation Matrix expressed in the reference direct orthonormal basis\n    // Circle 1\n    const O1C1: three.Vector3 = threex.subVectors(C1, O1, false);\n    const init_vec_O_1: three.Vector3 = new three.Vector3(\n        threex.dotVectors(O1C1, e1),\n        threex.dotVectors(O1C1, e2),\n        threex.dotVectors(O1C1, e3),\n    );\n    const init_x1: three.Vector3 = new three.Vector3(\n        threex.dotVectors(U1, e1),\n        threex.dotVectors(U1, e2),\n        threex.dotVectors(U1, e3),\n    );\n    const init_y1: three.Vector3 = new three.Vector3(\n        threex.dotVectors(V1, e1),\n        threex.dotVectors(V1, e2),\n        threex.dotVectors(V1, e3),\n    );\n    const init_rotation1: three.Matrix4 = threex.xformMatrixNeg(init_vec_O_1, init_x1, init_y1);\n    const a: three.Vector3 = threex.multVectorMatrix(C1, init_rotation1);\n    const b: three.Vector3 = threex.multVectorMatrix(C2, init_rotation1);\n    const circle_1 = {\n        center: new kld.Point2D(a.x, a.y),\n        radius: circle1.getRadius(),\n    };\n    const circle_2 = {\n        center: new kld.Point2D(b.x, b.y),\n        radius: circle2.getRadius(),\n    };\n    const result: kld.Intersection = kld.Intersection.intersectCircleCircle(circle_1.center, circle_1.radius,\n        circle_2.center, circle_2.radius);\n    // Retransforming into original coordinates system\n    const results: three.Vector3[] = [];\n    for (const point of result.points) {\n        results.push(new three.Vector3(point.x, point.y, 0));\n    }\n    const results_c1: three.Vector3[] = [];\n    for (const point of results) {\n        results_c1.push(threex.multVectorMatrix(point, rotation1));\n    }\n    const points: gs.IPoint[] = [];\n    for (const point of results_c1) {\n        const c1_to_point: three.Vector3 = new three.Vector3(point.x - C1.x, point.y - C1.y, point.z - C1.z);\n        const c2_to_point: three.Vector3 = new three.Vector3(point.x - C2.x, point.y - C2.y, point.z - C2.z);\n        let angle_1: number = U1.angleTo(c1_to_point) * 180 / Math.PI;\n        if (threex.crossVectors(U1, c1_to_point).dot(threex.crossVectors(U1, V1)) < 0) { angle_1 = 360 - angle_1; }\n        let angle_2: number = U2.angleTo(c2_to_point) * 180 / Math.PI;\n        if (threex.crossVectors(U2, c2_to_point).dot(threex.crossVectors(U2, V2)) < 0) { angle_2 = 360 - angle_2; }\n        // if (angles_circle_1 - angle_1 >= 0 && angles_circle_2 - angle_2 >= 0) {\n        //     points.push(g1.addPoint([point.x, point.y, point.z]));\n        // }\n        if (circleUtil.angleInCircle(circle1, angle_1) && circleUtil.angleInCircle(circle2, angle_2)) {\n            points.push(g1.addPoint([point.x, point.y, point.z]));\n        }\n    }\n    return points;\n}\n\n/**\n * Find the inner tangents of two coplanar circles.\n * @param circle1\n * @param circle2\n * @returns An array of start and end points of the two tangent lines\n */\nexport function innerTangentsCircleCircle2D(circle1: gs.ICircle, circle2: gs.ICircle): [gs.IPolyline, gs.IPolyline] {\n    const c1_origin: three.Vector3 = new three.Vector3(...circle1.getOrigin().getPosition());\n    const c1_axes: three.Vector3[] = circle1.getAxes().map((v) => new three.Vector3(...v));\n    const c2_origin: three.Vector3 = new three.Vector3(...circle2.getOrigin().getPosition());\n    const c2_axes: three.Vector3[] = circle2.getAxes().map((v) => new three.Vector3(...v));\n    if (!threex.planesAreCoplanar(c1_origin, c1_axes[2], c2_origin, c2_axes[2])) {\n        throw new Error(\"Circles must be coplanar.\");\n    }\n    // set the x axis to be from o1 to o2\n    const x_vec: three.Vector3 = new three.Vector3().subVectors(c2_origin, c1_origin).normalize();\n    const y_vec: three.Vector3 = new three.Vector3().crossVectors(x_vec, c1_axes[2]);\n    // make matrixes\n    const matrix_pos: three.Matrix4 = threex.xformMatrixPos(c1_origin, x_vec, y_vec);\n    const matrix_neg: three.Matrix4 = threex.xformMatrixNeg(c1_origin, x_vec, y_vec);\n    // transform origins from 3d to 2d\n    c1_origin.applyMatrix4(matrix_neg);\n    c2_origin.applyMatrix4(matrix_neg);\n    // get the radii\n    const r1: number = circle1.getRadius();\n    const r2: number = circle2.getRadius();\n    // check that circles do not overlap\n    if ((r1 + r2) >= c2_origin.x) {return null;}\n    // calc mid point\n    const dist: number = c2_origin.x;\n    const dist1: number = dist * ( r1 / (r1 + r2));\n    const dist2: number = dist - dist1;\n    // calc angles, a1 is the angle to the start point\n    const a1: number = Math.acos(r1 / dist1);\n    // calc start and end of each inner tangent line\n    const t1_start: three.Vector3 = new three.Vector3(\n        r1 * Math.cos(a1), r1 * Math.sin(a1), 0);\n    const t2_start: three.Vector3 = new three.Vector3(t1_start.x, -t1_start.y, 0);\n    const t1_end: three.Vector3 = new three.Vector3(\n        dist - (r2 * Math.cos(a1)), -r2 * Math.sin(a1), 0);\n    const t2_end: three.Vector3 = new three.Vector3(t1_end.x, -t1_end.y, 0);\n    // tranform points from 2d to 3d\n    t1_start.applyMatrix4(matrix_pos);\n    t2_start.applyMatrix4(matrix_pos);\n    t1_end.applyMatrix4(matrix_pos);\n    t2_end.applyMatrix4(matrix_pos);\n    // create points in the model\n    const g: gs.IGeom = circle1.getModel().getGeom();\n    const t1_start_point: gs.IPoint = g.addPoint(t1_start.toArray() as gs.XYZ);\n    const t2_start_point: gs.IPoint = g.addPoint(t2_start.toArray() as gs.XYZ);\n    const t1_end_point: gs.IPoint = g.addPoint(t1_end.toArray() as gs.XYZ);\n    const t2_end_point: gs.IPoint = g.addPoint(t2_end.toArray() as gs.XYZ);\n    // return the two polylines\n    return [\n        g.addPolyline([t1_start_point, t1_end_point], false),\n        g.addPolyline([t2_start_point, t2_end_point], false)\n    ];\n}\n\n/**\n * Find the outer tangents of two coplanar circles.\n * @param circle1\n * @param circle2\n * @returns An array of two tangent lines\n */\nexport function outerTangentsCircleCircle2D(circle1: gs.ICircle, circle2: gs.ICircle): [gs.IPolyline, gs.IPolyline] {\n    const c1_origin: three.Vector3 = new three.Vector3(...circle1.getOrigin().getPosition());\n    const c1_axes: three.Vector3[] = circle1.getAxes().map((v) => new three.Vector3(...v));\n    const c2_origin: three.Vector3 = new three.Vector3(...circle2.getOrigin().getPosition());\n    const c2_axes: three.Vector3[] = circle2.getAxes().map((v) => new three.Vector3(...v));\n    if (!threex.planesAreCoplanar(c1_origin, c1_axes[2], c2_origin, c2_axes[2])) {\n        throw new Error(\"Circles must be coplanar.\");\n    }\n    // set the x axis to be from o1 to o2\n    const x_vec: three.Vector3 = new three.Vector3().subVectors(c2_origin, c1_origin).normalize();\n    const y_vec: three.Vector3 = new three.Vector3().crossVectors(x_vec, c1_axes[2]);\n    // make matrixes\n    const matrix_pos: three.Matrix4 = threex.xformMatrixPos(c1_origin, x_vec, y_vec);\n    const matrix_neg: three.Matrix4 = threex.xformMatrixNeg(c1_origin, x_vec, y_vec);\n    // transform origins from 3d to 2d\n    c1_origin.applyMatrix4(matrix_neg);\n    c2_origin.applyMatrix4(matrix_neg);\n    // get the radii\n    const r1: number = circle1.getRadius();\n    const r2: number = circle2.getRadius();\n    // check that circles do not overlap\n    if ((r1 + r2) >= c2_origin.x) {return null;}\n    // dist between origins\n    const dist: number = c2_origin.x;\n    // calc angles, a1 is the angle to the start point\n    let a1: number;\n    if (r1 > r1) {\n        a1 = Math.acos((r2 - r1) / dist);\n    } else {\n        a1 = -Math.acos((r1 - r2) / dist);\n    }\n    // calc start and end of each inner tangent line\n    const t1_start: three.Vector3 = new three.Vector3(\n        r1 * Math.cos(a1), r1 * Math.sin(a1), 0);\n    const t1_end: three.Vector3 = new three.Vector3(\n        dist + (r2 * Math.cos(a1)), r2 * Math.sin(a1), 0);\n    const t2_start: three.Vector3 = new three.Vector3(t1_start.x, -t1_start.y, 0);\n    const t2_end: three.Vector3 = new three.Vector3(t1_end.x, -t1_end.y, 0);\n    // tranform points from 2d to 3d\n    t1_start.applyMatrix4(matrix_pos);\n    t2_start.applyMatrix4(matrix_pos);\n    t1_end.applyMatrix4(matrix_pos);\n    t2_end.applyMatrix4(matrix_pos);\n    // create points in the model\n    const g: gs.IGeom = circle1.getModel().getGeom();\n    const t1_start_point: gs.IPoint = g.addPoint(t1_start.toArray() as gs.XYZ);\n    const t2_start_point: gs.IPoint = g.addPoint(t2_start.toArray() as gs.XYZ);\n    const t1_end_point: gs.IPoint = g.addPoint(t1_end.toArray() as gs.XYZ);\n    const t2_end_point: gs.IPoint = g.addPoint(t2_end.toArray() as gs.XYZ);\n    // return the two polylines\n    return [\n        g.addPolyline([t1_start_point, t1_end_point], false),\n        g.addPolyline([t2_start_point, t2_end_point], false)\n    ];\n}\n","import * as gs from \"gs-json\";\nimport * as mathjs from \"mathjs\";\nimport * as three from \"three\";\nimport * as threex from \"../threex/threex\";\nimport * as trigo from \"./trigo\";\nimport * as circleUtil from \"./circleUtil\";\nconst EPS = 1e-6;\n\n/**\n * Circle-Plane intersection\n * @param circle\n * @param plane\n * @returns Adds intersecting points to the geometry if successfull, [] if empty or coplanar\n */\nexport function isectCirclePlane3D(circle: gs.ICircle, plane: gs.IPlane): gs.IPoint[] {\n    // http://mathforum.org/library/drmath/view/69136.html\n    const m: gs.IModel = circle.getModel();\n    const eps: number = 1e-7;\n    // get plane\n    const PO: number[] = plane.getOrigin().getPosition();\n    const n1: number[] = [plane.getCartesians()[0], plane.getCartesians()[1], plane.getCartesians()[2]];\n    // get circle\n    const C0: number[] = circle.getOrigin().getPosition();\n    const CA: [gs.XYZ, gs.XYZ, gs.XYZ] = circle.getAxes();\n    const U1: three.Vector3 = new three.Vector3(...CA[0]);\n    const V1: three.Vector3 = new three.Vector3(...CA[1]).setLength(U1.length());\n    const _n1: three.Vector3 = new three.Vector3(n1[0], n1[1], n1[2]);\n    // calculate t\n    const A: number = n1[0] * (C0[0] - PO[0]) + n1[1] * (C0[1] - PO[1]) + n1[2] * (C0[2] - PO[2]);\n    const B: number = n1[0] * U1.x + n1[1] * U1.y + n1[2] * U1.z;\n    const C: number = n1[0] * V1.x + n1[1] * V1.y + n1[2] * V1.z;\n    const _t: number[] = trigo._solve_trigo(A, B, C);\n    if (_t === null) { return []; }\n    const result: gs.IPoint[] = [];\n\n    if (Math.abs(Math.abs(_t[0] - _t[1]) - Math.PI) < EPS ) {delete _t[0];}\n\n    for (const t of _t) {\n        if ((t !== null) && (t != undefined)) {\n            let ok1: boolean = false;\n            let ok2: boolean = false;\n            if (circle.isClosed()) {\n                ok1 = true;\n                ok2 = true;\n            } else {\n                let angle: number = t * (180 / Math.PI);\n                if (circleUtil.angleInCircle(circle, angle)) { ok1 = true; }\n                if (circleUtil.angleInCircle(circle, angle + 180)) { ok2 = true; }\n                //console.log(circle.getAngles(), angle, ok1, angle + 180, ok2);\n            }\n\n            if (ok1) {\n                const point1: three.Vector3 = new three.Vector3(\n                    C0[0] + Math.cos(t) * U1.x + Math.sin(t) * V1.x - PO[0],\n                    C0[1] + Math.cos(t) * U1.y + Math.sin(t) * V1.y - PO[1],\n                    C0[2] + Math.cos(t) * U1.z + Math.sin(t) * V1.z - PO[2],\n                );\n                //console.log(\"point1\", t, point1);\n                if (Math.abs(_n1.dot(point1)) < eps) {\n                    result.push(m.getGeom().addPoint([\n                        C0[0] + Math.cos(t) * U1.x + Math.sin(t) * V1.x,\n                        C0[1] + Math.cos(t) * U1.y + Math.sin(t) * V1.y,\n                        C0[2] + Math.cos(t) * U1.z + Math.sin(t) * V1.z\n                    ]));\n                }\n            }\n            if (ok2) {\n                const point2: three.Vector3 = new three.Vector3(\n                    C0[0] + Math.cos(t + Math.PI) * U1.x + Math.sin(t + Math.PI) * V1.x - PO[0],\n                    C0[1] + Math.cos(t + Math.PI) * U1.y + Math.sin(t + Math.PI) * V1.y - PO[1],\n                    C0[2] + Math.cos(t + Math.PI) * U1.z + Math.sin(t + Math.PI) * V1.z - PO[2],\n                );\n                //console.log(\"point2\", t, point2);\n                if (Math.abs(_n1.dot(point2)) < eps) {\n                    result.push(m.getGeom().addPoint([\n                        C0[0] + Math.cos(t + Math.PI) * U1.x + Math.sin(t + Math.PI) * V1.x,\n                        C0[1] + Math.cos(t + Math.PI) * U1.y + Math.sin(t + Math.PI) * V1.y,\n                        C0[2] + Math.cos(t + Math.PI) * U1.z + Math.sin(t + Math.PI) * V1.z\n                    ]));\n                }\n            }\n        }\n    }\n    return result;\n}\n","import * as gs from \"gs-json\";\nimport * as mathjs from \"mathjs\";\nimport * as three from \"three\";\nimport * as threex from \"../threex/threex\";\nconst EPS = 1e-6;\n\n/**\n * Circle-Line intersection\n * @param circle\n * @param Line, represented by 2 Points\n * @returns An array of intersection points\n */\nexport function _isectCircleLine2D(): void {\n    throw new Error(\"Method not implemented.\");\n}\n","import * as gs from \"gs-json\";\nimport * as mathjs from \"mathjs\";\nimport * as three from \"three\";\nimport * as threex from \"../threex/threex\";\nconst EPS = 1e-6;\n\n/**\n * Check if a points is within the circle arc\n * @param circle\n * @param point\n * @returns True is it is inside\n */\nexport function pointInCircle(circle: gs.ICircle, point: gs.IPoint) {\n    if (circle.isClosed()) {return true;}\n    // create matrix to map from the 3D plane for circle into the XY plane\n    const origin: gs.XYZ = circle.getOrigin().getPosition();\n    const axes: [gs.XYZ, gs.XYZ, gs.XYZ] = circle.getAxes();\n    const matrix: three.Matrix4 = threex.xformMatrixFromXYZAxes(origin, axes, true);\n    // map the point onto the XY plane\n    const vpoint: three.Vector3 = new three.Vector3(...point.getPosition());\n    vpoint.applyMatrix4(matrix);\n    // calculate the angle between the point vector and the x axis, in radians\n    let angle_rad = Math.atan2(vpoint.y, vpoint.x);\n    if (angle_rad < 0) {angle_rad += (2 * Math.PI); }\n    const angle_deg: number = angle_rad * (180 / Math.PI);\n    // mow check angle\n    return angleInCircle(circle, angle_deg);\n}\n\n/**\n * Check if a t value (for closed circle) is within the circle arc\n * @param circle\n * @param t\n * @returns True is it is inside\n */\nexport function tInCircle(circle: gs.ICircle, t: number) {\n    if (circle.isClosed()) {return true;}\n    const angle: number = t * (180 / Math.PI);\n    return angleInCircle(circle, angle);\n}\n\n/**\n * Check if an angle (in degrees) isf within the circle arc\n * @param circle\n * @param angle\n * @returns True is it is inside\n */\nexport function angleInCircle(circle: gs.ICircle, angle: number) {\n    if (circle.isClosed()) {return true;}\n    // convert angle to 0 to 360\n    if (angle < 0) {angle = 360 + (angle % 360);}\n    if (angle > 360) {angle = angle % 360;}\n    // get the angles, calc start and end, incl EPS\n    const angles: [number, number] = circle.getAngles();\n    const start: number = angles[0] - EPS;\n    const end: number = angles[1] + EPS;\n    // return result\n    if (angles[0] < angles[1]) {\n        if ((angle >= start) && (angle <= end)) {return true;}\n    } else {\n        if ((angle >= start) || (angle <= end)) {return true;}\n    }\n    return false;\n}\n","export * from \"./circle3Points\";\nexport * from \"./circleCircle2D\";\nexport * from \"./circlePolyline2D\";\nexport * from \"./circlePlane3D\";\n","/**\n  * Solves exact solutions of the trigonometric equation A + B.cos(t) + C.sin(t) = 0\n  * @param A, real number, parameter of the trigonometric equation\n  * @param B, real number, parameter of the trigonometric equation\n  * @param C, real number, parameter of the trigonometric equation\n  * @return a set of 2 real numbers solutions of the equation\n  */\nexport function _solve_trigo(A: number, B: number, C: number): number[] {\n    const num1: number = -A;\n    const den1: number = Math.sqrt(B*B + C*C);\n    const num2: number = B;\n    const den2: number = C;\n    if(C === 0) {\n        if(B === 0) {return null;}\n        if(Math.abs(A/B)>1) {return null;}\n        return [(-Math.acos(-A/B)) % (2*Math.PI), (Math.acos(-A/B)) % (2*Math.PI)];\n    }\n    if(Math.abs(num1/den1)>1) {return null;}\n    const t1: number = Math.asin(num1/den1) - Math.atan(num2/den2);\n    const t2: number = Math.PI - Math.atan(num2/den2) - Math.asin(num1/den1);\n    return [t1 % (2*Math.PI),t2 % (2*Math.PI)];\n}\n","export function save(data:string, filename: string): boolean {\n      const data_type = 'text/plain;charset=utf-8';\n      const data_bom = decodeURIComponent('%ef%bb%bf');\n      if (window.navigator.msSaveBlob) {\n          const blob = new Blob([data_bom + data],{type: data_type });\n          window.navigator.msSaveBlob(blob, data);\n      }\n      else {\n          const link = document.createElement('a');\n          const content = data_bom + data;\n          const uriScheme = ['data:', data_type, ','].join('');\n          link.href = uriScheme + content;\n          link.download = filename;\n          //FF requires the link in actual DOM\n          document.body.appendChild(link);\n          link.click();\n          document.body.removeChild(link);\n      }\n      return true;\n}\n","import * as gs from \"gs-json\";\nimport * as three from \"three\";\nimport * as threex from \"../threex/threex\";\n\nconst EPS: number = 1e-6;\n\n/**\n * Get a normal from a face vertex\n */\nexport function getVertexNormal(vertex: gs.IVertex): three.Vector3 {\n    let next: gs.IVertex = vertex.next();\n    let prev: gs.IVertex = vertex.previous();\n    let vector_next: three.Vector3 = threex.vectorFromVerticesAtoB(vertex, next);\n    let vector_prev: three.Vector3 = threex.vectorFromVerticesAtoB(vertex, prev);\n    let normal: three.Vector3 = threex.crossVectors(vector_next, vector_prev);\n    //console.log(\"normal\", normal.lengthSq());\n    if (normal.lengthSq() > EPS) {return normal;} //TODO normal length looks big\n    // this will be executed for degenerate cases, e.g. colinear points\n\n    for (let i = 0; i < vertex.getWireOrFace().numVertices() - 2; i++) {\n        if (vector_prev.lengthSq() < EPS) {\n            prev = prev.previous();\n            vector_prev = threex.vectorFromVerticesAtoB(vertex, prev);\n        }\n        next = next.next();\n        vector_next = threex.vectorFromVerticesAtoB(vertex, next);\n        normal = threex.crossVectors(vector_next, vector_prev);\n        if (normal.lengthSq() > EPS) {return normal;}\n    }\n    throw new Error(\"Failed to get normal from face.\");\n}\n\n/**\n *  Loop through a list of list of points, and loft.\n *  The lists represent rows, each row has sub lists. The sub lists get lofted.\n */\nexport function pointsLoftLoop(points_lists: gs.IPoint[][][], is_closed: boolean): gs.IPoint[][] {\n    const mesh_points: gs.IPoint[][] = [];\n    const num_lists: number = points_lists.length;\n    const list_length: number = points_lists[0].length;\n    for (let list_pos = 0; list_pos < list_length; list_pos++) {\n        const points_list: gs.IPoint[][] = [];\n        for (let list_num = 0; list_num < num_lists; list_num++) {\n            points_list.push(points_lists[list_num][list_pos]);\n        }\n        mesh_points.push(...pointsLoft(points_list, is_closed));\n    }\n    return mesh_points;\n}\n/**\n *  Generate a nested list of points, ready for creating polymesh faces.\n */\nexport function pointsLoft(points: gs.IPoint[][], is_closed: boolean): gs.IPoint[][] {\n    const mesh_points: gs.IPoint[][] = [];\n    for (let i = 0; i < points.length - 1; i++) {\n        for (let j = 0; j < points[i].length; j++) {\n            if (j < points[i].length - 1) {\n                mesh_points.push([points[i][j], points[i][j + 1], points[i + 1][j + 1], points[i + 1][j]]);\n            } else {\n                if (is_closed) {\n                    mesh_points.push([points[i][j], points[i][0], points[i + 1][0], points[i + 1][j]]);\n                }\n            }\n        }\n    }\n    return mesh_points;\n}\n\n/**\n * Moves the end point away from the start point by distance.\n * If create_point is true, then a new point get created, otherwise the existing point gets moved.\n */\nexport function pointsExtend(start: gs.IPoint, end: gs.IPoint, distance: number, create: boolean = true): gs.IPoint {\n    const start_vec: three.Vector3 = new three.Vector3(...start.getPosition());\n    const end_vec: three.Vector3 = new three.Vector3(...end.getPosition());\n    const dir_vec: three.Vector3 = threex.subVectors(end_vec, start_vec);\n    dir_vec.setLength(distance);\n    const new_xyz: gs.XYZ = threex.addVectors(end_vec, dir_vec).toArray() as gs.XYZ;\n    if (create) {\n        const geom: gs.IGeom = start.getGeom();\n        return geom.addPoint(new_xyz);\n    } else {\n        end.setPosition(new_xyz);\n        return end;\n    }\n}\n\n/**\n * Evaluates the position between a sequence of points.\n * A new point is always created.\n */\nexport function pointsEvaluate(points: gs.IPoint[], t_param: number): gs.IPoint {\n    const geom: gs.IGeom = points[0].getGeom();\n    if (t_param === 0) {return geom.addPoint(points[0].getPosition());}\n    if (t_param === 1) {return geom.addPoint(points[points.length - 1].getPosition());}\n    if (t_param < 0 || t_param > 1) {throw new Error(\"t parameter is out of range\");}\n    const vec_points: three.Vector3[] = points.map((point) => new three.Vector3(...point.getPosition()));\n    const num_segs = points.length - 1;\n    const dists_to_segends: number[] = [0];\n    let total_length: number = 0;\n    for  (let i = 0; i < num_segs; i++) {\n        const seg_vec: three.Vector3 = threex.subVectors(vec_points[i+1], vec_points[i]);\n        total_length += seg_vec.length();\n        dists_to_segends.push(total_length);\n    }\n    const t_mapped = t_param * total_length;\n    for  (let i = 0; i < vec_points.length - 1; i++) {\n        if (t_mapped >= dists_to_segends[i] && t_mapped < dists_to_segends[i + 1]) {\n            const start_seg: three.Vector3 = vec_points[i];\n            const end_seg: three.Vector3 = vec_points[i + 1];\n            const seg_vec: three.Vector3 = threex.subVectors(end_seg, start_seg);\n            const start_dist: number = dists_to_segends[i];\n            seg_vec.setLength(t_mapped - start_dist);\n            const xyz: gs.XYZ = threex.addVectors(start_seg, seg_vec).toArray() as gs.XYZ;\n            return geom.addPoint(xyz);\n        }\n    }\n    throw new Error(\"Something went wrong evaluating the t parameter.\");\n}\n\n/**\n * Intersect polylines.\n */\nexport function _isectPolylinePolyline2D(pline1: gs.IPolyline, pline2: gs.IPolyline): gs.IPoint[] {\n    const model: gs.IModel = pline1.getModel();\n    const points1: gs.IPoint[] = pline1.getPointsArr();\n    const points2: gs.IPoint[] = pline2.getPointsArr();\n    // Add points for closed polylines\n    if (pline1.isClosed()) {points1.push(points1[0]);}\n    if (pline2.isClosed()) {points2.push(points2[0]);}\n    // Create vpoints\n    const points1_vec: three.Vector3[] = points1.map((p) => new three.Vector3(...p.getPosition()));\n    const points2_vec: three.Vector3[] = points2.map((p) => new three.Vector3(...p.getPosition()));\n    const ortho_vecs: [three.Vector3, three.Vector3] = threex.orthoVectorsFromPlanarVPoints(\n            [...points1_vec, ...points2_vec]);\n    // Create the matrixes to transform between 3d and 2d\n    if (ortho_vecs === null) {\n        throw new Error(\"Entities must be coplanar.\");\n    }\n    const matrix_neg: three.Matrix4 = threex.xformMatrixNeg(\n        points1_vec[0], ortho_vecs[0], ortho_vecs[1]);\n    const matrix_pos: three.Matrix4 = threex.xformMatrixPos(\n        points1_vec[0], ortho_vecs[0], ortho_vecs[1]);\n    // Make the polyline points 2D, and also check that they really are 2d\n    for (const point of points1_vec) {\n        point.applyMatrix4(matrix_neg);\n        if (Math.abs(point.z) > EPS) {return null;}\n    }\n    for (const point of points2_vec) {\n        point.applyMatrix4(matrix_neg);\n        if (Math.abs(point.z) > EPS) {return null;}\n    }\n    // Loop through each edge and check for intersections\n    const isect_points: gs.IPoint[] = [];\n    for (let i = 0; i < points1_vec.length - 1; i++) {\n        const line1_start: three.Vector3 = points1_vec[i];\n        const line1_end: three.Vector3 = points1_vec[i+1];\n        for (let j = 0; j < points2_vec.length - 1; j++) {\n            const line2_start: three.Vector3 = points2_vec[j];\n            const line2_end: three.Vector3 = points2_vec[j+1];\n            const result: {isect_point: three.Vector3, t1: number, t2: number} =\n                _isectLineLine2D(line1_start, line1_end, line2_start, line2_end);\n            if (result !== null) {\n                const xyz: gs.XYZ = result.isect_point.applyMatrix4(matrix_pos).toArray() as gs.XYZ;\n                const isect_point: gs.IPoint = model.getGeom().addPoint(xyz);\n                // add the point\n                isect_points.push(isect_point);\n            }\n        }\n    }\n    return isect_points;\n}\n\n/**\n * Split polylines.\n */\nexport function _splitPolylinePolyline2D(pline1: gs.IPolyline, pline2: gs.IPolyline): gs.IPolyline[][] {\n    const model: gs.IModel = pline1.getModel();\n    const points1: gs.IPoint[] = pline1.getPointsArr();\n    const points2: gs.IPoint[] = pline2.getPointsArr();\n    // Add points for closed polylines\n    if (pline1.isClosed()) {points1.push(points1[0]);}\n    if (pline2.isClosed()) {points2.push(points2[0]);}\n    // Create vpoints\n    const points1_vec: three.Vector3[] = points1.map((p) => new three.Vector3(...p.getPosition()));\n    const points2_vec: three.Vector3[] = points2.map((p) => new three.Vector3(...p.getPosition()));\n    const ortho_vecs: [three.Vector3, three.Vector3] = threex.orthoVectorsFromPlanarVPoints(\n            [...points1_vec, ...points2_vec]);\n    // Create the matrixes to transform between 3d and 2d\n    if (ortho_vecs === null) {\n        throw new Error(\"Entities must be coplanar.\");\n    }\n    const matrix_neg: three.Matrix4 = threex.xformMatrixNeg(\n        points1_vec[0], ortho_vecs[0], ortho_vecs[1]);\n    const matrix_pos: three.Matrix4 = threex.xformMatrixPos(\n        points1_vec[0], ortho_vecs[0], ortho_vecs[1]);\n    // Make the polyline points 2D, and also check that they really are 2d\n    for (const point of points1_vec) {\n        point.applyMatrix4(matrix_neg);\n        if (Math.abs(point.z) > EPS) {return null;}\n    }\n    for (const point of points2_vec) {\n        point.applyMatrix4(matrix_neg);\n        if (Math.abs(point.z) > EPS) {return null;}\n    }\n    // Loop through each edge and check for intersections\n    const isect1_map: Map<number, {t:number, isect_point:gs.IPoint}[]> = new Map();\n    const isect2_map: Map<number, {t:number, isect_point:gs.IPoint}[]> = new Map();\n    for (let i = 0; i < points1_vec.length - 1; i++) {\n        const line1_start: three.Vector3 = points1_vec[i];\n        const line1_end: three.Vector3 = points1_vec[i+1];\n        for (let j = 0; j < points2_vec.length - 1; j++) {\n            const line2_start: three.Vector3 = points2_vec[j];\n            const line2_end: three.Vector3 = points2_vec[j+1];\n            const result: {isect_point: three.Vector3, t1: number, t2: number} =\n                _isectLineLine2D(line1_start, line1_end, line2_start, line2_end);\n            if (result !== null) {\n                const xyz: gs.XYZ = result.isect_point.applyMatrix4(matrix_pos).toArray() as gs.XYZ;\n                const isect_point: gs.IPoint = model.getGeom().addPoint(xyz);\n                // add the point for pline1\n                if (!isect1_map.has(i)) {isect1_map.set(i, []);}\n                isect1_map.get(i).push({t:result.t1, isect_point:isect_point});\n                // add the point for pline2\n                if (!isect2_map.has(j)) {isect2_map.set(j, []);}\n                isect2_map.get(j).push({t:result.t2, isect_point:isect_point});\n            }\n        }\n    }\n    // make the list of points for pline 1\n    const new_points1: gs.IPoint[][] = [[points1[0]]];\n    for (let i = 0; i < points1.length - 1; i++) {\n        if (isect1_map.has(i)) {\n            // sort the points in the list by t value\n            const isects: {t:number, isect_point:gs.IPoint}[] = isect1_map.get(i);\n            isects.sort((a, b) => a.t - b.t);\n            // for each isect, start a new array of points\n            for (const isect of isects) {\n                new_points1[new_points1.length - 1].push(isect.isect_point);\n                new_points1.push([isect.isect_point]);\n            }\n        }\n        // add the next point\n        new_points1[new_points1.length - 1].push(points1[i + 1]);\n    }\n    // if the polyline was closed, then merge first and last lists\n    if (pline1.isClosed()) {\n        const last: gs.IPoint[] = new_points1[new_points1.length - 1];\n        last.push(...new_points1[0])\n        new_points1[0] = last;\n        new_points1.pop();\n    }\n    // make the list of points for pline 2\n    const new_points2: gs.IPoint[][] = [[points2[0]]];\n    for (let i = 0; i < points2.length - 1; i++) {\n        if (isect2_map.has(i)) {\n            // sort the points in the list by t value\n            const isects: {t:number, isect_point:gs.IPoint}[] = isect2_map.get(i);\n            isects.sort((a, b) => a.t - b.t);\n            // for each isect, start a new array of points\n            for (const isect of isects) {\n                new_points2[new_points2.length - 1].push(isect.isect_point);\n                new_points2.push([isect.isect_point]);\n            }\n        }\n        // add the next point\n        new_points2[new_points2.length - 1].push(points2[i + 1]);\n    }\n    // if the polyline was closed, then merge first and last lists\n    if (pline2.isClosed()) {\n        const last: gs.IPoint[] = new_points2[new_points2.length - 1];\n        last.push(...new_points2[0])\n        new_points2[0] = last;\n        new_points2.pop();\n    }\n    // delete the old plines\n    model.getGeom().delObjs([pline1, pline2], true);\n    // return an array of new plines\n    const new_plines1: gs.IPolyline[] = new_points1.map((pts) => model.getGeom().addPolyline(pts, false));\n    const new_plines2: gs.IPolyline[] = new_points2.map((pts) => model.getGeom().addPolyline(pts, false));\n    return [new_plines1, new_plines2];\n}\n\n/**\n * Intersect lines.\n * http://jsfiddle.net/justin_c_rounds/Gd2S2/light/\n */\nfunction _isectLineLine2D(line1_start: three.Vector3, line1_end: three.Vector3,\n                          line2_start: three.Vector3, line2_end: three.Vector3):\n    {isect_point: three.Vector3, t1: number, t2: number} {\n    const denominator: number =\n        ((line2_end.y - line2_start.y) * (line1_end.x - line1_start.x)) -\n        ((line2_end.x - line2_start.x) * (line1_end.y - line1_start.y));\n    // lines are parallel\n    if (denominator === 0) {return null;}\n    // calc intersection\n    let t1: number = line1_start.y - line2_start.y;\n    let t2: number = line1_start.x - line2_start.x;\n    const numerator1: number = ((line2_end.x - line2_start.x) * t1) - ((line2_end.y - line2_start.y) * t2);\n    const numerator2: number = ((line1_end.x - line1_start.x) * t1) - ((line1_end.y - line1_start.y) * t2);\n    t1 = numerator1 / denominator;\n    t2 = numerator2 / denominator;\n    // check intersection point is on both line segments\n    if ((t1 <= 0) || (t1 > 1)) {return null;}\n    if ((t2 <= 0) || (t2 > 1)) {return null;}\n    // intersection point\n    const result_x: number = line1_start.x + (t1 * (line1_end.x - line1_start.x));\n    const result_y: number = line1_start.y + (t1 * (line1_end.y - line1_start.y));\n    // return the result\n    return {isect_point: new three.Vector3(result_x, result_y, 0), t1: t1, t2: t2} ;\n}\n","import * as gs from \"gs-json\";\nimport * as three from \"three\";\nimport * as threex from \"../threex/threex\";\n\nconst EPS: number = 1e-6;\n\n/**\n * Pipes a polylines.\n */\nexport function pipe(pline: gs.IPolyline, radius: number, segments: number): gs.IPolymesh {\n    const model: gs.IModel = pline.getModel();\n    // create the section\n    const sec_vpts_xy: three.Vector3[] = [new three.Vector3(radius, 0, 0)];\n    const rot_matrix: three.Matrix4 = new three.Matrix4().makeRotationZ((Math.PI * 2) / segments);\n    for (let i = 1; i < segments; i++) {\n        sec_vpts_xy.push(sec_vpts_xy[sec_vpts_xy.length - 1].clone().applyMatrix4(rot_matrix));\n    }\n    // Get the points\n    const points_raw: gs.IPoint[] = pline.getPointsArr();\n    const points: gs.IPoint[] = [];\n    // check for zero dist points\n    for (let i = 0; i < points_raw.length; i++) {\n        const p1: gs.IPoint = points_raw[i];\n        let inext: number = i+1;\n        if (i === points_raw.length - 1) {inext = 0;}\n        const p2: gs.IPoint = points_raw[inext];\n        if (threex.distManPointToPoint(p1, p2) > EPS) {points.push(p1);} // TODO COuld be slow\n    }\n\n    // Add points for closed polylines\n    if (pline.isClosed() && pline.numVertices() > 3) {points.push(points[0]);points.push(points[1]);}\n    // Create vpoints\n    const vpoints: three.Vector3[] = points.map((p) => new three.Vector3(...p.getPosition()));\n    // Do all the other points first\n    let start_x_vec: three.Vector3 = null;\n    let end_x_vec: three.Vector3 = null;\n    let prev_x_vec: three.Vector3 = null;\n    const sec_pts_array: gs.IPoint[][] = [];\n    if (points.length > 2) {\n        // Loop through pline segments\n        for (let i = 1; i < points.length - 1; i++) {\n            // Get the points\n            const prev: three.Vector3 = vpoints[i-1];\n            const curr: three.Vector3 = vpoints[i];\n            const next: three.Vector3 = vpoints[i+1];\n            const vec_c_p: three.Vector3 = new three.Vector3().subVectors(prev, curr).normalize();\n            const vec_c_n: three.Vector3 = new three.Vector3().subVectors(next, curr).normalize();\n            let x_vec: three.Vector3 = new three.Vector3().crossVectors(vec_c_p, vec_c_n);\n            let y_vec: three.Vector3;\n            // get a valid x vector\n            if (x_vec.length() > EPS) {\n                prev_x_vec = x_vec;\n                y_vec = new three.Vector3().addVectors(vec_c_p, vec_c_n).multiplyScalar(0.5);\n            } else {\n                if (prev_x_vec !== null) {\n                    x_vec = prev_x_vec;\n                } else {\n                    if (vec_c_n.y > EPS || vec_c_n.z > EPS) {\n                        x_vec.crossVectors(vec_c_n, new three.Vector3(1,0,0));\n                    } else {\n                        x_vec.crossVectors(vec_c_n, new three.Vector3(0,1,0));\n                    }\n                }\n                y_vec = new three.Vector3().crossVectors(vec_c_n, x_vec).normalize();\n            }\n            // calc the transform\n\n            const matrix: three.Matrix4 = threex.xformMatrixPos(curr, x_vec, y_vec);\n            const angle: number = vec_c_p.angleTo(vec_c_n);\n            const scale: number = Math.cos(angle / 2);\n            const matrix_scale: three.Matrix4 = new three.Matrix4().makeScale(1,1 + scale,1)\n            matrix.multiply(matrix_scale); // first scale, then transform\n            const xformed: three.Vector3[] = sec_vpts_xy.map((p) => p.clone().applyMatrix4(matrix));\n            const new_points: gs.IPoint[] = xformed.map((v) => model.getGeom().addPoint([v.x, v.y, v.z]));\n            sec_pts_array.push(new_points);\n\n            if (i === 1) {start_x_vec = x_vec;}\n            if (i === points.length - 2) {end_x_vec = x_vec;}\n        }\n    }\n    // For open plines, calc start and end sections\n    if (!pline.isClosed()) {\n        // Do the first and last points for open polylines\n        const start_end: gs.IPoint[][] = [];\n        const first: three.Vector3[] = [vpoints[0], vpoints[1], start_x_vec];\n        const extend: three.Vector3 = new three.Vector3().subVectors(\n            vpoints[vpoints.length - 1], vpoints[vpoints.length - 2]).add(vpoints[vpoints.length - 1]);\n        const last: three.Vector3[] = [vpoints[vpoints.length - 1], extend, end_x_vec];\n        for (const triple of [first, last]) {\n            const z_vec: three.Vector3 = new three.Vector3().subVectors(triple[1], triple[0]).normalize();\n            let x_vec: three.Vector3 = new three.Vector3();\n            if (triple[2] !== null) {\n                x_vec = triple[2];\n            } else if (z_vec.y > EPS || z_vec.z > EPS) {\n                x_vec.crossVectors(z_vec, new three.Vector3(1,0,0));\n            } else {\n                x_vec.crossVectors(z_vec, new three.Vector3(0,1,0));\n            }\n            const y_vec: three.Vector3 = new three.Vector3().crossVectors(z_vec, x_vec);\n            const matrix: three.Matrix4 = threex.xformMatrixPos(triple[0], x_vec, y_vec);\n            const xformed: three.Vector3[] = sec_vpts_xy.map((v) => v.clone().applyMatrix4(matrix));\n            const new_points: gs.IPoint[] = xformed.map((v) => model.getGeom().addPoint([v.x, v.y, v.z]));\n            start_end.push(new_points);\n        }\n        sec_pts_array.unshift(start_end[0]);\n        sec_pts_array.push(start_end[1]);\n\n    }\n    // Create the mesh points\n    const mesh_points: gs.IPoint[][] = [];\n    for (let i = 0; i< sec_pts_array.length; i++) {\n        let inext: number = i + 1;\n        if (pline.isClosed() && inext === sec_pts_array.length) {\n            inext = 0;\n        }\n        if (!pline.isClosed() && inext === sec_pts_array.length) {\n            break;\n        }\n        for (let j = 0; j < segments; j++) {\n            let jnext: number = j + 1;\n            if (jnext === segments) {jnext = 0;}\n            const v1: gs.IPoint = sec_pts_array[i][j];\n            const v2: gs.IPoint = sec_pts_array[i][jnext];\n            const v3: gs.IPoint = sec_pts_array[inext][jnext];\n            const v4: gs.IPoint = sec_pts_array[inext][j];\n            mesh_points.push([v1, v2, v3, v4]);\n        }\n    }\n    // Create the mesh\n    //console.log(mesh_points);\n    return model.getGeom().addPolymesh(mesh_points);\n}\n","import * as gs from \"gs-json\";\nimport * as three from \"three\";\nimport * as threex from \"../threex/threex\";\n\nconst EPS: number = 1e-6;\n\n/**\n * Split polylines with a plane.\n */\nexport function splitPolylinePlane3D(pline: gs.IPolyline, plane: gs.IPlane): gs.IPolyline[] {\n    const model: gs.IModel = pline.getModel();\n    const points: gs.IPoint[] = pline.getPointsArr();\n    const origin: gs.IPoint = plane.getOrigin();\n    const axes: [gs.XYZ, gs.XYZ, gs.XYZ] = plane.getAxes();\n    // Add points for closed polylines\n    if (pline.isClosed()) {points.push(points[0]);}\n    // Create vpoints\n    const vpoints: three.Vector3[] = points.map((p) => new three.Vector3(...p.getPosition()));\n    const vaxes: three.Vector3[] = axes.map((a) => new three.Vector3(...a));\n    const vorigin: three.Vector3 = new three.Vector3(...origin.getPosition());\n    // Create the matrixes to transform between 3d and 2d\n    const matrix_neg: three.Matrix4 = threex.xformMatrixNeg(vorigin, vaxes[0], vaxes[1]);\n    const matrix_pos: three.Matrix4 = threex.xformMatrixPos(vorigin, vaxes[0], vaxes[1]);\n    // Project the polyline points\n    for (const vpoint of vpoints) {\n        vpoint.applyMatrix4(matrix_neg);\n    }\n    // Loop through each edge and check for intersections\n    let pline_points_array: gs.IPoint[][] = [];\n    let pline_points: gs.IPoint[] = [];\n    for (let i = 0; i < vpoints.length - 1; i++) {\n        pline_points.push(points[i]);\n        const line1_start: three.Vector3 = vpoints[i];\n        const line1_end: three.Vector3 = vpoints[i+1];\n        const result: three.Vector3 =_isectLineXYPlane3D(line1_start, line1_end);\n        if (result !== null) {\n            const xyz: gs.XYZ = result.applyMatrix4(matrix_pos).toArray() as gs.XYZ;\n            const isect_point: gs.IPoint = model.getGeom().addPoint(xyz);\n            pline_points.push(isect_point);\n            pline_points_array.push(pline_points);\n            pline_points = [isect_point];\n        }\n        if (i === vpoints.length - 2) {\n            pline_points.push(points[i + 1]);\n            pline_points_array.push(pline_points);\n        }\n    }\n    if (pline_points_array.length === 1) {return null; }\n    if (pline.isClosed() && pline_points_array.length > 2) {\n        const first: gs.IPoint[] = pline_points_array[0];\n        const last: gs.IPoint[] = pline_points_array.pop();\n        last.push(...first);\n        pline_points_array[0] = last;\n    }\n    return pline_points_array.map((pts) => model.getGeom().addPolyline(pts, false));\n}\n\n/**\n * Isect polylines with a plane.\n */\nexport function isectPolylinePlane3D(pline: gs.IPolyline, plane: gs.IPlane): gs.IPoint[] {\n    const model: gs.IModel = pline.getModel();\n    const points: gs.IPoint[] = pline.getPointsArr();\n    const origin: gs.IPoint = plane.getOrigin();\n    const axes: [gs.XYZ, gs.XYZ, gs.XYZ] = plane.getAxes();\n    // Add points for closed polylines\n    if (pline.isClosed()) {points.push(points[0]);}\n    // Create vpoints\n    const vpoints: three.Vector3[] = points.map((p) => new three.Vector3(...p.getPosition()));\n    const vaxes: three.Vector3[] = axes.map((a) => new three.Vector3(...a));\n    const vorigin: three.Vector3 = new three.Vector3(...origin.getPosition());\n    // Create the matrixes to transform between 3d and 2d\n    const matrix_neg: three.Matrix4 = threex.xformMatrixNeg(vorigin, vaxes[0], vaxes[1]);\n    const matrix_pos: three.Matrix4 = threex.xformMatrixPos(vorigin, vaxes[0], vaxes[1]);\n    // Project the polyline points\n    for (const vpoint of vpoints) {\n        vpoint.applyMatrix4(matrix_neg);\n    }\n    // Loop through each edge and check for intersections\n    const isect_points: gs.IPoint[] = [];\n    for (let i = 0; i < vpoints.length - 1; i++) {\n        const line1_start: three.Vector3 = vpoints[i];\n        const line1_end: three.Vector3 = vpoints[i+1];\n        const result: three.Vector3 =_isectLineXYPlane3D(line1_start, line1_end);\n        if (result !== null) {\n            const xyz: gs.XYZ = result.applyMatrix4(matrix_pos).toArray() as gs.XYZ;\n            const isect_point: gs.IPoint = model.getGeom().addPoint(xyz);\n            isect_points.push(isect_point);\n        }\n    }\n    return isect_points;\n}\n\n/**\n * Intersect line with XY plane.\n */\nfunction _isectLineXYPlane3D(line_start: three.Vector3, line_end: three.Vector3): three.Vector3 {\n    if (line_start.z === 0) {return  line_start.clone();}\n    if (line_end.z === 0) {return  line_end.clone();}\n    if ((line_start.z * line_end.z) > 0) {return null;}\n    const start_z: number = Math.abs(line_start.z);\n    const end_z: number = Math.abs(line_end.z);\n    const scalar_z: number = start_z / (start_z + end_z);\n    const line_vec: three.Vector3 = new three.Vector3()\n        .subVectors(line_end, line_start).multiplyScalar(scalar_z);\n    return new three.Vector3().addVectors(line_start, line_vec);\n}\n","import * as gs from \"gs-json\";\nimport * as three from \"three\";\nimport {Arr} from \"../arr/arr\";\n\n/**\n * Utility functions for threejs.\n */\n\nconst EPS: number = 1e-6;\n\n // Matrices ======================================================================================================\n\nexport function multVectorMatrix(v: three.Vector3, m: three.Matrix4): three.Vector3 {\n    const v2: three.Vector3 = v.clone();\n    v2.applyMatrix4(m);\n    return v2;\n}\n\nexport function multXYZMatrix(xyz: gs.XYZ, m: three.Matrix4): three.Vector3 {\n    const v2: three.Vector3 = new three.Vector3(...xyz);\n    v2.applyMatrix4(m);\n    return v2;\n}\n\n/*\n * Transforms from LCS to GCS. The LCS is defined by origin, x axis, y axis.\n */\nexport function xformMatrixNeg(o: three.Vector3, x: three.Vector3, y: three.Vector3): three.Matrix4 {\n    const m1: three.Matrix4 = new three.Matrix4();\n    const o_neg: three.Vector3 = o.clone().negate();\n    m1.setPosition(o_neg);\n    const m2: three.Matrix4 = new three.Matrix4();\n    m2.makeBasis(x.normalize(), y.normalize(), crossVectors(x,y,true));\n    m2.getInverse(m2);\n    const m3: three.Matrix4 = new three.Matrix4();\n    // first translate to (0,0,0), then xform, so m1 x m2\n    m3.multiplyMatrices(m2, m1);\n    return m3;\n}\n\n/*\n * Transforms from GCS to LCS.The LCS is defined by origin, x axis, y axis.\n */\nexport function xformMatrixPos(o: three.Vector3, x: three.Vector3, y: three.Vector3): three.Matrix4 {\n    const m1: three.Matrix4 = new three.Matrix4();\n    m1.setPosition(o);\n    const m2: three.Matrix4 = new three.Matrix4();\n    m2.makeBasis(x.normalize(), y.normalize(), crossVectors(x,y,true));\n    const m3: three.Matrix4 = new three.Matrix4();\n    // first xform, then translate to origin, so m1 x m2\n    m3.multiplyMatrices(m1, m2);\n    return m3;\n}\n\n// get the inverse of a matrix\nexport function matrixInverse(m: three.Matrix4): three.Matrix4 {\n    const m_inv: three.Matrix4 = new three.Matrix4();\n    return m_inv.getInverse(m);\n}\n\nexport function xformMatrixFromXYZAxes(o: gs.XYZ, axes: [gs.XYZ, gs.XYZ, gs.XYZ], neg: boolean): three.Matrix4 {\n    const x_vec: three.Vector3 = new three.Vector3(...axes[0]).normalize();\n    const y_vec: three.Vector3 = new three.Vector3(...axes[1]).normalize();\n    if (neg) {\n        return xformMatrixNeg(new three.Vector3(...o), x_vec, y_vec);\n    }\n    return xformMatrixPos(new three.Vector3(...o), x_vec, y_vec);\n}\n\nexport function xformMatrixFromXYZVectors(o: gs.XYZ, xaxis: gs.XYZ, xyplane: gs.XYZ, neg: boolean): three.Matrix4 {\n    const x_vec: three.Vector3 = new three.Vector3(...xaxis).normalize();\n    const xyplane_vec: three.Vector3 = new three.Vector3(...xyplane).normalize();\n    const z_vec: three.Vector3 = crossVectors(x_vec, xyplane_vec);\n    const y_vec: three.Vector3 = crossVectors(z_vec, x_vec);\n    if (neg) {\n        return xformMatrixNeg(new three.Vector3(...o), x_vec, y_vec);\n    }\n    return xformMatrixPos(new three.Vector3(...o), x_vec, y_vec);\n}\n\n//  Vectors =======================================================================================================\n\n/*\n * returns the y vector\n */\nexport function orthoVectors(vec_x: three.Vector3, vec: three.Vector3): three.Vector3 {\n    return crossVectors(vec_x, vec).cross(vec_x);\n}\n\nexport function vectorNegate(vector: three.Vector3): three.Vector3 {\n    return vector.clone().negate();\n}\n\nexport function vectorFromVertex(vertex: gs.IVertex): three.Vector3 {\n    return new three.Vector3(...vertex.getPoint().getPosition());\n}\n\nexport function vectorFromPoint(point: gs.IPoint): three.Vector3 {\n    return new three.Vector3(...point.getPosition());\n}\n\nexport function vectorsFromVertices(vertices: gs.IVertex[]): three.Vector3[] {\n    return vertices.map((v) => new three.Vector3(...v.getPoint().getPosition()));\n}\n\nexport function vectorsFromPoints(points: gs.IPoint[]): three.Vector3[] {\n    return points.map((p) => new three.Vector3(...p.getPosition()));\n}\n\nexport function subVectors(v1: three.Vector3, v2: three.Vector3, norm: boolean = false): three.Vector3 {\n    const v3: three.Vector3 = new three.Vector3();\n    v3.subVectors(v1, v2);\n    if (norm) {v3.normalize();}\n    return v3;\n}\n\nexport function addVectors(v1: three.Vector3, v2: three.Vector3, norm: boolean = false): three.Vector3 {\n    const v3: three.Vector3 = new three.Vector3();\n    v3.addVectors(v1, v2);\n    if (norm) {v3.normalize();}\n    return v3;\n}\n\nexport function crossVectors(v1: three.Vector3, v2: three.Vector3, norm: boolean = false): three.Vector3 {\n    const v3: three.Vector3 = new three.Vector3();\n    v3.crossVectors(v1, v2);\n    if (norm) {v3.normalize();}\n    return v3;\n}\n\nexport function dotVectors(v1: three.Vector3, v2: three.Vector3): number {\n    return v1.dot(v2);\n}\n\nexport function vectorFromPointsAtoB(a: gs.IPoint, b: gs.IPoint, norm: boolean = false): three.Vector3 {\n    const v: three.Vector3 = subVectors(new three.Vector3(...b.getPosition()),\n        new three.Vector3(...a.getPosition()));\n    if (norm) {v.normalize();}\n    return v;\n}\n\nexport function vectorFromVerticesAtoB(a: gs.IVertex, b: gs.IVertex, norm: boolean = false): three.Vector3 {\n    const v: three.Vector3 = subVectors(new three.Vector3(...b.getPoint().getPosition()),\n        new three.Vector3(...a.getPoint().getPosition()));\n    if (norm) {v.normalize();}\n    return v;\n}\n\n// /*\n//  * Finds the two orthogonal vectors in a plane defined by a set of co-planar points.\n//  */\n// export function orthoVectorsFromXYZs(points: three.Vector3[]): [three.Vector3, three.Vector3] {\n//     if (points.length < 3) {return null;}\n//     if (points.length == 3) {\n//         const vec_x: three.Vector3 = new three.Vector3().subVectors(points[1], points[0]).normalize();\n//         const vec: three.Vector3 = new three.Vector3().subVectors(points[2], points[0]).normalize();\n//         const vec_y: three.Vector3 = orthoVectors(vec_x, vec);\n//         if (vec_y.length() < EPS) {return null;}\n//         return [vec_x, vec_y];\n//     }\n//     const x_bbox: {min:three.Vector3, max:three.Vector3, dim:number} = {min:null, max:null, dim:null};\n//     const y_bbox: {min:three.Vector3, max:three.Vector3, dim:number} = {min:null, max:null, dim:null};\n//     const z_bbox: {min:three.Vector3, max:three.Vector3, dim:number} = {min:null, max:null, dim:null};\n//     for (const point of points) {\n//         // find min max of x\n//         if ((x_bbox.min === null) || (point.x < x_bbox.min.x)) {\n//             x_bbox.min = point;\n//         }\n//         if ((x_bbox.max === null) || (point.x > x_bbox.max.x)) {\n//             x_bbox.max = point;\n//         }\n//         // find min max of y\n//         if ((y_bbox.min === null) || (point.y < y_bbox.min.y)) {\n//             y_bbox.min = point;\n//         }\n//         if ((y_bbox.max === null) || (point.y > y_bbox.max.y)) {\n//             y_bbox.max = point;\n//         }\n//         // find min max of z\n//         if ((z_bbox.min === null) || (point.z < z_bbox.min.z)) {\n//             z_bbox.min = point;\n//         }\n//         if ((z_bbox.max === null) || (point.z > z_bbox.max.z)) {\n//             z_bbox.max = point;\n//         }\n//     }\n//     x_bbox.dim = Math.abs(x_bbox.max[0] - x_bbox.min[0]);\n//     y_bbox.dim = Math.abs(y_bbox.max[1] - y_bbox.min[1]);\n//     z_bbox.dim = Math.abs(z_bbox.max[2] - z_bbox.min[2]);\n//     const sorted_bbox = [x_bbox, y_bbox, z_bbox].sort((n1,n2) => {\n//         if (n1.dim > n2.dim) {return -1;}\n//         return 1;\n//     });\n//     if (sorted_bbox[0].dim < EPS) {return null;}\n//     if (sorted_bbox[1].dim < EPS) {return null;}\n//     const p1: three.Vector3 = sorted_bbox[0].min;\n//     const p2: three.Vector3 = sorted_bbox[0].max;\n//     const p3: three.Vector3 = sorted_bbox[1].min;\n//     const p4: three.Vector3 = sorted_bbox[1].max;\n//     const vec_x: three.Vector3 = p2.sub(p1).normalize();\n//     const vec: three.Vector3 = p4.sub(p3).normalize();\n//     const vec_y: three.Vector3 = orthoVectors(vec_x, vec);\n//     if (vec_y.length() < EPS) {return null;}\n//     return [vec_x, vec_y];\n// }\n\n/*\n * Finds the normal using Newell's method\n */\nexport function normalVectorFromPlanarVPoints(points: three.Vector3[]): three.Vector3 {\n\n    const normal: three.Vector3 = new three.Vector3();\n    for (let i = 0;i < points.length - 1; i++) {\n        const point0: three.Vector3 = points[i];\n        const point1: three.Vector3 = points[i + 1];\n        normal.x += (point0.y - point1.y) * (point0.z + point1.z);\n        normal.y += (point0.z - point1.z) * (point0.x + point1.x);\n        normal.z += (point0.x - point1.x) * (point0.y + point1.y);\n    }\n    return normal.normalize();\n}\n\n/*\n * Finds the ortho vectors using Newell's method\n */\nexport function orthoVectorsFromPlanarVPoints(points: three.Vector3[]): [three.Vector3, three.Vector3] {\n    const normal: three.Vector3 = new three.Vector3();\n    let max_vec_len: number = 0;\n    let vec_x: three.Vector3 = null;\n    for (let i = 0;i < points.length - 1; i++) {\n        const point0: three.Vector3 = points[i];\n        const point1: three.Vector3 = points[i + 1];\n        const test_vec: three.Vector3 = new three.Vector3().subVectors(point1, point0);\n        if (test_vec.lengthSq() > max_vec_len) {vec_x = test_vec;}\n        normal.x += (point0.y - point1.y) * (point0.z + point1.z);\n        normal.y += (point0.z - point1.z) * (point0.x + point1.x);\n        normal.z += (point0.x - point1.x) * (point0.y + point1.y);\n    }\n    normal.normalize();\n    vec_x.normalize();\n    const vec_y: three.Vector3 = new three.Vector3().crossVectors(vec_x, normal);\n    if (vec_y.length() < EPS) {return null;}\n    return [vec_x, vec_y];\n}\n\n/**\n * Create new vpoints between two existing vpoints.\n */\nexport function interpVPoints(pt1: three.Vector3, pt2: three.Vector3, num_points: number): three.Vector3[] {\n    if (num_points < 1) {return [];}\n    const vec: three.Vector3 = new three.Vector3().subVectors(pt2, pt1);\n    vec.divideScalar(num_points + 1);\n    const points: three.Vector3[] = [];\n    let next: three.Vector3 = pt1;\n    for (let i = 0; i < num_points; i++) {\n        next = new three.Vector3().addVectors(next, vec);\n        points.push(next);\n    }\n    return points;\n}\n\n\n\n//  XYZ ===========================================================================================================\n\nexport function subXYZs(xyz1: gs.XYZ, xyz2: gs.XYZ, norm: boolean = false): gs.XYZ {\n    return subVectors(new three.Vector3(...xyz1), new three.Vector3(...xyz2), norm).toArray() as gs.XYZ;\n}\n\nexport function addXYZs(xyz1: gs.XYZ, xyz2: gs.XYZ, norm: boolean = false): gs.XYZ {\n    return addVectors(new three.Vector3(...xyz1), new three.Vector3(...xyz2), norm).toArray() as gs.XYZ;\n}\n\nexport function crossXYZs(xyz1: gs.XYZ, xyz2: gs.XYZ, norm: boolean = false): gs.XYZ {\n    return crossVectors(new three.Vector3(...xyz1), new three.Vector3(...xyz2), norm).toArray() as gs.XYZ;\n}\n\nexport function dotXYZs(xyz1: gs.XYZ, xyz2: gs.XYZ): number {\n    return new three.Vector3(...xyz1).dot(new three.Vector3(...xyz2));\n}\n\nexport function normalizeXYZ(xyz: gs.XYZ): gs.XYZ {\n    return new three.Vector3(...xyz).normalize().toArray() as gs.XYZ;\n}\n\nexport function lengthXYZ(xyz: gs.XYZ): number {\n    return new three.Vector3(...xyz).length();\n}\n\n//  Points ========================================================================================================\n\nexport function subPoints(p1: gs.IPoint, p2: gs.IPoint, norm: boolean = false): gs.XYZ  {\n    return subVectors(new three.Vector3(...p1.getPosition()),\n        new three.Vector3(...p2.getPosition()), norm).toArray() as gs.XYZ;\n}\n\nexport function addPoints(p1: gs.IPoint, p2: gs.IPoint, norm: boolean = false): gs.XYZ  {\n    return addVectors(new three.Vector3(...p1.getPosition()),\n        new three.Vector3(...p2.getPosition()), norm).toArray() as gs.XYZ;\n}\n\nexport function addPointXYZ(p1: gs.IPoint, xyz_vec: gs.XYZ): gs.XYZ {\n    return (new three.Vector3(...p1.getPosition()).add(new three.Vector3(...xyz_vec))).toArray() as gs.XYZ;\n}\n\nexport function subPointXYZ(p1: gs.IPoint, xyz_vec: gs.XYZ): gs.XYZ {\n    return (new three.Vector3(...p1.getPosition()).sub(new three.Vector3(...xyz_vec))).toArray() as gs.XYZ;\n}\n\nexport function movePointsAddXYZ(points: gs.IPoint[]|gs.IPoint[][], xyz_vec: gs.XYZ): void {\n    const vec: three.Vector3 = new three.Vector3(...xyz_vec);\n    const points_flat: gs.IPoint[] = Arr.flatten(points);\n    const point_ids: number[] = [];\n    const points_no_dups: gs.IPoint[] = [];\n    for (const point of points_flat) {\n        if (point_ids.indexOf(point.getID()) === -1) {\n            points_no_dups.push(point);\n            point_ids.push(point.getID());\n        }\n    }\n    for (const point of points_no_dups) {\n        const xyz_point: gs.XYZ = (new three.Vector3(...point.getPosition()).add(vec)).toArray() as gs.XYZ;\n        point.setPosition(xyz_point);\n    }\n}\n\nexport function distPointToPoint(p1: gs.IPoint, p2: gs.IPoint): number {\n    return (new three.Vector3(...p1.getPosition())).distanceTo(new three.Vector3(...p2.getPosition()));\n}\n\nexport function distSquPointToPoint(p1: gs.IPoint, p2: gs.IPoint): number {\n    return (new three.Vector3(...p1.getPosition())).distanceToSquared(new three.Vector3(...p2.getPosition()));\n}\n\nexport function distManPointToPoint(p1: gs.IPoint, p2: gs.IPoint): number {\n    return (new three.Vector3(...p1.getPosition())).manhattanDistanceTo(new three.Vector3(...p2.getPosition()));\n}\n\n//  Vertices ======================================================================================================\n\nexport function subVertices(v1: gs.IVertex, v2: gs.IVertex, norm: boolean = false): gs.XYZ  {\n    return subVectors(new three.Vector3(...v1.getPoint().getPosition()),\n        new three.Vector3(...v2.getPoint().getPosition()), norm).toArray() as gs.XYZ;\n}\n\nexport function addVertices(v1: gs.IVertex, v2: gs.IVertex, norm: boolean = false): gs.XYZ  {\n    return addVectors(new three.Vector3(...v1.getPoint().getPosition()),\n        new three.Vector3(...v2.getPoint().getPosition()), norm).toArray() as gs.XYZ;\n}\n\n//  3D to 2D ======================================================================================================\n\n/**\n * Transform a set of vertices in 3d space onto the xy plane. This function assumes that the vertices\n * are co-planar. Returns a set of three Vectors that represent points on the xy plane.\n */\nexport function makeVertices2D(vertices: gs.IVertex[]): three.Vector3[] {\n    const points: three.Vector3[] = vectorsFromVertices(vertices);\n    const o: three.Vector3 = new three.Vector3();\n    for (const v of points) {\n        o.add(v);\n    }\n    o.divideScalar(points.length);\n    let vx: three.Vector3;\n    let vz: three.Vector3;\n    let got_vx = false;\n    for (let i=0;i<vertices.length;i++) {\n        if (!got_vx) {\n            vx =  subVectors(points[i], o).normalize();\n            if (vx.lengthSq() !== 0) {got_vx = true;}\n        } else {\n            vz = crossVectors(vx, subVectors(points[i],o).normalize()).normalize();\n            if (vz.lengthSq() !== 0) {break;}\n        }\n        if (i === vertices.length - 1) {throw new Error(\"Trinagulation found bad face.\");}\n    }\n    const vy: three.Vector3 =  crossVectors(vz, vx);\n    const m: three.Matrix4 = xformMatrixNeg(o, vx, vy);\n    // const m: three.Matrix4 = xformMatrix(o, vx, vy, vz);\n    const points_2d: three.Vector3[] = points.map((v) => multVectorMatrix(v,m));\n    // console.log(o, vx, vy, vz);\n    // console.log(points_2d);\n    return points_2d;\n}\n\n//  Query ======================================================================================================\n\n/**\n * Check planes are parallel.\n * The plane is represented by an origin and a normal.\n */\nexport function planesAreParallel(normal1: three.Vector3|gs.XYZ,\n                                  normal2: three.Vector3|gs.XYZ): boolean {\n    // args\n    let normal1_v: three.Vector3;\n    if (Array.isArray(normal1)) {\n        normal1_v = new three.Vector3(...normal1);\n    } else {\n        normal1_v = normal1;\n    }\n    normal1_v.normalize();\n    let normal2_v: three.Vector3;\n    if (Array.isArray(normal2)) {\n        normal2_v = new three.Vector3(...normal2);\n    } else {\n        normal2_v = normal2;\n    }\n    normal2_v.normalize();\n    // check is vectors are same\n    if (Math.abs(1- normal1_v.dot(normal2_v)) > EPS) {return false; }\n    return true;\n}\n\n/**\n * Check a point is on a plane.\n * The plane is represented by an origin and a normal.\n */\nexport function planesAreCoplanar(origin1: three.Vector3|gs.IPoint, normal1: three.Vector3|gs.XYZ,\n                                  origin2: three.Vector3|gs.IPoint, normal2: three.Vector3|gs.XYZ): boolean {\n    // args\n    let origin1_v: three.Vector3;\n    if (origin1 instanceof gs.Point) {\n        origin1_v = new three.Vector3(...origin1.getPosition());\n    } else {\n        origin1_v = origin1 as three.Vector3;\n    }\n    let normal1_v: three.Vector3;\n    if (Array.isArray(normal1)) {\n        normal1_v = new three.Vector3(...normal1);\n    } else {\n        normal1_v = normal1;\n    }\n    normal1_v.normalize();\n    let origin2_v: three.Vector3;\n    if (origin2 instanceof gs.Point) {\n        origin2_v = new three.Vector3(...origin2.getPosition());\n    } else {\n        origin2_v = origin2 as three.Vector3;\n    }\n    let normal2_v: three.Vector3;\n    if (Array.isArray(normal2)) {\n        normal2_v = new three.Vector3(...normal2);\n    } else {\n        normal2_v = normal2;\n    }\n    normal2_v.normalize();\n    // Check if point is on plane\n    if (Math.abs(dotVectors(subVectors(origin1_v, origin2_v), normal2_v)) > EPS) {return false;}\n    // check is vectors are same\n    if (Math.abs(1- normal1_v.dot(normal2_v)) > EPS) {return false; }\n    return true;\n}\n\n/**\n * Check a point is on a plane.\n * The plane is represented by an origin and a normal.\n */\nexport function pointIsOnPlane(origin: gs.IPoint, normal: gs.XYZ, point: gs.IPoint): boolean {\n    const origin_v  = new three.Vector3(...origin.getPosition());\n    const normal_v  = new three.Vector3(...normal).normalize();\n    const point_v  = new three.Vector3(...point.getPosition());\n    if(dotVectors(subVectors(point_v, origin_v), normal_v) === 0) {return true;}\n    return false;\n}\n\n/**\n * Check if vectors are same dir.\n */\nexport function vectorsAreCodir(xyz1: gs.XYZ, xyz2: gs.XYZ): boolean {\n    // Check if point is on plane\n    const v1  = new three.Vector3(...xyz1).normalize();\n    const v2  = new three.Vector3(...xyz2).normalize();\n    if (Math.abs(1- v1.dot(v2)) > EPS) {return false; }\n    return true;\n}\n","/**\n * The <i>List</i> module provides a set of functions for working with lists.\n * Lists are containers that can hold other values. The values inside the list are called <i>items</i>.<br/>\n *\n * The items in a list can be of any data type.\n * The items can also be other lists, thereby allowing more complex nested data strictures to be created.\n * Items are ordered and will be returned in the same order or accessed by the same index unless\n * changes are made to alter it.<br/>\n *\n * When instantiating a list, use square brackets as follows: <code>[10,20,30]</code>.<br/>\n *\n * To refer to an item in a list, use index notation as follows: <code>list_name[index_num]</code>.\n */\n\nimport * as gs from \"gs-json\";\nimport {Arr} from \"./libs/arr/arr\";\n\n//  ===============================================================================================================\n//  List Constructors =============================================================================================\n//  ===============================================================================================================\n\n/**\n * Creates a new list by making a copy of an existing list.\n *\n * @param list List to copy.\n * @returns New duplicated list.\n *\n * <h3>Example:</h3>\n * <code>\n * list = [1,2,3]<br/>\n * copy = List.Copy(list)</code><br/><br/>\n * Expected value of copy is [1,2,3].\n */\nexport function Copy(list: any[]): any[] {\n    if (list === undefined) {throw new Error(\"Invalid arg: list must be defined.\");}\n    return list.slice();\n}\n\n/**\n * Creates a new list of integer numbers between two bounds.\n * Lower bound is inclusive and upper bound is exclusive.\n *\n * @param min Lower bound integer.\n * @param max Upper bound integer.\n * @returns New list.\n *\n * <h3>Example: </h3>\n * <code>\n * list = List.FromRange(0,5)</code><br/><br/>\n * Expected value of list is [0,1,2,3,4].\n */\nexport function FromRange(min: number, max: number): number[] {\n    if (min === undefined) {throw new Error(\"Invalid arg: min must be defined.\");}\n    if (max === undefined) {throw new Error(\"Invalid arg: max must be defined.\");}\n    return Arr.makeSeq(max - min).map((v) => v + min);\n}\n\n//  ===============================================================================================================\n//  List Functions ================================================================================================\n//  ===============================================================================================================\n\n/**\n * Returns the number of items in an list.\n *\n * @param list List.\n * @returns Length of the list.\n *\n * <h3>Example: </h3>\n * <code>\n * list = [1,2,3]<br/>\n * len = List.len(list)</code><br/><br/>\n * Expected value of len is 3.\n */\nexport function len(list: any[]): number {\n    if (list === undefined) {throw new Error(\"Invalid arg: list must be defined.\");}\n    return list.length;\n}\n\n/**\n * Adds an item to the end of a list.\n * If item is a list, the entire list will be appended as one item.\n *\n * @param list List to add to.\n * @param item Item to add.\n * @returns New list with added item.\n *\n * <h3>Example: </h3>\n * <code>\n * list = [1,2,3]<br/>\n * append = List.append(list,4)</code><br/><br/>\n * Expected value of list is [1,2,3,4].\n */\nexport function append(list: any[], item: any): any[] {\n    if (list === undefined) {throw new Error(\"Invalid arg: list must be defined.\");}\n    if (item === undefined) {throw new Error(\"Invalid arg: item must be defined.\");}\n    const list2 = list.slice();\n    list2.push(item);\n    return list2;\n}\n\n/**\n * Adds an item to the front of a list.\n * If the item is a list, the entire list will be appended as one item.\n *\n * @param list List to add to.\n * @param item Item to add.\n * @returns New list with added item.\n *\n * <h3>Example: </h3>\n * <code>\n * list = [1,2,3]<br/>\n * append = List.appendFront(list,4)</code><br/><br/>\n * Expected value of list is [4,1,2,3].\n */\nexport function appendFront(list: any[], item: any): any[] {\n    if (list === undefined) {throw new Error(\"Invalid arg: list must be defined.\");}\n    if (item === undefined) {throw new Error(\"Invalid arg: item must be defined.\");}\n    const list2 = list.slice();\n    list2.unshift(item);\n    return list2;\n}\n\n/**\n * Adds items (from a list) to the end of an list.\n * Items are added to list individually as seperate items.\n *\n * @param list List to add to.\n * @param items List of items to add.\n * @returns List with added items.\n *\n * <h3>Example: </h3>\n * <code>\n * list = [1,2,3]<br/>\n * list2 = [9,0]<br/>\n * extend = List.extend(list,list2)</code><br/><br/>\n * Expected value of extend is [1,2,3,9,0].\n */\nexport function extend(list: any[], items: any[]): any[] {\n    if (list === undefined) {throw new Error(\"Invalid arg: list must be defined.\");}\n    if (items === undefined) {throw new Error(\"Invalid arg: items must be defined.\");}\n    return list.concat(items);\n}\n\n/**\n * Adds items (from a list) to the front of an list.\n * Items are added to list individually as seperate items.\n *\n * @param list List to add to.\n * @param items List of items to add.\n * @returns List with added items.\n *\n * <h3>Example: </h3>\n * <code>\n * list = [1,2,3]<br/>\n * list2 = [9,0]<br/>\n * extend = List.extend(list,list2)</code><br/><br/>\n * Expected value of extend is [9,0,1,2,3].\n */\nexport function extendFront(list: any[], items: any[]): any[] {\n    if (list === undefined) {throw new Error(\"Invalid arg: list must be defined.\");}\n    if (items === undefined) {throw new Error(\"Invalid arg: items must be defined.\");}\n    return items.concat(list);\n}\n\n/**\n * Flattens an n-dimensional list into a one-dimensional list.\n *\n * @param list List to flatten.\n * @returns Flattened list.\n *\n * <h3>Example: </h3>\n * <code>\n * list = [1,2,3,[4,5]]<br/>\n * flatten = List.flatten(list)</code><br/><br/>\n * Expected value of list is [1,2,3,4,5].\n */\nexport function flatten(list: any[]): any[] {\n    if (list === undefined) {throw new Error(\"Invalid arg: list must be defined.\");}\n    return Arr.flatten(list);\n}\n\n/**\n * Removes the item at the specified index from a list.\n *\n * @param list List to remove item from.\n * @param index Zero-based index number of item to remove.\n * @returns List with item removed.\n *\n * <h3>Example: </h3>\n * <code>\n * list = [1,2,3]<br/>\n * remove = List.removeIndex(list,1)</code><br/><br/>\n * Expected value of list is [1,3].\n */\nexport function removeIndex(list: any[], index: number): any[] {\n    if (list === undefined) {throw new Error(\"Invalid arg: list must be defined.\");}\n    if (index === undefined) {throw new Error(\"Invalid arg: index must be defined.\");}\n    const list2 = list.slice();\n    list2.splice(index,1);\n    return list2;\n}\n\n/**\n * Removes items that match specified value from a list.\n * Items must match both the value and type of specified value<br/>\n *\n * Returns original list if no items in list match specified value.\n *\n * @param list List to remove item from.\n * @param value Value to search for.\n * @param remove_all Removes all instances of specified value if true, removes only the first instance if\n *      false.\n * @returns List with item removed\n *\n * <h3>Example: </h3>\n * <code>\n * list = [1,2,2,3]<br/>\n * remove = List.removeValue(list,2,true)</code><br/><br/>\n * Expected value of list is [1,3].\n */\nexport function removeValue(list: any[], value: any, remove_all: boolean = true): any[] {\n    if (list === undefined) {throw new Error(\"Invalid arg: list must be defined.\");}\n    if (value === undefined) {throw new Error(\"Invalid arg: value must be defined.\");}\n    const list2 = list.slice();\n    for (let i = list2.length - 1; i >= 0; i--) {\n        if (list2[i] === value) {\n            list2.splice(i,1);\n            if (remove_all === false) {break;}\n        }\n    }\n    return list2;\n}\n\n/**\n * Reverses the order of items in an list.\n *\n * @param list List to reverse.\n * @returns New reversed list.\n *\n * <h3>Example: </h3>\n * <code>\n * list = [1,2,3]<br/>\n * result = List.reverse(list)</code><br/><br/>\n * Expected value of result is [3,2,1].\n */\nexport function reverse(list: any[]): any[] {\n    if (list === undefined) {throw new Error(\"Invalid arg: list must be defined.\");}\n    const list2 = list.slice();\n    list2.reverse();\n    return list2;\n}\n\n/**\n * Sorts a list of strings alphabetically.\n * If items are not strings, they are treated as strings.<br/>\n *\n * Items are sorted according to string Unicode code points (character by character, numbers before upper case\n * alphabets, upper case alphabets before lower case alphabets)\n *\n * @param list List to sort.\n * @returns New sorted list.\n *\n * <h3>Example: </h3>\n * <code>\n * list = [\"1\",\"2\",\"10\",\"Orange\",\"apple\"]<br/>\n * sort = List.sortAlpha(list)</code><br/><br/>\n * Expected value of list is [\"1\",\"10\",\"2\",\"Orange\",\"apple\"].\n */\nexport function sortAlpha(list: any[]): any[] {\n    if (list === undefined) {throw new Error(\"Invalid arg: list must be defined.\");}\n    const list2 = list.slice();\n    list2.sort();\n    return list2;\n}\n\n/**\n * Sorts a list of numbers in ascending order.\n * The list must contain numbers.\n *\n * @param list List to add to.\n * @returns New sorted list.\n *\n * <h3>Example: </h3>\n * <code>\n * list = [56,6,48]<br/>\n * sort = List.sortNum(list)</code><br/><br/>\n * Expected value of list is [6,48,56].\n */\nexport function sortNum(list: any[]): any[] {\n    if (list === undefined) {throw new Error(\"Invalid arg: list must be defined.\");}\n    const list2 = list.slice();\n    list2.sort((a, b) => a - b);\n    return list2;\n}\n\n/**\n * Creates a copy of a portion of a list, from start index to end index (end not included).\n *\n * @param list List to slice.\n * @param start Zero-based index at which to begin slicing.\n *      A negative index can be used, indicating an offset from the end of the sequence.\n *      If start is undefined, slice begins from index 0.\n * @param end Zero-based index before which to end slicing. Slice extracts up to but not including end.\n *      A negative index can be used, indicating an offset from the end of the sequence.\n *      If end is undefined, slice extracts through the end of the sequence.\n * @returns A new list.\n *\n * <h3>Example: </h3>\n * <code>\n * list = [1,2,3,4,5]<br/>\n * result = List.slice(list,1,3)</code><br/><br/>\n * Expected value of result is [2,3].\n */\nexport function slice(list: any[], start: number, end: number): any[] {\n    if (list === undefined) {throw new Error(\"Invalid arg: list must be defined.\");}\n    if (start === undefined) {throw new Error(\"Invalid arg: start must be defined.\");}\n    if (end === undefined) {throw new Error(\"Invalid arg: end must be defined.\");}\n    const list2 = list.slice();\n    return list2.slice(start,end);\n}\n\n/**\n * Adds and/or removes items to/from a list.\n *\n * If no items_to_add are specified, then items are only removed.\n * If num_to_remove is 0, then items are only added.<br/>\n *\n * @param list List to splice\n * @param index Zero-based index at which to add/remove items. (Items are added/removed after specified index)\n * @param num_to_remove Number of items to remove.\n * @param items_to_add List of items to add.\n * @returns A new list.\n *\n * <h3>Example: </h3>\n * <code>\n * list = [10, 20, 30, 40, 50]<br/>\n * result = List.splice(list, 1, 3, [2.2, 3.3])</code><br/><br/>\n * Expected value of result is [10, 2.2, 3.2, 50].\n */\nexport function splice(list: any[], index: number, num_to_remove: number, items_to_add: any[]): any[] {\n    if (list === undefined) {throw new Error(\"Invalid arg: list must be defined.\");}\n    if (index === undefined) {throw new Error(\"Invalid arg: index must be defined.\");}\n    const list2 = list.slice();\n    list2.splice(index, num_to_remove, ...items_to_add);\n    return list2;\n}\n","/**\n * The <i>Math</i> module provides commonly used mathematical functions.\n * It also provides functions that return a number of constants such as PI and positive and negative infinity.\n */\n\nimport * as gs from \"gs-json\";\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/PI\n/**\n * Returns the value of PI.\n * @returns Value of pi\n */\nexport function PI(): number {\n    return Math.PI;\n}\n\n/**\n * Returns the value of positive infinity\n * @returns Value of positive infinity\n */\nexport function POS_INF(): number {\n    return Number.POSITIVE_INFINITY;\n}\n\n/**\n * Returns the value of negative infinity\n * @returns Value of negative infinity\n */\nexport function NEG_INF(): number {\n    return Number.NEGATIVE_INFINITY;\n}\n\n//  ===============================================================================================================\n//  Math Methods ==================================================================================================\n//  ===============================================================================================================\n\n/**\n * Returns the cosine of a specified angle in degrees.\n *\n * @param angle Angle in degrees.\n * @returns Cosine of angle.\n */\nexport function cos(angle: number): number {\n    if (angle === undefined) {throw new Error(\"Invalid arg: angle must be defined.\");}\n    return Math.cos(angle*(Math.PI/180));\n}\n\n/**\n * Returns the arc cosine (or inverse cosine) of a specified number, converted to degrees.\n *\n * @param num Number.\n * @returns Angle, the arc cosine of num converted to degrees.\n */\nexport function acos(num: number): number {\n    if (num === undefined) {throw new Error(\"Invalid arg: num must be defined.\");}\n    return Math.acos(num)*(180/Math.PI);\n}\n\n/**\n * Returns the sine of a specified angle in degrees.\n *\n * @param angle Angle in degrees.\n * @returns Sine of angle.\n */\nexport function sin(angle: number): number {\n    if (angle === undefined) {throw new Error(\"Invalid arg: angle must be defined.\");}\n    return Math.sin(angle*(Math.PI/180));\n}\n\n/**\n * Returns the arc sine (or inverse sine) of a specified number, converted to degrees.\n *\n * @param num Number.\n * @returns Angle, the arc cosine of num converted to degrees.\n */\nexport function asin(num: number): number {\n    if (num === undefined) {throw new Error(\"Invalid arg: num must be defined.\");}\n    return Math.asin(num)*(180/Math.PI);\n}\n\n/**\n * Returns the tangent of a specified angle in degrees.\n *\n * @param angle Angle in degrees.\n * @returns Tangent of angle.\n */\nexport function tan(angle: number): number {\n    if (angle === undefined) {throw new Error(\"Invalid arg: angle must be defined.\");}\n    return Math.tan(angle*(Math.PI/180));\n}\n\n/**\n * Returns the arc tangent (or inverse tangent) of a specified number, converted to degrees.\n *\n * @param num Number.\n * @returns Angle, the arc tangent of num converted to degrees.\n */\nexport function atan(num: number): number {\n    if (num === undefined) {throw new Error(\"Invalid arg: num must be defined.\");}\n    return Math.atan(num)*(180/Math.PI);\n}\n\n/**\n * Returns a number representing the given base taken to the power of the given exponent.\n *\n * @param base Base number.\n * @param exponent Power of exponent.\n * @returns Number representing the given base taken to the power of the given exponent.\n *\n * <h3>Example:</h3>\n * <code>\n * num = Math.pow(2,3)</code><br/><br/>\n * Expected value of num is 8.\n */\nexport function pow(base: number, exponent: number): number {\n    if (base === undefined) {throw new Error(\"Invalid arg: base must be defined.\");}\n    if (exponent === undefined) {throw new Error(\"Invalid arg: exponent must be defined.\");}\n    return Math.pow(base, exponent);\n}\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/ceil\n/**\n * Rounds a number up to the nearest integer.\n *\n * @param num Number.\n * @returns A number representing the smallest integer more than or equal to the specified number.\n *\n * <h3>Example:</h3>\n * <code>\n * num = Math.ceiling(4.3)</code><br/><br/>\n * Expected value of num is 5.\n */\nexport function ceiling(num: number): number {\n    if (num === undefined) {throw new Error(\"Invalid arg: num must be defined.\");}\n    return Math.ceil(num);\n}\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/floor\n/**\n * Rounds a number down to the nearest integer.\n *\n * @param num Number.\n * @returns A number representing the largest integer less than or equal to the specified number.\n *\n * <h3>Example:</h3>\n * <code>\n * num = Math.floor(4.3)</code><br/><br/>\n * Expected value of num is 4.\n */\nexport function floor(num: number): number {\n    if (num === undefined) {throw new Error(\"Invalid arg: num must be defined.\");}\n    return Math.floor(num);\n}\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/abs\n/**\n * Returns the absolute value of a number.\n *\n * Returns num if num is positive, -num if num is negative and 0 if num=0<br/>\n *\n * @param num Number.\n * @returns A number representing the absolute value of the specified number.\n *\n * <h3>Example:</h3>\n * <code>\n * num1 = Math.abs(-1.234)\n * num2 = Math.abs(2.345)<br/>\n * </code><br/><br/>\n * Expected value of num1 is 1.234, and of num2 is 2.345.\n */\nexport function abs(num: number): number {\n    if (num === undefined) {throw new Error(\"Invalid arg: num must be defined.\");}\n    return Math.abs(num);\n}\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/max\n/**\n * Returns the largest number in a list of numbers.\n *\n * @param nums List of numbers.\n * @returns A number representing the largest number in specified list of numbers.\n *\n * <h3>Example:</h3>\n * <code>\n * list = [8,9,6,1,3]<br/>\n * num = Math.max(list)</code><br/><br/>\n * Expected value of num is 9.\n */\nexport function max(nums: number[]): number {\n    if (nums === undefined) {throw new Error(\"Invalid arg: nums must be defined.\");}\n    let maximum = Number.NEGATIVE_INFINITY;\n    for (const num of nums) {\n        if(num > maximum) {\n            maximum = num;\n        }\n    }\n    return maximum;\n}\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/min\n/**\n * Returns the smallest number in a list of numbers.\n *\n * @param num List of numbers.\n * @returns A number representing the smallest number in specified list of numbers.\n *\n * <h3>Example:</h3>\n * <code>\n * list = [8,9,6,1,3]<br/>\n * num = Math.max(list)</code><br/><br/>\n * Expected value of num is 1.\n */\nexport function min(nums: number[]): number {\n    if (nums === undefined) {throw new Error(\"Invalid arg: nums must be defined.\");}\n    let minimum = Number.POSITIVE_INFINITY;\n    for (const num of nums) {\n        if(num < minimum) {\n            minimum = num;\n        }\n    }\n    return minimum;\n}\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/random\n/**\n * Returns a pseudo-random number between 0 (inclusive) and 1 (exclusive).\n *\n * @returns A pseudo-random number.\n */\nexport function rand(): number {\n    return Math.random();\n}\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/random\n/**\n * Returns a pseudo-random integer number between two numbers.\n *\n * Lower bound number is inclusive and upper bound number is exclusive.\n * @param min Lower bound of range.\n * @param max Upper bound of range.\n * @returns A pseudo-random integer number.\n */\nexport function randInt(min: number, max: number): number {\n    if (min === undefined) {throw new Error(\"Invalid arg: min must be defined.\");}\n    if (max === undefined) {throw new Error(\"Invalid arg: max must be defined.\");}\n    const lower = Math.ceil(min);\n    const upper = Math.floor(max);\n    return Math.floor(Math.random() * (upper - lower)) + lower;\n}\n\n/**\n * Returns a pseudo-random floating point number between two numbers.\n *\n * @param min Lower bound of range.\n * @param max Upper bound of range.\n * @returns A pseudo-random floating point number.\n */\nexport function randFloat(min: number, max: number): number {\n    if (min === undefined) {throw new Error(\"Invalid arg: min must be defined.\");}\n    if (max === undefined) {throw new Error(\"Invalid arg: max must be defined.\");}\n    return (Math.random() * (max - min)) + min;\n}\n","/**\r\n * Functions for working with models.\r\n * Models are datastructures that contain geometric entities with attributes,\r\n * possibly organised into groups.\r\n */\r\n\r\n/**\r\n * Models can contain two types of geometric entities: points and objects.\r\n * The objects are further sudivided into different types, e.g. polylines, polymeshes, circle, etc.\r\n */\r\n\r\nimport * as gs from \"gs-json\";\r\nimport * as util from \"./model_dev\";\r\nimport * as download from \"./libs/filesys/download\"\r\n\r\n//  ===============================================================================================================\r\n//  Model Constructors ===========================================================================================\r\n//  ===============================================================================================================\r\n\r\n/**\r\n * Creates a new empty model.\r\n *\r\n * @returns New model empty.\r\n */\r\nexport function New(): gs.IModel {\r\n    return new gs.Model();\r\n}\r\n\r\n//  ===============================================================================================================\r\n//  Model Functions ============================================================================================\r\n//  ===============================================================================================================\r\n\r\n/**\r\n * Creates a new model and populates the model with data.\r\n *\r\n * @param model_data The model data in gs-json format.\r\n * @returns New model if successful, null if unsuccessful or on error.\r\n */\r\nexport function FromData(model_data: any): gs.IModel {\r\n    if (typeof model_data == 'string'){\r\n        return new gs.Model(JSON.parse(model_data));\r\n    }\r\n    else{\r\n        return new gs.Model(model_data);\r\n    }\r\n}\r\n\r\n/**\r\n * Merges the second model into the first model. The geometry, attribues, and groups are all merged.\r\n * If the models contain contain groups with the same names, then the groups will be merged.\r\n *\r\n * @param model1 The model to merge into.\r\n * @param model2 The model to merge.\r\n * @returns The merged model.\r\n */\r\nexport function merge(model1: gs.IModel, model2: gs.IModel): gs.IModel {\r\n    model1.merge(model2);\r\n    return model1;\r\n}\r\n\r\n/**\r\n * Export model as obj file. Only pline and pmeshes will be exported.\r\n *\r\n * @param model The model to export.\r\n * @param filepath The path to the obj file.\r\n * @returns True if successful.\r\n */\r\nexport function exportObj(model: gs.IModel, filename: string): boolean {\r\n    return download.save(gs.exportObj(model), filename);\r\n}\r\n","/**\n * Objects are a type of entity. They consist of conics, polylines, polymeshes, planes and rays.\n *\n * Objects are formed by a combination of topologies. More information can be found on the page for topo.\n */\n\nimport * as gs from \"gs-json\";\nimport * as three from \"three\";\nimport * as error from \"./_error_msgs_dev\";\nimport * as threex from \"./libs/threex/threex\"\n\n//  ===============================================================================================================\n//  Object Get ====================================================================================================\n//  ===============================================================================================================\n\n/**\n * Gets an object from the model\n * @param model Model to get object from\n * @param id ID of object to get\n * @returns An object. Null if object does not exist.\n */\nexport function Get(model: gs.IModel, id: number): gs.IObj {\n    const obj: gs.IObj = error.checkObjID(model, id);\n    switch (obj.getObjType()) {\n        case gs.EObjType.ray:\n            return obj as gs.IRay;\n        case gs.EObjType.plane:\n            return obj as gs.IPlane;\n        case gs.EObjType.circle:\n            return obj as gs.ICircle;\n        case gs.EObjType.ellipse:\n            return obj as gs.IEllipse;\n        case gs.EObjType.polyline:\n            return obj as gs.IPolyline;\n        case gs.EObjType.polymesh:\n            return obj as gs.IPolymesh;\n        default:\n            throw new Error(\"Object type not found: \" + obj.getObjType());\n    }\n}\n\n/**\n * Gets a list of objects from the model.\n * @param model Model to get objects from.\n * @param ids A point ID or list of point IDs, integer numbers. If null, then all objects are returned.\n * @returns A list of objects.\n */\nexport function Gets(model: gs.IModel, ids?: number | number[]): gs.IObj[] {\n    if (ids === undefined || ids === null) {return model.getGeom().getAllObjs();}\n    if (!Array.isArray(ids)) {ids = [ids];}\n    let objs: gs.IObj[] = [];\n    for (const id of ids) {\n        const obj: gs.IObj = Get(model, id);\n        if (obj !== null) {objs.push(obj);}\n    }\n    return objs;\n}\n\n/**\n * Gets all the objects from a group.\n * @param model Model to get the objects from.\n * @param group_name The group name.\n * @returns List of objects.\n */\nexport function GetFromGroup(model: gs.IModel, group_name: string): gs.IObj[] {\n    const group: gs.IGroup = error.checkGroup(model, group_name);\n    return group.getObjs();\n}\n\n//  ===============================================================================================================\n//  Object Constructors ===========================================================================================\n//  ===============================================================================================================\n\n//  ===============================================================================================================\n//  Object Functions ==============================================================================================\n//  ===============================================================================================================\n\n/**\n * Moves objects by a translation vector.\n *\n * @param objs An object or a list of objects.\n * @param vector Translation vector.\n * @param copy If true, objects are copied before being moved.\n * @returns The moved objects.\n */\nexport function move(objs: gs.IObj | gs.IObj[], vector: gs.XYZ, copy: boolean = false): gs.IObj | gs.IObj[] {\n    const is_array: boolean = Array.isArray(objs);\n    if (!Array.isArray(objs)) {objs = [objs];}\n    const model: gs.IModel = error.checkObjList(objs, 1);\n    error.checkXYZ(vector);\n    // translation matrix\n    const matrix_trn: three.Matrix4 = new three.Matrix4();\n    matrix_trn.makeTranslation(vector[0], vector[1], vector[2]);\n    // copy the objs\n    if (copy) {objs = model.getGeom().copyObjs(objs, true); }\n    // do the xform\n    model.getGeom().xformObjs(objs, matrix_trn);\n    // return either a single obj or array of objs\n    if (is_array) {return objs;}\n    return objs[0];\n}\n\n/**\n * Rotates object or a list of objects around an axis.\n *\n * @param objs An object or a list of objects.\n * @param origin An point on the axis, can be either a list of three numbers or a point.\n * @param axis An xyz vector along the axis.\n * @param angle The angle, in degrees, between 0 and 360.\n * @param copy If true, objects are copied before being rotated.\n * @returns The rotated objects.\n */\nexport function rotate(objs: gs.IObj | gs.IObj[], origin: gs.XYZ|gs.IPoint, axis: gs.XYZ,\n                       angle: number, copy: boolean = false): gs.IObj | gs.IObj[] {\n    const is_array: boolean = Array.isArray(objs);\n    if (!Array.isArray(objs)) {objs = [objs];}\n    const model: gs.IModel = error.checkObjList(objs, 1);\n    let origin_xyz: gs.XYZ;\n    if (origin instanceof gs.Point) {\n        origin_xyz = origin.getPosition();\n    } else {\n        origin_xyz = origin as gs.XYZ;\n        error.checkXYZ(origin_xyz);\n    }\n    error.checkXYZ(axis);\n    const angle_rad: number = (angle / 180) * Math.PI;\n    // rotation matrix\n    const matrix_rot: three.Matrix4 = new three.Matrix4();\n    matrix_rot.makeRotationAxis(new three.Vector3(...axis), angle_rad);\n    // translation matrix\n    const matrix_trn1: three.Matrix4 = new three.Matrix4();\n    matrix_trn1.makeTranslation(-origin_xyz[0], -origin_xyz[1], -origin_xyz[2]);\n    const matrix_trn2: three.Matrix4 = new three.Matrix4();\n    matrix_trn2.makeTranslation(origin_xyz[0], origin_xyz[1], origin_xyz[2]);\n    // copy objects\n    if (copy) {objs = model.getGeom().copyObjs(objs, true); }\n    // do the xform\n    model.getGeom().xformObjs(objs, matrix_trn2.multiply(matrix_rot.multiply(matrix_trn1)));\n    // return the result, either single obj or array\n    if (is_array) {return objs;}\n    return objs[0];\n}\n\n/**\n * Scales an object or a list of objects relative to an origin point.\n * The scale factor is specified by three vales, for scaling in x, y, and z.\n * Primitive objects, such as circles and arcs, can only be scaled uniformly.\n *\n * @param objs An object or a list of objects.\n * @param origin An origin point of the scale, can be either a list of three numbers or a point.\n * @param factor The scale factor, along the x, y and z axes.\n * @param copy If true, objects are copied before being scaled.\n * @returns The scaled objects.\n */\nexport function scale(objs: gs.IObj | gs.IObj[], origin: gs.XYZ|gs.IPoint,\n                      factor: gs.XYZ, copy: boolean = false): gs.IObj | gs.IObj[] {\n    const is_array: boolean = Array.isArray(objs);\n    if (!Array.isArray(objs)) {objs = [objs];}\n    const model: gs.IModel = error.checkObjList(objs, 1);\n    let origin_xyz: gs.XYZ;\n    if (origin instanceof gs.Point) {\n        origin_xyz = origin.getPosition();\n    } else {\n        origin_xyz = origin as gs.XYZ;\n        error.checkXYZ(origin_xyz);\n    }\n    error.checkXYZ(factor);\n    // scale matrix\n    const matrix_scale: three.Matrix4 = new three.Matrix4();\n    matrix_scale.makeScale(factor[0], factor[1], factor[2]);\n    // translation matrix\n    const matrix_trn1: three.Matrix4 = new three.Matrix4();\n    matrix_trn1.makeTranslation(-origin_xyz[0], -origin_xyz[1], -origin_xyz[2]);\n    const matrix_trn2: three.Matrix4 = new three.Matrix4();\n    matrix_trn2.makeTranslation(origin_xyz[0], origin_xyz[1], origin_xyz[2]);\n    // copy objects\n    if (copy) {objs = model.getGeom().copyObjs(objs, true); }\n    // do the xform\n    model.getGeom().xformObjs(objs, matrix_trn2.multiply(matrix_scale.multiply(matrix_trn1)));\n    // return the result, either single obj or array\n    if (is_array) {return objs;}\n    return objs[0];\n}\n\n/**\n * Transforms an object or list of objects to a target coordinate system (CS).\n * The source CS is assumed to be the Global Coordinate System (GCS).\n * The target coordinate system is specified by an origin,\n * a vector parallel to the x axis, and a vector in the xy plane (not parallel to the x axis).\n *\n * @param objs An object or a list of objects.\n * @param target_origin The origin point of the target coordinate system, can be either a list of three numbers or a point.\n * @param target_vec_x A vector parallel to the target x axis.\n * @param target_vec A vector in the target xy plane (not paralle to the x axis).\n * @param copy If true, objects are copied before being scaled.\n * @returns The transformed objects.\n */\nexport function xformGcs2Lcs(objs: gs.IObj | gs.IObj[],\n                             target_origin: gs.XYZ|gs.IPoint,\n                             target_vec_x: gs.XYZ, target_vec: gs.XYZ,\n                             copy: boolean = false): gs.IObj | gs.IObj[] {\n    const is_array: boolean = Array.isArray(objs);\n    if (!Array.isArray(objs)) {objs = [objs];}\n    const model: gs.IModel = error.checkObjList(objs, 1);\n    let target_origin_xyz: gs.XYZ;\n    if (target_origin instanceof gs.Point) {\n        target_origin_xyz = target_origin.getPosition();\n    } else {\n        target_origin_xyz = target_origin as gs.XYZ;\n        error.checkXYZ(target_origin_xyz);\n    }\n    error.checkXYZ(target_vec_x);\n    error.checkXYZ(target_vec);\n    // matrix to xform from source to gcs, then from gcs to target\n    const matrix_gcs_to_target: three.Matrix4 = threex.xformMatrixFromXYZVectors(\n        target_origin_xyz, target_vec_x, target_vec, false);\n    // copy objects\n    if (copy) {objs = model.getGeom().copyObjs(objs, true); }\n    // do the xform\n    model.getGeom().xformObjs(objs, matrix_gcs_to_target);\n    // return the result, either single obj or array\n    if (is_array) {return objs;}\n    return objs[0];\n}\n\n/**\n * Transforms an object or list of objects from a source local coordinate system (LCS)\n * to the global coordinate system (GCS).\n * The source coordinate system is specified by an origin,\n * a vector parallel to the x axis, and a vector in the xy plane (not parallel to the x axis).\n *\n * @param objs An object or a list of objects.\n * @param source_origin The origin point of the source coordinate system, can be either a list of three numbers or a point.\n * @param source_vec_x A vector parallel to the source x axis.\n * @param source_vec A vector in the source xy plane (not paralle to the x axis).\n * @param copy If true, objects are copied before being scaled.\n * @returns The transformed objects.\n */\nexport function xformLcs2Gcs(objs: gs.IObj | gs.IObj[],\n                             source_origin: gs.XYZ|gs.IPoint,\n                             source_vec_x: gs.XYZ, source_vec: gs.XYZ,\n                             copy: boolean = false): gs.IObj | gs.IObj[] {\n    const is_array: boolean = Array.isArray(objs);\n    if (!Array.isArray(objs)) {objs = [objs];}\n    const model: gs.IModel = error.checkObjList(objs, 1);\n    let source_origin_xyz: gs.XYZ;\n    if (source_origin instanceof gs.Point) {\n        source_origin_xyz = source_origin.getPosition();\n    } else {\n        source_origin_xyz = source_origin as gs.XYZ;\n        error.checkXYZ(source_origin_xyz);\n    }\n    error.checkXYZ(source_vec_x);\n    error.checkXYZ(source_vec);\n    // matrix to xform from source to gcs, then from gcs to target\n    const matrix_source_to_gcs: three.Matrix4 = threex.xformMatrixFromXYZVectors(\n        source_origin_xyz, source_vec_x, source_vec, true);\n    // copy objects\n    if (copy) {objs = model.getGeom().copyObjs(objs, true); }\n    // do the xform\n    model.getGeom().xformObjs(objs, matrix_source_to_gcs);\n    // return the result, either single obj or array\n    if (is_array) {return objs;}\n    return objs[0];\n}\n\n/**\n * Transforms an object or list of objects from a source to a target local coordinate system (LCS).\n * Each coordinate system is specified by an origin,\n * a vector parallel to the x axis, and a vector in the xy plane (not parallel to the x axis).\n *\n * @param objs An object or a list of objects.\n * @param source_origin The origin point of the source coordinate system, can be either a list of three numbers or a point.\n * @param source_vec_x A vector parallel to the source x axis.\n * @param source_vec A vector in the source xy plane (not paralle to the x axis).\n * @param target_origin The origin point of the target coordinate system, can be either a list of three numbers or a point.\n * @param target_vec_x A vector parallel to the target x axis.\n * @param target_vec A vector in the target xy plane (not paralle to the x axis).\n * @param copy If true, objects are copied before being scaled.\n * @returns The transformed objects.\n */\nexport function xformLcs2Lcs(objs: gs.IObj | gs.IObj[],\n                             source_origin: gs.XYZ|gs.IPoint,\n                             source_vec_x: gs.XYZ, source_vec: gs.XYZ,\n                             target_origin: gs.XYZ|gs.IPoint,\n                             target_vec_x: gs.XYZ, target_vec: gs.XYZ,\n                             copy: boolean = false): gs.IObj | gs.IObj[] {\n    const is_array: boolean = Array.isArray(objs);\n    if (!Array.isArray(objs)) {objs = [objs];}\n    const model: gs.IModel = error.checkObjList(objs, 1);\n    let source_origin_xyz: gs.XYZ;\n    if (source_origin instanceof gs.Point) {\n        source_origin_xyz = source_origin.getPosition();\n    } else {\n        source_origin_xyz = source_origin as gs.XYZ;\n        error.checkXYZ(source_origin_xyz);\n    }\n    error.checkXYZ(source_vec_x);\n    error.checkXYZ(source_vec);\n    let target_origin_xyz: gs.XYZ;\n    if (target_origin instanceof gs.Point) {\n        target_origin_xyz = target_origin.getPosition();\n    } else {\n        target_origin_xyz = target_origin as gs.XYZ;\n        error.checkXYZ(target_origin_xyz);\n    }\n    error.checkXYZ(target_vec_x);\n    error.checkXYZ(target_vec);\n    // matrix to xform from source to gcs, then from gcs to target\n    const matrix_source_to_gcs: three.Matrix4 = threex.xformMatrixFromXYZVectors(\n        source_origin_xyz, source_vec_x, source_vec, true);\n    const matrix_gcs_to_target: three.Matrix4 = threex.xformMatrixFromXYZVectors(\n        target_origin_xyz, target_vec_x, target_vec, false);\n    // copy objects\n    if (copy) {objs = model.getGeom().copyObjs(objs, true); }\n    // do the xform\n    model.getGeom().xformObjs(objs, matrix_gcs_to_target.multiply(matrix_source_to_gcs));\n    // return the result, either single obj or array\n    if (is_array) {return objs;}\n    return objs[0];\n}\n\n/**\n * Mirrors an object or a list of objects in a mirror plane.\n * The plane is defined by a point and a normal vector.\n *\n * @param objs An object or a list of objects.\n * @param origin An origin point on the mirror plane, can be either a list of three numbers or a point.\n * @param normal The normal vector of the mirror plane, a list of three numbers.\n * @param copy If true, objects are copied before being scaled.\n * @returns The scaled objects.\n */\nexport function mirror(objs: gs.IObj | gs.IObj[], origin: gs.XYZ|gs.IPoint,\n                      normal: gs.XYZ, copy: boolean = false): gs.IObj | gs.IObj[] {\n    const is_array: boolean = Array.isArray(objs);\n    if (!Array.isArray(objs)) {objs = [objs];}\n    const model: gs.IModel = error.checkObjList(objs, 1);\n    let origin_xyz: gs.XYZ;\n    if (origin instanceof gs.Point) {\n        origin_xyz = origin.getPosition();\n    } else {\n        origin_xyz = origin as gs.XYZ;\n        error.checkXYZ(origin_xyz);\n    }\n    error.checkXYZ(normal);\n    // plane normal\n    const [a,b,c]: number[] = new three.Vector3(...normal).normalize().toArray();\n    // mirror matrix\n    const matrix_mirror: three.Matrix4 = new three.Matrix4();\n    matrix_mirror.set(\n        1 - (2 * a * a), -2 * a * b, -2 * a * c, 0,\n        -2 * a * b, 1 - (2 * b * b), -2 * b * c, 0,\n        -2 * a * c, -2 * b * c, 1 - (2 * c * c), 0,\n        0, 0, 0, 1\n    );\n    // translation matrix\n    const matrix_trn1: three.Matrix4 = new three.Matrix4();\n    matrix_trn1.makeTranslation(-origin_xyz[0], -origin_xyz[1], -origin_xyz[2]);\n    const matrix_trn2: three.Matrix4 = new three.Matrix4();\n    matrix_trn2.makeTranslation(origin_xyz[0], origin_xyz[1], origin_xyz[2]);\n    // copy objects\n    if (copy) {objs = model.getGeom().copyObjs(objs, true); }\n    // do the xform\n    model.getGeom().xformObjs(objs, matrix_trn2.multiply(matrix_mirror.multiply(matrix_trn1)));\n    // return the result, either single obj or array\n    if (is_array) {return objs;}\n    return objs[0];\n}\n\n/**\n * Deletes object or a list of objects from the model.\n *\n * @param objs Object or list of objects to delete.\n * @param keep_points If false, points that are not used in any other objects will be deleted.\n * @returns True if all objects we successfully deleted.\n */\nexport function del(objs: gs.IObj | gs.IObj[], keep_points: boolean = false): boolean {\n    if (!Array.isArray(objs)) {objs = [objs];}\n    const model: gs.IModel = error.checkObjList(objs, 1);\n    let ok: boolean = true;\n    for (const obj of objs) {\n        if (!model.getGeom().delObj(obj, keep_points)) {ok = false;}\n    }\n    return ok;\n}\n\n/**\n * Unwelds objects, so that thier vertices no longer share any points.\n *\n * @param objs Object or list of objects to unweld.\n * @returns A list of new points generated by the unwelding process.\n */\nexport function unweld(objs: gs.IObj | gs.IObj[]): gs.IPoint[] {\n    if (!Array.isArray(objs)) {objs = [objs];}\n    const model: gs.IModel = error.checkObjList(objs, 1);\n    return model.getGeom().unweldObjs(objs);\n}\n\n//  ===============================================================================================================\n//  Groups ==============================================================================================\n//  ===============================================================================================================\n\n/**\n * Add objects to a group.\n *\n * @param group Name of group to add to.\n * @param objs List of objects to add.\n * @returns True if all objects we successfully added.\n */\nexport function addToGroup(objs: gs.IObj | gs.IObj[], group_name: string): boolean {\n    if (!Array.isArray(objs)) {objs = [objs];}\n    const model: gs.IModel = error.checkObjList(objs, 1);\n    const group: gs.IGroup = error.checkGroup(model, group_name);\n    let ok: boolean = true;\n    for (const obj of objs) {\n        if (!group.addObj(obj as gs.IObj)) {ok = false;}\n    }\n    return ok;\n}\n\n/**\n * Remove object from a group.\n *\n * @param group Name of group to add to.\n * @param objs List of object to remove.\n * @returns True if all objects we successfully removed.\n */\nexport function removeFromGroup(objs: gs.IObj | gs.IObj[], group_name: string): boolean {\n    if (!Array.isArray(objs)) {objs = [objs];}\n    const model: gs.IModel = error.checkObjList(objs, 1);\n    const group: gs.IGroup = error.checkGroup(model, group_name);\n    let ok: boolean = true;\n    for (const obj of objs) {\n        if (!group.removeObj(obj as gs.IObj)) {ok = false;}\n    }\n    return ok;\n}\n","export module Output{\r\n    export function return_value(__model__: any[], index: number): any{\r\n        if (index > __model__.length) return __model__;\r\n        return __model__[index].value;\r\n    }\r\n}","/**\n * Function for working with planes.\n */\n\n/**\n * Planes are geometric objects definded by a single vertex and a set of parameters.\n * Planes represent an infinite plane in 3D space.\n * The parameters defined the orientation of the plane.\n * The orientation is defined by two vectors, the X and Y vectors of the plane. They must be orthogonal.\n */\n\nimport * as gs from \"gs-json\";\nimport * as three from \"three\";\nimport * as threex from \"./libs/threex/threex\";\nimport * as error from \"./_error_msgs_dev\";\n\n//  ===============================================================================================================\n//  Plane Get =====================================================================================================\n//  ===============================================================================================================\n\n/**\n * Gets a plane from the model based on an ID number.\n * In the viewer, the object label can display (it starts with 'o'), which contains the ID.\n * For example, if the label is \"o123\", then the ID is the number 123.\n *\n * @param model Model to get plane from.\n * @param id ID number of plane.\n * @returns The plane object.\n */\nexport function Get(model: gs.IModel, id: number): gs.IPlane {\n    const obj: gs.IObj = error.checkObjID(model, id, gs.EObjType.plane);\n    return obj as gs.IPlane;\n}\n\n/**\n * Create a copy of an existing plane.\n *\n * @param plane The plane object to copy.\n * @param copy_attribs If true, attributes are copied to the new plane.\n * @returns A new plane object.\n */\nexport function Copy(plane: gs.IPlane, copy_attribs?: boolean): gs.IPlane {\n    error.checkObj(plane, gs.EObjType.plane);\n    return plane.copy(copy_attribs) as gs.IPlane;\n}\n\n/**\n * Copies a plane from one model into another model.\n *\n * @param model The model to copy to.\n * @param plane The plane object to copy.\n * @returns The copied plane object in the model.\n */\nexport function CopyToModel(model: gs.IModel, plane: gs.IPlane): gs.IPlane {\n    error.checkObj(plane, gs.EObjType.plane);\n    if (plane.getModel() === model) {throw new Error(\"Error: plane is already in model.\");}\n    return model.getGeom().copyPlaneFromModel(plane);\n}\n\n//  ===============================================================================================================\n//  Plane Constructors ============================================================================================\n//  ===============================================================================================================\n\n/**\n * Creates a plane object from an origin point and two vectors.\n *\n * @param origin Point object, the origin of plane.\n * @param vec_x XYZ vector, the x-axis of plane.\n * @param vec XYZ vector, a vector in the plane. (This vector must not be co-dir with vec_x.)\n * @returns New plane object.\n */\nexport function FromOriginVectors(origin: gs.IPoint, vec_x: gs.XYZ, vec: gs.XYZ): gs.IPlane {\n    const model: gs.IModel = error.checkPoint(origin);\n    error.checkXYZ(vec_x);\n    error.checkXYZ(vec);\n    return model.getGeom().addPlane(origin, vec_x, vec);\n}\n\n/**\n * Creates a plane object from an origin point, parallel to the WCS XY plane .\n *\n * @param origin Point object, the origin of plane.\n * @returns New plane object.\n */\nexport function FromOriginXY(origin: gs.IPoint): gs.IPlane {\n    const model: gs.IModel = error.checkPoint(origin);\n    return model.getGeom().addPlane(origin, [1,0,0], [0,1,0]);\n}\n\n/**\n * Creates a plane object from an origin point, parallel to the WCS YZ plane .\n *\n * @param origin Point object, the origin of plane.\n * @returns New plane object.\n */\nexport function FromOriginYZ(origin: gs.IPoint): gs.IPlane {\n    const model: gs.IModel = error.checkPoint(origin);\n    return model.getGeom().addPlane(origin, [0,1,0], [0,0,1]);\n}\n\n/**\n * Creates a plane object from an origin point, parallel to the WCS ZX plane .\n *\n * @param origin Point object, the origin of plane.\n * @returns New plane object.\n */\nexport function FromOriginZX(origin: gs.IPoint): gs.IPlane {\n    const model: gs.IModel = error.checkPoint(origin);\n    return model.getGeom().addPlane(origin, [0,0,1], [1,0,0]);\n}\n\n/**\n * Creates a plane from an origin point and two other points on the plane.\n *\n * @param origin Point object, the origin of plane.\n * @param point1 Point object, a point on the plane. This will be used to define the plane X axis.\n * @param point2 Point object, a point on the plane.\n * @returns New plane object.\n */\nexport function FromOriginPoints(origin: gs.IPoint, point1: gs.IPoint, point2: gs.IPoint ):gs.IPlane {\n    const model: gs.IModel = error.checkPoint(origin);\n    error.checkPoint(point1);\n    error.checkPoint(point2);\n    if(point1.getModel() !== model) { throw new Error(\"Points need to be in the same model\");}\n    if(point2.getModel() !== model) { throw new Error(\"Points need to be in the same model\");}\n    // create the plane\n    const vec_x: gs.XYZ = threex.vectorFromPointsAtoB(origin, point1).toArray() as gs.XYZ;\n    const vec: gs.XYZ = threex.vectorFromPointsAtoB(origin, point2).toArray() as gs.XYZ;\n    const plane: gs.IPlane = model.getGeom().addPlane(origin, vec_x, vec);\n    // return the new plane\n    return plane;\n}\n\n/**\n * Creates a plane from a circle. The plane will have the same origin and orientation as the circle.\n *\n * @param circle The circle to create a plane from.\n * @returns New plane object.\n */\nexport function FromCircle(circle: gs.ICircle): gs.IPlane {\n    const model: gs.IModel = error.checkObj(circle, gs.EObjType.circle);\n    const vectors: gs.XYZ[] = circle.getAxes();\n    return model.getGeom().addPlane(circle.getOrigin(), vectors[0], vectors[1]);\n}\n\n//  ===============================================================================================================\n//  Plane Functions ===============================================================================================\n//  ===============================================================================================================\n","/**\n * Functions for working with polylines.\n */\n\n/**\n * Polylines are geometric objects that have no faces and a single wire.\n * The wire has one or more edges and two or more vertices.\n * The edges are straight line segments joining two vertices.\n * The polyline can be either a closed or an open.\n * A closed polyline has not fill. For that, you need to create a polymesh.\n */\n\nimport * as gs from \"gs-json\";\nimport * as three from \"three\";\nimport * as threex from \"./libs/threex/threex\";\nimport * as poly from \"./libs/poly/poly\";\nimport * as polylinePipe from \"./libs/poly/polylinePipe\";\nimport * as utils from \"./_utils_dev\";\nimport * as error from \"./_error_msgs_dev\";\nimport {Arr} from \"./libs/arr/arr\";\n\n//  ===============================================================================================================\n//  Pline Get and Copy ============================================================================================\n//  ===============================================================================================================\n\n/**\n * Gets a polyline from the model based on an ID number.\n * In the viewer, the object label can display (it starts with 'o'), which contains the ID.\n * For example, if the label is \"o123\", then the ID is the number 123.\n *\n * @param model Model to get polyline object from.\n * @param id ID number of polyline object.\n * @returns Polyline object.\n */\nexport function Get(model: gs.IModel, id: number): gs.IPolyline {\n    const obj: gs.IObj = error.checkObjID(model, id, gs.EObjType.polyline);\n    return obj as gs.IPolyline;\n}\n\n/**\n * Create a copy of a polyline.\n *\n * @param polyline The polyline to copy.\n * @param copy_attribs If true, attributes are copied to the new circle.\n * @returns Polyline object.\n */\nexport function Copy(polyline: gs.IPolyline, copy_attribs: boolean = true): gs.IPolyline {\n    error.checkObj(polyline, gs.EObjType.polyline);\n    return polyline.copy(copy_attribs) as gs.IPolyline;\n}\n\n/**\n * Copies a polyline from one model into another model.\n *\n * @param model The model to copy to.\n * @param polyline The polyline object to copy.\n * @returns The copied polyline object in the model.\n */\nexport function CopyToModel(model: gs.IModel, polyline: gs.IPolyline): gs.IPolyline {\n    error.checkObj(polyline, gs.EObjType.polyline);\n    if (polyline.getModel() === model) {throw new Error(\"Error: polyline is already in model.\");}\n    //return model.getGeom().copyPolylineFromModel(polyline);\n    throw new Error(\"Function not implemented yet...\");\n}\n\n//  ===============================================================================================================\n//  Pline Constructors ============================================================================================\n//  ===============================================================================================================\n\n/**\n * Creates a polyline by joining a list of points\n *\n * Straight line segments are cerated between every two points.\n *\n * @param points A list of points.\n * @param is_closed if true,\n *      creates a closed polyline object by joining the last point to the first point.\n * @returns Polyline object.\n */\nexport function FromPoints(points: gs.IPoint[], is_closed: boolean = false): gs.IPolyline {\n    const model: gs.IModel = error.checkPointList(points, 2);\n    return model.getGeom().addPolyline(points, is_closed);\n}\n\n/**\n * Create a polyline by dividing a circle or arc into straight line segments.\n *\n * If it is a circle, then a a closed polyline is returned.\n *\n * @param circle Circle or circular arc to construct polyline from.\n * @param segments Number of segments in resulting polyline.\n * @returns Polyline object.\n */\nexport function FromCircle(circle: gs.ICircle, segments: number): gs.IPolyline {\n    error.checkObj(circle, gs.EObjType.circle);\n    error.checkPosNum(segments);\n    const m: gs.IModel = circle.getModel();\n    const points: gs.IPoint[] = circle.equiPoints(segments + 1);\n    return m.getGeom().addPolyline(points, circle.isClosed());\n}\n\n/**\n * Create a polyline with a single straight line segment, connecting two points.\n *\n * @param start Start point of line\n * @param end End point of line.\n * @returns Polyline object.\n */\nexport function From2Points(start: gs.IPoint, end: gs.IPoint): gs.IPolyline {\n    error.checkPoint(start);\n    error.checkPoint(end);\n    return this.FromPoints([start, end], false);\n}\n\n//  ===============================================================================================================\n//  Pline Simple Functions ===============================================================================================\n//  ===============================================================================================================\n\n/**\n * Checks if the polyline is closed.\n *\n * @param pline Polyline object.\n * @return True if the polyline is closed.\n */\nexport function isClosed(pline: gs.IPolyline): boolean {\n    error.checkObj(pline, gs.EObjType.polyline);\n    return pline.isClosed();\n}\n\n/**\n * Sets the polyline to be open or closed.\n *\n * @param pline Polyline object.\n * @param is_closed True for closed, false for open.\n * @return True if the value was changed, false otherwise.\n */\nexport function setIsClosed(pline: gs.IPolyline, is_closed: boolean): boolean {\n    error.checkObj(pline, gs.EObjType.polyline);\n    if (pline.isClosed() === is_closed) {return false;}\n    pline.setIsClosed(is_closed);\n    return true;\n}\n\n/**\n * Get the number of edges in the polyline.\n *\n * @param pline Polyline object.\n * @return The number of edges.\n */\nexport function numEdges(pline: gs.IPolyline): number {\n    error.checkObj(pline, gs.EObjType.polyline);\n    return pline.numEdges();\n}\n\n/**\n * Get the number of vertices in the polyline.\n *\n * @param pline Polyline object.\n * @return The number of vertices.\n */\nexport function numVertices(pline: gs.IPolyline): number {\n    error.checkObj(pline, gs.EObjType.polyline);\n    return pline.numVertices();\n}\n\n/**\n * Get all points in a polyline in sequence order.\n *\n * @param pline Polyline object.\n * @return A list of points.\n */\nexport function getPoints(pline: gs.IPolyline): gs.IPoint[] {\n    error.checkObj(pline, gs.EObjType.polyline);\n    return pline.getPointsArr();\n}\n\n/**\n * Get the start and end points of a polyline.\n *\n * @param pline Polyline object.\n * @return A list with two points, or null if the polyline is closed.\n */\nexport function getEndPoints(pline: gs.IPolyline): gs.IPoint[] {\n    error.checkObj(pline, gs.EObjType.polyline);\n    if (pline.isClosed()) {return null;}\n    const points: gs.IPoint[] = pline.getPointsArr();\n    return [points[0], points[points.length - 1]];\n}\n\n/**\n * Returns a point by evaluating the position along a polyline.\n * The position is specified by a t parameter that starts at 0 and ends at 1.\n * If the polyline is closed, 0 and 1 will have the same position.\n *\n * @param pline Polyline to evaluate.\n * @param t Parameter to evaluate (0 is the start of the polyline, 1 is the end of the polyline)\n * @returns Point.\n */\nexport function evalParam(pline: gs.IPolyline, t: number): gs.IPoint {\n    error.checkObj(pline, gs.EObjType.polyline);\n    error.checkPosNum(t);\n    const points: gs.IPoint[] = pline.getPointsArr();\n    if (pline.isClosed()) {points.push(points[0]); }\n    return poly.pointsEvaluate(points, t);\n}\n\n//  ===============================================================================================================\n//  Pline Modelling Functions ===============================================================================================\n//  ===============================================================================================================\n\n\n/**\n * Divides a polyline. Each edge of the polyline is divided into different numbers of segments.\n * The number of segments for each edge is calculated by dividing the edge length by max_lenth,\n * and then rounding up to the nearest integer.\n *\n * The original polyline is not modified.\n *\n * @param pline The polyline to divide.\n * @param max_length The target maximum length of the segment,\n * may either be a single number or an list of numbers. If it is an list, then\n * the list length must be equal to the number of edges.\n * @returns A new polyline with subdivided edges.\n */\nexport function divideMaxLength(pline: gs.IPolyline, max_length: number|number[]): gs.IPolyline {\n    const model: gs.IModel = error.checkObj(pline, gs.EObjType.polyline);\n    const num_edges: number = pline.numEdges();\n    if (!Array.isArray(max_length)) {max_length = Arr.make(num_edges, max_length);}\n    error.checkNumListLength(max_length, num_edges);\n    // get points\n    const old_points: gs.IPoint[] = pline.getPointsArr();\n    if (pline.isClosed()) {old_points.push(old_points[0]);}\n    // create array to store new points\n    const new_points: gs.IPoint[] = [];\n    // loop through and add points\n    for (let i = 0; i < old_points.length - 1; i++) {\n        new_points.push(old_points[i]);\n        const vp1: three.Vector3 = new three.Vector3(...old_points[i].getPosition());\n        const vp2: three.Vector3 = new three.Vector3(...old_points[i + 1].getPosition());\n        const num_segments: number = Math.ceil(vp1.distanceTo(vp2) / max_length[i]);\n        const vpoints: three.Vector3[] = threex.interpVPoints(vp1, vp2, num_segments - 1);\n        for (const vpoint of vpoints) {\n            const new_point: gs.IPoint = model.getGeom().addPoint(vpoint.toArray() as gs.XYZ);\n            new_points.push(new_point);\n        }\n    }\n    // add last point if pline is open\n    if (!pline.isClosed()) {new_points.push(old_points[old_points.length - 1]);}\n    // create the new polyline and return it\n    return model.getGeom().addPolyline(new_points, pline.isClosed());\n}\n\n/**\n * Divides a polyline. Each edge of the polyline is divided into the same number of segments.\n * The original polyline is not modified.\n *\n * @param pline The polyline to divide.\n * @param num_segements The number of segments to create.\n * This may either be a single number or an list of numbers.\n * If it is an list, then the list length must be equal to the number of edges.\n * @returns A new polyline with subdivided edges.\n */\nexport function divide(pline: gs.IPolyline, num_segments: number|number[]): gs.IPolyline {\n    const model: gs.IModel = error.checkObj(pline, gs.EObjType.polyline);\n    if (!Array.isArray(num_segments)) {num_segments = Arr.make(pline.numEdges(), num_segments);}\n    const num_edges: number = pline.numEdges();\n    error.checkPosNums(num_segments);\n    error.checkNumListLength(num_segments, num_edges);\n    // get points\n    const old_points: gs.IPoint[] = pline.getPointsArr();\n    if (pline.isClosed()) {old_points.push(old_points[0]);}\n    // create array to store new points\n    const new_points: gs.IPoint[] = [];\n    // loop through and add points\n    for (let i = 0; i < old_points.length - 1; i++) {\n        new_points.push(old_points[i]);\n        const vp1: three.Vector3 = new three.Vector3(...old_points[i].getPosition());\n        const vp2: three.Vector3 = new three.Vector3(...old_points[i + 1].getPosition());\n        const vpoints: three.Vector3[] = threex.interpVPoints(vp1, vp2, num_segments[i] - 1);\n        for (const vpoint of vpoints) {\n            const new_point: gs.IPoint = model.getGeom().addPoint(vpoint.toArray() as gs.XYZ);\n            new_points.push(new_point);\n        }\n    }\n    // add last point if pline is open\n    if (!pline.isClosed()) {new_points.push(old_points[old_points.length - 1]);}\n    // create the new polyline and return it\n    return model.getGeom().addPolyline(new_points, pline.isClosed());\n}\n\n/**\n * Joins polylines with shared end points. The original polylines are deleted.\n *\n * @param plines List of polylines to join.\n * @returns List of polyline objects.\n */\nexport function join(plines: gs.IPolyline[]): gs.IPolyline[] {\n    const model: gs.IModel = error.checkObjList(plines, 2, gs.EObjType.polyline);\n    const geom: gs.IGeom = model.getGeom();\n    // create an array of array of points\n    const point_ids_arrays: number[][] = [];\n    for (const pline of plines) {\n        const points: gs.IPoint[] = pline.getPointsArr();\n        const start_end: [number, number] = [points[0].getID(), points[points.length - 1].getID()];\n        if (start_end[1] < start_end[0]) {\n            points.reverse();\n        }\n        point_ids_arrays.push(points.map((p) => p.getID()));\n    }\n    point_ids_arrays.sort();\n    // create disjoint set\n    const disjoint_sets: number[][][] = [];\n    disjoint_sets.push([point_ids_arrays[0]]);\n    point_ids_arrays.splice(0, 1);\n    let max: number = 0;\n    while (point_ids_arrays.length > 0 && max < 100) {\n        max++;\n        let tried_all: boolean = false;\n        const last_disjoint_set: number[][] = disjoint_sets[disjoint_sets.length - 1];\n        const last_point_ids = last_disjoint_set[last_disjoint_set.length - 1];\n        let current_start: number = last_disjoint_set[0][0];\n        let current_end: number = last_point_ids[last_point_ids.length - 1];\n        tried_all = true;\n        for (let i = 0; i < point_ids_arrays.length; i++) {\n            const point_ids: number[] = point_ids_arrays[i];\n            const point_ids_start: number = point_ids[0];\n            const point_ids_end: number = point_ids[point_ids.length - 1];\n            if (current_end === point_ids_start) {\n                tried_all = false;\n                last_disjoint_set.push(point_ids);\n                current_end = last_point_ids[last_point_ids.length - 1];\n                point_ids_arrays.splice(i, 1);\n                break;\n            } else if (current_start === point_ids_end) {\n                tried_all = false;\n                last_disjoint_set.unshift(point_ids);\n                current_start = last_disjoint_set[0][0];\n                point_ids_arrays.splice(i, 1);\n                break;\n            } else if (current_end === point_ids_end) {\n                tried_all = false;\n                last_disjoint_set.push(point_ids.reverse());\n                current_end = last_point_ids[last_point_ids.length - 1];\n                point_ids_arrays.splice(i, 1);\n                break;\n            } else if (current_start === point_ids_start) {\n                tried_all = false;\n                last_disjoint_set.unshift(point_ids.reverse());\n                current_start = last_disjoint_set[0][0];\n                point_ids_arrays.splice(i, 1);\n                break;\n            }\n        }\n        if (tried_all || (current_start === current_end)) {\n            disjoint_sets.push([point_ids_arrays[0]]);\n            point_ids_arrays.splice(0, 1);\n        }\n    }\n    // create polylines\n    const new_plines: gs.IPolyline[] = [];\n    for (const disjoint_set of disjoint_sets) {\n        const points: gs.IPoint[] = [];\n        for (const point_ids of disjoint_set) {\n            for (let i = 0; i< point_ids.length - 1; i++) {\n                points.push(geom.getPoint(point_ids[i]));\n            }\n        }\n        const start: number = disjoint_set[0][0];\n        const last_array: number[] = disjoint_set[disjoint_set.length - 1];\n        const end: number = last_array[last_array.length - 1];\n        if (start === end) {\n            new_plines.push(geom.addPolyline(points, true));\n        } else {\n            points.push(geom.getPoint(end));\n            new_plines.push(geom.addPolyline(points, false));\n        }\n    }\n    // delete the old polylines\n    geom.delObjs(plines, true);\n    // return the new plines\n    return new_plines;\n}\n\n/**\n * Explodes a polyline into smaller polylines, each with only one segment.\n * The original polyline is not modified.\n *\n * @param pline Polyline to explode.\n * @returns List of polylines objects.\n */\nexport function explode(pline: gs.IPolyline): gs.IPolyline[] {\n    error.checkObj(pline, gs.EObjType.polyline);\n    return this.extract(pline, Arr.makeSeq(pline.numEdges()));\n}\n\n/**\n * Creates new polyline by extracting line segments from an existing polyline.\n * The original polyline is not modified.\n *\n * The individual segments are no joined.\n *\n * @param pline Polyline to extract segments from\n * @param segment_index Index numbers of polyline segments to extract\n * @returns List of new polylines created from extract\n */\nexport function extract(pline: gs.IPolyline, segment_index: number[]): gs.IPolyline[] {\n    error.checkObj(pline, gs.EObjType.polyline);\n    error.checkPosNums(segment_index);\n    // do the extraction\n    const m: gs.IModel = pline.getModel();\n    const plines: gs.IPolyline[] = [];\n    const points: gs.IPoint[] = pline.getPointsArr();\n    if (pline.isClosed()) {points.push(points[0]); }\n    for (const i of  segment_index) {\n        if (i >= points.length - 1) {throw new Error(\"Segment index exceeds polyline length.\");}\n        plines.push(m.getGeom().addPolyline([points[i], points[i+1]], false));\n    }\n    return plines;\n}\n\n/**\n * Create a new polymesh by extruding a polyline by a specified vector.\n * The original polyline is not modified.\n *\n * New points are created by translating the existing points by the specified vector.\n * Four-sided faces are the created between the original and new points.\n * The faces are joined to create a polymesh.\n *\n * If cap is true, input pline and moved pline are used as edges to create two polygons. The polygones are\n * joined to the polymesh.\n *\n * @param pline Polyline to extrude.\n * @param vector Vector describing direction and distance of extrusion.\n * @param cap Closes polymesh by creating a polygon on each end of the extrusion if true.\n * @returns Polymesh object.\n */\nexport function extrude(pline: gs.IPolyline, vector: gs.XYZ, cap: boolean = false): gs.IPolymesh {\n    error.checkObj(pline, gs.EObjType.polyline);\n    error.checkXYZ(vector);\n    // do the extrude\n    const m: gs.IModel = pline.getModel();\n    const g: gs.IGeom = m.getGeom();\n    const points1: gs.IPoint[] = pline.getPointsArr();\n    const points2: gs.IPoint[] = points1.map((p) => p.copy() as gs.IPoint);\n    threex.movePointsAddXYZ(points2, vector);\n    const mesh_points: gs.IPoint[][] = poly.pointsLoft([points1, points2], pline.isClosed());\n    if (cap) {\n        mesh_points.push(points1.reverse());\n        mesh_points.push(points2);\n    }\n    const pmesh: gs.IPolymesh = m.getGeom().addPolymesh(mesh_points);\n    return pmesh;\n}\n\n/**\n * Create a new polymesh by lofting a list of polylines with equal numbers of segments.\n * The original polylines are not modified.\n *\n * Four-sided faces are the created between the points of consecutive polylines.\n * The faces are joined to create a polymesh.\n *\n * Throws an error if polylines do not have the same number of segments\n *\n * @param plines List of polylines to loft (in order).\n * @param is_closed Closes polymesh by lofting back to first polyline if true.\n * @returns Polymesh object.\n */\nexport function loft(plines: gs.IPolyline[], is_closed: boolean=false): gs.IPolymesh {\n    const m: gs.IModel = error.checkObjList(plines, 2, gs.EObjType.polyline);\n    const g: gs.IGeom = m.getGeom();\n    // get data\n    if (is_closed) {plines.push(plines[0]);}\n    const num_points: number = plines[0].numVertices();\n    const num_plines: number = plines.length;\n    const plines_closed: boolean = plines[0].isClosed();\n    // get points\n    const points: gs.IPoint[][] = [];\n    for (let i = 0; i< num_plines; i++) {\n        if (plines[i].numVertices() !== num_points) {\n            throw new Error(\"Plines do not have equal numbers of points.\");\n        }\n        if (plines[i].isClosed() !== plines_closed) {\n            throw new Error(\"Plines must all be either open or closed.\");\n        }\n        points.push(plines[i].getPointsArr());\n    }\n    // make polymesh from points and return it\n    return g.addPolymesh(poly.pointsLoft(points, plines_closed));\n}\n\n/**\n * Create a new polymesh by piping a polyline.\n *\n * @param polyline Polyline to pipe.\n * @param radius The radius of the pipe.\n * @param segments The number of polygon segments around the cicumference of the pipe.\n * @returns Polymesh object.\n */\nexport function pipe(pline: gs.IPolyline, radius: number, segments: number): gs.IPolymesh {\n    const m: gs.IModel = error.checkObj(pline, gs.EObjType.polyline);\n    // make polymesh\n    return polylinePipe.pipe(pline, radius, segments);\n}\n","/**\n * Functions for working with polymehes.\n */\n\n/**\n * Polymeshes are geometric objects that can have multiple faces and multiple closed wires.\n * Faces define the surfaces in the polymesh. They can have three or more vertices,\n * they can be concave or convex, and planar or non-planar.\n * Wires define the naked edges, i.e. edges without any neighbours.\n * The wires in a polymesh are calculated automatically based on the connectivity between the faces.\n * The edges are straight line segments joining two vertices.\n * The polymesh can be either a closed or an open. A closed polymesh has no wires.\n */\n\nimport * as gs from \"gs-json\";\nimport * as three from \"three\";\nimport * as threex from \"./libs/threex/threex\";\nimport * as poly from \"./libs/poly/poly\";\nimport * as utils from \"./_utils_dev\";\nimport * as error from \"./_error_msgs_dev\";\nimport {Arr} from \"./libs/arr/arr\";\n\n//  ===============================================================================================================\n//  Pmesh Get =====================================================================================================\n//  ===============================================================================================================\n\n/**\n * Gets a polymesh from the model based on an ID number.\n * In the viewer, the object label can display (it starts with 'o'), which contains the ID.\n * For example, if the label is \"o123\", then the ID is the number 123.\n *\n * @param model Model to get polymesh from.\n * @param id ID number of polymesh.\n * @returns Polymesh object.\n */\nexport function Get(model: gs.IModel, id: number): gs.IPolymesh {\n    const obj: gs.IObj = error.checkObjID(model, id, gs.EObjType.polymesh);\n    return obj as gs.IPolymesh;\n}\n\n/**\n * Create a copy of a polymesh.\n *\n * @param polymesh The polymesh to copy.\n * @param copy_attribs If true, attributes are copied to the new circle.\n * @returns Polymesh object.\n */\nexport function Copy(polymesh: gs.IPolymesh, copy_attribs?: boolean): gs.IPolymesh {\n    error.checkObj(polymesh, gs.EObjType.polymesh);\n    return polymesh.copy(copy_attribs) as gs.IPolymesh;\n}\n\n/**\n * Copies a polymesh from one model into another model.\n *\n * @param model The model to copy to.\n * @param polymesh The polymesh object to copy.\n * @returns The copied polymesh object in the model.\n */\nexport function CopyToModel(model: gs.IModel, polymesh: gs.IPolymesh): gs.IPolymesh {\n    error.checkObj(polymesh, gs.EObjType.polymesh);\n    if (polymesh.getModel() === model) {throw new Error(\"Error: polymesh is already in model.\");}\n    //return model.getGeom().copyPolymeshFromModel(polymesh);\n    throw new Error(\"Function not implemented yet.\")\n}\n\n//  ===============================================================================================================\n//  Pmesh Constructors ============================================================================================\n//  ===============================================================================================================\n\n/**\n * Creates a polymesh from a list of lists of face corner points.\n * For example [[p1, p2, p3], [p3, p2, p4]] would create a polymesh with two triangular faces.\n * In this example, the two faces share points p2 and p3.\n *\n * @param points List of lists of face corner points.\n * @returns Polymesh object.\n */\nexport function FromPoints(points: gs.IPoint[][]): gs.IPolymesh {\n    const model: gs.IModel = error.checkPointNestedList(points, 1, 3);\n    return model.getGeom().addPolymesh(points);\n}\n\n/**\n * Creates a polymesh from a polyline. The polymesh will have a single face.\n *\n * @param pline Polyline object to create the polymesh from.\n * @returns Polymesh object with single face.\n */\n\nexport function FromPline(pline: gs.IPolyline): gs.IPolymesh {\n    const model: gs.IModel = error.checkObj(pline, gs.EObjType.polyline);\n    return model.getGeom().addPolymesh([pline.getPointsArr()]);\n}\n\n/**\n * Creates a triangulated mesh from two lists of points.\n * For example [[p1, p2, p3], [p4, p5, p6]] would create a polymesh with four triangular faces.\n * The triangles would be as follows: [p1, p2, p4], [p5, p4, p1], [p2, p3, p5], [p6, p5, p3].\n * In this example, the two faces share points p2 and p3.\n *\n * @param points1 The first list of points.\n * @param points2 The second list of points.\n * @returns Polymesh object.\n */\nexport function TriStripFromPoints(points1: gs.IPoint[], points2: gs.IPoint[]): gs.IPolymesh {\n    const model: gs.IModel = error.checkPointList(points1, 2);\n    error.checkPointList(points2, 2);\n    // sort, shortest list first\n    const points: gs.IPoint[][] = [];\n    if (points1.length < points2.length) {\n        points[0] = points1;\n        points[1] = points2;\n    } else {\n        points[0] = points2;\n        points[1] = points1;\n    }\n    // create quads, the split into two triangles along shortest diagonal\n    const tri_points: gs.IPoint[][] = [];\n    for (let i = 0; i < points[0].length - 1; i++) {\n        const p0: gs.IPoint = points[0][i];\n        const p1: gs.IPoint = points[0][i + 1];\n        const p2: gs.IPoint = points[1][i + 1];\n        const p3: gs.IPoint = points[1][i];\n        if (threex.distSquPointToPoint(p1, p3) < threex.distSquPointToPoint(p0, p2)) {\n            tri_points.push([p0, p1, p3]);\n            tri_points.push([p1, p2, p3]);\n        } else {\n            tri_points.push([p0, p1, p2]);\n            tri_points.push([p0, p2, p3]);\n        }\n    }\n    // add triangles for the remainder\n    for (let i = points[0].length - 1; i < points[1].length - 1; i++) {\n        const p0: gs.IPoint = points[1][i + 1];\n        const p1: gs.IPoint = points[1][i];\n        const p2: gs.IPoint = points[0][points[0].length - 1];\n        tri_points.push([p0, p1    , p2]);\n    }\n    // generate mesh and return\n    return model.getGeom().addPolymesh(tri_points);\n}\n\n\n//  ===============================================================================================================\n//  Pmesh Simple Functions ===============================================================================================\n//  ===============================================================================================================\n\n/**\n * Checks if the polymesh is closed.\n *\n * @param pmesh Polymesh object.\n * @return True if the polymesh is closed.\n */\nexport function isClosed(pmesh: gs.IPolymesh): boolean {\n    error.checkObj(pmesh, gs.EObjType.polymesh);\n    return pmesh.numWires() === 0;\n}\n\n/**\n * Get the number of faces in a polymesh.\n *\n * @param pmesh Polymesh object.\n * @return The number of faces.\n */\nexport function numFaces(pmesh: gs.IPolymesh): number {\n    error.checkObj(pmesh, gs.EObjType.polymesh);\n    return pmesh.numFaces();\n}\n\n/**\n * Get the number of wires in a polymesh.\n *\n * @param pmesh Polymesh object.\n * @return The number of wires.\n */\nexport function numWires(pmesh: gs.IPolymesh): number {\n    error.checkObj(pmesh, gs.EObjType.polymesh);\n    return pmesh.numWires();\n}\n\n/**\n * Get the number of edges in a polymesh, for both the wires and the faces.\n *\n * @param pmesh Polymesh object.\n * @return List of two numbers, number of wire edges and number of face edges.\n */\nexport function numEdges(pmesh: gs.IPolymesh): [number, number] {\n    error.checkObj(pmesh, gs.EObjType.polymesh);\n    return [pmesh.numWireEdges(), pmesh.numFaceEdges()];\n}\n\n/**\n * Get the number of vertices in the polymesh, for both the wires and the faces.\n *\n * @param pmesh Polymesh object.\n * @return List of two numbers, number of wire vertices and number of face vertices.\n */\nexport function numVertices(pmesh: gs.IPolymesh): [number, number] {\n    error.checkObj(pmesh, gs.EObjType.polymesh);\n    return [pmesh.numWireVertices(), pmesh.numFaceVertices()];\n}\n\n/**\n * Get all points in a polymesh. The sequence of points is in face order.\n *\n * @param pmesh Polymesh object.\n * @return List of points.\n */\nexport function getPoints(pmesh: gs.IPolymesh): gs.IPoint[] {\n    error.checkObj(pmesh, gs.EObjType.polymesh);\n    return Arr.flatten(pmesh.getPoints(gs.EGeomType.faces));\n}\n\n//  ===============================================================================================================\n//  Pmesh Modelling Functions ===============================================================================================\n//  ===============================================================================================================\n\n/**\n * Create a new polymesh by extruding an existing polymesh by a specified vector.\n * The original polymesh is not modified.\n *\n * New points are created by translating the existing points by the specified vector.\n * Top and bottom faces are created.\n * Four-sided faces are the created between the original and new points.\n * The faces are joined to create a polymesh.\n *\n * @param pmesh Polymesh to extrude.\n * @param vector The vector defining the extrusion length and direction.\n * @returns A polymesh if successful, null if unsuccessful or on error.\n */\nexport function extrude(pmesh: gs.IPolymesh, vector: gs.XYZ): gs.IPolymesh {\n    // check args\n    const model: gs.IModel = error.checkObj(pmesh, gs.EObjType.polymesh);\n    error.checkXYZ(vector);\n    // make a copy\n    const pmesh1_points: gs.IPoint[][][] = pmesh.getPoints();\n    const pmesh2_points: gs.IPoint[][][] = utils.copyObjPoints(pmesh, false);\n    threex.movePointsAddXYZ(Arr.flatten(pmesh2_points), vector);\n    // create the sides\n    const sides: gs.IPoint[][] = poly.pointsLoftLoop([pmesh1_points[0], pmesh2_points[0]], true);\n    // combine everything\n    const pmesh_points = [...pmesh1_points[1], ...pmesh2_points[1], ...sides];\n    // return the new polymesh\n    return model.getGeom().addPolymesh(pmesh_points);\n}\n\n/**\n * Explodes a polymesh into smaller polymeshes, each with only one face.\n * The original polymesh is not modified.\n *\n * @param pmesh Polymesh to explode.\n * @returns List of polymeshes.\n */\nexport function explode(pmesh: gs.IPolymesh): gs.IPolymesh[] {\n    error.checkObj(pmesh, gs.EObjType.polymesh);\n    return this.extractFaces(pmesh, Arr.makeSeq(pmesh.numFaces()));\n}\n\n/**\n * Creates new set of polymeshes by extracting faces from an existing polymesh.\n * The original polymesh is not modified.\n *\n * The individual polymeshes are not joined.\n *\n * @param pmesh Polymesh to extract faces from\n * @param face_index Index numbers of polymesh faces to extract.\n * @returns List of new polymeshes.\n */\nexport function extractFaces(pmesh: gs.IPolymesh, face_index: number[]): gs.IPolymesh[] {\n    const m: gs.IModel = error.checkObj(pmesh, gs.EObjType.polymesh);\n    error.checkPosNums(face_index);\n    // do the extraction\n    const new_pmeshes: gs.IPolymesh[] = [];\n    const faces: gs.IFace[] = pmesh.getFaces();\n    for (const i of face_index) {\n        if (i >= faces.length) {throw new Error(\"Face index exceeds the number of faces.\");}\n        const points: gs.IPoint[] = faces[i].getVertices().map((v) => v.getPoint());\n        new_pmeshes.push(m.getGeom().addPolymesh([points]));\n    }\n    return new_pmeshes;\n}\n\n/**\n * Creates new set of polylines by extracting wires from an existing polymesh.\n * The original polymesh is not modified.\n *\n * Wires are the naked edges of a polymesh. They are always closed loops.\n *\n * @param pmesh Polymesh to extract wires from.\n * @param wire_index Index numbers of polymesh wires to extract.\n * @returns List of new polylines.\n */\nexport function extractWires(pmesh: gs.IPolymesh, wire_index: number[]): gs.IPolyline[] {\n    const m: gs.IModel = error.checkObj(pmesh, gs.EObjType.polymesh);\n    error.checkPosNums(wire_index);\n    // do the extraction\n    const new_plines: gs.IPolyline[] = [];\n    const wires: gs.IWire[] = pmesh.getWires();\n    for (const i of wire_index) {\n        if (i >= wires.length) {throw new Error(\"Face index exceeds the number of faces.\");}\n        const points: gs.IPoint[] = wires[i].getVertices().map((v) => v.getPoint());\n        new_plines.push(m.getGeom().addPolyline(points, true));\n    }\n    return new_plines;\n}\n","/**\n * Function for working with points.\n */\n\n/**\n * Points define a point in a model, with XYZ coordinates.\n * Points are the fundamental building blocks of making 3D geometry.\n * Geometric objects have one or more vertices, and the position of each vertex is defined by linking to a point.\n * Each vertex most be linked to exactly one point.\n * Each point can have zero or more vertices linking to it.\n * If a point is moved, all vertcies linked to that point will move with it.\n */\n\nimport * as gs from \"gs-json\";\nimport * as three from \"three\";\nimport * as error from \"./_error_msgs_dev\";\n\n//  ===============================================================================================================\n//  Point Get Copy ================================================================================================\n//  ===============================================================================================================\n\n/**\n * Gets a point from a model.\n *\n * @param model Model to get point from.\n * @param id ID of point to get.\n * @returns Point.\n */\nexport function Get(model: gs.IModel, id: number): gs.IPoint {\n    const point: gs.IPoint = error.checkPointID(model, id);\n    return point;\n}\n\n/**\n * Gets a list of points from the model.\n *\n * @param model Model to get points from.\n * @param ids A point ID or list of point IDs, integer numbers. If null, then all points are returned.\n * @returns A list of points.\n */\nexport function Gets(model: gs.IModel, ids?: number | number[]): gs.IPoint[] {\n    if (ids === undefined || ids === null) {return model.getGeom().getAllPoints();}\n    if (!Array.isArray(ids)) {ids = [ids];}\n    const points: gs.IPoint[] = [];\n    for (const id of ids) {\n        const point: gs.IPoint = Get(model, id);\n        if (point !== null) {points.push(point);}\n    }\n    return points;\n}\n\n/**\n * Gets all the points from a group.\n *\n * @param model Model to get the points from.\n * @param group_name The group name.\n * @returns List of points.\n */\nexport function GetFromGroup(model: gs.IModel, group_name: string): gs.IPoint[] {\n    const group: gs.IGroup = error.checkGroup(model, group_name);\n    return group.getPoints();\n}\n\n/**\n * Gets a list of unique points for a list of objects.\n *\n * @param objs An object or list of objects.\n * @returns List of points.\n */\nexport function GetFromObjs(objs: gs.IObj | gs.IObj[]): gs.IPoint[] {\n    // TODO error checking of args\n    if (!Array.isArray(objs)) {objs = [objs];}\n    const points_map: Map<number, gs.IPoint> = new Map();\n    const obj_points: gs.IPoint[] = [];\n    for (const obj of objs) {\n        for (const point of obj.getPointsArr()) {\n            points_map.set(point.getID(), point);\n        }\n    }\n    return Array.from(points_map.values());\n}\n\n/**\n * Copy a point within a model.\n *\n * @param point Point to copy.\n * @returns New point.\n */\nexport function Copy(point: gs.IPoint): gs.IPoint {\n    const model: gs.IModel = error.checkPoint(point);\n    return model.getGeom().addPoint(point.getPosition());\n}\n\n/**\n * Copy a point from one model into another model.\n *\n * @param model The model to copy to.\n * @param plane The plane object to copy.\n * @returns The copied plane object in the model.\n */\nexport function CopyToModel(model: gs.IModel, point: gs.IPoint): gs.IPoint {\n    error.checkPoint(point);\n    // check it is not already in the model\n    if (point.getModel() === model) {throw new Error(\"Error: point is already in model.\");}\n    // copy circle and return it\n    return model.getGeom().addPoint(point.getPosition());\n}\n\n//  ===============================================================================================================\n//  Point Constructors ============================================================================================\n//  ===============================================================================================================\n\n/**\n * Creates a point from XYZ coordinates.\n *\n * @param __model__ Model to add points to.\n * @param xyz XYZ coordinates, as a list of three numbers.\n * @returns New point if successful, null if unsuccessful or on error.\n */\nexport function FromXYZ(__model__: gs.IModel, xyz: gs.XYZ): gs.IPoint {\n    error.checkXYZ(xyz);\n    return __model__.getGeom().addPoint(xyz);\n}\n\n/**\n * Creates a list of points from a list of X, Y and Z coordinates.\n * Points are returned in list order.\n *\n * @param __model__ Model to add points to.\n * @param xyzs A list XYZ coordinates, as a list of lists of three numbers.\n * @returns New list of points if successful, null if unsuccessful or on error\n */\nexport function FromXYZs(__model__: gs.IModel, xyzs: gs.XYZ[]): gs.IPoint[] {\n    const points: gs.IPoint[] = [];\n    for (const xyz of xyzs as gs.XYZ[]) {\n        error.checkXYZ(xyz);\n        points.push(__model__.getGeom().addPoint(xyz));\n    }\n    return points;\n}\n\n/**\n * Creates a point that is at the center of a cluster of points.\n *\n * @param points List of points.\n * @returns New point if successful, null if unsuccessful or on error.\n */\nexport function FromPointsMean(points: gs.IPoint[]): gs.IPoint {\n    const model: gs.IModel = error.checkPointList(points, 2);\n    const xyz: number[] = [0,0,0];\n    for (const point of points) {\n        const pos: number[] = point.getPosition();\n        xyz[0] += pos[0];\n        xyz[1] += pos[1];\n        xyz[2] += pos[2];\n    }\n    return model.getGeom().addPoint([xyz[0]/points.length, xyz[1]/points.length, xyz[2]/points.length]);\n}\n\n//  ===============================================================================================================\n//  Point Functions ============================================================================================\n//  ===============================================================================================================\n\n/**\n * Moves a point or a list of points by a translation vector.\n *\n * @param points A point or a list of points.\n * @param vector Translation vector.\n * @param copy If true, points are copied before being moved.\n * @returns The moved points.\n */\nexport function move(points: gs.IPoint | gs.IPoint[], vector: gs.XYZ,\n                     copy: boolean = false): gs.IPoint | gs.IPoint[] {\n    const is_array: boolean = Array.isArray(points);\n    if (!Array.isArray(points)) {points = [points];}\n    const model: gs.IModel = error.checkPointList(points, 1);\n    error.checkXYZ(vector);\n    // translation matrix\n    const matrix_trn: three.Matrix4 = new three.Matrix4();\n    matrix_trn.makeTranslation(vector[0], vector[1], vector[2]);\n    // copy points\n    if (copy) {points = model.getGeom().copyPoints(points, true); }\n    // do the xform\n    model.getGeom().xformPoints(points, matrix_trn);\n    // return either a single point or array of points\n    if (is_array) {return points;}\n    return points[0];\n}\n\n/**\n * Rotates a point or a list of points around an axis.\n *\n * @param points A point or a list of points.\n * @param origin An xyz point on the axis.\n * @param axis An xyz vector along the axis.\n * @param angle The angle, in degrees, between 0 and 360.\n * @param copy If true, points are copied before being rotated.\n * @returns The rotated points.\n */\nexport function rotate(points: gs.IPoint | gs.IPoint[], origin: gs.XYZ, axis: gs.XYZ,\n                       angle: number, copy: boolean = false): gs.IPoint | gs.IPoint[] {\n    // check args\n    const is_array: boolean = Array.isArray(points);\n    if (!Array.isArray(points)) {points = [points];}\n    const model: gs.IModel = error.checkPointList(points, 1);\n    error.checkXYZ(origin);\n    error.checkXYZ(axis);\n    const angle_rad: number = (angle / 180) * Math.PI;\n    // rotation matrix\n    const matrix_rot: three.Matrix4 = new three.Matrix4();\n    matrix_rot.makeRotationAxis(new three.Vector3(...axis), angle_rad);\n    // translation matrix\n    const matrix_trn1: three.Matrix4 = new three.Matrix4();\n    matrix_trn1.makeTranslation(-origin[0], -origin[1], -origin[2]);\n    const matrix_trn2: three.Matrix4 = new three.Matrix4();\n    matrix_trn2.makeTranslation(origin[0], origin[1], origin[2]);\n    // copy points\n    if (copy) {points = model.getGeom().copyPoints(points, true); }\n    // do the xform\n    model.getGeom().xformPoints(points, matrix_trn2.multiply(matrix_rot.multiply(matrix_trn1)));\n    // return either a single point or array of points\n    if (is_array) {return points;}\n    return points[0];\n}\n\n/**\n * Scales a point or a list of points around an origin.\n *\n * @param points A point or a list of points.\n * @param origin An xyz origin point of the scale.\n * @param factor The scale factor, along the x, y and z axes.\n * @param copy If true, points are copied before being scaled.\n * @returns The scaled points.\n */\nexport function scale(points: gs.IPoint | gs.IPoint[], origin: gs.XYZ,\n                      factor: gs.XYZ, copy: boolean = false): gs.IPoint | gs.IPoint[] {\n    // check args\n    const is_array: boolean = Array.isArray(points);\n    if (!Array.isArray(points)) {points = [points];}\n    const model: gs.IModel = error.checkPointList(points, 1);\n    error.checkXYZ(origin);\n    error.checkXYZ(factor);\n    // scale matrix\n    const matrix_scale: three.Matrix4 = new three.Matrix4();\n    matrix_scale.makeScale(factor[0], factor[1], factor[2]);\n    // translation matrix\n    const matrix_trn1: three.Matrix4 = new three.Matrix4();\n    matrix_trn1.makeTranslation(-origin[0], -origin[1], -origin[2]);\n    const matrix_trn2: three.Matrix4 = new three.Matrix4();\n    matrix_trn2.makeTranslation(origin[0], origin[1], origin[2]);\n    // copy points\n    if (copy) {points = model.getGeom().copyPoints(points, true); }\n    // do the xform\n    model.getGeom().xformPoints(points, matrix_trn2.multiply(matrix_scale.multiply(matrix_trn1)));\n    // return either a single point or array of points\n    if (is_array) {return points;}\n    return points[0];\n}\n\n/**\n * Deletes a point or a list of points from the model.\n *\n * @param points Point or list of points to delete.\n * @returns True if successful\n */\nexport function del(points: gs.IPoint | gs.IPoint[]): boolean {\n    if (!Array.isArray(points)) {points = [points];}\n    const model: gs.IModel = error.checkPointList(points, 1);\n    let ok: boolean = true;\n    for (const point of points) {\n        if (!point.exists()) {error.pointNotExist();}\n        if (point.getModel() !== model) {error.pointInOtherModel();}\n        if (!model.getGeom().delPoint(point)) {ok = false;}\n    }\n    return ok;\n}\n\n/**\n * Get the XYZ coordinates of the point.\n *\n * @param point Point to get coordinates from.\n * @returns The XYZ coordinates if successful, null if unsuccessful or on error.\n */\nexport function getXYZ(point: gs.IPoint): gs.XYZ {\n    error.checkPoint(point);\n    return point.getPosition();\n}\n\n/**\n * Set the XYZ coordinates of the point.\n *\n * @param point Point to set coorinates for.\n * @param xyz The new XYZ coordinates, as a list of three numbers.\n * @returns The old XYZ coordinates if successful, null if unsuccessful or on error.\n */\nexport function setXYZ(point: gs.IPoint, xyz: gs.XYZ): gs.XYZ {\n    error.checkPoint(point);\n    error.checkXYZ(xyz);\n    return point.setPosition(xyz);\n}\n\n/**\n * Merges point or a list of points in the model.\n *\n * @param points Point or list of points to delete.\n * @returns True if successful, false otherwise.\n */\nexport function mergeByTol(points: gs.IPoint[], tolerance: number): gs.IPoint[] {\n    const model: gs.IModel = error.checkPointList(points, 2);\n    error.checkPosNum(tolerance);\n    for (const point of points) {\n        if (point.getModel() !== model) {throw new Error(\"Points must all be in same model.\");}\n        if (!point.exists()) {throw new Error(\"Point has been deleted.\");}\n    }\n    return model.getGeom().mergePoints(points, tolerance);\n}\n\n/**\n * Merges a cluster of points into a single point.\n * The cluster of points are deletetd and replaced by one new point located at the center of the cluster.\n * All objects in the model that are using those points will be updated.\n *\n * @param points Cluster of points to merge.\n * @returns New point if successful, null if unsuccessful or on error.\n */\nexport function merge(points: gs.IPoint[]): gs.IPoint {\n    const model: gs.IModel = error.checkPointList(points, 2);\n    for (const point of points) {\n        if (point.getModel() !== model) {error.pointInOtherModel();}\n        if (!point.exists()) {error.pointNotExist();}\n    }\n    return model.getGeom().mergePoints(points)[0];\n}\n\n//  ===============================================================================================================\n//  Groups ==============================================================================================\n//  ===============================================================================================================\n\n/**\n * Add points to a group.\n *\n * @param points List of points to add.\n * @param group_name Name of group to add to.\n * @returns True if all points were successfully added.\n */\nexport function addToGroup(points: gs.IPoint | gs.IPoint[], group_name: string): boolean {\n    if (!Array.isArray(points)) {points = [points];}\n    const model: gs.IModel = error.checkPointList(points, 1);\n    const group: gs.IGroup = error.checkGroup(model, group_name);\n    let ok: boolean = true;\n    for (const point of points) {\n        if (!point.exists()) {error.pointNotExist();}\n        if (point.getModel() !== model) {error.pointInOtherModel();}\n        if (!group.addPoint(point as gs.IPoint)) {ok = false;}\n    }\n    return ok;\n}\n\n/**\n * Remove points from a group.\n *\n * @param group Name of group to remove from.\n * @param objs List of point to remove.\n * @returns True if all points we successfully removed.\n */\nexport function removeFromGroup(points: gs.IPoint[] | gs.IPoint, group_name: string): boolean {\n    if (!Array.isArray(points)) {points = [points];}\n    const model: gs.IModel = error.checkPointList(points, 1);\n    const group: gs.IGroup = error.checkGroup(model, group_name);\n    let ok: boolean = true;\n    for (const point of points) {\n        if (!point.exists()) {error.pointNotExist();}\n        if (point.getModel() !== model) {error.pointInOtherModel();}\n        if (!group.removePoint(point as gs.IPoint)) {ok = false;}\n    }\n    return ok;\n}\n\n","/**\r\n * Query functions check if an entity fufils certain conditions.\r\n */\r\n\r\n/**\r\n *\r\n */\r\n\r\nimport * as gs from \"gs-json\";\r\n\r\n//  ===============================================================================================================\r\n//  Query Functions ===============================================================================================\r\n//  ===============================================================================================================\r\n\r\n/**\r\n *\r\n */\r\n\r\nconst x = \"temp\";\r\n\r\nexport module Query{\r\n    export function set(__model__: any[], indices: number[], statement: string): void{\r\n        let properties: any = statement.split('&');\r\n        properties = properties.map(prop => {\r\n            let property = prop.trim().substring(1).split('=');\r\n            property[0] =  property[0].trim();\r\n            property[1] =  property[1].trim();\r\n            property[1] =  property[1].substring(1,property[1].length-1).trim();\r\n            return property\r\n        });\r\n        for (let index of indices){\r\n            if (index > __model__.length) {\r\n                return\r\n            } \r\n            for (let property of properties){\r\n                __model__[index][\"properties\"][property[0]] = property[1];\r\n            }\r\n        }\r\n    }\r\n\r\n    export function get(__model__: JSON[], statement: string): any{\r\n        let property: any = statement.substring(1);\r\n        if (property.indexOf('==') != -1){\r\n            property = property.split('==');\r\n            property[0] =  property[0].trim();\r\n            property[1] =  property[1].trim();\r\n            property[1] =  property[1].substring(1,property[1].length-1).trim();\r\n    \r\n            let result = [];\r\n            \r\n            for (let i = 0; i < __model__.length; i++){\r\n                if (__model__[i][\"properties\"][property[0]] == property[1]){\r\n                    result.push(i)\r\n                }\r\n            }\r\n            return result\r\n        } else if (property.indexOf('!=') != -1) {\r\n            property = property.split('!=');\r\n            property[0] =  property[0].trim();\r\n            property[1] =  property[1].trim();\r\n            property[1] =  property[1].substring(1,property[1].length-1).trim();\r\n    \r\n            let result = [];\r\n            \r\n            for (let i = 0; i < __model__.length; i++){\r\n                if (__model__[i][\"properties\"][property[0]] != property[1]){\r\n                    result.push(i)\r\n                }\r\n            }\r\n            return result\r\n        /*\r\n        } else if (property.indexOf('>=') != -1) {\r\n            property = property.split('>=');\r\n            property[1] =  property[1].substring(1,property[1].length-1)\r\n    \r\n            let result = [];\r\n            \r\n            for (let i = 0; i < __model__.length; i++){\r\n                if (__model__[i][\"properties\"][property[0]] >= property[1]){\r\n                    result.push(i)\r\n                }\r\n            }\r\n            return result\r\n        } else if (property.indexOf('<=') != -1) {\r\n            property = property.split('<=');\r\n            property[1] =  property[1].substring(1,property[1].length-1)\r\n    \r\n            let result = [];\r\n            \r\n            for (let i = 0; i < __model__.length; i++){\r\n                if (__model__[i][\"properties\"][property[0]] <= property[1]){\r\n                    result.push(i)\r\n                }\r\n            }\r\n            return result\r\n        */\r\n        }\r\n    }\r\n\r\n}\r\n","/**\n * Rays are a type of object.\n *\n * Rays are imaginary lines that stretch infinitely along an axis and are defined by a single vector.\n */\n\nimport * as gs from \"gs-json\";\n\n//  ===============================================================================================================\n//  Ray Get =======================================================================================================\n//  ===============================================================================================================\n\n/**\n * Gets a ray from the model based on an index number\n * @param model Model to get ray from\n * @param id Index number of ray\n * @returns Ray object if successful\n */\nexport function Get(model: gs.IModel, id: number): gs.IRay {\n    // check args\n    const obj: gs.IObj = model.getGeom().getObj(id);\n    if (obj === undefined) {return null;}\n    if (obj.getObjType() !== gs.EObjType.ray) {\n        throw new Error(\"Object is not a ray. Object type is: \" + obj.getObjType());\n    }\n    // return the ray\n    return obj as gs.IRay;\n}\n\n/**\n * Create a copy of a ray.\n *\n * @param ray The ray to copy.\n * @returns A new ray.\n */\nexport function Copy(ray: gs.IRay, copy_attribs?: boolean): gs.IRay {\n    // check args\n    if (!ray.exists()) {throw new Error(\"ray has been deleted.\");}\n    // copy and return\n    return ray.copy(copy_attribs) as gs.IRay;\n}\n\n/**\n * Copies a ray from one model into another model.\n *\n * @param ray The ray object to copy.\n * @returns The ray object in the model.\n */\nexport function CopyToModel(model: gs.IModel, ray: gs.IRay): gs.IRay {\n    // check args\n    if (!ray.exists()) {throw new Error(\"Error: ray has been deleted.\");}\n    // check it is not already in the model\n    if (ray.getModel() === model) {throw new Error(\"Error: ray is already in model.\");}\n    // copy circle and return it\n    return model.getGeom().copyRayFromModel(ray);\n}\n\n//  ===============================================================================================================\n//  Ray Constructors ==============================================================================================\n//  ===============================================================================================================\n\n/**\n * Creates a ray from an origin point and one direction vector describing its direction\n * @param origin 3D point to use as origin of plane\n * @param vector Direction vector describing direction of ray\n * @returns New ray if successful, null if unsuccessful or on error\n */\nexport function FromOriginVector(origin: gs.IPoint, vector: gs.XYZ): gs.IRay {\n    // check args\n    if (!origin.exists()) {throw new Error(\"Arg origin has been deleted.\");}\n    // create the new ray and return\n    return origin.getGeom().addRay(origin, vector);\n}\n\n//  ===============================================================================================================\n//  Ray Functions =================================================================================================\n//  ===============================================================================================================\n","/**\n * Functions for splitting geometric objects that insersect with one another.\n */\n\n/**\n * Split functions split one geometric object with another geometric object.\n * Splitting can be done either in 2D or in 3D, as indicated by the name of the split function.\n * The result of a split function will vary depending on the types of objects being split.\n */\n\nimport * as gs from \"gs-json\";\nimport * as gsm from \"./index\";\nimport * as three from \"three\";\nimport * as threex from \"./libs/threex/threex\";\nimport * as circles from \"./libs/conics/circles\";\nimport * as poly from \"./libs/poly/poly\";\nimport * as polylinePlane from \"./libs/poly/polylinePlane\";\nimport * as error from \"./_error_msgs_dev\";\n\n//  ===============================================================================================================\n//  Split Constructors ============================================================================================\n//  ===============================================================================================================\n\n//  ===============================================================================================================\n//  Split Functions ===============================================================================================\n//  ===============================================================================================================\n\n/**\n * Splits two co-planar circles.\n * If an intersection is found, then new arcs will be generated and the old circles will be deleted.\n * Returns null if circles are not co-planar.\n * Returns null if circles do not intersect.\n *\n * @param circle1 Circle object, the circle to split.\n * @param circle2 Circle object.\n * @returns Four circle objects (arcs) if successful, null if no intersection was found.\n */\nexport function circleCircle2D(circle1: gs.ICircle, circle2: gs.ICircle): gs.ICircle[] {\n    const model: gs.IModel = error.checkObjList([circle1, circle2], 2, gs.EObjType.circle);\n    const geom: gs.IGeom = model.getGeom();\n    // do intersection\n    let points: gs.IPoint[] = circles.isectCircleCircle2D(circle1, circle2);\n    if (points === null) {return null;}\n    if (points.length !== 2) {return null;}\n    const circle1_origin: gs.IPoint = circle1.getOrigin();\n    const circle2_origin: gs.IPoint = circle2.getOrigin();\n    // get the 2 intersection points in the right order\n    const order_pt0: three.Vector3 = threex.vectorFromPointsAtoB(circle1_origin, points[0]);\n    const order_pt1: three.Vector3 = threex.vectorFromPointsAtoB(circle1_origin, points[1]);\n    const angle_check: number = order_pt0.angleTo(order_pt1)*180/Math.PI;\n    if(angle_check > 180) {points = [points[1],points[0]];}\n\n    // arc 1 vectors\n    const vec1_x: three.Vector3 = threex.vectorFromPointsAtoB(circle1_origin, points[1]);\n    const vec1_2nd_x: three.Vector3 = threex.vectorFromPointsAtoB(circle1_origin, points[0]);\n    const vec1_y: three.Vector3 = (threex.orthoVectors(vec1_x, vec1_2nd_x).normalize())\n        .multiplyScalar(vec1_x.length());\n    const vec1_2nd_y: three.Vector3 = threex.orthoVectors(vec1_2nd_x,vec1_x).normalize()\n        .multiplyScalar(-vec1_2nd_x.length());\n    // arc 1 angle\n    const angle1: number = vec1_x.angleTo(vec1_2nd_x) * 180/Math.PI;\n    // arc 1 a\n    const vec1_x_xyz: gs.XYZ = vec1_x.toArray() as gs.XYZ;\n    const vec1_y_xyz: gs.XYZ = vec1_y.toArray() as gs.XYZ;\n    const arc1_a: gs.ICircle = geom.addCircle(\n        circle1_origin, vec1_x_xyz, vec1_y_xyz, [0, angle1]);\n    // arc 1 b\n    const vec1_2nd_x_xyz: gs.XYZ = vec1_2nd_x.toArray() as gs.XYZ;\n    const vec1_2nd_y_xyz: gs.XYZ = vec1_2nd_y.toArray() as gs.XYZ;\n    const arc1_b: gs.ICircle = geom.addCircle(\n        circle1_origin, vec1_2nd_x_xyz, vec1_2nd_y_xyz, [0, (360 - angle1)]);\n\n    // arc 2 vectors\n    const vec2_x: three.Vector3 = threex.vectorFromPointsAtoB(circle2_origin, points[0]);\n    const vec2_2nd_x: three.Vector3 = threex.vectorFromPointsAtoB(circle2_origin, points[1]);\n    const vec2_y: three.Vector3 = (threex.orthoVectors(vec2_x, vec2_2nd_x).normalize())\n        .multiplyScalar(vec2_x.length());\n    const vec2_2nd_y: three.Vector3 = (threex.orthoVectors(vec2_2nd_x, vec2_x).normalize())\n        .multiplyScalar(-vec2_x.length());\n    // arc 2 angle\n    const angle2: number = vec2_x.angleTo(vec2_2nd_x) * 180/Math.PI;\n    // arc 2 a\n    const vec2_x_xyz: gs.XYZ = vec2_x.toArray() as gs.XYZ;\n    const vec2_y_xyz: gs.XYZ = vec2_y.toArray() as gs.XYZ;\n    const arc2_a: gs.ICircle = geom.addCircle(\n        circle2_origin, vec2_x_xyz, vec2_y_xyz, [0, angle2]);\n    // arc 2 b\n    const vec2_2nd_x_xyz: gs.XYZ = vec2_2nd_x.toArray() as gs.XYZ;\n    const vec2_2nd_y_xyz: gs.XYZ = vec2_2nd_y.toArray() as gs.XYZ;\n    const arc2_b: gs.ICircle = geom.addCircle(\n        circle2_origin, vec2_2nd_x_xyz, vec2_2nd_y_xyz, [0, (360 - angle2)]);\n    // delete the old circles\n    geom.delObj(circle1, false);\n    geom.delObj(circle2, false);\n    // return arcs\n    return [arc1_b, arc1_a, arc2_a, arc2_b];\n\n}\n\n/**\n * Splits a polyine by a plane.\n * If intersection are found, then new polylines will be generated and the old polyline will be deleted.\n * If no intersections are found, then null is return and the old polyline remains unchanged.\n *\n * @param pline Polyline\n * @param plane Plane\n * @returns List of polylines.\n */\nexport function polylinePlane3D(pline: gs.IPolyline, plane: gs.IPlane): gs.IPolyline[] {\n    const model: gs.IModel = error.checkObj(pline, gs.EObjType.polyline);\n    error.checkObj(plane, gs.EObjType.plane);\n    error.checkObjsSameModel([pline, plane]);\n    const result: gs.IPolyline[] = polylinePlane.splitPolylinePlane3D(pline, plane);\n    if (result !== null) {model.getGeom().delObj(pline, false);}\n    return result;\n}\n\n/**\n * Finds the intersection points between two coplanar polylines, and splits the polylines at those points.\n * If intersections are found, then new polylines will be generated and the old polyline will be deleted.\n * If no intersections are found, then null is return and the old polyline remains unchanged.\n *\n * @param pline1 The first polyline.\n * @param pline2 The second polylne.\n * @returns List of list of polylines. The first list containts the pieces from the first polyline.\n * The secbd list, the pieces from the second polyline.\n */\nexport function polylinePolyline2D(pline1: gs.IPolyline, pline2: gs.IPolyline): gs.IPolyline[][] {\n    error.checkObjList([pline1, pline2], 2, gs.EObjType.polyline);\n    return poly._splitPolylinePolyline2D(pline1, pline2);\n}\n","/**\r\n * The <i>String</i> module provides a set of functions for working with strings.\r\n * Strings are a data type for representing text, consisting of a sequence of characters.<br/>\r\n *\r\n * When instantiating a string, use double quotes as follows: <code>\"This is some text.\"</code>.<br/>\r\n *\r\n * Regular expressions can be used to search for character matches in strings.\r\n */\r\n\r\nimport * as gs from \"gs-json\";\r\n\r\n//  ===============================================================================================================\r\n//  String functions ==============================================================================================\r\n//  ===============================================================================================================\r\n\r\n/**\r\n * Checks if a string starts with the specified start string.\r\n *\r\n * @param str String to check.\r\n * @param start_str Start tring.\r\n * @returns True if str starts with search_str, false otherwise.\r\n *\r\n * <h3>Example:</h3>\r\n * <code>\r\n * string = \"Orange\"<br/>\r\n * result = String.startsWith(string,\"Or\")<br/>\r\n * </code>\r\n * <br/>Expected value of result is true.\r\n */\r\nexport function startsWith(str: string, start_str: string): boolean {\r\n    if (str === undefined) {throw new Error(\"Invalid arg: str must be defined.\");}\r\n    if (start_str === undefined) {throw new Error(\"Invalid arg: start_str must be defined.\");}\r\n    return str.startsWith(start_str);\r\n}\r\n\r\n/**\r\n * Checks if a string ends with a specified end string.\r\n *\r\n * @param str String to check.\r\n * @param end_str End string.\r\n * @returns True if str ends with search_str, false otherwise.\r\n *\r\n * <h3>Example:</h3>\r\n * <code>string = \"Orange\"<br/>\r\n * result = String.endsWith(string,\"ge\")<br/></code>\r\n * <br/>Expected value of result is true.\r\n */\r\nexport function endsWith(str: string, end_str: string): boolean {\r\n    if (str === undefined) {throw new Error(\"Invalid arg: str must be defined.\");}\r\n    if (end_str === undefined) {throw new Error(\"Invalid arg: end_str must be defined.\");}\r\n    return str.endsWith(end_str);\r\n}\r\n\r\n/**\r\n * Checks if a string contains a specified search string.\r\n *\r\n * @param str String to search.\r\n * @param search_str Sub-string to search for.\r\n * @returns True if str contains search_str, false otherwise.\r\n *\r\n * <h3>Example:</h3>\r\n * <code>string = \"Orange\"<br/>\r\n * incl = String.includes(string,\"an\")<br/></code>\r\n * <br/>Expected value of incl is true.\r\n */\r\nexport function includes(str: string, search_str: string): boolean {\r\n    if (str === undefined) {throw new Error(\"Invalid arg: str must be defined.\");}\r\n    if (search_str === undefined) {throw new Error(\"Invalid arg: search_str must be defined.\");}\r\n    return str.includes(search_str);\r\n}\r\n\r\n/**\r\n * Returns the number of characters in a string.\r\n *\r\n * @param str String to find length of.\r\n * @returns Length of string.\r\n *\r\n * <h3>Example:</h3>\r\n * <code>string = \"Orange\"<br/>\r\n * length = String.len(string)<br/></code>\r\n * <br/>Expected value of length is 6.\r\n */\r\nexport function len(str: string): number {\r\n    if (str === undefined) {throw new Error(\"Invalid arg: str must be defined.\");}\r\n    return str.length;\r\n}\r\n\r\n/**\r\n * Searches for and replaces the specified search string in a string.\r\n * The search string can also be a regular expression.\r\n *\r\n * @param str String.\r\n * @param search_str Sub-string or regular expression to search for.\r\n * @param new_str Replacement string.\r\n * @returns New string with replaced characters.\r\n *\r\n * <h3>Example:</h3>\r\n * <code>string = \"Orange\"<br/>\r\n * newString = String.Replace(string,\"O\",\"Ar\")<br/></code>\r\n * <br/>Expected value of newString is \"Arrange\".\r\n */\r\nexport function replace(str: string, search_str: string, new_str: string): string {\r\n    if (str === undefined) {throw new Error(\"Invalid arg: str must be defined.\");}\r\n    if (search_str === undefined) {throw new Error(\"Invalid arg: search_str must be defined.\");}\r\n    if (new_str === undefined) {throw new Error(\"Invalid arg: new_str must be defined.\");}\r\n    return str.replace(search_str, new_str);\r\n}\r\n\r\n/**\r\n * Returns the position index of the first occurance of the specified search string within a string.\r\n * If the specified sub-string cannot be found, then returns -1.\r\n *\r\n * @param str String to check.\r\n * @param search_str Sub-string or regular expression to search for.\r\n * @returns Number that represents position of search_str in str.\r\n *\r\n * <h3>Example:</h3>\r\n * <code>string = \"Orange\"<br/>\r\n * search = String.search(string,\"e\")<br/></code>\r\n * <br/>Expected value of search is 5.\r\n */\r\nexport function search(str: string, search_str: string): number {\r\n    if (str === undefined) {throw new Error(\"Invalid arg: str must be defined.\");}\r\n    if (search_str === undefined) {throw new Error(\"Invalid arg: search_str must be defined.\");}\r\n    return str.search(search_str);\r\n}\r\n\r\n/**\r\n * Splits a string into a list of substrings using a specified separator string.\r\n *\r\n * @param str String.\r\n * @param separator String of characters used to split string.\r\n * @returns List of substrings.\r\n *\r\n * <h3>Example:</h3>\r\n * <code>string = \"Orange\"<br/>\r\n * split = String.split(string,\"a\")<br/></code>\r\n * <br/>Expected value of split is [\"Or\",\"nge\"].\r\n */\r\nexport function split(str: string, separator: string): string[] {\r\n    if (str === undefined) {throw new Error(\"Invalid arg: str must be defined.\");}\r\n    if (separator === undefined) {throw new Error(\"Invalid arg: separator must be defined.\");}\r\n    return str.split(separator);\r\n}\r\n\r\n/**\r\n * Extracts characters in a string between two specified indices and returns it as a new string.\r\n * Start index is inclusive and end index is exclusive.\r\n *\r\n * @param str String.\r\n * @param start Zero-based index to start extracting characters (inclusive).\r\n * @param end Zero-based index to stop extracting characters (exclusive).\r\n * @returns New string with extracted characters.\r\n *\r\n * <h3>Example:</h3>\r\n * <code>string = \"Orange\"<br/>\r\n * substring = String.substring(string,1,4)<br/></code>\r\n * <br/>Expected value of ends is \"ran\".\r\n */\r\nexport function substring(str: string, start: number, end: number): string {\r\n    if (str === undefined) {throw new Error(\"Invalid arg: str must be defined.\");}\r\n    return str.substring(start,end);\r\n}\r\n","/**\n * Topology are sub-components within each object that are connected together.<br/>\n * Topology consists of vertices, edges, wires and faces.<br/>\n */\n\n/**\n *\n */\n\nimport * as gs from \"gs-json\";\n\n//  ===============================================================================================================\n//  Topo Constructors =============================================================================================\n//  ===============================================================================================================\n\n//  ===============================================================================================================\n//  Topo Functions ================================================================================================\n//  ===============================================================================================================\n\n/**\n *\n */\n\nconst x = \"temp\";\n","import { Injectable } from '@angular/core';\r\nimport { IMobius } from '@models/mobius';\r\nimport { IFlowchart, FlowchartUtils } from '@models/flowchart';\r\nimport { INode } from '@models/node'; \r\n\r\n\r\n@Injectable()\r\nexport class DataService {\r\n  private static _data: IMobius = {\r\n    name: \"default_file\",\r\n    author: \"new_user\", \r\n    last_updated: new Date(),\r\n    version: 1,\r\n    flowchart: FlowchartUtils.newflowchart()\r\n  }; \r\n\r\n  private static _selected: number = 0;\r\n\r\n    get file(){ return DataService._data; }\r\n    set file(data: IMobius){ \r\n        DataService._data = <IMobius>{\r\n            name: data.name, \r\n            author: data.author, \r\n            flowchart: data.flowchart, \r\n            last_updated: data.last_updated, \r\n            version: data.version\r\n        };\r\n    }\r\n\r\n    get flowchart(): IFlowchart{ return DataService._data.flowchart; }\r\n    get node(): INode{ return DataService._data.flowchart.nodes[DataService._selected] };\r\n}","export * from './data.service';\r\nexport * from './viewer.service';","import { Injectable, ComponentFactoryResolver, Injector  } from '@angular/core';\r\nimport { Observable, Subject } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class ViewerService {\r\n    contextReceivedSource = new Subject<any>();\r\n    contextReceived$ = this.contextReceivedSource.asObservable();\r\n\r\n    receiveContext(componentFactoryResolver: ComponentFactoryResolver, injector: Injector) {\r\n        this.contextReceivedSource.next({ resolver: componentFactoryResolver, injector: injector });\r\n    }\r\n}","module.exports = \"<div class='viewer-container'>  \\r\\n    <div class='container__header'>\\r\\n        <div class=\\\"tab\\\">\\r\\n            <button class='btn-tab' \\r\\n            [class.active]='view.name == activeView.name'\\r\\n            *ngFor='let view of Viewers;' \\r\\n            (click)='updateView(view)'>\\r\\n            {{view.name}}\\r\\n            </button>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <ng-container #vc></ng-container>\\r\\n</div>\"","module.exports = \".viewer-container {\\n  height: 100%; }\\n\\n.container__header {\\n  flex: 0 1 auto;\\n  min-height: 35px;\\n  display: flex;\\n  flex-direction: row;\\n  justify-content: space-between;\\n  padding: 0px 0px 0px 15px;\\n  background-color: #ccc;\\n  border-bottom: 3px solid #eeeeee;\\n  line-height: 35px;\\n  font-size: 18px;\\n  font-weight: 600;\\n  text-align: center; }\\n\\nbutton.btn {\\n  margin: 10px;\\n  font-size: 14px;\\n  line-height: 18px;\\n  border: 2px solid gray;\\n  border-radius: 4px;\\n  padding: 2px 10px;\\n  background-color: transparent;\\n  color: #505050; }\\n\\nbutton.btn:hover {\\n  color: blue; }\\n\\n/* tab styling */\\n\\n.tab {\\n  border: 2px;\\n  overflow: hidden;\\n  background-color: #ccc; }\\n\\n.tab button {\\n  display: inline-block;\\n  vertical-align: bottom;\\n  background-color: inherit;\\n  color: #505050;\\n  border: none;\\n  outline: none;\\n  cursor: pointer;\\n  padding: 8px 10px;\\n  transition: 0.3s;\\n  font-size: 14px; }\\n\\n.tab button:hover {\\n  color: blue; }\\n\\n.tab button.active {\\n  background-color: #ccc;\\n  color: #000096;\\n  font-weight: 600;\\n  border-color: #222 !important; }\\n\"","import { Component, Injector, Input, \r\n    ViewChild, ViewContainerRef, ComponentFactoryResolver, OnDestroy, ComponentRef } from '@angular/core';\r\nimport { INode } from '@models/node';\r\nimport { IView , gs_default, cesium_default} from './view.interface';\r\nimport { Viewers } from './viewers.config';\r\nimport * as gs from 'gs-json';\r\n\r\n@Component({\r\n    selector: 'mviewer',\r\n    templateUrl:  'mobius-viewer.component.html',    \r\n    styleUrls: ['mobius-viewer.component.scss']\r\n})\r\nexport class ViewerContainerComponent implements OnDestroy {\r\n\r\n    @ViewChild('vc', {read: ViewContainerRef}) vc: ViewContainerRef;\r\n    @Input() node: INode;\r\n\r\n    constructor(private injector: Injector, private r: ComponentFactoryResolver) {}\r\n\r\n    private views = [];\r\n    private activeView: IView;\r\n    Viewers = Viewers;\r\n\r\n    ngOnInit(){\r\n        this.activeView = this.Viewers[0];\r\n        this.updateView( this.activeView );\r\n    }\r\n\r\n    ngOnDestroy(){\r\n        console.log('onDestroy')\r\n        for (let view of this.views){\r\n            view.destroy();\r\n        }\r\n    }\r\n\r\n    ngOnChanges(){\r\n        this.updateValue();\r\n    }\r\n\r\n    createView(view: IView){\r\n        let component = view.component;\r\n        let factory = this.r.resolveComponentFactory(component);\r\n        let componentRef = factory.create(this.injector);\r\n        componentRef.instance[\"node\"] = this.node;\r\n        if (view.name == 'mobius-cesium'){\r\n            componentRef.instance[\"mode\"] = 'editor';\r\n        }\r\n        return componentRef;\r\n    }\r\n\r\n    updateView(view: IView): void{\r\n        this.activeView = view;\r\n\r\n        if( this.views[ this.activeView.name ] == undefined){\r\n            this.views[ this.activeView.name ] = this.createView(view);\r\n        } else{\r\n            this.updateValue();\r\n        }\r\n\r\n        this.vc.detach();\r\n        this.vc.insert( this.views[ this.activeView.name ].hostView );\r\n    }\r\n\r\n    updateValue(){\r\n        try{\r\n            let componentRef =  this.views[ this.activeView.name ]; \r\n            componentRef.instance[\"node\"] = this.node;\r\n        }\r\n        catch(ex){\r\n            console.log(`Active View not defined`);\r\n        }\r\n    }\r\n}","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common'; \r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { ViewerContainerComponent } from './mobius-viewer.component';\r\nimport { VIEWER_ARR } from './viewers.config';\r\n\r\nimport { GSViewer } from './viewers/gs-viewer/gs-viewer.module';\r\n\r\nimport {MobiusCesium} from './viewers/mobius-cesium/mobius-cesium.module';\r\nimport { TextViewerComponent} from './viewers';\r\nimport { ConsoleViewerComponent } from './viewers';\r\n//import { VisualiseComponent } from \"./viewers/mobius-cesium/setting/visualise.component\";\r\n//import { AttributesComponent } from \"./viewers/mobius-cesium/setting/attributes.copmponent\";\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ViewerContainerComponent,\r\n    TextViewerComponent,\r\n    ConsoleViewerComponent,\r\n  ],\r\n  exports: [ ViewerContainerComponent ],\r\n  imports: [ CommonModule, \r\n            FormsModule,\r\n            GSViewer,\r\n            MobiusCesium,\r\n          ],\r\n  entryComponents: [\r\n    ...VIEWER_ARR \r\n  ],\r\n  providers: [ ]\r\n})\r\nexport class MobiusViewerModule {\r\n    constructor () { }\r\n}\r\n","import { IView } from './view.interface'; \r\n// Step-1: Add new ViewerComponet here\r\nimport { TextViewerComponent } from './viewers';\r\nimport { GSViewerComponent } from './viewers/gs-viewer/gs-viewer.component';\r\nimport { ConsoleViewerComponent } from './viewers/console-viewer.component';\r\n\r\nexport const VIEWER_ARR = [\r\n    TextViewerComponent, \r\n    ConsoleViewerComponent, \r\n    //JSONViewerComponent, \r\n    //ThreeViewerComponent\r\n    // Step-2: Add Component here\r\n    //CesiumViewerComponent,\r\n    GSViewerComponent,\r\n    //MobiuscesiumComponent,\r\n];\r\n\r\nexport const Viewers: IView[] = [\r\n    { name: 'Summary', icon: undefined, component: TextViewerComponent },\r\n    { name: 'gs-viewer', icon: undefined, component: GSViewerComponent },\r\n    { name: 'Console', icon: undefined, component: ConsoleViewerComponent },\r\n    // { name: 'json-viewer', icon: undefined, component: JSONViewerComponent },\r\n    // Step-3: Add Viewer Definition here: name, icon and component\r\n    //{ name: 'three-viewer', icon: undefined, component: ThreeViewerComponent },\r\n    //{ name: 'cesium-viewer', icon: undefined, component: CesiumViewerComponent },\r\n    //{ name: 'mobius-cesium', icon: undefined, component: MobiuscesiumComponent },\r\n];\r\n\r\n","import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'console-viewer',\r\n  template: `<h3></h3>\r\n             <div>{{ consoleText || \"\" }}</div>`,\r\n  styles: []\r\n})\r\nexport class ConsoleViewerComponent{\r\n    @Input() node; \r\n    consoleText: string;\r\n    constructor(){ \r\n      console.log(`Console Viewer Created`); \r\n      this.consoleText = console.log.bind(console);\r\n  }\r\n}","import { Injector } from '@angular/core';\r\nimport { DataService } from \"./data.service\";\r\nimport { Subscription } from 'rxjs/Subscription';\r\n\r\nexport class DataSubscriber{\r\n\r\n\tprotected dataService: DataService;\r\n\tprivate _subscription: Subscription;\r\n\tprivate _message: any;\r\n\r\n\tconstructor(injector: Injector){ \r\n\t\tthis.dataService = injector.get(DataService);\r\n\t\tthis._subscription = this.dataService.getMessage().subscribe(message => { \r\n\t      this._message = message; \r\n\t      this.notify(message.text);\r\n\t    });\r\n\t}\r\n\r\n\tnotify(message: string){ \r\n\t\tconsole.warn(\"Notify function not Implemented\");\r\n\t}\r\n}","import { Injectable, ElementRef } from '@angular/core';\r\nimport {Observable} from 'rxjs';\r\nimport {Subject} from 'rxjs/Subject';\r\n\r\nimport * as THREE from 'three';\r\nimport * as gs from 'gs-json';\r\nimport * as OrbitControls from 'three-orbit-controls';\r\n\r\n\r\n@Injectable()\r\nexport class DataService {\r\n  \r\n  private _OC: OrbitControls; \r\n\r\n  // gs-model that needs to be displayed\r\n  private _gsModel: gs.IModel;\r\n\r\n  // three scene \r\n  private _scene:  THREE.Scene;\r\n  private _renderer: THREE.WebGLRenderer;\r\n  private _camera: THREE.PerspectiveCamera;\r\n  private _orbitControls: THREE.OrbitControls;\r\n\r\n  // width and height\r\n  // only set once the scene has been called\r\n  private _width: number; \r\n  private _height: number;\r\n\r\n  _saturation:any;\r\n  _lightness:any;\r\n  _alight:any;\r\n  _Geom:any;\r\n  hue: number;\r\n  saturation:number;\r\n  lightness:number;\r\n  scenechange:any;\r\n  INTERSECTEDColor:any;\r\n  selecting:any = [];\r\n  axis:boolean;\r\n  grid:boolean=true;\r\n  shadow:boolean;\r\n  frame:boolean;\r\n  raycaster:THREE.Raycaster;\r\n  visible:string;\r\n  scenechildren:Array<any>=[];\r\n  center:THREE.Vector3;\r\n  scenemaps:{\r\n          scene: gs.IThreeScene, \r\n          faces_map: Map<number, gs.ITopoPathData>, \r\n          wires_map: Map<number, gs.ITopoPathData>, \r\n          edges_map: Map<number, gs.ITopoPathData>,\r\n          vertices_map: Map<number, gs.ITopoPathData>,\r\n          points_map: Map<number, gs.ITopoPathData>} ;\r\n  textlabels:Array<any>=[];\r\n  attributevertix:Array<any>;\r\n  centerx:number;\r\n  centery:number;\r\n  centerz:number;\r\n  centersize:number;\r\n  pointsize:number;\r\n  materialpoint:number;\r\n  clickshow:Array<any>;\r\n  point:boolean=true;\r\n  click:boolean=false;\r\n  SelectVisible:string;\r\n  pointradius:number;\r\n  label:Array<any>;\r\n  checkX:boolean;\r\n  checkY:boolean;\r\n  checkZ:boolean;\r\n  checkvertixid:boolean;\r\n  pointid:boolean;\r\n  checkface:boolean;\r\n  checkpoint:boolean;\r\n  checkobj:boolean;\r\n  checkx:boolean;\r\n  checky:boolean;\r\n  checkz:boolean;\r\n  checkpointid:boolean=false;\r\n  checkedgeid:boolean=false;\r\n  checkname:Array<any>;\r\n  getpoints:Array<any>;\r\n  pointname:Array<any>;\r\n  imVisible:boolean=false;\r\n\r\n  // ---- \r\n  // Subscription Handling\r\n  // \r\n  private subject = new Subject<any>();\r\n  sendMessage(message?: string) {\r\n      this.subject.next({ text: message });\r\n  }\r\n \r\n  clearMessage() {\r\n      this.subject.next();\r\n  }\r\n\r\n  getMessage(): Observable<any> {\r\n      return this.subject.asObservable();\r\n  }\r\n\r\n\r\n  constructor() { \r\n\r\n    // intializations\r\n    // this only runs once\r\n\r\n    let default_width: number = 1510, default_height: number = 720;\r\n\r\n    // scene\r\n    let scene: THREE.Scene = new THREE.Scene();\r\n    scene.background = new THREE.Color( 0xcccccc );\r\n\r\n    // renderer\r\n    let renderer: THREE.WebGLRenderer =  new THREE.WebGLRenderer( {antialias: true} );\r\n    renderer.setPixelRatio( window.devicePixelRatio );\r\n\r\n\r\n    // camera settings\r\n    let aspect_ratio: number = this._width/this._height\r\n    let camera = new THREE.PerspectiveCamera( 50, aspect_ratio, 0.01, 1000 );//0.0001, 100000000 );\r\n    camera.position.y=10;\r\n    camera.up.set(0,0,1);\r\n    camera.lookAt( scene.position );\r\n    camera.updateProjectionMatrix();\r\n\r\n    // orbit controls\r\n    let _OC = OrbitControls(THREE);\r\n    let controls: THREE.OrbitControls = new _OC( camera, renderer.domElement );\r\n    controls.enableKeys = false;\r\n\r\n    // default directional lighting\r\n    let directional_light :THREE.DirectionalLight = new THREE.DirectionalLight( 0xffffff,0.5);\r\n    directional_light.castShadow = false; \r\n    directional_light.position.copy( camera.position );\r\n    controls.addEventListener('change',function(){\r\n      directional_light.position.copy(camera.position);\r\n    });\r\n    directional_light.target.position.set( 0, 0, 0 );\r\n    \r\n    scene.add( directional_light );\r\n\r\n    // default ambient lighting\r\n    let default_hue: number = 0;\r\n    let default_saturation: number = 0.01;\r\n    let default_lightness: number = 0.47;\r\n\r\n    var hemi_light = new THREE.HemisphereLight( 0xffffff, 0.5 );\r\n    hemi_light.color.setHSL( default_hue, default_saturation, default_lightness);\r\n    scene.add( hemi_light );\r\n\r\n    this._scene = scene;\r\n    this._renderer = renderer;\r\n    this._camera = camera; \r\n    this._orbitControls = controls;\r\n\r\n    // add it to alight - what does alight do?\r\n    this._alight = hemi_light;\r\n    //this._alight.push(hemi_light);\r\n    this.checkname=[];\r\n    this.pointname=[];\r\n    \r\n  }\r\n\r\n  //\r\n  //  Getter and Setting for gs-model\r\n  //\r\n  getGsModel(): gs.IModel{\r\n    return this._gsModel; \r\n  }\r\n\r\n  setGsModel(model: gs.IModel){\r\n    this._gsModel = model;\r\n    if(this._gsModel!==undefined){\r\n      this.generateSceneMaps();\r\n    }\r\n    else{\r\n      // remove all children from the scene\r\n      for(var i=0;i<this._scene.children.length;i++){\r\n        if(this._scene.children[i].type===\"Scene\"){\r\n          this._scene.remove(this._scene.children[i]);\r\n        }\r\n      }\r\n    }\r\n    this.sendMessage(\"model_update\");\r\n  }\r\n\r\n  generateSceneMaps():void{\r\n    var scene_and_maps:any/*{\r\n          scene: gs.IThreeScene, \r\n          faces_map: Map<number, gs.ITopoPathData>, \r\n          wires_map: Map<number, gs.ITopoPathData>, \r\n          edges_map: Map<number, gs.ITopoPathData>,\r\n          vertices_map: Map<number, gs.ITopoPathData>,\r\n          points_map: Map<number, gs.ITopoPathData>}*/= gs.genThreeOptModelAndMaps( this._gsModel );\r\n    this.scenemaps=scene_and_maps;\r\n  }\r\n  getscememaps():any{\r\n    return this.scenemaps;\r\n\r\n  }\r\n\r\n  getScene(width?: number, height?: number): THREE.Scene{\r\n    if(width && height){\r\n      this._width = width; \r\n      this._height = height;\r\n    }\r\n\r\n  \treturn this._scene;\r\n  }\r\n\r\n  getRenderer(): THREE.WebGLRenderer{\r\n    this._camera.aspect = this._width / this._height;\r\n    this._camera.updateProjectionMatrix();\r\n    this._renderer.setSize(this._width, this._height);\r\n    return this._renderer;\r\n  }\r\n\r\n  getCamera(): THREE.PerspectiveCamera{\r\n    return this._camera;\r\n  }\r\n\r\n  getControls(): THREE.OrbitControls{\r\n    return this._orbitControls;\r\n  }\r\n\r\n  //\r\n  //\r\n  //\r\n  getalight():any{\r\n    return this._alight;\r\n  }\r\n  addraycaster(raycaster){\r\n    this.raycaster=raycaster;\r\n  }\r\n\r\n  getraycaster():THREE.Raycaster{\r\n    return this.raycaster;\r\n  }\r\n\r\n\r\n  gethue(_hue):any{\r\n    this.hue = _hue;\r\n  }\r\n  getsaturation(_saturation):any{\r\n    this.saturation = _saturation;\r\n  }\r\n  getlightness(_lightness):any{\r\n    this.lightness = _lightness;\r\n  }\r\n  \r\n  getpointsize(pointszie):void{\r\n    this.pointsize=pointszie;\r\n  }\r\n  getmaterialpoint(materialpoint):void{\r\n    this.materialpoint=materialpoint;\r\n  }\r\n  getradius(point):void{\r\n    this.pointradius=point;\r\n  }\r\n\r\n  getcenterx(centerx):void{\r\n    this.centerx=centerx;\r\n  }\r\n  getcentery(centery):void{\r\n    this.centery=centery;\r\n  }\r\n  getcenterz(centerz):void{\r\n    this.centerz=centerz;\r\n  }\r\n  getcentersize(centersize):void{\r\n    this.centersize=centersize;\r\n  }\r\n\r\n  addGeom(Geom): void{\r\n    this._Geom = Geom;\r\n  }\r\n\r\n  getGeom(): any{\r\n    return this._Geom;\r\n  }\r\n  addscenechange(scenechange){\r\n    this.scenechange=scenechange;\r\n  }\r\n  getscenechange():any{\r\n    return this.scenechange;\r\n  }\r\n  addINTERSECTEDColor(INTERSECTEDColor):void{\r\n    if(this.INTERSECTEDColor==null){\r\n      this.INTERSECTEDColor=INTERSECTEDColor;\r\n    }\r\n  }\r\n  getINTERSECTEDColor():any{\r\n    return this.INTERSECTEDColor\r\n  }\r\n  addselecting(selecting){\r\n    if(selecting[selecting.length-1]==undefined){\r\n      this.selecting=[];\r\n    }\r\n    this.sendMessage();\r\n  }\r\n  pushselecting(selecting){\r\n    this.selecting.push(selecting);\r\n    this.sendMessage();\r\n  }\r\n  spliceselecting(index,number){\r\n    this.selecting.splice(index,number);\r\n    this.sendMessage();\r\n  }\r\n  getselecting(){\r\n    return this.selecting;\r\n  }\r\n\r\n  addclickshow(clickshow){\r\n    this.clickshow=clickshow;\r\n  }\r\n\r\n  addattrvertix(attributevertix){\r\n    this.attributevertix=attributevertix;\r\n  }\r\n\r\n  getattrvertix(){\r\n    return this.attributevertix;\r\n  }\r\n\r\n  addgrid(grid){\r\n    this.grid=grid;\r\n  }\r\n  addaxis(axis){\r\n    this.axis=axis;\r\n  }\r\n  addshadow(shadow){\r\n    this.shadow=shadow;\r\n  }\r\n  addframe(frame){\r\n    this.frame=frame;\r\n  }\r\n  addpoint(point){\r\n  this.point=point;\r\n  }\r\n  getSelectingIndex(uuid):number {\r\n   for(var i=0;i<this.selecting.length;i++){\r\n     if(this.selecting[i].uuid==uuid){\r\n       return i;\r\n     }\r\n   }\r\n   return -1;\r\n }\r\n\r\n addscenechild(scenechildren){\r\n   this.scenechildren=scenechildren;\r\n   this.sendMessage();\r\n }\r\n getscenechild(){\r\n   this.sendMessage();\r\n   return this.scenechildren;\r\n }\r\n addlabel(label){\r\n   this.label=label;\r\n   this.sendMessage();\r\n }\r\n getlabel(){\r\n   this.sendMessage();\r\n   return this.label;\r\n }\r\n addgetpoints(getpoints){\r\n   this.getpoints=getpoints;\r\n }\r\n addpointname(pointname){\r\n   this.pointname=pointname;\r\n }\r\n\r\n\r\n //To add text labels just provide label text, label position[x,y,z] and its id\r\n  /*addTextLabel(label, label_xyz, id,index,path) {\r\n    //console.log(document.getElementsByTagName(\"app-viewer\")[0].children.namedItem(\"container\"));\r\n    //let container = this.myElement.nativeElement.children.namedItem(\"container\");\r\n    let container = document.getElementsByTagName(\"app-viewer\")[0].children.namedItem(\"container\");\r\n    let star = this.creatStarGeometry(label_xyz);\r\n    let textLabel=this.createTextLabel(label, star, id,index,path);\r\n    this.starsGeometry.vertices.push( star );\r\n    this.textlabels.push(textLabel);\r\n    this.pushselecting(textLabel);\r\n    container.appendChild(textLabel.element);\r\n  }\r\n\r\n  //To remove text labels just provide its id\r\n  removeTextLabel(id) {\r\n    let i=0;\r\n    for(i=0; i<this.textlabels.length; i++) {\r\n      if(this.textlabels[i].id==id) {\r\n        // let container = this.myElement.nativeElement.children.namedItem(\"container\");\r\n        let container = document.getElementsByTagName(\"app-viewer\")[0].children.namedItem(\"container\");\r\n        container.removeChild(this.textlabels[i].element);\r\n        let index = this.starsGeometry.vertices.indexOf(this.textlabels[i].parent);\r\n        if(index !== -1) {\r\n          this.starsGeometry.vertices.splice(index, 1);\r\n        }\r\n        break;\r\n      }\r\n    }\r\n    if(i<this.textlabels.length) {\r\n      this.textlabels.splice(i, 1);\r\n      this.spliceselecting(i, 1);\r\n    }\r\n  }\r\n\r\n  creatStarGeometry(label_xyz) {\r\n    let star = new THREE.Vector3();\r\n    star.x = label_xyz[0];\r\n    star.y = label_xyz[1];\r\n    star.z = label_xyz[2];\r\n    return star;\r\n  }\r\n\r\n  createTextLabel(label, star, id,index,path) {\r\n    let div = this.createLabelDiv();\r\n    var self=this;\r\n    let textLabel= {\r\n      id: id,\r\n      index:index,\r\n      path:path,\r\n      element: div,\r\n      parent: false,\r\n      position: new THREE.Vector3(0,0,0),\r\n      setHTML: function(html) {\r\n        this.element.innerHTML = html;\r\n      },\r\n      setParent: function(threejsobj) {\r\n        this.parent = threejsobj;\r\n      },\r\n      updatePosition: function() {\r\n        if(parent) {\r\n          this.position.copy(this.parent);\r\n        }\r\n        \r\n        var coords2d = this.get2DCoords(this.position, this.camera);\r\n        this.element.style.left = coords2d.x + 'px';\r\n        this.element.style.top = coords2d.y + 'px';\r\n      },\r\n      get2DCoords: function(position, camera) {\r\n        var vector = position.project(camera);\r\n        vector.x = (vector.x + 1)/2 * this.width;\r\n        vector.y = -(vector.y - 1)/2 * this.height;\r\n        return vector;\r\n      }\r\n    };\r\n    textLabel.setHTML(label);\r\n    textLabel.setParent(star);\r\n    return textLabel;\r\n  }\r\n\r\n  createLabelDiv() {\r\n    var div=document.createElement(\"div\");\r\n    div.style.color= '#00f';\r\n    div.style.fontFamily= '\"Fira Mono\", Monaco, \"Andale Mono\", \"Lucida Console\", \"Bitstream Vera Sans Mono\", \"Courier New\", Courier, monospace';\r\n    div.style.margin='-5px 0 0 15px';\r\n    div.style.pointerEvents='none';\r\n    div.style.position = 'absolute';\r\n    div.style.width = '100';\r\n    div.style.height = '100';\r\n    div.style.top = '-1000';\r\n    div.style.left = '-1000';\r\n    div.style.textShadow=\"0px 0px 3px white\";\r\n    div.style.color=\"black\";\r\n    return div;\r\n   }\r\n*/\r\n}\r\n","module.exports = \"<div id=\\\"appdiv\\\" (mousedown)=\\\"leaflet()\\\">\\r\\n\\t<as-split direction=\\\"vertical\\\">\\r\\n\\t\\t<as-split-area [size]=\\\"90\\\" id=\\\"splitcontainer\\\">\\r\\n\\t\\t  <div style=\\\"height: 100%\\\">\\r\\n\\t\\t    <as-split direction=\\\"horizontal\\\">\\r\\n\\t\\t      <as-split-area [size]=\\\"0.5\\\" id=\\\"splitgroups\\\" style=\\\"overflow-x:hidden;overflow-y: auto;\\\">\\r\\n\\t\\t        <app-groups></app-groups>\\r\\n\\t\\t      </as-split-area>\\r\\n\\t\\t      <as-split-area [size]=\\\"99.5\\\" id=\\\"splitviewer\\\">\\r\\n\\t\\t        <!-- <app-viewer *ngIf=\\\"imVisible===false\\\"></app-viewer>\\r\\n\\t\\t        <app-map *ngIf=\\\"imVisible===true\\\"></app-map> -->\\r\\n\\t\\t        <app-viewer></app-viewer>\\r\\n\\t\\t      </as-split-area>\\r\\n\\t\\t    </as-split>\\r\\n\\t\\t  </div>\\r\\n\\t\\t</as-split-area>\\r\\n\\t\\t<as-split-area [size]=\\\"10\\\" id=\\\"splittoolwindow\\\">\\r\\n\\t\\t\\t<app-toolwindow></app-toolwindow>\\r\\n\\t\\t</as-split-area>\\r\\n\\t</as-split>\\r\\n</div>\"","module.exports = \"@import url(\\\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\\\");\\n@font-face {\\n  font-family: \\\"FontAwesome\\\"; }\\n.font-awesome-hand {\\n  font-family: FontAwesome; }\\n.font-awesome-hand::after {\\n  font-family: FontAwesome; }\\nhtml, body {\\n  font-family: 'Open Sans', sans-serif;\\n  text-align: justify;\\n  margin: 0px;\\n  padding: 0px; }\\n#appdiv {\\n  height: 95%;\\n  background-color: white; }\\n#splittoolwindow {\\n  overflow: scroll !important; }\\na {\\n  text-decoration: none;\\n  color: #fff;\\n  text-transform: uppercase; }\\n.toolbar {\\n  background-color: #333; }\\n.toolbar ul {\\n  list-style: none;\\n  overflow: hidden;\\n  margin-bottom: 0px;\\n  z-index: 1; }\\n.toolbar div > ul > li {\\n  display: inline-block;\\n  float: left; }\\n.toolbar div > ul > li:hover {\\n  background-color: #fff; }\\n.toolbar div > ul > li:hover a {\\n  color: #333; }\\n.toolbar div > ul > li > a {\\n  font-size: 12px;\\n  line-height: 20px;\\n  display: block;\\n  float: left;\\n  padding: 0 16px; }\\n/**\\r\\n * Carets\\r\\n */\\n.toolbar div ul li i.icon-sort {\\n  display: none; }\\n.toolbar div ul li:hover i.icon-sort {\\n  display: inline; }\\n.toolbar div ul li:hover i.icon-caret-down {\\n  display: none; }\\n.toolbar .dropdown i {\\n  margin: 0px; }\\n.toolbar div > ul > li > a:hover {\\n  background-color: #fff;\\n  color: #333; }\\n.dropdown {\\n  float: left; }\\n/**\\r\\n * Sub navigaton\\r\\n **/\\n.sub {\\n  min-width: 180px;\\n  margin: 20px;\\n  display: none;\\n  position: absolute;\\n  border-left: 1px solid #ebebeb;\\n  border-right: 1px solid #ebebeb;\\n  border-bottom: 1px solid #ebebeb; }\\n.sub li a {\\n  display: block;\\n  background-color: #fff;\\n  color: #333 !important;\\n  border-left: 4px solid #fff;\\n  padding: 4px 12px;\\n  font-size: 12px;\\n  line-height: 26px; }\\n.sub li a:hover {\\n  border-left: 4px solid #ff0000;\\n  float: top; }\\n.toolbar div > ul > li:hover .sub {\\n  display: block; }\\n.sub li a {\\n  transition: all .5s linear;\\n  overflow: hidden; }\\n#toolwindow {\\n  position: relative;\\n  background-color: slategrey; }\\n.sidebar {\\n  position: absolute;\\n  top: 0px;\\n  right: 0px;\\n  height: 100%; }\\n.tool-form {\\n  padding-top: 10px;\\n  padding-left: 10px;\\n  color: white; }\\n.tool-form-heading {\\n  border-bottom: 2px solid #ddd;\\n  margin: 0px;\\n  padding-bottom: 3px; }\\n.tool-form label {\\n  font-family: 'Open Sans', sans-serif;\\n  font-size: 13px;\\n  color: black;\\n  display: block;\\n  margin: 0px 0px 15px 0px; }\\n.tool-form label > span {\\n  width: 150px;\\n  font-family: 'Open Sans', sans-serif;\\n  font-size: 13px;\\n  float: left;\\n  padding-top: 4px;\\n  padding-right: 5px; }\\n.tool-form span.required {\\n  color: red; }\\n.tool-form .tel-number-field {\\n  width: 30px;\\n  text-align: center; }\\n.tool-form input.input-field {\\n  width: 30px; }\\n.tool-form input.file-input-field {\\n  border: 1px solid #ccc;\\n  height: 20px;\\n  display: inline-block;\\n  padding: 6px 6px;\\n  cursor: pointer;\\n  background-color: #888888; }\\n.tool-form input.input-field,\\n.tool-form .tel-number-field,\\n.tool-form .textarea-field,\\n.tool-form .select-field {\\n  height: 20px;\\n  overflow: hidden;\\n  width: 240px;\\n  background-color: #888888;\\n  border-radius: 5px;\\n  color: #ffffff; }\\n.tool-form .input-field:focus,\\n.tool-form .tel-number-field:focus,\\n.tool-form .textarea-field:focus,\\n.tool-form .select-field:focus {\\n  border: 1px solid #0C0; }\\n.tool-form .textarea-field {\\n  height: 100px;\\n  width: 55%; }\\n.tool-form input[type=submit],\\n.tool-form input[type=button] {\\n  height: 25px;\\n  border: none;\\n  padding: 2px 8px 2px 8px;\\n  background: #444466;\\n  color: #fff;\\n  box-shadow: 1px 1px 4px #DADADA;\\n  -moz-box-shadow: 1px 1px 4px #DADADA;\\n  -webkit-box-shadow: 1px 1px 4px #DADADA;\\n  border-radius: 3px;\\n  -webkit-border-radius: 3px;\\n  -moz-border-radius: 3px;\\n  color: #ffffff; }\\n.tool-form input[type=submit]:hover,\\n.tool-form input[type=button]:hover {\\n  background: #333377;\\n  color: #fff; }\\n.rightstyle {\\n  width: 30px;\\n  height: 100%;\\n  float: right;\\n  background: #FFFFFF;\\n  background-repeat: repeat;\\n  background-attachment: scroll;\\n  overflow: auto; }\\n.leftstyle {\\n  background: #e6e6e6;\\n  height: 100%; }\\n.slider {\\n  width: 0;\\n  height: 0;\\n  border-top: 30px solid transparent;\\n  border-right: 10px solid black;\\n  border-bottom: 30px solid transparent; }\\n\"","import { Component, OnInit, Input, Injectable } from '@angular/core';\r\nimport {DataService} from './data/data.service';\r\nimport * as gs from \"gs-json\";\r\nimport { INode } from '@models/node';\r\nimport { ThrowStmt } from '@angular/compiler';\r\n\r\n@Component({\r\n  selector: 'gs-viewer',\r\n  templateUrl: './gs-viewer.component.html',\r\n  styleUrls: ['./gs-viewer.component.scss']\r\n})\r\nexport class GSViewerComponent {\r\n\timVisible:boolean=false;\r\n\r\n\t// gs model data passed to the viewer\r\n\t@Input() node: INode;\r\n\tdata:gs.IModel;\r\n\ttext:string;\r\n\r\n\tconstructor(private dataService: DataService){\r\n\t};\r\n\r\n\tsetModel(data: gs.IModel): void{\r\n\t\ttry{\r\n\t\t\tthis.dataService.setGsModel(data);\r\n\t\t}\r\n\t\tcatch(ex){\r\n\t\t\tthis.text = '';\r\n\t\t\tthis.data = undefined;\r\n\t\t\tconsole.error(\"Error generating model\");\r\n\t\t}\r\n\t}\r\n\r\n\tngOnInit() {\r\n\t\tif(this.node.type == 'output'){\r\n\t\t\tthis.data = this.node.input.value;\r\n\t\t} else{\r\n\t\t\tthis.data = this.node.output.value;\r\n\t\t}\r\n\t\tthis.setModel(this.data);\r\n\t\t\r\n\t}\r\n\r\n\r\n\tngDoCheck(){\r\n\t\tif (!this.node) return;\r\n\t\tlet val = this.node.output.value;\r\n\t\tif(this.node.type == 'output') val = this.node.input.value;\r\n\t\tif(this.data !== val){\r\n\t\t\tthis.data = val;\r\n\t\t\tthis.setModel(this.data);\r\n\t\t}\r\n\t}\r\n\r\n\tleaflet(){\r\n\t\tthis.imVisible=this.dataService.imVisible;\r\n\t}\r\n\r\n}","import { NgModule, ModuleWithProviders } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { AngularSplitModule } from 'angular-split';\r\nimport {MatSliderModule } from '@angular/material/slider';\r\nimport { GSViewerComponent } from './gs-viewer.component';\r\nimport { ViewerComponent } from './viewer/viewer.component';\r\nimport { SettingComponent } from './setting/setting.component';\r\nimport { ToolwindowComponent } from './toolwindow/toolwindow.component';\r\nimport { DataService } from './data/data.service';\r\nimport { GroupsComponent } from './toolwindow/groups.component';\r\nimport { NgxPaginationModule} from 'ngx-pagination';\r\nimport { MatExpansionModule} from '@angular/material/expansion';\r\nimport { BrowserAnimationsModule ,NoopAnimationsModule} from '@angular/platform-browser/animations';\r\nimport {MatTabsModule} from '@angular/material/tabs';\r\n//import { BrowserModule } from '@angular/platform-browser';\r\nimport { BrowserModule, HAMMER_GESTURE_CONFIG } from '@angular/platform-browser';\r\nimport {MatTooltipModule} from '@angular/material/tooltip';\r\nimport {MatSortModule} from '@angular/material/sort';\r\n\r\n\r\n@NgModule({\r\n    imports: [ \tCommonModule,\r\n    \t\t\tAngularSplitModule,\r\n\t\t\t   \tMatSliderModule,\r\n                NgxPaginationModule,\r\n                MatExpansionModule,\r\n                MatTabsModule,\r\n                MatTooltipModule,\r\n                MatSortModule\r\n\t\t\t ],\r\n    exports: [ GSViewerComponent ],\r\n    declarations: [GSViewerComponent,\r\n    \t\t\tViewerComponent,\r\n\t\t\t    SettingComponent,\r\n\t\t\t    ToolwindowComponent,\r\n\t\t\t    GroupsComponent],\r\n    providers: [DataService],\r\n})\r\nexport class GSViewer {\r\n \t\r\n \tstatic forRoot(): ModuleWithProviders {\r\n        return {\r\n            ngModule: GSViewer,\r\n            providers: [\r\n                DataService\r\n            ]\r\n        };\r\n    }\r\n\r\n}","module.exports = \"#settingview{\\r\\n  position:absolute;\\r\\n  background-color: white;\\r\\n  top:0px;\\r\\n  right:30px;\\r\\n  color:#395d73;\\r\\n  width:400px;\\r\\n  height:430px;\\r\\n}\\r\\n#grid{\\r\\n  margin-left: 20px;\\r\\n  font-family:sans-serif;\\r\\n  margin-top:10px;\\r\\n}\\r\\n#axis{\\r\\n  margin-left: 30px;\\r\\n  font-family:sans-serif;\\r\\n}\\r\\n#shadow{\\r\\n  margin-left: 30px;\\r\\n  font-family:sans-serif;\\r\\n}\\r\\n#frame{\\r\\n  margin-left: 30px;\\r\\n  font-family:sans-serif;\\r\\n}\\r\\n#nomal{\\r\\n  margin-left: 20px;\\r\\n  font-family:sans-serif;\\r\\n}\\r\\n#point{\\r\\n  margin-left: 20px;\\r\\n  font-family:sans-serif;\\r\\n}\\r\\n#huerange{\\r\\n  margin-left: 41px;\\r\\n  width: 60%;\\r\\n  font-family:sans-serif;\\r\\n}\\r\\n#satrange{\\r\\n  margin-left: 18px;\\r\\n  width: 60%;\\r\\n  font-family:sans-serif;\\r\\n}\\r\\n#lirange{\\r\\n  margin-left: 20px;\\r\\n  width: 60%;\\r\\n  font-family:sans-serif;\\r\\n}\\r\\n#oprange{\\r\\n  margin-left: 20px;\\r\\n  width: 60%;\\r\\n  font-family:sans-serif;\\r\\n}\\r\\n#name{\\r\\n  font-family:sans-serif;\\r\\n}\\r\\n#redrange{\\r\\n  margin-left: 60px;\\r\\n  width: 60%;\\r\\n  font-family:sans-serif;\\r\\n}\\r\\n#greenrange{\\r\\n  margin-left: 60px;\\r\\n  width: 60%;\\r\\n  font-family:sans-serif;\\r\\n}\\r\\n#bluerange{\\r\\n  margin-left: 60px;\\r\\n  width: 60%;\\r\\n  font-family:sans-serif;\\r\\n}\\r\\n#linerange{\\r\\n  margin-left: 5px;\\r\\n  width: 50%;\\r\\n  font-family:sans-serif;\\r\\n}\\r\\n#pointrange{\\r\\n  margin-left: 3px;\\r\\n  width: 50%;\\r\\n  font-family:sans-serif;\\r\\n}\\r\\n#sizerange{\\r\\n  width: 50%;\\r\\n  font-family:sans-serif;\\r\\n}\\r\\n#centerx{\\r\\n  width:30px;\\r\\n  margin-left:10px;\\r\\n}\\r\\n#centery{\\r\\n  width:30px;\\r\\n  margin-left:10px;\\r\\n}\\r\\n#centerz{\\r\\n  width:30px;\\r\\n  margin-left:10px;\\r\\n}\\r\\n#centersize{\\r\\n  width:30px;\\r\\n  margin-left:10px;\\r\\n}\\r\\n.name{\\r\\n  margin-left: 10px;\\r\\n}\\r\\n.center{\\r\\n  margin-left: 10px;\\r\\n}\\r\\n::ng-deep .mat-accent .mat-slider-thumb {\\r\\n    background-color: #395d73;\\r\\n    font-family:sans-serif;\\r\\n}\\r\\n::ng-deep .mat-accent .mat-slider-thumb-label {\\r\\n    background-color: #395d73;\\r\\n    font-family:sans-serif;\\r\\n}\\r\\n::ng-deep .mat-accent .mat-slider-track-fill {\\r\\n    background-color: #395d73;\\r\\n    font-family:sans-serif;\\r\\n} \"","module.exports = \"<div id=\\\"settingview\\\" (click)=\\\"setting($event)\\\">\\r\\n  <input id=\\\"grid\\\" #grid type=\\\"checkbox\\\" [checked]=\\\"gridVisible\\\" (click)=\\\"changegrid()\\\"> <label id=\\\"name\\\" value=\\\"gridVisible\\\">grid</label>\\r\\n  <input id=\\\"axis\\\"  type=\\\"checkbox\\\" [checked]=\\\"axisVisible\\\" (click)=\\\"changeaxis()\\\"> <label id=\\\"name\\\" value=\\\"axisVisible\\\">axis</label>\\r\\n  <input id=\\\"shadow\\\"  type=\\\"checkbox\\\" [checked]=\\\"shadowVisible\\\" (click)=\\\"changeshadow()\\\"> <label id=\\\"name\\\" value=\\\"shadowVisible\\\">shadow</label>\\r\\n  <input id=\\\"frame\\\"  type=\\\"checkbox\\\" [checked]=\\\"frameVisible\\\" (click)=\\\"changeframe()\\\"> <label id=\\\"name\\\" value=\\\"frameVisible\\\">frame</label><br/>\\r\\n  <!-- <input id=\\\"nomal\\\"  type=\\\"checkbox\\\" [checked]=\\\"normalVisible\\\" (click)=\\\"changenormal()\\\"> <label id=\\\"name\\\" value=\\\"nomalVisible\\\">nomal</label> -->\\r\\n  <input id=\\\"point\\\"  type=\\\"checkbox\\\" [checked]=\\\"pointVisible\\\" (click)=\\\"changepoint()\\\"> <label id=\\\"name\\\" value=\\\"pointVisible\\\">point</label><br/>\\r\\n  \\r\\n  <hr/><label class=\\\"name\\\" >Grid Center</label><br/>\\r\\n  <label class=\\\"name\\\" >X</label><input type=\\\"text\\\" name=\\\"center\\\" id=\\\"centerx\\\" #centerx value={{_centerx}} (change)=changecenter(centerx.value,centery.value,centerz.value,size.value)>\\r\\n  &nbsp;&nbsp;&nbsp;&nbsp;<label id=\\\"name\\\" >Y</label><input type=\\\"text\\\" name=\\\"center\\\" #centery id=\\\"centery\\\" value={{_centery}} (change)=changecenter(centerx.value,centery.value,centerz.value,size.value)>\\r\\n  &nbsp;&nbsp;&nbsp;&nbsp;<label id=\\\"name\\\" >Z</label><input type=\\\"text\\\" name=\\\"center\\\"  #centerz id=\\\"centerz\\\" value={{_centerz}} (change)=changecenter(centerx.value,centery.value,centerz.value,size.value)>\\r\\n  &nbsp;&nbsp;&nbsp;&nbsp;<label id=\\\"name\\\" >Size</label><input type=\\\"text\\\" name=\\\"center\\\"  #size id=\\\"centersize\\\" value={{_centersize}} (change)=changecenter(centerx.value,centery.value,centerz.value,size.value)>\\r\\n  &nbsp;&nbsp;&nbsp;&nbsp;<button (click)=\\\"getcenter()\\\">Get</button><br/>\\r\\n  <!--< button (click)=\\\"changecenter(centerx.value,centery.value,centerz.value)\\\">Set</button> -->\\r\\n  <!-- <hr/>&nbsp;&nbsp;&nbsp;&nbsp;<label id=\\\"name\\\" >Raycaster Precision</label>&nbsp;&nbsp;<br/>-->\\r\\n  <label class=\\\"name\\\" >Line Precision</label>\\r\\n  <mat-slider class=\\\"slider\\\" name=\\\"range\\\" id=\\\"linerange\\\" min=0 max=1 step=0.01  value={{_linepre}} #linepre (change)=\\\"changeline(linepre.value)\\\" ></mat-slider><label id=\\\"name\\\" >{{linepre.value.toPrecision(2)}}</label><br/>\\r\\n  <!-- &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<label id=\\\"name\\\" >Point Precision</label>\\r\\n  <mat-slider class=\\\"slider\\\" name=\\\"range\\\" id=\\\"pointrange\\\" min=0 max=1 step=0.01  value={{_pointpre}} #pointpre (change)=\\\"changepoint(pointpre.value)\\\" ></mat-slider><label id=\\\"name\\\" >{{pointpre.value.toPrecision(2)}}</label><br/> -->\\r\\n  <label class=\\\"name\\\" >Points Size</label>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\\r\\n  <mat-slider class=\\\"slider\\\" name=\\\"range\\\" id=\\\"sizerange\\\" min=0 max=5 step=0.1  value={{_pointsize}} #pointsize (change)=\\\"changepointsize(pointsize.value)\\\" ></mat-slider><label id=\\\"name\\\" >{{pointsize.value.toPrecision(2)}}</label><br/>\\r\\n\\r\\n  <hr/><label class=\\\"name\\\" >Hemisphere Light</label>&nbsp;&nbsp;<br/>\\r\\n  <label class=\\\"name\\\" >hue</label>&nbsp;&nbsp;&nbsp;\\r\\n  <mat-slider class=\\\"slider\\\" name=\\\"range\\\" id=\\\"huerange\\\" min=0 max=1 step=0.01  value={{hue}} #slider (change)=\\\"changelight(slider.value,slider1.value,slider2.value)\\\" ></mat-slider><label id=\\\"name\\\" >{{slider.value.toPrecision(2)}}</label><br/>\\r\\n  <label class=\\\"name\\\" >saturation</label>\\r\\n  <mat-slider name=\\\"range\\\" id=\\\"satrange\\\" min=0 max=1 step=0.01 value={{saturation}} #slider1 (change)=\\\"changelight(slider.value,slider1.value,slider2.value)\\\" ></mat-slider><label id=\\\"name\\\" >{{slider1.value.toPrecision(2)}}</label><br/>\\r\\n  <label class=\\\"name\\\" >lightness</label>\\r\\n  <mat-slider name=\\\"range\\\" id=\\\"lirange\\\" min=0 max=1 step=0.01 value={{lightness}} #slider2 (change)=\\\"changelight(slider.value,slider1.value,slider2.value)\\\" ></mat-slider><label id=\\\"name\\\" >{{slider2.value.toPrecision(2)}}</label><br/>\\r\\n  <!-- &nbsp;&nbsp;&nbsp;&nbsp;<label id=\\\"name\\\" >opacity</label>&nbsp;&nbsp;&nbsp;\\r\\n  <mat-slider name=\\\"range\\\" id=\\\"oprange\\\" min=0 max=1 step=0.01 value={{opacity}} #slider3 (change)=\\\"changeopa(slider3.value)\\\" ></mat-slider><label id=\\\"name\\\" >{{slider3.value.toPrecision(2)}}</label><br/> -->\\r\\n  <!-- <hr/>&nbsp;&nbsp;&nbsp;&nbsp;<label id=\\\"name\\\" >Backeground Color</label>&nbsp;&nbsp;<br/>\\r\\n  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<label id=\\\"name\\\" >R</label>\\r\\n  <mat-slider  name=\\\"range\\\" id=\\\"redrange\\\" min=0 max=1 step=0.01  value={{red}} #slider4 (change)=\\\"changeback(slider4.value,slider5.value,slider6.value)\\\" ></mat-slider><label id=\\\"name\\\" >{{slider4.value.toPrecision(2)}}</label><br/>\\r\\n  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<label id=\\\"name\\\" >G</label>\\r\\n  <mat-slider name=\\\"range\\\" id=\\\"greenrange\\\" min=0 max=1 step=0.01 value={{green}} #slider5 (change)=\\\"changeback(slider4.value,slider5.value,slider6.value)\\\" ></mat-slider><label id=\\\"name\\\" >{{slider5.value.toPrecision(2)}}</label><br/>\\r\\n  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<label id=\\\"name\\\" >B</label>\\r\\n  <mat-slider name=\\\"range\\\" id=\\\"bluerange\\\" min=0 max=1 step=0.01 value={{blue}} #slider6 (change)=\\\"changeback(slider4.value,slider5.value,slider6.value)\\\" ></mat-slider><label id=\\\"name\\\" >{{slider6.value.toPrecision(2)}}</label><br/> -->\\r\\n</div>\"","import * as THREE from 'three';\r\nimport { Component, OnInit, Input } from '@angular/core';\r\nimport { AngularSplitModule } from 'angular-split';\r\nimport { ViewerComponent } from '../viewer/viewer.component';\r\nimport {DataService} from '../data/data.service';\r\n\r\n@Component({\r\n  selector: 'app-setting',\r\n  templateUrl: './setting.component.html',\r\n  styleUrls: ['./setting.component.css']\r\n})\r\nexport class SettingComponent implements OnInit {\r\n\r\n  scene:THREE.Scene;\r\n  alight:THREE.HemisphereLight;\r\n  gridVisible: boolean; \r\n  axisVisible: boolean; \r\n  shadowVisible: boolean; \r\n  hue:number;\r\n  saturation:number;\r\n  lightness:number;\r\n  frameVisible:boolean;\r\n  _centerx:number;\r\n  _centery:number;\r\n  _centerz:number;\r\n  _centersize:number;\r\n  raycaster:THREE.Raycaster;\r\n  _linepre:number;\r\n  _pointpre:number;\r\n  _pointsize:number;\r\n  nomalVisible:boolean;\r\n  pointVisible:boolean;\r\n\r\n  ngOnInit(){\r\n    if(this.hue == undefined) {\r\n        this.hue = 0;\r\n    } else {\r\n      this.hue=this.dataService.hue;\r\n    }\r\n    if(this.saturation == undefined) {\r\n        this.saturation = 0.01;\r\n    } else {\r\n      this.saturation=this.dataService.saturation;\r\n    }\r\n    if(this.lightness == undefined) {\r\n        this.lightness = 0.47;\r\n    } else {\r\n      this.lightness=this.dataService.lightness;\r\n    }\r\n    this.gridVisible=this.dataService.grid;\r\n    this.axisVisible=this.dataService.axis;\r\n    this.shadowVisible=this.dataService.shadow;\r\n    this.frameVisible=this.dataService.frame;\r\n    this.pointVisible=this.dataService.point;\r\n    if(this._centerx==undefined){\r\n      this._centerx=0;\r\n    }else{\r\n      this._centerx=this.dataService.centerx;\r\n    }\r\n     if(this._centery==undefined){\r\n      this._centery=0;\r\n    }else{\r\n      this._centery=this.dataService.centery;\r\n    }\r\n    if(this._centerz==undefined){\r\n      this._centerz=0;\r\n    }else{\r\n      this._centerz=this.dataService.centerz;\r\n    }\r\n    if(this._centersize==undefined){\r\n      this._centersize=100;\r\n    }else{\r\n      this._centersize=this.dataService.centersize;\r\n    }\r\n    this.raycaster=this.dataService.getraycaster();\r\n    if(this._linepre==undefined){\r\n      this._linepre=0.05;\r\n    }else{\r\n      this._linepre=this.raycaster.linePrecision;\r\n    }\r\n    if(this._pointpre==undefined){\r\n      this._pointpre=1;\r\n    }else{\r\n      this._pointpre=this.raycaster.params.Points.threshold;\r\n    }\r\n    if(this._pointsize==undefined){\r\n      this._pointsize=1;\r\n    }else{\r\n      this._pointsize=this.dataService.pointsize;\r\n    }\r\n    \r\n  }\r\n\r\n  constructor(private dataService: DataService){\r\n\r\n    // avoid manipulating the scene here\r\n    // shift to dataservice\r\n    this.scene = this.dataService.getScene();\r\n    this.alight=this.dataService.getalight();\r\n    this.hue=this.dataService.hue;\r\n    this.saturation=this.dataService.saturation;\r\n    this.lightness=this.dataService.lightness;\r\n    this._centerx=this.dataService.centerx;\r\n    this._centery=this.dataService.centery;\r\n    this._centerz=this.dataService.centerz;\r\n    this._centersize=this.dataService.centersize;\r\n    this.raycaster=this.dataService.getraycaster();\r\n    this._linepre=this.raycaster.linePrecision;\r\n    this._pointpre=this.raycaster.params.Points.threshold;\r\n    this._pointsize=this.dataService.pointsize;\r\n  }\r\n\r\n  changegrid(){\r\n    this.gridVisible = !this.gridVisible;\r\n    if(this.gridVisible){\r\n      var gridhelper=new THREE.GridHelper( 100, 100);\r\n      gridhelper.name=\"GridHelper\";\r\n      var vector=new THREE.Vector3(0,1,0);\r\n      gridhelper.lookAt(vector);\r\n      this.scene.add( gridhelper);\r\n\r\n    }else{\r\n      this.scene.remove(this.scene.getObjectByName(\"GridHelper\"));\r\n    }\r\n    this.dataService.addgrid(this.gridVisible);\r\n  }\r\n\r\n\r\n  changecenter(centerx,centery,centerz,centersize){\r\n    if(this.gridVisible){\r\n      var gridhelper=this.scene.getObjectByName(\"GridHelper\");\r\n      gridhelper=new THREE.GridHelper(centersize,centersize);\r\n      gridhelper.position.set(centerx,centery,centerz);\r\n      console.log(gridhelper)\r\n      this._centerx=centerx;\r\n      this._centery=centery;\r\n      this._centerz=centerz;\r\n      this._centersize=centersize;\r\n      this.dataService.getcenterx(centerx);\r\n      this.dataService.getcentery(centery);\r\n      this.dataService.getcenterz(centerz);\r\n      this.dataService.getcentersize(centersize);\r\n    }\r\n  }\r\n\r\n  changeline(lineprecision){\r\n    this._linepre=lineprecision;\r\n    this.raycaster.linePrecision=lineprecision;\r\n    this.dataService.addraycaster(this.raycaster);\r\n  }\r\n\r\n  changepoint(){\r\n    this.pointVisible = !this.pointVisible;\r\n    var children:any=[];\r\n    for(var i=0;i<this.scene.children.length;i++){\r\n      if(this.scene.children[i].type===\"Scene\"){\r\n        for(var j=0;j<this.scene.children[i].children.length;j++){\r\n          if(this.scene.children[i].children[j].type===\"Points\"){\r\n            children.push(this.scene.children[i].children[j]);\r\n          }\r\n        }\r\n      }\r\n    }\r\n    if(this.pointVisible){\r\n      for(var i=0;i<children.length;i++){\r\n        children[i][\"material\"].transparent=false;\r\n        children[i][\"material\"].opacity=1;\r\n      }\r\n    }else{\r\n      for(var i=0;i<children.length;i++){\r\n        children[i][\"material\"].transparent=true;\r\n        children[i][\"material\"].opacity=0;\r\n      }\r\n    }\r\n    this.dataService.addpoint(this.pointVisible);\r\n  }\r\n\r\n  changepointsize(pointsize){\r\n    this._pointsize=pointsize;\r\n    for(var i=0;i<this.scene.children.length;i++){\r\n      if(this.scene.children[i].name===\"sphereInter\"){\r\n        var geometry = new THREE.SphereGeometry( pointsize/3);\r\n        this.scene.children[i][\"geometry\"]=geometry;\r\n      }\r\n      if(this.scene.children[i].name===\"selects\"&&this.scene.children[i].type===\"Points\"){\r\n        this.scene.children[i][\"material\"].size=pointsize;\r\n      }\r\n    }\r\n    this.dataService.getpointsize(pointsize);\r\n\r\n  }\r\n\r\n  changeaxis(){\r\n    this.axisVisible = !this.axisVisible;\r\n    if(this.axisVisible){\r\n      var axishelper = new THREE.AxesHelper( 10 );\r\n      axishelper.name=\"AxisHelper\";\r\n      this.scene.add( axishelper);\r\n    }else{\r\n      this.scene.remove(this.scene.getObjectByName(\"AxisHelper\"));\r\n    }\r\n    this.dataService.addaxis(this.axisVisible);\r\n  }\r\n\r\n  changeshadow(){\r\n    this.shadowVisible = !this.shadowVisible;\r\n    for(var i=0;i<this.scene.children.length;i++){\r\n      if(this.scene.children[i].type===\"DirectionalLight\")\r\n      {\r\n        if(this.shadowVisible){\r\n          this.scene.children[i].castShadow=true;\r\n        }\r\n        else{\r\n          this.scene.children[i].castShadow=false;\r\n        }\r\n      }\r\n    }\r\n    this.dataService.addshadow(this.shadowVisible);\r\n  }\r\n\r\n  changelight(_hue,_saturation,_lightness){\r\n    this.hue=_hue;\r\n    this.saturation=_saturation;\r\n    this.lightness=_lightness;\r\n    var alight=this.alight;\r\n    this.dataService.gethue(_hue);\r\n    this.dataService.getsaturation(_saturation);\r\n    this.dataService.getlightness(_lightness);\r\n    this.alight.color.setHSL( _hue, _saturation,_lightness );\r\n  }\r\n  \r\n  changeframe(){\r\n   this.frameVisible = !this.frameVisible;\r\n   if(this.frameVisible){\r\n    for(var i=0;i<this.scene.children.length;i++){\r\n      if(this.scene.children[i].type===\"Scene\"){\r\n        if(this.scene.children[i].children[0].type===\"Mesh\"){\r\n          this.scene.children[i].children[0].visible=false;\r\n        }\r\n      }\r\n    }\r\n  }else{\r\n    for(var i=0;i<this.scene.children.length;i++){\r\n      if(this.scene.children[i].type===\"Scene\"){\r\n        if(this.scene.children[i].children[0].type===\"Mesh\"){\r\n          this.scene.children[i].children[0].visible=true;\r\n        }\r\n      }\r\n    }\r\n  }\r\n   this.dataService.addframe(this.frameVisible);\r\n  }\r\n\r\n  changenormal(){\r\n    this.nomalVisible=!this.nomalVisible;\r\n    if(this.nomalVisible){\r\n      /*for(var i=0;i<this.scene.children.length;i++){\r\n        if(this.scene.children[i].type===\"Scene\"){\r\n          for(var j=0;j<this.scene.children[i].children.length;j++){\r\n            if(this.scene.children[i].children[j].type===\"Mesh\"){\r\n              var mesh=this.scene.children[i].children[j];\r\n              var faceNormalsHelper = new THREE.FaceNormalsHelper( mesh, 10 );\r\n              mesh.add( faceNormalsHelper );\r\n              var verticehelper = new THREE.VertexNormalsHelper( mesh, 10 );\r\n              this.scene.add(verticehelper);\r\n              console.log(this.scene);\r\n              //facehelper.visible=false;\r\n              //this.scene.add(verticehelper);\r\n            }\r\n          }\r\n        }\r\n      }*/\r\n    }\r\n  }\r\n\r\n  setting(event){\r\n    event.stopPropagation();\r\n  }\r\n\r\n}\r\n\r\n","module.exports = \"#setandgroup{\\r\\n  position: relative;\\r\\n  background-color: #F1F1F1 !important;\\r\\n  height: 100%;\\r\\n  width: 100%;\\r\\n  font-family: Roboto,\\\"Helvetica Neue\\\",sans-serif;\\r\\n  font-size: 12px !important;\\r\\n  line-height: 14px;\\r\\n  overflow-x: hidden !important;\\r\\n}\\r\\n#groupsview{\\r\\n  color:#395d73;\\r\\n  background-color: #F1F1F1 !important;\\r\\n  font-family: Roboto,\\\"Helvetica Neue\\\",sans-serif;\\r\\n  font-size: 12px !important;\\r\\n}\\r\\n#settingview{\\r\\n  font-family: Roboto,\\\"Helvetica Neue\\\",sans-serif;\\r\\n  background-color: #F1F1F1 !important;\\r\\n  font-size: 12px !important;\\r\\n  line-height: 14px;\\r\\n  overflow-x: hidden !important;\\r\\n  overflow-y: hidden !important;\\r\\n  width: 1600px;\\r\\n  height: 800px;\\r\\n  color: #395d73;\\r\\n}\\r\\n.check{\\r\\n  margin-left:10px;\\r\\n}\\r\\n#GridCenter{\\r\\n  margin-left: 10px;\\r\\n  margin-top: 3px !important;\\r\\n  height: 8px;\\r\\n  vertical-align: bottom;\\r\\n}\\r\\n#centerx{\\r\\n  width:50px;\\r\\n  margin-left: 10px;\\r\\n/*  margin-left:25px;*/\\r\\n}\\r\\n#centery{\\r\\n  width:50px;\\r\\n  /*margin-left:25px;*/\\r\\n}\\r\\n#centerz{\\r\\n  width:50px;\\r\\n  /*margin-left:25px;*/\\r\\n}\\r\\n#centersize{\\r\\n  width:50px;\\r\\n  margin-left:9px;\\r\\n}\\r\\n.name{\\r\\n  width: 100%;\\r\\n  margin-left: 10px;\\r\\n  margin-top: 8px;\\r\\n}\\r\\n#slider-conainer{\\r\\n  align-items: center !important;\\r\\n  display: flex;\\r\\n  float: right;\\r\\n}\\r\\n/*::ng-deep .mat-accent .mat-slider-thumb {\\r\\n    background-color: #395d73;\\r\\n    font-family:sans-serif;\\r\\n} \\r\\n::ng-deep .mat-accent .mat-slider-thumb-label {\\r\\n    background-color: white;\\r\\n    color:#395d73;\\r\\n    font-family:sans-serif;\\r\\n}\\r\\n::ng-deep .mat-accent .mat-slider-track-fill {\\r\\n    background-color: #395d73;\\r\\n    font-family:sans-serif;\\r\\n}\\r\\n\\r\\n/deep/.mat-slider-min-value.mat-slider-thumb-label-showing .mat-slider-thumb, .mat-slider-min-value.mat-slider-thumb-label-showing .mat-slider-thumb-label {\\r\\n    background-color: #395d73;\\r\\n}\\r\\n/*::ng-deep .mat-expansion-panel {\\r\\n  margin: 0px !important;\\r\\n  overflow: hidden !important;\\r\\n}\\r\\n/deep/ .slider {\\r\\n  height: 25px !important;\\r\\n  vertical-align: unset !important;\\r\\n  width: unset !important;\\r\\n}\\r\\n*/\\r\\n/deep/.mat-accent .mat-slider-thumb {\\r\\n    background-color: #395d73 !important;\\r\\n    cursor: -webkit-grab;\\r\\n}\\r\\n/deep/.mat-slider-track-fill{\\r\\n  background-color: #395d73 !important;\\r\\n}\\r\\n/deep/.mat-slider-thumb-label-text {\\r\\n    color: #395d73 !important;\\r\\n    font-size: 12px !important;\\r\\n}\\r\\n/deep/.mat-slider-thumb-label{\\r\\n    height: 15px !important;\\r\\n    width: 15px !important;\\r\\n    top: -20px !important;\\r\\n    right: -7px !important;\\r\\n    background-color: white !important;\\r\\n    border: 1px solid #395d73 !important;\\r\\n}\\r\\n.mat-slider{\\r\\n    width: 50px !important;\\r\\n}\\r\\n/deep/.mat-tab-label, /deep/.mat-tab-label-active{\\r\\n  min-width: 3px!important;\\r\\n  padding: 3px!important;\\r\\n  margin: 3px!important;\\r\\n  color:#395d73;\\r\\n}\\r\\n/deep/.mat-tab-label{\\r\\n  height: 30px !important;\\r\\n}\\r\\n/deep/.mat-tab-header-pagination-controls-enabled .mat-tab-header-pagination{\\r\\n  display: none !important;\\r\\n}\\r\\n/deep/.mat-ink-bar{\\r\\n  background-color: #395d73 !important;\\r\\n}\\r\\n.mat-tab{\\r\\n  min-width: 30px !important;\\r\\n}\\r\\n/deep/.mat-tab-body-content{\\r\\n  overflow: hidden !important;\\r\\n}\\r\\n.mat-expansion-panel-spacing {\\r\\n  margin-top:0px;\\r\\n  margin-bottom: 0px;\\r\\n}\\r\\n.mat-expansion-panel{\\r\\n  background-color: #F1F1F1 !important;\\r\\n  border-color: #395d73;\\r\\n  line-height: 14px;\\r\\n  font-weight: bold !important;\\r\\n  font-size: 12px !important;\\r\\n  overflow: hidden !important;\\r\\n}\\r\\n#groupname{\\r\\n  margin-right: 0px;\\r\\n}\\r\\n.mat-header{\\r\\n  flex-direction: row;\\r\\n  font-family: Roboto,\\\"Helvetica Neue\\\",sans-serif;\\r\\n  margin-left: 0px;\\r\\n  color:#395d73;\\r\\n  border: 0;\\r\\n  height: 20px;\\r\\n}\\r\\n.mat-list-text{\\r\\n  cursor :pointer;\\r\\n  color:#f3a32a;\\r\\n  font-family: sans-serif;\\r\\n  font-size: 14px;\\r\\n  font-weight: 700px;\\r\\n  line-height: 14px;\\r\\n  border-top: 2px !important;\\r\\n  /*margin-top: 2px;*/\\r\\n}\\r\\n.mat-list-descr{\\r\\n  cursor :default;\\r\\n  color:#f3a32a;\\r\\n  font-family: sans-serif;\\r\\n  font-size: 14px;\\r\\n  font-weight: 700px;\\r\\n  line-height: 14px;\\r\\n  border-top: 2px !important;\\r\\n  margin-top: 8px;\\r\\n}\\r\\n.mat-list-text-parent{\\r\\n  cursor :pointer;\\r\\n  color:#f3a32a;\\r\\n  font-family: sans-serif;\\r\\n  font-size: 14px;\\r\\n  font-weight: 700px;\\r\\n  line-height: 14px;\\r\\n  border-top: 2px !important;\\r\\n  /*margin-top: 2px;*/\\r\\n}\\r\\nhr {\\r\\n  display: block;\\r\\n  height: 1px;\\r\\n  border: 0;\\r\\n  border-top: 1px solid #ccc;\\r\\n  /*margin: 1em 0;*/\\r\\n  padding: 0; \\r\\n  color:#395d73;\\r\\n  width: 100%;\\r\\n  background-color: #395d73;\\r\\n}\\r\\n\\r\\n\"","module.exports = \"<div id=\\\"setandgroup\\\" >\\r\\n<mat-tab-group class=\\\"mat-tab-group\\\">\\r\\n  <mat-tab label=\\\"Groups\\\" >\\r\\n  \\t<div id=\\\"groupsview\\\">\\r\\n\\t<mat-accordion>\\r\\n\\t  <mat-expansion-panel *ngFor=\\\"let group of groups\\\">\\r\\n\\t\\t  <mat-expansion-panel-header *ngIf=\\\"group.parent===null\\\" class=\\\"mat-header\\\">\\r\\n\\t\\t    <div class=\\\"mat-header\\\"><label id=\\\"groupname\\\">{{group.name}}</label></div>\\r\\n\\t\\t  </mat-expansion-panel-header>\\r\\n\\t\\t    <!-- <div class=\\\"mat-list-text-parent\\\"><span id=\\\"parent\\\">parent : {{group.parent}} </span></div> -->\\r\\n\\t\\t    <div ><span class=\\\"mat-list-text\\\" (click)=\\\"selectpoint(group)\\\">point : {{group.num_point}} </span></div>\\r\\n\\t\\t    <div ><span class=\\\"mat-list-text\\\" (click)=\\\"selectvertice(group)\\\">vertice : {{group.num_vertice}} </span></div>\\r\\n\\t\\t    <div ><span class=\\\"mat-list-text\\\" (click)=\\\"selectedge(group)\\\">edge : {{group.num_edge}} </span></div>\\r\\n\\t\\t    <div ><span class=\\\"mat-list-text\\\" (click)=\\\"selectwire(group)\\\">wire : {{group.num_wire}} </span></div>\\r\\n\\t\\t    <div ><span class=\\\"mat-list-text\\\" (click)=\\\"selectface(group)\\\">face : {{group.num_face}} </span></div>\\r\\n\\t\\t    <div ><span class=\\\"mat-list-text\\\" (click)=\\\"selectobject(group)\\\">object : {{group.num_object}} </span><hr/></div>\\r\\n\\t\\t    <div class=\\\"mat-list-descr\\\" *ngFor=\\\"let prop of group.props\\\"><span >{{prop[0]}} : {{prop[1]}} </span></div>\\r\\n\\t\\t    <div *ngIf=\\\"group.child!==null\\\" >\\r\\n \\t\\t    \\t<mat-accordion>\\r\\n\\t\\t\\t  \\t\\t<mat-expansion-panel >\\r\\n\\t\\t\\t  \\t\\t\\t<mat-expansion-panel-header ><div class=\\\"mat-header\\\"><label id=\\\"groupname\\\">{{group.child.name}}</label></div></mat-expansion-panel-header>\\r\\n\\t\\t\\t  \\t\\t\\t<div class=\\\"mat-list-text-parent\\\"><span id=\\\"parent\\\">parent : {{group.child.parent}} </span><hr></div>\\r\\n\\t\\t\\t  \\t\\t\\t<div ><span class=\\\"mat-list-text\\\" (click)=\\\"selectpoint(group)\\\">point : {{group.child.num_point}} </span></div>\\r\\n\\t\\t\\t\\t\\t    <div ><span class=\\\"mat-list-text\\\" (click)=\\\"selectvertice(group)\\\">vertice : {{group.child.num_vertice}} </span></div>\\r\\n\\t\\t\\t\\t\\t    <div ><span class=\\\"mat-list-text\\\" (click)=\\\"selectedge(group)\\\">edge : {{group.child.num_edge}} </span></div>\\r\\n\\t\\t\\t\\t\\t    <div ><span class=\\\"mat-list-text\\\" (click)=\\\"selectwire(group)\\\">wire : {{group.child.num_wire}} </span></div>\\r\\n\\t\\t\\t\\t\\t    <div ><span class=\\\"mat-list-text\\\" (click)=\\\"selectface(group)\\\">face : {{group.child.num_face}} </span></div>\\r\\n\\t\\t\\t\\t\\t    <div ><span class=\\\"mat-list-text\\\" (click)=\\\"selectobject(group)\\\">object : {{group.child.num_object}} </span><hr/></div>\\r\\n\\t\\t\\t\\t\\t    <div class=\\\"mat-list-descr\\\" *ngFor=\\\"let prop of group.child.props\\\"><span >{{prop[0]}} : {{prop[1]}} </span></div>\\r\\n \\t\\t\\t  \\t\\t</mat-expansion-panel>\\r\\n\\t\\t \\t\\t </mat-accordion>\\r\\n\\t\\t\\t</div>\\r\\n \\t\\t</mat-expansion-panel>\\r\\n\\t</mat-accordion>\\r\\n\\t</div>\\r\\n  </mat-tab>\\r\\n  <mat-tab label=\\\"Settings\\\" >\\r\\n  \\t<div id=\\\"settingview\\\">\\r\\n  \\t\\t<input id=\\\"grid\\\" class=\\\"check\\\" #grid type=\\\"checkbox\\\" [checked]=\\\"gridVisible\\\" (click)=\\\"changegrid()\\\"> <label id=\\\"name\\\" value=\\\"gridVisible\\\">grid</label><br/>\\r\\n\\t\\t<input id=\\\"axis\\\" class=\\\"check\\\" type=\\\"checkbox\\\" [checked]=\\\"axisVisible\\\" (click)=\\\"changeaxis()\\\"> <label id=\\\"name\\\" value=\\\"axisVisible\\\">axis</label><br/>\\r\\n\\t\\t<input id=\\\"shadow\\\" class=\\\"check\\\"  type=\\\"checkbox\\\" [checked]=\\\"shadowVisible\\\" (click)=\\\"changeshadow()\\\"> <label id=\\\"name\\\" value=\\\"shadowVisible\\\">shadow</label><br/>\\r\\n\\t\\t<input id=\\\"frame\\\" class=\\\"check\\\" type=\\\"checkbox\\\" [checked]=\\\"frameVisible\\\" (click)=\\\"changeframe()\\\"> <label id=\\\"name\\\" value=\\\"frameVisible\\\">wireframe</label><br/>\\r\\n\\t\\t<input id=\\\"point\\\" class=\\\"check\\\" type=\\\"checkbox\\\" [checked]=\\\"pointVisible\\\" (click)=\\\"changepoint()\\\"> <label id=\\\"name\\\" value=\\\"pointVisible\\\">point</label><br/>\\r\\n\\t\\t<hr/><div  id=\\\"GridCenter\\\" >Grid Center<button (click)=\\\"getcenter()\\\" style=\\\"margin-left: 30px;width: 40px;height: 20px; font-family: sans-serif;font-size: 12px;\\\">Get</button></div><br/>\\r\\n\\t\\t<label class=\\\"name\\\" >XYZ</label><input type=\\\"text\\\" name=\\\"center\\\" id=\\\"centerx\\\" #centerx value={{_centerx}} (change)=changecenter(centerx.value,centery.value,centerz.value)><input type=\\\"text\\\" name=\\\"center\\\" #centery id=\\\"centery\\\" value={{_centery}} (change)=changecenter(centerx.value,centery.value,centerz.value)><input type=\\\"text\\\" name=\\\"center\\\"  #centerz id=\\\"centerz\\\" value={{_centerz}} (change)=changecenter(centerx.value,centery.value,centerz.value)><br/>\\r\\n\\t\\t<label class=\\\"name\\\" >Size</label><input type=\\\"text\\\" name=\\\"center\\\"  #size id=\\\"centersize\\\" value={{_centersize}} (change)=changecentersize(size.value)><br/>\\r\\n\\t\\t<hr/><div style=\\\"margin-left: 10px;\\\"><label  >Selection Settings:</label></div><!-- <br/> -->\\r\\n\\t\\t<div class=\\\"name\\\"><label >Line Precision</label></div><!-- <br/> -->\\r\\n  \\t\\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<label class=\\\"name\\\" >Radius</label>&nbsp;<input type=\\\"text\\\" value={{_linepre}} #linetext (change)=\\\"changeline(linetext.value)\\\" style=\\\"width: 30px; \\\">&nbsp;<span>0</span>\\r\\n\\r\\n  \\t\\t<mat-slider class=\\\"slider\\\" name=\\\"range\\\" id=\\\"linerange\\\" min=0 max=1 step=0.01 thumbLabel=true value=\\\"_linepre\\\" #linepre (change)=\\\"changeline(linepre.value.toPrecision(2))\\\" >\\r\\n  \\t\\t</mat-slider>\\r\\n\\r\\n  \\t\\t<span>1</span><br/>\\r\\n  \\t\\t<div class=\\\"name\\\"><label>Points Precision</label></div><!-- <br/> -->\\r\\n  \\t\\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<label class=\\\"name\\\" >Radius</label>&nbsp;<input type=\\\"text\\\" value={{_materialpoint}} #pointtext1 (change)=\\\"changeradius(pointtext1.value)\\\" style=\\\"width: 30px; \\\">&nbsp;<span>0</span><mat-slider class=\\\"slider\\\" name=\\\"range\\\" id=\\\"sizerange\\\" min=0 max=5 step=0.1 thumbLabel=true value={{_materialpoint}} #pointsize1 (change)=\\\"changeradius(pointsize1.value.toPrecision(2))\\\" ></mat-slider><span>5</span><br/>\\r\\n  \\t\\t<!-- &nbsp;&nbsp;&nbsp;&nbsp;<label class=\\\"name\\\" >Selected</label>&nbsp;<input type=\\\"text\\\" value={{_pointsize}} #pointtext (change)=\\\"changepointsize(pointtext.value)\\\" style=\\\"width: 30px; \\\">&nbsp;<span>0</span><mat-slider class=\\\"slider\\\" name=\\\"range\\\" id=\\\"sizerange\\\" min=0 max=5 step=0.1 thumbLabel=true value={{_pointsize}} #pointsize (change)=\\\"changepointsize(pointsize.value.toPrecision(2))\\\" ></mat-slider><span>5</span><br/> -->\\r\\n  \\t\\t<div class=\\\"name\\\"><label >Points Size</label></div><!-- <br/> -->\\r\\n  \\t\\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<label class=\\\"name\\\" >Size</label>&nbsp;<input type=\\\"text\\\" value={{_pointsize}} #pointtext (change)=\\\"changepointsize(pointtext.value)\\\" style=\\\"width: 30px; \\\">&nbsp;<span>0</span><mat-slider class=\\\"slider\\\" name=\\\"range\\\" id=\\\"sizerange\\\" min=0 max=5 step=0.1 thumbLabel=true value={{_pointsize}} #pointsize (change)=\\\"changepointsize(pointsize.value.toPrecision(2))\\\" ></mat-slider><span>5</span><br/><!-- <input type=\\\"text\\\" value={{_materialpoint}} #pointtext1 (change)=\\\"changematerialpoint(pointtext1.value)\\\" style=\\\"width: 30px; \\\">&nbsp;<span>0</span><mat-slider class=\\\"slider\\\" name=\\\"range\\\" id=\\\"sizerange\\\" min=0 max=5 step=0.1 thumbLabel=true value={{_pointsize1}} #pointsize1 (change)=\\\"changematerialpoint(pointsize1.value.toPrecision(2))\\\" ></mat-slider><span>5</span><br/> -->\\r\\n  \\t\\t<hr/><label class=\\\"name\\\" >Hemisphere Light</label>&nbsp;&nbsp;<br/>\\r\\n\\t\\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<label class=\\\"name\\\" >Hue</label>&nbsp;\\r\\n\\t\\t<input type=\\\"text\\\" value={{hue}} #huetext (change)=\\\"changelight(huetext.value,slider1.value,slider2.value)\\\" style=\\\"width: 30px; \\\">&nbsp;<span>0</span><mat-slider class=\\\"slider\\\" name=\\\"range\\\" id=\\\"huerange\\\" min=0 max=1 step=0.01 thumbLabel=true value={{hue}} #slider (change)=\\\"changelight(slider.value,slider1.value,slider2.value)\\\" ></mat-slider><span>1</span><br/>\\r\\n\\t\\t&nbsp;<label class=\\\"name\\\" >Saturation</label>&nbsp;\\r\\n\\t\\t<input type=\\\"text\\\" value={{saturation}} #satutext (change)=\\\"changelight(slider.value,satutext.value,slider2.value)\\\" style=\\\"width: 30px; \\\">&nbsp;<span>0</span><mat-slider class=\\\"slider\\\" name=\\\"range\\\" id=\\\"satrange\\\" min=0 max=1 step=0.01 thumbLabel=true value={{saturation}} #slider1 (change)=\\\"changelight(slider.value,slider1.value,slider2.value)\\\" ></mat-slider><span>1</span><br/>\\r\\n\\t\\t&nbsp;&nbsp;<label class=\\\"name\\\" >Lightness</label>&nbsp;\\r\\n\\t\\t<input type=\\\"text\\\" value={{lightness}} #lighttext (change)=\\\"changelight(slider.value,slider1.value,lighttext.value)\\\" style=\\\"width: 30px; \\\">&nbsp;<span>0</span><mat-slider class=\\\"slider\\\" name=\\\"range\\\" id=\\\"lirange\\\" min=0 max=1 step=0.01 thumbLabel=true value={{lightness}} #slider2 (change)=\\\"changelight(slider.value,slider1.value,slider2.value)\\\" ></mat-slider><span>1</span><br/>\\r\\n  \\t</div>\\r\\n  </mat-tab>\\r\\n</mat-tab-group>\\r\\n</div>\\r\\n\"","import * as THREE from 'three';\r\nimport { Component, OnInit, Injector, ElementRef ,NgModule} from '@angular/core';\r\nimport { AngularSplitModule } from 'angular-split';\r\nimport {DataSubscriber} from \"../data/DataSubscriber\";\r\nimport {MatExpansionModule} from '@angular/material/expansion';\r\nimport * as gs from \"gs-json\";\r\nimport {ViewerComponent} from \"../viewer/viewer.component\";\r\n/*import {MatTabsModule} from '@angular/material/tabs';*/\r\n\r\n@Component({\r\n  selector: 'app-groups',\r\n  templateUrl: './groups.component.html',\r\n  styleUrls: ['./groups.component.css']\r\n})\r\nexport class GroupsComponent extends DataSubscriber implements OnInit {\r\n  myElement;\r\n  model:gs.IModel;\r\n  scene:THREE.Scene;\r\n  scene_and_maps: {\r\n          scene: gs.IThreeScene, \r\n          faces_map: Map<number, gs.ITopoPathData>, \r\n          wires_map: Map<number, gs.ITopoPathData>, \r\n          edges_map: Map<number, gs.ITopoPathData>,\r\n          vertices_map: Map<number, gs.ITopoPathData>,\r\n          points_map: Map<number, gs.ITopoPathData>} ;\r\n  groups:Array<any>;\r\n  //groups: gs.IGroup[]；\r\n  gridVisible:boolean;\r\n  axisVisible:boolean;\r\n  shadowVisible:boolean;\r\n  frameVisible:boolean;\r\n  pointVisible:boolean;\r\n  _centerx:number;\r\n  _centery:number;\r\n  _centerz:number;\r\n  _centersize:number;\r\n  raycaster:THREE.Raycaster;\r\n  _linepre:number;\r\n  _pointsize:number;\r\n  _materialpoint:number;\r\n  hue:number;\r\n  saturation:number;\r\n  lightness:number;\r\n  alight:THREE.HemisphereLight;\r\n  renderer: THREE.WebGLRenderer; \r\n  camera: THREE.PerspectiveCamera;\r\n  parent:Array<any>;\r\n\r\n  constructor(injector: Injector, myElement: ElementRef){\r\n  \tsuper(injector);\r\n    this.scene=this.dataService.getScene();\r\n    this.renderer= this.dataService.getRenderer();\r\n    this.camera= this.dataService.getCamera();\r\n    this.myElement = myElement;\r\n    this._centerx=this.dataService.centerx;\r\n    this._centery=this.dataService.centery;\r\n    this._centerz=this.dataService.centerz;\r\n    this._centersize=this.dataService.centersize;\r\n    this.raycaster=this.dataService.getraycaster();\r\n    this._pointsize=this.dataService.pointsize;\r\n    this._materialpoint=this.dataService.pointradius;\r\n    this.alight=this.dataService.getalight();\r\n    this.hue=this.dataService.hue;\r\n    this.saturation=this.dataService.saturation;\r\n    this.lightness=this.dataService.lightness;\r\n  }\r\n  ngOnInit() {\r\n    this.model= this.dataService.getGsModel(); \r\n    this.updateModel();\r\n    this.gridVisible=this.dataService.grid;\r\n    this.axisVisible=this.dataService.axis;\r\n    this.shadowVisible=this.dataService.shadow;\r\n    this.frameVisible=this.dataService.frame;\r\n    this.pointVisible=this.dataService.point;\r\n    if(this._centerx===undefined||this._centerx===0){\r\n      this._centerx=0;\r\n    }else{\r\n      this._centerx=this.dataService.centerx;\r\n    }\r\n     if(this._centery===undefined||this._centery===0){\r\n      this._centery=0;\r\n    }else{\r\n      this._centery=this.dataService.centery;\r\n    }\r\n    if(this._centerz===undefined||this._centerz===0){\r\n      this._centerz=0;\r\n    }else{\r\n      this._centerz=this.dataService.centerz;\r\n    }\r\n    if(this._centersize===undefined||this._centersize===100){\r\n      this._centersize=100;\r\n    }else{\r\n      this._centersize=this.dataService.centersize;\r\n    }\r\n    this.raycaster=this.dataService.getraycaster();\r\n    if(this._linepre===undefined||this._linepre===0.05){\r\n      this._linepre=0.05;\r\n    }else{\r\n      this._linepre=this.raycaster.linePrecision;\r\n    }\r\n    if(this._pointsize===undefined||this._pointsize===1){\r\n      this._pointsize=1;\r\n    }else{\r\n      this._pointsize=this.dataService.pointsize;\r\n    }\r\n    if(this._materialpoint===undefined||this._materialpoint===0.1){\r\n      this._materialpoint=0.1;\r\n    }else{\r\n      this._materialpoint=this.dataService.pointradius;\r\n    }\r\n    if(this.hue === undefined||this.hue===0) {\r\n        this.hue = 0;\r\n    } else {\r\n      this.hue=this.dataService.hue;\r\n    }\r\n    if(this.saturation === undefined||this.saturation===0.01) {\r\n        this.saturation = 0.01;\r\n    } else {\r\n      this.saturation=this.dataService.saturation;\r\n    }\r\n    if(this.lightness == undefined||this.lightness===0.47) {\r\n        this.lightness = 0.47;\r\n    } else {\r\n      this.lightness=this.dataService.lightness;\r\n    }\r\n  }\r\n\r\n  notify(message: string):void{ \r\n  \tif(message == \"model_update\" && this.scene){\r\n      this.ngOnInit();\r\n    }\r\n  }\r\n\r\n  updateModel():void{\r\n  \tif(this.model!==undefined){\r\n      try{\r\n        this.scene_and_maps= this.dataService.getscememaps();\r\n        this.getgroupname();\r\n      }catch(ex){\r\n        console.error(\"Error displaying model:\", ex);\r\n      }\r\n    }\r\n    \r\n  }\r\n\r\n   animate(self){\r\n\r\n   }\r\n\r\n  changegrid(){\r\n    this.gridVisible = !this.gridVisible;\r\n    if(this.gridVisible){\r\n      let gridhelper:THREE.GridHelper =new THREE.GridHelper( this._centersize,10);\r\n      gridhelper.name=\"GridHelper\";\r\n      let vector:THREE.Vector3=new THREE.Vector3(0,1,0);\r\n      gridhelper.lookAt(vector);\r\n      gridhelper.position.set(this._centerx,this._centery,this._centerz);\r\n      this.scene.add( gridhelper);\r\n    }else{\r\n      this.scene.remove(this.scene.getObjectByName(\"GridHelper\"));\r\n    }\r\n    this.renderer.render(this.scene, this.camera);\r\n    this.dataService.addgrid(this.gridVisible);\r\n  }\r\n\r\n  changepoint(){\r\n    this.pointVisible = !this.pointVisible;\r\n    let children:Array<any>=[];\r\n    for(var i=0;i<this.scene.children.length;i++){\r\n      if(this.scene.children[i].type===\"Scene\"){\r\n        for(var j=0;j<this.scene.children[i].children.length;j++){\r\n          if(this.scene.children[i].children[j].type===\"Points\"){\r\n            children.push(this.scene.children[i].children[j]);\r\n          }\r\n        }\r\n      }\r\n    }\r\n    if(this.pointVisible){\r\n      for(var i=0;i<children.length;i++){\r\n        children[i][\"material\"].transparent=false;\r\n        children[i][\"material\"].opacity=1;\r\n      }\r\n    }else{\r\n      for(var i=0;i<children.length;i++){\r\n        children[i][\"material\"].transparent=true;\r\n        children[i][\"material\"].opacity=0;\r\n      }\r\n    }\r\n    this.renderer.render(this.scene, this.camera);\r\n    this.dataService.addpoint(this.pointVisible);\r\n  }\r\n\r\n  changeaxis(){\r\n    this.axisVisible = !this.axisVisible;\r\n    if(this.axisVisible){\r\n      let axishelper:THREE.AxesHelper = new THREE.AxesHelper( 10 );\r\n      axishelper.name=\"AxisHelper\";\r\n      this.scene.add( axishelper);\r\n    }else{\r\n      this.scene.remove(this.scene.getObjectByName(\"AxisHelper\"));\r\n    }\r\n    this.renderer.render(this.scene, this.camera);\r\n    this.dataService.addaxis(this.axisVisible);\r\n  }\r\n\r\n  changeshadow(){\r\n    this.shadowVisible = !this.shadowVisible;\r\n    for(var i=0;i<this.scene.children.length;i++){\r\n      if(this.scene.children[i].type===\"DirectionalLight\")\r\n      {\r\n        if(this.shadowVisible){\r\n          this.scene.children[i].castShadow=true;\r\n        }\r\n        else{\r\n          this.scene.children[i].castShadow=false;\r\n        }\r\n      }\r\n    }\r\n    this.renderer.render(this.scene, this.camera);\r\n    this.dataService.addshadow(this.shadowVisible);\r\n  }\r\n\r\n  changeframe(){\r\n   this.frameVisible = !this.frameVisible;\r\n   if(this.frameVisible){\r\n    for(var i=0;i<this.scene.children.length;i++){\r\n      if(this.scene.children[i].type===\"Scene\"){\r\n        if(this.scene.children[i].children[0].type===\"Mesh\"){\r\n          this.scene.children[i].children[0].visible=false;\r\n        }\r\n      }\r\n    }\r\n  }else{\r\n    for(var i=0;i<this.scene.children.length;i++){\r\n      if(this.scene.children[i].type===\"Scene\"){\r\n        if(this.scene.children[i].children[0].type===\"Mesh\"){\r\n          this.scene.children[i].children[0].visible=true;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  this.renderer.render(this.scene, this.camera);\r\n   this.dataService.addframe(this.frameVisible);\r\n  }\r\n\r\n  changecenter(centerx,centery,centerz){\r\n    if(this.gridVisible){\r\n      let gridhelper:THREE.Object3D=this.scene.getObjectByName(\"GridHelper\");\r\n      gridhelper.position.set(centerx,centery,centerz);\r\n      this._centerx=centerx;\r\n      this._centery=centery;\r\n      this._centerz=centerz;\r\n      this.dataService.getcenterx(centerx);\r\n      this.dataService.getcentery(centery);\r\n      this.dataService.getcenterz(centerz);\r\n    }\r\n    this.renderer.render(this.scene, this.camera);\r\n  }\r\n\r\n  changecentersize(centersize){\r\n    if(this.gridVisible){\r\n      this._centersize=centersize;\r\n      this.scene.remove(this.scene.getObjectByName(\"GridHelper\"));\r\n      let gridhelper:THREE.GridHelper=new THREE.GridHelper(centersize,centersize);\r\n      gridhelper.name=\"GridHelper\";\r\n      let vector:THREE.Vector3=new THREE.Vector3(0,1,0);\r\n      gridhelper.lookAt(vector);\r\n      gridhelper.position.set(this._centerx,this._centery,this._centerz);\r\n      this.scene.add(gridhelper);\r\n      this.dataService.getcentersize(centersize);\r\n    }\r\n    this.renderer.render(this.scene, this.camera);\r\n  }\r\n  getcenter(){\r\n    for(var i=0;i<this.scene.children.length;i++){\r\n      if(this.scene.children[i].type===\"Scene\"){\r\n        for(var j=0;j<this.scene.children[i].children.length;j++){\r\n          if(this.scene.children[i].children[j].name===\"All points\"){\r\n            let center:THREE.Vector3=this.scene.children[i].children[j][\"geometry\"].boundingSphere.center;\r\n            let radius:number=this.scene.children[i].children[j][\"geometry\"].boundingSphere.radius;\r\n            let max:number=Math.ceil(radius+Math.max(Math.abs(center.x),Math.abs(center.y),Math.abs(center.z)))*2;\r\n            this._centerx=center.x;\r\n            this._centery=center.y;\r\n            this._centerz=center.z;\r\n            this._centersize=max;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    this.scene.remove(this.scene.getObjectByName(\"GridHelper\"));\r\n    let gridhelper:THREE.GridHelper=new THREE.GridHelper(this._centersize,10);\r\n    gridhelper.name=\"GridHelper\";\r\n    let vector:THREE.Vector3=new THREE.Vector3(0,1,0);\r\n    gridhelper.lookAt(vector);\r\n    gridhelper.position.set(this._centerx,this._centery,this._centerz);\r\n    this.scene.add(gridhelper);\r\n    this.dataService.getcenterx(this._centerx);\r\n    this.dataService.getcentery(this._centery);\r\n    this.dataService.getcenterz(this._centerz);\r\n    this.dataService.getcentersize(this._centersize);\r\n    this.renderer.render(this.scene, this.camera);\r\n  }\r\n  //chiange line precision\r\n  changeline(lineprecision){\r\n    this._linepre=lineprecision;\r\n    this.raycaster=this.dataService.getraycaster();\r\n    this.raycaster.linePrecision=lineprecision;\r\n    this.dataService.addraycaster(this.raycaster);\r\n    if(this.dataService.SelectVisible === 'Edges'||this.dataService.SelectVisible === 'Wires'){\r\n      for(var i=0;i<this.scene.children.length;i++){\r\n        if(this.scene.children[i].name===\"sphereInter\"){\r\n          let geometry:THREE.SphereGeometry = new THREE.SphereGeometry( lineprecision*15);\r\n          this.scene.children[i][\"geometry\"]=geometry;\r\n        }\r\n      }\r\n    }\r\n    this.renderer.render(this.scene, this.camera);\r\n  }\r\n  //change points size\r\n  changepointsize(pointsize){\r\n    this._pointsize=pointsize;\r\n    for(var i=0;i<this.scene.children.length;i++){\r\n      if(this.scene.children[i].name===\"Scene\"){\r\n        for(var j=0;j<this.scene.children[i].children.length;j++){\r\n          if(this.scene.children[i].children[j].name===\"All points\"){\r\n            this.scene.children[i].children[j][\"material\"].size=pointsize*10;\r\n          }\r\n        }\r\n      }\r\n      if(this.scene.children[i].name===\"selects\"&&this.scene.children[i].type===\"Points\"){\r\n        this.scene.children[i][\"material\"].size=pointsize;\r\n      }\r\n    }\r\n    this.renderer.render(this.scene, this.camera);\r\n    this.dataService.getpointsize(pointsize);\r\n    //this.dataService.getmaterialpoint(pointsize);\r\n  }\r\n\r\n  //change radius\r\n  changeradius(point){\r\n    this._materialpoint=point;\r\n    if(this.dataService.SelectVisible !== 'Edges'&&this.dataService.SelectVisible !== 'Wires'){\r\n      for(var i=0;i<this.scene.children.length;i++){\r\n        if(this.scene.children[i].name===\"sphereInter\"){\r\n          let geometry:THREE.SphereGeometry = new THREE.SphereGeometry( point*10);\r\n          this.scene.children[i][\"geometry\"]=geometry;\r\n        }\r\n      }\r\n    }\r\n    this.renderer.render(this.scene, this.camera);\r\n    this.dataService.getradius(point);\r\n  }\r\n\r\n  changelight(_hue,_saturation,_lightness){\r\n    this.hue=_hue;\r\n    this.saturation=_saturation;\r\n    this.lightness=_lightness;\r\n    let alight:THREE.HemisphereLight=this.alight;\r\n    this.dataService.gethue(_hue);\r\n    this.dataService.getsaturation(_saturation);\r\n    this.dataService.getlightness(_lightness);\r\n    this.alight.color.setHSL( _hue, _saturation,_lightness );\r\n    this.renderer.render(this.scene, this.camera);\r\n  }\r\n\r\n  getgroupname(){\r\n    this.groups=[];\r\n    const allgroup: gs.IGroup[] = this.model.getAllGroups();\r\n    for(var i=0;i<allgroup.length;i++){\r\n      let group:any={};\r\n      group.parent=allgroup[i].getParentGroup().getName();\r\n      group.props=allgroup[i].getProps();\r\n      group.name=allgroup[i].getName();\r\n      group.num_point=allgroup[i].getPoints().length;\r\n      group.points=allgroup[i].getPoints();\r\n      group.num_vertice=allgroup[i].getTopos(gs.EGeomType.vertices).length;\r\n      group.vertices=allgroup[i].getTopos(gs.EGeomType.vertices);\r\n      group.num_edge=allgroup[i].getTopos(gs.EGeomType.edges).length;\r\n      group.edges=allgroup[i].getTopos(gs.EGeomType.edges);\r\n      group.num_wire=allgroup[i].getTopos(gs.EGeomType.wires).length;\r\n      group.wires=allgroup[i].getTopos(gs.EGeomType.wires);\r\n      group.num_face=allgroup[i].getTopos(gs.EGeomType.faces).length;\r\n      group.faces=allgroup[i].getTopos(gs.EGeomType.faces);\r\n      group.num_object = allgroup[i].getObjs().length;\r\n      group.objects = allgroup[i].getObjs();\r\n      group.child=null;\r\n      this.groups.push(group);\r\n    }\r\n    this.addchildren();\r\n    //this.renderer.render(this.scene, this.camera);\r\n  }\r\n\r\n  addchildren(){\r\n    for(var i=0;i<this.groups.length;i++){\r\n      if(this.groups[i].parent!==null){\r\n        for(var j=0;j<this.groups.length;j++){\r\n          if(this.groups[i].parent===this.groups[j].name){\r\n            this.groups[j].child=this.groups[i];\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  selectpoint(group){\r\n    if(group.point!==0||group.child.num_point!==0){\r\n      let pointinitial:boolean=false;\r\n      let grouppoints:gs.IPoint[];;\r\n      if(group.point!==0){\r\n        grouppoints=group.points;\r\n        for(var j=0;j<this.scene.children.length;j++){\r\n          for(var i=0;i<grouppoints.length;i++){\r\n            if(grouppoints[i].getLabel()===this.scene.children[j].userData.id){\r\n              pointinitial=true;\r\n              this.scene.remove(this.scene.children[j]);\r\n            }\r\n          }\r\n        }\r\n      }\r\n      if(group.child.num_point!==0){\r\n        grouppoints=group.child.points;\r\n        for(var j=0;j<this.scene.children.length;j++){\r\n          for(var i=0;i<grouppoints.length;i++){\r\n            if(grouppoints[i].getLabel()===this.scene.children[j].userData.id){\r\n              pointinitial=true;\r\n              this.scene.remove(this.scene.children[j]);\r\n            }\r\n          }\r\n        }\r\n      }\r\n      if(pointinitial===false){\r\n        for(var i=0;i<grouppoints.length;i++){\r\n          let point:any={};\r\n          let label: string = grouppoints[i].getLabel();\r\n          //let id:string=grouppoints[i]._id;\r\n          let id:number=grouppoints[i].getID();\r\n          let verts_xyz: gs.XYZ = grouppoints[i].getLabelCentroid();\r\n          let geometry:THREE.Geometry=new THREE.Geometry();\r\n          geometry.vertices.push(new THREE.Vector3(verts_xyz[0],verts_xyz[1],verts_xyz[2]));\r\n          let pointsmaterial:THREE.PointsMaterial =new THREE.PointsMaterial( { color:0x00ff00,size:2} );\r\n          if(this.dataService.pointsize!==undefined){\r\n              pointsmaterial.size=this.dataService.pointsize;\r\n          }\r\n          let points:THREE.Points = new THREE.Points( geometry, pointsmaterial);\r\n          points.userData.id=label;\r\n          //points[\"material\"].needsUpdate=true;\r\n          points.name=\"selects\";\r\n          this.scene.add(points);\r\n          point.label=label;\r\n          point.id=id;\r\n          point.label_xyz=verts_xyz;\r\n          point.path=id;\r\n          point.type=\"All points\";\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  selectvertice(group){\r\n    if(group.vertice!==0){\r\n      let vertixinitial:boolean=false;\r\n      let groupvertices:gs.IVertex[]=group.vertices;\r\n      for(var j=0;j<this.scene.children.length;j++){\r\n        for(var i=0;i<groupvertices.length;i++){\r\n          if(groupvertices[i].getLabel()===this.scene.children[j].userData.id){\r\n            vertixinitial=true;\r\n            this.scene.remove(this.scene.children[j]);\r\n          }\r\n        }\r\n      }\r\n      if(vertixinitial===false){\r\n        for(var i=0;i<groupvertices.length;i++){\r\n          let point:any=[];\r\n          let label: string = groupvertices[i].getLabel();\r\n          let id:number=groupvertices[i].getPoint().getID();\r\n          let verts_xyz: gs.XYZ = groupvertices[i].getLabelCentroid();\r\n          let geometry=new THREE.Geometry();\r\n          geometry.vertices.push(new THREE.Vector3(verts_xyz[0],verts_xyz[1],verts_xyz[2]));\r\n          let pointsmaterial=new THREE.PointsMaterial( { color:0x00ff00,size:2} );\r\n          if(this.dataService.pointsize!==undefined){\r\n              pointsmaterial.size=this.dataService.pointsize;\r\n          }\r\n          let points = new THREE.Points( geometry, pointsmaterial);\r\n          points.userData.id=label;\r\n          //points[\"material\"].needsUpdate=true;\r\n          points.name=\"selects\";\r\n          this.scene.add(points);\r\n          point.label=label;\r\n          point.id=id;\r\n          point.label_xyz=verts_xyz;\r\n          point.path=id;\r\n          point.type=\"All points\";\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  selectedge(group){\r\n    if(group.edge!==0){\r\n      let edgeinitial:boolean=false;\r\n      let groupedges:gs.IEdge[]=group.edges;\r\n      for(var j=0;j<this.scene.children.length;j++){\r\n        for(var i=0;i<groupedges.length;i++){\r\n          if(groupedges[i].getLabel()===this.scene.children[j].userData.id){\r\n            edgeinitial=true;\r\n            this.scene.remove(this.scene.children[j]);\r\n          }\r\n        }\r\n      }\r\n      if(edgeinitial===false){\r\n        for(var i=0;i<groupedges.length;i++){\r\n          let edge:any=[];\r\n          let label: string = groupedges[i].getLabel();\r\n          let id:string=groupedges[i].getLabel();\r\n          let label_xyz: gs.XYZ = groupedges[i].getLabelCentroid();\r\n          let verts: gs.IVertex[] = groupedges[i].getVertices();\r\n          let verts_xyz: gs.XYZ[] = verts.map((v) => v.getPoint().getPosition());\r\n          let geometry:THREE.Geometry =new THREE.Geometry();\r\n          for(var i=0;i<verts_xyz.length;i++){\r\n            geometry.vertices.push(new THREE.Vector3(verts_xyz[i][0],verts_xyz[i][1],verts_xyz[i][2]));\r\n          }\r\n          let material:THREE.LineBasicMaterial=new THREE.LineBasicMaterial( { color:0x00ff00,side:THREE.DoubleSide} );\r\n          let line:THREE.Line = new THREE.Line( geometry, material);\r\n          line.userData.id=edge.getLabel();\r\n          //line[\"material\"].needsUpdate=true;\r\n          line.name=\"selects\";\r\n          this.scene.add(line);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  selectwire(group){\r\n    if(group.wire!==0){\r\n      let groupwires:gs.IWire[]=group.wires;\r\n      let wireinitial:boolean=false;\r\n      for(var j=0;j<this.scene.children.length;j++){\r\n        for(var i=0;i<groupwires.length;i++){\r\n          if(groupwires[i].getLabel()===this.scene.children[j].userData.id){\r\n            wireinitial=true;\r\n            this.scene.remove(this.scene.children[j]);\r\n          }\r\n        }\r\n      }\r\n      if(wireinitial===false){\r\n        for(var i=0;i<groupwires.length;i++){\r\n          let wire:any=[];\r\n          let label: string = groupwires[i].getLabel();\r\n          let label_xyz: gs.XYZ = groupwires[i].getLabelCentroid();\r\n          let verts: gs.IVertex[] = groupwires[i].getVertices();\r\n          let verts_xyz: gs.XYZ[] = verts.map((v) => v.getPoint().getPosition());\r\n          if (groupwires[i].isClosed()) {verts_xyz.push(verts_xyz[0]);}\r\n          let geometry:THREE.Geometry=new THREE.Geometry();\r\n          for(var i=0;i<verts_xyz.length;i++){\r\n            geometry.vertices.push(new THREE.Vector3(verts_xyz[i][0],verts_xyz[i][1],verts_xyz[i][2]));\r\n          }\r\n          let material:THREE.LineBasicMaterial=new THREE.LineBasicMaterial( { color:0x00ff00,side:THREE.DoubleSide} );\r\n          let line:THREE.Line = new THREE.Line( geometry, material);\r\n          line.userData.id=label;\r\n          //line[\"material\"].needsUpdate=true;\r\n          line.name=\"selects\";\r\n          this.scene.add(line);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  selectface(group){\r\n    if(group.face!==0){\r\n      let groupfaces:gs.IFace[]=group.faces;\r\n      let faceinitial:boolean=false;\r\n      for(var j=0;j<this.scene.children.length;j++){\r\n        for(var i=0;i<groupfaces.length;i++){\r\n          if(groupfaces[i].getLabel()===this.scene.children[j].userData.id){\r\n            faceinitial=true;\r\n            this.scene.remove(this.scene.children[j]);\r\n          }\r\n        }\r\n      }\r\n      if(faceinitial===false){\r\n        for(var i=0;i<groupfaces.length;i++){\r\n          let face:any=[];\r\n          let label: string = groupfaces[i].getLabel();\r\n          let label_xyz: gs.XYZ = face.getLabelCentroid();\r\n          let verts: gs.IVertex[] = face.getVertices();\r\n          let verts_xyz: gs.XYZ[] = verts.map((v) => v.getPoint().getPosition());\r\n          let geometry:THREE.Geometry=new THREE.Geometry();\r\n          for(var i=0;i<verts_xyz.length;i++){\r\n            geometry.vertices.push(new THREE.Vector3(verts_xyz[i][0],verts_xyz[i][1],verts_xyz[i][2]));\r\n          }\r\n          let material:THREE.LineBasicMaterial=new THREE.LineBasicMaterial( { color:0x00ff00,side:THREE.DoubleSide} );\r\n          let line:THREE.Line = new THREE.Line( geometry, material);\r\n          line.userData.id=face.getLabel();\r\n          //line[\"material\"].needsUpdate=true;\r\n          line.name=\"selects\";\r\n          this.scene.add(line);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  \r\n  selectobject(group){\r\n    if(group.face!==0){\r\n      this.selectface(group);\r\n    }else if(group.wire!==0){\r\n      this.selectwire(group);\r\n    }else if(group.edge!==0){\r\n      this.selectedge(group);\r\n    }else if(group.point!==0){\r\n      this.selectpoint(group);\r\n    }\r\n  }\r\n\r\n}","module.exports = \"#toolwindow{\\r\\n  background-color:white;\\r\\n  font-family:sans-serif;\\r\\n  width: 100%;\\r\\n  position:relative;\\r\\n}\\r\\n#gsattri-bar{\\r\\n  background-color: #f1f1f1 !important;\\r\\n  position:relative;\\r\\n  display: inline-flex;\\r\\n  width: 100%;\\r\\n}\\r\\n#toolbar{\\r\\n  background-color: #f1f1f1 !important;\\r\\n  width: 48%;\\r\\n  height: 30px;\\r\\n  margin:0px;\\r\\n  overflow: hidden !important;\\r\\n  font-family:sans-serif;\\r\\n  position: relative !important;\\r\\n}\\r\\n#pagination{\\r\\n  width: 48%;\\r\\n  height: 30px;\\r\\n  position: relative ;\\r\\n  top:unset !important;\\r\\n  margin: 0px;\\r\\n  background-color: #f1f1f1 !important;\\r\\n}\\r\\n.table_ojbs{\\r\\n  table-layout:fixed;\\r\\n  overflow-x: scroll !important;\\r\\n  font-family:sans-serif;\\r\\n}\\r\\n.Number{\\r\\n  overflow:hidden; \\r\\n  white-space:nowrap; \\r\\n}\\r\\n#toolview{\\r\\n  position:relative;\\r\\n  margin-top: 0px;\\r\\n  width: 100%;\\r\\n  float: left;\\r\\n}\\r\\n#selectedname{\\r\\n  font-size: 12px;\\r\\n  vertical-align: middle;\\r\\n}\\r\\n#gsv-point{\\r\\n  margin-left:25px;\\r\\n}\\r\\n#gsv-selected{\\r\\n  margin-left:30px;\\r\\n}\\r\\n.gsv-toolbar{\\r\\n  font-size:15px;\\r\\n  background-color:transparent;\\r\\n  border:0;\\r\\n  font-family:sans-serif;\\r\\n  padding-top:1px;\\r\\n  padding-right: 6px;\\r\\n  padding-bottom: 1px;\\r\\n  padding-left: 6px;\\r\\n  align-items: flex-start;\\r\\n  text-align: center;\\r\\n  cursor: default;\\r\\n  color: unset;\\r\\n  margin-right: 0px;\\r\\n  margin-left: 0px;\\r\\n  margin-bottom: 1px;\\r\\n  margin-top: 1px;\\r\\n  box-sizing: border-box;\\r\\n  border-width: unset;\\r\\n  border-style: unset;\\r\\n  border-color: unset;\\r\\n  -o-border-image: unset;\\r\\n     border-image: unset;\\r\\n}\\r\\n.visible{\\r\\n  background-color: white !important;\\r\\n  color:#395d73;\\r\\n}\\r\\n.selectvisible{\\r\\n  background-color:  white !important;\\r\\n  color:#395d73;\\r\\n}\\r\\n#table{\\r\\n  width:100% ;\\r\\n  height: 15px;\\r\\n}\\r\\n#tablename{\\r\\n  width:100% ;\\r\\n  height: 15px;\\r\\n  color:grey;\\r\\n}\\r\\n.table_text{\\r\\n  width:180px;\\r\\n  word-wrap:break-word;\\r\\n  font-weight: normal;\\r\\n}\\r\\n#numberbutton{\\r\\n  width:100%;\\r\\n  border:0;\\r\\n}\\r\\n#attrib{\\r\\n  overflow: hidden !important;\\r\\n  text-overflow: ellipsis !important;\\r\\n  table-layout:fixed !important;\\r\\n  white-space: nowrap !important;\\r\\n}\\r\\n/*.selectid{\\r\\n  background-color:#66CCFF;\\r\\n}*/\\r\\n#select{\\r\\n  position: relative;\\r\\n  float:right;\\r\\n  margin-right: 30px;\\r\\n}\\r\\n.my-pagination /deep/ .ngx-pagination{\\r\\n  margin:0px !important;\\r\\n  color:black !important;\\r\\n  float: right;\\r\\n  margin-right:20px !important;\\r\\n}\\r\\n.my-pagination /deep/ .ngx-pagination .current {\\r\\n  margin-top:0px;\\r\\n  color:black;\\r\\n  background-color: white;\\r\\n}\\r\\n\"","module.exports = \"<div id=\\\"toolwindow\\\">\\r\\n  <div id=\\\"gsattri-bar\\\" >\\r\\n  <div id=\\\"toolbar\\\">\\r\\n    <div style=\\\"width: 350px;position: relative;\\\">\\r\\n    <button id=\\\"gsv-point\\\" class=\\\"gsv-toolbar\\\" [class.visible]=\\\"Visible === 'Points'\\\" (click)=\\\"point(Visible)\\\"><span matTooltip=\\\"View Point Attributes\\\">P</span></button>\\r\\n    <button id=\\\"gsv-vertice\\\" class=\\\"gsv-toolbar\\\" [class.visible]=\\\"Visible === 'Vertices'\\\" (click)=\\\"vertice(Visible)\\\"><span matTooltip=\\\"View Vertice Attributes\\\">V</span></button>\\r\\n    <button id=\\\"gsv-edge\\\" class=\\\"gsv-toolbar\\\" [class.visible]=\\\"Visible === 'Edges'\\\" (click)=\\\"edge(Visible)\\\"><span matTooltip=\\\"View Edge Attributes\\\">E</span></button>\\r\\n    <button id=\\\"gsv-wire\\\" class=\\\"gsv-toolbar\\\" [class.visible]=\\\"Visible === 'Wires'\\\" (click)=\\\"wire(Visible)\\\"><span matTooltip=\\\"View Wire Attributes\\\">W</span></button>\\r\\n    <button id=\\\"gsv-face\\\" class=\\\"gsv-toolbar\\\" [class.visible]=\\\"Visible === 'Faces'\\\" (click)=\\\"face(Visible)\\\"><span matTooltip=\\\"View Face Attributes\\\">F</span></button>\\r\\n    <button id=\\\"gsv-object\\\" class=\\\"gsv-toolbar\\\" [class.visible]=\\\"Visible === 'Objs'\\\" (click)=\\\"object(Visible)\\\"><span matTooltip=\\\"View Object Attributes\\\">O</span></button>\\r\\n    <input id=\\\"gsv-selected\\\" class=\\\"gsv-toolbar\\\" type=\\\"checkbox\\\" (click)=\\\"changeselected()\\\">\\r\\n    <label id=\\\"selectedname\\\" value=\\\"selected\\\">Show selected only</label>\\r\\n  </div>\\r\\n  </div>\\r\\n  <div id=\\\"pagination\\\" >\\r\\n    <pagination-controls *ngIf=\\\"Visible === 'Points'\\\" class=\\\"my-pagination\\\" (pageChange)=\\\"p1 = $event\\\"></pagination-controls> \\r\\n    <pagination-controls *ngIf=\\\"Visible === 'Vertices'\\\" class=\\\"my-pagination\\\" (pageChange)=\\\"p2 = $event\\\"></pagination-controls> \\r\\n    <pagination-controls *ngIf=\\\"Visible === 'Edges'\\\" class=\\\"my-pagination\\\" (pageChange)=\\\"p3 = $event\\\"></pagination-controls> \\r\\n    <pagination-controls *ngIf=\\\"Visible === 'Wires'\\\" class=\\\"my-pagination\\\" (pageChange)=\\\"p4 = $event\\\"></pagination-controls> \\r\\n    <pagination-controls *ngIf=\\\"Visible === 'Faces'\\\" class=\\\"my-pagination\\\" (pageChange)=\\\"p5 = $event\\\"></pagination-controls>\\r\\n    <pagination-controls *ngIf=\\\"Visible === 'Objs'\\\" class=\\\"my-pagination\\\" (pageChange)=\\\"p6 = $event\\\"></pagination-controls>  \\r\\n  </div>\\r\\n</div>\\r\\n  <div id=\\\"toolview\\\">\\r\\n    <div *ngIf=\\\"Visible === 'Points'\\\">\\r\\n      <table matSort border=\\\"1\\\" cellspacing=\\\"0\\\" cellpadding=\\\"0\\\" bordercolor=\\\"#d0d0d0\\\" (matSortChange)=\\\"sortData($event)\\\">\\r\\n        <tr>\\r\\n          <th mat-sort-header=\\\"id\\\" align=center width=\\\"180px\\\"><div class=\\\"table_text\\\" >Points ID <input type=\\\"checkbox\\\" id=\\\"id\\\" class=\\\"checkbox\\\" style=\\\"float:right\\\" [checked]=\\\"checkpointid\\\" (click)=\\\"checkbox()\\\"></div></th>\\r\\n          <th mat-sort-header=\\\"x\\\" width=\\\"180px\\\" align=center><div class=\\\"table_text\\\">X<input type=\\\"checkbox\\\" style=\\\"float:right\\\" id=\\\"X\\\"  class=\\\"checkbox\\\" [checked]=\\\"checkX\\\" (click)=\\\"checkbox()\\\"></div></th>\\r\\n          <th mat-sort-header=\\\"y\\\" width=\\\"180px\\\" align=center><div class=\\\"table_text\\\">Y<input type=\\\"checkbox\\\" style=\\\"float:right\\\" id=\\\"Y\\\" class=\\\"checkbox\\\" [checked]=\\\"checkY\\\" (click)=\\\"checkbox()\\\"></div></th>\\r\\n          <th mat-sort-header=\\\"z\\\" width=\\\"180px\\\" align=center><div class=\\\"table_text\\\">Z<input type=\\\"checkbox\\\" style=\\\"float:right\\\" id=\\\"Z\\\" class=\\\"checkbox\\\" [checked]=\\\"checkZ\\\" (click)=\\\"checkbox()\\\"></div></th>\\r\\n          <th mat-sort-header={{name}} align=center width=\\\"180px\\\" class=\\\"checkbox\\\" *ngFor=\\\"let name of point_name;let idx=index\\\"><div class=\\\"table_text\\\" >{{name}}<input type=\\\"checkbox\\\" id={{name}} style=\\\"float:right\\\" (click)=\\\"checkbox()\\\"></div></th>\\r\\n      <!-- </table>\\r\\n      <table border=\\\"1\\\" cellspacing=\\\"0\\\" cellpadding=\\\"0\\\"  bordercolor=\\\"#d0d0d0\\\" *ngFor=\\\"let datascale of attribute| paginate: { itemsPerPage: 50, currentPage: p1 }\\\"> -->\\r\\n        <tr  *ngFor=\\\"let datascale of attribute| paginate: { itemsPerPage: 50, currentPage: p1 }\\\">\\r\\n          <td name=\\\"Number\\\" align=center  width=\\\"180px\\\"><div class=\\\"table_text\\\"><button width=\\\"180px\\\" id=\\\"numberbutton\\\" (click)=Onselect(datascale)>{{datascale.id}}</button></div></td>\\r\\n          <td width=\\\"180px\\\" align=center><div class=\\\"table_text\\\">{{datascale.x}}</div></td>\\r\\n          <td width=\\\"180px\\\" align=center><div class=\\\"table_text\\\">{{datascale.y}}</div></td>\\r\\n          <td width=\\\"180px\\\" align=center><div class=\\\"table_text\\\">{{datascale.z}}</div></td>\\r\\n          <td  id=\\\"attrib\\\" width=\\\"180px\\\" align=center *ngFor=\\\"let name of point_name; let idx=index\\\"><div class=\\\"table_text\\\" >{{datascale[idx]}}</div></td> \\r\\n        <tr>\\r\\n      </table>\\r\\n    </div>\\r\\n    <div *ngIf=\\\"Visible === 'Vertices'\\\">\\r\\n      <table matSort border=\\\"1\\\" cellspacing=\\\"0\\\" cellpadding=\\\"0\\\" bordercolor=\\\"#d0d0d0\\\" (matSortChange)=\\\"sortData($event)\\\">\\r\\n        <tr>\\r\\n          <th mat-sort-header=\\\"vertixlabel\\\" align=center width=\\\"180px\\\"><div class=\\\"table_text\\\">Vertices Label<input type=\\\"checkbox\\\" id=\\\"vertixid\\\" style=\\\"float:right\\\" [checked]=\\\"vertixid\\\" (click)=\\\"checkbox()\\\"></div></th>\\r\\n          <th mat-sort-header=\\\"pointid\\\" align=center width=\\\"180px\\\"><div class=\\\"table_text\\\">Points ID<input type=\\\"checkbox\\\" id=\\\"pointid\\\" style=\\\"float:right\\\"  [checked]=\\\"pointid\\\" (click)=\\\"checkbox()\\\"></div></th>\\r\\n          <th mat-sort-header={{name}} align=center width=\\\"180px\\\" *ngFor=\\\"let name of vertex_name\\\"><div class=\\\"table_text\\\">{{name}}<input type=\\\"checkbox\\\" id={{name}} style=\\\"float:right\\\" (click)=\\\"checkbox()\\\"></div></th>\\r\\n        </tr>\\r\\n      <!-- </table>\\r\\n      <table border=\\\"1\\\" cellspacing=\\\"0\\\" cellpadding=\\\"0\\\" bordercolor=\\\"#d0d0d0\\\" *ngFor=\\\"let datascale of attribute| paginate: { itemsPerPage: 50, currentPage: p2 }\\\"> -->\\r\\n        <tr *ngFor=\\\"let datascale of attribute| paginate: { itemsPerPage: 50, currentPage: p2 }\\\">\\r\\n          <td name=\\\"Number\\\" align=center  width=\\\"180px\\\"><div class=\\\"table_text\\\"><button  id=\\\"numberbutton\\\">{{datascale.vertixlabel}}</button></div></td>\\r\\n          <td  align=center  width=\\\"180px\\\"><div class=\\\"table_text\\\">{{datascale.pointid}}</div></td>\\r\\n          <td  id=\\\"attrib\\\" width=\\\"180px\\\" align=center *ngFor=\\\"let name of vertex_name; let idx=index\\\"><div sclass=\\\"table_text\\\">{{datascale[idx]}}</div></td> \\r\\n        </tr>\\r\\n      </table>\\r\\n    </div>\\r\\n    <div *ngIf=\\\"Visible === 'Edges'\\\">\\r\\n      <table matSort border=\\\"1\\\" cellspacing=\\\"0\\\" cellpadding=\\\"0\\\"  bordercolor=\\\"#d0d0d0\\\" (matSortChange)=\\\"sortData($event)\\\">\\r\\n        <tr>\\r\\n          <th mat-sort-header=\\\"label\\\" align=center width=\\\"180px\\\"><div class=\\\"table_text\\\">Edge ID<input type=\\\"checkbox\\\" style=\\\"float:right\\\" id=\\\"edgeid\\\" (click)=\\\"checkbox()\\\"></div></th>\\r\\n          <th mat-sort-header={{name}} align=center width=\\\"180px\\\" *ngFor=\\\"let name of edge_name\\\"><div class=\\\"table_text\\\">{{name}}<input type=\\\"checkbox\\\" style=\\\"float:right\\\" id={{name}} (click)=\\\"checkbox()\\\"></div></th> \\r\\n        </tr>\\r\\n      <!--</table>\\r\\n       <table border=\\\"1\\\" cellspacing=\\\"0\\\" cellpadding=\\\"0\\\"  bordercolor=\\\"#d0d0d0\\\" *ngFor=\\\"let datascale of attribute| paginate: { itemsPerPage: 50, currentPage: p3 }\\\" > -->\\r\\n        <tr *ngFor=\\\"let datascale of attribute| paginate: { itemsPerPage: 50, currentPage: p3 }\\\">\\r\\n          <td name=\\\"Number\\\" align=center  width=\\\"180px\\\"><div class=\\\"table_text\\\"><button  id=\\\"numberbutton\\\">{{datascale.label}}</button></div></td>\\r\\n          <td  id=\\\"attrib\\\" width=\\\"180px\\\" align=center *ngFor=\\\"let name of edge_name; let idx=index\\\"><div class=\\\"table_text\\\">{{datascale[idx]}}</div></td>\\r\\n        </tr>\\r\\n      </table>\\r\\n    </div>\\r\\n    <div *ngIf=\\\"Visible === 'Wires'\\\">\\r\\n      <table matSort border=\\\"1\\\" cellspacing=\\\"0\\\" cellpadding=\\\"0\\\"  bordercolor=\\\"#d0d0d0\\\" (matSortChange)=\\\"sortData($event)\\\">\\r\\n        <tr>\\r\\n          <th mat-sort-header=\\\"label\\\" align=center width=\\\"180px\\\"><div class=\\\"table_text\\\">Wire ID<input type=\\\"checkbox\\\" style=\\\"float:right\\\" (click)=\\\"checkbox()\\\"></div></th>\\r\\n          <th mat-sort-header={{name}} align=center width=\\\"180px\\\" *ngFor=\\\"let name of wire_name\\\"><div class=\\\"table_text\\\">{{name}}<input type=\\\"checkbox\\\" style=\\\"float:right\\\" id={{name}} (click)=\\\"checkbox()\\\"></div></th> \\r\\n        </tr>\\r\\n      <!-- </table>\\r\\n      <table border=\\\"1\\\" cellspacing=\\\"0\\\" cellpadding=\\\"0\\\"  bordercolor=\\\"#d0d0d0\\\" *ngFor=\\\"let datascale of attribute| paginate: { itemsPerPage: 50, currentPage: p4 }\\\" > -->\\r\\n        <tr *ngFor=\\\"let datascale of attribute| paginate: { itemsPerPage: 50, currentPage: p4 }\\\">\\r\\n          <td name=\\\"Number\\\" align=center  width=\\\"180px\\\"><div class=\\\"table_text\\\"><button  id=\\\"numberbutton\\\">{{datascale.label}}</button></div></td>\\r\\n          <td  id=\\\"attrib\\\" width=\\\"180px\\\" align=center *ngFor=\\\"let name of wire_name; let idx=index\\\"><div class=\\\"table_text\\\">{{datascale[idx]}}</div></td>\\r\\n        </tr>\\r\\n      </table>\\r\\n    </div>\\r\\n    <div *ngIf=\\\"Visible === 'Faces'\\\">\\r\\n      <table matSort border=\\\"1\\\" cellspacing=\\\"0\\\" cellpadding=\\\"0\\\"  bordercolor=\\\"#d0d0d0\\\" (matSortChange)=\\\"sortData($event)\\\">\\r\\n        <tr>\\r\\n          <th mat-sort-header=\\\"label\\\" align=center width=\\\"180px\\\"><div class=\\\"table_text\\\">Face ID<input type=\\\"checkbox\\\" style=\\\"float:right\\\" id=\\\"checkface\\\" [checked]=\\\"checkface\\\" (click)=\\\"checkbox()\\\"></div></th>\\r\\n          <th mat-sort-header={{name}} align=center width=\\\"180px\\\" *ngFor=\\\"let name of face_name\\\"><div class=\\\"table_text\\\">{{name}}<input type=\\\"checkbox\\\" style=\\\"float:right\\\" id={{name}} (click)=\\\"checkbox()\\\"></div></th> \\r\\n        </tr>\\r\\n      <!-- </table>\\r\\n      <table border=\\\"1\\\" cellspacing=\\\"0\\\" cellpadding=\\\"0\\\"  bordercolor=\\\"#d0d0d0\\\" *ngFor=\\\"let datascale of attribute| paginate: { itemsPerPage: 50, currentPage: p5 }\\\" > -->\\r\\n        <tr *ngFor=\\\"let datascale of attribute| paginate: { itemsPerPage: 50, currentPage: p5 }\\\">\\r\\n          <td name=\\\"Number\\\" align=center  width=\\\"180px\\\"><div class=\\\"table_text\\\"><button  id=\\\"numberbutton\\\">{{datascale.label}}</button></div></td>\\r\\n          <td  id=\\\"attrib\\\" width=\\\"180px\\\" align=center *ngFor=\\\"let name of face_name; let idx=index\\\"><div class=\\\"table_text\\\">{{datascale[idx]}}</div></td>\\r\\n        </tr>\\r\\n      </table>\\r\\n    </div>\\r\\n    <div *ngIf=\\\"Visible === 'Objs'\\\">\\r\\n      <table matSort border=\\\"1\\\" cellspacing=\\\"0\\\" cellpadding=\\\"0\\\"  bordercolor=\\\"#d0d0d0\\\" class=\\\"table_ojbs\\\" (matSortChange)=\\\"sortData($event)\\\">\\r\\n        <tr>\\r\\n          <th mat-sort-header=\\\"label\\\" name=\\\"Number\\\" align=center width=\\\"180px\\\"><div class=\\\"table_text\\\">Object ID<input type=\\\"checkbox\\\" style=\\\"float:right\\\" id=\\\"checkobj\\\" [checked]=\\\"checkobj\\\" (click)=\\\"checkbox()\\\"></div></th>\\r\\n          <th mat-sort-header={{name}} align=center width=\\\"180px\\\" *ngFor=\\\"let name of obj_name\\\" ><div class=\\\"table_text\\\">{{name}}<input type=\\\"checkbox\\\" style=\\\"float:right\\\" (click)=\\\"checkbox()\\\"></div></th>\\r\\n        </tr>\\r\\n      <!-- </table>\\r\\n      <table border=\\\"1\\\" cellspacing=\\\"0\\\" cellpadding=\\\"0\\\"  bordercolor=\\\"#d0d0d0\\\" *ngFor=\\\"let datascale of attribute| paginate: { itemsPerPage: 50, currentPage: p6 } \\\" class=\\\"table_ojbs\\\" > -->\\r\\n        <tr *ngFor=\\\"let datascale of attribute| paginate: { itemsPerPage: 50, currentPage: p6 } \\\">\\r\\n          <td name=\\\"Number\\\" align=center  width=\\\"180px\\\"><div class=\\\"table_text\\\"><button  id=\\\"numberbutton\\\">{{datascale.label}}</button></div></td>\\r\\n          <td  id=\\\"attrib\\\" width=\\\"180px\\\" align=center *ngFor=\\\"let name of obj_name; let idx=index\\\"><div class=\\\"table_text\\\">{{datascale[idx]}}</div></td>\\r\\n        </tr>\\r\\n      </table>\\r\\n    </div>\\r\\n  </div>\\r\\n\"","import * as THREE from 'three';\r\nimport { Component, OnInit, Injector, ElementRef } from '@angular/core';\r\nimport { AngularSplitModule } from 'angular-split';\r\nimport { DataService } from \"../data/data.service\";\r\nimport * as gs from \"gs-json\";\r\nimport {DataSubscriber} from \"../data/DataSubscriber\";\r\nimport {ViewerComponent} from \"../viewer/viewer.component\";\r\nimport {Sort} from '@angular/material';\r\n\r\n\r\n@Component({\r\n  selector: 'app-toolwindow',\r\n  templateUrl: './toolwindow.component.html',\r\n  styleUrls: ['./toolwindow.component.css']\r\n})\r\n\r\nexport class ToolwindowComponent extends DataSubscriber implements OnInit {\r\n  Visible:string=\"Objs\";\r\n  model:gs.IModel;\r\n  scene:THREE.Scene;\r\n  renderer: THREE.WebGLRenderer;\r\n  camera: THREE.PerspectiveCamera;\r\n  attribute:Array<any>;\r\n  selectedVisible:boolean;\r\n  myElement;\r\n  selectObj:Array<any>;\r\n  scene_and_maps: {\r\n          scene: gs.IThreeScene, \r\n          faces_map: Map<number, gs.ITopoPathData>, \r\n          wires_map: Map<number, gs.ITopoPathData>, \r\n          edges_map: Map<number, gs.ITopoPathData>,\r\n          vertices_map: Map<number, gs.ITopoPathData>,\r\n          points_map: Map<number, gs.ITopoPathData>} ;\r\n  obj_name:Array<any>;\r\n  face_name:Array<any>;\r\n  wire_name:Array<any>;\r\n  edge_name:Array<any>;\r\n  vertex_name:Array<any>;\r\n  point_name:Array<any>;\r\n  attrib_name:Array<any>;\r\n  checked:boolean;\r\n  checkface:boolean;\r\n  checkpointid:boolean;\r\n  checkX:boolean;\r\n  checkY:boolean;\r\n  checkZ:boolean;\r\n  pointid:boolean;\r\n  vertixid:boolean;\r\n  checkobj:boolean;\r\n  checkname:Array<any>;\r\n  sortedData;\r\n\r\n\r\n  constructor(injector: Injector, myElement: ElementRef){\r\n  \tsuper(injector);\r\n    this.scene=this.dataService.getScene();\r\n    this.renderer= this.dataService.getRenderer();\r\n    this.camera= this.dataService.getCamera();\r\n    this.selectedVisible=false;\r\n    this.attribute=[];\r\n    this.selectObj=[];\r\n    this.checkname=[];\r\n    this.myElement = myElement;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.model= this.dataService.getGsModel(); \r\n    this.Visible=this.dataService.visible;\r\n    this.updateModel();\r\n  }\r\n\r\n  notify(message: string):void{ \r\n    if(message == \"model_update\" && this.scene){\r\n      //this.updateModel();\r\n      this.ngOnInit();\r\n    }\r\n    this.selectObj=[];\r\n    for(var i=0;i<this.dataService.selecting.length;i++){\r\n       for(var n=0;n<this.scene.children.length;n++){\r\n        if(this.scene.children[n].type===\"Scene\"){\r\n          if(this.dataService.selecting[i].uuid===this.scene.children[n].children[0].uuid){\r\n             this.selectObj.push(this.scene.children[n].children[0].parent);\r\n          }\r\n        }\r\n      }\r\n    }\r\n    if(this.selectedVisible==true){\r\n      if(this.Visible===\"Objs\") this.objectcheck();\r\n      if(this.Visible===\"Faces\") this.facecheck();\r\n      if(this.Visible===\"Wires\") this.wirecheck();\r\n      if(this.Visible===\"Edges\") this.edgecheck();\r\n      if(this.Visible===\"Vertices\") this.verticecheck();\r\n      if(this.Visible===\"Points\") this.pointcheck();\r\n    }\r\n  }\r\n\r\n  updateModel():void{\r\n    if(this.model!==undefined){\r\n      try{\r\n        this.scene_and_maps= this.dataService.getscememaps();\r\n        this.object(this.Visible);\r\n        this.getvertices();\r\n      }catch(ex){\r\n        console.error(\"Error displaying model:\", ex);\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  getpoints():Array<any>{\r\n    var attrubtepoints=[];\r\n    this.point_name=[];\r\n    if(this.scene_and_maps!==undefined){\r\n      if(this.scene_and_maps.points_map!==null&&this.scene_and_maps.points_map.size!==0&&this.scene_and_maps.points_map!==undefined){\r\n        const point_attribs: gs.IEntAttrib[] = this.model.findAttribs(gs.EGeomType.points) as gs.IEntAttrib[];\r\n          if(point_attribs.length!==0){\r\n          for(var j=0;j<point_attribs.length;j++){\r\n            this.point_name.push(point_attribs[0].getName());\r\n          }\r\n        }\r\n        for(var i=0;i<this.scene_and_maps.points_map.size;i++){\r\n          const points: gs.IPoint = this.model.getGeom().getPoint(i) as gs.IPoint;\r\n          const label: string = points.getLabel();\r\n          const verts_xyz: gs.XYZ = points.getLabelCentroid();\r\n          var attributepoint:any=[];\r\n          if(verts_xyz!==undefined){\r\n            attributepoint.id=label;\r\n            attributepoint.x=verts_xyz[0];\r\n            attributepoint.y=verts_xyz[1];\r\n            attributepoint.z=verts_xyz[2];\r\n            if(point_attribs.length!==0){\r\n              for(var j=0;j<point_attribs.length;j++){\r\n                attributepoint[j]=points.getAttribValue(point_attribs[j]);\r\n              }\r\n            }\r\n            attrubtepoints.push(attributepoint);\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return attrubtepoints;\r\n  }\r\n\r\n  getvertices(){\r\n    var attributevertix=[];\r\n    var points=this.getpoints();\r\n    this.vertex_name=[];\r\n    if(this.scene_and_maps!==undefined){\r\n      if(this.scene_and_maps.vertices_map!==null&&this.scene_and_maps.vertices_map.size!==0&&this.scene_and_maps.vertices_map!==undefined){\r\n        const vertex_attribs: gs.ITopoAttrib[] = this.model.findAttribs(gs.EGeomType.vertices) as gs.ITopoAttrib[];\r\n        if(vertex_attribs.length!==0){\r\n          for(var n=0;n<vertex_attribs.length;n++){\r\n            this.vertex_name.push(vertex_attribs[n].getName()); \r\n            }\r\n          }\r\n        for(var i =0;i<this.scene_and_maps.vertices_map.size;i++){\r\n          const path: gs.ITopoPathData = this.scene_and_maps.vertices_map.get(i);\r\n          const vertices: gs.IVertex = this.model.getGeom().getTopo(path) as gs.IVertex;\r\n          var attributes:any=[];\r\n          const label: string = vertices.getLabel();\r\n          const verts_xyz: gs.XYZ = vertices.getLabelCentroid();\r\n          var attributes:any=[];\r\n          for(var j=0;j<points.length;j++){\r\n            if(points[j].x===verts_xyz[0]&&points[j].y===verts_xyz[1]&&points[j].z===verts_xyz[2]){\r\n              attributes.pointid=points[j].id;\r\n            }\r\n          }\r\n          attributes.vertixlabel=label;\r\n          attributes.path=path;\r\n          if(vertex_attribs.length!==0){\r\n            for(var j=0;j<vertex_attribs.length;j++){\r\n              //attributes[j]=vertices.getAttribValue(vertex_attribs[j]);\r\n            }\r\n          }\r\n          attributevertix.push(attributes);\r\n        }\r\n        this.dataService.addattrvertix(attributevertix);\r\n      }\r\n    }\r\n    return attributevertix;\r\n  }\r\n\r\n  getedges():Array<any>{\r\n    var attributeedge=[];\r\n    this.edge_name=[];\r\n    var edgelable=[];\r\n    if(this.scene_and_maps!==undefined){\r\n      if(this.scene_and_maps.edges_map!==null&&this.scene_and_maps.edges_map.size!==0&&this.scene_and_maps.edges_map!==undefined){\r\n        const edge_attribs: gs.ITopoAttrib[] = this.model.findAttribs(gs.EGeomType.edges) as gs.ITopoAttrib[];\r\n        if(edge_attribs.length!==0){\r\n          for(var j=0;j<edge_attribs.length;j++){\r\n            this.edge_name.push(edge_attribs[j].getName());\r\n          }\r\n        }\r\n        for(var i =0;i<this.scene_and_maps.edges_map.size;i++){\r\n          var path: gs.ITopoPathData = this.scene_and_maps.edges_map.get(i);\r\n          var edge: gs.IEdge = this.model.getGeom().getTopo(path) as gs.IEdge;\r\n          var attributes:any=[];\r\n          var label: string = edge.getLabel();\r\n          attributes.label=label;\r\n          if(edgelable.indexOf(label)===-1){\r\n            edgelable.push(label);\r\n            if(edge_attribs.length!==0){\r\n              for(var j=0;j<edge_attribs.length;j++){\r\n                //attributes[j]=edge.getAttribValue(edge_attribs[j]);\r\n              }\r\n            }\r\n            attributeedge.push(attributes);\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return attributeedge;\r\n  }\r\n\r\n  getwires():Array<any>{\r\n    var attributewire=[];\r\n    this.wire_name=[];\r\n    var wirelabel=[];\r\n    if(this.scene_and_maps!==undefined){\r\n      if(this.scene_and_maps.wires_map!==null&&this.scene_and_maps.wires_map.size!==0&&this.scene_and_maps.wires_map!==undefined){\r\n        const wire_attribs: gs.ITopoAttrib[] = this.model.findAttribs(gs.EGeomType.wires) as gs.ITopoAttrib[];\r\n        if(wire_attribs.length!==0){\r\n          for(var j=0;j<wire_attribs.length;j++){\r\n            this.wire_name.push(wire_attribs[j].getName());\r\n          }\r\n        }\r\n        for(var i =0;i<this.scene_and_maps.wires_map.size;i++){\r\n          var path: gs.ITopoPathData = this.scene_and_maps.wires_map.get(i);\r\n          var wire: gs.IWire = this.model.getGeom().getTopo(path) as gs.IWire;\r\n          var attributes:any=[];\r\n          var label: string = wire.getLabel();\r\n          attributes.label=label;\r\n          if(wirelabel.indexOf(label)===-1){\r\n            wirelabel.push(label);\r\n            if(wire_attribs.length!==0){\r\n              for(var j=0;j<wire_attribs.length;j++){\r\n                attributes[j]=wire.getAttribValue(wire_attribs[j]);\r\n              }\r\n            }\r\n            attributewire.push(attributes);\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return attributewire;\r\n  }\r\n\r\n  getfaces():Array<any>{\r\n    var attributeface=[];\r\n    this.face_name=[];\r\n    var facelabel=[];\r\n    if(this.scene_and_maps!==undefined){\r\n      if(this.scene_and_maps.faces_map!==null&&this.scene_and_maps.faces_map.size!==0&&this.scene_and_maps.faces_map!==undefined){\r\n        const face_attribs: gs.ITopoAttrib[] = this.model.findAttribs(gs.EGeomType.faces) as gs.ITopoAttrib[];\r\n        if(face_attribs.length!==0){\r\n          for(var j=0;j<face_attribs.length;j++){\r\n            this.face_name.push(face_attribs[j].getName());\r\n          }\r\n        }\r\n        for(var i =0;i<this.scene_and_maps.faces_map.size;i++){ \r\n          var path: gs.ITopoPathData = this.scene_and_maps.faces_map.get(i);\r\n          var face: gs.IFace = this.model.getGeom().getTopo(path) as gs.IFace;\r\n          var attributes:any=[];\r\n          var label: string = face.getLabel();      \r\n          attributes.label=label;\r\n          if(facelabel.indexOf(label)===-1){\r\n            facelabel.push(label);\r\n            if(face_attribs.length!==0){\r\n              for(var j=0;j<face_attribs.length;j++){\r\n                attributes[j]=face.getAttribValue(face_attribs[j]);\r\n              }\r\n            }\r\n            attributeface.push(attributes);\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return attributeface;\r\n  }\r\n\r\n  getoject():Array<any>{\r\n    var attributeobject=[];\r\n    this.obj_name=[];\r\n    this.attrib_name=[];\r\n    var atrib:any=[];\r\n    if(this.scene_and_maps!==undefined){\r\n      if(this.scene_and_maps.faces_map!==null&&this.scene_and_maps.faces_map.size!==0&&this.scene_and_maps.faces_map!==undefined){ \r\n        const obj_attribs: gs.IEntAttrib[] = this.model.findAttribs(gs.EGeomType.objs) as gs.IEntAttrib[];\r\n        if(obj_attribs.length!==0){\r\n          for(var j=0;j<obj_attribs.length;j++){\r\n              this.obj_name.push(obj_attribs[j].getName());\r\n              for(var i =0;i<this.scene_and_maps.faces_map.size;i++){\r\n              const path: gs.ITopoPathData = this.scene_and_maps.faces_map.get(i);\r\n              var obj: gs.IObj = this.model.getGeom().getObj(path.id) as gs.IObj;\r\n              atrib[j]=obj.getAttribValue(obj_attribs[j]);\r\n              this.attrib_name.push(atrib[j]);\r\n            }\r\n          }\r\n        }\r\n        for(var i =0;i<this.scene_and_maps.faces_map.size;i++){\r\n          const path: gs.ITopoPathData = this.scene_and_maps.faces_map.get(i);\r\n          if(i===0||path.id!==this.scene_and_maps.faces_map.get(i-1).id){\r\n            var attribute:any=[];\r\n            const label: string = \"o\"+path.id;\r\n            attribute.label=label;\r\n            for(var j=0;j<obj_attribs.length;j++){\r\n              var obj: gs.IObj = this.model.getGeom().getObj(path.id) as gs.IObj;\r\n              attribute[j]=obj.getAttribValue(obj_attribs[j]);\r\n            }\r\n            attributeobject.push(attribute);\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return attributeobject;\r\n  }\r\n\r\n  getchildren():Array<any>{\r\n    var children;\r\n      for (var i = 0; i<this.scene.children.length; i++) {\r\n        if(this.scene.children[i].name==\"Scene\") {\r\n          children=this.scene.children[i].children;\r\n          break;\r\n        }\r\n        if(i==this.scene.children.length-1) {\r\n          return [];\r\n        }\r\n      }\r\n    return children;\r\n  }\r\n\r\n  getscenechildren():Array<any>{\r\n    var scenechildren=[];\r\n    for(var n=0;n<this.scene.children.length;n++){\r\n      if(this.scene.children[n].type===\"Scene\"){\r\n        for(var i=0;i<this.scene.children[n].children.length;i++){\r\n            scenechildren.push(this.scene.children[n].children[i]);\r\n        }\r\n      }\r\n    }\r\n    return scenechildren;\r\n  }\r\n\r\n  point(Visible){\r\n  \tthis.Visible=\"Points\";\r\n    this.attribute=this.getpoints();\r\n    if(this.selectedVisible==true){\r\n      this.pointcheck();\r\n    }\r\n    if(this.dataService.checkpointid == undefined) {\r\n        this.dataService.checkpointid = false;\r\n    } else {\r\n      this.checkpointid=this.dataService.checkpointid;\r\n    }\r\n    if(this.dataService.checkX == undefined) {\r\n        this.dataService.checkX = false;\r\n    } else {\r\n      this.checkX=this.dataService.checkX;\r\n    }\r\n    if(this.dataService.checkY == undefined) {\r\n        this.dataService.checkY = false;\r\n    } else {\r\n      this.checkY=this.dataService.checkY;\r\n    }\r\n    if(this.dataService.checkZ == undefined) {\r\n        this.dataService.checkZ = false;\r\n    } else {\r\n      this.checkZ=this.dataService.checkZ;\r\n    }\r\n    this.dataService.visible=this.Visible;\r\n    //this.clearsprite();\r\n    /*this.sortedData=[];\r\n    for(var i=0;i<this.attribute.length;i++){\r\n      var datas={};\r\n      datas[\"id\"]=this.attribute[i].id;\r\n      datas[\"x\"]=this.attribute[i].x;\r\n      datas[\"y\"]=this.attribute[i].y;\r\n      datas[\"z\"]=this.attribute[i].z;\r\n      this.sortedData[i]=datas;\r\n    }*/\r\n  }\r\n\r\n  pointcheck(){\r\n    this.attribute=[];\r\n    var attributes:any=this.pointtovertix();\r\n    var points=this.getpoints();\r\n    for(var i=0;i<points.length;i++){\r\n      for(var j=0;j<attributes.length;j++){\r\n        if(points[i].id===attributes[j].pointid&&this.attribute.indexOf(points[i])===-1){\r\n          this.attribute.push(points[i]);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  pointtovertix():any{\r\n    var attributes:any=[];\r\n    var vertices=this.getvertices();\r\n    var selecting=this.dataService.getselecting();\r\n    var char:string;\r\n    var labels:any=[];\r\n    if(selecting.length!==0){\r\n      for(var i=0;i<selecting.length;i++){\r\n        for(var j=0;j<vertices.length;j++){\r\n          if(selecting[i][\"id\"]===vertices[j].pointid&&attributes.indexOf(vertices[j]) == -1){\r\n            attributes.push(vertices[j]);\r\n          }\r\n          if(selecting[i][\"type\"]===\"All edges\"){\r\n            const edge: gs.IEdge = this.model.getGeom().getTopo(selecting[i][\"path\"]) as gs.IEdge;\r\n            const verts: gs.IVertex[] = edge.getVertices();\r\n            for(var n=0;n<verts.length;n++){\r\n              var label=verts[n].getLabel();\r\n              if(label===vertices[j].vertixlabel&&attributes.indexOf(vertices[j]) == -1){\r\n                attributes.push(vertices[j]);\r\n              }\r\n            }\r\n          }\r\n          if(selecting[i][\"type\"]===\"All wires\"){\r\n            const wire: gs.IWire = this.model.getGeom().getTopo(selecting[i][\"path\"]) as gs.IWire;\r\n            const verts: gs.IVertex[] = wire.getVertices();\r\n            for(var n=0;n<verts.length;n++){\r\n              var label=verts[n].getLabel();\r\n              if(label===vertices[j].vertixlabel&&attributes.indexOf(vertices[j]) == -1){\r\n                attributes.push(vertices[j]);\r\n              }\r\n            }\r\n          }\r\n          if(selecting[i][\"type\"]===\"All faces\"){\r\n            const face: gs.IFace = this.model.getGeom().getTopo(selecting[i][\"path\"]) as gs.IFace;\r\n            const verts: gs.IVertex[] = face.getVertices();\r\n            for(var n=0;n<verts.length;n++){\r\n              var label=verts[n].getLabel();\r\n              if(label===vertices[j].vertixlabel&&attributes.indexOf(vertices[j]) == -1){\r\n                attributes.push(vertices[j]);\r\n              }\r\n            }\r\n          }\r\n          if(selecting[i][\"type\"]===\"All objs\"){\r\n            const face: gs.IFace = this.model.getGeom().getTopo(selecting[i][\"path\"]) as gs.IFace;\r\n            const faces: gs.IFace[]= face.getObj().getFaces();\r\n            for(var f=0;f<faces.length;f++){\r\n            const verts: gs.IVertex[] = faces[f].getVertices();\r\n              for(var n=0;n<verts.length;n++){\r\n                var label=verts[n].getLabel();\r\n                if(label===vertices[j].vertixlabel&&this.attribute.indexOf(vertices[j]) == -1){\r\n                  attributes.push(vertices[j]);\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return attributes;\r\n  }\r\n\r\n\r\n  vertice(Visible){\r\n  \tthis.Visible=\"Vertices\";\r\n  \tthis.attribute=this.getvertices();\r\n    if(this.selectedVisible==true){\r\n      this.verticecheck();\r\n    }\r\n    if(this.dataService.checkvertixid == undefined) {\r\n        this.dataService.checkvertixid = false;\r\n    } else {\r\n      this.vertixid=this.dataService.checkvertixid;\r\n    }\r\n    if(this.dataService.pointid == undefined) {\r\n        this.dataService.pointid = false;\r\n    } else {\r\n      this.pointid=this.dataService.pointid;\r\n    }\r\n    this.dataService.visible=this.Visible;\r\n    //this.clearsprite();\r\n  }\r\n\r\n  verticecheck(){\r\n    this.attribute=this.pointtovertix();\r\n  }\r\n\r\n  edge(Visible){\r\n  \tthis.Visible=\"Edges\";\r\n    this.attribute=[];\r\n    this.attribute=this.getedges();\r\n    if(this.selectedVisible==true){\r\n      this.edgecheck();\r\n    }\r\n    this.dataService.visible=this.Visible;\r\n    //this.clearsprite();\r\n  }\r\n\r\n\r\n  edgecheck(){\r\n    this.attribute=[];\r\n    var edges=this.getedges();\r\n    var selecting=this.dataService.getselecting();\r\n    if(selecting.length!==0){\r\n      for(var i=0;i<selecting.length;i++){\r\n        for(var j=0;j<edges.length;j++){\r\n          if(selecting[i].type===\"All edges\"){\r\n            if(selecting[i][\"id\"].indexOf(edges[j].label)>-1){\r\n              this.attribute.push(edges[j]);\r\n            }\r\n          }\r\n          if(selecting[i][\"type\"]===\"All faces\"){\r\n            const face: gs.IFace = this.model.getGeom().getTopo(selecting[i][\"path\"]) as gs.IFace;\r\n            const verts: gs.IEdge[] = face.getEdges();\r\n            for(var n=0;n<verts.length;n++){\r\n              var label=verts[n].getLabel();\r\n              if(label===edges[j].label&&this.attribute.indexOf(edges[j]) == -1){\r\n                this.attribute.push(edges[j]);\r\n              }\r\n            }\r\n          }\r\n          if(selecting[i][\"type\"]===\"All objs\"){\r\n            const face: gs.IFace = this.model.getGeom().getTopo(selecting[i][\"path\"]) as gs.IFace;\r\n            const faces: gs.IFace[]= face.getObj().getFaces();\r\n            for(var f=0;f<faces.length;f++){\r\n              const verts: gs.IEdge[] = faces[f].getEdges();\r\n              for(var n=0;n<verts.length;n++){\r\n                var label=verts[n].getLabel();\r\n                if(label===edges[j].label&&this.attribute.indexOf(edges[j]) == -1){\r\n                  this.attribute.push(edges[j]);\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  wire(Visible){\r\n  \tthis.Visible=\"Wires\";\r\n    this.attribute=[];\r\n    this.attribute=this.getwires();\r\n    if(this.selectedVisible==true){\r\n      this.wirecheck();\r\n    }\r\n    this.dataService.visible=this.Visible;\r\n  }\r\n\r\n  wirecheck(){\r\n    this.attribute=[];\r\n    var wires=this.getwires();\r\n    var selecting=this.dataService.getselecting();\r\n    if(selecting.length!==0){\r\n      for(var i=0;i<selecting.length;i++){\r\n        for(var j=0;j<wires.length;j++){\r\n          if(selecting[i][\"id\"]===wires[j].label){\r\n            this.attribute.push(wires[j]);\r\n          }\r\n          if(selecting[i][\"type\"]===\"All objs\"){\r\n            const face: gs.IFace = this.model.getGeom().getTopo(selecting[i][\"path\"]) as gs.IFace;\r\n            const wireses: gs.IWire[]= face.getObj().getWires();\r\n            for(var w=0;w<wireses.length;w++){\r\n              var label=wireses[w].getLabel();\r\n              if(label===wires[j].label&&this.attribute.indexOf(wires[j]) == -1){\r\n                this.attribute.push(wires[j]);\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  face(Visible){\r\n  \tthis.Visible=\"Faces\";\r\n  \tthis.attribute=[];\r\n    this.attribute=this.getfaces();\r\n    if(this.selectedVisible==true){\r\n      this.facecheck();\r\n    }\r\n    if(this.dataService.checkface == undefined) {\r\n        this.dataService.checkface = false;\r\n    } else {\r\n      this.checkface=this.dataService.checkface;\r\n    }\r\n    for(var n=0;n<this.face_name.length;n++){\r\n      if(this.dataService.checkname[n]===undefined){\r\n        this.dataService.checkname[n]=false;\r\n      }\r\n      /*else{\r\n        this.face_name[n]=this.dataService.checkname[n];\r\n      }*/\r\n    }\r\n  }\r\n\r\n  facecheck(){\r\n  \tthis.attribute=[];\r\n    var faces=this.getfaces();\r\n    var selecting=this.dataService.getselecting();\r\n    if(selecting.length!==0){\r\n      for(var i=0;i<selecting.length;i++){\r\n        for(var j=0;j<faces.length;j++){\r\n          if(selecting[i][\"id\"]===faces[j].label){\r\n            this.attribute.push(faces[j]);\r\n          }\r\n          if(selecting[i][\"type\"]===\"All objs\"){\r\n            const face: gs.IFace = this.model.getGeom().getTopo(selecting[i][\"path\"]) as gs.IFace;\r\n            const faceses: gs.IFace[]= face.getObj().getFaces();\r\n            for(var f=0;f<faceses.length;f++){\r\n              var label=faceses[f].getLabel();\r\n              if(label===faces[j].label&&this.attribute.indexOf(faces[j]) == -1){\r\n                this.attribute.push(faces[j]);\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  object(Visible){\r\n  \tthis.Visible=\"Objs\";\r\n    this.attribute=[];\r\n    this.attribute=this.getoject();\r\n    if(this.selectedVisible==true){\r\n      this.objectcheck();\r\n    }\r\n    if(this.dataService.checkobj == undefined) {\r\n        this.dataService.checkobj = false;\r\n    } else {\r\n      this.checkobj=this.dataService.checkobj;\r\n    }\r\n    this.dataService.visible=this.Visible;\r\n  }\r\n\r\n  objectcheck(){\r\n    this.attribute=[];\r\n    var object=this.getoject();\r\n    var selecting=this.dataService.getselecting();\r\n    if(selecting.length!==0){\r\n      for(var i=0;i<selecting.length;i++){\r\n        for(var j=0;j<object.length;j++){\r\n          if(selecting[i][\"id\"]===object[j].label){\r\n            this.attribute.push(object[j]);\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  changeselected(){\r\n  \tthis.selectedVisible = !this.selectedVisible;\r\n    if(this.selectedVisible){\r\n      if(this.Visible===\"Points\") this.pointcheck();\r\n      if(this.Visible===\"Vertices\") this.verticecheck();\r\n      if(this.Visible===\"Edges\") this.edgecheck();\r\n      if(this.Visible===\"Wires\") this.wirecheck();\r\n      if(this.Visible===\"Faces\") this.facecheck();\r\n      if(this.Visible===\"Objs\") this.objectcheck();\r\n    }\r\n    else{\r\n      if(this.Visible===\"Points\") this.point(this.Visible);\r\n      if(this.Visible===\"Vertices\") this.vertice(this.Visible);\r\n      if(this.Visible===\"Edges\") this.edge(this.Visible);\r\n      if(this.Visible===\"Wires\") this.wire(this.Visible);\r\n      if(this.Visible===\"Faces\") this.face(this.Visible);\r\n      if(this.Visible===\"Objs\") this.object(this.Visible);\r\n    }\r\n  }\r\n\r\n  Onselect(datascale){\r\n    if(this.Visible===\"Points\"){\r\n      var point:any=[];\r\n      point.label=datascale.id;\r\n      point.id=datascale.id;\r\n      point.path=datascale.id;\r\n      point.type=\"All points\";\r\n      point.label_xyz=[datascale.x,datascale.y,datascale.z];\r\n      var geometry=new THREE.Geometry();\r\n      geometry.vertices.push(new THREE.Vector3(point.label_xyz[0],point.label_xyz[1],point.label_xyz[2]));\r\n      var pointsmaterial=new THREE.PointsMaterial( { color:0x00ff00,size:1} );\r\n      if(this.dataService.pointsize!==undefined){\r\n          pointsmaterial.size=this.dataService.pointsize;\r\n      }\r\n      const points = new THREE.Points( geometry, pointsmaterial);\r\n      points.userData.id=point.id;\r\n      //points[\"material\"].needsUpdate=true;\r\n      points.name=\"selects\";\r\n      this.scene.add(points);\r\n      this.renderer.render(this.scene,this.camera);\r\n      this.dataService.addclickshow(point);\r\n    }\r\n    if(this.Visible===\"Vertices\"){\r\n      var vertice:any=[];\r\n      const path: gs.ITopoPathData=datascale.path;\r\n      const vertices: gs.IVertex = this.model.getGeom().getTopo(path) as gs.IVertex;\r\n      const label: string = vertices.getLabel();\r\n      const verts_xyz: gs.XYZ = vertices.getLabelCentroid();\r\n      vertice.label=label;\r\n      vertice.id=datascale.pointid;\r\n      vertice.path=datascale.path;\r\n      vertice.type=\"All points\";\r\n      vertice.label_xyz=[verts_xyz[0],verts_xyz[1],verts_xyz[2]];\r\n      var geometry=new THREE.Geometry();\r\n      geometry.vertices.push(new THREE.Vector3(verts_xyz[0],verts_xyz[1],verts_xyz[2]));\r\n      var pointsmaterial=new THREE.PointsMaterial( { color:0x00ff00,size:1} );\r\n      if(this.dataService.pointsize!==undefined){\r\n          pointsmaterial.size=this.dataService.pointsize;\r\n      }\r\n      const points = new THREE.Points( geometry, pointsmaterial);\r\n      points.userData.id=vertice.id;\r\n      //points[\"material\"].needsUpdate=true;\r\n      points.name=\"selects\";\r\n      this.scene.add(points);\r\n      this.renderer.render(this.scene,this.camera);\r\n      this.dataService.addclickshow(vertice);\r\n\r\n    }\r\n  \t/*if(this.Visible===\"Vertices\"){\r\n      var vertice:any=[];\r\n      const path: gs.ITopoPathData=datascale.path;\r\n      const vertices: gs.IVertex = this.model.getGeom().getTopo(path) as gs.IVertex;\r\n      const label: string = vertices.getLabel();\r\n      const verts_xyz: gs.XYZ = vertices.getLabelCentroid();\r\n      vertice.label=label;\r\n      vertice.id=datascale.pointid;\r\n      vertice.path=datascale.path;\r\n      vertice.type=\"All points\";\r\n      vertice.label_xyz=[verts_xyz[0],verts_xyz[1],verts_xyz[2]];\r\n      var geometry=new THREE.Geometry();\r\n      geometry.vertices.push(new THREE.Vector3(verts_xyz[0],verts_xyz[1],verts_xyz[2]));\r\n      var pointsmaterial=new THREE.PointsMaterial( { color:0x00ff00,size:1} );\r\n      if(this.dataService.pointsize!==undefined){\r\n          pointsmaterial.size=this.dataService.pointsize;\r\n      }\r\n      const points = new THREE.Points( geometry, pointsmaterial);\r\n      points.userData.id=vertice.id;\r\n      //points[\"material\"].needsUpdate=true;\r\n      points.name=\"selects\";\r\n      this.scene.add(points);\r\n      this.dataService.addclickshow(vertice);\r\n    }*/\r\n    if(this.Visible === \"Edges\"){\r\n\r\n    }\r\n  }\r\n\r\n  pointcheckbox(){\r\n    var index=[];\r\n      for(var i=0;i<this.getpoints().length;i++){\r\n        if(this.dataService.selecting.length!==0){\r\n          for(var j=0;j<this.dataService.selecting.length;j++){\r\n            if(this.dataService.selecting[j].type===\"All points\"){\r\n              var label:string=\"\";\r\n              if(this.getpoints()[i].id===this.dataService.selecting[j][\"id\"]){\r\n                if(document.getElementById(\"X\")[\"checked\"]===true){\r\n                  label=label.concat(\"X:\",this.getpoints()[i].x,'\\n');\r\n                }\r\n                if(document.getElementById(\"Y\")[\"checked\"]===true){\r\n                  label=label.concat(\"Y:\",this.getpoints()[i].y,'\\n');\r\n                }\r\n                if(document.getElementById(\"Z\")[\"checked\"]===true){\r\n                  label=label.concat(\"Z:\",this.getpoints()[i].z,'\\n');\r\n                }\r\n                for(var n=0;n<this.point_name.length;n++){\r\n                  if(document.getElementById(this.point_name[n])[\"checked\"]==true){\r\n                    label=label.concat(this.point_name[n],\":\",this.getpoints()[i][n]);\r\n                  }\r\n                }\r\n                //console.log(label);\r\n                this.dataService.addlabel(label);\r\n                }\r\n              }\r\n            }\r\n            \r\n          }\r\n        }\r\n\r\n  }\r\n\r\n  checkbox(){\r\n    if(this.Visible===\"Points\"){\r\n      this.dataService.addgetpoints(this.getpoints());\r\n      this.dataService.checkX=document.getElementById(\"X\")[\"checked\"];\r\n      this.dataService.checkY=document.getElementById(\"Y\")[\"checked\"];\r\n      this.dataService.checkZ=document.getElementById(\"Z\")[\"checked\"];\r\n      this.dataService.checkpointid=document.getElementById(\"id\")[\"checked\"];\r\n      for(var n=0;n<this.point_name.length;n++){\r\n        this.dataService.checkname[n]=document.getElementById(this.point_name[n])[\"checked\"];\r\n      }\r\n      this.dataService.addpointname(this.point_name);\r\n    }\r\n    if(this.Visible===\"Vertices\"){\r\n      this.dataService.addgetpoints(this.getvertices());\r\n      this.dataService.checkvertixid=document.getElementById(\"vertixid\")[\"checked\"];\r\n      this.dataService.pointid=document.getElementById(\"pointid\")[\"checked\"];\r\n      for(var n=0;n<this.vertex_name.length;n++){\r\n        this.dataService.checkname[n]=document.getElementById(this.vertex_name[n])[\"checked\"];\r\n      }\r\n      this.dataService.addpointname(this.vertex_name);\r\n    }\r\n    if(this.Visible===\"Edges\"){\r\n      this.dataService.addgetpoints(this.getedges());\r\n      this.dataService.checkedgeid=document.getElementById(\"edgeid\")[\"checked\"];\r\n      for(var n=0;n<this.edge_name.length;n++){\r\n        this.dataService.checkname[n]=document.getElementById(this.edge_name[n])[\"checked\"];\r\n      }\r\n      this.dataService.addpointname(this.edge_name);\r\n    }\r\n    if(this.Visible===\"Faces\"){\r\n      this.dataService.addgetpoints(this.getfaces());\r\n      this.dataService.checkface=document.getElementById(\"checkface\")[\"checked\"];\r\n      for(var n=0;n<this.face_name.length;n++){\r\n        this.dataService.checkname[n]=document.getElementById(this.face_name[n])[\"checked\"];\r\n      }\r\n      this.dataService.addpointname(this.face_name);\r\n    }\r\n    if(this.Visible===\"Objs\"){\r\n      this.dataService.addgetpoints(this.getoject());\r\n      this.dataService.checkobj=document.getElementById(\"checkobj\")[\"checked\"];\r\n      for(var n=0;n<this.obj_name.length;n++){\r\n        this.dataService.checkname[n]=document.getElementById(this.obj_name[n])[\"checked\"];\r\n      }\r\n      this.dataService.addpointname(this.obj_name);\r\n    }\r\n  }\r\n  sortData(sort: Sort) {\r\n    const data=this.attribute.slice();\r\n    if (!sort.active || sort.direction == '') {\r\n      this.attribute = data;\r\n      return;\r\n    }\r\n    if(this.Visible===\"Points\"){\r\n      this.attribute = data.sort((a, b) => {\r\n        let isAsc = sort.direction == 'asc';\r\n\r\n        switch (sort.active) {\r\n          case 'id': return this.compareid(a.id, b.id, isAsc);\r\n          case 'x': return this.compare(+a.x, +b.x, isAsc);\r\n          case 'y': return this.compare(+a.y, +b.y, isAsc);\r\n          case 'z': return this.compare(+a.z, +b.z, isAsc);\r\n          default: return 0;\r\n        }\r\n      });\r\n      for(var i=0;i<this.point_name.length;i++){\r\n        this.attribute = data.sort((a, b) => {\r\n        let isAsc = sort.direction == 'asc';\r\n          switch (sort.active) {\r\n          case this.point_name[i]: return this.compare(a[i], b[i], isAsc);\r\n          default: return 0;\r\n        }\r\n        });\r\n      }\r\n    }\r\n    if(this.Visible===\"Vertices\"){\r\n      var labelinitial:boolean=false;\r\n      this.attribute = data.sort((a, b) => {\r\n        let isAsc = sort.direction == 'asc';\r\n        switch (sort.active) {\r\n          case 'vertixlabel': labelinitial=true;return this.compare(a.vertixlabel, b.vertixlabel, isAsc);\r\n          case 'pointid': labelinitial=true;return this.compareid(a.pointid, b.pointid, isAsc);\r\n          default: return 0;\r\n        }\r\n      });\r\n      if(labelinitial===false){\r\n        for(var i=0;i<this.vertex_name.length;i++){\r\n          this.attribute = data.sort((a, b) => {\r\n          let isAsc = sort.direction == 'asc';\r\n            switch (sort.active) {\r\n            case this.vertex_name[i]: return this.compare(a[i], b[i], isAsc);\r\n            default: return 0;\r\n          }\r\n          });\r\n        }\r\n      }\r\n    }\r\n    if(this.Visible===\"Edges\"){\r\n      this.attribute = data.sort((a, b) => {\r\n        let isAsc = sort.direction == 'asc';\r\n        switch (sort.active) {\r\n          case 'label': return this.compare(a.label, b.label, isAsc);\r\n          default: return 0;\r\n        }\r\n      });\r\n      for(var i=0;i<this.edge_name.length;i++){\r\n        this.attribute = data.sort((a, b) => {\r\n        let isAsc = sort.direction == 'asc';\r\n          switch (sort.active) {\r\n          case this.edge_name[i]: return this.compare(a[i], b[i], isAsc);\r\n          default: return 0;\r\n        }\r\n        });\r\n      }\r\n    }\r\n    if(this.Visible===\"Wires\"){\r\n      this.attribute = data.sort((a, b) => {\r\n        let isAsc = sort.direction == 'asc';\r\n        switch (sort.active) {\r\n          case 'label': return this.compare(a.label, b.label, isAsc);\r\n          default: return 0;\r\n        }\r\n      });\r\n      for(var i=0;i<this.wire_name.length;i++){\r\n        this.attribute = data.sort((a, b) => {\r\n        let isAsc = sort.direction == 'asc';\r\n          switch (sort.active) {\r\n          case this.wire_name[i]: return this.compare(a[i], b[i], isAsc);\r\n          default: return 0;\r\n        }\r\n        });\r\n      }\r\n    }\r\n    if(this.Visible===\"Faces\"){\r\n      this.attribute = data.sort((a, b) => {\r\n        let isAsc = sort.direction == 'asc';\r\n        switch (sort.active) {\r\n          case 'label': return this.compare(a.label, b.label, isAsc);\r\n          default: return 0;\r\n        }\r\n      });\r\n      for(var i=0;i<this.face_name.length;i++){\r\n        this.attribute = data.sort((a, b) => {\r\n        let isAsc = sort.direction == 'asc';\r\n          switch (sort.active) {\r\n          case this.face_name[i]: return this.compare(a[i], b[i], isAsc);\r\n          default: return 0;\r\n        }\r\n        });\r\n      }\r\n    }\r\n    if(this.Visible===\"Objs\"){\r\n      var labelinitial:boolean=false;\r\n      this.attribute = data.sort((a, b) => {\r\n        let isAsc = sort.direction == 'asc';\r\n        switch (sort.active) {\r\n          case 'label': labelinitial=true;return this.compareid(a.label, b.label, isAsc);\r\n          default: return 0;\r\n        }\r\n      });\r\n      if(labelinitial===false){\r\n        for(var i=0;i<this.obj_name.length;i++){\r\n          this.attribute = data.sort((a, b) => {\r\n          let isAsc = sort.direction == 'asc';\r\n            switch (sort.active) {\r\n            case this.obj_name[i]: return this.compare(a[i], b[i], isAsc);\r\n            default: return 0;\r\n          }\r\n          });\r\n        }\r\n      }\r\n    }\r\n  }\r\n  compare(a, b, isAsc) {\r\n    return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\r\n  }\r\n  compareid(a, b, isAsc) {\r\n    return (Number(a.substring(1,a.length)) < Number(b.substring(1,b.length)) ? -1 : 1) * (isAsc ? 1 : -1);\r\n  }\r\n \r\n}","module.exports = \"#container {\\r\\n  position: relative;\\r\\n  height:100%;\\r\\n  width: 100%;\\r\\n  margin:0px;\\r\\n  overflow: hidden;\\r\\n  color: white;\\r\\n  font-family:sans-serif;\\r\\n}\\r\\n#container-top-right-resize { top: 0px; right: 0px; }\\r\\n#shownumber{\\r\\n  position: absolute;\\r\\n  float: right;\\r\\n  color:black;\\r\\n  right: 0px;\\r\\n  width: 115px;\\r\\n  bottom: 0px;\\r\\n  color:#395d73;\\r\\n  font-family:sans-serif;\\r\\n}\\r\\n/*#rotating{\\r\\n  width: 30px;\\r\\n  height: 25px;\\r\\n  font-size:15px;\\r\\n  right:0px; \\r\\n  text-align:center;\\r\\n  position: absolute;\\r\\n  top: 0px;\\r\\n  background-color:transparent;\\r\\n  border:0;\\r\\n}\\r\\n\\r\\n#paning{\\r\\n  width: 30px;\\r\\n  height: 25px;\\r\\n  font-size:15px;\\r\\n  right:0px; \\r\\n  text-align:center;\\r\\n  position: absolute;\\r\\n  top: 25px;\\r\\n  background-color:transparent;\\r\\n  border:0;\\r\\n}\\r\\n\\r\\n#zooming{\\r\\n  width: 30px;\\r\\n  height: 25px;\\r\\n  font-size:15px;\\r\\n  right:0px; \\r\\n  text-align:center;\\r\\n  position: absolute;\\r\\n  margin-top: 50px;\\r\\n  background-color:transparent;\\r\\n  border:0;\\r\\n}*/\\r\\n/*#imagery{\\r\\n  width: 30px;\\r\\n  height: 25px;\\r\\n  font-size:14px;\\r\\n  right:0px; \\r\\n  text-align:center;\\r\\n  position: absolute;\\r\\n  margin-top: 10px;\\r\\n  background-color:transparent;\\r\\n  border:0;\\r\\n}*/\\r\\n#zoomingfit{\\r\\n  width: 30px;\\r\\n  height: 25px;\\r\\n  font-size:14px;\\r\\n  right:0px; \\r\\n  text-align:center;\\r\\n  position: absolute;\\r\\n  margin-top: 10px;\\r\\n  background-color:transparent;\\r\\n  border:0;\\r\\n}\\r\\n#selecting{\\r\\n  width: 30px;\\r\\n  height: 25px;\\r\\n  font-size:14px;\\r\\n  right:0px; \\r\\n  text-align:center;\\r\\n  position: absolute;\\r\\n  margin-top: 35px;\\r\\n  background-color:transparent;\\r\\n  border:0;\\r\\n}\\r\\n#points{\\r\\n  width: 30px;\\r\\n  height: 25px;\\r\\n  font:14px bolder;\\r\\n  right:0px; \\r\\n  text-align:center;\\r\\n  position: absolute;\\r\\n  margin-top: 70px;\\r\\n  background-color:transparent;\\r\\n  border:0;\\r\\n  font-family:sans-serif;\\r\\n}\\r\\n#vertices{\\r\\n  width: 30px;\\r\\n  height: 25px;\\r\\n  font:14px bolder;\\r\\n  right:0px; \\r\\n  text-align:center;\\r\\n  position: absolute;\\r\\n  margin-top: 95px;\\r\\n  background-color:transparent;\\r\\n  border:0;\\r\\n  font-family:sans-serif;\\r\\n}\\r\\n#edges{\\r\\n  width: 30px;\\r\\n  height: 25px;\\r\\n  font:14px bolder;\\r\\n  right:0px; \\r\\n  text-align:center;\\r\\n  position: absolute;\\r\\n  margin-top: 120px;\\r\\n  background-color:transparent;\\r\\n  border:0;\\r\\n  font-family:sans-serif;\\r\\n}\\r\\n#wires{\\r\\n  width: 30px;\\r\\n  height: 25px;\\r\\n  font:14px bolder;\\r\\n  right:0px; \\r\\n  text-align:center;\\r\\n  position: absolute;\\r\\n  margin-top: 145px;\\r\\n  background-color:transparent;\\r\\n  border:0;\\r\\n  font-family:sans-serif;\\r\\n}\\r\\n#faces{\\r\\n  width: 30px;\\r\\n  height: 25px;\\r\\n  font:14px bolder;\\r\\n  right:0px; \\r\\n  text-align:center;\\r\\n  position: absolute;\\r\\n  margin-top: 170px;\\r\\n  background-color:transparent;\\r\\n  border:0;\\r\\n  font-family:sans-serif;\\r\\n}\\r\\n#objects{\\r\\n  width: 30px;\\r\\n  height: 25px;\\r\\n  font:14px bolder;\\r\\n  right:0px; \\r\\n  text-align:center;\\r\\n  position: absolute;\\r\\n  margin-top: 195px;\\r\\n  background-color:transparent;\\r\\n  border:0;\\r\\n  font-family:sans-serif;\\r\\n}\\r\\n#setting{\\r\\n  width: 30px;\\r\\n  height: 25px;\\r\\n  font-size:14px;\\r\\n  right:0px; \\r\\n  text-align:center;\\r\\n  position: absolute;\\r\\n  top: 10px;\\r\\n  background-color:transparent;\\r\\n  border:0;\\r\\n}\\r\\n.selected{\\r\\n  color: grey;\\r\\n\\r\\n}\\r\\n.visible{\\r\\n  color: grey;\\r\\n}\\r\\n.cursor {\\r\\n\\r\\n}\\r\\n.selectvisible{\\r\\n  background-color:  white !important;\\r\\n  color:#395d73;\\r\\n}\"","module.exports = \"<div id=\\\"container\\\"  \\r\\n    (mousemove)=\\\"onDocumentMouseMove($event)\\\" \\r\\n    (mousedown)=\\\"mousedown($event)\\\"\\r\\n    (mouseup)=\\\"mouseup($event)\\\"\\r\\n    (click)=\\\"render(this)\\\"\\r\\n\\t\\t(click)=\\\"onDocumentMouseDown($event)\\\">\\r\\n    <div *ngIf=\\\"_updatemodel === false\\\" style=\\\"position:absolute;color:red;margin-top: 50px;left:40%;width: auto;text-align: center;font-family:sans-serif;font-size: 14px;background-color: white;\\\">Error displaying model:{{text}}</div>\\r\\n    <div *ngIf=\\\"_modelshow === false\\\" style=\\\"position:absolute;color:red;margin-top: 50px;left:40%;width: auto;text-align: center;font-family:sans-serif;font-size: 14px;background-color: white;\\\">Model or Scene not defined.</div>\\r\\n\\r\\n\\r\\n    <!-- (mousemove)=\\\"requestanimate()\\\" \\r\\n    (click)=\\\"requestanimate()\\\" -->\\r\\n\\r\\n    <!-- (window:resize)=\\\"onResize($event)\\\" -->\\r\\n\\r\\n\\t\\r\\n  \\t\\t<!-- <button id=\\\"rotating\\\" \\r\\n  \\t\\t\\t[class.visible]=\\\"Visible === 'rotate'\\\" \\r\\n  \\t\\t\\t(click)=\\\"rotate()\\\">\\r\\n  \\t\\t\\t<i class=\\\"fa fa-refresh\\\"></i>\\r\\n  \\t\\t</button>\\r\\n\\r\\n  \\t\\t<button id=\\\"paning\\\"  \\r\\n  \\t\\t\\t[class.visible]=\\\"Visible === 'pan'\\\" \\r\\n  \\t\\t\\t(click)=\\\"pan()\\\">\\r\\n  \\t\\t\\t<i class=\\\"fa fa-hand-paper-o\\\"></i>\\r\\n  \\t\\t</button>\\r\\n\\r\\n  \\t\\t<button id=\\\"zooming\\\"  \\r\\n  \\t\\t\\t[class.visible]=\\\"Visible === 'zoom'\\\" \\r\\n  \\t\\t\\t(click)=\\\"Visible='zoom'\\\">\\r\\n  \\t\\t\\t<i class=\\\"fa fa-search\\\"></i>\\r\\n  \\t\\t</button>-->\\r\\n  \\t\\t\\r\\n  \\t\\t<button id=\\\"zoomingfit\\\"  \\r\\n  \\t\\t\\t[class.visible]=\\\"Visible === 'zoomfit'\\\" \\r\\n  \\t\\t\\t(click)=\\\"zoomfit()\\\">\\r\\n  \\t\\t\\t<span matTooltip=\\\"zoom to fit\\\"><i class=\\\"fa fa-arrows-alt\\\"></i></span>\\r\\n  \\t\\t</button> \\r\\n  \\t\\t\\r\\n  \\t\\t<!-- <button id=\\\"selecting\\\" [class.visible]=\\\"Visible === 'select'\\\" (click)= \\\"select($event, Visible)\\\" ><i class=\\\"fa fa-mouse-pointer\\\"></i></button> -->\\r\\n  \\t\\t\\r\\n  \\t\\t<!-- <button id=\\\"setting\\\" [class.selected]=\\\"settingVisible\\\" (click)= \\\"setting(settingVisible)\\\"><i class=\\\"fa fa-cog\\\"></i></button> -->\\r\\n\\r\\n      <button id=\\\"selecting\\\" [class.selected]=\\\"seVisible\\\" (click)= \\\"select(seVisible)\\\" ><span matTooltip=\\\"select\\\"><i class=\\\"fa fa-mouse-pointer\\\"></i></span></button>\\r\\n      <div id=\\\"shownumber\\\">\\r\\n        <tr>\\r\\n        <td  align=left style=\\\"width: 60px;\\\">Triangles&nbsp;&nbsp;</td>\\r\\n        <td  align=left style=\\\"width: 10px;\\\">{{renderer.info.render.faces}}</td>\\r\\n        </tr>\\r\\n        <tr>\\r\\n        <td  align=left style=\\\"width: 60px;\\\">Lines</td>\\r\\n        <td  align=left style=\\\"width: 10px;\\\">{{LineNo}}</td>\\r\\n        </tr>\\r\\n      </div>\\r\\n\\r\\n      <!-- <button id=\\\"imagery\\\"  \\r\\n        [class.selected]=\\\"imVisible\\\" (click)=\\\"leaflet()\\\">I\\r\\n      </button> -->\\r\\n      \\t\\r\\n      \\t<!--setting-->\\r\\n      \\t\\r\\n \\t\\t<!-- <app-setting *ngIf=\\\"settingVisible == true\\\"></app-setting> -->\\r\\n    <div *ngIf=\\\"seVisible == true\\\">\\r\\n        <button id=\\\"points\\\" [class.selectvisible]=\\\"SelectVisible === 'Points'\\\" (click)=\\\"pointselect(SelectVisible)\\\"><span matTooltip=\\\"Select Points\\\">P</span></button>\\r\\n        <button id=\\\"vertices\\\" [class.selectvisible]=\\\"SelectVisible === 'Vertices'\\\" (click)=\\\"verticeselect(SelectVisible)\\\"><span matTooltip=\\\"Select Vertices\\\">V</span></button>\\r\\n        <button id=\\\"edges\\\" [class.selectvisible]=\\\"SelectVisible === 'Edges'\\\" (click)=\\\"edgeselect(SelectVisible)\\\"><span matTooltip=\\\"Select Edges\\\">E</span></button>\\r\\n        <button id=\\\"wires\\\" [class.selectvisible]=\\\"SelectVisible === 'Wires'\\\" (click)=\\\"wireselect(SelectVisible)\\\"><span matTooltip=\\\"Select Wires\\\">W</span></button>\\r\\n        <button id=\\\"faces\\\" [class.selectvisible]=\\\"SelectVisible === 'Faces'\\\" (click)=\\\"faceselect(SelectVisible)\\\"><span matTooltip=\\\"Select Faces\\\">F</span></button>\\r\\n        <button id=\\\"objects\\\" [class.selectvisible]=\\\"SelectVisible === 'Objs'\\\" (click)=\\\"objectselect(SelectVisible)\\\"><span matTooltip=\\\"Select Objects\\\">O</span></button>\\r\\n      </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n\\t\\r\\n\\r\\n\\r\\n\"","import { Component, OnInit, Injector, ElementRef } from '@angular/core';\r\nimport * as THREE from 'three';\r\nimport { AngularSplitModule } from 'angular-split';\r\nimport { SettingComponent } from '../setting/setting.component';\r\nimport * as gs from \"gs-json\";\r\nimport {DataSubscriber} from \"../data/DataSubscriber\";\r\nimport {NgxPaginationModule} from 'ngx-pagination';\r\n\r\n@Component({\r\n  selector: 'app-viewer',\r\n  templateUrl: './viewer.component.html',\r\n  styleUrls: ['./viewer.component.css']\r\n})\r\nexport class ViewerComponent extends DataSubscriber implements OnInit {\r\n  \r\n  _model: gs.IModel;\r\n  scene: THREE.Scene;\r\n  renderer: THREE.WebGLRenderer;\r\n  camera: THREE.PerspectiveCamera;\r\n  controls: THREE.OrbitControls;\r\n  width: number;\r\n  height: number;\r\n  raycaster:THREE.Raycaster;\r\n  mouse:THREE.Vector2;\r\n  // check what needs to be global and refactor  \r\n  selecting:Array<any>;\r\n  basicMat:THREE.MeshPhongMaterial;\r\n  selectwireMat:THREE.LineBasicMaterial;\r\n  scene_and_maps: {\r\n          scene: gs.IThreeScene, \r\n          faces_map: Map<number, gs.ITopoPathData>, \r\n          wires_map: Map<number, gs.ITopoPathData>, \r\n          edges_map: Map<number, gs.ITopoPathData>,\r\n          vertices_map: Map<number, gs.ITopoPathData>,\r\n          points_map: Map<number, gs.ITopoPathData>} ;\r\n  myElement;\r\n  scenechildren:Array<any>;\r\n  textlabels: Array<any>=[];\r\n  starsGeometry:THREE.Geometry = new THREE.Geometry();\r\n  mDownTime: number;\r\n  mUpTime: number;\r\n  sphere:THREE.Mesh;\r\n  center:THREE.Vector3;\r\n  seVisible:boolean=false;\r\n  imVisible:boolean=false;\r\n  SelectVisible:string='Objs';\r\n  settingVisible:boolean=false;\r\n  LineNo:number=0;\r\n  clickatt:Array<any>;\r\n  _updatemodel:boolean=true;\r\n  text:string;\r\n  _modelshow:boolean=true;\r\n\r\n  constructor(injector: Injector, myElement: ElementRef) { \r\n    super(injector);\r\n    this.myElement = myElement;\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n    let container = this.myElement.nativeElement.children.namedItem(\"container\");\r\n    /// check for container\r\n    if(!container){\r\n      console.error(\"No container in Three Viewer\");\r\n      return;\r\n    }\r\n\r\n    ///\r\n    let width: number = container.offsetWidth;//container.clientWidth;\r\n    let height: number = container.offsetHeight;//container.clientHeight;\r\n\r\n    let scene: THREE.Scene = this.dataService.getScene(width, height);\r\n    let renderer: THREE.WebGLRenderer = this.dataService.getRenderer();\r\n    let camera: THREE.PerspectiveCamera = this.dataService.getCamera();\r\n    let controls: THREE.OrbitControls = this.dataService.getControls();\r\n    container.appendChild( renderer.domElement );\r\n\r\n    this.scene = scene;\r\n    this.renderer = renderer;\r\n    this.camera = camera;\r\n    this.controls = controls;\r\n    this.width = width;\r\n    this.height = height;\r\n    this.updateModel();\r\n\r\n    // todo: check and refactor what is required?\r\n    this.selecting = this.dataService.getselecting();  // todo: should this be in the data service??\r\n    this.mouse = new THREE.Vector2();\r\n    this.raycaster = new THREE.Raycaster();\r\n    this.raycaster.linePrecision=0.05;\r\n    this.scenechildren=this.dataService.getscenechild();\r\n    this.dataService.SelectVisible=this.SelectVisible;\r\n\r\n    var geometry = new THREE.SphereGeometry( 1 );\r\n    var material = new THREE.MeshBasicMaterial( { color: 0x00ff00,transparent:true,opacity:0.5 } );\r\n    this.sphere = new THREE.Mesh( geometry, material );\r\n    this.sphere.visible = false;\r\n    this.sphere.name=\"sphereInter\";\r\n    this.sphere.scale.set(0.1,0.1,0.1);\r\n    this.scene.add( this.sphere );\r\n\r\n    let self = this;\r\n    controls.addEventListener( 'change', function(){self.render( self);});\r\n    \r\n    for(var i=0;i<this.getchildren().length;i++){\r\n      this.getchildren()[i][\"material\"].transparent=false;\r\n    }\r\n    this.dataService.addraycaster(this.raycaster);\r\n    this.addgrid();\r\n    self.renderer.render( self.scene, self.camera );\r\n  }\r\n  //\r\n  //  checks if the data service has a data and calls update function for the viewer\r\n  //\r\n  notify(message: string): void{\r\n    if(message == \"model_update\" && this.scene){\r\n      this.updateModel();\r\n    }\r\n  }\r\n\r\n  animate(self) {\r\n    self.raycaster.setFromCamera(self.mouse,self.camera);\r\n    self.scenechildren=self.dataService.getscenechild();\r\n    var intersects = self.raycaster.intersectObjects(self.scenechildren);\r\n    for (var i = 0; i < self.scenechildren.length; i++) {\r\n      var currObj=self.scenechildren[i];\r\n      if(self.dataService.getSelectingIndex(currObj.uuid)<0) {\r\n        if ( intersects[ 0 ]!=undefined&&intersects[ 0 ].object.uuid==currObj.uuid) {\r\n          self.sphere.visible = true;\r\n          self.sphere.position.copy( intersects[ 0 ].point );\r\n        } else {\r\n          self.sphere.visible = false;\r\n        }\r\n      }\r\n    }\r\n    for(var i=0; i<self.textlabels.length; i++) {\r\n      self.textlabels[i].updatePosition();\r\n    }\r\n    if(self.dataService.clickshow!==undefined&&self.clickatt!==self.dataService.clickshow){\r\n      self.clickatt=self.dataService.clickshow;\r\n      self.clickshow();\r\n    }\r\n    self.renderer.render( self.scene, self.camera );\r\n  }\r\n\r\n  render(self){\r\n    for(var i=0; i<self.textlabels.length; i++) {\r\n      self.textlabels[i].updatePosition();\r\n    }\r\n    if(self.dataService.clickshow!==undefined&&self.clickatt!==self.dataService.clickshow){\r\n      self.clickatt=self.dataService.clickshow;\r\n      self.clickshow();\r\n    }\r\n    //self.onDocumentMouseDown();\r\n    self.renderer.render( self.scene, self.camera );\r\n  }\r\n\r\n  /// clears all children from the scene\r\n  clearScene(): void{\r\n    /// remove children from scene\r\n    for(var i=0; i < this.scene.children.length; i++){\r\n      if( this.scene.children[i].type === \"Scene\" ){\r\n        this.scene.remove(this.scene.children[i]);\r\n        i=i-1;\r\n      }\r\n      if(this.scene.children[i].name==\"selects\"){\r\n        this.scene.remove(this.scene.children[i]);\r\n        i=i-1;\r\n      }\r\n    }\r\n    for(var i=0;i<this.scene.children.length;i++){\r\n      if(this.scene.children[i].name==\"selects\"){\r\n        this.scene.remove(this.scene.children[i]);\r\n        i=i-1;\r\n      }\r\n    }\r\n    for(var i=0;i<this.textlabels.length;i++){\r\n      this.removeTextLabel(this.textlabels[i][\"id\"]);\r\n      i=i-1;\r\n    }\r\n  }\r\n\r\n  private lastChanged = undefined;\r\n  ngDoCheck(){\r\n    let container = this.myElement.nativeElement.children.namedItem(\"container\");\r\n    let width: number = container.offsetWidth;\r\n    let height: number = container.offsetHeight;\r\n    // this is when dimensions change\r\n    if(width!==this.width||height!==this.height){    \r\n      // compute time difference from last changed\r\n      let nowTime = Date.now();\r\n      let difference = this.lastChanged - nowTime;\r\n      if( Math.abs(difference) < 400 ){\r\n        // do nothing\r\n        // dimensions still changing\r\n        //console.log(\"Threshold too low: \" + Math.abs(difference) + \"ms\");\r\n      }\r\n      else{\r\n        //console.log(\"Threshold matched: \" + Math.abs(difference) + \"ms\");\r\n        this.onResize();\r\n      }\r\n      // add dimension change script\r\n      this.lastChanged = Date.now();\r\n    }\r\n    \r\n  }\r\n\r\n  // TODO Refactor\r\n  onResize() :void{\r\n    let container = this.myElement.nativeElement.children.namedItem(\"container\");\r\n    /// check for container\r\n    if(!container){\r\n      console.error(\"No container in Three Viewer\");\r\n      return;\r\n    }\r\n    ///\r\n    let width: number = container.offsetWidth;\r\n    let height: number = container.offsetHeight;\r\n    this.width = width;\r\n    this.height = height;\r\n    this.renderer.setSize(this.width,this.height);\r\n    this.camera.aspect=this.width/this.height;\r\n    this.camera.updateProjectionMatrix();\r\n  }\r\n  //\r\n  // update mode\r\n  // todo: optimize\r\n  // \r\n  updateModel(): void{\r\n    this._model = this.dataService.getGsModel(); \r\n    if( !this._model || !this.scene ){\r\n      console.warn(\"Model or Scene not defined.\");\r\n      this._modelshow=false;\r\n      return;\r\n    }\r\n    try{\r\n      this._updatemodel=true;\r\n      this._modelshow=true;\r\n      this.scene_and_maps= this.dataService.getscememaps();\r\n      const scene_data = this.scene_and_maps.scene;\r\n      this.clearScene();\r\n      let loader = new THREE.ObjectLoader();\r\n      // loading data\r\n      let objectData = loader.parse( scene_data );\r\n      this.seVisible=false;\r\n      this.imVisible=false;\r\n      this.LineNo=0;\r\n      // preprocessing\r\n      if( objectData.children!==undefined){\r\n        var radius=0;\r\n        for(var i=0;i< objectData.children.length;i++){\r\n          let chd = objectData.children[i];\r\n          //chd[\"material\"].needsUpdate=true;\r\n          chd[\"material\"].transparent=true;\r\n          chd[\"material\"].blending=1;\r\n          if( chd.name===\"All faces\"||chd.name===\"All wires\"||chd.name===\"All edges\"||chd.name===\"All vertices\"||\r\n            chd.name===\"Other lines\"||chd.name===\"All points\"){\r\n              chd[\"material\"].transparent=false;\r\n              chd[\"geometry\"].computeVertexNormals();\r\n              chd[\"geometry\"].computeBoundingBox();\r\n              chd[\"geometry\"].computeBoundingSphere();\r\n              if(chd.name===\"All points\"){\r\n                this.center=chd[\"geometry\"].boundingSphere.center;\r\n              }\r\n              if(chd.name===\"All edges\"){\r\n                this.basicMat=chd[\"material\"].color;\r\n              }else if(chd.name===\"Other lines\"){\r\n                this.basicMat=chd[\"material\"].color;\r\n              }\r\n              if(chd.type===\"LineSegments\"&&chd[\"geometry\"].index.count!==undefined){\r\n                this.LineNo=this.LineNo+chd[\"geometry\"].index.count;\r\n              }\r\n          }\r\n          if(chd[\"geometry\"]!=undefined&&chd[\"geometry\"].boundingSphere.radius!==null){\r\n            if(chd[\"geometry\"].boundingSphere.radius>radius){\r\n              radius=chd[\"geometry\"].boundingSphere.radius;\r\n              this.center=chd[\"geometry\"].boundingSphere.center;\r\n            }\r\n          }\r\n        }\r\n      }\r\n      // setting controls\r\n      this.controls.target.set(this.center.x,this.center.y,this.center.z);\r\n      this.controls.update();\r\n      // adding the object to the scene\r\n      this.scene.add(objectData);  \r\n      this.render(this);\r\n      this.dataService.getpoints=[];\r\n    }\r\n    catch(ex){\r\n      console.error(\"Error displaying model:\", ex);\r\n      this._updatemodel=false;\r\n      this.text=ex;\r\n    }\r\n  }\r\n\r\n  getMaterial(name: string): THREE.SpriteMaterial{\r\n    var canvas = document.createElement('canvas');\r\n    canvas.width = 256; \r\n    canvas.height = 256;\r\n    var context = canvas.getContext('2d');\r\n    context.textAlign = \"center\";\r\n    context.fillText( name , canvas.width/2, canvas.height/2);\r\n    context.font =\"Bold  100px sans-serif\";\r\n    var texture = new THREE.Texture(canvas) \r\n    //texture.needsUpdate = true;\r\n    var spriteMaterial = new THREE.SpriteMaterial( { map: texture, color: 0xffffff } );\r\n    return spriteMaterial;\r\n  }\r\n\r\n  getchildren():Array<any>{\r\n    var children;\r\n      for (var i = 0; i<this.scene.children.length; i++) {\r\n        if(this.scene.children[i].name==\"Scene\") {\r\n          children=this.scene.children[i].children;\r\n          break;\r\n        }\r\n        if(i==this.scene.children.length-1) {\r\n          return [];\r\n        }\r\n      }\r\n    return children;\r\n  }\r\n  clickshow(){\r\n    var label=this.clickatt[\"label\"];\r\n    var id=this.clickatt[\"id\"];\r\n    var label_xyz=this.clickatt[\"label_xyz\"];\r\n    var path=this.clickatt[\"path\"];\r\n    this.addTextLabel(label,label_xyz,id,path, \"All points\");\r\n  }\r\n\r\n  select(seVisible){\r\n    event.stopPropagation();\r\n    this.seVisible=!this.seVisible;\r\n    if(this.seVisible) {\r\n      if(this.SelectVisible===\"Objs\") this.objectselect(this.SelectVisible); \r\n      if(this.SelectVisible===\"Faces\") this.faceselect(this.SelectVisible); \r\n      if(this.SelectVisible===\"Edges\") this.edgeselect(this.SelectVisible); \r\n      if(this.SelectVisible===\"Vertices\") this.verticeselect(this.SelectVisible); \r\n      if(this.SelectVisible===\"Points\") this.pointselect(this.SelectVisible); \r\n      for(var i=0;i<this.getchildren().length;i++){\r\n        this.getchildren()[i][\"material\"].transparent=true;\r\n      }\r\n    }else{\r\n      for(var i=0;i<this.getchildren().length;i++){\r\n        this.getchildren()[i][\"material\"].transparent=false;\r\n        if(this.getchildren()[i].name==\"All edges\"){\r\n          this.getchildren()[i][\"material\"].color=this.basicMat;\r\n        }else if(this.getchildren()[i].name==\"Other lines\"){\r\n          this.getchildren()[i][\"material\"].color=this.basicMat;\r\n        }\r\n      }\r\n    }\r\n    \r\n  }\r\n\r\n  objectselect(SelectVisible){\r\n    event.stopPropagation();\r\n    this.SelectVisible=\"Objs\";\r\n    this.dataService.visible=\"Objs\";\r\n    document.getElementById(\"gsv-object\").style.color=null;\r\n    document.getElementById(\"gsv-face\").style.color=null;\r\n    document.getElementById(\"gsv-wire\").style.color=null;\r\n    document.getElementById(\"gsv-edge\").style.color=null;\r\n    document.getElementById(\"gsv-vertice\").style.color=null;\r\n    var scenechildren=[];\r\n    var children=this.getchildren();\r\n    var objsvisibel:boolean=true;\r\n    for(var i=0;i<children.length;i++){\r\n      if(children[i].name===\"All objs\"||children[i].name===\"All faces\"){\r\n        if(children[i][\"geometry\"].attributes.position.array.length!==0){\r\n        children[i][\"material\"].opacity=0.3;\r\n        children[i].name=\"All objs\";\r\n        scenechildren.push(children[i]);\r\n        }else{\r\n          objsvisibel=false;\r\n        }\r\n      }\r\n      if(children[i].name===\"All wires\") {\r\n        if(objsvisibel===true){\r\n        children[i][\"material\"].opacity=0;\r\n        }else{\r\n          children[i][\"material\"].opacity=0.6;\r\n          scenechildren.push(children[i]);\r\n        }\r\n      }\r\n      if(children[i].name===\"All edges\"||children[i].name===\"Other lines\") {children[i][\"material\"].opacity=0.1;children[i][\"material\"].color=this.basicMat;}\r\n      if(children[i].name===\"All vertices\") children[i][\"material\"].opacity=0;\r\n    }\r\n    this.dataService.addscenechild(scenechildren);\r\n    this.dataService.SelectVisible=this.SelectVisible;\r\n  }\r\n\r\n  faceselect(SelectVisible){\r\n    event.stopPropagation();\r\n    this.SelectVisible=\"Faces\";\r\n    this.dataService.visible=\"Faces\";\r\n    document.getElementById(\"gsv-object\").style.color=\"grey\";\r\n    document.getElementById(\"gsv-face\").style.color=null;\r\n    document.getElementById(\"gsv-wire\").style.color=null;\r\n    document.getElementById(\"gsv-edge\").style.color=null;\r\n    document.getElementById(\"gsv-vertice\").style.color=null;\r\n    var scenechildren=[];\r\n    var children=this.getchildren();\r\n    for(var i=0;i<children.length;i++){\r\n      if(children[i].name===\"All wires\") children[i][\"material\"].opacity=0.1;\r\n      if(children[i].name===\"All edges\"||children[i].name===\"Other lines\") {children[i][\"material\"].opacity=0.1;children[i][\"material\"].color=this.basicMat;}\r\n      if(children[i].name===\"All vertices\") children[i][\"material\"].opacity=0.1;\r\n      if(children[i].name===\"All objs\"||children[i].name===\"All faces\"){\r\n        children[i][\"material\"].opacity=0.3;\r\n        children[i].name=\"All faces\";\r\n        scenechildren.push(children[i]);\r\n      }\r\n    }\r\n    this.dataService.addscenechild(scenechildren);\r\n    this.dataService.SelectVisible=this.SelectVisible;\r\n  }\r\n\r\n  wireselect(SelectVisible){\r\n    event.stopPropagation();\r\n    this.SelectVisible=\"Wires\";\r\n    var lineprecision=this.raycaster.linePrecision;\r\n    for(var i=0;i<this.scene.children.length;i++){\r\n      if(this.scene.children[i].name===\"sphereInter\"){\r\n        var geometry = new THREE.SphereGeometry( lineprecision*2);\r\n        this.scene.children[i][\"geometry\"]=geometry;\r\n        this.renderer.render(this.scene, this.camera);\r\n      }\r\n    }\r\n    document.getElementById(\"gsv-object\").style.color=\"grey\";\r\n    document.getElementById(\"gsv-face\").style.color=\"grey\";\r\n    document.getElementById(\"gsv-wire\").style.color=null;\r\n    document.getElementById(\"gsv-edge\").style.color=null;\r\n    document.getElementById(\"gsv-vertice\").style.color=null;\r\n    var scenechildren=[];\r\n    var children=this.getchildren();\r\n    for(var i=0;i<children.length;i++){\r\n      if(children[i].name===\"All objs\"||children[i].name===\"All faces\") children[i][\"material\"].opacity=0.1;\r\n      if(children[i].name===\"All edges\"||children[i].name===\"Other lines\") {children[i][\"material\"].opacity=0.1;children[i][\"material\"].color=this.basicMat;}\r\n      if(children[i].name===\"All vertices\") children[i][\"material\"].opacity=0.1;\r\n      if(children[i].name===\"All wires\"){\r\n        children[i][\"material\"].opacity=0.6;\r\n        scenechildren.push(children[i]);\r\n      }\r\n    }\r\n    this.dataService.addscenechild(scenechildren);\r\n    this.dataService.SelectVisible=this.SelectVisible;\r\n  }\r\n\r\n  edgeselect(SelectVisible){\r\n    event.stopPropagation();\r\n    this.SelectVisible=\"Edges\";\r\n    var lineprecision=this.raycaster.linePrecision;\r\n    for(var i=0;i<this.scene.children.length;i++){\r\n      if(this.scene.children[i].name===\"sphereInter\"){\r\n        var geometry = new THREE.SphereGeometry( lineprecision*15);\r\n        this.scene.children[i][\"geometry\"]=geometry;\r\n        this.renderer.render(this.scene, this.camera);\r\n      }\r\n    }\r\n    document.getElementById(\"gsv-object\").style.color=\"grey\";\r\n    document.getElementById(\"gsv-face\").style.color=\"grey\";\r\n    document.getElementById(\"gsv-wire\").style.color=\"grey\";\r\n    document.getElementById(\"gsv-edge\").style.color=null;\r\n    document.getElementById(\"gsv-vertice\").style.color=null;\r\n    var scenechildren=[];\r\n    var children=this.getchildren();\r\n    var edgevisible:boolean=true;\r\n    for(var i=0;i<children.length;i++){\r\n      children[i][\"material\"].transparent=true;\r\n      if(children[i].name===\"All edges\"||children[i].name===\"Other lines\"){\r\n        if(children[i].name===\"All edges\"){\r\n          if(children[i][\"geometry\"].attributes.position.array.length!==0){\r\n            children[i][\"material\"].opacity=0.3;\r\n            children[i][\"material\"].color=new THREE.Color(255,255,0);\r\n            scenechildren.push(children[i]);\r\n          }else{\r\n            edgevisible=false;\r\n          }\r\n        }else{\r\n          if(children[i][\"geometry\"].attributes.position.array.length!==0){\r\n            children[i][\"material\"].opacity=0.3;\r\n            children[i][\"material\"].color=new THREE.Color(255,255,0);\r\n            scenechildren.push(children[i]);\r\n          }\r\n        }\r\n      }\r\n      if(children[i].name===\"All objs\"||children[i].name===\"All faces\") children[i][\"material\"].opacity=0.1;\r\n      if(children[i].name===\"All wires\") children[i][\"material\"].opacity=0.1;\r\n      if(children[i].name===\"All vertices\") children[i][\"material\"].opacity=0.1;\r\n    }\r\n    this.dataService.addscenechild(scenechildren);\r\n    this.dataService.SelectVisible=this.SelectVisible;\r\n  }\r\n\r\n  verticeselect(SelectVisible){\r\n    event.stopPropagation();\r\n    this.SelectVisible=\"Vertices\";\r\n    var pointradius=this.dataService.pointradius;;\r\n    for(var i=0;i<this.scene.children.length;i++){\r\n      if(this.scene.children[i].name===\"sphereInter\"){\r\n        var geometry = new THREE.SphereGeometry( pointradius*10);\r\n        this.scene.children[i][\"geometry\"]=geometry;\r\n        this.renderer.render(this.scene, this.camera);\r\n      }\r\n    }\r\n    document.getElementById(\"gsv-object\").style.color=\"grey\";\r\n    document.getElementById(\"gsv-face\").style.color=\"grey\";\r\n    document.getElementById(\"gsv-wire\").style.color=\"grey\";\r\n    document.getElementById(\"gsv-edge\").style.color=\"grey\";\r\n    document.getElementById(\"gsv-vertice\").style.color=null;\r\n    var scenechildren=[];\r\n    var children=this.getchildren();\r\n    for(var i=0;i<children.length;i++){\r\n      if(children[i].name===\"All objs\"||children[i].name===\"All faces\") children[i][\"material\"].opacity=0.1;\r\n      if(children[i].name===\"All wires\") children[i][\"material\"].opacity=0.1;\r\n      if(children[i].name===\"All edges\"||children[i].name===\"Other lines\") {children[i][\"material\"].opacity=0.1;children[i][\"material\"].color=this.basicMat;}\r\n      /*if(children[i].name===\"All vertices\"){\r\n        scenechildren.push(children[i]);\r\n      }*/\r\n      if(children[i].name===\"All points\"){\r\n        scenechildren.push(children[i]);\r\n        children[i][\"material\"].opacity=1;\r\n      }\r\n    }\r\n    this.dataService.addscenechild(scenechildren);\r\n    this.dataService.SelectVisible=this.SelectVisible;\r\n  }\r\n\r\n  pointselect(SelectVisible){\r\n    /*event.stopPropagation();\r\n    this.verticeselect(\"Vertices\");\r\n    this.SelectVisible=\"Points\";\r\n    this.dataService.SelectVisible=this.SelectVisible;*/\r\n    event.stopPropagation();\r\n    this.SelectVisible=\"Points\";\r\n    var pointradius=this.dataService.pointradius;;\r\n    for(var i=0;i<this.scene.children.length;i++){\r\n      if(this.scene.children[i].name===\"sphereInter\"){\r\n        var geometry = new THREE.SphereGeometry( pointradius*10);\r\n        this.scene.children[i][\"geometry\"]=geometry;\r\n        this.renderer.render(this.scene, this.camera);\r\n      }\r\n    }\r\n    document.getElementById(\"gsv-object\").style.color=\"grey\";\r\n    document.getElementById(\"gsv-face\").style.color=\"grey\";\r\n    document.getElementById(\"gsv-wire\").style.color=\"grey\";\r\n    document.getElementById(\"gsv-edge\").style.color=\"grey\";\r\n    document.getElementById(\"gsv-vertice\").style.color=null;\r\n    var scenechildren=[];\r\n    var children=this.getchildren();\r\n    for(var i=0;i<children.length;i++){\r\n      if(children[i].name===\"All objs\"||children[i].name===\"All faces\") children[i][\"material\"].opacity=0.1;\r\n      if(children[i].name===\"All wires\") children[i][\"material\"].opacity=0.1;\r\n      if(children[i].name===\"All edges\"||children[i].name===\"Other lines\") {children[i][\"material\"].opacity=0.1;children[i][\"material\"].color=this.basicMat;}\r\n      if(children[i].name===\"All vertices\"){\r\n        children[i][\"material\"].opacity=1;\r\n      }\r\n      if(children[i].name===\"All points\"){\r\n        scenechildren.push(children[i]);\r\n      }\r\n    }\r\n    this.dataService.addscenechild(scenechildren);\r\n    this.dataService.SelectVisible=this.SelectVisible;\r\n  }\r\n\r\n  //\r\n  //  events\r\n  //\r\n  \r\n  mousedown($event): void{\r\n    this.animate(this);\r\n    this.mDownTime = (new Date()).getTime();\r\n  }\r\n\r\n  mouseup($event): void{\r\n     this.mUpTime = (new Date()).getTime();\r\n  }\r\n\r\n  onDocumentMouseMove(event) {\r\n    //this.onResize();\r\n    if(this.seVisible===true){\r\n      this.animate(this);\r\n      this.mouse.x = ( event.offsetX / this.width) * 2 - 1;\r\n      this.mouse.y =-( event.offsetY / this.height ) * 2 + 1;\r\n    }else{\r\n      this.render(this);\r\n    }\r\n  }\r\n\r\n\r\n\r\n  addgrid(){\r\n    for(var i=0;i<this.scene.children.length;i++){\r\n      if(this.scene.children[i].name===\"GridHelper\") {\r\n            this.scene.remove(this.scene.children[i]);\r\n            i=i-1;\r\n      }\r\n    }\r\n    // todo: change grid -> grid_value\r\n    if(this.dataService.grid){\r\n      var gridhelper=new THREE.GridHelper( 100, 10);\r\n      gridhelper.name=\"GridHelper\";\r\n      var vector=new THREE.Vector3(0,1,0);\r\n      gridhelper.lookAt(vector);\r\n      gridhelper.position.set(0,0,0);\r\n      this.scene.add( gridhelper);\r\n      this.dataService.centerx=0;\r\n      this.dataService.centery=0;\r\n      this.dataService.centerz=0;\r\n    }\r\n  }\r\n\r\n\r\n  /// selects object from three.js scene\r\n\r\n\r\n  onDocumentMouseDown(event){\r\n    var threshold: number;\r\n    if(this.seVisible===true) {\r\n      threshold= 100;\r\n    }else{\r\n      threshold= 0.1;\r\n    }\r\n    if( Math.abs(this.mDownTime - this.mUpTime) > threshold ){\r\n        this.mDownTime = 0;\r\n        this.mUpTime = 0;\r\n        return;\r\n    }\r\n    var selectedObj, intersects;\r\n    var select:boolean=false;\r\n    this.scenechildren=this.dataService.getscenechild();\r\n    this.raycaster.setFromCamera(this.mouse,this.camera);\r\n    intersects = this.raycaster.intersectObjects(this.scenechildren);\r\n    if ( intersects.length > 0 ) {\r\n      selectedObj=intersects[ 0 ].object;\r\n      if(this.scenechildren[0].name === \"All objs\"){\r\n        const index:number=Math.floor(intersects[ 0 ].faceIndex);\r\n        const path: gs.ITopoPathData = this.scene_and_maps.faces_map.get(index);\r\n        const face: gs.IFace = this._model.getGeom().getTopo(path) as gs.IFace;\r\n        var label: string =\"\";\r\n        const id: string = \"o\"+path.id;\r\n        var getpoints:Array<any>;\r\n        var getpoints=this.dataService.getpoints;\r\n        var pointname=this.dataService.pointname;\r\n        if(getpoints!==undefined&&getpoints.length!==0){\r\n          for(var i=0;i<getpoints.length;i++){\r\n            if(id===getpoints[i].label){\r\n              if(this.dataService.checkobj===true) label= id;\r\n              for(var n=0;n<pointname.length;n++){\r\n                if(this.dataService.checkname[n]===true){\r\n                  label=label.concat('<br/>',pointname[n],\":\",getpoints[i][n]);\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n        const label_xyz: gs.XYZ = face.getLabelCentroid();\r\n        const faces: gs.IFace[]= face.getObj().getFaces();\r\n        if(this.textlabels.length===0) {\r\n          for(var n=0;n<faces.length;n++){\r\n            var verts: gs.IVertex[] = faces[n].getVertices();\r\n            var verts_xyz: gs.XYZ[] = verts.map((v) => v.getPoint().getPosition());\r\n            var geometry=new THREE.Geometry();\r\n            for(var i=0;i<verts_xyz.length;i++){\r\n              geometry.vertices.push(new THREE.Vector3(verts_xyz[i][0],verts_xyz[i][1],verts_xyz[i][2]));\r\n            }\r\n            /*if(verts.length===4){\r\n              geometry.faces.push(new THREE.Face3(0,2,1));\r\n              geometry.faces.push(new THREE.Face3(0,3,2));\r\n            }else if(verts.length===3){\r\n              geometry.faces.push(new THREE.Face3(0,2,1));\r\n            }\r\n            var mesh=new THREE.Mesh( geometry, new THREE.MeshPhongMaterial( { color:0x00ff00,side:THREE.DoubleSide} ));\r\n            mesh[\"geometry\"].computeVertexNormals();\r\n            mesh.userData.id=label;\r\n            mesh.name=\"selects\";\r\n            this.scene.add(mesh);*/\r\n            var material=new THREE.LineBasicMaterial( { color:0x00ff00,side:THREE.DoubleSide} );\r\n            const line = new THREE.Line( geometry, material);\r\n            line.userData.id=id;\r\n            //line[\"material\"].needsUpdate=true;\r\n            line.name=\"selects\";\r\n            this.scene.add(line);\r\n           }\r\n           this.addTextLabel(label,label_xyz, label,path,\"All objs\");\r\n        }else{\r\n          for(var j=0;j<this.scene.children.length;j++){\r\n            if(id===this.scene.children[j].userData.id){\r\n              select=true;\r\n              this.scene.remove(this.scene.children[j]);\r\n              j=j-1;\r\n            }\r\n          }\r\n          for(var j=0;j<this.textlabels.length;j++){\r\n            if(id===this.textlabels[j][\"id\"]){\r\n              select=true;\r\n              this.removeTextLabel(this.textlabels[j][\"id\"]);\r\n              j=j-1;\r\n            }\r\n          }\r\n          if(select==false){\r\n            for(var n=0;n<faces.length;n++){\r\n              var verts: gs.IVertex[] = faces[n].getVertices();\r\n              var verts_xyz: gs.XYZ[] = verts.map((v) => v.getPoint().getPosition());\r\n              var geometry=new THREE.Geometry();\r\n              for(var i=0;i<verts_xyz.length;i++){\r\n                geometry.vertices.push(new THREE.Vector3(verts_xyz[i][0],verts_xyz[i][1],verts_xyz[i][2]));\r\n              }\r\n              var material=new THREE.LineBasicMaterial( { color:0x00ff00,side:THREE.DoubleSide} );\r\n              const line = new THREE.Line( geometry, material);\r\n              line.userData.id=id;\r\n              //line[\"material\"].needsUpdate=true;\r\n              line.name=\"selects\";\r\n              this.scene.add(line);\r\n            }\r\n            this.addTextLabel(label,label_xyz, id,path,\"All objs\");\r\n          }\r\n        }\r\n\r\n      }\r\n\r\n      if(this.scenechildren[0].name === \"All faces\"){\r\n        const index:number=Math.floor(intersects[ 0 ].faceIndex);\r\n        const path: gs.ITopoPathData = this.scene_and_maps.faces_map.get(index);\r\n        const face: gs.IFace = this._model.getGeom().getTopo(path) as gs.IFace;\r\n        var label: string=\"\";\r\n        var getpoints:Array<any>;\r\n        var getpoints=this.dataService.getpoints;\r\n        var pointname=this.dataService.pointname;\r\n        if(getpoints!==undefined&&getpoints.length!==0){\r\n          for(var i=0;i<getpoints.length;i++){\r\n            if(face.getLabel()===getpoints[i].label){\r\n              for(var n=0;n<pointname.length;n++){\r\n                if(this.dataService.checkface===true) label= face.getLabel();\r\n                if(this.dataService.checkname[n]===true){\r\n                  label=label.concat('<br/>',pointname[n],\":\",getpoints[i][n]);\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n        const label_xyz: gs.XYZ = face.getLabelCentroid();\r\n        const verts: gs.IVertex[] = face.getVertices();\r\n        const verts_xyz: gs.XYZ[] = verts.map((v) => v.getPoint().getPosition());\r\n        if(this.textlabels.length===0) {\r\n          var geometry=new THREE.Geometry();\r\n          for(var i=0;i<verts_xyz.length;i++){\r\n            geometry.vertices.push(new THREE.Vector3(verts_xyz[i][0],verts_xyz[i][1],verts_xyz[i][2]));\r\n          }\r\n          var material=new THREE.LineBasicMaterial( { color:0x00ff00,side:THREE.DoubleSide} );\r\n          const line = new THREE.Line( geometry, material);\r\n          line.userData.id=face.getLabel();\r\n          //line[\"material\"].needsUpdate=true;\r\n          line.name=\"selects\";\r\n          this.scene.add(line);\r\n          this.addTextLabel(label,label_xyz, face.getLabel(),path, \"All faces\");\r\n        }else{\r\n          for(var j=0;j<this.scene.children.length;j++){\r\n            if(face.getLabel()===this.scene.children[j].userData.id){\r\n              select=true;\r\n              this.scene.remove(this.scene.children[j]);\r\n            }\r\n          }\r\n          for(var j=0;j<this.textlabels.length;j++){\r\n            if(face.getLabel()===this.textlabels[j][\"id\"]){\r\n              select=true;\r\n              this.removeTextLabel(this.textlabels[j][\"id\"]);\r\n            }\r\n          }\r\n          if(select==false){\r\n            var geometry=new THREE.Geometry();\r\n            for(var i=0;i<verts_xyz.length;i++){\r\n              geometry.vertices.push(new THREE.Vector3(verts_xyz[i][0],verts_xyz[i][1],verts_xyz[i][2]));\r\n            }\r\n            var material=new THREE.LineBasicMaterial( { color:0x00ff00,side:THREE.DoubleSide} );\r\n            const line = new THREE.Line( geometry, material);\r\n            line.userData.id=face.getLabel();\r\n            //line[\"material\"].needsUpdate=true;\r\n            line.name=\"selects\";\r\n            this.scene.add(line);\r\n            this.addTextLabel(label,label_xyz,face.getLabel(),path, \"All faces\");\r\n          }\r\n        }\r\n      }\r\n      if(this.scenechildren[0].name==\"All wires\"){\r\n        const index:number=Math.floor(intersects[ 0 ].index/2);\r\n        const path: gs.ITopoPathData = this.scene_and_maps.wires_map.get(index);\r\n        const wire: gs.IWire = this._model.getGeom().getTopo(path) as gs.IWire;\r\n        const label: string = wire.getLabel();\r\n        const label_xyz: gs.XYZ = wire.getLabelCentroid();\r\n        const verts: gs.IVertex[] = wire.getVertices();\r\n        const verts_xyz: gs.XYZ[] = verts.map((v) => v.getPoint().getPosition());\r\n        if (wire.isClosed()) {verts_xyz.push(verts_xyz[0]);}\r\n        if(this.textlabels.length===0) {\r\n          var geometry=new THREE.Geometry();\r\n          for(var i=0;i<verts_xyz.length;i++){\r\n            geometry.vertices.push(new THREE.Vector3(verts_xyz[i][0],verts_xyz[i][1],verts_xyz[i][2]));\r\n          }\r\n          var material=new THREE.LineBasicMaterial( { color:0x00ff00,side:THREE.DoubleSide} );\r\n          const line = new THREE.Line( geometry, material);\r\n          line.userData.id=label;\r\n          //line[\"material\"].needsUpdate=true;\r\n          line.name=\"selects\";\r\n          this.scene.add(line);\r\n          this.addTextLabel(label,label_xyz, label,path,\"All wires\");\r\n        }else{\r\n          for(var j=0;j<this.scene.children.length;j++){\r\n            if(label===this.scene.children[j].userData.id){\r\n              select=true;\r\n              this.scene.remove(this.scene.children[j]);\r\n            }\r\n          }\r\n          for(var j=0;j<this.textlabels.length;j++){\r\n            if(label===this.textlabels[j][\"id\"]){\r\n              select=true;\r\n              this.removeTextLabel(this.textlabels[j][\"id\"]);\r\n            }\r\n          }\r\n          if(select==false){\r\n            var geometry=new THREE.Geometry();\r\n            for(var i=0;i<verts_xyz.length;i++){\r\n              geometry.vertices.push(new THREE.Vector3(verts_xyz[i][0],verts_xyz[i][1],verts_xyz[i][2]));\r\n            }\r\n            var material=new THREE.LineBasicMaterial( { color:0x00ff00,side:THREE.DoubleSide} );\r\n            const line = new THREE.Line( geometry, material);\r\n            line.userData.id=label;\r\n            //line[\"material\"].needsUpdate=true;\r\n            line.name=\"selects\";\r\n            this.scene.add(line);\r\n            this.addTextLabel(label,label_xyz, label,path,\"All wires\");\r\n          }\r\n        }\r\n      }\r\n      if(this.scenechildren[0].name==\"All edges\"){\r\n        var label:string=\"\";\r\n        var index:number=Math.floor(intersects[ 0 ].index/2);\r\n        if(this.scene_and_maps.edges_map!==null&&(index<this.scene_and_maps.edges_map.size||index===this.scene_and_maps.edges_map.size)) {\r\n          var path: gs.ITopoPathData = this.scene_and_maps.edges_map.get(index);\r\n          var edge: gs.IEdge = this._model.getGeom().getTopo(path) as gs.IEdge;\r\n          var id: string = edge.getLabel();\r\n          var label_show=id;\r\n          for(var i=1;i<intersects.length;i++){\r\n            if(intersects[0].distance===intersects[i].distance){\r\n              index=Math.floor(intersects[ i ].index/2);\r\n              path = this.scene_and_maps.edges_map.get(index);\r\n              edge= this._model.getGeom().getTopo(path) as gs.IEdge;\r\n              id=edge.getLabel();\r\n              if(label_show!==id) label_show=label_show+\"<br/>\"+id;\r\n            }\r\n          }\r\n          var getpoints:Array<any>;\r\n          var getpoints=this.dataService.getpoints;\r\n          var pointname=this.dataService.pointname;\r\n          if(getpoints!==undefined&&getpoints.length!==0){\r\n            for(var i=0;i<getpoints.length;i++){\r\n              if(edge.getLabel()===getpoints[i].label){\r\n                if(this.dataService.checkedgeid===true) {\r\n                  label=label_show;\r\n                }\r\n                for(var n=0;n<pointname.length;n++){\r\n                  if(this.dataService.checkname[n]===true){\r\n                    label=label.concat('<br/>',pointname[n],\":\",getpoints[i][n]);\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n          const label_xyz: gs.XYZ = edge.getLabelCentroid();\r\n          const verts: gs.IVertex[] = edge.getVertices();\r\n          const verts_xyz: gs.XYZ[] = verts.map((v) => v.getPoint().getPosition());\r\n          if(this.textlabels.length===0) {\r\n            var geometry=new THREE.Geometry();\r\n            for(var i=0;i<verts_xyz.length;i++){\r\n              geometry.vertices.push(new THREE.Vector3(verts_xyz[i][0],verts_xyz[i][1],verts_xyz[i][2]));\r\n            }\r\n            var material=new THREE.LineBasicMaterial( { color:0x00ff00,side:THREE.DoubleSide} );\r\n            const line = new THREE.Line( geometry, material);\r\n            line.userData.id=edge.getLabel();\r\n            //line[\"material\"].needsUpdate=true;\r\n            line.name=\"selects\";\r\n            this.scene.add(line);\r\n            this.addTextLabel(label,label_xyz, edge.getLabel(),path,\"All edges\");\r\n          }else{\r\n            for(var j=0;j<this.scene.children.length;j++){\r\n              if(edge.getLabel()===this.scene.children[j].userData.id){\r\n                select=true;\r\n                this.scene.remove(this.scene.children[j]);\r\n              }\r\n            }\r\n            for(var j=0;j<this.textlabels.length;j++){\r\n              if(edge.getLabel()===this.textlabels[j][\"id\"]){\r\n                select=true;\r\n                this.removeTextLabel(this.textlabels[j][\"id\"]);\r\n              }\r\n            }\r\n            if(select==false){\r\n              var geometry=new THREE.Geometry();\r\n              for(var i=0;i<verts_xyz.length;i++){\r\n                geometry.vertices.push(new THREE.Vector3(verts_xyz[i][0],verts_xyz[i][1],verts_xyz[i][2]));\r\n              }\r\n              var material= new THREE.LineBasicMaterial( { color:0x00ff00,side:THREE.DoubleSide} );\r\n              const line = new THREE.Line( geometry, material );\r\n              line.userData.id=edge.getLabel();\r\n              line.name=\"selects\";\r\n              this.scene.add(line);\r\n              this.addTextLabel(label,label_xyz, edge.getLabel(),path,\"All edges\");\r\n            }\r\n          }\r\n        }\r\n      }\r\n      else if(this.scenechildren[0].name==\"Other lines\"){\r\n        var label:string=\"\";\r\n        var index:number=Math.floor(intersects[ 0 ].index/2);\r\n        if(this.scene_and_maps.edges_map!==null&&(index<this.scene_and_maps.edges_map.size||index===this.scene_and_maps.edges_map.size)){\r\n          var path: gs.ITopoPathData = this.scene_and_maps.edges_map.get(index);\r\n          var edge: gs.IEdge = this._model.getGeom().getTopo(path) as gs.IEdge;\r\n          var id: string = edge.getLabel();\r\n          label=id;\r\n          for(var i=1;i<intersects.length;i++){\r\n            if(intersects[0].distance===intersects[i].distance){\r\n              index=Math.floor(intersects[ i ].index/2);\r\n              path = this.scene_and_maps.edges_map.get(index);\r\n              edge= this._model.getGeom().getTopo(path) as gs.IEdge;\r\n              id=edge.getLabel();\r\n              if(label!==id) label=label+\"<br/>\"+id;\r\n            }\r\n          }\r\n          const label_xyz: gs.XYZ = edge.getLabelCentroid();\r\n          const verts: gs.IVertex[] = edge.getVertices();\r\n          const verts_xyz: gs.XYZ[] = verts.map((v) => v.getPoint().getPosition());\r\n          if(this.textlabels.length===0) {\r\n            var geometry=new THREE.Geometry();\r\n            for(var i=0;i<verts_xyz.length;i++){\r\n              geometry.vertices.push(new THREE.Vector3(verts_xyz[i][0],verts_xyz[i][1],verts_xyz[i][2]));\r\n            }\r\n            var material=new THREE.LineBasicMaterial( { color:0x00ff00,side:THREE.DoubleSide} );\r\n            const line = new THREE.Line( geometry, material);\r\n            line.userData.id=label;\r\n            //line[\"material\"].needsUpdate=true;\r\n            line.name=\"selects\";\r\n            this.scene.add(line);\r\n            this.addTextLabel(label,label_xyz, label,path,\"Other lines\");\r\n          }else{\r\n            for(var j=0;j<this.scene.children.length;j++){\r\n              if(label===this.scene.children[j].userData.id){\r\n                select=true;\r\n                this.scene.remove(this.scene.children[j]);\r\n              }\r\n            }\r\n            for(var j=0;j<this.textlabels.length;j++){\r\n              if(label===this.textlabels[j][\"id\"]){\r\n                select=true;\r\n                this.removeTextLabel(this.textlabels[j][\"id\"]);\r\n              }\r\n            }\r\n            if(select==false){\r\n              var geometry=new THREE.Geometry();\r\n              for(var i=0;i<verts_xyz.length;i++){\r\n                geometry.vertices.push(new THREE.Vector3(verts_xyz[i][0],verts_xyz[i][1],verts_xyz[i][2]));\r\n              }\r\n              var material= new THREE.LineBasicMaterial( { color:0x00ff00,side:THREE.DoubleSide} );\r\n              const line = new THREE.Line( geometry, material );\r\n              line.userData.id=label;\r\n              line.name=\"selects\";\r\n              this.scene.add(line);\r\n              this.addTextLabel(label,label_xyz, label,path,\"Other lines\");\r\n            }\r\n          }\r\n        }\r\n      }\r\n      if(this.scenechildren[0].name === \"All points\"){\r\n        var distance:number=intersects[ 0 ].distanceToRay;\r\n        var index:number=intersects[ 0 ].index;\r\n        for(var i=1;i<intersects.length;i++){\r\n          if(distance>intersects[ i ].distanceToRay){\r\n            distance=intersects[ i ].distanceToRay;\r\n            index=intersects[ i ].index;\r\n          }\r\n        }\r\n        var attributevertix=this.dataService.getattrvertix();\r\n        var id:string=this._model.getGeom().getAllPoints()[index].getLabel();\r\n        var label:string=\"\";\r\n        var getpoints:Array<any>;\r\n        var getpoints=this.dataService.getpoints;\r\n        var pointname=this.dataService.pointname;\r\n        if(this.SelectVisible===\"Points\"){\r\n          if(getpoints!==undefined&&getpoints.length!==0){\r\n            for(var i=0;i<getpoints.length;i++){\r\n              if(id===getpoints[i].id){\r\n                if(this.dataService.checkpointid===true) {\r\n                  label=id;\r\n                  for(var j=1;j<intersects.length;j++){\r\n                    if(intersects[0].distance===intersects[j].distance){\r\n                      var index:number=intersects[ j ].index;\r\n                      var id:string=this._model.getGeom().getAllPoints()[index].getLabel();\r\n                      if(label!==id) label=label+\"<br/>\"+id;\r\n                    }\r\n                  }\r\n                }\r\n                if(this.dataService.checkX===true) label=label.concat('<br/>',\"X:\",getpoints[i].x);\r\n                if(this.dataService.checkY===true) label=label.concat('<br/>',\"Y:\",getpoints[i].y);\r\n                if(this.dataService.checkZ===true) label=label.concat('<br/>',\"Z:\",getpoints[i].z);\r\n                for(var n=0;n<pointname.length;n++){\r\n                  if(this.dataService.checkname[n]===true){\r\n                    label=label.concat('<br/>',pointname[n],\":\",getpoints[i][n]);\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n        if(this.SelectVisible===\"Vertices\"){\r\n          var pointid:string=\"\";\r\n          if(getpoints!==undefined&&getpoints.length!==0){\r\n            for(var i=0;i<attributevertix.length;i++){\r\n              if(id===attributevertix[i].pointid){\r\n                pointid=id;\r\n                if(this.dataService.checkvertixid===true) {\r\n                  if(label===\"\") label=attributevertix[i].vertixlabel;\r\n                  else {label=label+\"<br/>\"+attributevertix[i].vertixlabel;}\r\n                }\r\n              }\r\n            }\r\n            if(this.dataService.pointid===true) {\r\n              if(pointid!==\"\"){\r\n                if(label===\"\") label=id;\r\n                else {label=label+\"<br/>\"+id}\r\n              }\r\n            }\r\n          }\r\n        }\r\n        const verts_xyz: gs.XYZ = this._model.getGeom().getAllPoints()[index].getPosition();//vertices.getPoint().getPosition();\r\n        if(this.textlabels.length===0) {\r\n          var geometry=new THREE.Geometry();\r\n          geometry.vertices.push(new THREE.Vector3(verts_xyz[0],verts_xyz[1],verts_xyz[2]));\r\n          var pointsmaterial=new THREE.PointsMaterial( { color:0x00ff00,size:1} );\r\n          //pointsmaterial.sizeAttenuation=false;\r\n          if(this.dataService.pointsize!==undefined){\r\n              pointsmaterial.size=this.dataService.pointsize;\r\n          }\r\n          const points = new THREE.Points( geometry, pointsmaterial);\r\n          points.userData.id=id;\r\n          //points[\"material\"].needsUpdate=true;\r\n          points.name=\"selects\";\r\n          this.scene.add(points);\r\n          this.addTextLabel(label,verts_xyz, id,id,\"All points\");\r\n        }else{\r\n          for(var j=0;j<this.scene.children.length;j++){\r\n            if(id===this.scene.children[j].userData.id){\r\n              select=true;\r\n              this.scene.remove(this.scene.children[j]);\r\n            }\r\n          }\r\n          for(var j=0;j<this.textlabels.length;j++){\r\n              if(id===this.textlabels[j][\"id\"]){\r\n                select=true;\r\n                this.removeTextLabel(this.textlabels[j][\"id\"]);\r\n              }\r\n          }\r\n          if(select==false){\r\n            var geometry=new THREE.Geometry();\r\n            geometry.vertices.push(new THREE.Vector3(verts_xyz[0],verts_xyz[1],verts_xyz[2]));\r\n            var pointsmaterial=new THREE.PointsMaterial( { color:0x00ff00,size:1} );\r\n            if(this.dataService.pointsize!==undefined){\r\n              pointsmaterial.size=this.dataService.pointsize;\r\n            }\r\n            const points = new THREE.Points( geometry, pointsmaterial);\r\n            points.userData.id=id;\r\n            //points[\"material\"].needsUpdate=true;\r\n            points.name=\"selects\";\r\n            this.scene.add(points);\r\n            this.addTextLabel(label,verts_xyz, id,id,\"All points\");\r\n          }\r\n        }\r\n      }\r\n\r\n      /*if(this.scenechildren[0].name === \"All vertices\"){\r\n        var distance:number=intersects[ 0 ].distanceToRay;\r\n        var index:number=intersects[ 0 ].index;\r\n        for(var i=1;i<intersects.length;i++){\r\n          if(distance>intersects[ i ].distanceToRay){\r\n            distance=intersects[ i ].distanceToRay;\r\n            index=intersects[ i ].index;\r\n          }\r\n        }\r\n        var id:string=this._model.getGeom().getAllPoints()[index].getLabel();\r\n        var label:string=\"\";\r\n        var getpoints:Array<any>;\r\n        var getpoints=this.dataService.getpoints;\r\n        var pointname=this.dataService.pointname;\r\n\r\n        /*var path: gs.ITopoPathData = this.scene_and_maps.vertices_map.get(index);\r\n        var vertices: gs.IVertex = this._model.getGeom().getTopo(path) as gs.IVertex;\r\n        var id: string = \"\";\r\n        var attributevertix=this.dataService.getattrvertix();*/\r\n        //var vertices: gs.IVertex= this._model.getGeom().getTopo(path) as gs.IVertex;\r\n        //var id:string=this._model.getGeom().getAllPoints()[index].getLabel();\r\n        //console.log(vertices.getPoint().getPosition());\r\n\r\n        /*var label:string=\"\";\r\n        var attributevertix=this.dataService.getattrvertix();\r\n        console.log(attributevertix);\r\n        for(var i=0;i<attributevertix.length;i++){\r\n          if(vertices.getLabel()===attributevertix[i].vertixlabel){\r\n            id=attributevertix[i].pointid;\r\n            label=vertices.getLabel();\r\n            break;\r\n          }\r\n        }\r\n        console.log(id);\r\n        if(id!==\"\"){\r\n          for(var i=0;i<attributevertix.length;i++){\r\n            if(id===attributevertix[i].pointid){\r\n              var str=attributevertix[i].vertixlabel;\r\n              if(label!==str) label=label+\"<br/>\"+str;\r\n            }\r\n          }\r\n        }*/\r\n        /*const verts_xyz: gs.XYZ = vertices.getPoint().getPosition();//this._model.getGeom().getAllPoints()[index].getPosition();//vertices.getPoint().getPosition();\r\n        console.log(verts_xyz);\r\n        if(this.textlabels.length===0) {\r\n          var geometry=new THREE.Geometry();\r\n          geometry.vertices.push(new THREE.Vector3(verts_xyz[0],verts_xyz[1],verts_xyz[2]));\r\n          var pointsmaterial=new THREE.PointsMaterial( { color:0x00ff00,size:1} );\r\n          //pointsmaterial.sizeAttenuation=false;\r\n          if(this.dataService.pointsize!==undefined){\r\n            pointsmaterial.size=this.dataService.pointsize;\r\n          }\r\n          const points = new THREE.Points( geometry, pointsmaterial);\r\n          points.userData.id=id;\r\n          //points[\"material\"].needsUpdate=true;\r\n          points.name=\"selects\";\r\n          this.scene.add(points);\r\n          this.addTextLabel(label,verts_xyz, id,id,\"All points\");\r\n        }else{\r\n          for(var j=0;j<this.scene.children.length;j++){\r\n            if(id===this.scene.children[j].userData.id){\r\n              select=true;\r\n              this.scene.remove(this.scene.children[j]);\r\n            }\r\n          }\r\n          for(var j=0;j<this.textlabels.length;j++){\r\n              if(id===this.textlabels[j][\"id\"]){\r\n                select=true;\r\n                this.removeTextLabel(this.textlabels[j][\"id\"]);\r\n              }\r\n          }\r\n          if(select==false){\r\n            var geometry=new THREE.Geometry();\r\n            geometry.vertices.push(new THREE.Vector3(verts_xyz[0],verts_xyz[1],verts_xyz[2]));\r\n            var pointsmaterial=new THREE.PointsMaterial( { color:0x00ff00,size:1} );\r\n            if(this.dataService.pointsize!==undefined){\r\n              pointsmaterial.size=this.dataService.pointsize;\r\n            }\r\n            const points = new THREE.Points( geometry, pointsmaterial);\r\n            points.userData.id=id;\r\n            //points[\"material\"].needsUpdate=true;\r\n            points.name=\"selects\";\r\n            this.scene.add(points);\r\n            this.addTextLabel(label,verts_xyz, id,id,\"All points\");\r\n          }\r\n        }\r\n      }*/\r\n      \r\n    } else {\r\n      /*for(var i=0;i<this.dataService.sprite.length;i++){\r\n        this.dataService.sprite[i].visible=false;\r\n      }*/\r\n      for(var i=0;i<this.scene.children.length;i++){\r\n        if(this.scene.children[i].name==\"selects\"){\r\n          this.scene.remove(this.scene.children[i]);\r\n          i=i-1;\r\n        }\r\n      }\r\n      for(var i=0;i<this.textlabels.length;i++){\r\n        this.removeTextLabel(this.textlabels[i][\"id\"]);\r\n        i=i-1;\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n  //To add text labels just provide label text, label position[x,y,z] and its id\r\n  addTextLabel(label, label_xyz, id,path,type) {\r\n    let container = this.myElement.nativeElement.children.namedItem(\"container\");\r\n    let star = this.creatStarGeometry(label_xyz);\r\n    let textLabel=this.createTextLabel(label, star, id,path,type);\r\n    this.starsGeometry.vertices.push( star );\r\n    this.textlabels.push(textLabel);\r\n    this.dataService.pushselecting(textLabel);\r\n    container.appendChild(textLabel.element);\r\n  }\r\n\r\n  //To remove text labels just provide its id\r\n  removeTextLabel(id) {\r\n    let i=0;\r\n    for(i=0; i<this.textlabels.length; i++) {\r\n      if(this.textlabels[i].id==id) {\r\n        let container = this.myElement.nativeElement.children.namedItem(\"container\");\r\n        container.removeChild(this.textlabels[i].element);\r\n        let index = this.starsGeometry.vertices.indexOf(this.textlabels[i].parent);\r\n        if(index !== -1) {\r\n          this.starsGeometry.vertices.splice(index, 1);\r\n        }\r\n        break;\r\n      }\r\n    }\r\n    if(i<this.textlabels.length) {\r\n      this.textlabels.splice(i, 1);\r\n      this.dataService.spliceselecting(i, 1);\r\n    }\r\n  }\r\n\r\n  creatStarGeometry(label_xyz) {\r\n    let star = new THREE.Vector3();\r\n    star.x = label_xyz[0];\r\n    star.y = label_xyz[1];\r\n    star.z = label_xyz[2];\r\n    return star;\r\n  }\r\n\r\n  createTextLabel(label, star, id,path,type) {\r\n    let div = this.createLabelDiv();\r\n    var self=this;\r\n    let textLabel= {\r\n      id: id,\r\n      path:path,\r\n      element: div,\r\n      parent: false,\r\n      type:type,\r\n      position: new THREE.Vector3(0,0,0),\r\n      setHTML: function(html) {\r\n        this.element.innerHTML = html;\r\n      },\r\n      setParent: function(threejsobj) {\r\n        this.parent = threejsobj;\r\n      },\r\n      updatePosition: function() {\r\n        if(parent) {\r\n          //this.position.copy(this.parent);\r\n          this.position.copy(this.parent);\r\n        }\r\n        \r\n        var coords2d = this.get2DCoords(this.position, self.camera);\r\n\r\n        this.element.style.left = coords2d.x + 'px';\r\n        this.element.style.top = coords2d.y + 'px';\r\n      },\r\n      get2DCoords: function(position, camera) {\r\n        var vector = position.project(camera);\r\n        vector.x = (vector.x + 1)/2 * self.width;\r\n        vector.y = -(vector.y - 1)/2 * self.height;\r\n        return vector;\r\n      }\r\n    };\r\n    textLabel.setHTML(label);\r\n    textLabel.setParent(star);\r\n    return textLabel;\r\n  }\r\n\r\n  createLabelDiv() {\r\n    var div=document.createElement(\"div\");\r\n    div.style.color= '#00f';\r\n    div.style.fontFamily= '\"Fira Mono\", Monaco, \"Andale Mono\", \"Lucida Console\", \"Bitstream Vera Sans Mono\", \"Courier New\", Courier, monospace';\r\n    div.style.margin='-5px 0 0 15px';\r\n    div.style.pointerEvents='none';\r\n    div.style.position = 'absolute';\r\n    div.style.width = '100';\r\n    div.style.height = '100';\r\n    div.style.top = '-1000';\r\n    div.style.left = '-1000';\r\n    div.style.textShadow=\"0px 0px 3px white\";\r\n    div.style.color=\"black\";\r\n    return div;\r\n   }\r\n\r\n  zoomfit(){\r\n    event.stopPropagation();\r\n    if(this.dataService.selecting.length===0){\r\n      const obj=new THREE.Object3D();\r\n      for(var i=0;i<this.getchildren().length;i++){\r\n        obj.children.push(this.getchildren()[i]);\r\n      }\r\n      var boxHelper = new THREE.BoxHelper(obj);\r\n      boxHelper[\"geometry\"].computeBoundingBox();\r\n      boxHelper[\"geometry\"].computeBoundingSphere();\r\n      var boundingSphere=boxHelper[\"geometry\"].boundingSphere;\r\n      var center = boundingSphere.center;\r\n      var radius = boundingSphere.radius;\r\n      var fov=this.camera.fov * ( Math.PI / 180 );\r\n      var vec_centre_to_pos: THREE.Vector3 = new THREE.Vector3();\r\n      vec_centre_to_pos.subVectors(this.camera.position, center);\r\n      var tmp_vec=new THREE.Vector3( Math.abs( radius / Math.sin( fov / 2 )/2),\r\n                                     Math.abs( radius / Math.sin( fov / 2 )/2 ),\r\n                                     Math.abs( radius / Math.sin( fov / 2 )/2));\r\n      vec_centre_to_pos.setLength(tmp_vec.length());\r\n      var perspectiveNewPos: THREE.Vector3 = new THREE.Vector3();\r\n      perspectiveNewPos.addVectors(center, vec_centre_to_pos);\r\n      var newLookAt = new THREE.Vector3(center.x,center.y,center.z)\r\n      this.camera.position.copy(perspectiveNewPos);\r\n      this.camera.lookAt(newLookAt);\r\n      this.camera.updateProjectionMatrix();\r\n      this.controls.target.set(newLookAt.x, newLookAt.y,newLookAt.z);\r\n      this.controls.update();\r\n    }else{\r\n      var box:THREE.BoxHelper=this.selectbox();\r\n      var center = new THREE.Vector3(box[\"geometry\"].boundingSphere.center.x,box[\"geometry\"].boundingSphere.center.y,box[\"geometry\"].boundingSphere.center.z);\r\n      var radius=box[\"geometry\"].boundingSphere.radius;\r\n      if(radius===0) radius=1;\r\n      var fov=this.camera.fov * ( Math.PI / 180 );\r\n      var vec_centre_to_pos: THREE.Vector3 = new THREE.Vector3();\r\n      vec_centre_to_pos.subVectors(this.camera.position, center);\r\n      var tmp_vec=new THREE.Vector3(Math.abs( radius / Math.sin( fov / 2 )),\r\n                                    Math.abs( radius / Math.sin( fov / 2 ) ),\r\n                                    Math.abs( radius / Math.sin( fov / 2 )));\r\n      vec_centre_to_pos.setLength(tmp_vec.length());\r\n      var perspectiveNewPos: THREE.Vector3 = new THREE.Vector3();\r\n      perspectiveNewPos.addVectors(center, vec_centre_to_pos);\r\n      var newLookAt = new THREE.Vector3(center.x,center.y,center.z)\r\n      this.camera.position.copy(perspectiveNewPos);\r\n      this.camera.lookAt(newLookAt);\r\n      this.camera.updateProjectionMatrix();\r\n      this.controls.target.set(newLookAt.x, newLookAt.y,newLookAt.z);\r\n      this.controls.update();\r\n    }\r\n  }\r\n\r\n  selectbox():THREE.BoxHelper{\r\n    if(this.dataService.selecting.length!==0){\r\n      var select=new THREE.Object3D();\r\n        for(var i=0;i<this.scene.children.length;i++){\r\n          if(this.scene.children[i].name===\"selects\"){\r\n            select.children.push(this.scene.children[i]);\r\n          }\r\n        }\r\n      var box=new THREE.BoxHelper(select);\r\n      box[\"geometry\"].computeBoundingBox();\r\n      box[\"geometry\"].computeBoundingSphere();\r\n      return box;\r\n    }\r\n  }\r\n\r\n  setting(settingVisible){\r\n    event.stopPropagation();\r\n    this.settingVisible=!this.settingVisible;\r\n   }\r\n\r\n  leaflet(){\r\n    event.stopPropagation();\r\n    this.imVisible=!this.imVisible;\r\n    this.dataService.imVisible=this.imVisible;\r\n\r\n\r\n    //console.log(this.dataService.imVisible);\r\n    /*for(var i=0;i<this.scene.children.length;i++){\r\n      if(this.scene.children[i].type!==\"DirectionalLight\"&&this.scene.children[i].type!==\"HemisphereLight\"){\r\n        this.scene.remove(this.scene.children[i]);\r\n      }\r\n    }*/\r\n    /*var mymap = L.map('map').setView([51.505, -0.09], 13);\r\n    L.tileLayer('https://api.tiles.mapbox.com/v4/{id}/{z}/{x}/{y}.png?access_token={accessToken}', {\r\n    attribution: 'Map data &copy; <a href=\"http://openstreetmap.org\">OpenStreetMap</a> contributors, <a href=\"http://creativecommons.org/licenses/by-sa/2.0/\">CC-BY-SA</a>, Imagery © <a href=\"http://mapbox.com\">Mapbox</a>',\r\n    maxZoom: 18,\r\n    id: 'mapbox.streets',\r\n    accessToken: 'your.mapbox.access.token'\r\n    }).addTo(mymap);*/\r\n    /*let map = L.map(\"map\").setView([38, -77], 13);\r\n    console.log(map);\r\n    L.tileLayer('http://{s}.tile.osm.org/{z}/{x}/{y}.png', {\r\n    attribution: '&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n    }).addTo(map);*/\r\n  }\r\n\r\n  /*getSceneChildren() {\r\n    var scenechildren=[];\r\n    var children;\r\n    for (var i = 0; i<this.scene.children.length; i++) {\r\n      if(this.scene.children[i].name==\"Scene\") {\r\n        children=this.scene.children[i].children;\r\n        break;\r\n      }\r\n      if(i==this.scene.children.length-1) {\r\n        return [];\r\n      }\r\n    }\r\n    for(var i=0;i<children.length;i++){\r\n      for(var j=0;j<children[i].children.length;j++){\r\n        if(children[i].children[j].type===\"Mesh\"||children[i].children[j].type===\"LineSegments\"||children[i].children[j].type===\"LineLoop\"){\r\n          scenechildren.push(children[i].children[j]);\r\n        }\r\n      }\r\n    }\r\n    return scenechildren;\r\n  }*/\r\n  //One Mesh\r\n  /*getSceneChildren() {\r\n    var scenechildren=[];\r\n    var children;\r\n    for (var i = 0; i<this.scene.children.length; i++) {\r\n      if(this.scene.children[i].name==\"Scene\") {\r\n        children=this.scene.children[i].children;\r\n        break;\r\n      }\r\n      if(i==this.scene.children.length-1) {\r\n        return [];\r\n      }\r\n    }\r\n    for(var i=0;i<children.length;i++){\r\n        if(children[i].type===\"Mesh\"||children[i].type===\"LineSegments\"||children[i].type===\"LineLoop\"){\r\n          scenechildren.push(children[i]);\r\n        }\r\n      }\r\n    return scenechildren;\r\n  }*/\r\n\r\n\r\n\r\n\r\n\r\n  /*render():void {\r\n    let self = this;\r\n    (function render(){\r\n        var scenechildren=self.getSceneChildren();\r\n        console.log(scenechildren);\r\n        self.raycaster.setFromCamera(self.mouse,self.camera);\r\n        var intersects = self.raycaster.intersectObjects(scenechildren);\r\n        for (var i = 0; i < scenechildren.length; i++) {\r\n          var currObj=scenechildren[i];\r\n          if(self.dataService.getSelectingIndex(currObj.uuid)<0) {\r\n            if ( intersects.length > 0 &&  intersects[ 0 ].object.uuid==currObj.uuid) {\r\n              currObj.material=self.mousehovMat;\r\n            } else {\r\n              currObj.material=self.basicMat;\r\n            }\r\n          }\r\n        }\r\n      requestAnimationFrame(render);\r\n      self.renderer.render(self.scene, self.camera);\r\n    }());\r\n    this.renderer.render( this.scene, this.camera );\r\n  }\r\n*/\r\n  /*sprite( message: string, parameters?: any ): THREE.Sprite{\r\n\r\n    if ( parameters === 2 ) parameters = {};\r\n    var fontface = parameters.hasOwnProperty(\"fontface\") ? parameters[\"fontface\"] : \"Arial\";\r\n    var fontsize = parameters.hasOwnProperty(\"fontsize\") ? parameters[\"fontsize\"] : 30;\r\n    var borderThickness = parameters.hasOwnProperty(\"borderThickness\") ? parameters[\"borderThickness\"] : 0.1;\r\n    var borderColor = parameters.hasOwnProperty(\"borderColor\") ?parameters[\"borderColor\"] : { r:0, g:0, b:0, a:1.0 };\r\n    var backgroundColor = parameters.hasOwnProperty(\"backgroundColor\") ?parameters[\"backgroundColor\"] : { r:0, g:0, b:0, a:1.0 };\r\n    var textColor = parameters.hasOwnProperty(\"textColor\") ?parameters[\"textColor\"] : { r:0, g:0, b:255, a:1.0 };\r\n\r\n    var canvas = document.createElement('canvas');\r\n    var context = canvas.getContext('2d');\r\n\r\n    context.font = \"Bold \" + fontsize + \"px \" + fontface;\r\n    var metrics = context.measureText( message );\r\n    var textWidth = metrics.width;\r\n\r\n    context.fillStyle   = \"rgba(\" + backgroundColor.r + \",\" + backgroundColor.g + \",\" + backgroundColor.b + \",\" + backgroundColor.a + \")\";\r\n    context.strokeStyle = \"rgba(\" + borderColor.r + \",\" + borderColor.g + \",\" + borderColor.b + \",\" + borderColor.a + \")\";\r\n\r\n    context.lineWidth = borderThickness;\r\n\r\n    context.fillStyle = \"rgba(\"+textColor.r+\", \"+textColor.g+\", \"+textColor.b+\", 1.0)\";\r\n    context.fillText( message, borderThickness, fontsize + borderThickness);\r\n\r\n    var texture = new THREE.Texture(canvas) \r\n    //texture.needsUpdate = true;\r\n\r\n    var spriteMaterial = new THREE.SpriteMaterial( { map: texture, color: 0xffffff } );\r\n    var sprite = new THREE.Sprite( spriteMaterial );\r\n    return sprite;  \r\n  }*/\r\n\r\n  //\r\n  //  viewer functionality\r\n  //  not required for now\r\n  //\r\n  // zoomfit(){\r\n     \r\n  //   // todo: fix\r\n  //   document.body.style.cursor = \"no-drop\";\r\n\r\n  //   // enable zoom; disable everything else\r\n  //   this.controls.enabled = true;\r\n  //   this.controls.enableZoom = true;\r\n  //   this.controls.enableRotate = false;\r\n  //   this.controls.enablePan = false;\r\n\r\n  //   this.Visible=\"zoomfit\";\r\n    \r\n  //   // repeat??\r\n  //   if(this.selecting.length===0){\r\n  //     var obj=new THREE.Object3D();\r\n  //     obj=this.scene;\r\n  //     var boxHelper = new THREE.BoxHelper(obj);\r\n  //     var boundingSphere=boxHelper.geometry.boundingSphere;\r\n  //     var center = boundingSphere.center;\r\n  //     var radius = boundingSphere.radius;\r\n  //     var fov=this.camera.fov * ( Math.PI / 180 );\r\n  //     var vec_centre_to_pos: THREE.Vector3 = new THREE.Vector3();\r\n  //     vec_centre_to_pos.subVectors(this.camera.position, center);\r\n  //     var tmp_vec=new THREE.Vector3( Math.abs( radius / Math.sin( fov / 2 )),\r\n  //                                    Math.abs( radius / Math.sin( fov / 2 ) ),\r\n  //                                    Math.abs( radius / Math.sin( fov / 2 )));\r\n  //     vec_centre_to_pos.setLength(tmp_vec.length());\r\n  //     var perspectiveNewPos: THREE.Vector3 = new THREE.Vector3();\r\n  //     perspectiveNewPos.addVectors(center, vec_centre_to_pos);\r\n  //     var newLookAt = new THREE.Vector3(center.x,center.y,center.z)\r\n  //     this.camera.position.copy(perspectiveNewPos);\r\n  //     this.camera.lookAt(newLookAt);\r\n  //     this.camera.updateProjectionMatrix();\r\n  //     this.controls.target.set(newLookAt.x, newLookAt.y,newLookAt.z);\r\n  //   }else{\r\n  //     var axisX,axisY,axisZ,centerX,centerY,centerZ=0;\r\n  //     var radius=0;\r\n  //     for(var i=0;i<this.selecting.length;i++){\r\n  //       axisX+=this.selecting[i].geometry.boundingSphere.center.x;\r\n  //       axisY+=this.selecting[i].geometry.boundingSphere.center.y;\r\n  //       axisZ+=this.selecting[i].geometry.boundingSphere.center.z;\r\n  //       radius=Math.max(this.selecting[i].geometry.boundingSphere.radius,radius);\r\n  //     }\r\n  //     centerX=axisX/this.scene.children[1].children.length;\r\n  //     centerY=axisY/this.scene.children[1].children.length;\r\n  //     centerY=axisY/this.scene.children[1].children.length;\r\n  //     var center = new THREE.Vector3(centerX,centerY,centerZ);\r\n  //     var fov=this.camera.fov * ( Math.PI / 180 );\r\n  //     var vec_centre_to_pos: THREE.Vector3 = new THREE.Vector3();\r\n  //     vec_centre_to_pos.subVectors(this.camera.position, center);\r\n  //     var tmp_vec=new THREE.Vector3(Math.abs( radius / Math.sin( fov / 2 )),\r\n  //                                   Math.abs( radius / Math.sin( fov / 2 ) ),\r\n  //                                   Math.abs( radius / Math.sin( fov / 2 )));\r\n  //     vec_centre_to_pos.setLength(tmp_vec.length());\r\n  //     var perspectiveNewPos: THREE.Vector3 = new THREE.Vector3();\r\n  //     perspectiveNewPos.addVectors(center, vec_centre_to_pos);\r\n  //     var newLookAt = new THREE.Vector3(center.x,center.y,center.z)\r\n  //     this.camera.position.copy(perspectiveNewPos);\r\n  //     this.camera.lookAt(newLookAt);\r\n  //     this.camera.updateProjectionMatrix();\r\n  //     this.controls.target.set(newLookAt.x, newLookAt.y,newLookAt.z);\r\n  //   }\r\n\r\n  // }\r\n\r\n  // pan(){\r\n    \r\n  //   this.camera.updateProjectionMatrix();\r\n\r\n  //   this.controls.enabled = true;\r\n  //   this.controls.enableZoom = false;\r\n  //   this.controls.enableRotate = false;\r\n  //   this.controls.enablePan = true;\r\n\r\n  //   //todo: remove\r\n  //   document.body.style.cursor = \"-webkit-grab\";\r\n  //   this.Visible=\"pan\";\r\n\r\n  // }\r\n\r\n  // rotate(){\r\n  //   document.body.style.cursor = \" pointer\";\r\n\r\n  //   // reset controls\r\n  //   this.controls.enabled = true;\r\n  //   this.controls.enableZoom = false;\r\n  //   this.controls.enableRotate = true;\r\n  //   this.controls.enablePan = false;\r\n\r\n  //   if(this.selecting.length===0){\r\n  //     var centerX=0;\r\n  //     var centerY=0;\r\n  //     var centerZ=0;\r\n  //     for(var i=0;i<this.scene.children[1].children.length;i++){\r\n  //       centerX+=this.scene.children[1].children[i].children[0][\"geometry\"].boundingSphere.center.x;\r\n  //       centerY+=this.scene.children[1].children[i].children[0][\"geometry\"].boundingSphere.center.y;\r\n  //       centerZ+=this.scene.children[1].children[i].children[0][\"geometry\"].boundingSphere.center.z;\r\n  //     }\r\n  //     centerX=centerX/this.scene.children[1].children.length;\r\n  //     centerY=centerY/this.scene.children[1].children.length;\r\n  //     centerZ=centerZ/this.scene.children[1].children.length;\r\n  //     //this.controls.target.set(centerX,centerY,centerZ);\r\n  //   }else{\r\n  //     var axisX=0;\r\n  //     var axisY=0;\r\n  //     var axisZ=0;\r\n  //     var centerX=0;\r\n  //     var centerY=0;\r\n  //     var centerZ=0;\r\n  //     for(var i=0;i<this.selecting.length;i++){\r\n  //       axisX+=this.selecting[i].geometry.boundingSphere.center.x;\r\n  //       axisY+=this.selecting[i].geometry.boundingSphere.center.y;\r\n  //       axisZ+=this.selecting[i].geometry.boundingSphere.center.z;\r\n  //     }\r\n  //     centerX=axisX/this.scene.children[1].children.length;\r\n  //     centerY=axisY/this.scene.children[1].children.length;\r\n  //     centerZ=axisY/this.scene.children[1].children.length;\r\n  //     //this.controls.target.set(centerX,centerY,centerZ);\r\n  //   }\r\n\r\n  //   this.Visible=\"rotate\";\r\n  // }\r\n\r\n  // select(event){\r\n  //   event.stopPropagation();\r\n\r\n  //   document.body.style.cursor = \"default\";\r\n\r\n  //   // reset controls\r\n  //   // this.controls.enabled = false;\r\n  //   // this.controls.enableZoom = false;\r\n  //   // this.controls.enableRotate = false;\r\n  //   // this.controls.enablePan = false;\r\n\r\n  //   this.Visible=\"select\";\r\n  // }\r\n\r\n\r\n \r\n}\r\n","export * from './viewer-text.component';\r\nexport * from './console-viewer.component';\r\n//export * from './template.component';\r\n","import { Injector } from '@angular/core';\r\nimport { DataService } from \"./data.service\";\r\nimport { Subscription } from 'rxjs/Subscription';\r\n\r\nexport class DataSubscriber{\r\n\r\n\tprotected dataService: DataService;\r\n\tprivate _subscription: Subscription;\r\n\tprivate _message: any;\r\n\r\n\tconstructor(injector: Injector){ \r\n\t\tthis.dataService = injector.get(DataService);\r\n\t\tthis._subscription = this.dataService.getMessage().subscribe(message => { \r\n\t      this._message = message; \r\n\t      this.notify(message.text);\r\n\t    });\r\n\t}\r\n\r\n\tnotify(message: string){ \r\n\t\tconsole.warn(\"Notify function not Implemented\");\r\n\t}\r\n}","import { Injectable } from \"@angular/core\";\r\nimport {Observable} from \"rxjs\";\r\nimport {Subject} from \"rxjs/Subject\";\r\nimport * as chroma from \"chroma-js\";\r\n\r\n@Injectable()\r\nexport class DataService {\r\n  private _jsonModel: JSON;\r\n  private subject = new Subject<any>();\r\n  private viewer: any;\r\n  private _SelectedEntity: any;\r\n  private cesiumpromise: any;\r\n  private hideElementArr: any[];\r\n  private _HideNum: any[];\r\n  private mode: string;\r\n  private _ViData: object;\r\n  private _PuData: object;\r\n  private _index: number;\r\n  private _Filter: any[];\r\n  private _Imagery: string;\r\n  private _Sun: boolean;\r\n  private _Shadow: boolean;\r\n  private _Date: string;\r\n  private _UTC: number;\r\n\r\n  public sendMessage(message?: string) {\r\n    this.subject.next({text: message});\r\n  }\r\n  public clearMessage() {\r\n    this.subject.next();\r\n  }\r\n\r\n  public getMessage(): Observable<any> {\r\n    return this.subject.asObservable();\r\n  }\r\n  //get geojson\r\n  public getGsModel(): any {\r\n    return this._jsonModel;\r\n  }\r\n  //set mode \r\n  public setMode(mode: string) {\r\n    this.mode = mode;\r\n  }\r\n  //set new json file\r\n  public setGsModel(model: JSON) {\r\n    delete this._jsonModel;\r\n    const json = this._jsonModel;\r\n    this._jsonModel = model;\r\n    if(this._jsonModel !== undefined){this.clearAll();}\r\n    this.sendMessage(\"model_update\");\r\n    \r\n  }\r\n  //before loading geojson, clear all for last geojson\r\n  public clearAll(){\r\n    delete this.hideElementArr;\r\n    delete this._HideNum;\r\n    delete this._ViData;\r\n    delete this._PuData;\r\n    delete this._index;\r\n    delete this._Filter;\r\n\r\n  }\r\n  //get viewer\r\n  public getViewer(): any {\r\n    return this.viewer;\r\n  }\r\n  //set viewer\r\n  public setViewer(_viewer): void {\r\n    this.viewer = _viewer;\r\n  }\r\n  //get selected entity\r\n  public get_SelectedEntity(): any {\r\n    return this._SelectedEntity;\r\n  }\r\n  //set selected entity\r\n  public set_SelectedEntity(_SelectedEntity): void {\r\n    this._SelectedEntity = _SelectedEntity;\r\n  }\r\n  //get promise\r\n  public getcesiumpromise(): any {\r\n    return this.cesiumpromise;\r\n  }\r\n  //set promise\r\n  public setcesiumpromise(cesiumpromise): void {\r\n    delete this.cesiumpromise;\r\n    this.cesiumpromise = cesiumpromise;\r\n  }\r\n  // get filter array\r\n  public gethideElementArr(): any {\r\n    return this.hideElementArr;\r\n  }\r\n  //get filter number\r\n  public get_HideNum(): any[] {\r\n    return this._HideNum;\r\n  }\r\n  //get mode\r\n  public getmode(): string {\r\n    return this.mode;\r\n  }\r\n  //get index after changing select, data, display, publish\r\n  public get_index(): number {\r\n    return this._index;\r\n  }\r\n  //set index after changing select, data, display, publish\r\n  public set_index(_index): void {\r\n    this._index = _index;\r\n  }\r\n  //set sun true/false in Display\r\n  public set_Sun(_Sun): void{\r\n    this._Sun = _Sun;\r\n  }\r\n  //get sun true/false in Display\r\n  public get_Sun(): boolean{\r\n    return this._Sun;\r\n  }\r\n  //set shadow true/false in Display\r\n  public set_Shadow(_Shadow): void{\r\n    this._Shadow = _Shadow;\r\n  }\r\n  //get shadow true/false in Display\r\n  public get_Shadow(): boolean{\r\n    return this._Shadow;\r\n  }\r\n  //set date in Display\r\n  public set_Date(_Date): void{\r\n    this._Date = _Date;\r\n  }\r\n  //get date in Display\r\n  public get_Date(): string{\r\n    return this._Date;\r\n  }\r\n  //set UTC in Display\r\n  public set_UTC(_UTC): void{\r\n    this._UTC = _UTC;\r\n  }\r\n  //get UTC in Display\r\n  public get_UTC(): number{\r\n    return this._UTC;\r\n  }\r\n  //set imagery in Display\r\n  public set_Imagery(_Imagery): void {\r\n    this._Imagery = _Imagery;\r\n  }\r\n  //get imagery in Display\r\n  public get_Imagery(): string {\r\n    return this._Imagery;\r\n  }\r\n  //convert json to ViData(editor version) to store every thing in setting\r\n  public getValue(model: JSON) {\r\n    if(model !== undefined) {\r\n      let propertyName = Object.keys(model[\"features\"][0].properties);\r\n      let feature_instance = model[\"features\"][0];\r\n      let _HeightKeys = propertyName.filter(function(prop_name) {\r\n        const value =  feature_instance.properties[prop_name];\r\n        return (typeof(value) === \"number\");\r\n      });\r\n      if(model[\"features\"].length > 1){\r\n        for(let i = 1 ;i<model[\"features\"].length;i++){\r\n          for(let properties of Object.keys(model[\"features\"][i].properties)){\r\n            if(propertyName.indexOf(String(properties))<0){\r\n              propertyName.push(properties);\r\n              if(typeof(model[\"features\"][i].properties[properties]) === \"number\"){\r\n                _HeightKeys.push(properties);\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n      \r\n      propertyName.sort();\r\n      propertyName.unshift(\"None\");\r\n      const propertyNames = propertyName.filter(function(value) { \r\n        return value != 'TYPE'&& value != 'COLOR'&& value != 'HEIGHT'&&value != 'EXTRUDEDHEIGHT'\r\n      });\r\n      const _ColorValue = propertyNames[0];\r\n      const _HeightKey = _HeightKeys.filter(function(value) { \r\n        return value != 'TYPE'&& value != 'COLOR'&& value != 'HEIGHT'&&value != 'EXTRUDEDHEIGHT'\r\n      });\r\n      _HeightKey.sort();\r\n      _HeightKey.unshift(\"None\");\r\n      const _HeightValue = _HeightKey[0];\r\n\r\n      const promise = this.cesiumpromise;\r\n      const _Heighttexts: any[] = [];\r\n      const _Colortexts: any[] = [];\r\n      const _indexArr: number[] = [];\r\n      const self = this;\r\n      promise.then(function(dataSource) {\r\n        const entities = dataSource.entities.values;\r\n        for (const entity of entities) {\r\n          if(entity.properties[\"TYPE\"] === undefined||entity.properties[\"TYPE\"]._value !== \"STATIC\"){\r\n            if(entity.properties[_HeightValue] !== undefined) {\r\n              if(entity.properties[_HeightValue]._value !== \" \") {\r\n                if(_Heighttexts.length === 0) {_Heighttexts[0]=entity.properties[_HeightValue]._value;\r\n                } else { if(_Heighttexts.indexOf(entity.properties[_HeightValue]._value) === -1) {\r\n                 _Heighttexts.push(entity.properties[_HeightValue]._value);}\r\n                }\r\n              }\r\n            }\r\n            if(entity.properties[_ColorValue] !== undefined) {\r\n              if(entity.properties[_ColorValue]._value !== \" \") {\r\n                if(_Colortexts.length === 0) {_Colortexts[0] = entity.properties[_ColorValue]._value;\r\n                } else { if(_Colortexts.indexOf(entity.properties[_ColorValue]._value) === -1) {\r\n                  _Colortexts.push(entity.properties[_ColorValue]._value);}\r\n                }\r\n              }\r\n            }\r\n            _indexArr.push(entities.indexOf(entity));\r\n          } else {\r\n            entity.polygon.height =  entity.properties[\"HEIGHT\"];\r\n            entity.polygon.extrudedHeight = entity.properties[\"EXTRUDEDHEIGHT\"];\r\n            const ColorValue = entity.properties[\"COLOR\"]._value;\r\n            entity.polygon.material = Cesium.Color.fromBytes(ColorValue[0], ColorValue[1], ColorValue[2], ColorValue[3]);\r\n          }\r\n          if(entity.polygon !== undefined) {\r\n              entity.polygon.outlineColor = Cesium.Color.Black;\r\n          }\r\n          if(entity.billboard !== undefined) {\r\n            entity.billboard = undefined;\r\n            entity.point = new Cesium.PointGraphics({\r\n              color: Cesium.Color.BLUE,\r\n              pixelSize: 10,\r\n            });\r\n          }\r\n        }\r\n      });\r\n      const _MinColor = Math.min.apply(Math, _Colortexts);\r\n      const _MaxColor = Math.max.apply(Math, _Colortexts);\r\n      const _MinHeight = Math.min.apply(Math, _Heighttexts);\r\n      const _MaxHeight = Math.max.apply(Math, _Heighttexts);\r\n      const _Filter: any[] = [];\r\n      const _HideNum: any[] = [];\r\n      this.getViData(propertyNames,_Colortexts.sort(),_ColorValue,_MinColor,_MaxColor,false,\r\n                     _HeightKey,_Heighttexts.sort(),_HeightValue,_MinHeight,_MaxHeight,1,\r\n                     false,false,_Filter,_HideNum,_indexArr);\r\n    }\r\n  }\r\n  //get ViData(editor version)\r\n  public get_ViData(): object {\r\n    return this._ViData;\r\n  }\r\n\r\n  //convert geojson to PuData(publish version)\r\n  public LoadJSONData() {\r\n    if(this._jsonModel !== undefined&&this._jsonModel[\"cesium\"] !== undefined) {\r\n      const cesiumData = this._jsonModel[\"cesium\"];\r\n      let _ColorDescr: string;\r\n      let _ColorValue: string;\r\n      let _MinColor: number;\r\n      let _MaxColor: number;\r\n      let _ColorInvert: boolean;\r\n      let _HeightDescr: string;\r\n      const _HeightKey: any[] = [];\r\n      let _HeightValue: string;\r\n      let _MinHeight: number;\r\n      let _MaxHeight: number;\r\n      let _HeightInvert: boolean;\r\n      let _HeightScale: number;\r\n      let _HeightLine: boolean;\r\n      let _filters: any[];\r\n      const _ceisumData: any[] = [];\r\n      const _propertyNames: any[] = [];\r\n      const _HideNum: any[] = [];\r\n      const _indexArr: number[] = [];\r\n      if(cesiumData[\"colour\"] !== undefined) {\r\n        if(cesiumData[\"colour\"][\"descr\"] !== undefined) {\r\n          _ColorDescr = cesiumData[\"colour\"][\"descr\"];\r\n        }\r\n        if(cesiumData[\"colour\"][\"attribs\"] !== undefined) {\r\n          for(const data of cesiumData[\"colour\"][\"attribs\"]) {\r\n            _propertyNames.push(data[\"name\"]);\r\n          }\r\n          _ColorValue = _propertyNames[0];\r\n          _MinColor = cesiumData[\"colour\"][\"attribs\"][0][\"min\"];\r\n          _MaxColor = cesiumData[\"colour\"][\"attribs\"][0][\"max\"];\r\n          if(cesiumData[\"colour\"][\"attribs\"][0][\"invert\"] === true) {_ColorInvert = true;} else {_ColorInvert = false;}\r\n        }\r\n\r\n      }\r\n      if(cesiumData[\"extrude\"] !== undefined) {\r\n        if(cesiumData[\"extrude\"][\"descr\"] !== undefined) {\r\n          _HeightDescr = cesiumData[\"extrude\"][\"descr\"];\r\n        }\r\n        if(cesiumData[\"extrude\"][\"attribs\"] !== undefined) {\r\n          for(const data of cesiumData[\"extrude\"][\"attribs\"]) {\r\n            _HeightKey.push(data[\"name\"]);\r\n          }\r\n          _HeightValue = _HeightKey[0];\r\n          _MinHeight = cesiumData[\"extrude\"][\"attribs\"][0][\"min\"];\r\n          _MaxHeight = cesiumData[\"extrude\"][\"attribs\"][0][\"max\"];\r\n          if(cesiumData[\"extrude\"][\"attribs\"][0][\"invert\"] === true) {\r\n            _HeightInvert = true;} else {_HeightInvert = false;}\r\n          if(cesiumData[\"extrude\"][\"attribs\"][0][\"line\"] === true) {_HeightLine = true;} else {_HeightLine = false;}\r\n          if(cesiumData[\"extrude\"][\"attribs\"][0][\"scale\"] !== undefined) {\r\n            _HeightScale = cesiumData[\"extrude\"][\"attribs\"][0][\"scale\"];\r\n          } else {_HeightScale = 1;}\r\n        }\r\n      }\r\n      const promise = this.cesiumpromise;\r\n      const _Heighttexts = [];\r\n      const _Colortexts = [];\r\n      const self = this;\r\n      promise.then(function(dataSource) {\r\n        const entities = dataSource.entities.values;\r\n        for (const entity of entities) {\r\n          if(entity.properties[_HeightValue] !== undefined) {\r\n            if(entity.properties[_HeightValue]._value !== \" \") {\r\n              if(_Heighttexts.length === 0) {_Heighttexts[0] = entity.properties[_HeightValue]._value;\r\n              } else { if(_Heighttexts.indexOf(entity.properties[_HeightValue]._value) === -1) {\r\n                _Heighttexts.push(entity.properties[_HeightValue]._value);}\r\n              }\r\n            }\r\n          }\r\n          if(entity.properties[_ColorValue] !== undefined) {\r\n            if(entity.properties[_ColorValue]._value !== \" \") {\r\n              if(_Colortexts.length === 0) {_Colortexts[0] = entity.properties[_ColorValue]._value;\r\n              } else { if(_Colortexts.indexOf(entity.properties[_ColorValue]._value) === -1) {\r\n                _Colortexts.push(entity.properties[_ColorValue]._value);}\r\n              }\r\n            }\r\n          }\r\n          if(entity.polygon !== undefined) {\r\n            entity.polygon.outlineColor = Cesium.Color.Black;\r\n          }\r\n          if(entity.billboard !== undefined) {\r\n            entity.billboard = undefined;\r\n            entity.point = new Cesium.PointGraphics({\r\n              color: Cesium.Color.BLUE,\r\n              pixelSize: 10,\r\n            });\r\n          }\r\n          _indexArr.push(entities.indexOf(entity));\r\n        }\r\n      });\r\n      if(cesiumData[\"filters\"] !== undefined) {\r\n        _filters = cesiumData[\"filters\"];\r\n        let lastnumber: string;\r\n        this._Filter = [];\r\n        this._HideNum = [];\r\n        if(_filters !== undefined&&_filters.length !== 0) {\r\n          for(const _filter of _filters) {\r\n            if(this._HideNum.length === 0) {\r\n              this._HideNum[0] = \"0\";\r\n              lastnumber = this._HideNum[0];\r\n            } else {\r\n              for(let j = 0;j < this._HideNum.length + 1;j++) {\r\n                if(this._HideNum.indexOf(String(j)) === -1) {\r\n                  this._HideNum.push(String(j));\r\n                  lastnumber = String(j);\r\n                  break;\r\n                }\r\n              }\r\n            }\r\n            if(_filter[\"name\"] !== undefined) {\r\n              const _propertyname = _filter[\"name\"];\r\n              const _relation = Number(_filter[\"relation\"]);\r\n              const _text = _filter[\"value\"];\r\n              const _descr = _filter[\"descr\"];\r\n              let _HideType: string;\r\n              let _texts: any[];\r\n              if(typeof(_text) === \"number\") {\r\n                _HideType = \"number\";\r\n                _texts = this.Initial(_propertyname);\r\n              } else if(typeof(_text) === \"string\") {\r\n                _HideType = \"category\";\r\n                _texts = this.Initial(_propertyname);\r\n                _texts = [\"None\"].concat(_texts);\r\n              }\r\n              this._Filter.push({ divid:String(\"addHide\".concat(String(lastnumber))),id: lastnumber,\r\n                                  HeightHide:_propertyname,type:_HideType,Category:_texts,\r\n                                  CategaryHide:_text,descr:_descr,RelaHide:_relation,\r\n                                  textHide: _text,HideMax:Math.ceil(Math.max.apply(Math, _texts)),\r\n                                  HideMin:Math.floor(Math.min.apply(Math, _texts)*100)/100,Disabletext:null});\r\n            }\r\n          }\r\n        }\r\n      } else {this._Filter = [];this._HideNum = [];}\r\n      this.getPuData(_ColorDescr,_propertyNames,_Colortexts.sort(),_ColorValue,_MinColor,_MaxColor,_ColorInvert,\r\n                        _HeightDescr,_HeightKey,_Heighttexts.sort(),_HeightValue,_MinHeight,_MaxHeight,\r\n                        _HeightScale,_HeightInvert,_HeightLine,this._Filter,this._HideNum,_indexArr);\r\n\r\n    }\r\n\r\n  }\r\n  //get text for the certain property\r\n  public  Initial(_HideValue: string): any[] {\r\n    const texts=[];\r\n    const promise = this.getcesiumpromise();\r\n    const self = this;\r\n    promise.then(function(dataSource) {\r\n      const entities = dataSource.entities.values;\r\n      for (const entity of entities) {\r\n        if(entity.properties[_HideValue] !== undefined) {\r\n          if(entity.properties[_HideValue]._value !== \" \") {\r\n            if(texts.length === 0) {texts[0] = entity.properties[_HideValue]._value;\r\n            } else { if(texts.indexOf(entity.properties[_HideValue]._value) === -1) {\r\n              texts.push(entity.properties[_HideValue]._value);}\r\n            }\r\n          }\r\n        }\r\n      }\r\n    });\r\n    return texts;\r\n  }\r\n  //get PuData\r\n  public get_PuData(): object {\r\n    return this._PuData;\r\n  }\r\n \r\n  //// ------------------- Settings\r\n\r\n  /*\r\n   * to set visualize settings\r\n   *\r\n   */\r\n\r\n  /*\r\n   *  _PuData : Object with properties .... <todo>\r\n   */\r\n  public set_PuData(_PuData): void {\r\n    this._PuData = _PuData;\r\n  }\r\n\r\n  /*\r\n   *  _ViData : Object with properties .... <todo>\r\n   */\r\n  public set_ViData(_ViData): void {\r\n    this._ViData = _ViData;\r\n  }\r\n  /*\r\n  _ColorProperty: collect all property names,\r\n  _ColorText: collect all values under _ColorKey,\r\n  _ColorKey: Select color property name in Data tab,\r\n  _ColorMin: minimum value of Color property in Data tab,\r\n  _ColorMax: maximum value of Color property in Data tab,\r\n  _ColorInvert: color invert is true or false,\r\n  _ExtrudeProperty: collect all property names that whose values are number,\r\n  _ExtrudeText: collect all values under _ExturdeValue,\r\n  _ExturdeValue: Select Extrude property name in Data tab,\r\n  _ExtrudeMin: minimum value of Extrude property in Data tab,\r\n  _ExtrudeMax: maximum value of Extrude property in Data tab,\r\n  _Scale: extrude height scale,\r\n  _Invert: extrude height invert is true or false,\r\n  _HeightChart: it will show height chart or not,\r\n  _Filter: collect filters,\r\n  _HideNum: collect filter id numbers,\r\n  _indexArr: collect entity number whose \"TYPE\" is not static\r\n  */\r\n\r\n  public getViData(_ColorProperty: any[],_ColorText: any[],_ColorKey: string,\r\n                   _ColorMin: number,_ColorMax: number,_ColorInvert: boolean,\r\n                   _ExtrudeProperty: any[],_ExtrudeText: any[],_ExturdeValue: string,\r\n                   _ExtrudeMin: number,_ExtrudeMax: number,_Scale: number,_Invert: boolean,\r\n                   _HeightChart: boolean,_Filter: any[],_HideNum: number[],_indexArr: number[]) {\r\n    this._ViData = {ColorProperty:_ColorProperty,ColorText:_ColorText,ColorKey:_ColorKey,\r\n                    ColorMin:_ColorMin,ColorMax:_ColorMax,ColorInvert:_ColorInvert,\r\n                    ExtrudeProperty:_ExtrudeProperty,ExtrudeText:_ExtrudeText,ExtrudeKey:_ExturdeValue,\r\n                    ExtrudeMin:_ExtrudeMin,ExtrudeMax:_ExtrudeMax,Scale:_Scale,Invert:_Invert,\r\n                    HeightChart:_HeightChart,Filter:_Filter,HideNum:_HideNum,indexArr:_indexArr};\r\n  }\r\n\r\n  /*\r\n  _ColorDescr: description of Color property,\r\n  _ColorProperty: collect all property names,\r\n  _ColorText: collect all values under _ColorKey,\r\n  _ColorKey: Select color property name in Data tab,\r\n  _ColorMin: minimum value of Color property in Data tab,\r\n  _ColorMax: maximum value of Color property in Data tab,\r\n  _ColorInvert: color invert is true or false,\r\n  _ExtrudeDescr: description of extrude height property,\r\n  _ExtrudeProperty: collect all property names that whose values are number,\r\n  _ExtrudeText: collect all values under _ExturdeValue,\r\n  _ExturdeValue: Select Extrude property name in Data tab,\r\n  _ExtrudeMin: minimum value of Extrude property in Data tab,\r\n  _ExtrudeMax: maximum value of Extrude property in Data tab,\r\n  _Scale: extrude height scale,\r\n  _Invert: extrude height invert is true or false,\r\n  _HeightChart: it will show height chart or not,\r\n  _Filter: collect filters,\r\n  _HideNum: collect filter id numbers,\r\n  _indexArr: collect entity number whose \"TYPE\" is not static\r\n   */\r\n  public getPuData(_ColorDescr: string,_ColorProperty: any[],_ColorText: any[],_ColorKey: string,\r\n                   _ColorMin: number,_ColorMax: number,_ColorInvert: boolean,\r\n                   _ExtrudeDescr: string,_ExtrudeProperty: any[],_ExtrudeText: any[],\r\n                   _ExturdeValue: string,_ExtrudeMin: number,_ExtrudeMax: number,_Scale: number,_Invert: boolean,\r\n                   _HeightChart: boolean,_Filter: any[],_HideNum: number[],_indexArr: number[]) {\r\n    this._PuData = {ColorDescr:_ColorDescr,ColorProperty:_ColorProperty,ColorText:_ColorText,\r\n                    ColorKey:_ColorKey,ColorMin:_ColorMin,ColorMax:_ColorMax,ColorInvert:_ColorInvert,\r\n                    ExtrudeDescr:_ExtrudeDescr,ExtrudeProperty:_ExtrudeProperty,ExtrudeText:_ExtrudeText,\r\n                    ExtrudeKey:_ExturdeValue,ExtrudeMin:_ExtrudeMin,ExtrudeMax:_ExtrudeMax,\r\n                    Scale:_Scale,Invert:_Invert,HeightChart:_HeightChart,Filter:_Filter,HideNum:_HideNum,indexArr:_indexArr};\r\n  }\r\n\r\n}","module.exports = \"<div id=\\\"mobiuscesium\\\" style=\\\"height: 100%\\\">\\r\\n\\t<cesium-viewer></cesium-viewer>\\r\\n\\t<div id=\\\"Toggle\\\" (click)=\\\"toggleSlider()\\\" ><span style=\\\"vertical-align: middle;\\\">▹</span></div>\\r\\n\\t<div id=\\\"slide-nav\\\"  [@slide_in_out]=\\\"slider_state\\\" style=\\\"position: absolute;z-index: 101;top:0px;height: 100%\\\">\\r\\n  \\t\\t<app-setting-cesium ></app-setting-cesium>\\r\\n\\t</div>\\r\\n\\r\\n</div>\\r\\n\"","module.exports = \"@import url(\\\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\\\");\\n@font-face {\\n  font-family: \\\"FontAwesome\\\"; }\\n.font-awesome-hand {\\n  font-family: FontAwesome; }\\n.font-awesome-hand::after {\\n  font-family: FontAwesome; }\\n#mobiuscesium {\\n  height: 101%;\\n  font-family: sans-serif !important;\\n  margin: 0px !important;\\n  padding: 0px !important;\\n  font-size: 14px; }\\n#button {\\n  position: absolute;\\n  z-index: 99; }\\n#Toggle {\\n  position: absolute;\\n  top: calc(50% - 30px);\\n  z-index: 200;\\n  width: 30px;\\n  height: 70px;\\n  border-top: 1px solid gray;\\n  border-right: 1px solid gray;\\n  border-bottom: 1px solid gray;\\n  background-color: rgba(20, 20, 20, 0.5);\\n  color: #ddd;\\n  text-align: center;\\n  font-size: 32px;\\n  line-height: 70px;\\n  cursor: pointer; }\\n\"","import { Component, OnInit, Input } from \"@angular/core\";\r\nimport {DataService} from \"./data/data.service\";\r\nimport { trigger, state, style, transition, animate, keyframes } from \"@angular/animations\";\r\nimport { INode } from \"@models/node\";\r\n\r\nconst defaultText = `{\r\n  \"type\": \"FeatureCollection\",\r\n  \"name\": \"default\",\r\n  \"crs\": { \"type\": \"name\", \"properties\": { \"name\": \"0\" } },\r\n  \"features\": [\r\n  { \"type\": \"Feature\", \"properties\": { \"OBJECTID\": 1, \"OID_1\": 0, \"INC_CRC\": \"593E775CE158CC1F\", \"FMEL_UPD_D\": \"2014\\/06\\/23\", \"X_ADDR\": 26044.8109, \"Y_ADDR\": 48171.43, \"SHAPE_Leng\": 298.85929234299999, \"SHAPE_Area\": 1070.8993405900001 }, \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [] } }\r\n  ]\r\n  }`;\r\n\r\n@Component({\r\n  selector: \"mobius-cesium\",\r\n  templateUrl: \"./mobius-cesium.component.html\",\r\n  styleUrls: [\"./mobius-cesium.component.scss\"],\r\n  animations: [\r\n    trigger(\"slide_in_out\", [\r\n      state(\"slide_in\", style({\r\n        width: \"280px\",\r\n        // css styles when the element is in slide_in\r\n      })),\r\n      state(\"slide_out\", style({\r\n        width: \"0px\"\r\n        // css styles when the element is in slide_out\r\n      })),\r\n      // animation effect when transitioning from one state to another\r\n      transition(\"slide_in <=> slide_out\", animate(300))\r\n    ]),\r\n  ],\r\n})\r\nexport class MobiuscesiumComponent {\r\n  @Input() node: INode;\r\n  @Input() mode: string;\r\n  data: JSON;\r\n  text: string;\r\n  private showFiller:boolean;\r\n\r\n  constructor(private dataService: DataService) {\r\n\r\n  \t};\r\n  //pass data to dataService\r\n  public setModel(data: JSON): void {\r\n  \ttry {\r\n  \t\tthis.dataService.setGsModel(data);\r\n  \t}\r\n  \tcatch(ex) {\r\n\t\t\tthis.text = '';\r\n  \t\tthis.data = undefined;\r\n\r\n  \t}\r\n  }\r\n  //pass data to dataService\r\n  public ngOnInit() {\r\n\t\tthis.text = this.node.output.value;\r\n\t\tthis.data = JSON.parse(this.text||defaultText);\r\n  \tthis.setModel(this.data);\r\n    this.dataService.setMode(this.mode);\r\n    // console.log(this.data);\r\n\r\n  }\r\n  public ngDoCheck() {\r\n  \tif(this.text !== this.node.output.value) {\r\n\t\t\tthis.text = this.node.output.value;\r\n      this.data = JSON.parse(this.text||defaultText);\r\n  \t\tthis.setModel(this.data);\r\n      // console.log(\"data changed\");\r\n      // console.log(\"mode:\", this.mode);\r\n  \t}\r\n  }\r\n\r\n  //create slider to switch setting\r\n  private slider_state:string = \"slide_out\";\r\n  public toggleSlider(): void {\r\n    // do something to change the animation_state variable\r\n  \tthis.slider_state = this.slider_state === \"slide_out\" ? \"slide_in\" : \"slide_out\";\r\n  \tlet toggle=document.getElementById(\"Toggle\");\r\n  \tif(this.slider_state === \"slide_out\") {\r\n  \t  toggle.style.left=\"0px\";\r\n      toggle.innerHTML=\"▹\";\r\n  \t} else if(this.slider_state === \"slide_in\") {\r\n  \t  toggle.style.left=\"280px\";\r\n      toggle.innerHTML=\"◃\";\r\n\r\n  \t}\r\n\t}\r\n}\r\n","import { NgModule, ModuleWithProviders,Component } from \"@angular/core\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { MobiuscesiumComponent} from \"./mobius-cesium.component\";\r\nimport { ViewerComponent} from \"./viewer/viewer.component\";\r\nimport { DataService } from \"./data/data.service\";\r\nimport { AngularSplitModule } from \"angular-split\";\r\nimport { BrowserAnimationsModule ,NoopAnimationsModule} from \"@angular/platform-browser/animations\";\r\nimport { BrowserModule, HAMMER_GESTURE_CONFIG } from \"@angular/platform-browser\";\r\nimport { MatTabsModule} from \"@angular/material/tabs\";\r\nimport { MatTooltipModule} from \"@angular/material/tooltip\";\r\nimport {MatSliderModule } from \"@angular/material/slider\";\r\nimport { FormsModule } from \"@angular/forms\";\r\nimport { SettingComponent } from \"./setting/setting.component\";\r\nimport { DataComponent } from \"./setting/visualise.component\";\r\nimport { SelectComponent } from \"./setting/attributes.copmponent\";\r\nimport { PublishComponent } from \"./setting/publish.component\";\r\nimport { DisplayComponent } from \"./setting/display.copmponent\";\r\n\r\n\r\n@NgModule({\r\n    imports: [CommonModule,\r\n              AngularSplitModule,\r\n              MatTabsModule,\r\n              MatTooltipModule,\r\n              MatSliderModule,\r\n              FormsModule\r\n       ],\r\n    exports: [ MobiuscesiumComponent ],\r\n    declarations: [MobiuscesiumComponent,\r\n                    ViewerComponent,\r\n                    SettingComponent,\r\n                    DataComponent,\r\n                    SelectComponent,\r\n                    PublishComponent,\r\n                    DisplayComponent],\r\n    providers: [DataService],\r\n})\r\nexport class MobiusCesium {\r\n   static forRoot(): ModuleWithProviders {\r\n        return {\r\n            ngModule: MobiusCesium,\r\n            providers: [\r\n               DataService,\r\n            ],\r\n        };\r\n    }\r\n}\r\n","module.exports = \"/deep/.mat-tab-label, /deep/.mat-tab-label-active{\\r\\n  min-width: 60px!important;\\r\\n  padding: 3px!important;\\r\\n  margin: 3px!important;\\r\\n  color:#D3D3D3 !important;\\r\\n  background-color: transparent !important;\\r\\n}\\r\\n/deep/.mat-tab-label{\\r\\n  height: 30px !important;\\r\\n  width: 60px !important;\\r\\n  background-color: transparent !important;\\r\\n}\\r\\n/deep/.mat-tab-labels{\\r\\n  background-color: rgba(20,20,20,0.9) !important;\\r\\n}\\r\\n/deep/.mat-tab-header{\\r\\n  width: 700px !important;\\r\\n}\\r\\n/deep/.mat-tab-header-pagination-controls-enabled{\\r\\n  display: none !important;\\r\\n}\\r\\n/deep/.mat-ink-bar{\\r\\n  background-color: #395d73 !important;\\r\\n}\\r\\n/deep/.mat-tab{\\r\\n  min-width: 30px !important;\\r\\n}\\r\\n/deep/.mat-tab-body-content{\\r\\n  overflow: hidden !important;\\r\\n}\\r\\n/deep/.mat-header{\\r\\n  flex-direction: row;\\r\\n  font-family: Roboto,\\\"Helvetica Neue\\\",sans-serif;\\r\\n  margin-left: 0px;\\r\\n  color:#395d73;\\r\\n  border: 0;\\r\\n  height: 20px;\\r\\n  background-color: rgba(20,20,20,0.9) !important;\\r\\n}\\r\\n/deep/.mat-tab-body-wrapper{\\r\\n  height:100% !important;\\r\\n\\r\\n}\\r\\n/deep/split-gutter{\\r\\n  background-color:rgb(138, 168, 192) !important;\\r\\n}\\r\\n/deep/.mat-accent .mat-slider-thumb {\\r\\n    background-color: #8AA8C0 !important;\\r\\n    cursor: -webkit-grab;\\r\\n}\\r\\n/deep/.mat-slider-thumb{\\r\\n  width: 5px !important;\\r\\n  right: -5px !important;\\r\\n}\\r\\n/deep/.mat-slider-track-fill{\\r\\n  background-color: #F0BFA0 !important;\\r\\n}\\r\\n/deep/.mat-slider-thumb-label-text {\\r\\n    color: #395d73 !important;\\r\\n    font-size: 12px !important;\\r\\n}\\r\\n/deep/.mat-slider-thumb-label{\\r\\n    height: 15px !important;\\r\\n    width: 15px !important;\\r\\n    top: -20px !important;\\r\\n    right: -7px !important;\\r\\n    background-color: white !important;\\r\\n    border: 1px solid #395d73 !important;\\r\\n}\\r\\n/deep/.mat-slider-track-background{\\r\\n  background-color: #D3D3D3 !important;\\r\\n}\\r\\n.mat-slider{\\r\\n    width: 150px !important;\\r\\n}\\r\\n.cesium-button {\\r\\n  display: inline-block;\\r\\n  position: relative;\\r\\n  border: 1px solid #8AA8C0;\\r\\n  color: #D3D3D3;\\r\\n  fill: #8AA8C0;\\r\\n  border-radius: 0px;\\r\\n  padding: 3px 0px;\\r\\n  margin: 0px 0px;\\r\\n  cursor: pointer;\\r\\n  overflow: hidden;\\r\\n  -moz-user-select: none;\\r\\n  -webkit-user-select: none;\\r\\n  -ms-user-select: none;\\r\\n  user-select: none;\\r\\n  width: 80px;\\r\\n  font-family:sans-serif !important;\\r\\n  background: transparent;\\r\\n}\\r\\n.cesium-button-select{\\r\\n  display: inline-block;\\r\\n  position: relative;\\r\\n  border: 1px solid #8AA8C0;\\r\\n  fill: #8AA8C0;\\r\\n  border-radius: 0px;\\r\\n  padding: 3px 0px;\\r\\n  margin: 0px 0px;\\r\\n  cursor: pointer;\\r\\n  overflow: hidden;\\r\\n  -moz-user-select: none;\\r\\n  -webkit-user-select: none;\\r\\n  -ms-user-select: none;\\r\\n  user-select: none;\\r\\n  width: 80px;\\r\\n  font-family:sans-serif !important;\\r\\n  color: #D3D3D3;\\r\\n  background: transparent;\\r\\n}\\r\\n.cesium-option{\\r\\n  background-color: #F1F1F1;\\r\\n  /*opacity: 0.8;*/\\r\\n  color: #8AA8C0;\\r\\n  border: 1px solid #8AA8C0;\\r\\n}\\r\\nhr {\\r\\n  display: block;\\r\\n  height: 1px;\\r\\n  border: 0;\\r\\n  border-top: 1px solid #D3D3D3 !important;\\r\\n  padding: 0; \\r\\n  color:#D3D3D3 !important;\\r\\n  width: 100%;\\r\\n  background-color: #D3D3D3 !important;\\r\\n}\\r\\n\\r\\n\"","module.exports = \"<div id=\\\"AttribsView\\\"  style=\\\"background-color: rgba(20,20,20,0.9);height: 100%;overflow-y:overlay;\\\"  >\\r\\n\\t<table border=\\\"1\\\" cellspacing=\\\"0\\\" cellpadding=\\\"0\\\" bordercolor=\\\"#d0d0d0\\\">\\r\\n\\t  <tr >\\r\\n\\t    <th style=\\\"font-size: 10px;font-weight: normal;width: 135px;\\\"><div style=\\\"width: 135px;height:16px;background: #395D73;color:white;white-space: nowrap;display:block;overflow: hidden !important;text-overflow: ellipsis !important;cursor:pointer;\\\">ID</div></th>\\r\\n\\t    <th style=\\\"font-size: 10px;font-weight: normal;width: 135px\\\"><div matTooltip={{ID}} style=\\\"width: 135px;height:16px;background: #395D73;color:white;white-space: nowrap;display:block;overflow: hidden !important;text-overflow: ellipsis !important;cursor:pointer;\\\">{{ID}}</div></th>\\r\\n\\t  </tr>\\r\\n\\t</table>\\r\\n\\t<table border=\\\"1\\\" cellspacing=\\\"0\\\" cellpadding=\\\"0\\\" bordercolor=\\\"#d0d0d0\\\">\\r\\n\\t  <tr *ngFor=\\\"let Property of _Properties\\\">\\r\\n\\t    <th style=\\\"font-size: 10px;font-weight: normal;color:#D3D3D3 ;width: 135px;height: 14px\\\"><div matTooltip={{Property.Name}} style=\\\"width: 135px;height:14px;text-align: left;white-space: nowrap;display:block;overflow: hidden !important;text-overflow: ellipsis !important;cursor:pointer;\\\">{{Property.Name}}</div></th>\\r\\n\\t    <th style=\\\"font-size: 10px;font-weight: normal;color:#D3D3D3 ;width: 135px;height: 14px\\\"><div matTooltip={{Property.Value}} style=\\\"width: 135px;height:14px;text-align: left;white-space: nowrap;display:block;overflow: hidden !important;text-overflow: ellipsis !important;cursor:pointer;\\\">{{Property.Value}}</div></th>\\r\\n\\t  </tr>\\r\\n\\t</table>\\r\\n</div>\\r\\n  \"","import { Component, OnInit, Injector, ElementRef ,NgModule} from \"@angular/core\";\r\nimport {DataSubscriber} from \"../data/DataSubscriber\";\r\nimport { DataService } from \"../data/data.service\";\r\nimport {ViewerComponent} from \"../viewer/viewer.component\";\r\nimport * as chroma from \"chroma-js\";\r\n\r\n@Component({\r\n  selector: \"app-select\",\r\n  templateUrl: \"./attributes.component.html\",\r\n  styleUrls: [\"./attributes.component.css\"],\r\n})\r\nexport class SelectComponent extends DataSubscriber implements OnInit {\r\n  private myElement;\r\n  private data: JSON;\r\n  private mode: string;\r\n  private viewer: object;\r\n  private dataArr: object;\r\n  private ID: any;\r\n  private _Properties: any[];\r\n\r\n  constructor(injector: Injector, myElement: ElementRef) {\r\n  super(injector);\r\n  }\r\n  public ngOnInit() {\r\n    this.data = this.dataService.getGsModel();\r\n    this.mode = this.dataService.getmode();\r\n    this.viewer = this.dataService.getViewer();\r\n    this.dataArr = this.dataService.get_ViData();\r\n  }\r\n  public  notify(message: string): void {\r\n    if(message === \"model_update\" ) {\r\n      this.data = this.dataService.getGsModel();\r\n      this.mode = this.dataService.getmode();\r\n      this.dataArr = this.dataService.get_ViData();\r\n    }\r\n  }\r\n\r\n  //check whether ID is changed or not and show in  Select tab\r\n  public ngDoCheck() {\r\n    if(this.viewer !== undefined&&this.dataService.get_SelectedEntity() !== undefined&&this.mode === \"editor\") {\r\n      if(this.ID !== this.dataService.get_SelectedEntity()._id) {\r\n        let _Property: any;\r\n        this.ID = this.dataService.get_SelectedEntity()._id;\r\n        this._Properties = [];\r\n        for(const _ColorPro of this.dataArr[\"ColorProperty\"]) {\r\n          if(_ColorPro !== \"None\") {\r\n            _Property = [];\r\n            _Property.Name = _ColorPro;\r\n            if(this.dataService.get_SelectedEntity().properties[_Property.Name]!==undefined){\r\n              _Property.Value = this.dataService.get_SelectedEntity().properties[_Property.Name]._value;\r\n            }else {_Property.Value = ' ';}\r\n            this._Properties.push(_Property);\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n","module.exports = \"/*/deep/.mat-tab-label, /deep/.mat-tab-label-active{\\r\\n  min-width: 60px!important;\\r\\n  padding: 3px!important;\\r\\n  margin: 3px!important;\\r\\n  color:#D3D3D3 !important;\\r\\n  background-color: transparent !important;\\r\\n}\\r\\n/deep/.mat-tab-label{\\r\\n  height: 30px !important;\\r\\n  width: 60px !important;\\r\\n  background-color: transparent !important;\\r\\n}\\r\\n/deep/.mat-tab-labels{\\r\\n  background-color: rgba(20,20,20,0.9) !important;\\r\\n}\\r\\n/deep/.mat-tab-header{\\r\\n  width: 700px !important;\\r\\n}\\r\\n/deep/.mat-tab-header-pagination-controls-enabled{\\r\\n  display: none !important;\\r\\n}\\r\\n\\r\\n/deep/.mat-ink-bar{\\r\\n  background-color: #395d73 !important;\\r\\n}\\r\\n\\r\\n/deep/.mat-tab{\\r\\n  min-width: 30px !important;\\r\\n}\\r\\n/deep/.mat-tab-body-content{\\r\\n  overflow: hidden !important;\\r\\n}\\r\\n\\r\\n/deep/.mat-header{\\r\\n  flex-direction: row;\\r\\n  font-family: Roboto,\\\"Helvetica Neue\\\",sans-serif;\\r\\n  margin-left: 0px;\\r\\n  color:#395d73;\\r\\n  border: 0;\\r\\n  height: 20px;\\r\\n  background-color: rgba(20,20,20,0.9) !important;\\r\\n}\\r\\n/deep/.mat-tab-body-wrapper{\\r\\n  height:100% !important;\\r\\n\\r\\n}\\r\\n\\r\\n\\r\\n/deep/split-gutter{\\r\\n  background-color:rgb(138, 168, 192) !important;\\r\\n}\\r\\n\\r\\n/deep/.mat-accent .mat-slider-thumb {\\r\\n    background-color: #8AA8C0 !important;\\r\\n    cursor: -webkit-grab;\\r\\n}\\r\\n/deep/.mat-slider-thumb{\\r\\n  width: 5px !important;\\r\\n  right: -5px !important;\\r\\n}\\r\\n\\r\\n/deep/.mat-slider-track-fill{\\r\\n  background-color: #F0BFA0 !important;\\r\\n}\\r\\n\\r\\n/deep/.mat-slider-thumb-label-text {\\r\\n    color: #395d73 !important;\\r\\n    font-size: 12px !important;\\r\\n}\\r\\n/deep/.mat-slider-thumb-label{\\r\\n    height: 15px !important;\\r\\n    width: 15px !important;\\r\\n    top: -20px !important;\\r\\n    right: -7px !important;\\r\\n    background-color: white !important;\\r\\n    border: 1px solid #395d73 !important;\\r\\n}\\r\\n/deep/.mat-slider-track-background{\\r\\n  background-color: #D3D3D3 !important;\\r\\n}\\r\\n.mat-slider{\\r\\n    width: 150px !important;\\r\\n}*/\\r\\n\\r\\n.cesium-button {\\r\\n  display: inline-block;\\r\\n  position: relative;\\r\\n  border: 1px solid #8AA8C0;\\r\\n  color: #D3D3D3;\\r\\n  fill: #8AA8C0;\\r\\n  border-radius: 0px;\\r\\n  padding: 3px 0px;\\r\\n  margin: 0px 0px;\\r\\n  cursor: pointer;\\r\\n  overflow: hidden;\\r\\n  -moz-user-select: none;\\r\\n  -webkit-user-select: none;\\r\\n  -ms-user-select: none;\\r\\n  user-select: none;\\r\\n  width: 80px;\\r\\n  font-family:sans-serif !important;\\r\\n  background: transparent;\\r\\n}\\r\\n\\r\\n.cesium-button-select{\\r\\n  display: inline-block;\\r\\n  position: relative;\\r\\n  border: 1px solid #8AA8C0;\\r\\n  fill: #8AA8C0;\\r\\n  border-radius: 0px;\\r\\n  padding: 3px 0px;\\r\\n  margin: 0px 0px;\\r\\n  cursor: pointer;\\r\\n  overflow: hidden;\\r\\n  -moz-user-select: none;\\r\\n  -webkit-user-select: none;\\r\\n  -ms-user-select: none;\\r\\n  user-select: none;\\r\\n  width: 80px;\\r\\n  font-family:sans-serif !important;\\r\\n  color: #D3D3D3;\\r\\n  background: transparent;\\r\\n}\\r\\n\\r\\n.cesium-option{\\r\\n  background-color: #F1F1F1;\\r\\n  /*opacity: 0.8;*/\\r\\n  color: #8AA8C0;\\r\\n  border: 1px solid #8AA8C0;\\r\\n}\\r\\n\\r\\nhr {\\r\\n  display: block;\\r\\n  height: 1px;\\r\\n  border: 0;\\r\\n  border-top: 1px solid #D3D3D3 !important;\\r\\n  padding: 0; \\r\\n  color:#D3D3D3 !important;\\r\\n  width: 100%;\\r\\n  background-color: #D3D3D3 !important;\\r\\n}\\r\\n\\r\\n\"","module.exports = \"<div id=\\\"DisplayView\\\"  style=\\\"background-color: rgba(20,20,20,0.9);height: 100%;overflow-y:overlay;\\\"  >\\r\\n\\t<table>\\r\\n      <tr>\\r\\n      <th class=\\\"colorkey\\\" style=\\\"width: 80px\\\"><div class=\\\"Hide\\\" style=\\\"width: 80px;color:#D3D3D3 !important;border:0;text-align: left;font-weight: normal;\\\">Imagery</div></th>\\r\\n      <th><div>\\r\\n        <select class=\\\"cesium-button\\\" (change)=\\\"onChangeImagery($event.target.value)\\\" [ngModel]=\\\"_Imagery\\\">\\r\\n          <option class=\\\"cesium-option\\\"  *ngFor=\\\"let Imagery of _ImageryList\\\" value={{Imagery}}>{{Imagery}}</option>\\r\\n        </select>\\r\\n      </div></th>\\r\\n      </tr>\\r\\n    </table>\\r\\n    <hr>\\r\\n    <table>\\r\\n      <tr ><th style=\\\"width:80px;height: 25px;\\\"><div style=\\\"width: 80px;color:#D3D3D3 !important;font-weight: normal;text-align: left;border:0;\\\">Sun</div></th>\\r\\n      <th style=\\\"width:80px;height: 25px;\\\"><div style=\\\"width:80px;color:#D3D3D3 !important;font-weight: normal;text-align: left;border:0;\\\"><input type=\\\"checkbox\\\" [checked]=\\\"_Sun\\\" (click)=\\\"changeSun()\\\"></div></th></tr>\\r\\n    </table>\\r\\n    <table>\\r\\n      <tr ><th style=\\\"width:80px;height: 25px;\\\"><div style=\\\"width: 80px;color:#D3D3D3 !important;font-weight: normal;text-align: left;border:0;\\\">Shadows</div></th>\\r\\n      <th style=\\\"width:80px;height: 25px;\\\"><div style=\\\"width:80px;color:#D3D3D3 !important;font-weight: normal;text-align: left;border:0;\\\"><input type=\\\"checkbox\\\" [checked]=\\\"_Shadow\\\" (click)=\\\"changeShadow()\\\"></div></th></tr>\\r\\n    </table>\\r\\n    <table>\\r\\n      <tr ><th style=\\\"width:80px;height: 25px;\\\"><div style=\\\"width: 80px;color:#D3D3D3 !important;font-weight: normal;text-align: left;border:0;\\\">Date</div></th>\\r\\n      <th style=\\\"width:80px;height: 18px;\\\"><input type=\\\"text\\\"  value={{_Date}} style=\\\"width:80px;height: 18px;background:transparent;color:#D3D3D3;border:1px solid #8AA8C0;font-weight: normal;text-align: left\\\" (change)=\\\"changeDate($event.target.value,_UTC)\\\"></th></tr>  \\r\\n    </table>\\r\\n    <table>\\r\\n      <tr ><th style=\\\"width:80px;height: 25px;\\\"><div style=\\\"width: 80px;color:#D3D3D3 !important;font-weight: normal;text-align: left;border:0;\\\">UTC</div></th>\\r\\n      <th style=\\\"width:80px;height: 18px;\\\"><input type=\\\"text\\\"  value={{_UTC}} style=\\\"width:80px;height: 18px;background:transparent;color:#D3D3D3;border:1px solid #8AA8C0;font-weight: normal;text-align: left\\\" (change)=\\\"changeDate(_Date,$event.target.value)\\\"></th></tr>  \\r\\n    </table>\\r\\n    \\r\\n</div>\\r\\n  \"","import { Component, OnInit, Injector, ElementRef ,NgModule} from \"@angular/core\";\r\nimport {DataSubscriber} from \"../data/DataSubscriber\";\r\nimport { DataService } from \"../data/data.service\";\r\nimport {ViewerComponent} from \"../viewer/viewer.component\";\r\nimport * as chroma from \"chroma-js\";\r\n\r\n@Component({\r\n  selector: \"app-display\",\r\n  templateUrl: \"./display.copmponent.html\",\r\n  styleUrls: [\"./display.copmponent.css\"],\r\n})\r\nexport class DisplayComponent extends DataSubscriber implements OnInit {\r\n  private myElement;\r\n  private data: JSON;\r\n  private mode: string;\r\n  private _ImageryList: any[];\r\n  private _Imagery: string;\r\n  private _Sun: boolean;\r\n  private _Shadow: boolean;\r\n  private _Date: string;\r\n  private _UTC: number;\r\n\r\n  constructor(injector: Injector, myElement: ElementRef) {\r\n  super(injector);\r\n  }\r\n\r\n  public ngOnInit() {\r\n    this.data = this.dataService.getGsModel();\r\n    this._ImageryList = [\"Disable\",\"Stamen Toner\",\"Stamen Toner(Lite)\",\"Terrain(Standard)\",\"Terrain(Background)\",\r\n                         \"OpenStreetMap\",\"Earth at Night\",\"Natural Earth\\u00a0II\",\"Blue Marble\"];\r\n    \r\n    if(this._Imagery === undefined){\r\n      this._Imagery = this._ImageryList[3];\r\n      this.onChangeImagery(this._Imagery);\r\n    }else {this._Imagery =this.dataService.get_Imagery();}\r\n\r\n    if(this._Sun === undefined){\r\n      this._Sun = false;\r\n      this.dataService.set_Sun(this._Sun);\r\n    }else {this._Sun =this.dataService.get_Sun();}\r\n\r\n    if(this._Shadow === undefined){\r\n      this._Shadow = false;\r\n      this.dataService.set_Shadow(this._Shadow);\r\n    }else {this._Shadow =this.dataService.get_Shadow();}\r\n\r\n    this._UTC = +8;\r\n    this.dataService.set_UTC(this._UTC);\r\n    if(this._Date ===undefined){\r\n      const today = new Date();\r\n      const year = today.getFullYear();\r\n      const month = String(today.getMonth()+1).padStart(2, \"0\");\r\n      const day = String(today.getDate()).padStart(2, \"0\");\r\n      this._Date = year+\"-\"+month+\"-\"+day;\r\n    }else {\r\n      this._Date = this.dataService.get_Date();\r\n      this.changeDate(this._Date,this._UTC);\r\n    }\r\n        this.dataService.set_Date(this._Date);\r\n  }\r\n  public  notify(message: string): void {\r\n  }\r\n  \r\n  //chanage imagery in Display tab\r\n  public onChangeImagery(_Imagery): void{\r\n    this._Imagery = _Imagery;\r\n    this.dataService.set_Imagery(_Imagery);\r\n    const layers = this.dataService.getViewer().scene.imageryLayers;\r\n    if(_Imagery === this._ImageryList[0]) {\r\n      layers.removeAll();\r\n      this.dataService.getViewer().scene.globe.baseColor = Cesium.Color.GRAY;\r\n    }else if(_Imagery === this._ImageryList[1]){\r\n      layers.removeAll();\r\n      var blackMarble = layers.addImageryProvider(Cesium.createOpenStreetMapImageryProvider({\r\n        url : \"https://stamen-tiles.a.ssl.fastly.net/toner/\"\r\n      }));\r\n    }else if(_Imagery === this._ImageryList[2]){\r\n      layers.removeAll();\r\n      var blackMarble = layers.addImageryProvider(Cesium.createOpenStreetMapImageryProvider({\r\n        url : \"https://stamen-tiles.a.ssl.fastly.net/toner-lite/\"\r\n      }));\r\n    }else if(_Imagery === this._ImageryList[3]){\r\n      layers.removeAll();\r\n      var blackMarble = layers.addImageryProvider(Cesium.createOpenStreetMapImageryProvider({\r\n        url : \"https://stamen-tiles.a.ssl.fastly.net/terrain/\"\r\n      }));\r\n    }else if(_Imagery === this._ImageryList[4]){\r\n      layers.removeAll();\r\n      var blackMarble = layers.addImageryProvider(Cesium.createOpenStreetMapImageryProvider({\r\n        url : \"https://stamen-tiles.a.ssl.fastly.net/terrain-background/\"\r\n      }));\r\n    }else if(_Imagery === this._ImageryList[5]){\r\n      layers.removeAll();\r\n      var blackMarble = layers.addImageryProvider(Cesium.createOpenStreetMapImageryProvider({\r\n        url : \"https://a.tile.openstreetmap.org/\"\r\n      }));\r\n    }else if(_Imagery === this._ImageryList[6]){\r\n      layers.removeAll();\r\n      var blackMarble = layers.addImageryProvider(new Cesium.IonImageryProvider({ assetId: 3812 }));\r\n    }else if(_Imagery === this._ImageryList[7]){\r\n      layers.removeAll();\r\n      var blackMarble = layers.addImageryProvider(Cesium.createTileMapServiceImageryProvider({\r\n             url : Cesium.buildModuleUrl(\"Assets/Textures/NaturalEarthII\"),\r\n      }));\r\n    }else if(_Imagery === this._ImageryList[8]){\r\n      layers.removeAll();\r\n      var blackMarble = layers.addImageryProvider(new Cesium.IonImageryProvider({ assetId: 3845 }));\r\n    }\r\n  }\r\n  //change sun\r\n  public changeSun(){\r\n    const viewer = this.dataService.getViewer();\r\n    this._Sun = ! this._Sun;\r\n    if(this._Sun === true){\r\n      viewer.terrainShadows = Cesium.ShadowMode.ENABLED;\r\n      viewer.scene.globe.enableLighting =  true;\r\n      viewer.scene.sun.show = true;\r\n    } else {\r\n      viewer.terrainShadows = undefined;\r\n      viewer.scene.globe.enableLighting =  false;\r\n      viewer.scene.sun.show = false;\r\n    }\r\n    this.dataService.set_Sun(this._Sun);\r\n  }\r\n  //change shadow\r\n  public changeShadow(){\r\n    this._Shadow = ! this._Shadow;\r\n    const promise = this.dataService.getcesiumpromise();\r\n    if(this._Shadow === true){\r\n      promise.then(function(dataSource) {\r\n        const entities = dataSource.entities.values;\r\n        for(const entity of entities) {\r\n          entity.polygon.shadows = Cesium.ShadowMode.ENABLED;\r\n        }\r\n      });\r\n    } else {\r\n      promise.then(function(dataSource) {\r\n        const entities = dataSource.entities.values;\r\n        for(const entity of entities) {\r\n          entity.polygon.shadows = undefined;\r\n        }\r\n      });\r\n    }\r\n    this.dataService.set_Shadow(this._Shadow);\r\n  }\r\n  //change date\r\n  public changeDate(_Date,_UTC){\r\n    this._Date = _Date;\r\n    this._UTC = _UTC;\r\n    const viewer = this.dataService.getViewer();\r\n    const now = new Cesium.JulianDate.fromIso8601(this._Date);\r\n    const tomorrow = now.clone();\r\n    tomorrow.dayNumber = tomorrow.dayNumber + 1;\r\n    viewer.clock.currentTime = Cesium.JulianDate.addHours(now,this._UTC,now);\r\n    viewer.clock.startTime = now.clone();\r\n    viewer.clock.stopTime = tomorrow.clone();\r\n    viewer.timeline.zoomTo(viewer.clock.startTime, viewer.clock.stopTime);\r\n    this.dataService.set_Date(this._Date);\r\n    this.dataService.set_UTC(this._UTC);\r\n    viewer.timeline.updateFromClock();\r\n\r\n  }\r\n\r\n}\r\n","module.exports = \"#publishwindow{\\r\\n  position: relative;\\r\\n  height: 100%;\\r\\n  width: 100%;\\r\\n  color:#D3D3D3 !important;\\r\\n  font-family: Roboto,\\\"Helvetica Neue\\\",sans-serif;\\r\\n  font-size: 14px !important;\\r\\n  line-height: 16px;\\r\\n  overflow-x: hidden !important;\\r\\n}\\r\\n\\r\\n/deep/split-gutter{\\r\\n  background-color:rgb(138, 168, 192) !important;\\r\\n}\\r\\n\\r\\n/deep/.mat-accent .mat-slider-thumb {\\r\\n    background-color: #8AA8C0 !important;\\r\\n    cursor: -webkit-grab;\\r\\n    padding: 0px;\\r\\n    height: 24px;\\r\\n    /*min-width: 50px;*/\\r\\n    flex-grow: 1;\\r\\n    touch-action: none;\\r\\n    -webkit-user-select: none;\\r\\n       -moz-user-select: none;\\r\\n        -ms-user-select: none;\\r\\n            user-select: none;\\r\\n    -webkit-user-drag: none;\\r\\n    -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\\r\\n}\\r\\n\\r\\n/deep/.mat-slider-thumb{\\r\\n  width: 5px !important;\\r\\n  right: -5px !important;\\r\\n}\\r\\n\\r\\n/deep/.mat-slider-track-fill{\\r\\n  background-color: #F0BFA0 !important;\\r\\n}\\r\\n\\r\\n/deep/.mat-slider-thumb-label-text {\\r\\n    color: #395d73 !important;\\r\\n    font-size: 12px !important;\\r\\n}\\r\\n\\r\\n/deep/.mat-slider-thumb-label{\\r\\n    height: 15px !important;\\r\\n    width: 15px !important;\\r\\n    top: -20px !important;\\r\\n    right: -7px !important;\\r\\n    background-color: white !important;\\r\\n    border: 1px solid #395d73 !important;\\r\\n}\\r\\n\\r\\n/deep/.mat-slider-track-background{\\r\\n  background-color: #D3D3D3 !important;\\r\\n}\\r\\n\\r\\n.mat-slider{\\r\\n    width: 100%;\\r\\n    display: inline-block;\\r\\n    position: relative;\\r\\n    box-sizing: border-box;\\r\\n    outline: 0;\\r\\n    vertical-align: middle;\\r\\n}\\r\\n\\r\\n.cesium-button {\\r\\n  display: inline-block;\\r\\n  position: relative;\\r\\n  border: 1px solid #8AA8C0;\\r\\n  color: #D3D3D3;\\r\\n  fill: #8AA8C0;\\r\\n  border-radius: 0px;\\r\\n  padding: 3px 0px;\\r\\n  margin: 0px 0px;\\r\\n  cursor: pointer;\\r\\n  overflow: hidden;\\r\\n  -moz-user-select: none;\\r\\n  -webkit-user-select: none;\\r\\n  -ms-user-select: none;\\r\\n  user-select: none;\\r\\n  width: 80px;\\r\\n  font-family:sans-serif !important;\\r\\n  background: transparent;\\r\\n}\\r\\n\\r\\n.cesium-button-select{\\r\\n  display: inline-block;\\r\\n  position: relative;\\r\\n  border: 1px solid #8AA8C0;\\r\\n  fill: #8AA8C0;\\r\\n  border-radius: 0px;\\r\\n  padding: 3px 0px;\\r\\n  margin: 0px 0px;\\r\\n  cursor: pointer;\\r\\n  overflow: hidden;\\r\\n  -moz-user-select: none;\\r\\n  -webkit-user-select: none;\\r\\n  -ms-user-select: none;\\r\\n  user-select: none;\\r\\n  width: 80px;\\r\\n  font-family:sans-serif !important;\\r\\n  color: #D3D3D3;\\r\\n  background: transparent;\\r\\n}\\r\\n\\r\\n.cesium-option{\\r\\n  background-color: #F1F1F1;\\r\\n  /*opacity: 0.8;*/\\r\\n  color: #8AA8C0;\\r\\n  border: 1px solid #8AA8C0;\\r\\n}\\r\\n\\r\\nhr {\\r\\n  display: block;\\r\\n  height: 1px;\\r\\n  border: 0;\\r\\n  border-top: 1px solid #D3D3D3 !important;\\r\\n  padding: 0; \\r\\n  color:#D3D3D3 !important;\\r\\n  width: 100%;\\r\\n  background-color: #D3D3D3 !important;\\r\\n}\\r\\n\"","module.exports = \"<div id=\\\"publish\\\" style=\\\"background-color: rgba(20,20,20,0.9);height: 100%;overflow-y:overlay;\\\"  >\\r\\n\\r\\n<div id=\\\"publishwindow\\\" *ngIf=\\\"dataArr!==undefined\\\">\\r\\n        <div *ngIf=\\\"_ColorKey!==undefined\\\">\\r\\n        <table >\\r\\n          <tr>\\r\\n          <th class=\\\"colorkey\\\" style=\\\"width: 280px\\\" *ngIf=\\\"_ColorDescr!==undefined\\\"><div style=\\\"color:#D3D3D3 !important;border:0;text-align: left;font-weight: normal;font-size:14px;line-height:16px;\\\">{{_ColorDescr}}</div></th></tr>\\r\\n        </table>\\r\\n        <table>\\r\\n          <tr>\\r\\n            <th class=\\\"colorkey\\\" style=\\\"width: 80px\\\"><div class=\\\"Hide\\\" style=\\\"width: 80px;color:#D3D3D3 !important;border:0;text-align: left;font-weight: normal;\\\">Color&nbsp;&nbsp;:</div></th>\\r\\n          <th><div>\\r\\n            <select class=\\\"cesium-button\\\" (change)=\\\"onChangeColor($event.target.value)\\\" [ngModel]=\\\"_ColorKey\\\">\\r\\n              <option class=\\\"cesium-option\\\"  *ngFor=\\\"let ColorName of _ColorProperty\\\" value={{ColorName}}>{{ColorName}}</option>\\r\\n            </select>\\r\\n          </div></th>\\r\\n          </tr>\\r\\n          </table>\\r\\n    </div>\\r\\n    <div *ngIf=\\\"_ExtrudeKey!==undefined\\\">\\r\\n        <hr>\\r\\n          <table >\\r\\n          <tr>\\r\\n          <th class=\\\"colorkey\\\" style=\\\"width: 280px\\\" *ngIf=\\\"_ExtrudeDescr!==undefined\\\"><div style=\\\"color:#D3D3D3 !important;border:0;text-align: left;font-weight: normal;font-size:14px;line-height:16px;\\\">{{_ExtrudeDescr}}</div></th></tr>\\r\\n        </table>\\r\\n        <table>\\r\\n          <tr>\\r\\n            <th class=\\\"colorkey\\\" style=\\\"width: 80px\\\"><div class=\\\"Hide\\\" style=\\\"width: 80px;color:#D3D3D3 !important;border:0;text-align: left;font-weight: normal;\\\">Extrude&nbsp;&nbsp;:</div></th>\\r\\n          <th><div>\\r\\n            <select class=\\\"cesium-button\\\" (change)=\\\"onChangeHeight($event.target.value)\\\" [ngModel]=\\\"_ExtrudeKey\\\">\\r\\n               <option class=\\\"cesium-option\\\"  *ngFor=\\\"let Height of _ExtrudeProperty\\\" value={{Height}}>{{Height}}</option>\\r\\n            </select>\\r\\n          </div></th>\\r\\n          </tr>\\r\\n        </table>\\r\\n        <table>\\r\\n          <tr ><th style=\\\"width:40px;height: 25px;\\\"><div style=\\\"width: 40px;color:#D3D3D3 !important;font-weight: normal;text-align: left;border:0;\\\">Min&nbsp;&nbsp;:</div></th>\\r\\n          <th style=\\\"width:40px;\\\"><div style=\\\"width: 40px;color:#D3D3D3 !important;font-weight: normal;text-align: left;border:0;\\\" *ngIf=\\\"_ExtrudeMin!==undefined\\\">{{_ExtrudeMin}}</div></th></tr>\\r\\n\\r\\n          <tr><th style=\\\"width:40px;\\\"><div style=\\\"width: 40px;color:#D3D3D3 !important;font-weight: normal;text-align: left;border:0;\\\">Max&nbsp;&nbsp;:</div></th>\\r\\n          <th style=\\\"width:60px;\\\"><div style=\\\"width: 60px;color:#D3D3D3 !important;font-weight: normal;text-align: left;border:0;\\\" *ngIf=\\\"_ExtrudeMax!==undefined\\\">{{_ExtrudeMax}}</div></th></tr>\\r\\n      </table>\\r\\n    </div>\\r\\n    <div *ngIf=\\\"_Filter!==undefined\\\">\\r\\n      <hr>\\r\\n      <div class=\\\"hide-container\\\" style=\\\"margin-top:5px;\\\">\\r\\n        <div *ngFor=\\\"let item of _Filter;\\\" id={{item.divid}}>\\r\\n      <table>\\r\\n        <tr >\\r\\n          <th style=\\\"width:280px;height: 25px;\\\"><div style=\\\"color:#D3D3D3 !important;text-align: left;vertical-align: middle;font-weight: normal;font-size:14px;line-height:16px;\\\">{{item.descr}}</div></th></tr>\\r\\n        </table>\\r\\n        <table>\\r\\n          <tr>\\r\\n            <th style=\\\"max-width: 80px;height: 25px;\\\"><div matTooltip={{item.HeightHide}} style=\\\"max-width: 80px;color:#D3D3D3 !important;text-align: left;vertical-align: middle;font-weight: normal;white-space: nowrap;display:block;overflow: hidden !important;text-overflow: ellipsis !important;cursor:pointer;\\\">{{item.HeightHide}}</div></th>\\r\\n        <th *ngIf=\\\"item.type === 'number'\\\" style=\\\"width:20px;height: 25px;\\\">\\r\\n          <div style=\\\"width:20px;height: 25px;color:#D3D3D3 !important;vertical-align: middle;font-weight: normal;margin-top: 10px;\\\" *ngIf=\\\"item.RelaHide === 0\\\">></div>\\r\\n          <div style=\\\"width:20px;height: 25px;color:#D3D3D3 !important;vertical-align: middle;font-weight: normal;margin-top: 10px;\\\" *ngIf=\\\"item.RelaHide === 1\\\"><</div>\\r\\n          <div style=\\\"width:20px;height: 25px;color:#D3D3D3 !important;vertical-align: middle;font-weight: normal;margin-top: 10px;\\\" *ngIf=\\\"item.RelaHide === 2\\\">=</div></th>\\r\\n          <th *ngIf=\\\"item.type === 'category'\\\" style=\\\"width:30px;height: 25px;\\\">\\r\\n          <div style=\\\"width:20px;height: 25px;color:#D3D3D3 !important;vertical-align: middle;font-weight: normal;margin-top: 10px;\\\" *ngIf=\\\"item.RelaHide === 0\\\">none</div>\\r\\n          <div style=\\\"width:20px;height: 25px;color:#D3D3D3 !important;vertical-align: middle;font-weight: normal;margin-top: 10px;\\\" *ngIf=\\\"item.RelaHide === 1\\\">=</div>\\r\\n          <div style=\\\"width:20px;height: 25px;color:#D3D3D3 !important;vertical-align: middle;font-weight: normal;margin-top: 10px;\\\" *ngIf=\\\"item.RelaHide === 2\\\">!=</div></th>\\r\\n          <th *ngIf=\\\"item.type === 'number'\\\" style=\\\"width:80px;color:#395D73 !important;\\\"><input type=\\\"text\\\" id={{item.id}} value={{item.textHide}} (change)=\\\"Changetext($event.target.value,item.id)\\\" style=\\\"width:80px;background:transparent;color:#D3D3D3;border:1px solid #8AA8C0;\\\"></th>\\r\\n          <th *ngIf=\\\"item.type === 'category'\\\" style=\\\"width:73px;height: 25px;\\\"><div style=\\\"width:73px;height: 25px;\\\">\\r\\n          <select class=\\\"cesium-button-select\\\" [ngModel]=\\\"item.CategaryHide\\\" (change)=\\\"ChangeCategory($event.target.value,item.id,1)\\\" style=\\\"width:73px;height: 25px;\\\">\\r\\n            <option class=\\\"cesium-option\\\" *ngFor=\\\"let caty of item.Category\\\" value={{caty}}>{{caty}}</option>\\r\\n          </select></div></th>\\r\\n        <th style=\\\"width:20px;height: 22px;\\\" id={{item.id}}><input type=\\\"checkbox\\\" id={{item.id}} checked=\\\"checked\\\" (click)=\\\"Disable(item.id)\\\" style=\\\"width:20px;height: 22px;cursor:pointer;\\\"></th></tr>\\r\\n      </table>\\r\\n      <table>\\r\\n        <tr>\\r\\n        <th *ngIf=\\\"item.type === 'number'\\\" style=\\\"max-width: 30px;height: 25px;vertical-align: top;padding-top: 10px;\\\"><div style=\\\"font-weight: normal;display: inline-block;color:#D3D3D3 !important;text-align: left;max-width: 30px;\\\">{{item.HideMin}}</div></th>\\r\\n        <th *ngIf=\\\"item.type === 'number'\\\" style=\\\"width:200px;height: 25px;\\\"><div style=\\\"font-weight: normal;display: inline-block;width:200px;\\\"><mat-slider class=\\\"slider\\\" name=\\\"range\\\" id=\\\"0\\\" min={{item.HideMin}} max={{item.HideMax}} step=0.01 thumbLabel=true value={{item.textHide}} #textscale (change)=\\\"Changetext(textscale.value.toPrecision(2),item.id)\\\" >\\r\\n        </mat-slider></div></th>\\r\\n        <th *ngIf=\\\"item.type === 'number'\\\" style=\\\"max-width: 30px;height: 25px;vertical-align: top;padding-top: 10px;\\\"><div style=\\\"font-weight: normal;display: inline-block;color:#D3D3D3 !important;max-width: 30px;text-align: left;\\\">{{item.HideMax}}</div></th></tr>\\r\\n      </table><hr>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div>\\r\\n      <button style=\\\"color:#D3D3D3;border:2px solid #8AA8C0;background-color: transparent;cursor:pointer;\\\" (click)=\\\"reset()\\\">Reset</button></div>\\r\\n      </div>\\r\\n</div>\\r\\n\\r\\n  \"","import { Component, OnInit, Injector, ElementRef ,NgModule} from \"@angular/core\";\r\nimport {DataSubscriber} from \"../data/DataSubscriber\";\r\nimport { DataService } from \"../data/data.service\";\r\nimport {ViewerComponent} from \"../viewer/viewer.component\";\r\nimport * as chroma from \"chroma-js\";\r\n\r\n@Component({\r\n  selector:  \"app-publish\",\r\n  templateUrl:  \"./publish.component.html\",\r\n  styleUrls: [ \"./publish.component.css\" ],\r\n})\r\nexport class PublishComponent extends DataSubscriber implements OnInit {\r\n  private myElement ;\r\n  private dataArr: object;\r\n  private mode: string;\r\n  private _ColorDescr: string;\r\n  private _ColorProperty: any[];\r\n  private _ColorKey: string;\r\n  private _ColorMax: number;\r\n  private _ColorMin: number;\r\n  private _ColorInvert: boolean;\r\n  private _ExtrudeDescr: string;\r\n  private _ExtrudeProperty: any[];\r\n  private _ExtrudeKey: string;\r\n  private _ExtrudeMax: number;\r\n  private _ExtrudeMin: number;\r\n  private _HeightChart: boolean;\r\n  private _Invert: boolean;\r\n  private _Scale: number;\r\n  private _Filter: any[];\r\n  private _HideNum: any[];\r\n  private _CheckDisable: boolean = false;\r\n\r\n  constructor(injector: Injector, myElement: ElementRef) {\r\n  super(injector);\r\n  }\r\n  public ngOnInit() {\r\n    this.mode = this.dataService.getmode();\r\n    this.dataArr = this.dataService.get_PuData();\r\n    if(this.dataArr !== undefined) {\r\n      this.LoadData();\r\n    }\r\n  }\r\n  public notify(message: string): void {\r\n    if(message === \"model_update\" ) {\r\n      try {\r\n        this.dataArr = this.dataService.get_PuData();\r\n        if(this.dataArr !== undefined) {this.LoadData();}\r\n      }\r\n      catch (ex) {\r\n        console.log(ex);\r\n      }\r\n    }\r\n  }\r\n  //load data in publish version\r\n  public LoadData() {\r\n    this._ColorDescr = this.dataArr[\"ColorDescr\"];\r\n    this._ColorProperty = this.dataArr[ \"ColorProperty\"];\r\n    this._ColorKey = this.dataArr[ \"ColorKey\"];\r\n    this._ColorMax = this.dataArr[ \"ColorMax\"];\r\n    this._ColorMin = this.dataArr[ \"ColorMin\"];\r\n    this._ColorInvert = this.dataArr[ \"ColorInvert\"];\r\n    this._ExtrudeDescr = this.dataArr[ \"ExtrudeDescr\"];\r\n    this._ExtrudeProperty = this.dataArr[ \"ExtrudeProperty\"];\r\n    this._ExtrudeKey = this.dataArr[ \"ExtrudeKey\"];\r\n    this._ExtrudeMax = this.dataArr[ \"ExtrudeMax\"];\r\n    this._ExtrudeMin = this.dataArr[ \"ExtrudeMin\"];\r\n    this._HeightChart = this.dataArr[ \"HeightChart\"];\r\n    this._Invert = this.dataArr[ \"Invert\"];\r\n    this._Scale = this.dataArr[ \"Scale\"];\r\n    this._HideNum = this.dataArr[ \"HideNum\"];\r\n    this._Filter = this.dataArr[ \"Filter\"];\r\n  }\r\n  //disable button in publish version\r\n  public Disable(event) {\r\n    const index = this._HideNum.indexOf(event);\r\n    const divid = String(\"addHide\".concat(String(event)));\r\n    const addHide = document.getElementById(divid);\r\n    if(this._Filter[index].Disabletext === null) {\r\n      this._CheckDisable = false;\r\n    } else {this._CheckDisable = true;}\r\n    if(this._CheckDisable === false) {\r\n      if(this._Filter[index].type === \"number\") {\r\n        const textHide = this._Filter[index].textHide;\r\n        this._Filter[index].Disabletext = Number(textHide);\r\n        if(this._Filter[index].RelaHide === \"0\"||this._Filter[index].RelaHide === 0) {\r\n          this._Filter[index].textHide = this._Filter[index].HideMin;\r\n        }\r\n        if(this._Filter[index].RelaHide === \"1\"||this._Filter[index].RelaHide === 1) {\r\n          this._Filter[index].textHide = this._Filter[index].HideMax;\r\n        }\r\n      } else if(this._Filter[index].type === \"category\") {\r\n        const textHide = this._Filter[index].RelaHide;\r\n        this._Filter[index].Disabletext = Number(textHide);\r\n        this._Filter[index].RelaHide = 0;\r\n      }\r\n    } else {\r\n      if(this._Filter[index].type === \"number\") {\r\n        this._Filter[index].textHide = this._Filter[index].Disabletext;\r\n        this._Filter[index].Disabletext = null;\r\n      } else if(this._Filter[index].type === \"category\") {\r\n        this._Filter[index].RelaHide = this._Filter[index].Disabletext;\r\n        this._Filter[index].Disabletext = null;\r\n      }\r\n    }\r\n    this.dataArr[\"Filter\"] = this._Filter;\r\n    this.dataArr[\"HideNum\"] = this._HideNum;\r\n    this.dataService.set_PuData(this.dataArr);\r\n  }\r\n  //change category in filter\r\n  public ChangeCategory(categary,id,type) {\r\n    const _index = this._HideNum.indexOf(id);\r\n    if(type === 1) {\r\n      this._Filter[_index].CategaryHide = categary;\r\n    }\r\n    if(type === 0) {\r\n      this._Filter[_index].RelaHide = Number(categary);\r\n    }\r\n  }\r\n  //change text in filter\r\n  public Changetext(value,id) {\r\n    const _index = this._HideNum.indexOf(id);\r\n    this._Filter[_index].textHide = value;\r\n  }\r\n  //change color property in publish version\r\n  public onChangeColor(value) {\r\n    const data = this.dataService.getGsModel()[\"cesium\"][\"colour\"][\"attribs\"];\r\n    this.dataArr[\"ColorKey\"] = value;\r\n    for(const _data of data) {\r\n      if(_data[\"name\"] === value) {\r\n        this.dataArr[\"ColorMin\"] = _data[\"min\"];\r\n        this.dataArr[\"ColorMax\"] = _data[\"max\"];\r\n        this.dataArr[\"ColorInvert\"] = _data[\"invert\"];\r\n      }\r\n    }\r\n    const promise = this.dataService.getcesiumpromise();\r\n    const _Colortexts: any[] = [];\r\n    const self = this;\r\n    promise.then( function(dataSource) {\r\n      const entities = dataSource.entities.values;\r\n      for (const entity of entities) {\r\n        if(entity.properties[value] !== undefined) {\r\n        if(entity.properties[value]._value !== \" \") {\r\n          if(_Colortexts.length === 0) {_Colortexts[0] = entity.properties[value]._value;\r\n          } else { if(_Colortexts.indexOf(entity.properties[value]._value) === -1) {\r\n            _Colortexts.push(entity.properties[value]._value);}\r\n            }\r\n          }\r\n        }\r\n      }\r\n    });\r\n    this.dataArr[\"ColorText\"] = _Colortexts.sort();\r\n    this.dataService.set_PuData(this.dataArr);\r\n    this.LoadData();\r\n  }\r\n  //change extrudeheight property in publish version\r\n  public onChangeHeight(value) {\r\n    const data = this.dataService.getGsModel()[\"cesium\"][\"extrude\"][\"attribs\"];\r\n    this.dataArr[\"ExtrudeKey\"] = value;\r\n    for(const _data of data) {\r\n      if(_data[\"name\"] === value) {\r\n        this.dataArr[\"ExtrudeMin\"] = _data[\"min\"];\r\n        this.dataArr[\"ExtrudeMax\"] = _data[\"max\"];\r\n        this.dataArr[\"HeightChart\"] = _data[\"line\"];\r\n        this.dataArr[\"Invert\"] = _data[\"invert\"];\r\n        this.dataArr[\"Scale\"] = _data[\"scale\"];\r\n      }\r\n    }\r\n    const promise = this.dataService.getcesiumpromise();\r\n    const _Heighttexts = [];\r\n    const self = this;\r\n    promise.then(function(dataSource) {\r\n      const entities = dataSource.entities.values;\r\n      for (const entity of entities) {\r\n        if(entity.properties[value] !== undefined) {\r\n        if(entity.properties[value]._value !== \" \") {\r\n          if(_Heighttexts.length === 0) {_Heighttexts[0] = entity.properties[value]._value;\r\n          } else { if(_Heighttexts.indexOf(entity.properties[value]._value) === -1) {\r\n            _Heighttexts.push(entity.properties[value]._value);}\r\n            }\r\n          }\r\n        }\r\n      }\r\n    });\r\n    this.dataArr[\"ExtrudeText\"] = _Heighttexts.sort();\r\n    this.dataService.set_PuData(this.dataArr);\r\n    this.LoadData();\r\n  }\r\n  //reset button to load again\r\n  public reset() {\r\n    this.dataService.LoadJSONData();\r\n    this.dataArr = this.dataService.get_PuData();\r\n    if(this.dataArr !== undefined) {this.LoadData();}\r\n  }\r\n}\r\n","module.exports = \"#setting{\\r\\n  position: relative;\\r\\n  height: 100%;\\r\\n  width: 100%;\\r\\n  color:#D3D3D3 !important;\\r\\n  font-family: Roboto,\\\"Helvetica Neue\\\",sans-serif;\\r\\n  font-size: 14px !important;\\r\\n  line-height: 14px;\\r\\n  overflow-x: hidden !important;\\r\\n  border-right: 1px solid gray;\\r\\n}\\r\\n\\r\\n/deep/.mat-tab-label, /deep/.mat-tab-label-active{\\r\\n  min-width: 60px!important;\\r\\n  padding: 3px!important;\\r\\n  margin: 3px!important;\\r\\n  color:#D3D3D3 !important;\\r\\n  background-color: transparent !important;\\r\\n}\\r\\n\\r\\n/deep/.mat-tab-label{\\r\\n  height: 30px !important;\\r\\n  width: 60px !important;\\r\\n  background-color: transparent !important;\\r\\n}\\r\\n\\r\\n/deep/.mat-tab-labels{\\r\\n  background-color: rgba(20,20,20,0.9) !important;\\r\\n}\\r\\n\\r\\n/deep/.mat-tab-header{\\r\\n  width: 700px !important;\\r\\n}\\r\\n\\r\\n/deep/.mat-tab-header-pagination-controls-enabled{\\r\\n  display: none !important;\\r\\n}\\r\\n\\r\\n/deep/.mat-ink-bar{\\r\\n  background-color: #395d73 !important;\\r\\n}\\r\\n\\r\\n/deep/.mat-tab{\\r\\n  min-width: 30px !important;\\r\\n}\\r\\n\\r\\n/deep/.mat-tab-body-content{\\r\\n  overflow: hidden !important;\\r\\n}\\r\\n\\r\\n/deep/.mat-header{\\r\\n  flex-direction: row;\\r\\n  font-family: Roboto,\\\"Helvetica Neue\\\",sans-serif;\\r\\n  margin-left: 0px;\\r\\n  color:#395d73;\\r\\n  border: 0;\\r\\n  height: 20px;\\r\\n  background-color: rgba(20,20,20,0.9) !important;\\r\\n}\\r\\n\\r\\n/deep/.mat-tab-body-wrapper{\\r\\n  height:100% !important;\\r\\n\\r\\n}\\r\\n\\r\\n/deep/split-gutter{\\r\\n  background-color:rgb(138, 168, 192) !important;\\r\\n}\\r\\n\\r\\n/deep/.mat-accent .mat-slider-thumb {\\r\\n    background-color: #8AA8C0 !important;\\r\\n    cursor: -webkit-grab;\\r\\n}\\r\\n\\r\\n/deep/.mat-slider-thumb{\\r\\n  width: 5px !important;\\r\\n  right: -5px !important;\\r\\n}\\r\\n\\r\\n/deep/.mat-slider-track-fill{\\r\\n  background-color: #F0BFA0 !important;\\r\\n}\\r\\n\\r\\n/deep/.mat-slider-thumb-label-text {\\r\\n    color: #395d73 !important;\\r\\n    font-size: 12px !important;\\r\\n}\\r\\n\\r\\n/deep/.mat-slider-thumb-label{\\r\\n    height: 15px !important;\\r\\n    width: 15px !important;\\r\\n    top: -20px !important;\\r\\n    right: -7px !important;\\r\\n    background-color: white !important;\\r\\n    border: 1px solid #395d73 !important;\\r\\n}\\r\\n\\r\\n/deep/.mat-slider-track-background{\\r\\n  background-color: #D3D3D3 !important;\\r\\n}\\r\\n\\r\\n.mat-slider{\\r\\n    width: 150px !important;\\r\\n}\\r\\n\"","module.exports = \"<div id=\\\"setting\\\" >\\r\\n  <mat-tab-group class=\\\"mat-tab-group\\\" style=\\\"height: 100%;\\\" (selectedTabChange)=\\\"changedata($event.index)\\\" *ngIf=\\\"mode==='editor'\\\" >\\r\\n    <mat-tab label=\\\"&nbsp;Select&nbsp;\\\">\\r\\n      <app-select></app-select>\\r\\n    </mat-tab>\\r\\n    <mat-tab label=\\\"&nbsp;Data&nbsp;\\\" >\\r\\n      <app-data (change)=\\\"LoadViewer()\\\" (click)=\\\"LoadViewer()\\\"></app-data>\\r\\n    </mat-tab>\\r\\n    <mat-tab label=\\\"&nbsp;Display&nbsp;\\\" >\\r\\n      <app-display></app-display>\\r\\n    </mat-tab>\\r\\n    <mat-tab label=\\\"&nbsp;Publish&nbsp;\\\" >\\r\\n      <app-publish  (change)=\\\"LoadViewer()\\\" (click)=\\\"Reset();LoadViewer();\\\"></app-publish>\\r\\n    </mat-tab>\\r\\n  </mat-tab-group>\\r\\n    <app-publish *ngIf=\\\"mode==='viewer'\\\" (change)=\\\"LoadViewer()\\\" (click)=\\\"Reset();LoadViewer();\\\"></app-publish>\\r\\n</div>\"","import { Component, OnInit, Injector, ElementRef ,NgModule} from \"@angular/core\";\r\nimport {DataSubscriber} from \"../data/DataSubscriber\";\r\nimport { DataService } from \"../data/data.service\";\r\nimport {ViewerComponent} from \"../viewer/viewer.component\";\r\nimport * as chroma from \"chroma-js\";\r\n\r\n@Component({\r\n  selector: \"app-setting-cesium\",\r\n  templateUrl: \"./setting.component.html\",\r\n  styleUrls: [\"./setting.component.css\"],\r\n})\r\nexport class SettingComponent extends DataSubscriber implements OnInit {\r\n  private myElement;\r\n  private data: JSON;\r\n  private mode: string;\r\n  private dataArr: object;\r\n  private propertyname: any[];\r\n  private relation: any[];\r\n  private text: any[];\r\n  private _Filter: any[];\r\n  private _HideNum: any[];\r\n\r\n  constructor(injector: Injector, myElement: ElementRef) {\r\n  super(injector);\r\n  }\r\n  //get data and mode\r\n  public ngOnInit() {\r\n    this.data = this.dataService.getGsModel();\r\n    this.mode = this.dataService.getmode();\r\n    if(this.mode === \"viewer\") {\r\n      this.changedata(3);\r\n    } else if(this.mode===\"editor\") {\r\n      this.changedata(1);\r\n    }\r\n  }\r\n  //change data and load new data\r\n  public notify(message: string): void {\r\n    if(message === \"model_update\" ) {\r\n      this.data = this.dataService.getGsModel();\r\n      this.mode = this.dataService.getmode();\r\n      try {\r\n        if(this.data !== undefined&&this.data[\"features\"] !== undefined) {\r\n          if(this.mode === \"viewer\") {\r\n            this.changedata(3);\r\n          } else if(this.mode === \"editor\") {\r\n            this.changedata(1);\r\n          }\r\n        }\r\n      }\r\n      catch(ex) {\r\n        console.log(ex);\r\n      }\r\n    }\r\n  }\r\n  //change index from editor version to publish version\r\n  public changedata(id: number) {\r\n    this.dataService.set_index(id);\r\n    if(id === 1) {\r\n      this.dataArr = this.dataService.get_ViData();\r\n    } else if(id === 3) {\r\n      this.dataArr = this.dataService.get_PuData();\r\n    }\r\n    if(this.dataArr !== undefined) {\r\n      this.LoadViewer();\r\n    }\r\n  }\r\n  //reset button to reset everthing in publish version\r\n  public Reset() {\r\n    this.dataArr = this.dataService.get_PuData();\r\n  }\r\n  //change color and extrudeHeight of entity\r\n  public LoadViewer() {\r\n    const promise = this.dataService.getcesiumpromise();\r\n    const _ColorKey: string = this.dataArr[\"ColorKey\"];\r\n    const _ColorMax: number = this.dataArr[\"ColorMax\"];\r\n    const _ColorMin: number = this.dataArr[\"ColorMin\"];\r\n    const _ColorText: any[] = this.dataArr[\"ColorText\"];\r\n    const _ColorInvert: boolean = this.dataArr[\"ColorInvert\"];\r\n    const _ExtrudeKey: string = this.dataArr[\"ExtrudeKey\"];\r\n    const _ExtrudeMax: number = this.dataArr[\"ExtrudeMax\"];\r\n    const _ExtrudeMin: number = this.dataArr[\"ExtrudeMin\"];\r\n    const _HeightChart: boolean = this.dataArr[\"HeightChart\"];\r\n    const _Invert: boolean = this.dataArr[\"Invert\"];\r\n    const _Scale: number = this.dataArr[\"Scale\"];\r\n    const _indexArr: number[] = this.dataArr[\"indexArr\"];\r\n\r\n    let _Filter: any[];\r\n    if(this.dataArr[\"Filter\"] !== undefined&&this.dataArr[\"Filter\"].length !== 0) {\r\n      _Filter = this.dataArr[\"Filter\"];\r\n    } else {_Filter = [];}\r\n    let _ChromaScale = chroma.scale(\"SPECTRAL\");\r\n    if(_ColorInvert === true) {_ChromaScale = chroma.scale(\"SPECTRAL\").domain([1,0]);}\r\n    const self = this;\r\n    promise.then(function(dataSource) {\r\n      const entities = dataSource.entities.values;\r\n      for (const i of _indexArr) {\r\n        const entity = entities[i];\r\n        let _CheckHide: boolean;\r\n        if(entity.polygon !==undefined){\r\n          if(_Filter.length !== 0) {\r\n            _CheckHide = self.Hide(_Filter,entity,_HeightChart);\r\n            if(_CheckHide === true) {\r\n              if(entity.polygon !== undefined) {\r\n                entity.polygon.extrudedHeight = 0;\r\n                entity.polygon.material = Cesium.Color.LIGHTSLATEGRAY.withAlpha(1);\r\n                if(_HeightChart === true) {\r\n                  if(entity.polyline !== undefined) {entity.polyline.show = false;}\r\n                }\r\n              }\r\n              if(entity.polyline !== undefined)  {entity.polyline.material = Cesium.Color.LIGHTSLATEGRAY.withAlpha(1);}\r\n            }\r\n          }\r\n\r\n          if(_Filter.length === 0||_CheckHide === false) {\r\n            if(_ColorKey !== \"None\") {\r\n              if(typeof(_ColorText[0]) === \"number\") {\r\n                self.colorByNum(entity,_ColorMax,_ColorMin,_ColorKey,_ChromaScale);\r\n              } else {self.colorByCat(entity,_ColorText,_ColorKey,_ChromaScale);}\r\n            } else {entity.polygon.material = Cesium.Color.DARKGREY;}\r\n            if(_ExtrudeKey !== \"None\") {\r\n              if(_HeightChart === false) {\r\n                \r\n                 entity.polyline = undefined;\r\n                if(entity.properties[_ExtrudeKey] !==undefined) {\r\n                  entity.polygon.extrudedHeight = self.ExtrudeHeight(entity.properties[_ExtrudeKey]._value,\r\n                                                                  _ExtrudeMax,_ExtrudeMin,_Invert)*_Scale;\r\n                } else {entity.polygon.extrudedHeight = 0;}\r\n                \r\n              } else {\r\n                entity.polygon.extrudedHeight =0;\r\n                const center =  Cesium.BoundingSphere.fromPoints(entity.polygon.hierarchy.getValue().positions).center;\r\n                const radius = Math.min(Math.round(Cesium.BoundingSphere.fromPoints\r\n                                      (entity.polygon.hierarchy.getValue().positions).radius/100),10);\r\n                const longitudeString = Cesium.Math.toDegrees(Cesium.Ellipsoid.WGS84.\r\n                                        cartesianToCartographic(center).longitude).toFixed(10);\r\n                const latitudeString = Cesium.Math.toDegrees(Cesium.Ellipsoid.WGS84.cartesianToCartographic(center).\r\n                                        latitude).toFixed(10);\r\n                entity.polyline = new Cesium.PolylineGraphics({\r\n                  positions:new Cesium.Cartesian3.fromDegreesArrayHeights([longitudeString,latitudeString,0,longitudeString,\r\n                          latitudeString,self.ExtrudeHeight(entity.properties[_ExtrudeKey]._value,\r\n                          _ExtrudeMax,_ExtrudeMin,_Invert)*_Scale]),\r\n                  width:radius,\r\n                  material:entity.polygon.material,\r\n                  show:true,\r\n                });\r\n              }\r\n            } else {\r\n              entity.polyline = undefined;\r\n              entity.polygon.extrudedHeight = 0;\r\n            }\r\n          }\r\n        }else if(entity.polyline!==undefined){\r\n          if(_ColorKey !== \"None\") {\r\n            if(typeof(_ColorText[0]) === \"number\") {\r\n              self.colorByNum(entity,_ColorMax,_ColorMin,_ColorKey,_ChromaScale);\r\n            } else {self.colorByCat(entity,_ColorText,_ColorKey,_ChromaScale);}\r\n            } else {entity.polyline.material = Cesium.Color.DARKGREY;\r\n          }\r\n        } else if(entity.point!==undefined){\r\n          if(_ColorKey !== \"None\") {\r\n            if(typeof(_ColorText[0]) === \"number\") {\r\n              self.colorByNum(entity,_ColorMax,_ColorMin,_ColorKey,_ChromaScale);\r\n            } else {self.colorByCat(entity,_ColorText,_ColorKey,_ChromaScale);}\r\n            } else {entity.point.color = Cesium.Color.DARKGREY;\r\n          }\r\n        }\r\n      }\r\n    });\r\n  }\r\n  //check whether entity should be hided or not\r\n  public Hide(_Filter: any[], entity, _HeightChart: boolean): boolean {\r\n    let _CheckHide: boolean = false;\r\n    for(const filter of _Filter) {\r\n      const value = entity.properties[filter.HeightHide]._value;\r\n      if(value !== undefined) {\r\n        if(typeof(value) === \"number\") {\r\n          if (this._compare(value, Number(filter.textHide), Number(filter.RelaHide))) {\r\n            _CheckHide=true;\r\n          }\r\n        } else if(typeof(value) === \"string\") {\r\n          if (this._compareCat(value,filter.CategaryHide, Number(filter.RelaHide))) {\r\n            _CheckHide=true;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return _CheckHide;\r\n  }\r\n\r\n  public _compare(value: number, slider: number, relation: number): boolean {\r\n    switch (relation) {\r\n      case 0:\r\n        return value < slider;\r\n      case 1:\r\n        return value > slider;\r\n      case 2:\r\n        return value !== slider;\r\n    }\r\n  }\r\n\r\n  public _compareCat(value: string, _Categary: string,relation: number): boolean {\r\n    switch (relation) {\r\n      case 0:\r\n        return value ===  undefined;\r\n      case 1:\r\n        return value !== _Categary;\r\n      case 2:\r\n        return value === _Categary;\r\n    }\r\n  }\r\n  //caculate the extrudeHeight of entity\r\n  public ExtrudeHeight(value: number, _ExtrudeMax: number, _ExtrudeMin: number, _Invert: boolean): number {\r\n    let diff: number;\r\n    if(_ExtrudeMin < 0) {diff = Math.abs(_ExtrudeMin);} else {diff = 0;}\r\n    if(value > _ExtrudeMax) {value = _ExtrudeMax;}\r\n    if(value < _ExtrudeMin) {value = _ExtrudeMin;}\r\n    switch (_Invert) {\r\n      case true:\r\n        return _ExtrudeMax - value;\r\n      case false:\r\n        return value;\r\n    }\r\n  }\r\n  public colorByNum(entity, max: number, min: number, _ColorKey: string, _ChromaScale: any) {\r\n    if(entity.properties[_ColorKey] !== undefined) {\r\n      const texts = entity.properties[_ColorKey]._value;\r\n      const rgb = _ChromaScale(Number(((max - texts) / (max - min)).toFixed(2)))._rgb;\r\n      if(entity.polygon !== undefined) {entity.polygon.material = Cesium.Color.fromBytes(rgb[0],rgb[1],rgb[2]);}\r\n      if(entity.polyline !== undefined) {\r\n        const newColor = new Cesium.Color.fromBytes(rgb[0],rgb[1],rgb[2]);\r\n        entity.polyline.material.color.setValue(newColor);\r\n      }\r\n      if(entity.point !==undefined){\r\n        const newColor = new Cesium.Color.fromBytes(rgb[0],rgb[1],rgb[2]);\r\n        entity.point.color = newColor;\r\n      }\r\n    }else{\r\n      if(entity.polygon !== undefined) {entity.polygon.material = Cesium.Color.LIGHTSLATEGRAY.withAlpha(1);}\r\n      if(entity.polyline !== undefined) {entity.polyline.material = Cesium.Color.LIGHTSLATEGRAY.withAlpha(1);}\r\n      if(entity.point !== undefined) {entity.point.color = Cesium.Color.LIGHTSLATEGRAY.withAlpha(1);}\r\n    }\r\n  }\r\n\r\n  public  colorByCat(entity, _ColorText: any[], _ColorKey: string, _ChromaScale: any) {\r\n    if(entity.properties[_ColorKey] !== undefined) {\r\n      let initial: boolean = false;\r\n      for(let j = 0;j < _ColorText.length; j++) {\r\n        if(entity.properties[_ColorKey]._value === _ColorText[j]) {\r\n          const rgb = _ChromaScale(1 - (j / _ColorText.length));\r\n          if(entity.polygon !== undefined){entity.polygon.material = Cesium.Color.fromBytes(rgb._rgb[0],rgb._rgb[1],rgb._rgb[2]);}\r\n          if(entity.polyline !== undefined) {\r\n            const newColor = new Cesium.Color.fromBytes(rgb[0],rgb[1],rgb[2]);\r\n            entity.polyline.material.color.setValue(newColor);\r\n          }\r\n          if(entity.point !== undefined) {\r\n            const newColor = new Cesium.Color.fromBytes(rgb[0],rgb[1],rgb[2]);\r\n            entity.point.color = newColor;\r\n          }\r\n          initial = true;\r\n        }\r\n      }\r\n      if(initial === false) {\r\n        if(entity.polygon !== undefined){entity.polygon.material = Cesium.Color.LIGHTSLATEGRAY.withAlpha(1);}\r\n        if(entity.polyline !== undefined) {entity.polyline.material = Cesium.Color.LIGHTSLATEGRAY.withAlpha(1);}\r\n        if(entity.point !== undefined) {entity.point.color = Cesium.Color.LIGHTSLATEGRAY.withAlpha(1);}\r\n      }\r\n    }else{\r\n      if(entity.polygon !== undefined) {entity.polygon.material = Cesium.Color.LIGHTSLATEGRAY.withAlpha(1);}\r\n      if(entity.polyline !== undefined) {entity.polyline.material = Cesium.Color.LIGHTSLATEGRAY.withAlpha(1);}\r\n      if(entity.point !== undefined) {entity.point.color = Cesium.Color.LIGHTSLATEGRAY.withAlpha(1);}\r\n    }\r\n  }\r\n}\r\n","module.exports = \"#SettingView{\\r\\n  position: relative;\\r\\n  padding:0px;\\r\\n  height: 100%;\\r\\n  width: 100%;\\r\\n  color:#D3D3D3 !important;\\r\\n  font-family: Roboto,\\\"Helvetica Neue\\\",sans-serif;\\r\\n  font-size: 14px !important;\\r\\n  line-height: 14px;\\r\\n  overflow-x: hidden !important;\\r\\n  background-color: rgba(20,20,20,0.9);\\r\\n  overflow-y:overlay;\\r\\n}\\r\\n/deep/.mat-tab-label, /deep/.mat-tab-label-active{\\r\\n  min-width: 60px!important;\\r\\n  padding: 3px!important;\\r\\n  margin: 3px!important;\\r\\n  color:#D3D3D3 !important;\\r\\n  background-color: transparent !important;\\r\\n}\\r\\n/deep/.mat-tab-label{\\r\\n  height: 30px !important;\\r\\n  width: 60px !important;\\r\\n  background-color: transparent !important;\\r\\n}\\r\\n/deep/.mat-tab-labels{\\r\\n  background-color: rgba(20,20,20,0.9) !important;\\r\\n}\\r\\n/deep/.mat-tab-header{\\r\\n  width: 700px !important;\\r\\n}\\r\\n/deep/.mat-tab-header-pagination-controls-enabled{\\r\\n  display: none !important;\\r\\n}\\r\\n/deep/.mat-ink-bar{\\r\\n  background-color: #395d73 !important;\\r\\n}\\r\\n/deep/.mat-tab{\\r\\n  min-width: 30px !important;\\r\\n}\\r\\n/deep/.mat-tab-body-content{\\r\\n  overflow: hidden !important;\\r\\n}\\r\\n/deep/.mat-header{\\r\\n  flex-direction: row;\\r\\n  font-family: Roboto,\\\"Helvetica Neue\\\",sans-serif;\\r\\n  margin-left: 0px;\\r\\n  color:#395d73;\\r\\n  border: 0;\\r\\n  height: 20px;\\r\\n  background-color: rgba(20,20,20,0.9) !important;\\r\\n}\\r\\n/deep/.mat-tab-body-wrapper{\\r\\n  height:100% !important;\\r\\n\\r\\n}\\r\\n/deep/split-gutter{\\r\\n  background-color:rgb(138, 168, 192) !important;\\r\\n}\\r\\n/deep/.mat-accent .mat-slider-thumb {\\r\\n    background-color: #8AA8C0 !important;\\r\\n    cursor: -webkit-grab;\\r\\n}\\r\\n/deep/.mat-slider-thumb{\\r\\n  width: 5px !important;\\r\\n  right: -5px !important;\\r\\n}\\r\\n/deep/.mat-slider-track-fill{\\r\\n  background-color: #F0BFA0 !important;\\r\\n}\\r\\n/deep/.mat-slider-thumb-label-text {\\r\\n    color: #8AA8C0 !important;\\r\\n    font-size: 12px !important;\\r\\n}\\r\\n/deep/.mat-slider-thumb-label{\\r\\n    height: 15px !important;\\r\\n    width: 15px !important;\\r\\n    top: -20px !important;\\r\\n    right: -7px !important;\\r\\n    background-color: white !important;\\r\\n    border: 1px solid #8AA8C0 !important;\\r\\n}\\r\\n/deep/.mat-slider-track-background{\\r\\n  background-color: #D3D3D3 !important;\\r\\n}\\r\\n.mat-slider{\\r\\n    width: 150px !important;\\r\\n}\\r\\n.cesium-button {\\r\\n  display: inline-block;\\r\\n  position: relative;\\r\\n  border: 1px solid #8AA8C0;\\r\\n  color: #D3D3D3;\\r\\n  fill: #8AA8C0;\\r\\n  border-radius: 0px;\\r\\n  padding: 3px 0px;\\r\\n  margin: 0px 0px;\\r\\n  cursor: pointer;\\r\\n  overflow: hidden;\\r\\n  -moz-user-select: none;\\r\\n  -webkit-user-select: none;\\r\\n  -ms-user-select: none;\\r\\n  user-select: none;\\r\\n  width: 80px;\\r\\n  font-family:sans-serif !important;\\r\\n  background: transparent;\\r\\n}\\r\\n.cesium-button-select{\\r\\n  display: inline-block;\\r\\n  position: relative;\\r\\n  border: 1px solid #8AA8C0;\\r\\n  fill: #8AA8C0;\\r\\n  border-radius: 0px;\\r\\n  padding: 3px 0px;\\r\\n  margin: 0px 0px;\\r\\n  cursor: pointer;\\r\\n  overflow: hidden;\\r\\n  -moz-user-select: none;\\r\\n  -webkit-user-select: none;\\r\\n  -ms-user-select: none;\\r\\n  user-select: none;\\r\\n  width: 80px;\\r\\n  font-family:sans-serif !important;\\r\\n  color: #D3D3D3;\\r\\n  background: transparent;\\r\\n}\\r\\n.cesium-option{\\r\\n  background-color: #F1F1F1;\\r\\n  /*opacity: 0.8;*/\\r\\n  color: #8AA8C0;\\r\\n  border: 1px solid #8AA8C0;\\r\\n}\\r\\nhr {\\r\\n  display: block;\\r\\n  height: 1px;\\r\\n  border: 0;\\r\\n  border-top: 1px solid #D3D3D3 !important;\\r\\n  padding: 0; \\r\\n  color:#D3D3D3 !important;\\r\\n  width: 100%;\\r\\n  background-color: #8AA8C0 !important;\\r\\n}\\r\\n\"","module.exports = \"<div id=\\\"SettingView\\\" >\\r\\n    <table>\\r\\n      <tr>\\r\\n      <th class=\\\"colorkey\\\" style=\\\"width: 80px\\\"><div class=\\\"Hide\\\" style=\\\"width: 80px;color:#D3D3D3 !important;border:0;text-align: left;font-weight: normal;\\\">Color</div></th>\\r\\n      <th><div>\\r\\n        <select class=\\\"cesium-button\\\" (change)=\\\"onChangeColor($event.target.value)\\\" [ngModel]=\\\"_ColorKey\\\">\\r\\n          <option class=\\\"cesium-option\\\"  *ngFor=\\\"let ColorName of _ColorProperty\\\" value={{ColorName}}>{{ColorName}}</option>\\r\\n        </select>\\r\\n      </div></th>\\r\\n      </tr>\\r\\n      </table>\\r\\n      <table>\\r\\n      <tr ><th style=\\\"width:80px;height: 25px;\\\"><div style=\\\"width: 80px;color:#D3D3D3 !important;font-weight: normal;text-align: left;border:0;\\\">Min</div></th>\\r\\n      <th style=\\\"width:80px;height: 18px;\\\"><input type=\\\"text\\\"  value={{_ColorMin}} style=\\\"width:80px;height: 18px;background:transparent;color:#D3D3D3;border:1px solid #8AA8C0;font-weight: normal;text-align: left;\\\" (change)=\\\"changeColorMin($event.target.value)\\\"></th></tr>  \\r\\n      </table>\\r\\n      <table >\\r\\n      <tr ><th style=\\\"width:80px;\\\"><div style=\\\"width: 80px;color:#D3D3D3 !important;font-weight: normal;text-align: left;border:0;\\\">Max</div></th>\\r\\n      <th style=\\\"width:80px;height: 18px;\\\"><input type=\\\"text\\\" value={{_ColorMax}} style=\\\"width: 80px;height: 18px;background:transparent;color:#D3D3D3;border:1px solid #8AA8C0;font-weight: normal;text-align: left;\\\" (change)=\\\"changeColorMax($event.target.value)\\\"></th></tr>\\r\\n  </table>\\r\\n    <table>\\r\\n      <tr ><th style=\\\"width:80px;height: 25px;\\\"><div style=\\\"width: 80px;color:#D3D3D3 !important;font-weight: normal;text-align: left;border:0;\\\">Invert</div></th>\\r\\n      <th style=\\\"width:80px;height: 25px;\\\"><div style=\\\"width:80px;color:#D3D3D3 !important;font-weight: normal;text-align: left;border:0;\\\"><input type=\\\"checkbox\\\" [checked]=\\\"_ColorInvert\\\" (click)=\\\"changeColorInvert()\\\"></div></th></tr>\\r\\n    </table>\\r\\n    <hr>\\r\\n      <table>\\r\\n      <tr>\\r\\n      <th class=\\\"colorkey\\\" style=\\\"width: 80px\\\"><div class=\\\"Hide\\\" style=\\\"width: 80px;color:#D3D3D3 !important;border:0;text-align: left;font-weight: normal;\\\">Extrude</div></th>\\r\\n      <th><div>\\r\\n        <select class=\\\"cesium-button\\\" (change)=\\\"onChangeHeight($event.target.value)\\\" [ngModel]=\\\"_ExtrudeKey\\\">\\r\\n           <option class=\\\"cesium-option\\\"  *ngFor=\\\"let Height of _ExtrudeProperty\\\" value={{Height}}>{{Height}}</option>\\r\\n        </select>\\r\\n      </div></th>\\r\\n      </tr>\\r\\n    </table>\\r\\n    <table>\\r\\n      <tr ><th style=\\\"width:80px;height: 25px;\\\"><div style=\\\"width: 80px;color:#D3D3D3 !important;font-weight: normal;text-align: left;border:0;\\\">Min</div></th>\\r\\n      <th style=\\\"width:80px;height: 18px;\\\"><input type=\\\"text\\\"  value={{_ExtrudeMin}} style=\\\"width:80px;height: 18px;background:transparent;color:#D3D3D3;border:1px solid #8AA8C0;font-weight: normal;text-align: left\\\" (change)=\\\"changeHeightMin($event.target.value)\\\"></th></tr>  \\r\\n      </table>\\r\\n      <table >\\r\\n      <tr ><th style=\\\"width:80px;\\\"><div style=\\\"width: 80px;color:#D3D3D3 !important;font-weight: normal;text-align: left;border:0;\\\">Max</div></th>\\r\\n      <th style=\\\"width:80px;height: 18px;\\\"><input type=\\\"text\\\" value={{_ExtrudeMax}} style=\\\"width: 80px;height: 18px;background:transparent;color:#D3D3D3;border:1px solid #8AA8C0;font-weight: normal;text-align: left;\\\" (change)=\\\"changeHeightMax($event.target.value)\\\"></th></tr>\\r\\n  </table>\\r\\n   <table>\\r\\n      <tr ><th style=\\\"width:80px;height: 25px;\\\"><div style=\\\"width: 80px;color:#D3D3D3 !important;font-weight: normal;text-align: left;border:0;\\\">Scale</div></th>\\r\\n      <th style=\\\"width:80px;height: 18px;\\\"><input type=\\\"text\\\" value={{_Scale}} style=\\\"width:80px;height: 18px;background:transparent;color:#D3D3D3;border:1px solid #8AA8C0;font-weight: normal;text-align: left;\\\" (change)=\\\"changescale($event.target.value)\\\" ></th></tr>\\r\\n      <tr ><th style=\\\"width:80px;height: 25px;\\\"><div style=\\\"width: 80px;color:#D3D3D3 !important;font-weight: normal;text-align: left;border:0;\\\">Invert</div></th>\\r\\n      <th style=\\\"width:80px;height: 25px;\\\"><div style=\\\"width:80px;color:#D3D3D3 !important;font-weight: normal;text-align: left;border:0;\\\"><input type=\\\"checkbox\\\" [checked]=\\\"_Invert\\\" (click)=\\\"changeopp()\\\"></div></th></tr>\\r\\n      <tr ><th style=\\\"width:80px;height: 25px;\\\"><div style=\\\"width: 80px;color:#D3D3D3 !important;font-weight: normal;text-align: left;border:0;\\\">Height Chart</div></th>\\r\\n      <th style=\\\"width:80px;height: 25px;\\\"><div style=\\\"width:80px;color:#D3D3D3 !important;font-weight: normal;text-align: left;border:0;\\\"><input type=\\\"checkbox\\\" [checked]=\\\"_HeightChart\\\" (click)=\\\"changeExtrude();\\\"></div></th></tr>  \\r\\n  </table>\\r\\n  <hr>\\r\\n  <table>\\r\\n    <tr>\\r\\n    <th class=\\\"colorkey\\\" style=\\\"width: 75px;height: 25px;\\\"><div class=\\\"Hide\\\" style=\\\"width: 75px;height: 25;color:#D3D3D3 !important;border-color:#395d73;border:0;text-align: left;font-weight: normal;\\\"><input type=\\\"button\\\" value=\\\"Add Filter\\\" style=\\\"color:#D3D3D3;border:1px solid #8AA8C0;width: 75px;height: 25px;background-color: transparent;cursor:pointer;\\\" (click)=\\\"addHide()\\\"></div></th>\\r\\n    <th style=\\\"width:20px;height: 22px;\\\"><div style=\\\"width:20px;height: 22px;margin-left: 10px\\\">\\r\\n      <select class=\\\"cesium-button-select\\\"  (change)=\\\"ChangeHeight($event.target.value)\\\">\\r\\n         <option class=\\\"cesium-option\\\"  *ngFor=\\\"let ColorName of _ColorProperty\\\" value={{ColorName}}>{{ColorName}}</option>\\r\\n      </select></div></th>\\r\\n    </tr>\\r\\n  </table>\\r\\n  <div class=\\\"hide-container\\\" style=\\\"margin-top:5px;\\\">\\r\\n    <div *ngFor=\\\"let item of _Filter;\\\" id={{item.divid}}>\\r\\n  <table>\\r\\n    <tr ><th style=\\\"width:85px;height: 22px;\\\"><div style=\\\"width:85px;color:#D3D3D3 !important;text-align: left;vertical-align: middle;font-weight: normal;\\\">{{item.HeightHide}}</div></th>\\r\\n    <th *ngIf=\\\"item.type === 'number'\\\" style=\\\"width:40px;height: 22px;\\\"><div style=\\\"width:40px;height: 22px;\\\">\\r\\n      <select class=\\\"cesium-button-select\\\" [ngModel]=\\\"item.RelaHide\\\" (change)=\\\"Changerelation($event.target.value,item.id)\\\" style=\\\"width:40px;height: 22px;\\\">\\r\\n         <option class=\\\"cesium-option\\\" value=0>></option>\\r\\n         <option class=\\\"cesium-option\\\" value=1><</option>\\r\\n         <option class=\\\"cesium-option\\\" value=2>=</option>\\r\\n      </select></div></th>\\r\\n      <th *ngIf=\\\"item.type === 'category'\\\" style=\\\"width:40px;height: 22px;\\\"><div style=\\\"width:40px;height: 22px;\\\">\\r\\n      <select class=\\\"cesium-button-select\\\" [ngModel]=\\\"item.RelaHide\\\" (change)=\\\"ChangeCategory($event.target.value,item.id,0)\\\" style=\\\"width:40px;height: 22px;\\\">\\r\\n        <option class=\\\"cesium-option\\\" value=0>none</option>\\r\\n        <option class=\\\"cesium-option\\\" value=1>=</option>\\r\\n        <option class=\\\"cesium-option\\\" value=2>!=</option>\\r\\n      </select></div></th>\\r\\n      <th *ngIf=\\\"item.type === 'number'\\\" style=\\\"width:70px;height: 20px;\\\"><input type=\\\"text\\\" id={{item.id}} value={{item.textHide}} (change)=\\\"Changetext($event.target.value,item.id)\\\" style=\\\"width:70px;height: 20px;background:transparent;color:#D3D3D3;border:1px solid #8AA8C0;\\\"></th>\\r\\n      <th *ngIf=\\\"item.type === 'category'\\\" style=\\\"width:73px;height: 22px;\\\"><div style=\\\"width:73px;height: 22px;\\\">\\r\\n      <select class=\\\"cesium-button-select\\\" [ngModel]=\\\"item.CategaryHide\\\" (change)=\\\"ChangeCategory($event.target.value,item.id,1)\\\" style=\\\"width:73px;height: 22px;\\\">\\r\\n        <option class=\\\"cesium-option\\\" *ngFor=\\\"let caty of item.Category\\\" value={{caty}}>{{caty}}</option>\\r\\n      </select></div></th>\\r\\n    <th style=\\\"width:20px;height: 22px;\\\" id={{item.id}}><span id={{item.id}} (click)=\\\"deleteHide(item.id)\\\" style=\\\"width:20px;height: 22px;cursor:pointer;\\\"><i class=\\\"material-icons\\\" style=\\\"color:#D3D3D3;font-size:16px\\\">delete</i></span></th>\\r\\n    <th style=\\\"width:20px;height: 25px;\\\" id={{item.id}}><input type=\\\"checkbox\\\" id={{item.id}} checked=\\\"checked\\\" (click)=\\\"Disable(item.id)\\\" tyle=\\\"width:20px;height: 25px;cursor:pointer;\\\"></th></tr>\\r\\n  </table>\\r\\n  <table>\\r\\n    <tr>\\r\\n    <th *ngIf=\\\"item.type === 'number'\\\" style=\\\"width:50px;height: 25px;vertical-align: top;padding-top: 10px;\\\"><div style=\\\"font-weight: normal;display: inline-block;color:#D3D3D3 !important;width:30px;\\\">{{item.HideMin}}</div></th>\\r\\n    <th *ngIf=\\\"item.type === 'number'\\\" style=\\\"width:150px;height: 22px;\\\"><div style=\\\"font-weight: normal;display: inline-block;width:150px;\\\"><mat-slider class=\\\"slider\\\" name=\\\"range\\\" id=\\\"0\\\" min={{item.HideMin}} max={{item.HideMax}} step=0.01 thumbLabel=true value={{item.textHide}} #textscale (change)=\\\"Changetext(textscale.value.toPrecision(2),item.id)\\\" >\\r\\n    </mat-slider></div></th>\\r\\n    <th *ngIf=\\\"item.type === 'number'\\\" style=\\\"width:50px;height: 25px;vertical-align: top;padding-top: 10px;\\\"><div style=\\\"font-weight: normal;display: inline-block;color:#D3D3D3 !important;width:30px;text-align: left;\\\">{{item.HideMax}}</div></th></tr>\\r\\n  </table><hr>\\r\\n    </div>\\r\\n  </div>\\r\\n  </div>\\r\\n  \"","import { Component, OnInit, Injector, ElementRef ,NgModule} from \"@angular/core\";\r\nimport {DataSubscriber} from \"../data/DataSubscriber\";\r\nimport { DataService } from \"../data/data.service\";\r\nimport {ViewerComponent} from \"../viewer/viewer.component\";\r\nimport * as chroma from \"chroma-js\";\r\n\r\n@Component({\r\n  selector: \"app-data\",\r\n  templateUrl: \"./visualise.component.html\",\r\n  styleUrls: [\"./visualise.component.css\"],\r\n})\r\nexport class DataComponent extends DataSubscriber implements OnInit {\r\n  private myElement;\r\n  private dataArr: object;\r\n  private _ColorProperty: any[];\r\n  private _ColorKey: string;\r\n  private _ColorMax: number;\r\n  private _ColorMin: number;\r\n  private _ExtrudeProperty: any[];\r\n  private _ExtrudeKey: string;\r\n  private _ExtrudeMax: number;\r\n  private _ExtrudeMin: number;\r\n  private _HeightChart: boolean;\r\n  private _Invert: boolean;\r\n  private _ColorInvert: boolean;\r\n  private _Scale: number;\r\n  private _Filter: any[];\r\n  private _HideNum: any[];\r\n  private _HideValue: string;\r\n  private _CheckDisable: boolean = true;\r\n\r\n  constructor(injector: Injector, myElement: ElementRef) {\r\n  super(injector);\r\n  }\r\n  public ngOnInit() {\r\n    this.dataArr = this.dataService.get_ViData();\r\n    if(this.dataArr !== undefined) {this.LoadData();}\r\n  }\r\n  public notify(message: string): void {\r\n    if(message === \"model_update\" ) {\r\n      try {\r\n        this.dataArr = this.dataService.get_ViData();\r\n        if(this.dataArr !== undefined) {this.LoadData();}\r\n      }\r\n      catch(ex) {\r\n        console.log(ex);\r\n      }\r\n    }\r\n  }\r\n  //load data\r\n  public LoadData() {\r\n    this._ColorProperty = this.dataArr[\"ColorProperty\"];\r\n    this._ColorKey = this.dataArr[\"ColorKey\"];\r\n    this._ColorMax = this.dataArr[\"ColorMax\"];\r\n    this._ColorMin = this.dataArr[\"ColorMin\"];\r\n    this._ColorInvert = this.dataArr[\"ColorInvert\"];\r\n    this._ExtrudeProperty = this.dataArr[\"ExtrudeProperty\"];\r\n    this._ExtrudeKey = this.dataArr[\"ExtrudeKey\"];\r\n    this._ExtrudeMax = this.dataArr[\"ExtrudeMax\"];\r\n    this._ExtrudeMin = this.dataArr[\"ExtrudeMin\"];\r\n    this._HeightChart = this.dataArr[\"HeightChart\"];\r\n    this._Invert = this.dataArr[\"Invert\"];\r\n    this._Scale = this.dataArr[\"Scale\"];\r\n    this._Filter = this.dataArr[\"Filter\"];\r\n    this._HideNum = this.dataArr[\"HideNum\"];\r\n  }\r\n  //change color property in editor version\r\n  public onChangeColor(value) {\r\n    this.dataArr[\"ColorKey\"] = value;\r\n    const promise = this.dataService.getcesiumpromise();\r\n    const _Colortexts = [];\r\n    const self = this;\r\n    promise.then(function(dataSource) {\r\n      const entities = dataSource.entities.values;\r\n      for (const entity of entities) {\r\n        if(entity.properties[value] !== undefined) {\r\n        if(entity.properties[value]._value !== \" \") {\r\n          if(_Colortexts.length === 0) {_Colortexts[0] = entity.properties[value]._value;\r\n          } else { if(_Colortexts.indexOf(entity.properties[value]._value) === -1) {\r\n            _Colortexts.push(entity.properties[value]._value);}\r\n            }\r\n          }\r\n        }\r\n      }\r\n    });\r\n    this.dataArr[\"ColorMin\"] = Math.min.apply(Math, _Colortexts);\r\n    this.dataArr[\"ColorMax\"] = Math.max.apply(Math, _Colortexts);\r\n    this.dataArr[\"ColorText\"] = _Colortexts.sort();\r\n    this.dataService.set_ViData(this.dataArr);\r\n    this.LoadData();\r\n  }\r\n  //change color min in editor version\r\n  public changeColorMin(_Min: number) {\r\n    this.dataArr[\"ColorMin\"] = Number(_Min);\r\n    this._ColorMin = this.dataArr[\"ColorMin\"];\r\n    this.dataService.set_ViData(this.dataArr);\r\n  }\r\n  //change color max in editor version\r\n  public changeColorMax(_Max: number) {\r\n    this.dataArr[\"ColorMax\"] = Number(_Max);\r\n    this._ColorMax = this.dataArr[\"ColorMax\"];\r\n    this.dataService.set_ViData(this.dataArr);\r\n\r\n  }\r\n  //change color invert in editor version\r\n  public changeColorInvert() {\r\n    this._ColorInvert =! this._ColorInvert;\r\n    this.dataArr[\"ColorInvert\"] = this._ColorInvert;\r\n    this.dataService.set_ViData(this.dataArr);\r\n  }\r\n  //change extrudeheight property in editor version\r\n  public onChangeHeight(value) {\r\n    this.dataArr[\"ExtrudeKey\"] = value;\r\n    const promise = this.dataService.getcesiumpromise();\r\n    const _Heighttexts = [];\r\n    const self = this;\r\n    promise.then(function(dataSource) {\r\n      const entities = dataSource.entities.values;\r\n      for (const entity of entities) {\r\n        if(entity.properties[value] !== undefined) {\r\n        if(entity.properties[value]._value !== \" \") {\r\n          if(_Heighttexts.length === 0) {_Heighttexts[0] = entity.properties[value]._value;\r\n          } else  { if(_Heighttexts.indexOf(entity.properties[value]._value) === -1) {\r\n            _Heighttexts.push(entity.properties[value]._value);}\r\n            }\r\n          }\r\n        }\r\n      }\r\n    });\r\n    this.dataArr[\"ExtrudeMin\"] = Math.min.apply(Math, _Heighttexts);\r\n    this.dataArr[\"ExtrudeMax\"] = Math.max.apply(Math, _Heighttexts);\r\n    this.dataArr[\"ExtrudeText\"] = _Heighttexts.sort();\r\n    this.dataService.set_ViData(this.dataArr);\r\n    this.LoadData();\r\n  }\r\n  //change extrudeheight min in editor version\r\n  public changeHeightMin(_Min: number) {\r\n    this.dataArr[\"ExtrudeMin\"] = Number(_Min);\r\n    this._ExtrudeMin = this.dataArr[\"ExtrudeMin\"];\r\n    this.dataService.set_ViData(this.dataArr);\r\n  }\r\n  //change extrudeHeight max in editor version\r\n  public changeHeightMax(_Max: number) {\r\n    this.dataArr[\"ExtrudeMax\"] = Number(_Max);\r\n    this._ExtrudeMax = this.dataArr[\"ExtrudeMax\"];\r\n    this.dataService.set_ViData(this.dataArr);\r\n  }\r\n  //change scale in editor version\r\n  public changescale(_ScaleValue: number) {\r\n    this.dataArr[\"Scale\"] = Number(_ScaleValue);\r\n    this._Scale = this.dataArr[\"Scale\"];\r\n    this.dataService.set_ViData(this.dataArr);\r\n  }\r\n  //change extrudeheight invert in editor version\r\n  public changeopp() {\r\n    this._Invert =! this._Invert;\r\n    this.dataArr[\"Invert\"] = this._Invert;\r\n    this.dataService.set_ViData(this.dataArr);\r\n  }\r\n  //change heightChart in editor version\r\n  public changeExtrude() {\r\n    this._HeightChart =! this._HeightChart;\r\n    this.dataArr[\"HeightChart\"] = this._HeightChart;\r\n    this.dataService.set_ViData(this.dataArr);\r\n  }\r\n  //add filter in editor version\r\n  public addHide() {\r\n    let lastnumber: string;\r\n    if(this.dataArr[\"HideNum\"] !== undefined) {\r\n      this._HideNum = this.dataArr[\"HideNum\"];\r\n      this._Filter = this.dataArr[\"Filter\"];\r\n    }\r\n    if(this._HideNum === null||this._HideNum.length === 0) {this._HideNum[0] = \"0\";lastnumber = this._HideNum[0];\r\n    } else {\r\n      for(let i = 0;i<this._HideNum.length+1;i++) {\r\n        if(this._HideNum.indexOf(String(i)) === -1) {\r\n          this._HideNum.push(String(i));\r\n          lastnumber = String(i);\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    if(this._HideValue === undefined) {this._HideValue = this._ColorProperty[0];}\r\n    const texts = this.Initial(this._HideValue);\r\n    let _HideType: string;\r\n    if(typeof(texts[0]) === \"number\") { _HideType = \"number\";\r\n    } else if(typeof(texts[0]) === \"string\") { _HideType = \"category\"; }\r\n    this._Filter.push({divid:String(\"addHide\".concat(String(lastnumber))),id: lastnumber,\r\n                       HeightHide:this._HideValue,type:_HideType,Category:texts,CategaryHide:texts[0],\r\n                       RelaHide:0,textHide: Math.round(Math.min.apply(Math, texts)*100)/100,\r\n                       HideMax:Math.ceil(Math.max.apply(Math, texts)),\r\n                       HideMin:Math.round(Math.min.apply(Math, texts)*100)/100,Disabletext:null});\r\n    this.dataArr[\"Filter\"] = this._Filter;\r\n    this.dataArr[\"HideNum\"] = this._HideNum;\r\n    this.dataService.set_ViData(this.dataArr);\r\n  }\r\n  //delete filter in editor version\r\n  public deleteHide(event) {\r\n    const index = this._HideNum.indexOf(event);\r\n    const divid = String(\"addHide\".concat(String(event)));\r\n    const addHide = document.getElementById(divid);\r\n    const hidecontainer = document.getElementsByClassName(\"hide-container\")[0];\r\n    hidecontainer.removeChild(addHide);\r\n\r\n    if(this._Filter[index].type === \"number\") {\r\n      if(this._Filter[index].RelaHide === \"0\"||this._Filter[index].RelaHide === 0) {\r\n        this._Filter[index].textHide = this._Filter[index].HideMin;\r\n      }\r\n      if(this._Filter[index].RelaHide === \"1\"||this._Filter[index].RelaHide === 1) {\r\n        this._Filter[index].textHide = this._Filter[index].HideMax;\r\n      }\r\n    } else if(this._Filter[index].type === \"category\") {\r\n      this._Filter[index].RelaHide = 0;\r\n    }\r\n    this._Filter.splice(index,1);\r\n    this._HideNum.splice(index,1);\r\n    this.dataArr[\"Filter\"] = this._Filter;\r\n    this.dataArr[\"HideNum\"] = this._HideNum;\r\n    this.dataService.set_ViData(this.dataArr);\r\n  }\r\n  //change disable button in filter\r\n  public Disable(event) {\r\n    const index = this._HideNum.indexOf(event);\r\n    const divid = String(\"addHide\".concat(String(event)));\r\n    const addHide = document.getElementById(divid);\r\n    if(this._Filter[index].Disabletext === null) {this._CheckDisable = false;} else {this._CheckDisable = true;}\r\n    if(this._CheckDisable === false) {\r\n      if(this._Filter[index].type === \"number\") {\r\n        const textHide = this._Filter[index].textHide;\r\n        this._Filter[index].Disabletext = Number(textHide);\r\n        if(this._Filter[index].RelaHide === \"0\"||this._Filter[index].RelaHide === 0) {\r\n          this._Filter[index].textHide = this._Filter[index].HideMin;\r\n        }\r\n        if(this._Filter[index].RelaHide === \"1\"||this._Filter[index].RelaHide === 1) {\r\n          this._Filter[index].textHide = this._Filter[index].HideMax;\r\n        }\r\n      } else if(this._Filter[index].type === \"category\") {\r\n        const textHide = this._Filter[index].RelaHide;\r\n        this._Filter[index].Disabletext = Number(textHide);\r\n        this._Filter[index].RelaHide = 0;\r\n      }\r\n    } else {\r\n      if(this._Filter[index].type === \"number\") {\r\n        this._Filter[index].textHide = this._Filter[index].Disabletext;\r\n        this._Filter[index].Disabletext = null;\r\n      } else if(this._Filter[index].type === \"category\") {\r\n        this._Filter[index].RelaHide = this._Filter[index].Disabletext;\r\n        this._Filter[index].Disabletext = null;\r\n      }\r\n    }\r\n    this.dataArr[\"Filter\"] = this._Filter;\r\n    this.dataArr[\"HideNum\"] = this._HideNum;\r\n    this.dataService.set_ViData(this.dataArr);\r\n  }\r\n  //change height slider in filter\r\n  public ChangeHeight(_HeightHide: string) {\r\n    this._HideValue = _HeightHide;\r\n  }\r\n  //change relation in filter\r\n  public Changerelation(_RelaHide: any, id: number) {\r\n    const index = this._HideNum.indexOf(id);\r\n    const HeightHide = this._Filter[index].HeightHide;\r\n    this._Filter[index].RelaHide = _RelaHide;\r\n    const texts = [];\r\n    const promise = this.dataService.getcesiumpromise();\r\n    const self = this;\r\n    promise.then(function(dataSource) {\r\n      const entities = dataSource.entities.values;\r\n      for (const entity of entities) {\r\n      if(entity.properties[HeightHide] !== undefined) {\r\n        if(entity.properties[HeightHide]._value !== \" \") {\r\n          if(texts.length === 0) {texts[0] = entity.properties[HeightHide]._value;\r\n          } else { if(texts.indexOf(entity.properties[HeightHide]._value) === -1) {\r\n            texts.push(entity.properties[HeightHide]._value);}\r\n            }\r\n          }\r\n        }\r\n      }\r\n    });\r\n    this._Filter[index].HideMax = Math.ceil(Math.max.apply(Math, texts));\r\n    this._Filter[index].HideMin = Math.round(Math.min.apply(Math, texts)*100)/100;\r\n    if(_RelaHide===\"0\"||_RelaHide === 0) {this._Filter[index].textHide = this._Filter[index].HideMin;}\r\n    if(_RelaHide===\"1\"||_RelaHide === 1) {this._Filter[index].textHide = this._Filter[index].HideMax;}\r\n  }\r\n  //change category in filter\r\n  public ChangeCategory(categary: string, id: number, type: number) {\r\n    const index = this._HideNum.indexOf(id);\r\n    if(type === 1) {\r\n      this._Filter[index].CategaryHide = categary;\r\n    }\r\n    if(type === 0) {\r\n      this._Filter[index].RelaHide = Number(categary);\r\n    }\r\n  }\r\n  //change text in filter\r\n  public Changetext(value: string, id: number) {\r\n    const index = this._HideNum.indexOf(id);\r\n    this._Filter[index].textHide = value;\r\n  }\r\n  //get text according to property\r\n  public  Initial(_HideValue: string): any[] {\r\n    const texts = [];\r\n    const promise = this.dataService.getcesiumpromise();\r\n    const self = this;\r\n    promise.then(function(dataSource) {\r\n      const entities = dataSource.entities.values;\r\n      for (const entity of entities) {\r\n        if(entity.properties[_HideValue] !== undefined) {\r\n          if(entity.properties[_HideValue]._value !== \" \") {\r\n            if(texts.length === 0) {texts[0] = entity.properties[_HideValue]._value;\r\n            } else { if(texts.indexOf(entity.properties[_HideValue]._value) === -1) {\r\n              texts.push(entity.properties[_HideValue]._value);}\r\n            }\r\n          }\r\n        }\r\n      }\r\n    });\r\n    return texts;\r\n  }\r\n}\r\n","module.exports = \"body{\\r\\n  background: red;\\r\\n}\\r\\n#cesiumContainer{\\r\\n height: 100%;\\r\\n width: 100%; \\r\\n font-family: sans-serif !important;\\r\\n margin: 0px !important;\\r\\n padding: 0px !important;\\r\\n font-size: 14px;\\r\\n}\\r\\n#ColorBar{\\r\\n  z-index:99;\\r\\n  margin: 5px;\\r\\n  width: 100%;\\r\\n  padding: 2px 5px;\\r\\n  position: absolute;\\r\\n  display:inline-block;\\r\\n  bottom: 7%;\\r\\n  overflow: hidden !important;\\r\\n  text-overflow: ellipsis !important;\\r\\n  table-layout:fixed !important;\\r\\n  white-space: nowrap !important;\\r\\n}\\r\\n#ColorKey{\\r\\n  z-index:99;\\r\\n  margin: 5px;\\r\\n  width: 100%;\\r\\n  padding: 2px 5px;\\r\\n  position: absolute;\\r\\n  display:inline-block;\\r\\n  bottom: 2%;\\r\\n  overflow: hidden !important;\\r\\n  text-overflow: ellipsis !important;\\r\\n  table-layout:fixed !important;\\r\\n  white-space: nowrap !important;\\r\\n}\\r\\n#Download{\\r\\n  z-index: 99;\\r\\n  top: 5px;\\r\\n  position: absolute;\\r\\n  right: 120px;\\r\\n  width: 32px;\\r\\n  height: 32px;\\r\\n  font-size: 16px;\\r\\n  box-sizing: border-box;\\r\\n  border-radius: 14%;\\r\\n  padding: 0;\\r\\n  vertical-align: middle;\\r\\n}\\r\\n\\r\\n\"","module.exports = \"<div id=\\\"cesiumContainer\\\" (click)=\\\"select();showAttribs($event)\\\" (mousemove)=\\\"Colortext();\\\">\\r\\n  <button class=\\\"cesium-button cesium-button-toolbar\\\" (click)=\\\"save_geojson()\\\" id=\\\"Download\\\"><i class=\\\"fa fa-download\\\"></i></button>\\r\\n  <div id=\\\"ColorBar\\\" *ngIf=\\\"texts!==undefined\\\">\\r\\n  \\t<table border=\\\"0\\\" cellspacing=\\\"0\\\" cellpadding=\\\"0\\\" bordercolor=\\\"#d0d0d0\\\" style=\\\"width: 88%;margin-left: 9%\\\">\\r\\n       <tr >\\r\\n          <th *ngFor=\\\"let text of texts;\\\" style=\\\"text-align:right;width: 7%\\\"><div  style=\\\"width: 8%;vertical-align: text-top;color:white;text-shadow: 0px 0px 3px black;\\\">{{text}}</div></th>\\r\\n        </tr>\\r\\n    </table>\\r\\n\\t<table border=\\\"0\\\" cellspacing=\\\"0\\\" cellpadding=\\\"0\\\" bordercolor=\\\"#d0d0d0\\\" style=\\\"width: 80%;margin: 0 auto;\\\">\\r\\n       <tr>\\r\\n          <th  *ngFor=\\\"let color of _Colorbar;let indx=index\\\" style=\\\"width: 0.5px;\\\" ><div [ngStyle]=\\\"{ 'background-color': color}\\\" ><div *ngIf=\\\"indx%8===0\\\" style=\\\"border-left: #FFFFFF 1px solid;border-color: black\\\">&nbsp;</div><div *ngIf=\\\"indx%8!==0\\\">&nbsp;</div></div></th>\\r\\n        </tr>\\r\\n    </table>\\r\\n  </div>\\r\\n  <div id=\\\"ColorBar\\\" *ngIf=\\\"_Cattexts!==undefined\\\" style=\\\"width: 100%;text-align: center\\\">\\r\\n    <table border=\\\"0\\\" cellspacing=\\\"0\\\" cellpadding=\\\"0\\\" bordercolor=\\\"#d0d0d0\\\" *ngFor=\\\"let cattext of _Cattexts\\\" style=\\\"display:inline-block;overflow: hidden !important;text-overflow: ellipsis !important;table-layout:fixed !important;white-space: nowrap !important; \\\">\\r\\n          <tr >\\r\\n            <th  style=\\\"width:80px;display:inline-block;overflow: hidden !important;text-overflow: ellipsis !important;table-layout:fixed !important;white-space: nowrap !important; \\\"><div [ngStyle]=\\\"{ 'background-color': cattext.color}\\\" >&nbsp;&nbsp;&nbsp;</div></th>\\r\\n        </tr>\\r\\n        <tr>\\r\\n            <th><div matTooltip={{cattext.text}}  style=\\\"width:80px;text-align: left;white-space: nowrap;display:inline-block;overflow: hidden !important;text-overflow: ellipsis !important;cursor:pointer;color:white;text-shadow: 0px 0px 3px black;\\\">{{cattext.text}}</div></th>\\r\\n          </tr>\\r\\n        </table>\\r\\n  </div>\\r\\n  <div id=\\\"ColorBar\\\" *ngIf=\\\"_CatNumtexts!==undefined\\\" >\\r\\n    <table border=\\\"0\\\" cellspacing=\\\"0\\\" cellpadding=\\\"0\\\" bordercolor=\\\"#d0d0d0\\\" style=\\\"width: 82%;margin: 0 auto;\\\">\\r\\n      <tr >\\r\\n        <th *ngFor=\\\"let cattext of _CatNumtexts;\\\" style=\\\"text-align:left;max-width: 3%\\\"><div *ngIf=\\\"cattext.text!==null\\\" style=\\\"width: 0.5px;vertical-align: text-top;color:white;text-shadow: 0px 0px 3px black;\\\">{{cattext.text}}</div><div *ngIf=\\\"cattext.text===null\\\" style=\\\"width: 0.5px;vertical-align: text-top;color:white;text-shadow: 0px 0px 3px black;\\\">&nbsp;&nbsp;&nbsp;</div></th>\\r\\n      </tr>\\r\\n    </table>\\r\\n    <table border=\\\"0\\\" cellspacing=\\\"0\\\" cellpadding=\\\"0\\\" bordercolor=\\\"#d0d0d0\\\" style=\\\"width: 80%;margin: 0 auto;\\\">\\r\\n      <tr>\\r\\n        <th  *ngFor=\\\"let cattext of _CatNumtexts;let indx=index\\\" style=\\\"width: 0.5px;\\\" ><div [ngStyle]=\\\"{ 'background-color': cattext.color}\\\" ><div style=\\\"border-color: black\\\">&nbsp;</div></div></th>\\r\\n      </tr>\\r\\n    </table>\\r\\n  </div>\\r\\n  <div *ngIf=\\\"mode==='viewer'\\\" id=\\\"ColorKey\\\">\\r\\n    <table border=\\\"0\\\" cellspacing=\\\"0\\\" cellpadding=\\\"0\\\" bordercolor=\\\"#d0d0d0\\\" style=\\\"width: 80%;margin: 0 auto;text-align:center;color:white;text-shadow: 0px 0px 3px black;\\\" >\\r\\n      <tr>\\r\\n        <th  style=\\\"width: 40%;\\\" ><div>Color:&nbsp;{{_ColorKey}}</div></th>\\r\\n        <th  style=\\\"width: 40%;\\\" ><div>Extrude:&nbsp;{{_ExtrudeKey}}</div></th>\\r\\n      </tr>\\r\\n    </table>\\r\\n  </div>\\r\\n  <div>\\r\\n    <table id=\\\"cesium-infoBox-defaultTable\\\" style=\\\"width: 140px;position:absolute;padding:4px;background-color:white;display: none;\\\">\\r\\n       <tr *ngFor=\\\"let pickupArr of pickupArrs\\\"><th style=\\\"font-size: 10px;font-weight: normal;color:#395d73;width: 60px;height: 14px\\\"><div matTooltip={{pickupArr.name}} style=\\\"width: 60px;height:14px;text-align: left;white-space: nowrap;display:block;overflow: hidden !important;text-overflow: ellipsis !important;cursor:pointer;\\\">{{pickupArr.name}}</div></th><th style=\\\"font-size: 10px;font-weight: normal;color:#395d73;width: 80px;height: 14px\\\"><div matTooltip={{pickupArr.data}} style=\\\"width: 80px;height:14px;text-align: left;white-space: nowrap;display:block;overflow: hidden !important;text-overflow: ellipsis !important;cursor:pointer;\\\">{{pickupArr.data}}</div></th></tr>\\r\\n       </table>\\r\\n        \\r\\n     </div>\\r\\n</div>\"","import { Component, OnInit, Injector, ElementRef } from \"@angular/core\";\r\nimport {DataSubscriber} from \"../data/DataSubscriber\";\r\nimport {SettingComponent} from \"../setting/setting.component\";\r\n// import * as d3 from \"d3-array\";\r\nimport * as chroma from \"chroma-js\";\r\n\r\n@Component({\r\n  selector: \"cesium-viewer\",\r\n  templateUrl: \"./viewer.component.html\",\r\n  styleUrls: [\"./viewer.component.css\"],\r\n})\r\nexport class ViewerComponent extends DataSubscriber {\r\n  private data: JSON;\r\n  private myElement;\r\n  private dataArr: object;\r\n  private viewer: any;\r\n  private selectEntity: any=null;\r\n  private material: object;\r\n  private _Colorbar: any[];\r\n  private texts: any[];\r\n  private _Cattexts: any[];\r\n  private _CatNumtexts: any[];\r\n  private pickupArrs: any[];\r\n  private mode: string;\r\n  private _index: number;\r\n  private _ShowColorBar: boolean;\r\n  private _ColorKey: string;\r\n  private _ExtrudeKey: string;\r\n\r\n  constructor(injector: Injector, myElement: ElementRef) {\r\n    super(injector);\r\n    this.myElement = myElement;\r\n  }\r\n\r\n  public ngOnInit() {\r\n    //pass mode to dataService\r\n    this.mode = this.dataService.getmode();\r\n    if(this.dataService.getViewer() === undefined){\r\n      this.CreateViewer();\r\n    }\r\n    //pass data to dataService\r\n    this.data = this.dataService.getGsModel();\r\n    //load data\r\n    this.LoadData(this.data);\r\n  }\r\n\r\n  public notify(message: string): void {\r\n    if(message === \"model_update\" ) {\r\n      this.data = this.dataService.getGsModel();\r\n      try {\r\n        if(this.dataService.getViewer() === undefined){\r\n          this.CreateViewer();\r\n        }\r\n        this.LoadData(this.data);\r\n      }\r\n      catch(ex) {\r\n        console.log(ex);\r\n      }\r\n    }\r\n  }\r\n  //create cesium viewer and change home button funciton\r\n  public CreateViewer(){\r\n    const viewer = new Cesium.Viewer(\"cesiumContainer\" , {\r\n      infoBox: false,\r\n      showRenderLoopErrors: false,\r\n      orderIndependentTranslucency: false,\r\n      baseLayerPicker: false,\r\n      fullscreenButton:false,\r\n      automaticallyTrackDataSourceClocks:false,\r\n      animation:false,\r\n      shadows:true,\r\n      scene3DOnly:true,\r\n    });\r\n    viewer.scene.imageryLayers.removeAll();\r\n    viewer.scene.globe.baseColor = Cesium.Color.GRAY;\r\n    document.getElementsByClassName(\"cesium-viewer-bottom\")[0].remove();\r\n    const self = this;\r\n    viewer.homeButton.viewModel.command.beforeExecute.addEventListener(function(e) {\r\n        e.cancel = true;\r\n        viewer.zoomTo(self.dataService.getcesiumpromise());\r\n    });\r\n    this.dataService.setViewer(viewer);\r\n  }\r\n  //Cesium geoJson to load data and check mode\r\n  public LoadData(data: JSON) {\r\n    if(this.data !== undefined) {\r\n      \r\n      //get viewer from dataService and remove the last dataSources\r\n      const viewer = this.dataService.getViewer();\r\n      viewer.dataSources.removeAll({destroy:true}); \r\n\r\n      //load geojson and add geojson to dataSources\r\n      this.data = data;\r\n      const promise = Cesium.GeoJsonDataSource.load(this.data);\r\n      viewer.dataSources.add(promise);\r\n\r\n       //check whether show colorbar or not\r\n      promise.then(function(dataSource) {\r\n        const entities = dataSource.entities.values;\r\n        const self = this;\r\n        if(entities[0].polygon !== undefined) {self._ShowColorBar = true;} else {self._ShowColorBar = false;}\r\n      });\r\n      \r\n\r\n      // pass promise to dataService\r\n      this.dataService.setcesiumpromise(promise);\r\n\r\n      //check the mode and load different data\r\n      if(this.mode === \"editor\") {\r\n        this.dataService.getValue(this.data);\r\n        this.dataService.LoadJSONData();\r\n        this.dataArr = this.dataService.get_ViData();\r\n        this._index = 1;\r\n      }\r\n      if(this.mode === \"viewer\") {\r\n        this.dataService.LoadJSONData();\r\n        this.dataArr = this.dataService.get_PuData();\r\n        this._index = 3;\r\n      }\r\n      viewer.zoomTo(promise);\r\n      this.Colortext();\r\n    }\r\n  }\r\n  //create color bar and text at bottom of viewer\r\n  public Colortext() {\r\n    if(this.dataArr !== undefined) {\r\n      if(this._index !== this.dataService.get_index()) {\r\n        this._index = this.dataService.get_index();\r\n        if(this._index === 1) {this.dataArr = this.dataService.get_ViData();\r\n        } else if(this._index === 3) {this.dataArr = this.dataService.get_PuData();}\r\n      }\r\n      const propertyname = this.dataArr[\"ColorKey\"];\r\n      const texts = this.dataArr[\"ColorText\"].sort();\r\n      const _Max: number = this.dataArr[\"ColorMax\"];\r\n      const _Min: number = this.dataArr[\"ColorMin\"];\r\n      if(this.mode === \"viewer\") {\r\n        this._ColorKey = this.dataArr[\"ColorKey\"];\r\n        this._ExtrudeKey = this.dataArr[\"ExtrudeKey\"];\r\n      }\r\n      this.texts = undefined;\r\n      this._Cattexts = [];\r\n      this._CatNumtexts = [];\r\n      let _ColorKey: any;\r\n      let _ChromaScale = chroma.scale(\"SPECTRAL\");\r\n      if(this.dataArr[\"ColorInvert\"] === true) {_ChromaScale = chroma.scale(\"SPECTRAL\").domain([1,0]);}\r\n      this._Colorbar = [];\r\n      for(let i = 79;i>-1;i--) {\r\n        this._Colorbar.push(_ChromaScale(i/80));\r\n      }\r\n      if(typeof(texts[0]) === \"number\") {\r\n        this.texts = [Number(_Min.toFixed(2))];\r\n        for(let i = 1;i<10;i++) {\r\n          this.texts.push(Number((_Min+(_Max-_Min)*(i/10)).toFixed(2)));\r\n        }\r\n        this.texts.push(Number(_Max.toFixed(2)));\r\n        for(let i = 0;i<this.texts.length;i++) {\r\n          if(this.texts[i]/1000000000>1) {\r\n            this.texts[i] = String(Number((this.texts[i]/1000000000).toFixed(3))).concat(\"B\");\r\n          } else if(this.texts[i]/1000000>1) {\r\n            this.texts[i] = String(Number((this.texts[i]/1000000).toFixed(3))).concat(\"M\");\r\n          } else if(this.texts[i]/1000>1) {\r\n            this.texts[i] = String(Number(((this.texts[i]/1000)).toFixed(3))).concat(\"K\");\r\n          }\r\n        }\r\n      }\r\n      if(typeof(texts[0]) === \"string\") {\r\n        if(texts.length<=12) {\r\n          for(let j = 0;j<texts.length;j++) {\r\n            _ColorKey = [];\r\n            _ColorKey.text = texts[j];\r\n            _ColorKey.color = _ChromaScale (1 - (j / texts.length));\r\n            this._Cattexts.push(_ColorKey);\r\n          }\r\n        } else {\r\n          for(let j = 0;j<this._Colorbar.length;j++) {\r\n            _ColorKey = [];\r\n            if(j === 0) {_ColorKey.text = texts[j];} else if(j === this._Colorbar.length-1) {\r\n              if(texts[texts.length-1] !== null) {_ColorKey.text = texts[texts.length-1];\r\n              } else {_ColorKey.text = texts[texts.length-2];}\r\n            } else { _ColorKey.text = null;}\r\n            _ColorKey.color = this._Colorbar[j];\r\n            this._CatNumtexts.push(_ColorKey);\r\n          }\r\n        }\r\n      }\r\n    }\r\n    if(this._ShowColorBar === false) {\r\n      this._Cattexts = undefined;\r\n      this._Colorbar = undefined;\r\n    }\r\n  }\r\n  //click building to select and  pass whole entity to dataService\r\n  public select() {\r\n    event.stopPropagation();\r\n    const viewer = this.dataService.getViewer();//this.viewer;\r\n    if(this.dataArr !== undefined) {\r\n      if(this.selectEntity !== undefined&&this.selectEntity !== null) {this.ColorSelect(this.selectEntity);}\r\n      if(viewer.selectedEntity !== undefined&&viewer.selectedEntity.polygon !== null) {\r\n        this.dataService.set_SelectedEntity(viewer.selectedEntity);\r\n        let material;\r\n        if(viewer.selectedEntity.polygon !== undefined) {\r\n          material = viewer.selectedEntity.polygon.material;\r\n          viewer.selectedEntity.polygon.material = Cesium.Color.WHITE;\r\n        }\r\n        if(viewer.selectedEntity.polyline !== undefined) {\r\n          material = viewer.selectedEntity.polyline.material;\r\n          viewer.selectedEntity.polyline.material = Cesium.Color.WHITE;\r\n        }\r\n        this.selectEntity = viewer.selectedEntity;\r\n        this.material = material;\r\n      } else {\r\n        this.dataService.set_SelectedEntity(undefined);\r\n        this.selectEntity = undefined;\r\n        this.material = undefined;\r\n      }\r\n    }\r\n  }\r\n  //if unselect the building, it will show the color before\r\n  public ColorSelect(entity) {\r\n    const promise = this.dataService.getcesiumpromise();\r\n    const _ColorKey: string = this.dataArr[\"ColorKey\"];\r\n    const _ColorMax: number = this.dataArr[\"ColorMax\"];\r\n    const _ColorMin: number = this.dataArr[\"ColorMin\"];\r\n    const _ColorText: any[] = this.dataArr[\"ColorText\"];\r\n    const _ColorInvert: boolean = this.dataArr[\"ColorInvert\"];\r\n    const _ExtrudeKey: string = this.dataArr[\"ExtrudeKey\"];\r\n    const _ExtrudeMax: number = this.dataArr[\"ExtrudeMax\"];\r\n    const _ExtrudeMin: number = this.dataArr[\"ExtrudeMin\"];\r\n    const _HeightChart: boolean = this.dataArr[\"HeightChart\"];\r\n    const _Invert: boolean = this.dataArr[\"Invert\"];\r\n    const _Scale: number = this.dataArr[\"Scale\"];\r\n    const _Filter: any[] = this.dataArr[\"Filter\"];\r\n    let _ChromaScale = chroma.scale(\"SPECTRAL\");\r\n    if(_ColorInvert === true) {_ChromaScale = chroma.scale(\"SPECTRAL\").domain([1,0]);}\r\n    let _CheckHide: boolean;\r\n    if(entity.properties[\"TYPE\"] === undefined||entity.properties[\"TYPE\"]._value !== \"STATIC\"){\r\n      if(_Filter.length !== 0) {\r\n        _CheckHide = this.Hide(_Filter,entity,_HeightChart);\r\n        if(_CheckHide === true) {\r\n          if(entity.polygon !== undefined) {\r\n            entity.polygon.extrudedHeight = 0;\r\n            entity.polygon.material = Cesium.Color.LIGHTSLATEGRAY.withAlpha(1);\r\n            if(_HeightChart === true) {\r\n              if(entity.polyline !== undefined) {entity.polyline.show = false;}\r\n            }\r\n          }\r\n          if(entity.polyline !== undefined)  {entity.polyline.material = Cesium.Color.LIGHTSLATEGRAY.withAlpha(1);}\r\n        }\r\n      }\r\n      if(_Filter.length === 0||_CheckHide === false) {\r\n        if(_ColorKey !== \"None\") {\r\n          if(typeof(_ColorText[0]) === \"number\") {\r\n            this.colorByNum(entity,_ColorMax,_ColorMin,_ColorKey,_ChromaScale);\r\n          } else {this.colorByCat(entity,_ColorText,_ColorKey,_ChromaScale);}\r\n        } else {entity.polygon.material = Cesium.Color.DARKGREY;}\r\n      }\r\n    }else {\r\n      entity.polygon.height =  entity.properties[\"HEIGHT\"];\r\n      entity.polygon.extrudedHeight = entity.properties[\"EXTRUHEIGHT\"];\r\n      const ColorValue = entity.properties[\"COLOR\"]._value;\r\n      entity.polygon.material = Cesium.Color.fromBytes(ColorValue[0], ColorValue[1], ColorValue[2], ColorValue[3]);\r\n    }\r\n  }\r\n  //check the selected building  color before\r\n  public Hide(_Filter: any[], entity, _HeightChart: boolean): boolean {\r\n    let _CheckHide: boolean=false;\r\n    for(const filter of _Filter) {\r\n      const value = entity.properties[filter.HeightHide]._value;\r\n      if(value !== undefined) {\r\n        if(typeof(value) === \"number\") {\r\n          if (this._compare(value, Number(filter.textHide), Number(filter.RelaHide))) {\r\n            _CheckHide = true;\r\n          }\r\n        } else if(typeof(value) === \"string\") {\r\n          if (this._compareCat(value,filter.CategaryHide, Number(filter.RelaHide))) {\r\n            _CheckHide = true;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return _CheckHide;\r\n  }\r\n  public _compare(value: number, slider: number, relation: number): boolean {\r\n    switch (relation) {\r\n      case 0:\r\n        return value < slider;\r\n      case 1:\r\n        return value > slider;\r\n      case 2:\r\n        return value !== slider;\r\n    }\r\n  }\r\n  public _compareCat(value: string, _Categary: string,relation: number): boolean {\r\n    switch (relation) {\r\n      case 0:\r\n        return value ===  undefined;\r\n      case 1:\r\n        return value !== _Categary;\r\n      case 2:\r\n        return value === _Categary;\r\n    }\r\n  }\r\n  public colorByNum(entity, max: number, min: number, _ColorKey: string, _ChromaScale: any) {\r\n    if(entity.properties[_ColorKey] !== undefined) {\r\n      const texts = entity.properties[_ColorKey]._value;\r\n      const rgb = _ChromaScale(Number(((max-texts)/(max-min)).toFixed(2)))._rgb;\r\n      if(entity.polygon !== undefined) {entity.polygon.material = Cesium.Color.fromBytes(rgb[0],rgb[1],rgb[2]);}\r\n      if(entity.polyline !== undefined) {\r\n        const newColor = new Cesium.Color.fromBytes(rgb[0],rgb[1],rgb[2]);\r\n        entity.polyline.material.color.setValue(newColor);\r\n      }\r\n      if(entity.point !==undefined){\r\n        const newColor = new Cesium.Color.fromBytes(rgb[0],rgb[1],rgb[2]);\r\n        entity.point.color = newColor;\r\n      }\r\n    }else{\r\n      if(entity.polygon !== undefined) {entity.polygon.material = Cesium.Color.LIGHTSLATEGRAY.withAlpha(1);}\r\n      if(entity.polyline !== undefined) {entity.polyline.material = Cesium.Color.LIGHTSLATEGRAY.withAlpha(1);}\r\n      if(entity.point !== undefined) {entity.point.color = Cesium.Color.LIGHTSLATEGRAY.withAlpha(1);}\r\n    }\r\n  }\r\n\r\n  public  colorByCat(entity, _ColorText: any[], _ColorKey: string, _ChromaScale: any) {\r\n    if(entity.properties[_ColorKey] !== undefined) {\r\n      let initial: boolean = false;\r\n      for(let j = 0;j<_ColorText.length; j++) {\r\n        if(entity.properties[_ColorKey]._value === _ColorText[j]) {\r\n          const rgb = _ChromaScale(1 - (j / _ColorText.length)); \r\n          if(entity.polygon !== undefined){entity.polygon.material = Cesium.Color.fromBytes(rgb._rgb[0],rgb._rgb[1],rgb._rgb[2]);}\r\n          if(entity.polyline !== undefined) {\r\n            const newColor = new Cesium.Color.fromBytes(rgb[0],rgb[1],rgb[2]);\r\n            entity.polyline.material.color.setValue(newColor);\r\n          }\r\n          if(entity.point !== undefined) {\r\n            const newColor = new Cesium.Color.fromBytes(rgb[0],rgb[1],rgb[2]);\r\n            entity.point.color = newColor;\r\n          }\r\n          initial = true;\r\n        }\r\n      }\r\n      if(initial === false) {\r\n        if(entity.polygon !== undefined){entity.polygon.material = Cesium.Color.LIGHTSLATEGRAY.withAlpha(1);}\r\n        if(entity.polyline !== undefined) {entity.polyline.material = Cesium.Color.LIGHTSLATEGRAY.withAlpha(1);}\r\n        if(entity.point !== undefined) {entity.point.color = Cesium.Color.LIGHTSLATEGRAY.withAlpha(1);}\r\n      }\r\n    }else{\r\n      if(entity.polygon !== undefined) {entity.polygon.material = Cesium.Color.LIGHTSLATEGRAY.withAlpha(1);}\r\n      if(entity.polyline !== undefined) {entity.polyline.material = Cesium.Color.LIGHTSLATEGRAY.withAlpha(1);}\r\n      if(entity.point !== undefined) {entity.point.color = Cesium.Color.LIGHTSLATEGRAY.withAlpha(1);}\r\n    }\r\n  }\r\n  //in viewer mode,set some attibutes to show\r\n  public showAttribs(event) {\r\n    const viewer = this.dataService.getViewer()\r\n    if(this.data !== undefined && this.mode === \"viewer\") {\r\n      if(this.data[\"cesium\"] !== undefined) {\r\n        if(this.data[\"cesium\"].select !== undefined) {\r\n          if(viewer.selectedEntity !== undefined) {\r\n            const pickup = viewer.scene.pick(new Cesium.Cartesian2(event.clientX,event.clientY));\r\n            this.pickupArrs = [];\r\n            this.pickupArrs.push({name:\"ID\",data:pickup.id.id});\r\n            for(const _propertyName of this.data[\"cesium\"].select) {\r\n              this.pickupArrs.push({name:_propertyName,data:\r\n                                    this.dataService.get_SelectedEntity().properties[_propertyName]._value});\r\n            }\r\n            const nameOverlay = document.getElementById(\"cesium-infoBox-defaultTable\");\r\n            viewer.container.appendChild(nameOverlay);\r\n            nameOverlay.style.bottom = viewer.canvas.clientHeight - event.clientY + \"px\";\r\n            nameOverlay.style.left = event.clientX + \"px\";\r\n            nameOverlay.style.display= \"block\";\r\n          } else {\r\n            document.getElementById(\"cesium-infoBox-defaultTable\").style.display= \"none\";\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n    // save the geojson\r\n  save_geojson(): void{\r\n    let fileString = JSON.stringify(this.data);\r\n    let blob = new Blob([fileString], {type: 'application/json'});\r\n    FileUtils.downloadContent(blob, \"output.geojson\");\r\n  }\r\n}\r\n\r\n//download geojson\r\nabstract class FileUtils{\r\n  public static downloadContent(blob, filename) {\r\n    if (window.navigator.msSaveOrOpenBlob) {\r\n      window.navigator.msSaveOrOpenBlob(blob, filename);\r\n    } else {\r\n        const a = document.createElement('a');\r\n        document.body.appendChild(a);\r\n        const url = window.URL.createObjectURL(blob);\r\n        a.href = url;\r\n        a.download = filename;\r\n        a.click();\r\n        setTimeout(() => {\r\n          window.URL.revokeObjectURL(url);\r\n          document.body.removeChild(a);\r\n        }, 0)\r\n    }\r\n  }\r\n}","import { Component, Input } from '@angular/core';\r\nimport { gsConstructor } from '@modules';\r\n\r\n@Component({\r\n  selector: 'text-viewer',\r\n  template: `<br><div>{{ output || \"no-value\" }}</div>`,\r\n  styles: []\r\n})\r\nexport class TextViewerComponent{\r\n    @Input() node; \r\n    output : string;\r\n\r\n    constructor(){ \r\n      console.log(`Text Viewer Created`); \r\n    }\r\n\r\n   ngOnInit() {\r\n    if (! this.node) {\r\n      this.output = \"no-value\";\r\n    } else if (typeof this.node.output.value === 'number' || this.node.output.value === undefined){\r\n      this.output = this.node.output.value;\r\n    } else if (typeof this.node.output.value === 'string'){\r\n      this.output = '\"' + this.node.output.value + '\"';\r\n    } else if (this.node.output.value.constructor === [].constructor){\r\n      this.output = JSON.stringify(this.node.output.value);\r\n    } else if (this.node.output.value.constructor === {}.constructor) {\r\n      this.output = JSON.stringify(this.node.output.value);\r\n    } else if (this.node.output.value.constructor === gsConstructor) {\r\n      this.output = this.node.output.value.toJSON();\r\n    } else {\r\n    console.log('Unknown output type:', this.node.output.value);\r\n      this.output = this.node.output.value;\r\n    }\r\n  \r\n\t}\r\n\r\n\r\n\tngDoCheck(){\r\n    if (! this.node) {\r\n      this.output = \"no-value\";\r\n    } else if (typeof this.node.output.value === 'number' || this.node.output.value === undefined){\r\n      this.output = this.node.output.value;\r\n    } else if (typeof this.node.output.value === 'string'){\r\n      this.output = '\"' + this.node.output.value + '\"';\r\n    } else if (this.node.output.value.constructor === [].constructor){\r\n      this.output = JSON.stringify(this.node.output.value);\r\n    } else if (this.node.output.value.constructor === {}.constructor) {\r\n      this.output = JSON.stringify(this.node.output.value);\r\n    } else if (this.node.output.value.constructor === gsConstructor) {\r\n      this.output = JSON.stringify(this.node.output.value.toJSON());\r\n    } else {\r\n    console.log('Unknown output type:', this.node.output.value);\r\n      this.output = this.node.output.value;\r\n    }\r\n\t}\r\n\r\n\r\n\r\n}","module.exports = \"<!--the main line-->\\r\\n<svg:polyline \\r\\nid=\\\"main-edge\\\" \\r\\nclass = \\\"edge\\\" \\r\\n[class.selected] = \\\"edge.selected\\\"\\r\\n[attr.points] = \\\"(edge.source.parentNode.position.x + outputOffset[0]) + ',' +\\r\\n                    (edge.source.parentNode.position.y + outputOffset[1]+ 9) + ' ' +\\r\\n\\r\\n                    (edge.source.parentNode.position.x + outputOffset[0]) + ',' +\\r\\n                    (edge.source.parentNode.position.y + outputOffset[1] + 17) + ' ' +\\r\\n\\r\\n                    (edge.target.parentNode.position.x + inputOffset[0]) + ',' +\\r\\n                    (edge.target.parentNode.position.y + inputOffset[1] - 29) + ' ' +\\r\\n\\r\\n                    (edge.target.parentNode.position.x + inputOffset[0]) + ',' +\\r\\n                    (edge.target.parentNode.position.y + inputOffset[1] - 24)\\\" \\r\\n/>\\r\\n\\r\\n<!--a wider invisible line to make the wire easier to click-->\\r\\n<svg:polyline \\r\\nid=\\\"invisible-edge\\\" \\r\\nclass = \\\"inviEdge\\\" \\r\\n[attr.points] = \\\"(edge.source.parentNode.position.x + outputOffset[0]) + ',' +\\r\\n                    (edge.source.parentNode.position.y + outputOffset[1]+ 15) + ' ' +\\r\\n\\r\\n                    (edge.source.parentNode.position.x + outputOffset[0]) + ',' +\\r\\n                    (edge.source.parentNode.position.y + outputOffset[1] + 17) + ' ' +\\r\\n\\r\\n                    (edge.target.parentNode.position.x + inputOffset[0]) + ',' +\\r\\n                    (edge.target.parentNode.position.y + inputOffset[1] - 29) + ' ' +\\r\\n\\r\\n                    (edge.target.parentNode.position.x + inputOffset[0]) + ',' +\\r\\n                    (edge.target.parentNode.position.y + inputOffset[1] - 10)\\\" \\r\\n(click)='select($event)'/>\\r\\n    \\r\\n\\r\\n\"","import {Component, OnInit, Input, ViewChild, ElementRef, DoCheck, Output, EventEmitter } from '@angular/core';\r\nimport { IEdge } from '@models/edge';\r\n\r\n@Component({\r\n  selector: '[edge]',\r\n  templateUrl: './edge.component.html',\r\n  styles: [`\r\n    .edge{\r\n        fill: none;\r\n        stroke: rgb(80, 80, 80);\r\n        stroke-linecap: round;\r\n        stroke-linejoin: round;\r\n        stroke-width: 2px;\r\n        opacity: 1;\r\n        pointer-events: stroke;\r\n        marker-end: url(#arrow);\r\n    }  \r\n    .inviEdge{\r\n        fill: none;\r\n        stroke: gray;\r\n        stroke-width: 30px;\r\n        opacity: 0;\r\n        pointer-events: stroke;\r\n    }  \r\n    .selected{\r\n        stroke: rgb(0, 0, 150);\r\n        opacity: 1;\r\n        marker-end: url(#arrow_selected);\r\n\r\n    }\r\n  `]\r\n})\r\nexport class EdgeComponent{\r\n\r\n    @ViewChild('canvas') canvas: ElementRef;\r\n    @Input() edge: IEdge;\r\n    @Input() inputOffset;\r\n    @Input() outputOffset;\r\n\r\n    @Output() delete = new EventEmitter();\r\n    @Output() selected = new EventEmitter();\r\n\r\n    // select a wire\r\n    select(event){\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n        if(this.edge.selected){\r\n            this.selected.emit(event.ctrlKey);        \r\n        } else {\r\n            if (event.ctrlKey) this.selected.emit('ctrl');\r\n            else this.selected.emit('single');\r\n        }\r\n    }\r\n\r\n    // delete a wire\r\n    deleteEdge(){ \r\n        this.delete.emit()\r\n    }\r\n\r\n    ngOnInit() {\r\n    }\r\n\r\n}\r\n","module.exports = \"<div id = 'flowchart-main-container' class='container'>\\r\\n\\r\\n      <!-- svg component -->\\r\\n      <svg id=\\\"svg-canvas\\\" class = \\\"svgCanvas\\\" viewBox=\\\"0 0 1500 1500\\\" \\r\\n      (mousedown)='panStart($event)'\\r\\n      (mousemove)='handleMouseMove($event)'  \\r\\n      (mouseup)='handleMouseUp($event)'\\r\\n      (mouseenter)='activateKeyEvent()'\\r\\n      (mouseleave)='deactivateKeyEvent()'\\r\\n      (wheel)='scale($event)'\\r\\n      >\\r\\n            <!-- definitions for svg: grid patterns, arrow head for connecting wire-->\\r\\n            <defs>\\r\\n                  <!-- grid pattern -->\\r\\n                  <pattern id=\\\"smallGrid\\\" width=\\\"20\\\" height=\\\"20\\\" patternUnits=\\\"userSpaceOnUse\\\">\\r\\n                    <path d=\\\"M 20 0 L 0 0 0 20\\\" fill=\\\"none\\\" stroke=\\\"gray\\\" stroke-width=\\\"0.5\\\"/>\\r\\n                  </pattern>\\r\\n                  <pattern id=\\\"grid\\\" width=\\\"100\\\" height=\\\"100\\\" patternUnits=\\\"userSpaceOnUse\\\">\\r\\n                    <rect width=\\\"100\\\" height=\\\"100\\\" fill=\\\"url(#smallGrid)\\\"/>\\r\\n                    <path d=\\\"M 100 0 L 0 0 0 100\\\" fill=\\\"none\\\" stroke=\\\"gray\\\" stroke-width=\\\"1\\\"/>\\r\\n                  </pattern>\\r\\n\\r\\n                  <!-- arrow head -->\\r\\n                  <marker id=\\\"arrow\\\" markerWidth=\\\"30\\\" markerHeight=\\\"30\\\" refX=\\\"0\\\" refY=\\\"4\\\" orient=\\\"auto\\\" markerUnits=\\\"strokeWidth\\\" viewBox=\\\"0 0 40 40\\\">\\r\\n                    <path d=\\\"M0,0 L0,8 L9,4 z\\\" stroke=\\\"rgb(80, 80, 80)\\\" fill=\\\"transparent\\\" />\\r\\n                  </marker>\\r\\n                  <marker id=\\\"arrow_selected\\\" markerWidth=\\\"30\\\" markerHeight=\\\"30\\\" refX=\\\"0\\\" refY=\\\"4\\\" orient=\\\"auto\\\" markerUnits=\\\"strokeWidth\\\" viewBox=\\\"0 0 40 40\\\">\\r\\n                        <path d=\\\"M0,0 L0,8 L9,4 z\\\" stroke=\\\"rgb(0, 0, 150)\\\" fill=\\\"transparent\\\"  />\\r\\n                  </marker>\\r\\n            </defs>\\r\\n\\r\\n            <!-- svg frame-->\\r\\n            <rect width=\\\"100%\\\" height=\\\"100%\\\" fill=\\\"url(#grid)\\\" />\\r\\n                          \\r\\n\\r\\n            <!-- wires => edge.component -->\\r\\n            <g edge *ngFor=\\\"let edge of data.edges; let edge_index = index\\\" \\r\\n            [edge]='edge'\\r\\n            [inputOffset]='inputOffset'\\r\\n            [outputOffset]='outputOffset'\\r\\n            (selected)='selectEdge($event, edge_index)'\\r\\n            />\\r\\n\\r\\n            <!-- temporary wire while dragging port, default position to <(0,0),(0,0)>, modified when a port is being dragged -->\\r\\n            <line id=\\\"temporary-wire\\\" class=\\\"temp-wire\\\" x1=\\\"0\\\" y1='0' x2='0' y2='0'></line>\\r\\n\\r\\n            <!-- nodes => node.component -->\\r\\n            <g node *ngFor=\\\"let node of data.nodes; let node_index = index\\\" \\r\\n            id='flw_node_{{node_index}}'\\r\\n            [node]='node' \\r\\n            [selected]='isSelected(node_index)'\\r\\n            [inputOffset]='inputOffset'\\r\\n            [outputOffset]='outputOffset'\\r\\n            (action)='nodeAction($event, node_index)'\\r\\n            />\\r\\n      </svg>\\r\\n\\r\\n      <!-- 3 top left buttons of the svg: add Node, delete Node and delete Wire -->\\r\\n      <div class='button-row'>\\r\\n            <button mat-icon-button disableRipple='true' (click)='addNode()' title=\\\"Add Node\\\">\\r\\n            <mat-icon>add</mat-icon>\\r\\n            </button>\\r\\n            <button mat-icon-button disableRipple='true' (click)='deleteSelectedNodes()' title=\\\"Delete Selected Node\\\">\\r\\n            <mat-icon>remove</mat-icon>\\r\\n            </button>\\r\\n            <button mat-icon-button disableRipple='true' (click)='deleteSelectedEdges()' title=\\\"Delete Selected Wires\\\">\\r\\n            <mat-icon>link_off</mat-icon>\\r\\n            </button>\\r\\n      </div>\\r\\n\\r\\n      <!-- focus on flowchart button on the top right of the svg -->\\r\\n      <button class='resetViewer-button' mat-icon-button disableRipple='true' (click)='focusFlowchart()' title=\\\"Zoom to Fit\\\">\\r\\n            <mat-icon>control_camera</mat-icon>\\r\\n      </button>\\r\\n      \\r\\n\\r\\n</div>\\r\\n\\r\\n\\r\\n\\r\\n\"","module.exports = \".reset {\\n  margin: 0px;\\n  padding: 0px; }\\n\\n.default {\\n  font-size: 12px;\\n  color: #8AA8C0;\\n  line-height: 150px;\\n  text-align: center; }\\n\\n.viewer {\\n  /* \\twidth: 100%; \\r\\noverflow: auto;\\r\\n\\r\\npadding: 0px;\\r\\nmargin: 0px;\\r\\n\\r\\n.header{\\r\\n\\r\\n\\tdisplay: flex; \\r\\n\\tflex-direction: row; \\r\\n\\tjustify-content: space-between;\\r\\n\\r\\n\\tposition: relative;\\r\\n\\tfont-size: 14px; \\r\\n\\tfont-weight: 600; \\r\\n\\tline-height: $header-height;\\r\\n\\ttext-transform: uppercase;\\r\\n\\tletter-spacing: 1.5px;\\r\\n\\theight: $header-height;\\r\\n\\r\\n\\tcolor: #ADADAD;\\r\\n\\r\\n\\t.btn-group{\\r\\n\\t\\theight: $header-height; \\r\\n\\r\\n\\t\\tbutton{\\r\\n\\t\\t\\twidth: 0.9*$header-height; \\r\\n\\t\\t\\theight: 0.9*$header-height; \\r\\n\\t\\t\\tmargin: 0px;\\r\\n\\t\\t\\tborder: 1px solid #B4B1B1;\\r\\n\\t\\t\\tbox-shadow: none;\\r\\n\\r\\n\\t\\t\\t&:focus{\\r\\n\\t\\t\\t\\t\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\t\\r\\n\\t}\\r\\n\\r\\n}\\r\\n\\r\\n.container{\\r\\n}\\r\\n\\r\\nbutton{\\r\\n\\t&:focus{\\r\\n\\t\\t\\r\\n\\t}\\r\\n} */ }\\n\\n.viewer .container {\\n    display: flex;\\n    flex-direction: row;\\n    height: 100%; }\\n\\n.viewer .container .sidebar {\\n      z-index: 100; }\\n\\n.viewer .container .view-container {\\n      box-sizing: border-box;\\n      height: 100%;\\n      width: 100%;\\n      padding-bottom: 30px;\\n      overflow: auto; }\\n\\n.container {\\n  position: relative;\\n  width: 100%;\\n  height: 100%;\\n  overflow: hidden; }\\n\\n.container .svgCanvas .temp-wire {\\n    stroke: #505050;\\n    stroke-width: 2px;\\n    stroke-dasharray: 10 15;\\n    opacity: 0.5; }\\n\\n.transform--container {\\n  position: absolute;\\n  width: 100%;\\n  transition: -webkit-transform 0.1s;\\n  transition: transform 0.1s;\\n  transition: transform 0.1s, -webkit-transform 0.1s; }\\n\\nsplit-area {\\n  overflow: auto !important; }\\n\\ninput {\\n  border: none; }\\n\\ninput:focus {\\n  border-bottom: 1px dashed gray; }\\n\\n#flowchart__name {\\n  margin: 0 auto;\\n  font-size: 14px;\\n  line-height: 28px;\\n  font-weight: bold;\\n  color: #8AA8C0; }\\n\\n.button-row {\\n  position: absolute;\\n  top: 0px;\\n  left: 10px; }\\n\\n.button-row button {\\n    color: #505050;\\n    width: 28px; }\\n\\n.resetViewer-button {\\n  position: absolute;\\n  top: 0px;\\n  right: 0px;\\n  color: #505050; }\\n\\n.viewer {\\n  position: relative;\\n  height: 100%;\\n  width: 100%;\\n  display: flex;\\n  flex-direction: column;\\n  background-image: repeating-linear-gradient(0deg, transparent, transparent 70px, #F1F1F1 70px, #F1F1F1 71px), repeating-linear-gradient(-90deg, transparent, transparent 70px, #F1F1F1 70px, #F1F1F1 71px);\\n  background-size: 71px 71px;\\n  background-color: white;\\n  box-sizing: border-box;\\n  height: 100%;\\n  width: 100%;\\n  padding-bottom: 30px; }\\n\\n.viewer .container {\\n    position: absolute;\\n    height: 100%;\\n    overflow: hidden; }\\n\\n.viewer .container .disabled {\\n      color: #8AA8C0; }\\n\\n.viewer .container .disabled:hover {\\n        color: #8AA8C0 !important; }\\n\\n.viewer .container .sidebar {\\n      font-size: 12px;\\n      background-color: #F1F1F1;\\n      color: #395D73;\\n      white-space: nowrap;\\n      overflow-x: hidden !important; }\\n\\n.viewer .container .sidebar section {\\n        padding-left: 15px;\\n        padding-bottom: 5px;\\n        padding-top: 5px;\\n        border-bottom: 1px solid #8AA8C0; }\\n\\n.viewer .container .sidebar section div {\\n          cursor: pointer; }\\n\\n.viewer .container .sidebar section div:hover {\\n            color: #F0BFA0; }\\n\\n.viewer .content-wrapper {\\n    position: relative;\\n    height: 100%;\\n    width: 100%;\\n    -webkit-transform-origin: top left;\\n            transform-origin: top left; }\\n\\n.viewer .info-container {\\n    padding: 0px 30px;\\n    display: flex;\\n    flex-direction: row;\\n    justify-content: space-between; }\\n\\n.viewer .info-container .info {\\n      display: flex;\\n      flex-direction: column; }\\n\\n.viewer .info-container .info .label {\\n        font-size: 12px;\\n        font-weight: 100;\\n        color: #F07A79; }\\n\\n.viewer .info-container .info .value {\\n        color: #395D73;\\n        font-size: 11px;\\n        font-weight: 600; }\\n\\n.viewer .info-container .info .action {\\n        cursor: pointer;\\n        font-size: 11px;\\n        color: #8AA8C0; }\\n\\n.viewer .graph-container {\\n    position: absolute;\\n    height: 100%;\\n    width: 100%;\\n    -webkit-transform-origin: top left;\\n            transform-origin: top left; }\\n\\n.viewer .graph-container #graph-edges {\\n      background-color: transparent;\\n      z-index: 1000; }\\n\\n.viewer .graph-container #graph-edges #temporary-edge .hidden {\\n        display: none; }\\n\\n.viewer .graph-container #graph-nodes {\\n      background-color: transparent;\\n      overflow: hidden;\\n      z-index: 1000; }\\n\\n.viewer .info-container {\\n    position: absolute;\\n    right: 0;\\n    bottom: 0; }\\n\\n.viewer .info-container .label, .viewer .info-container .value {\\n      margin-right: 5px;\\n      font-weight: normal !important; }\\n\\n.viewer .node-container {\\n    position: relative; }\\n\\n.viewer .node-container .node {\\n      position: absolute;\\n      -webkit-transform-origin: top left;\\n              transform-origin: top left;\\n      z-index: 3;\\n      margin: 0px;\\n      color: #395D73; }\\n\\n.viewer .node-container .node.hidden {\\n        display: none; }\\n\\n.viewer .node-container .node .btn-container {\\n        position: absolute;\\n        right: -30px;\\n        display: flex;\\n        flex-direction: column;\\n        justify-content: space-between;\\n        height: 100px; }\\n\\n.viewer .node-container .node .btn-container .btn-group {\\n          position: relative;\\n          display: flex;\\n          flex-direction: column;\\n          justify-content: center;\\n          background: none; }\\n\\n.viewer .node-container .node .btn-container .btn-group .action-button {\\n            position: relative;\\n            width: 25px;\\n            height: 24px;\\n            cursor: pointer;\\n            font-size: 9px;\\n            text-align: center; }\\n\\n.viewer .node-container .node .btn-container .btn-group .action-button .material-icons {\\n              font-size: 18px;\\n              line-height: 24px;\\n              color: #8AA8C0; }\\n\\n.viewer .node-container .node .btn-container .btn-group .action-button:hover {\\n              color: white; }\\n\\n.viewer .node-container .node .btn-container .btn-group .action-button:hover .mat-icon {\\n                color: #F0BFA0; }\\n\\n.viewer .node-container .node .node-body {\\n        display: flex;\\n        flex-direction: column;\\n        justify-content: center;\\n        position: relative;\\n        min-height: 30px;\\n        min-width: 70px;\\n        width: auto;\\n        border: 1px solid #395D73;\\n        background-color: rgba(255, 255, 255, 0.7);\\n        cursor: move; }\\n\\n.viewer .node-container .node .node-body.disabled {\\n          opacity: 0.4; }\\n\\n.viewer .node-container .node .node-body.selected {\\n          border-color: green; }\\n\\n.viewer .node-container .node .node-body.library {\\n          border-color: #395D73;\\n          border-style: solid; }\\n\\n.viewer .node-container .node .node-body.error {\\n          background-color: #E94858; }\\n\\n.viewer .node-container .node .node-body.function {\\n          background-color: yellow;\\n          border: 1px dashed green; }\\n\\n.viewer .node-container .node .node-body .node-name {\\n          font-family: sans-serif;\\n          font-size: 12px;\\n          border-bottom: 1px solid #395D73;\\n          text-align: center;\\n          background-color: #F1F1F1; }\\n\\n.viewer .node-container .node .node-body .node-name input {\\n            background-color: inherit;\\n            border: 0px;\\n            color: #395D73;\\n            text-align: center; }\\n\\n.viewer .node-container .node .node-body .node-name.selected {\\n            background-color: #8AA8C0; }\\n\\n.viewer .node-container .node .node-body .node-name.selected input {\\n              color: white;\\n              font-weight: bold; }\\n\\n.viewer .node-container .node .node-body .node-name.selected input:focus {\\n                color: #395D73;\\n                background-color: #F0BFA0; }\\n\\n.viewer .node-container .node .node-body .port-container {\\n          display: flex;\\n          flex-direction: column;\\n          margin-top: 10px;\\n          margin-bottom: 10px; }\\n\\n.viewer .node-container .node .node-body .port-container .divider {\\n            height: 2px;\\n            width: 100%;\\n            background-color: #8AA8C0; }\\n\\n.viewer .node-container .node .node-body .port-container .port {\\n            display: flex;\\n            flex-direction: row;\\n            margin: 5px 0px; }\\n\\n.viewer .node-container .node .node-body .port-container .port.hidden {\\n              display: none; }\\n\\n.viewer .node-container .node .node-body .port-container .port .port-grip {\\n              width: 15px;\\n              height: 15px;\\n              border-radius: 50%;\\n              background-color: #F1F1F1;\\n              border: 1px solid #395D73;\\n              cursor: pointer; }\\n\\n.viewer .node-container .node .node-body .port-container .port .port-grip.isFunction {\\n                border-style: dashed;\\n                background-color: gray;\\n                border-radius: 0px; }\\n\\n.viewer .node-container .node .node-body .port-container .port .port-grip.selected {\\n                border: 2px solid #8AA8C0;\\n                background-color: #F0BFA0; }\\n\\n.viewer .node-container .node .node-body .port-container .port .port-grip:hover {\\n                background-color: #F0BFA0; }\\n\\n.viewer .node-container .node .node-body .port-container .port .port-name {\\n              font-size: 12px;\\n              margin: 0px 5px; }\\n\\n.viewer .node-container .node .node-body .port-container .port .port-name.isFunction {\\n                color: black;\\n                font-size: 9.6px; }\\n\\n.viewer .node-container .node .node-body .port-container .port.input {\\n              justify-content: flex-start;\\n              margin-left: -7.5px; }\\n\\n.viewer .node-container .node .node-body .port-container .port.output {\\n              justify-content: flex-end;\\n              margin-right: -7.5px; }\\n\\n.viewer .node-container .node:active {\\n        cursor: none; }\\n\"","import { Component, Input, Output, EventEmitter } from '@angular/core';\r\nimport { NgClass } from '@angular/common';\r\n\r\n// todo: make internal to flowchart\r\nimport { IFlowchart } from '@models/flowchart';\r\nimport { NodeUtils, INode } from '@models/node';\r\nimport { IEdge } from '@models/edge';\r\n\r\nimport { ACTIONS } from './node/node.actions';\r\nimport * as circularJSON from 'circular-json';\r\nimport { fromEvent, Observable, Subscriber  } from 'rxjs';\r\n\r\ndeclare const InstallTrigger: any;\r\n\r\n@Component({\r\n  selector: 'flowchart',\r\n  templateUrl: './flowchart.component.html',\r\n  styleUrls: ['./flowchart.component.scss']\r\n})\r\nexport class FlowchartComponent{\r\n\r\n  @Input() data: IFlowchart;\r\n  @Output() switch = new EventEmitter(); \r\n\r\n  // general variable for mouse events\r\n  private isDown: number;\r\n  private startCoords = [];\r\n  private canvas: any\r\n  private element: any;\r\n\r\n  // variable for flowchart zooming\r\n  private mousePos =[0,0];\r\n  private zoom: number = 1;\r\n\r\n  // variable for edge\r\n  private edge: IEdge  = { source: undefined, target: undefined, selected: false };\r\n  private selectedEdge = [];\r\n  private startType: string;\r\n\r\n  // variable for copied node\r\n  private copied: string;\r\n  private copySub: any;\r\n  private pasteSub: any;\r\n  private keydownSub: any;\r\n\r\n  // listener for events, only activated when the mouse is hovering over the svg component\r\n  private keydownListener = fromEvent(document, 'keydown');\r\n  private copyListener = fromEvent(document, 'copy');\r\n  private pasteListener = fromEvent(document, 'paste');\r\n\r\n  // position of the current canvas view relative to the full svg canvas\r\n  private offset;\r\n  \r\n  // constants for offset positions of input/output port relative to the node's position\r\n  inputOffset = [50, -8];\r\n  outputOffset = [50, 88];\r\n\r\n  ngOnInit(){ \r\n    this.canvas = <HTMLElement>document.getElementById(\"svg-canvas\");\r\n    let bRect = <DOMRect>this.canvas.getBoundingClientRect();\r\n    this.offset = [bRect.left, bRect.top]\r\n  }\r\n\r\n  /*\r\n  handle event received from node component\r\n  */\r\n  nodeAction(event, node_index): void{\r\n\r\n    switch(event.action){\r\n\r\n      // switch the viewchild of the appModule to the node's procedure view when double-click on the node\r\n      case ACTIONS.PROCEDURE:\r\n        this.switch.emit(\"editor\");\r\n        this.deactivateKeyEvent();\r\n        break;\r\n\r\n      // select a node\r\n      case ACTIONS.SELECT:\r\n        this.data.meta.selected_nodes = [ node_index ];  \r\n        break;\r\n\r\n      // initiate dragging node\r\n      case ACTIONS.DRAGNODE:\r\n        this.element = this.data.nodes[node_index];\r\n        var pt = this.canvas.createSVGPoint();\r\n\r\n        // get current mouse position in the page\r\n        pt.x = event.data.pageX;\r\n        pt.y = event.data.pageY;\r\n\r\n        // convert mouse position to svg position (special procedure for firefox)\r\n        let svgP: any;\r\n        var isFirefox = typeof InstallTrigger !== 'undefined';\r\n        if (isFirefox){\r\n          let ctm = this.canvas.getScreenCTM()\r\n          let bRect = this.canvas.getBoundingClientRect()\r\n          ctm.a = ctm.a * this.zoom\r\n          ctm.d = ctm.d * this.zoom\r\n          ctm.e = bRect.x\r\n          ctm.f = bRect.y\r\n          svgP = pt.matrixTransform(ctm.inverse());\r\n        } else {\r\n          svgP = pt.matrixTransform(this.canvas.getScreenCTM().inverse());\r\n        }\r\n  \r\n        // save the svg position as startCoords\r\n        this.startCoords = [\r\n          svgP.x,\r\n          svgP.y\r\n        ];\r\n        if (this.startCoords[0] == NaN){\r\n          this.startCoords = [0,0];\r\n        }\r\n\r\n        // mark the dragging mode as dragNode\r\n        this.isDown = 2;\r\n        break;\r\n\r\n      // initiate dragging input/output port\r\n      case ACTIONS.DRAGPORT:\r\n        // create a new edge\r\n        this.edge = <IEdge>{source: undefined, target: undefined, selected: false};\r\n\r\n        // assign the port to the edge's input/output accordingly\r\n        if (event.type == 'input'){\r\n          this.edge.target = event.data;\r\n        } else {\r\n          this.edge.source = event.data;\r\n        }\r\n        this.startType = event.type;\r\n\r\n        // modify the temporary-edge's coordinate\r\n        this.element = <HTMLElement>document.getElementById(\"temporary-wire\");\r\n        this.element.setAttribute('x1', event.position[0]);\r\n        this.element.setAttribute('y1', event.position[1]);\r\n        this.element.setAttribute('x2', event.position[0]);\r\n        this.element.setAttribute('y2', event.position[1]);\r\n        this.isDown = 3;\r\n        break;\r\n    }\r\n  }\r\n\r\n  // check if the node at node_index is selected \r\n  isSelected(node_index: number): boolean{\r\n    return this.data.meta.selected_nodes.indexOf(node_index) > -1;\r\n  }\r\n\r\n  // add a new node\r\n  addNode(): void{  \r\n\r\n    // create a new node\r\n    var newNode = NodeUtils.getNewNode();\r\n\r\n    // the new node's position would be (20,100) relative to the current view\r\n    var pt = this.canvas.createSVGPoint();\r\n\r\n    pt.x = 20;\r\n    pt.y = 100;\r\n\r\n    // convert the position to svg position\r\n    let svgP: any;\r\n    var isFirefox = typeof InstallTrigger !== 'undefined';\r\n    if (isFirefox){\r\n      let ctm = this.canvas.getScreenCTM()\r\n      let bRect = this.canvas.getBoundingClientRect()\r\n      ctm.a = ctm.a * this.zoom\r\n      ctm.d = ctm.d * this.zoom\r\n      ctm.e = bRect.x\r\n      ctm.f = bRect.y\r\n      svgP = pt.matrixTransform(ctm.inverse());\r\n    } else {\r\n      svgP = pt.matrixTransform(this.canvas.getScreenCTM().inverse());\r\n    }\r\n\r\n    // assign the position to the new node and add it to the flowchart\r\n    newNode.position.x = svgP.x\r\n    newNode.position.y = svgP.y\r\n    this.data.nodes.push(newNode); \r\n  }\r\n\r\n  // activate event listener for copy (ctrl+c), paste (ctrl+v), delete (Delete) when mouse hover over the svg component\r\n  activateKeyEvent(): void{\r\n\r\n    // copy: copy node\r\n    this.copySub = this.copyListener.subscribe(val => {\r\n      const node = this.data.nodes[this.data.meta.selected_nodes[0]];\r\n      if (node.type != 'start' && node.type != 'end'){\r\n        console.log('copied node:', node);\r\n        let cp = circularJSON.parse(circularJSON.stringify(node));\r\n        this.copied = circularJSON.stringify(cp);\r\n      }\r\n    })\r\n\r\n    // paste: paste copied node\r\n    this.pasteSub = this.pasteListener.subscribe(val =>{\r\n      if (this.copied){\r\n        event.preventDefault();\r\n        let newNode = <INode>circularJSON.parse(this.copied);\r\n        var pt = this.canvas.createSVGPoint();\r\n        pt.x = 20;\r\n        pt.y = 100;\r\n\r\n        let svgP: any;\r\n        var isFirefox = typeof InstallTrigger !== 'undefined';\r\n        if (isFirefox){\r\n          let ctm = this.canvas.getScreenCTM()\r\n          let bRect = this.canvas.getBoundingClientRect()\r\n          ctm.a = ctm.a * this.zoom\r\n          ctm.d = ctm.d * this.zoom\r\n          ctm.e = bRect.x\r\n          ctm.f = bRect.y\r\n          svgP = pt.matrixTransform(ctm.inverse());\r\n        } else {\r\n          svgP = pt.matrixTransform(this.canvas.getScreenCTM().inverse());\r\n        }\r\n\r\n        NodeUtils.updateNode(newNode, svgP);\r\n        this.data.nodes.push(newNode);\r\n        console.log('pasting node:', newNode);\r\n      }\r\n    })\r\n\r\n    // delete: delete selected edge(s)\r\n    this.keydownSub = this.keydownListener.subscribe(val =>{\r\n      if ((<KeyboardEvent> val).key == 'Delete'){\r\n        this.deleteSelectedEdges();\r\n      }\r\n    })\r\n  }\r\n\r\n  // deactivate the event listeners when the mouse exit the svg component\r\n  deactivateKeyEvent(): void{\r\n    this.copySub.unsubscribe();\r\n    this.pasteSub.unsubscribe();\r\n    this.keydownSub.unsubscribe();\r\n  }\r\n\r\n  // delete selected node\r\n  deleteSelectedNodes(){\r\n\r\n    // for each of the selected node\r\n    while (this.data.meta.selected_nodes.length > 0){\r\n      let node_index = this.data.meta.selected_nodes.pop();\r\n      let node = this.data.nodes[node_index];\r\n\r\n      // continue if the node is a start/end node\r\n      if (node.type == \"start\" || node.type == \"end\") continue;\r\n      var edge_index = 0;\r\n\r\n      // delete all the edges connected to the node\r\n      while (edge_index < this.data.edges.length){\r\n        let tbrEdge = this.data.edges[edge_index];\r\n        if (tbrEdge.target.parentNode == node || tbrEdge.source.parentNode == node){\r\n          this.deleteEdge(edge_index)\r\n          continue;\r\n        }\r\n        edge_index += 1;\r\n      }\r\n\r\n      // remove the node from the flowchart\r\n      this.data.nodes.splice(Number(node_index),1)\r\n    }\r\n  }\r\n\r\n  // delete an edge with a known index\r\n  deleteEdge(edge_index){\r\n    let tbrEdge = this.data.edges[edge_index];\r\n\r\n    // remove the edge from the target node's list of edges\r\n    for (let i in this.data.edges){\r\n      if (tbrEdge.target.edges[i] == tbrEdge){\r\n        tbrEdge.target.edges.splice(Number(i), 1); \r\n        break;\r\n      }\r\n    }\r\n\r\n    // remove the edge from the source node's list of edges\r\n    for (let i in tbrEdge.source.edges){\r\n      if (tbrEdge.source.edges[i] == tbrEdge){\r\n        tbrEdge.source.edges.splice(Number(i), 1);\r\n        break;\r\n      }\r\n    }\r\n\r\n    // remove the edge from the general list of edges\r\n    this.data.edges.splice(edge_index, 1); \r\n    this.data.ordered = false\r\n  }\r\n\r\n\r\n  // delete all the selected edges\r\n  deleteSelectedEdges(){\r\n    this.selectedEdge.sort().reverse();\r\n    for (let edge_index of this.selectedEdge){\r\n      this.deleteEdge(edge_index)\r\n    }\r\n    this.selectedEdge = [];\r\n  }\r\n\r\n  // select an edge\r\n  selectEdge(event, edge_index){\r\n\r\n    // if ctrl is pressed, add the edge into the list of selected edges\r\n    if (event == 'ctrl'){\r\n      this.selectedEdge.push(edge_index);\r\n      this.data.edges[edge_index].selected = true;\r\n    } \r\n\r\n    else if (event == 'single' || (event === false && this.selectedEdge.length > 1)) {\r\n      if (this.selectedEdge.length > 0){\r\n        for (let e of this.selectedEdge) this.data.edges[e].selected = false;\r\n      }\r\n      this.selectedEdge = [edge_index];\r\n      this.data.edges[edge_index].selected = true;\r\n    } \r\n    else {\r\n      this.data.edges[edge_index].selected = false;\r\n      for (let i = 0; i < this.selectedEdge.length; i ++) if (this.selectedEdge[i] == edge_index) {\r\n        this.selectedEdge.splice(i,1);\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  // focus view onto the flowchart\r\n  focusFlowchart(): void{\r\n    // find the frame of the flowchart: frame = [minX, minY, maxX, maxY]\r\n    let frame = [this.data.nodes[0].position.x, this.data.nodes[0].position.y, \r\n                this.data.nodes[0].position.x, this.data.nodes[0].position.y]\r\n    for (let node of this.data.nodes){\r\n      if (node.position.x < frame[0]){\r\n        frame[0] = node.position.x;\r\n      } else if (node.position.x > frame[2]){\r\n        frame[2] = node.position.x;\r\n      }\r\n      if (node.position.y < frame[1]){\r\n        frame[1] = node.position.y;\r\n      } else if (node.position.y > frame[3]){\r\n        frame[3] = node.position.y;\r\n      }\r\n    }\r\n    frame[2] += 100;\r\n    frame[3] += 80;\r\n    \r\n    // calculate the zoom to fit the whole flowchart\r\n    let bRect = <DOMRect>this.canvas.getBoundingClientRect();\r\n    let ctm = <SVGMatrix>this.canvas.getScreenCTM();\r\n    let zoom = bRect.width/(ctm.a * (frame[2] - frame[0]))\r\n    let heightZoom = bRect.height/(ctm.d * (frame[3] - frame[1]))\r\n    if (zoom > heightZoom) zoom = heightZoom;\r\n    if (zoom > 2.5) zoom = 2.5;\r\n\r\n    // calculate the difference between height and width, if height is bigger than width, centering the flowchart based on the difference\r\n    let height_width_diff = ((frame[3] - frame[1]) - (frame[2] - frame[0])) / 2;\r\n    if (height_width_diff > 0){\r\n      frame[0] -= height_width_diff\r\n    }\r\n\r\n    // if the minX or minY goes below 0 (outside of svg frame), change them back to 0\r\n    if (frame[0]<0) frame[0] = 0;\r\n    if (frame[1]<0) frame[1] = 0;\r\n\r\n    // transform\r\n    this.canvas.style.transition = 'transform 0ms ease-in';\r\n    this.canvas.style.transformOrigin = 'top left';\r\n    this.canvas.style.transform = `matrix(${zoom},0,0,${zoom},${-frame[0]*ctm.a*zoom/this.zoom},${-frame[1]*ctm.a*zoom/this.zoom})`;\r\n    this.zoom = zoom; \r\n  }\r\n\r\n\r\n  // scale view on mouse wheel\r\n  scale(event: WheelEvent): void{\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n\r\n    // calculate new zoom value\r\n    let scaleFactor: number = 0.1;\r\n    let value: number = this.zoom  - (Math.sign(event.deltaY))*scaleFactor;\r\n\r\n    // limit the zoom value to be between 1 and 2.5\r\n    if(value >= 1 && value <= 2.5){\r\n      value = Number( (value).toPrecision(5) )\r\n    } else {\r\n      return\r\n    }\r\n\r\n    // if new zoom is bigger than current zoom, update the mouse position to current position\r\n    if (value > this.zoom){\r\n      this.mousePos = [event.clientX - this.offset[0], event.clientY - this.offset[1]]\r\n    }\r\n\r\n    // find transformation matrix\r\n    var m = this.canvas.createSVGMatrix()\r\n    .translate(this.mousePos[0], this.mousePos[1])\r\n    .scale(value)\r\n    .translate(-this.mousePos[0], -this.mousePos[1]);\r\n    let transf = \"matrix(\" + m.a + \",\" + m.b + \",\" + m.c + \",\" + m.d + \",\" + m.e + \",\" + m.f + \")\"\r\n\r\n    // transform\r\n    this.canvas.style.transition = 'transform 50ms ease-in';\r\n    this.canvas.style.transformOrigin = `top left`;\r\n    this.canvas.style.transform = transf;\r\n    this.zoom = value;\r\n  }\r\n\r\n\r\n  // initiate dragging the view window\r\n  panStart(event:MouseEvent) {\r\n    event.preventDefault();\r\n\r\n    this.canvas.style.transition = 'transform 0ms linear';\r\n    this.canvas.style.transformOrigin = `top left`;\r\n    let bRect = <DOMRect>this.canvas.getBoundingClientRect();\r\n\r\n    // set start coords to current view window position\r\n    this.startCoords = [\r\n      event.clientX - (bRect.left - this.offset[0]),\r\n      event.clientY - (bRect.top - this.offset[1])\r\n    ];\r\n    // set drag mode to drag view\r\n    this.isDown = 1;\r\n  }\r\n\r\n  // handle mouse move for dragging view/node/port\r\n  handleMouseMove(event:MouseEvent){\r\n    // return if no dragging initiated\r\n    if (!this.isDown) {\r\n      return;\r\n\r\n    // if drag view\r\n    } else if(this.isDown == 1){\r\n      event.preventDefault();\r\n      let bRect = <DOMRect>this.canvas.getBoundingClientRect();\r\n      var x = Number(event.clientX - this.startCoords[0]);\r\n      var y = Number(event.clientY - this.startCoords[1]);\r\n      let boundingDiv = <DOMRect>document.getElementById(\"flowchart-main-container\").getBoundingClientRect();\r\n      if (x > 0 || bRect.width < boundingDiv.width){\r\n        x = 0\r\n      } else if (boundingDiv.width - x > bRect.width){\r\n        x = boundingDiv.width - bRect.width\r\n      }\r\n      if (y > 0 || bRect.height < boundingDiv.height){\r\n        y = 0\r\n      } else if (boundingDiv.height - y > bRect.height){\r\n        y = boundingDiv.height - bRect.height\r\n      }\r\n      this.canvas.style.transform = \"matrix(\" + this.zoom + \",0,0,\"+ this.zoom+\",\"+ x+\",\"+y+\")\";\r\n\r\n    // if drag node\r\n    } else if(this.isDown == 2){\r\n\r\n      var pt = this.canvas.createSVGPoint();\r\n\r\n      pt.x = event.pageX;\r\n      pt.y = event.pageY;\r\n\r\n      let svgP: any;\r\n      var isFirefox = typeof InstallTrigger !== 'undefined';\r\n      if (isFirefox){\r\n        let ctm = this.canvas.getScreenCTM()\r\n        let bRect = this.canvas.getBoundingClientRect()\r\n        ctm.a = ctm.a * this.zoom\r\n        ctm.d = ctm.d * this.zoom\r\n        ctm.e = bRect.x\r\n        ctm.f = bRect.y\r\n        svgP = pt.matrixTransform(ctm.inverse());\r\n      } else {\r\n        svgP = pt.matrixTransform(this.canvas.getScreenCTM().inverse());\r\n      }\r\n\r\n      const xDiff = this.startCoords[0] - svgP.x;\r\n      const yDiff = this.startCoords[1] - svgP.y;\r\n      this.startCoords[0] = svgP.x;\r\n      this.startCoords[1] = svgP.y;\r\n\r\n      this.element.position.x -= xDiff;\r\n      this.element.position.y -= yDiff;\r\n\r\n  // if drag port\r\n  } else if (this.isDown == 3){\r\n      event.preventDefault();\r\n      var pt = this.canvas.createSVGPoint();\r\n\r\n      pt.x = event.pageX;\r\n      pt.y = event.pageY;\r\n\r\n\r\n      var isFirefox = typeof InstallTrigger !== 'undefined';\r\n      if (isFirefox){\r\n        let ctm = this.canvas.getScreenCTM()\r\n        let bRect = this.canvas.getBoundingClientRect()\r\n        ctm.a = ctm.a * this.zoom\r\n        ctm.d = ctm.d * this.zoom\r\n        ctm.e = bRect.x\r\n        ctm.f = bRect.y\r\n        const svgP = pt.matrixTransform(ctm.inverse());\r\n        this.element.setAttribute('x2', svgP.x);\r\n        this.element.setAttribute('y2', svgP.y);\r\n\r\n      } else {\r\n        const svgP = pt.matrixTransform(this.canvas.getScreenCTM().inverse());\r\n        this.element.setAttribute('x2', svgP.x);\r\n        this.element.setAttribute('y2', svgP.y);\r\n      }\r\n      \r\n    }\r\n\r\n  }\r\n\r\n  handleMouseUp(event){\r\n    this.element = undefined;\r\n    // drop port --> create new edge if drop position is within 15px of an input/output port\r\n    if (this.isDown == 3){\r\n      var pt = this.canvas.createSVGPoint();\r\n\r\n      pt.x = event.pageX;\r\n      pt.y = event.pageY;\r\n      let svgP: any;\r\n\r\n      var isFirefox = typeof InstallTrigger !== 'undefined';\r\n      if (isFirefox){\r\n        let ctm = this.canvas.getScreenCTM()\r\n        let bRect = this.canvas.getBoundingClientRect()\r\n        ctm.a = ctm.a * this.zoom\r\n        ctm.d = ctm.d * this.zoom\r\n        ctm.e = bRect.x\r\n        ctm.f = bRect.y\r\n        svgP = pt.matrixTransform(ctm.inverse());\r\n      } else {\r\n        svgP = pt.matrixTransform(this.canvas.getScreenCTM().inverse());\r\n      }\r\n\r\n      // reset temporary edge position to <(0,0),(0,0)>\r\n      let tempLine = <HTMLElement>document.getElementById(\"temporary-wire\");\r\n      tempLine.setAttribute('x1', '0');\r\n      tempLine.setAttribute('y1', '0');\r\n      tempLine.setAttribute('x2', '0');\r\n      tempLine.setAttribute('y2', '0');\r\n\r\n      // go through all of the nodes' input/output ports\r\n      for (let n of this.data.nodes){\r\n        var pPos;\r\n\r\n        // find the node's corresponding port and its position\r\n        if (this.startType == 'input'){\r\n          if (this.edge.target.parentNode == n || n.type == 'end') continue;\r\n          this.edge.source = n.output;\r\n\r\n          pPos = [n.position.x+this.outputOffset[0], n.position.y+this.outputOffset[1]];\r\n        } else {\r\n          if (this.edge.source.parentNode == n || n.type == 'start') continue;\r\n          this.edge.target = n.input;\r\n\r\n          pPos = [n.position.x+this.inputOffset[0], n.position.y+this.inputOffset[1]];\r\n        }\r\n\r\n        // if the distance between the port's position and the dropped position is bigger than 15px, continue\r\n        if (Math.abs(pPos[0]-svgP.x) > 25 || Math.abs(pPos[1]-svgP.y) > 25 ) continue;\r\n\r\n        // if there is already an existing edge with the same source and target as the new edge, return\r\n        for (let edge of this.data.edges){\r\n          if (edge.target == this.edge.target && edge.source == this.edge.source){\r\n            this.isDown = 0;\r\n            return;\r\n          }\r\n        }\r\n        this.edge.target.edges.push(this.edge);\r\n        this.edge.source.edges.push(this.edge);\r\n        this.data.edges.push(this.edge);\r\n        this.data.ordered = false;  \r\n        break;\r\n      }\r\n    }\r\n    this.isDown = 0;\r\n  }\r\n\r\n\r\n\r\n\r\n}\r\n\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { MatIconModule, MatButtonModule } from '@angular/material';\r\n\r\nimport { FlowchartComponent } from './flowchart.component';\r\nimport { NodeComponent } from './node/node.component';\r\nimport { EdgeComponent } from './edge/edge.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    FlowchartComponent, \r\n    NodeComponent, \r\n    EdgeComponent,\r\n  ],\r\n  exports: [ FlowchartComponent ],\r\n  imports: [ CommonModule,\r\n             FormsModule, \r\n             MatIconModule,\r\n             MatButtonModule ],\r\n  entryComponents: [ ],\r\n  providers: [ ]\r\n})\r\nexport class SVGFlowchartModule {\r\n    constructor () { }\r\n}\r\n","export * from './flowchart.module';","export enum ACTIONS{\r\n    SELECT, \r\n    DELETE, \r\n    COPY, \r\n    CONNECT,\r\n    DRAGNODE,\r\n    DROPPORT,\r\n    DRAGPORT,\r\n    PROCEDURE,\r\n}","module.exports = \"<!-- svg group for the selectable and draggable area of normal node -->\\r\\n<svg:g (click)='nodeSelect($event)' draggable=\\\"true\\\" \\r\\n(mousedown)='startDragNode($event)' \\r\\n(dblclick)='switchToProcedure($event)'\\r\\n*ngIf='node.type==\\\"\\\"'>\\r\\n\\r\\n    <!-- rectangular box with border -->\\r\\n    <rect class=\\\"node\\\" \\r\\n    width=\\\"100\\\" height=\\\"80\\\"\\r\\n    [class.node--selected]='selected'\\r\\n    [class.node--error]=\\\"node.hasError\\\"\\r\\n    [attr.x]=\\\"node.position.x\\\" \\r\\n    [attr.y]=\\\"node.position.y\\\"\\r\\n    />\\r\\n\\r\\n    <!-- node description inside the rectangular box -->\\r\\n    <svg:foreignObject [attr.x]=\\\"node.position.x\\\" [attr.y]=\\\"node.position.y + 3\\\" \\r\\n    width=\\\"100\\\" height = \\\"80\\\"\\r\\n    (mousedown)='focusText($event)'>\\r\\n        <xhtml:div class='textdiv'>\\r\\n            <xhtml:textarea \\r\\n                id={{node.id}}\\r\\n                autocomplete=off \\r\\n                [(ngModel)]='node.name'\\r\\n                [class.selected]='selected'\\r\\n                title={{node.name}}\\r\\n                style=\\\"font-weight: 600;\\\"\\r\\n                placeholder='Description of Node'/>  \\r\\n        </xhtml:div>\\r\\n    </svg:foreignObject>\\r\\n</svg:g>\\r\\n\\r\\n<!-- svg group for the selectable and draggable area of start node -->\\r\\n<svg:g (click)='nodeSelect($event)' draggable=\\\"true\\\" \\r\\n(mousedown)='startDragNode($event)' \\r\\n(dblclick)='switchToProcedure($event)'\\r\\n*ngIf='node.type==\\\"start\\\"'>\\r\\n\\r\\n    <!-- ellipse with border -->\\r\\n    <ellipse class=\\\"node\\\" \\r\\n        [class.node--selected]='selected'\\r\\n        [class.node--error]=\\\"node.hasError\\\"\\r\\n        [attr.cx]=\\\"node.position.x + inputOffset[0]\\\" \\r\\n        [attr.cy]=\\\"node.position.y + (inputOffset[1]+outputOffset[1])/2 + 10\\\"\\r\\n        [attr.rx]=\\\"40\\\"\\r\\n        [attr.ry]=\\\"30\\\"\\r\\n        />\\r\\n\\r\\n    <!-- node description inside the ellipse -->\\r\\n    <svg:foreignObject \\r\\n    [attr.x]=\\\"node.position.x\\\" [attr.y]=\\\"node.position.y + 38\\\" \\r\\n    width=\\\"100\\\" height = \\\"40\\\">\\r\\n        <xhtml:div class='textdiv'>\\r\\n            <xhtml:textarea \\r\\n                id={{node.id}}\\r\\n                class='textarea_startend'\\r\\n                autocomplete=off \\r\\n                [class.selected]='selected'\\r\\n                [(ngModel)]='node.name'/>  \\r\\n        </xhtml:div>\\r\\n    </svg:foreignObject>\\r\\n</svg:g>\\r\\n\\r\\n<!-- svg group for the selectable and draggable area of end node -->\\r\\n<svg:g (click)='nodeSelect($event)' draggable=\\\"true\\\" \\r\\n(mousedown)='startDragNode($event)' \\r\\n(dblclick)='switchToProcedure($event)'\\r\\n*ngIf='node.type==\\\"end\\\"'>\\r\\n\\r\\n    <!-- ellipse with border -->\\r\\n    <ellipse class=\\\"node\\\" \\r\\n        [class.node--selected]='selected'\\r\\n        [class.node--error]=\\\"node.hasError\\\"\\r\\n        [attr.cx]=\\\"node.position.x + inputOffset[0]\\\" \\r\\n        [attr.cy]=\\\"node.position.y + (inputOffset[1]+outputOffset[1])/2 - 10\\\"\\r\\n        [attr.rx]=\\\"40\\\"\\r\\n        [attr.ry]=\\\"30\\\"\\r\\n        />\\r\\n\\r\\n    <!-- node description inside the ellipse -->\\r\\n    <svg:foreignObject [attr.x]=\\\"node.position.x\\\" [attr.y]=\\\"node.position.y + 18\\\" \\r\\n    width=\\\"100\\\" height = \\\"40\\\">\\r\\n        <xhtml:div class='textdiv'>\\r\\n            <xhtml:textarea \\r\\n                id={{node.id}}\\r\\n                class='textarea_startend'\\r\\n                autocomplete=off \\r\\n                [class.selected]='selected'\\r\\n                [(ngModel)]='node.name'/>  \\r\\n        </xhtml:div>\\r\\n    </svg:foreignObject>\\r\\n</svg:g>\\r\\n\\r\\n\\r\\n\\r\\n<!-- circles as draggable input/output ports of the node -->\\r\\n<svg:circle\\r\\nr=3\\r\\n[attr.cx]=\\\"node.position.x + inputOffset[0]\\\" \\r\\n[attr.cy]=\\\"node.position.y + inputOffset[1]\\\"\\r\\n*ngIf=\\\"inputDraggable()\\\" \\r\\nclass='inputPort'\\r\\nid = 'node.input.id'\\r\\n(mousedown)='startDragPort($event, \\\"input\\\")'/>\\r\\n\\r\\n<svg:circle *ngIf=\\\"outputDraggable()\\\" \\r\\nclass='outputPort'\\r\\nid = 'node.output.id'\\r\\n(mousedown)='startDragPort($event, \\\"output\\\")' \\r\\n[attr.cx]=\\\"node.position.x + outputOffset[0]\\\" \\r\\n[attr.cy]=\\\"node.position.y + outputOffset[1]\\\" \\r\\npointer-events=\\\"all\\\"\\r\\nr=3\\r\\nfill=\\\"black\\\"/>\\r\\n\\r\\n\"","module.exports = \"/*\\r\\n$color-main: #2D4885;\\r\\n$color-accent: #50ABB9;\\r\\n$color-muted: #88D4DD;\\r\\n$color-text-accent: #DC772F;\\r\\n*/\\n.node {\\n  fill: #fafafa;\\n  stroke-width: 2px;\\n  stroke: #505050;\\n  stroke-opacity: 1;\\n  stroke-linecap: round;\\n  stroke-linejoin: round; }\\n.node.node--disabled {\\n    stroke: #505050;\\n    stroke-opacity: 0.5;\\n    fill-opacity: 0.5; }\\n.node.node--selected {\\n    stroke: #000096; }\\n.node.node--error {\\n    stroke: red; }\\n.textdiv {\\n  text-align: center;\\n  width: 94px; }\\n.foreignObject {\\n  width: 100;\\n  height: 80; }\\ntextarea {\\n  font-family: sans-serif;\\n  background: transparent;\\n  display: inline-block;\\n  border: none;\\n  font-size: 14px;\\n  width: 100%;\\n  height: 70px;\\n  font-weight: 600;\\n  text-align: center;\\n  vertical-align: middle;\\n  resize: none;\\n  overflow: hidden;\\n  color: #505050; }\\ntextarea.selected {\\n    color: #000096; }\\n.textarea_startend {\\n  font-size: 14px;\\n  font-weight: 600;\\n  color: #505050;\\n  height: 20px;\\n  pointer-events: none; }\\n.inputPort {\\n  stroke: transparent;\\n  stroke-width: 20px;\\n  pointer-events: all;\\n  fill: #505050; }\\n.outputPort {\\n  stroke: transparent;\\n  stroke-width: 20px;\\n  pointer-events: all;\\n  fill: #505050; }\\n\"","import { Component, Input, Output, EventEmitter, HostListener } from '@angular/core';\r\nimport { INode } from '@models/node';\r\nimport { ACTIONS } from './node.actions'\r\n\r\n\r\n\r\n@Component({\r\n  selector: '[node]',\r\n  templateUrl: './node.component.html',\r\n  styleUrls: ['./node.component.scss']\r\n})\r\nexport class NodeComponent{\r\n    \r\n    @Input() node: INode;\r\n    @Input() selected: boolean;\r\n    @Input() inputOffset; // position offset of the input port as compared to the position of the node in svg\r\n    @Input() outputOffset; // position offset of the output port as compared to the position of the node in svg\r\n\r\n\r\n    @Output() action = new EventEmitter();\r\n    startType: string;\r\n    last = [0,0];    \r\n    isDown = false;\r\n    \r\n    /*\r\n    update the position of the node\r\n    */\r\n    updatePosition(position){ \r\n        this.node.position = position; \r\n    };\r\n\r\n    /*\r\n    select a node\r\n    */\r\n    nodeSelect(event){\r\n        this.action.emit({ action: ACTIONS.SELECT });\r\n    };\r\n\r\n\r\n    /*\r\n    check if the input port of the node is draggable --> false only for start node, true otherwise\r\n    */\r\n    inputDraggable(): boolean{\r\n        return !(this.node.type == 'start');\r\n    }\r\n\r\n    /*\r\n    check if the output port of the node is draggable --> false only for end node, true otherwise\r\n    */\r\n    outputDraggable(): boolean{\r\n        return !(this.node.type == 'end');\r\n    }\r\n\r\n    /*\r\n    initiate dragging node when mousedown inside the node group\r\n    */\r\n    startDragNode(event:MouseEvent) {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n        this.action.emit({ action: ACTIONS.DRAGNODE, data: event});\r\n    }\r\n\r\n    /*\r\n    initiate dragging port when mousedown inside the port (inside the invisible stroke of the port)\r\n    */\r\n    startDragPort(event:MouseEvent, portType) {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n        let pos = this.node.position;\r\n        var data: any;\r\n        if (portType == 'input'){\r\n            data = this.node.input;\r\n            pos = [pos.x + this.inputOffset[0], pos.y + this.inputOffset[1]];\r\n        } else {\r\n            data = this.node.output;\r\n            pos = [pos.x + this.outputOffset[0], pos.y + this.outputOffset[1]];\r\n        }\r\n        this.action.emit({ action: ACTIONS.DRAGPORT, data: data, position: pos, type: portType});\r\n    }\r\n\r\n    /*\r\n    focus on the description of the node when mouse down inside the node\r\n    ** no stopPropagation to allow propagation to startDragNode --> node can still be dragged\r\n    */\r\n    focusText(event: MouseEvent){\r\n        document.getElementById(this.node.id).focus();\r\n    }\r\n    \r\n    /*\r\n    switch the viewchild of the appModule to the node's procedure view when double-click on the node\r\n    */\r\n    switchToProcedure(event: Event){\r\n        this.action.emit({action:ACTIONS.PROCEDURE})\r\n    }\r\n}\r\n","import { Component, Input } from '@angular/core';\r\nimport { INode } from '@models/node';\r\nimport { PortUtils } from '@models/port'; \r\n\r\n@Component({\r\n  selector: 'add-input',\r\n  template:  `<button (click)='addInput()'>AddInput</button>`,\r\n  styles: [ ]\r\n})\r\nexport class AddInputComponent{\r\n    \r\n    @Input() node: INode; \r\n    constructor(){}\r\n\r\n    addInput(): void{ \r\n      return\r\n      /*\r\n      let newPort = PortUtils.getNewInput();\r\n      newPort.parentNode = this.node;\r\n      this.node.input.push(newPort);  \r\n      */\r\n    }\r\n\r\n}","import { Component, Input } from '@angular/core';\r\nimport { NodeUtils } from '@models/node';\r\nimport { IFlowchart } from '@models/flowchart';\r\n\r\n@Component({\r\n  selector: 'add-node',\r\n  template:  `<button (click)='addNode()'>AddNode</button>`,\r\n  styles: [ ]\r\n})\r\nexport class AddNodeComponent{\r\n    \r\n    @Input() flowchart: IFlowchart; \r\n    constructor(){}\r\n\r\n    addNode(): void{  this.flowchart.nodes.push(NodeUtils.getNewNode());}\r\n\r\n}","import { Component, Input } from '@angular/core';\r\nimport { INode } from '@models/node';\r\nimport { PortUtils } from '@models/port'; \r\n\r\n@Component({\r\n  selector: 'add-output',\r\n  template:  `<button (click)='addOutput()'>AddOutput</button>`,\r\n  styles: [ ]\r\n})\r\nexport class AddOutputComponent{\r\n    \r\n    @Input() node: INode; \r\n    constructor(){}\r\n\r\n    addOutput(): void{  \r\n      return\r\n      /*\r\n      let newPort = PortUtils.getNewOutput();\r\n      newPort.parentNode = this.node;\r\n      this.node.output.push(newPort);  \r\n      */\r\n    }\r\n\r\n}","import { Component, Input } from '@angular/core';\r\nimport { IFlowchart, FlowchartUtils } from '@models/flowchart';\r\nimport { CodeUtils } from '@models/code';\r\nimport { INode } from '@models/node';\r\nimport { IProcedure } from '@models/procedure';\r\nimport { IEdge } from '@models/edge';\r\n\r\nimport * as Modules from '@modules';\r\nimport * as gs from 'gs-json'\r\n\r\n\r\n@Component({\r\n  selector: 'execute',\r\n  /*\r\n  template: `<button class=\"btn--execute\" \r\n                    (click)=\"execute()\">\r\n                Execute\r\n             </button>`,\r\n    */\r\n   template:`<button class=\"btn\" mat-icon-button title=\"Execute\" (click)=\"execute()\">\r\n    <mat-icon>play_circle_outline</mat-icon>\r\n    </button>\r\n    `,\r\n  styles: [ \r\n            `.btn--execute{ \r\n                display: inline-block;\r\n                vertical-align: middle;\r\n                font-size: 14px;\r\n                line-height: 18px;\r\n                border: 3px solid #E0C229;\r\n                border-radius: 4px;\r\n                padding: 1px 10px;\r\n                background-color: #E0C229; \r\n                color: #494D59;\r\n                font-weight: 600;\r\n                text-transform: uppercase;\r\n              }\r\n              .btn{\r\n                vertical-align: middle;\r\n                background-color: transparent; \r\n                border: none;\r\n                color: rgb(80,80,80);\r\n              }\r\n              .btn:hover{\r\n                color: blue;\r\n              }` \r\n          ]\r\n})\r\nexport class ExecuteComponent {\r\n\r\n    @Input() flowchart: IFlowchart;\r\n    private globalVars: string;\r\n\r\n    async execute() {\r\n        this.globalVars = '';\r\n        // reset input of all nodes except start\r\n        for (let node of this.flowchart.nodes){\r\n            if (node.type != 'start'){\r\n                if (node.input.edges){\r\n                    node.input.value = undefined;\r\n                }\r\n            }\r\n        }\r\n\r\n        // order the flowchart\r\n        if (!this.flowchart.ordered){\r\n            FlowchartUtils.orderNodes(this.flowchart);\r\n        }\r\n\r\n        // get the string of all imported functions\r\n        let funcStrings = {};\r\n        for (let func of this.flowchart.functions){\r\n            funcStrings[func.name] = await CodeUtils.getFunctionString(func);\r\n        }\r\n\r\n        // execute each node\r\n        for (let node of this.flowchart.nodes){\r\n            if (!node.enabled) {\r\n                node.output.value = undefined;\r\n                continue;\r\n            }\r\n            await this.executeNode(node, funcStrings);\r\n        }\r\n    }\r\n\r\n    async executeNode(node: INode, funcStrings){\r\n        let params = {\"currentProcedure\": ['']};\r\n        try{\r\n            // get the code for the node\r\n            var fnString = await CodeUtils.getNodeCode(node, true);\r\n\r\n            // add the constants from the start node\r\n            fnString = this.globalVars + fnString;\r\n            params[\"model\"] = node.input.value;\r\n\r\n            // add the imported functions code\r\n            var hasFunctions = false;\r\n            for (let funcName in funcStrings){\r\n                fnString = funcStrings[funcName] + fnString;\r\n                hasFunctions = true;\r\n            }\r\n            if (hasFunctions){\r\n                let mergeString = CodeUtils.mergeInputs.toString();\r\n                fnString = 'function mergeInputs' + mergeString.substring(9, mergeString.length) +'\\n\\n' + fnString;\r\n            }\r\n\r\n            console.log(`/*    ${node.name.toUpperCase()}    */\\n\\n`+fnString);\r\n            // create the function with the string: new Function ([arg1[, arg2[, ...argN]],] functionBody)\r\n            const fn = new Function('__modules__', '__params__', fnString);\r\n            // execute the function\r\n            let result = fn(Modules, params);\r\n            node.output.value = result;\r\n            if (node.type == 'start'){\r\n                for (let constant in params[\"constants\"]){\r\n                    this.globalVars += `const ${constant} = ${params[\"constants\"][constant]};\\n`;\r\n                }\r\n                this.globalVars += '\\n';\r\n            }\r\n        }\r\n        catch(ex){\r\n            node.hasError = true;\r\n            //console.warn(`${node.name} errored`);\r\n\r\n            // Unexpected Identifier\r\n            // Unexpected token\r\n            let prodWithError: string = params[\"currentProcedure\"][0]; \r\n            let markError = function(prod: IProcedure, id: string){\r\n                if(prod[\"ID\"] && id && prod[\"ID\"] == id){\r\n                    prod.hasError = true;\r\n                }\r\n                if(prod.hasOwnProperty('children')){\r\n                    prod.children.map(function(p){\r\n                        markError(p, id);\r\n                    });\r\n                }\r\n            }\r\n            if(prodWithError != ''){\r\n                node.procedure.map(function(prod: IProcedure){\r\n                    if(prod[\"ID\"] == prodWithError){\r\n                        prod.hasError = true;\r\n                    }\r\n                    if(prod.hasOwnProperty('children')){\r\n                        prod.children.map(function(p){\r\n                            markError(p, prodWithError);\r\n                        })\r\n                    }\r\n                });\r\n            }\r\n            let error: Error;\r\n            if(ex.toString().indexOf(\"Unexpected identifier\") > -1){\r\n                error = new Error(\"Unexpected Identifier error. Did you declare everything? Check that your strings are enclosed in quotes (\\\")\");\r\n            }\r\n            else if(ex.toString().indexOf(\"Unexpected token\") > -1){\r\n                error = new Error(\"Unexpected token error. Check for stray spaces or reserved keywords?\");\r\n            }\r\n            else{\r\n                 error = new Error(ex);\r\n            }\r\n            throw error;\r\n            \r\n        }\r\n    }\r\n\r\n}\r\n","\r\nexport class downloadUtils{\r\n    \r\n    static downloadFile(fileName: string, fileContent: Blob){\r\n        if (window.navigator.msSaveOrOpenBlob) {\r\n            window.navigator.msSaveOrOpenBlob(fileContent, fileName);\r\n        } else {\r\n            const a = document.createElement('a');\r\n            document.body.appendChild(a);\r\n            const url = window.URL.createObjectURL(fileContent);\r\n            a.href = url;\r\n            a.download = fileName;\r\n            a.click();\r\n            setTimeout(() => {\r\n                window.URL.revokeObjectURL(url);\r\n                document.body.removeChild(a);\r\n            }, 0);\r\n        }\r\n    }\r\n}","export { SaveFileComponent } from './savefile.component';\r\nexport { LoadFileComponent } from './loadfile.component';\r\nexport { NewFileComponent } from './newfile.component';","import { Component, Output, EventEmitter } from '@angular/core';\r\nimport { IMobius } from '@models/mobius';\r\nimport { Observable } from 'rxjs';\r\nimport * as circularJSON from 'circular-json';\r\n\r\n@Component({\r\n  selector: 'file-load',\r\n  template:  `<button id='loadfile' class='btn' onclick=\"document.getElementById('file-input').click();\">Load</button>\r\n              <input id=\"file-input\" type=\"file\" name=\"name\" (change)=\"sendloadfile()\" style=\" display: none;\" />`,\r\n  styles: [ \r\n            `            \r\n            button.btn{ \r\n                margin: 0px 0px 0px 0px;\r\n                font-size: 10px;\r\n                line-height: 12px;\r\n                border: 2px solid gray;\r\n                border-radius: 4px;\r\n                padding: 2px 5px;\r\n                background-color: #3F4651; \r\n                color: #E7BF00;\r\n                font-weight: 600;\r\n                text-transform: uppercase;\r\n             }\r\n            button.btn:hover{\r\n                background-color: gray;\r\n                color: white;\r\n            }\r\n\r\n             `\r\n          ]\r\n})\r\nexport class LoadFileComponent{\r\n\r\n    @Output() loaded = new EventEmitter();\r\n    \r\n    \r\n    sendloadfile(){\r\n        var selectedFile = (<HTMLInputElement>document.getElementById('file-input')).files[0];\r\n        let stream = Observable.create(observer => {\r\n            let reader = new FileReader();\r\n            reader.onloadend = () => {\r\n                //if (typeof reader.result === 'string') {}\r\n                var f = circularJSON.parse(<string>reader.result);\r\n                const file: IMobius = {\r\n                    name: f.name,\r\n                    author: f.author, \r\n                    flowchart: f.flowchart,\r\n                    last_updated: f.last_updated,\r\n                    version: f.version\r\n                }\r\n                observer.next(file);\r\n                observer.complete();\r\n                }\r\n            reader.readAsText(selectedFile);\r\n        });\r\n        stream.subscribe(loadeddata => {\r\n            this.loaded.emit(circularJSON.stringify(loadeddata));\r\n        });\r\n        (<HTMLInputElement>document.getElementById('file-input')).value = \"\";\r\n    }\r\n    \r\n\r\n    //   @ViewChild('fileInput') fileInput: ElementRef;\r\n    //   openPicker(): void{\r\n    //     let el: HTMLElement = this.fileInput.nativeElement as HTMLElement;\r\n    //     el.click();\r\n    //   }\r\n\r\n    //   loadFile(url ?:string): void{\r\n    //     let file = this.fileInput.nativeElement.files[0];\r\n    //     if (file) {\r\n    //         var reader = new FileReader();\r\n    //         reader.readAsText(file, \"UTF-8\");\r\n    //         let fs = this.flowchartService;\r\n    //         reader.onload = function (evt) {\r\n    //           let fileString: string = evt.target[\"result\"];\r\n    //           fs.loadFile(fileString);\r\n    //         }\r\n    //         reader.onerror = function (evt) {\r\n    //             console.log(\"Error reading file\");\r\n    //         }\r\n    //     }\r\n    // this.flowchartService.loadFile(url);\r\n}","import { Component, Output, EventEmitter, ChangeDetectorRef } from '@angular/core';\r\nimport { IMobius } from '@models/mobius';\r\nimport { FlowchartUtils } from '@models/flowchart';\r\nimport * as circularJSON from 'circular-json';\r\n\r\n@Component({\r\n  selector: 'file-new',\r\n  template:  `<button id='newfile' class='btn' (click)='sendNewFile()'>New</button>`,\r\n  styles: [ \r\n            `\r\n            button.btn{ \r\n                margin: 0px 0px 0px 0px;\r\n                font-size: 10px;\r\n                line-height: 12px;\r\n                border: 2px solid gray;\r\n                border-radius: 4px;\r\n                padding: 2px 5px;\r\n                background-color: #3F4651; \r\n                color: #E7BF00;\r\n                font-weight: 600;\r\n                text-transform: uppercase;\r\n            }\r\n            button.btn:hover{\r\n                background-color: gray;\r\n                color: white;\r\n            }\r\n             `\r\n          ]\r\n})\r\nexport class NewFileComponent{\r\n\r\n    @Output() create = new EventEmitter();\r\n\r\n    constructor(private cdr: ChangeDetectorRef){}\r\n\r\n    sendNewFile(){\r\n        let confirmed = confirm(\"Resetting would delete the current flowchart. Would you like to continue?\");\r\n        if (!confirmed) return\r\n        const file: IMobius = {\r\n            name: \"default_file.mob\",\r\n            author: \"new_user\", \r\n            flowchart: FlowchartUtils.newflowchart(),\r\n            last_updated: new Date(),\r\n            version: 1\r\n        }\r\n        this.create.emit(circularJSON.stringify(file));\r\n        this.cdr.detectChanges()\r\n    }\r\n}","import { Component, Input} from '@angular/core';\r\nimport { IMobius } from '@models/mobius';\r\nimport { downloadUtils } from './download.utils'\r\nimport * as circularJSON from 'circular-json';\r\nimport { FlowchartUtils } from '@models/flowchart';\r\n\r\n@Component({\r\n  selector: 'file-save',\r\n  template:  `<button id='savefile' class='btn' (click)='download()'>Save</button>`,\r\n  styles: [ \r\n            `\r\n            button.btn{ \r\n                margin: 0px 0px 0px 0px;\r\n                font-size: 10px;\r\n                line-height: 12px;\r\n                border: 2px solid gray;\r\n                border-radius: 4px;\r\n                padding: 2px 5px;\r\n                background-color: #3F4651; \r\n                color: #E7BF00;\r\n                font-weight: 600;\r\n                text-transform: uppercase;\r\n             }\r\n            button.btn:hover{\r\n                background-color: gray;\r\n                color: white;\r\n            }\r\n             `\r\n          ]\r\n})\r\nexport class SaveFileComponent{\r\n\r\n    @Input() file: IMobius;\r\n\r\n\r\n    // todo: save file\r\n    download(){\r\n        if (!this.file.flowchart.ordered){\r\n            FlowchartUtils.orderNodes(this.file.flowchart)\r\n        }\r\n        var savedfile = circularJSON.parse(circularJSON.stringify(this.file))\r\n        for (let node of savedfile.flowchart.nodes){\r\n            if (node.input.hasOwnProperty('value')){\r\n                node.input.value = undefined;\r\n            }\r\n            if (node.output.hasOwnProperty('value')){\r\n                node.output.value = undefined;\r\n            }\r\n            for (let prod of node.state.procedure){\r\n                prod.selected = false \r\n            }\r\n            node.state.procedure = [];\r\n        }\r\n\r\n        // **** need to modify this when changing the input's constant function: \r\n        // **** this part resets the value of the last argument of the function when saving the file\r\n        for (let prod of savedfile.flowchart.nodes[0].procedure){\r\n            prod.args[prod.argCount-1].value = undefined;\r\n        }\r\n\r\n\r\n        savedfile.flowchart.meta.selected_nodes = [0];\r\n        for (let edge of savedfile.flowchart.edges){\r\n            edge.selected = false;\r\n        }\r\n        \r\n        savedfile.name = savedfile.flowchart.name;\r\n\r\n        const fileString = circularJSON.stringify(savedfile);\r\n        let fname: string = `${savedfile.flowchart.name.replace(/\\ /g,'_')}.mob`;\r\n        var blob = new Blob([fileString], {type: 'application/json'});\r\n        downloadUtils.downloadFile(fname, blob);\r\n\r\n    }\r\n\r\n}","import { Component, Input } from '@angular/core';\r\nimport { INode } from '@models/node';\r\n\r\n@Component({\r\n  selector: 'panel-header',\r\n  template:  `<div class='panel__header'> \r\n                    <h3>{{node?.name}} // {{title}}</h3>\r\n              </div>`,\r\n  styles: [ \r\n            `.panel__header{ \r\n                font-weight: 600;\r\n                border: 2px solid #222;\r\n                border-radius: 4px;\r\n                padding: 5px;\r\n             }\r\n             h3{\r\n                margin: 0px;\r\n             }`\r\n          ]\r\n})\r\nexport class HeaderComponent{\r\n\r\n    @Input() node: INode; \r\n    @Input() title: string;\r\n\r\n    constructor(){}\r\n}","import { Component } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'navigation',\r\n  template: `<ul class='nav'>\r\n                <li class='link' *ngFor='let link of _links;' \r\n                      [class.active]='link.path == _router.url'\r\n                      [routerLink]=\"link.path\" \r\n                      >{{link.name}}</li>\r\n              </ul>`,\r\n  styles: [`\r\n      ul.nav{\r\n        margin: 0px;\r\n        padding: 0px;\r\n      }\r\n\r\n      li.link{\r\n        display: inline;\r\n        border: 2px solid gray;\r\n        border-radius: 4px;\r\n        margin: 15px 15px 15px 0px;\r\n        padding: 5px;\r\n        text-transform: uppercase;\r\n        font-weight: 600;\r\n        cursor: pointer;\r\n        font-size: 16px;\r\n      }\r\n\r\n      li.link:hover{\r\n        background-color: gray;\r\n        color: white;\r\n      }\r\n\r\n      .active{\r\n        background-color: #222;\r\n        color: white;\r\n        border-color: #222 !important;\r\n      }\r\n  `],\r\n})\r\nexport class NavigationComponent{\r\n\r\n    _links = [\r\n      { path: '/about', \r\n        name: 'about'\r\n      },\r\n      { path: '/gallery', \r\n        name: 'gallery'\r\n      },\r\n      { path: '/publish', \r\n        name: 'publish'\r\n      },\r\n      { path: '/editor', \r\n        name: 'editor'\r\n      },\r\n\r\n    ];\r\n\r\n    constructor(private _router: Router){ }\r\n\r\n}\r\n","module.exports = \"<h1>Page Not Found</h1>\\r\\n<p>Dolore ex aliqua ut incididunt laborum deserunt pariatur officia.</p>\\r\\n\"","module.exports = \"\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'page-not-found',\r\n  templateUrl: './not-found.component.html',\r\n  styleUrls: ['./not-found.component.scss'],\r\n})\r\nexport class PageNotFoundComponent{\r\n\r\n    constructor(){  }\r\n\r\n}\r\n","module.exports = \"<div class='container container--parameter'>\\r\\n\\r\\n    <div class='parameter__name'>{{ port.name }}</div>\\r\\n\\r\\n    <!-- Slider, SimpleInput ... etc -->\\r\\n    <div class='parameter__mode' [ngSwitch]=\\\"port.meta.mode\\\">\\r\\n        \\r\\n        <!-- Simple Input Template -->\\r\\n        <div *ngSwitchCase=\\\"PortTypes.SimpleInput\\\">\\r\\n            <input [(ngModel)]='port.value' name='port.name' placeholder='Enter Value: Defaults to {{port.default}}'> \\r\\n        </div>\\r\\n\\r\\n        <div *ngSwitchCase=\\\"PortTypes.Slider\\\">\\r\\n            <!-- <input  placeholder='Enter Value: Defaults to {{port.default}}'> -->\\r\\n            <input [(ngModel)]='port.value' value='port.value' placeholder='{{port.default}}' disabled>\\r\\n            <input [(ngModel)]='port.value' name='port.name' placeholder='{{port.default}}' type=\\\"range\\\">\\r\\n        </div>\\r\\n\\r\\n        <div *ngSwitchCase=\\\"PortTypes.Checkbox\\\">\\r\\n            <input *ngSwitchCase=\\\"PortTypes.Checkbox\\\" [(ngModel)]='port.value' name='port.name' type=\\\"checkbox\\\">\\r\\n        </div>\\r\\n\\r\\n        <div *ngSwitchCase=\\\"PortTypes.URL\\\">\\r\\n            <input [(ngModel)]='port.value' name='port.name' placeholder='Enter URL: Defaults to {{port.default}}'> \\r\\n        </div>\\r\\n        <div *ngSwitchCase=\\\"PortTypes.File\\\">\\r\\n            <input (change)=\\\"onFileChange($event)\\\" type=\\\"file\\\">\\r\\n        </div>\\r\\n    \\r\\n        <!-- TODO1: SwitchCase for remaining PortTypes -->\\r\\n        <!-- TODO2: Connect values to port.value -->\\r\\n    \\r\\n    </div>\\r\\n\\r\\n</div>\"","module.exports = \".container {\\n  margin: 5px 0px; }\\n\\n.container--parameter {\\n  display: flex;\\n  flex-direction: row;\\n  flex-wrap: wrap; }\\n\\n.parameter__name {\\n  width: 100px;\\n  height: auto;\\n  word-wrap: break-word; }\\n\"","import { Component, Input, Output, EventEmitter } from '@angular/core';\r\nimport { IPortInput, InputType } from '@models/port';\r\n\r\n@Component({\r\n  selector: 'input-port-viewer',\r\n  templateUrl: './input-port-viewer.component.html',\r\n  styleUrls: ['./input-port-viewer.component.scss']\r\n})\r\nexport class InputPortViewerComponent{\r\n\r\n    @Input() port: IPortInput;\r\n    PortTypes = InputType;\r\n    \r\n    constructor(){ }\r\n\r\n    onFileChange(event){\r\n      this.port.value = event.target.files[0];\r\n    }\r\n\r\n}","module.exports = \"<h2>{{flowchart.name}}</h2>\\r\\n<p>{{flowchart.description}}</p>\\r\\n<hr>\\r\\n\\r\\n<!-- <p>Edit the parameters of your flowchart here. These parameters are visible in the viewer when you share your flowchart.</p> -->\\r\\n<procedure-input-viewer *ngFor=\\\"let prod of startNode.procedure\\\" [prod]=\\\"prod\\\"></procedure-input-viewer>\\r\\n\"","module.exports = \".container {\\n  background-color: transparent;\\n  width: auto;\\n  height: auto;\\n  display: flex;\\n  flex-direction: column;\\n  flex-wrap: wrap; }\\n\\nh2 {\\n  color: #505050;\\n  text-align: left;\\n  padding-left: 15px;\\n  font-size: 12px;\\n  line-height: 16px; }\\n\\np {\\n  color: #505050;\\n  text-align: left;\\n  padding-left: 15px;\\n  font-size: 12px;\\n  line-height: 14px; }\\n\\nhr {\\n  border-top: 2px solid #efefef; }\\n\\ndiv[class^=\\\"container--\\\"] {\\n  display: flex;\\n  flex-direction: column;\\n  margin: 10px 0px; }\\n\"","import { Component, Input } from '@angular/core';\r\nimport { INode } from '@models/node';\r\nimport { IFlowchart } from '@models/flowchart';\r\n\r\n@Component({\r\n  selector: 'parameter-viewer',\r\n  templateUrl: './parameter-viewer.component.html',\r\n  styleUrls: ['./parameter-viewer.component.scss']\r\n})\r\nexport class ParameterViewerComponent{\r\n  @Input() flowchart: IFlowchart;\r\n  @Input() startNode: INode;\r\n  @Input() endNode: INode;\r\n}\r\n\r\n\r\n","module.exports = \"<div class='container'>\\r\\n    <div class='container--parameter'>\\r\\n        <input [class.disabled-input]='true' value='{{prod.args[prod.argCount-2].value||\\\"Undefined\\\"}}:' disabled>\\r\\n        <!--\\r\\n        <select name={{prod.id}}_type [(ngModel)]=\\\"prod.meta.inputMode\\\">\\r\\n            <option \\r\\n                *ngFor=\\\"let ptype of PortTypesArr\\\" \\r\\n                [value]=\\\"PortTypes[ptype]\\\" \\r\\n                [selected]=\\\"prod.meta.inputMode == ptype\\\">{{ptype}}</option>\\r\\n        </select>\\r\\n        -->\\r\\n        <ng-container class='parameter__name' [ngSwitch]=\\\"prod.meta.inputMode\\\">\\r\\n            <!--\\r\\n\\r\\n            <div *ngSwitchCase=\\\"PortTypes.SimpleInput\\\">\\r\\n                <input [(ngModel)]='port.value' name='port.name' placeholder='Enter Value: Defaults to {{port.default}}'> \\r\\n            </div>\\r\\n\\r\\n            <div *ngSwitchCase=\\\"PortTypes.Slider\\\">\\r\\n                <input [(ngModel)]='port.value' value='port.value' placeholder='{{port.default}}' disabled>\\r\\n                <input [(ngModel)]='port.value' name='port.name' placeholder='{{port.default}}' type=\\\"range\\\">\\r\\n            </div>\\r\\n\\r\\n            <div *ngSwitchCase=\\\"PortTypes.Checkbox\\\">\\r\\n                <input *ngSwitchCase=\\\"PortTypes.Checkbox\\\" [(ngModel)]='port.value' name='port.name' type=\\\"checkbox\\\">\\r\\n            </div>\\r\\n\\r\\n            <div *ngSwitchCase=\\\"PortTypes.URL\\\">\\r\\n                <input [(ngModel)]='port.value' name='port.name' placeholder='Enter URL: Defaults to {{port.default}}'> \\r\\n            </div>\\r\\n            <div *ngSwitchCase=\\\"PortTypes.File\\\">\\r\\n                <input (change)=\\\"onFileChange($event)\\\" type=\\\"file\\\">\\r\\n            </div>\\r\\n        \\r\\n            -->\\r\\n\\r\\n            <input *ngSwitchCase=\\\"PortTypes.SimpleInput\\\" [(ngModel)]='prod.args[prod.argCount-1].value' \\r\\n            placeholder='{{prod.args[prod.argCount-1].default}}'\\r\\n            size={{prod.args[prod.argCount-1].value?.length||prod.args[prod.argCount-1].default.length}}>\\r\\n            \\r\\n            <ng-container *ngSwitchCase=\\\"PortTypes.Slider\\\">\\r\\n                <mat-slider\\r\\n                    [(ngModel)]='prod.args[prod.argCount-1].value'\\r\\n                    thumbLabel\\r\\n                    tickInterval=\\\"auto\\\"\\r\\n                    min={{prod.args[prod.argCount-1].min||0}}\\r\\n                    max={{prod.args[prod.argCount-1].max||100}}></mat-slider>\\r\\n                <input [class.disabled-input]='true' [(ngModel)]='prod.args[prod.argCount-1].value' size={{prod.args[prod.argCount-1].value?.length||1}} disabled>\\r\\n\\r\\n\\r\\n                <!--\\r\\n                <input [(ngModel)]='prod.args[prod.argCount-1].value' name='prod.args[prod.argCount-1].value' type=\\\"range\\\" placeholder='{{prod.args[prod.argCount-1].default}}'>\\r\\n                <input [(ngModel)]='prod.args[prod.argCount-1].value' value='prod.args[prod.argCount-1].value'  placeholder='{{prod.args[prod.argCount-1].default}}' disabled>\\r\\n                -->\\r\\n            </ng-container>\\r\\n            <input *ngSwitchCase=\\\"PortTypes.Checkbox\\\" [(ngModel)]='prod.args[prod.argCount-1].value' type=\\\"checkbox\\\">\\r\\n            <input *ngSwitchCase=\\\"PortTypes.URL\\\" [(ngModel)]='prod.args[prod.argCount-1].value' placeholder='Enter URL: Defaults to {{prod.args[prod.argCount-1].default}}'>\\r\\n            <input *ngSwitchCase=\\\"PortTypes.File\\\" (change)=\\\"onFileChange($event)\\\" type=\\\"file\\\">\\r\\n        </ng-container>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n\"","module.exports = \".container {\\n  display: block;\\n  margin: 5px 0px 0px 5px;\\n  width: 100%; }\\n\\n.container--parameter {\\n  display: inline-block;\\n  flex-direction: row;\\n  flex-wrap: wrap;\\n  bottom: 0px;\\n  padding-bottom: 5px;\\n  border-bottom: 1px solid #efefef;\\n  border-left: 1px solid #efefef;\\n  width: 100%; }\\n\\n.container--input {\\n  display: inline-flex;\\n  flex-direction: row; }\\n\\ninput {\\n  color: #505050;\\n  background-color: gainsboro;\\n  border: none;\\n  border-bottom: 1px solid #505050;\\n  margin-left: 5px;\\n  vertical-align: bottom; }\\n\\ninput.disabled-input {\\n    border-bottom: none; }\\n\\n.parameter__name {\\n  display: inline-block;\\n  flex-direction: row;\\n  flex-wrap: wrap;\\n  width: 100px; }\\n\\nmat-slider {\\n  width: 300px; }\\n\"","import { Component, Input, Output, EventEmitter } from '@angular/core';\r\nimport { IProcedure } from '@models/procedure';\r\nimport { InputType } from '@models/port';\r\n\r\n@Component({\r\n  selector: 'procedure-input-viewer',\r\n  templateUrl: './procedure-input-viewer.component.html',\r\n  styleUrls: ['./procedure-input-viewer.component.scss']\r\n})\r\nexport class procedureInputViewerComponent{\r\n\r\n    @Input() prod: IProcedure;\r\n    @Output() delete = new EventEmitter();\r\n    PortTypes = InputType;\r\n    \r\n    constructor(){ }\r\n\r\n    editOptions(): void{ }\r\n\r\n    onFileChange(event){\r\n      this.prod.args[this.prod.args.length -1] = event.target.files[0];\r\n    }\r\n\r\n}","export { ModuleAware } from \"./module-aware.decorator\";\r\nexport { ProcedureTypesAware } from \"./prodtypes-aware.decorator\";\r\nexport { ViewerTypesAware } from \"./viewertypes-aware.decorator\";\r\nexport { PortTypesAware } from \"./porttypes-aware.decorator\"; ","import { Injectable } from '@angular/core';\r\n\r\nimport { IModule, IFunction } from '@models/procedure';\r\nimport { IArgument } from '@models/code';\r\nimport * as Modules from '@modules';\r\n\r\n// todo: bug fix for defaults\r\nfunction extract_params(func: Function): [IArgument[], boolean] {\r\n    let fnStr = func.toString().replace( /((\\/\\/.*$)|(\\/\\*[\\s\\S]*?\\*\\/))/mg, '');\r\n    \r\n    let result = fnStr.slice(fnStr.indexOf('(')+1, fnStr.indexOf(')')).split(\",\")//.match( /([^\\s,]+)/g);\r\n    if(result === null || result[0]==\"\"){\r\n         result = [];\r\n    }\r\n    let final_result = result.map(function(r){ \r\n        r = r.trim();\r\n        let r_value = r.split(\"=\");\r\n\r\n        if (r_value.length == 1){\r\n            return { name: r_value[0].trim(), value: undefined, default: 0}\r\n        }\r\n        else{\r\n            return { name: r_value[0].trim(), value: undefined, default: 0 }\r\n        }\r\n\r\n    });\r\n    let hasReturn = true;\r\n    if (fnStr.indexOf(\"return\") === -1 || fnStr.indexOf(\"return;\") !== -1){\r\n        hasReturn = false;\r\n    }\r\n    return [final_result, hasReturn];\r\n}\r\n\r\n\r\nexport function ModuleAware(constructor: Function) {\r\n    let module_list = [];\r\n    for( let m_name in Modules ){\r\n        if (m_name[0] == '_' || m_name == 'gs' || m_name == 'gsConstructor'){\r\n            continue\r\n        }\r\n\r\n        let modObj = <IModule>{};\r\n        modObj.module = m_name;\r\n        modObj.functions = [];\r\n        \r\n        for( let fn_name of Object.keys(Modules[m_name])){\r\n            \r\n            let func = Modules[m_name][fn_name];\r\n\r\n            let fnObj = <IFunction>{};\r\n            fnObj.module = m_name;\r\n            fnObj.name = fn_name;\r\n            fnObj.argCount = func.length;\r\n            let args = extract_params(func);\r\n            fnObj.args = args[0];\r\n            fnObj.hasReturn = args[1];\r\n            modObj.functions.push(fnObj);\r\n        }\r\n        module_list.push(modObj);\r\n    }\r\n\r\n    constructor.prototype.Modules = module_list;\r\n}","import { InputType } from '@models/port';\r\n\r\nexport function PortTypesAware(constructor: Function) {\r\n    constructor.prototype.PortTypes = InputType;\r\n\r\n    // array form\r\n    const keys = Object.keys(InputType);\r\n    constructor.prototype.PortTypesArr = keys.slice(keys.length / 2);\r\n}","import { ProcedureTypes } from '@models/procedure';\r\n\r\nexport function ProcedureTypesAware(constructor: Function) {\r\n    constructor.prototype.ProcedureTypes = ProcedureTypes;\r\n\r\n    // array form\r\n    const keys = Object.keys(ProcedureTypes);\r\n    constructor.prototype.ProcedureTypesArr = keys.slice(keys.length / 2);\r\n}","import { OutputType } from '@models/port';\r\n\r\nexport function ViewerTypesAware(constructor: Function) {\r\n    constructor.prototype.ViewerTypes = OutputType;\r\n\r\n    // array form\r\n    const keys = Object.keys(OutputType);\r\n    constructor.prototype.ViewerTypesArr = keys.slice(keys.length / 2);\r\n}","export * from './mobfile-reader.directive'; ","/*\r\n *\tAdding this to an HTML5 input element\r\n *\tallows for the file being read to be converted into a Mobius \r\n *\tFlowchart\r\n * \r\n */\r\nimport { Directive, ElementRef, Input, Output, HostBinding, HostListener, EventEmitter } from '@angular/core';\r\nimport * as CircularJSON from 'circular-json';\r\n\r\n@Directive({\r\n\tselector: \"[mbFileReader]\"\r\n})\r\nexport class MbFileReaderDirective { \r\n\r\n\t@Input() data: any = {};\r\n\t@Output() load = new EventEmitter();\r\n\r\n\tconstructor(private el: ElementRef){ }\r\n\r\n\t@HostListener(\"change\")\r\n\tonFileChange() {\r\n\t\tlet f = this.el.nativeElement.files[0];\r\n\t\tif (f) {\r\n\t\t    var reader = new FileReader();\r\n\t\t\t\treader.readAsText(f, \"UTF-8\");\r\n\t\t\t\tlet ins = this;\r\n\t\t    reader.onload = function (evt) {\r\n\t\t\t\t\t\tlet fileString: string = evt.target[\"result\"];\r\n\t\t        ins.load_flowchart_from_string(fileString);\r\n\t\t    }\r\n\t\t    reader.onerror = function (evt) {\r\n\t\t        console.log(\"Error reading file\");\r\n\t\t    }\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t//\r\n\t// Input: string\r\n\t// Output: MobiusFile DS\r\n\t//  \r\n\t//\r\n\tprivate load_flowchart_from_string(fileString: string): void{\r\n\t  let _this = this;\r\n\t  let jsonData: {language: string, flowchart: JSON, modules: JSON};\r\n\t  let flowchart: any;// IFlowchart;\r\n\t  \r\n\t  try{\r\n\t\t\tlet data = CircularJSON.parse(fileString);\r\n\t\t\tthis.load.emit(data);\r\n\t\t\t// this.data.flowchart = data.flowchart; \r\n\t\t\t// this.data.modules = data.modules;\r\n\t\t\t// this.data.language = data.language;\r\n\r\n\t    // this.update_code_generator(CodeFactory.getCodeGenerator(data[\"language\"]));\r\n\t    //TODO: this.update_modules();\r\n\r\n\t    //flowchart = FlowchartReader.read_flowchart_from_data(data[\"flowchart\"]);\r\n\t    // TODO: select a node\r\n\t  }\r\n\t  catch(err){\r\n\t    console.error(\"Mob-file-reader error\", err);\r\n\t  }\r\n\r\n\t}\r\n\r\n\r\n}","import { Directive, ElementRef, Input, Output, HostBinding, HostListener, EventEmitter } from '@angular/core';\r\nimport * as CircularJSON from 'circular-json';\r\n\r\n@Directive({\r\n\tselector: \"[autogrow]\"\r\n})\r\nexport class autogrowDirective { \r\n\r\n    constructor(private el: ElementRef){ \r\n\t}\r\n    \r\n\t@HostListener(\"keyup\")\r\n\tonKeyUp() {\r\n        this.el.nativeElement.style.height = \"5px\";\r\n        this.el.nativeElement.style.height = (this.el.nativeElement.scrollHeight)+\"px\";\r\n\t}\r\n\t\r\n\t@HostListener(\"keydown\")\r\n\tonKeyDown() {\r\n        this.el.nativeElement.style.height = \"5px\";\r\n        this.el.nativeElement.style.height = (this.el.nativeElement.scrollHeight)+\"px\";\r\n\t}\r\n}","export * from './autogrow.directive';","import { INode, NodeUtils } from '@models/node';\r\nimport { IProcedure, ProcedureTypes, IFunction } from '@models/procedure';\r\nimport { IPortInput } from '@models/port';\r\nimport { Observable } from 'rxjs';\r\nimport * as circularJSON from 'circular-json';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Input } from '@angular/core';\r\nimport { promise } from 'protractor';\r\nimport { IEdge } from '@models/edge';\r\nimport * as gs from 'gs-json';\r\n\r\nimport { gsConstructor } from '@modules';\r\nimport { _parameterTypes } from '@modules';\r\n\r\n\r\nexport class CodeUtils {\r\n\r\n    static getProcedureCode(prod: IProcedure, existingVars: string[], addProdArr: Boolean): string {\r\n        if(prod.enabled === false) return '';\r\n\r\n        prod.hasError = false;\r\n\r\n        const codeStr: string[] = [];\r\n        const args = prod.args;\r\n        const prefix = args.hasOwnProperty('0') && existingVars.indexOf(args[0].value) === -1 ? 'let ' : '';\r\n        if (addProdArr && prod.type != ProcedureTypes.Else && prod.type != ProcedureTypes.Elseif){\r\n            codeStr.push(`__params__.currentProcedure[0] = \"${prod.ID}\";`);\r\n        }\r\n\r\n        switch ( prod.type ) {\r\n            case ProcedureTypes.Variable:\r\n                if (args[0].value.indexOf('__params__') != -1 || args[1].value.indexOf('__params__') != -1) throw new Error(\"Unexpected Identifier\");\r\n                codeStr.push(`${prefix}${args[0].value} = ${args[1].value};`);\r\n                if (prefix === 'let '){\r\n                    existingVars.push(args[0].value)\r\n                }\r\n                break;\r\n\r\n            case ProcedureTypes.If:\r\n                if (args[0].value.indexOf('__params__') != -1) throw new Error(\"Unexpected Identifier\");\r\n                codeStr.push(`if (${args[0].value}){`);\r\n                for (let p of prod.children){\r\n                    codeStr.push(CodeUtils.getProcedureCode(p, existingVars, addProdArr));\r\n                }\r\n                codeStr.push(`}`)\r\n                break;\r\n\r\n            case ProcedureTypes.Else:\r\n                codeStr.push(`else {`);\r\n                for (let p of prod.children){\r\n                    codeStr.push(CodeUtils.getProcedureCode(p, existingVars, addProdArr));\r\n                }\r\n                codeStr.push(`}`)\r\n                break;\r\n\r\n            case ProcedureTypes.Elseif:\r\n                if (args[0].value.indexOf('__params__') != -1) throw new Error(\"Unexpected Identifier\");\r\n                codeStr.push(`else if(${args[0].value}){`);\r\n                for (let p of prod.children){\r\n                    codeStr.push(CodeUtils.getProcedureCode(p, existingVars, addProdArr));\r\n                }\r\n                codeStr.push(`}`)\r\n                break;\r\n\r\n            case ProcedureTypes.Foreach:\r\n                //codeStr.push(`for (${prefix} ${args[0].value} of [...Array(${args[1].value}).keys()]){`);\r\n                if (args[0].value.indexOf('__params__') != -1) throw new Error(\"Unexpected Identifier\");\r\n                codeStr.push(`for (${prefix} ${args[0].value} of ${args[1].value}){`);\r\n                for (let p of prod.children){\r\n                    codeStr.push(CodeUtils.getProcedureCode(p, existingVars, addProdArr));\r\n                }\r\n                codeStr.push(`}`)\r\n                break;\r\n\r\n            case ProcedureTypes.While:\r\n                if (args[0].value.indexOf('__params__') != -1) throw new Error(\"Unexpected Identifier\");\r\n                codeStr.push(`while (${args[0].value}){`);\r\n                for (let p of prod.children){\r\n                    codeStr.push(CodeUtils.getProcedureCode(p, existingVars, addProdArr));\r\n                }\r\n                codeStr.push(`}`)\r\n                break;\r\n\r\n            case ProcedureTypes.Break:\r\n                codeStr.push(`break;`);\r\n                break;\r\n                \r\n            case ProcedureTypes.Continue:\r\n                codeStr.push(`continue;`);\r\n                break;\r\n\r\n            case ProcedureTypes.Function:\r\n                const argValues = args.slice(1).map((arg)=>{\r\n                    // if __params__ is present in the value of the argument, throw unexpected identifier\r\n                    if (arg.name == _parameterTypes.input) { \r\n                        console.log(arg.value, arg.default);\r\n                        let val = arg.value || arg.default; return val; };\r\n                    if (arg.value && arg.value.indexOf('__params__') != -1) throw new Error(\"Unexpected Identifier\");\r\n                    if (arg.name == _parameterTypes.constList) return \"__params__.constants\";\r\n                    if (arg.name == _parameterTypes.model) return \"__params__.model\";\r\n                    if (arg.value && arg.value.substring(0,1) == '@') {\r\n                        if (prod.meta.module.toUpperCase() == 'QUERY' && prod.meta.name.toUpperCase() == 'SET' && arg.name.toUpperCase() == 'STATEMENT') \r\n                            return '\"'+arg.value.replace(/\"/g,\"'\")+'\"';\r\n                        return '__modules__.Query.get( __params__.model,\"'+arg.value.replace(/\"/g,\"'\")+'\" )';\r\n                    }\r\n                    //else if (arg.name.indexOf('__') != -1) return '\"'+args[args.indexOf(arg)+1].value+'\"';\r\n                    return arg.value;\r\n                }).join(',');\r\n                const fnCall: string = `__modules__.${prod.meta.module}.${prod.meta.name}( ${argValues} )`;\r\n                if ( prod.meta.module.toUpperCase() == 'OUTPUT'){\r\n                    codeStr.push(`return ${fnCall};`);\r\n                } else if (args[0].name == '__none__'){\r\n                    codeStr.push(`${fnCall};`);\r\n                } else {\r\n                    codeStr.push(`${prefix}${args[0].value} = ${fnCall};`);\r\n                    if (prefix === 'let '){\r\n                        existingVars.push(args[0].value)\r\n                    }\r\n                }\r\n                break;\r\n            case ProcedureTypes.Imported:\r\n                //('args: ',args)\r\n                const argsVals = args.slice(1).map((arg)=>arg.value).join(',');\r\n                const fn: string = `${prod.meta.name}( ${argsVals} )`\r\n                codeStr.push(`${prefix}${args[0].value} = ${fn};`);\r\n                if (prefix === 'let '){\r\n                    existingVars.push(args[0].value)\r\n                }\r\n                break;\r\n\r\n        }\r\n        if(prod.print) {\r\n            codeStr.push(`console.log('${prod.args[0].value}:',${prod.args[0].value})`);\r\n        }\r\n        return codeStr.join('\\n');\r\n    }\r\n\r\n\r\n    static loadFile(f){\r\n        let stream = Observable.create(observer => {\r\n          let request = new XMLHttpRequest();\r\n          \r\n          request.open('GET', f.download_url);\r\n          request.onload = () => {\r\n              if (request.status === 200) {\r\n                  const f = circularJSON.parse(request.responseText);\r\n                  observer.next(f);\r\n                  observer.complete();\r\n              } else {\r\n                  observer.error('error happened');\r\n              }\r\n          };\r\n      \r\n          request.onerror = () => {\r\n          observer.error('error happened');\r\n          };\r\n          request.send();\r\n        });\r\n        \r\n        stream.subscribe(loadeddata => {\r\n          return loadeddata\r\n        });\r\n    }\r\n\r\n    static mergeInputs(models): any{\r\n        var result = new gs.Model();\r\n        for (let model of models){\r\n            if (!model || model.constructor != gsConstructor) continue;\r\n            result.merge(model);\r\n        }\r\n        return result;\r\n    }\r\n\r\n    static async getInputValue(inp: IPortInput, node: INode): Promise<string>{\r\n        var input: any;\r\n        if (node.type == 'start' || inp.edges.length == 0){\r\n            input = new gs.Model();\r\n        } else {\r\n            input = CodeUtils.mergeInputs(inp.edges.map(edge=>{ return edge.source.value}));\r\n            /*\r\n            if (input.constructor === gsConstructor) {\r\n                input = `new __MODULES__.gs.Model(${input.toJSON()})`\r\n            } else {\r\n                // do nothing\r\n            }\r\n            */\r\n        }\r\n        return input;\r\n    }\r\n\r\n    public static async getNodeCode(node: INode, addProdArr = false): Promise<string> {\r\n        node.hasError = false;\r\n        const codeStr = [];\r\n        const varsDefined: string[] = [];\r\n        // input initializations\r\n        if (addProdArr){\r\n            var input = await CodeUtils.getInputValue(node.input, node);\r\n            node.input.value = input;\r\n        }\r\n\r\n        if (node.type =='start'){\r\n            codeStr.push('__params__.constants = {};\\n')\r\n        }\r\n        // procedure\r\n        for (let prod of node.procedure){\r\n            codeStr.push(CodeUtils.getProcedureCode(prod, varsDefined, addProdArr) );\r\n        };\r\n        if (node.type == 'end' && node.procedure.length > 0){\r\n            return `{\\n${codeStr.join('\\n')}\\n}`;\r\n        } \r\n        return `{\\n${codeStr.join('\\n')}\\nreturn __params__.model;\\n}`;\r\n        \r\n\r\n        //return `{\\n${codeStr.join('\\n')}\\nreturn result;\\n}`;\r\n        //return `/*    ${node.name.toUpperCase()}    */\\n\\n{\\n${codeStr.join('\\n')}\\nreturn ${node.output.name};\\n}`;\r\n\r\n\r\n    }\r\n    \r\n    static async getFunctionString(func: IFunction): Promise<string>{\r\n        let fullCode = '';\r\n        let fnCode = `function ${func.name}(${func.args.map(arg=>{return arg.name}).join(',')}){\\nvar merged;\\nlet __params__={\"currentProcedure\": [''],\"model\":{}};\\n`;\r\n        for (let node of func.module.nodes){\r\n            let code =  await CodeUtils.getNodeCode(node, false)\r\n            fullCode += `function ${node.id}(__params__, ${func.args.map(arg=>{return arg.name}).join(',')})` + code + `\\n\\n`;\r\n            if (node.type ==='start'){\r\n                //fnCode += `let result_${node.id} = ${node.id}(__params__);\\n`\r\n                fnCode += `let result_${node.id} = __params__.model;\\n`\r\n            } else if (node.input.edges.length == 1) {\r\n                fnCode += `__params__.model = JSON.parse(JSON.stringify(result_${node.input.edges[0].source.parentNode.id}));\\n`\r\n                fnCode += `let result_${node.id} = ${node.id}(__params__, ${func.args.map(arg=>{return arg.name}).join(',')});\\n`\r\n            } else {\r\n                fnCode += `merged = mergeInputs([${node.input.edges.map((edge)=>'result_'+edge.source.parentNode.id).join(',')}]);\\n`;\r\n                fnCode += `__params__.model = merged;\\n`\r\n                fnCode += `let result_${node.id} = ${node.id}(__params__, ${func.args.map(arg=>{return arg.name}).join(',')});\\n`\r\n            }\r\n            /*\r\n            } else if (node.input.edges.length == 1) {\r\n                fnCode += `let result_${node.id} = ${node.id}(result_${node.input.edges[0].source.parentNode.id});\\n`\r\n            } else {\r\n                fnCode += `merged = mergeResults([${node.input.edges.map((edge)=>'result_'+edge.source.parentNode.id).join(',')}]);\\n`;\r\n                fnCode += `let result_${node.id} = ${node.id}(merged);\\n`\r\n\r\n\r\n            */\r\n            if (node.type === 'end'){\r\n                fnCode += `return result_${node.id};\\n`;\r\n            }\r\n            //fnCode += `console.log(result_${node.id});\\n`;\r\n        }\r\n        fnCode += '}\\n\\n'\r\n        fullCode += fnCode\r\n        //console.log(fullCode)\r\n        return fullCode\r\n    }\r\n\r\n}","export class ExecuteUtils{\r\n    \r\n}","export { IArgument } from './argument.interface';\r\nexport { CodeUtils } from './code.utils';\r\nexport { ExecuteUtils } from './execute.utils';","import { IFlowchart } from './flowchart.interface';\r\nimport { NodeUtils, INode } from '@models/node';\r\nimport { NgModuleFactoryLoader } from '@angular/core';\r\n\r\nexport class FlowchartUtils{\r\n    \r\n    public static newflowchart(): IFlowchart{\r\n        const flw: IFlowchart = { \r\n            name: \"new_flowchart\",\r\n            description: '',\r\n            language: \"js\",\r\n            meta: {\r\n                selected_nodes: [0]\r\n            },\r\n            nodes: [  NodeUtils.getStartNode(), NodeUtils.getEndNode()  ],\r\n            edges: [],\r\n            functions: [],\r\n            ordered: false\r\n        }\r\n\r\n        return flw;\r\n    }\r\n\r\n    static checkNode(nodeOrder: INode[], node: INode, enabled: boolean){\r\n        if (node.hasExecuted){\r\n            return\r\n        } else if (node.type === 'start' ){\r\n            nodeOrder.push(node)\r\n        } else {\r\n            for (let edge of node.input.edges){\r\n                if (!edge.source.parentNode.hasExecuted){\r\n                    return\r\n                }\r\n            }\r\n            nodeOrder.push(node)\r\n        }\r\n        node.hasExecuted = true;\r\n        node.enabled = enabled\r\n        for (let edge of node.output.edges){\r\n            FlowchartUtils.checkNode(nodeOrder, edge.target.parentNode, enabled);\r\n        }\r\n    }\r\n\r\n    public static orderNodes(flw: IFlowchart){\r\n        var startNode = undefined;\r\n        for (let node of flw.nodes){\r\n            if (node.type === 'start'){\r\n                startNode = node;\r\n            }\r\n            node.hasExecuted = false;\r\n        }\r\n        var nodeOrder = [];\r\n        FlowchartUtils.checkNode(nodeOrder, startNode, true);\r\n        if (nodeOrder.length < flw.nodes.length){\r\n            for (let node of flw.nodes){\r\n                if (node.type != 'start' && node.input.edges.length == 0){\r\n                    FlowchartUtils.checkNode(nodeOrder, node, false);\r\n                }\r\n            }\r\n        }\r\n        flw.nodes = nodeOrder;\r\n        flw.ordered = true;\r\n    }\r\n}\r\n","export { IFlowchart } from \"./flowchart.interface\";\r\nexport { FlowchartUtils } from \"./flowchart.utils\";","export { INode } from './node.interface';\r\nexport { NodeUtils } from './node.utils';","import { INode } from './node.interface';\r\nimport { ProcedureTypes, IFunction, IProcedure } from '@models/procedure';\r\nimport { PortType, InputType, OutputType, PortUtils } from '@models/port';\r\nimport { not } from '@angular/compiler/src/output/output_ast';\r\nimport * as circularJSON from 'circular-json';\r\nimport { IdGenerator } from '@utils';\r\nimport { templateJitUrl } from '@angular/compiler';\r\n\r\nexport abstract class NodeUtils{\r\n\r\n    static getNewNode(): INode{\r\n        let node: INode = <INode>{\r\n            name: \"Node\", \r\n            id: IdGenerator.getNodeID(),\r\n            position: {x: 0, y: 0}, \r\n            enabled: true,\r\n            type: '',\r\n            procedure: [],\r\n            state: {\r\n                procedure: [], \r\n                input_port: undefined, \r\n                output_port: undefined\r\n            },\r\n            input: PortUtils.getNewInput(),\r\n            output: PortUtils.getNewOutput()\r\n        }\r\n        node.input.parentNode = node;\r\n        node.output.parentNode = node;\r\n        \r\n        return node;\r\n    };\r\n\r\n    static getStartNode(): INode{\r\n        let node = NodeUtils.getNewNode();\r\n        node.name = 'Start';\r\n        node.type = 'start';\r\n        node.position= {x: 400, y: 0};\r\n        return node;\r\n    };\r\n\r\n    static getEndNode(): INode{\r\n        let node = NodeUtils.getNewNode();\r\n        node.name = 'End';\r\n        node.type = 'end';\r\n        node.position= {x: 400, y: 400};\r\n        return node;\r\n    };\r\n    \r\n\r\n    static deselect_procedure(node: INode){\r\n        for (let prod of node.state.procedure){\r\n            prod.selected = false;\r\n        }\r\n        node.state.procedure = [];\r\n    }\r\n\r\n\r\n    static rearrangeSelected(prodList: IProcedure[], tempList: IProcedure[], prods: IProcedure[]){\r\n        for (let pr of prods){\r\n            if (!pr.selected) {\r\n                if (pr.children) NodeUtils.rearrangeSelected(prodList, tempList, pr.children)\r\n                continue\r\n            };\r\n            var i = 0;\r\n            while (i < tempList.length){\r\n                if (tempList[i] === pr){\r\n                    prodList.push(pr)\r\n                    tempList.splice(i,1)\r\n                    break;\r\n                }\r\n                i += 1;\r\n            }\r\n            if (pr.children) NodeUtils.rearrangeSelected(prodList, tempList, pr.children)\r\n        }\r\n    }\r\n\r\n    static select_procedure(node: INode, procedure: IProcedure, ctrl: boolean){\r\n        if (!procedure){\r\n            return\r\n        }\r\n        if (ctrl){\r\n            var selIndex = 0;\r\n            var selected = false;\r\n            while (selIndex < node.state.procedure.length){\r\n                if (node.state.procedure[selIndex] === procedure){\r\n                    selected = true;\r\n                    node.state.procedure.splice(selIndex, 1)\r\n                    procedure.selected = false;\r\n                    break\r\n                }\r\n                selIndex += 1;\r\n            }\r\n            if (!selected){\r\n                procedure.selected = true\r\n                node.state.procedure.push(procedure)\r\n                let tempArray = node.state.procedure.splice(0, node.state.procedure.length);\r\n                NodeUtils.rearrangeSelected(node.state.procedure, tempArray, node.procedure)\r\n                console.log(node.state.procedure)\r\n            }\r\n        } else {\r\n            let sel = procedure.selected\r\n            for (let prod of node.state.procedure){\r\n                prod.selected = false\r\n            }\r\n            if (sel && node.state.procedure.length === 1 && node.state.procedure[0] === procedure){\r\n                node.state.procedure = []\r\n            } else {\r\n                node.state.procedure = [procedure]\r\n                procedure.selected = true\r\n            }\r\n        }\r\n    }\r\n\r\n    static insert_procedure(node: INode, prod: IProcedure){\r\n        if (node.state.procedure[0]){\r\n            if (node.state.procedure[0].children){\r\n                node.state.procedure[0].children.push(prod);\r\n                prod.parent = node.state.procedure[0];\r\n            } else {\r\n                if (node.state.procedure[0].parent){\r\n                    prod.parent = node.state.procedure[0].parent;\r\n                    var list = prod.parent.children;\r\n                } else {\r\n                    var list = node.procedure;\r\n                }\r\n                for (let index in list){\r\n                    if (list[index].selected){\r\n                        list.splice(parseInt(index)+1, 0, prod);\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            node.procedure.push(prod);\r\n        }\r\n\r\n    }\r\n    \r\n    static add_procedure(node: INode, type: ProcedureTypes, data: IFunction ){\r\n        let prod: IProcedure = <IProcedure>{};\r\n        prod.type= type;\r\n        \r\n        NodeUtils.insert_procedure(node, prod);\r\n\r\n        // add ID to the procedure\r\n        prod.ID = IdGenerator.getProdID();\r\n        prod.enabled = true;\r\n        prod.print = false;\r\n\r\n        // select the procedure\r\n        NodeUtils.select_procedure(node, prod, false);\r\n\r\n        switch(prod.type){\r\n            case ProcedureTypes.Variable:\r\n                prod.argCount = 2;\r\n                prod.args = [ {name: 'var_name', value: undefined, default: undefined}, {name: 'value', value: undefined, default: undefined} ];\r\n                break;\r\n            \r\n            case ProcedureTypes.Foreach:\r\n                prod.argCount = 2; \r\n                prod.args = [ {name: 'i', value: undefined, default: undefined}, {name: 'arr', value: undefined, default: []} ];\r\n                prod.children = [];\r\n                break;\r\n\r\n            case ProcedureTypes.While:\r\n                prod.argCount = 1; \r\n                prod.args = [ {name: 'condition', value: undefined, default: undefined} ];\r\n                prod.children = [];\r\n                break;\r\n\r\n            case ProcedureTypes.If: \r\n            case ProcedureTypes.Elseif:\r\n                prod.argCount = 1;\r\n                prod.args = [ {name: 'condition', value: undefined, default: undefined} ];\r\n                prod.children = [];\r\n                break;\r\n\r\n            case ProcedureTypes.Else:\r\n                prod.argCount = 0;\r\n                prod.args = [];\r\n                prod.children = [];\r\n                break;\r\n\r\n            case ProcedureTypes.Break:\r\n            case ProcedureTypes.Continue:\r\n                prod.argCount = 0;\r\n                prod.args = [];\r\n                break;\r\n\r\n            case ProcedureTypes.Function:\r\n                if(!data) throw Error('No function data');\r\n                \r\n                prod.meta = { module: data.module, name: data.name, inputMode: InputType.SimpleInput};\r\n                prod.argCount = data.argCount + 1;\r\n                let returnArg = {name: 'var_name', value: undefined, default: undefined};\r\n                if (!data.hasReturn){\r\n                    returnArg = {name: '__none__', value: undefined, default: undefined}\r\n                }\r\n\r\n                // --UNSTABLE--\r\n                // changing the value of the last argument of all functions in input node to be undefined\r\n                if (node.type == 'start'){\r\n                    data.args[data.argCount-1].value = undefined\r\n                }\r\n                \r\n                prod.args = [ returnArg, ...data.args];\r\n                break;\r\n\r\n            case ProcedureTypes.Imported:\r\n                prod.meta = { module: data.module, name: data.name, inputMode: InputType.SimpleInput};\r\n                prod.argCount = data.argCount + 1;\r\n                prod.args = [ {name: 'var_name', value: undefined, default: undefined}, ...data.args];\r\n                break;\r\n        }\r\n    }\r\n\r\n    static updateNode(newNode:INode, newPos): INode{\r\n        newNode.id = IdGenerator.getNodeID();\r\n        newNode.input = PortUtils.getNewInput();\r\n        newNode.output = PortUtils.getNewOutput();\r\n        newNode.input.parentNode = newNode;\r\n        newNode.output.parentNode = newNode;\r\n        newNode.position.x = newPos.x\r\n        newNode.position.y = newPos.y\r\n        return newNode;\r\n    }\r\n\r\n    static updateID(prod: IProcedure): any{\r\n        if (prod.hasOwnProperty('children')){\r\n            prod.children.map((child: IProcedure) => {\t\r\n                NodeUtils.updateID(child);\t\r\n            });\r\n        }\r\n        prod.ID = IdGenerator.getProdID();\r\n        return prod\r\n    }\r\n\r\n    static paste_procedure(node: INode, prod: IProcedure ){\r\n        const newProd = NodeUtils.updateID(circularJSON.parse(circularJSON.stringify(prod)));\r\n        newProd.parent = undefined;\r\n        NodeUtils.insert_procedure(node, newProd);\r\n        NodeUtils.select_procedure(node, newProd, false);\r\n    }\r\n\r\n}","export { IPortInput, IPortOutput } from './port.interface';\r\nexport * from './types';\r\nexport { PortUtils } from './port.utils';","import { IPortOutput, IPortInput } from \"./port.interface\";\r\nimport { PortType, OutputType, InputType } from \"./types\";\r\nimport { IdGenerator } from \"@shared/utils\";\r\n\r\nexport class PortUtils{\r\n\r\n    static getNewInput(): IPortInput{\r\n        let inp: IPortInput = <IPortInput>{\r\n            id: IdGenerator.getId(),\r\n            name: 'input', \r\n            type: PortType.Input,\r\n            value: undefined,\r\n            default: undefined,\r\n            edges: [],\r\n            meta: {\r\n                mode: InputType.SimpleInput,\r\n                opts: {}\r\n            }\r\n        };\r\n\r\n        return inp;\r\n    };\r\n\r\n    static getNewOutput(): IPortOutput{\r\n        let oup: IPortOutput = <IPortOutput>{\r\n            id: IdGenerator.getId(),\r\n            name: 'output', \r\n            type: PortType.Output,\r\n            edges: [],\r\n            meta: {\r\n                mode: OutputType.Text, \r\n            }\r\n        }\r\n        return oup;\r\n    };\r\n\r\n}","export enum PortType{\r\n    Input, \r\n    Output\r\n}\r\n\r\nexport enum InputType{\r\n    SimpleInput, \r\n    Slider, \r\n    Checkbox,\r\n    URL, \r\n    File\r\n}\r\n\r\nexport enum OutputType{\r\n    Text, \r\n    Code\r\n}\r\n","export { IProcedure, IModule, IFunction } from './procedure.interface';\r\nexport { ProcedureTypes } from './types';","export enum ProcedureTypes {\r\n    Variable, \r\n    If, \r\n    Elseif, \r\n    Else, \r\n    Foreach, \r\n    While, \r\n    Break, \r\n    Continue,\r\n    Function,\r\n    Imported\r\n}\r\n\r\n","/*\r\n *  This module is to be imported ONLY by the AppModule\r\n *  Contains all global services\r\n * \r\n */\r\n\r\nimport { NgModule, SkipSelf, Optional } from \"@angular/core\";\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { MatSliderModule, MatCheckboxModule, MatIconModule } from '@angular/material';\r\nimport { SVGFlowchartModule } from '../../app/ngFlowchart-svg';\r\nimport { AngularSplitModule } from 'angular-split';\r\n\r\nimport { MbFileReaderDirective } from \"./directives/filesys\";\r\nimport { ExecuteComponent } from \"./components/execute/execute.component\";\r\nimport { PageNotFoundComponent } from \"./components/not-found/not-found.component\";\r\nimport { NavigationComponent } from \"./components/navigation/navigation.component\";\r\nimport { HeaderComponent } from \"./components/header/header.component\";\r\nimport { AddOutputComponent } from \"./components/add-components/add_output.component\";\r\nimport { AddNodeComponent } from \"./components/add-components/add_node.component\";\r\nimport { AddInputComponent } from \"./components/add-components/add_input.component\";\r\nimport { ParameterViewerComponent } from \"./components/parameter-viewer/parameter-viewer.component\";\r\nimport { InputPortViewerComponent } from \"./components/parameter-viewer/input-port-viewer/input-port-viewer.component\";\r\nimport { procedureInputViewerComponent } from \"./components/parameter-viewer/procedure-input-viewer/procedure-input-viewer.component\";\r\nimport { NewFileComponent, SaveFileComponent, LoadFileComponent } from './components/file';\r\n\r\nimport { MobiusViewerModule } from '../mViewer/mobius-viewer.module';\r\nimport { autogrowDirective } from \"./directives/textarea\";\r\n\r\n@NgModule({\r\n    providers: [ ],\r\n    declarations: [\r\n            MbFileReaderDirective, \r\n            autogrowDirective, \r\n            ExecuteComponent, \r\n            PageNotFoundComponent, \r\n            NavigationComponent, \r\n            HeaderComponent, \r\n            AddNodeComponent, AddInputComponent, AddOutputComponent,\r\n            ParameterViewerComponent,  InputPortViewerComponent, procedureInputViewerComponent,\r\n            NewFileComponent, SaveFileComponent, LoadFileComponent\r\n        ],\r\n    imports: [ \r\n            CommonModule, \r\n            RouterModule,\r\n            MatSliderModule, MatCheckboxModule,\r\n            SVGFlowchartModule, \r\n            MobiusViewerModule,\r\n            AngularSplitModule, \r\n            FormsModule,\r\n            MatIconModule,\r\n        ],\r\n    entryComponents: [  ],\r\n    exports: [  \r\n            FormsModule,\r\n            SVGFlowchartModule, \r\n            MobiusViewerModule,\r\n            AngularSplitModule,\r\n            MbFileReaderDirective, \r\n            autogrowDirective, \r\n            ExecuteComponent, \r\n            PageNotFoundComponent, \r\n            NavigationComponent, \r\n            HeaderComponent, \r\n            AddNodeComponent, \r\n            AddInputComponent,\r\n            AddOutputComponent,\r\n            ParameterViewerComponent,\r\n            NewFileComponent, SaveFileComponent, LoadFileComponent\r\n    ]\r\n})\r\nexport class SharedModule{\r\n    constructor(@Optional() @SkipSelf() shared: SharedModule){\r\n        /*\r\n        /// Prevents any module apart from AppModule from re-importing\r\n        if(shared){\r\n            throw new Error(\"Core Module has already been imported\");\r\n        }\r\n        */\r\n    }\r\n}","export abstract class IdGenerator{\r\n\t\r\n\tprivate static s4(): string{\r\n\t    return Math.floor((1 + Math.random()) * 0x10000)\r\n\t      .toString(16)\r\n\t      .substring(1);\r\n\t}\r\n\r\n\tstatic getId(): string{\r\n\t  return this.s4() + this.s4() + '-' + this.s4() + '-' + this.s4() + '-' +\r\n\t    this.s4() + '-' + this.s4() + this.s4() + this.s4();\r\n\t}\r\n\r\n\tstatic getNodeID():string{\r\n\t\treturn 'node_' + Math.random().toString(36).substr(2, 16);\r\n\t}\r\n\r\n\tstatic getProdID(){\r\n\t\treturn 'prod-' + Math.random().toString(36).substr(2, 16);\r\n\t}\r\n}","export * from './GUID'","//export * from './view-about/view-about.module';\r\n//export * from './view-gallery/view-gallery.module';\r\nexport * from './view-publish/view-publish.module';\r\nexport * from './view-publish/view-publish.component';\r\nexport * from './view-editor/view-editor.module';\r\nexport * from './view-editor/view-editor.component';","module.exports = \"<div class='flowchart-info'>\\r\\n\\t<input [(ngModel)]='flowchart.name' size={{flowchart.name?.length||1}}>\\r\\n\\t<textarea autogrow [(ngModel)]='flowchart.description' placeholder=\\\"flowchart description\\\"></textarea>\\r\\n</div>\\r\\n<hr>\\r\\n<div class='container--input'>\\r\\n\\t<procedure-input-editor *ngFor=\\\"let prod of node.procedure\\\" [prod]=\\\"prod\\\" ></procedure-input-editor>\\r\\n</div>\\r\\n\\t\\r\\n<!--\\r\\n<section *ngIf=\\\"node.type != 'end'\\\">\\r\\n\\t<panel-header [node]='node' [title]=\\\"'inputs'\\\"></panel-header>\\r\\n\\t<div class='container--input'>\\r\\n\\t\\t<input-port-editor [port]=\\\"node?.input\\\" ></input-port-editor>\\r\\n\\t</div>\\r\\n</section>\\r\\n<section *ngIf=\\\"node.type != 'start'\\\">\\r\\n\\t<panel-header [node]='node' [title]=\\\"'output'\\\"></panel-header>\\r\\n\\t<div class='container--output'>\\r\\n\\t\\t<output-port-editor [port]=\\\"node?.output\\\" ></output-port-editor>\\r\\n\\t</div>\\r\\n</section>\\r\\n-->\\r\\n\"","module.exports = \"div[class^=\\\"container--\\\"] {\\n  display: flex;\\n  flex-direction: column;\\n  padding-left: 10px;\\n  margin: 0px 0px; }\\n\\n.flowchart-info {\\n  display: -ms-grid;\\n  display: grid;\\n  padding-left: 10px;\\n  margin: 5px 0px;\\n  width: 100%; }\\n\\ninput {\\n  color: #505050;\\n  background-color: #fafafa;\\n  border: none;\\n  width: -webkit-fit-content;\\n  width: -moz-fit-content;\\n  width: fit-content;\\n  border-left: 1px solid gainsboro;\\n  border-bottom: 1px solid gainsboro;\\n  padding: 5px;\\n  margin-left: 3px;\\n  font-weight: 600;\\n  font-style: italic;\\n  min-width: 40px;\\n  max-width: 300px;\\n  font-size: 12px;\\n  vertical-align: bottom; }\\n\\ninput.disabled-input {\\n    border-bottom: none; }\\n\\ntextarea {\\n  color: #505050;\\n  background-color: #fafafa;\\n  border: none;\\n  border-left: 1px solid gainsboro;\\n  border-bottom: 1px solid gainsboro;\\n  padding-left: 5px;\\n  font-family: sans-serif;\\n  font-size: 12px;\\n  margin: 10px 0px 5px 3px;\\n  height: 18px;\\n  width: 90%;\\n  resize: none; }\\n\\nhr {\\n  width: inherit;\\n  border-top: 2px solid gainsboro; }\\n\"","import { Component, Input } from '@angular/core';\r\nimport { INode } from '@models/node';\r\nimport { PortType } from '@models/port';\r\nimport { IFlowchart } from '@models/flowchart';\r\n\r\n@Component({\r\n  selector: 'parameter-editor',\r\n  templateUrl: './parameter-editor.component.html',\r\n  styleUrls: ['./parameter-editor.component.scss']\r\n})\r\nexport class ParameterEditorComponent{\r\n    @Input() node: INode;\r\n    @Input() flowchart: IFlowchart;\r\n    /*\r\n    deletePort(port, index){\r\n      const porttype = port.type;\r\n\r\n      if(porttype == PortType.Input && this.node.input[index] !== undefined){\r\n          this.node.input.splice(index, 1);\r\n      }\r\n      else if(porttype == PortType.Output && this.node.output[index] !== undefined){\r\n          this.node.output.splice(index, 1);\r\n      }\r\n\r\n    }\r\n    */\r\n}\r\n\r\n\r\n","module.exports = \"<div class='container container--parameter'>\\r\\n    <input [class.disabled-input]='true' value='{{prod.args[prod.argCount-2].value||\\\"Undefined\\\"}}:' size='15' disabled>\\r\\n\\r\\n    <select name={{prod.ID}}_type [(ngModel)]=\\\"prod.meta.inputMode\\\" tabindex=\\\"-1\\\">\\r\\n        <option \\r\\n            *ngFor=\\\"let ptype of PortTypesArr\\\" \\r\\n            [value]=\\\"PortTypes[ptype]\\\" \\r\\n            [selected]=\\\"prod.meta.inputMode == ptype\\\">{{ptype}}</option>\\r\\n    </select>\\r\\n    <ng-container [ngSwitch]=\\\"prod.meta.inputMode\\\" >\\r\\n        <input *ngSwitchCase=\\\"PortTypes.SimpleInput\\\" [(ngModel)]='prod.args[prod.argCount-1].default' placeholder='Default Value' size={{prod.args[prod.argCount-1].default.length||13}}>\\r\\n\\r\\n        <div class='div--slider' *ngSwitchCase=\\\"PortTypes.Slider\\\">\\r\\n            <input [(ngModel)]='prod.args[prod.argCount-1].min' placeholder='Min' size={{prod.args[prod.argCount-1].min?.length||1}}>\\r\\n            <input [(ngModel)]='prod.args[prod.argCount-1].max' placeholder='Max' size={{prod.args[prod.argCount-1].max?.length||1}}>\\r\\n            <mat-slider\\r\\n                [(ngModel)]='prod.args[prod.argCount-1].default'\\r\\n                thumbLabel\\r\\n                tickInterval=\\\"auto\\\"\\r\\n                min={{prod.args[prod.argCount-1].min||0}}\\r\\n                max={{prod.args[prod.argCount-1].max||100}}></mat-slider>\\r\\n            <input [class.disabled-input]='true' [(ngModel)]='prod.args[prod.argCount-1].default' size={{prod.args[prod.argCount-1].default?.length||1}} disabled>\\r\\n\\r\\n        </div>\\r\\n        <input *ngSwitchCase=\\\"PortTypes.Checkbox\\\" [(ngModel)]='prod.args[prod.argCount-1].default' name='prod.args[prod.argCount-1].default' type=\\\"checkbox\\\">\\r\\n        <input *ngSwitchCase=\\\"PortTypes.URL\\\" [(ngModel)]='prod.args[prod.argCount-1].default' name='prod.args[prod.argCount-1].default' placeholder='Default URL'>\\r\\n        <input *ngSwitchCase=\\\"PortTypes.File\\\" (change)=\\\"onFileChange($event)\\\" type=\\\"file\\\">\\r\\n    </ng-container>\\r\\n\\r\\n    \\r\\n    <!--\\r\\n    <div class='parameter__name' [ngSwitch]=\\\"prod.meta.mode\\\">\\r\\n        <input *ngSwitchCase=\\\"PortTypes.SimpleInput\\\" [(ngModel)]='prod.args[prod.argCount-1].default' name='prod.args[prod.argCount-1].default' placeholder='Default Value'>\\r\\n        <div *ngSwitchCase=\\\"PortTypes.Slider\\\">\\r\\n            <input [(ngModel)]='prod.args[prod.argCount-1].default' value='prod.args[prod.argCount-1].default' disabled>\\r\\n            <input [(ngModel)]='prod.args[prod.argCount-1].default' name='prod.args[prod.argCount-1].default' type=\\\"range\\\" >\\r\\n        </div>\\r\\n        <input *ngSwitchCase=\\\"PortTypes.Checkbox\\\" [(ngModel)]='prod.args[prod.argCount-1].default' name='prod.args[prod.argCount-1].default' type=\\\"checkbox\\\">\\r\\n        <input *ngSwitchCase=\\\"PortTypes.URL\\\" [(ngModel)]='prod.args[prod.argCount-1].default' name='prod.args[prod.argCount-1].default' placeholder='Default URL'>\\r\\n        <input *ngSwitchCase=\\\"PortTypes.File\\\" (change)=\\\"onFileChange($event)\\\" type=\\\"file\\\">\\r\\n    </div>\\r\\n\\r\\n    <select name={{prod.name}}_type *ngIf=\\\"prod.parentNode.type=='start'\\\"  [(ngModel)]=\\\"prod.meta.mode\\\">\\r\\n        <option \\r\\n            *ngFor=\\\"let ptype of PortTypesArr\\\" \\r\\n            [value]=\\\"PortTypes[ptype]\\\" \\r\\n            [selected]=\\\"prod.meta.mode == ptype\\\">{{ptype}}</option>\\r\\n    </select>\\r\\n    -->\\r\\n\\r\\n</div>\\r\\n\\r\\n\"","module.exports = \".container {\\n  margin: 5px 0px; }\\n\\n.container--parameter {\\n  display: inline-block;\\n  flex-direction: row;\\n  flex-wrap: wrap;\\n  color: #505050;\\n  vertical-align: bottom;\\n  padding-bottom: 5px;\\n  border-bottom: 1px solid gainsboro;\\n  border-left: 1px solid gainsboro;\\n  width: 100%; }\\n\\nselect {\\n  color: #505050;\\n  background-color: #fafafa;\\n  border: 1px solid #505050; }\\n\\ninput {\\n  color: #505050;\\n  background-color: #fafafa;\\n  border: none;\\n  border-bottom: 1px solid #505050;\\n  margin-left: 5px;\\n  vertical-align: bottom; }\\n\\ninput.disabled-input {\\n    border-bottom: none; }\\n\\n.slider-val {\\n  color: #505050;\\n  resize: horizontal;\\n  size: 2;\\n  min-width: 1px;\\n  max-width: 300px;\\n  width: 20px; }\\n\\n.container--input {\\n  display: inline-flex;\\n  flex-direction: row; }\\n\\n.div--slider {\\n  display: inline-flex;\\n  flex-direction: row; }\\n\\n.parameter__name {\\n  width: 100px;\\n  height: auto;\\n  word-wrap: break-word; }\\n\\nmat-slider {\\n  width: 300px; }\\n\"","import { Component, Input, Output, EventEmitter } from '@angular/core';\r\nimport { IProcedure } from '@models/procedure';\r\nimport { InputType } from '@models/port';\r\nconst keys = Object.keys(InputType);\r\n\r\n@Component({\r\n  selector: 'procedure-input-editor',\r\n  templateUrl: './procedure-input-editor.component.html',\r\n  styleUrls: ['./procedure-input-editor.component.scss']\r\n})\r\nexport class procedureInputEditorComponent{\r\n\r\n    @Input() prod: IProcedure;\r\n    @Output() delete = new EventEmitter();\r\n\r\n    PortTypes = InputType;\r\n    PortTypesArr = keys.slice(keys.length / 2);\r\n    \r\n    constructor(){ }\r\n\r\n    editOptions(): void{ }\r\n\r\n    onFileChange(event){\r\n      this.prod.args[this.prod.args.length -1] = event.target.files[0];\r\n    }\r\n\r\n}","module.exports = \"<div class='container--line' \\r\\n    [class.selected]=\\\"data.selected\\\"\\r\\n    [class.error]=\\\"data.hasError\\\"\\r\\n    [class.disabled]=\\\"!data.enabled\\\"\\r\\n    [ngSwitch]=\\\"data.type\\\"\\r\\n    (click)='emitSelect($event, data)'>\\r\\n    <div class='container--item' >\\r\\n        <!-- Variable Assignment Template -->\\r\\n        <div class='line--item' *ngSwitchCase=\\\"ProcedureTypes.Variable\\\">\\r\\n            <input class='input--var'\\r\\n                [ngModel]='data.args[0].value'\\r\\n                (ngModelChange)='data.args[0].value=varMod($event)'\\r\\n                name='data.args[0].name'\\r\\n                placeholder={{data.args[0].name}}>  \\r\\n            = \\r\\n            <input class='input--arg'\\r\\n                [(ngModel)]='data.args[1].value'\\r\\n                name='data.args[1].name'\\r\\n                placeholder={{data.args[1].name}}\\r\\n                size=\\\"1\\\"\\r\\n                size={{data.args[1].value?.length||data.args[1].name.length}}>  \\r\\n            </div>\\r\\n\\r\\n        <!-- IF Template -->\\r\\n        <div class='line--item hasChildren' *ngSwitchCase=\\\"ProcedureTypes.If\\\">\\r\\n            <div class='function-text'>\\r\\n                If\\r\\n            </div>\\r\\n            ( <input class='input--arg'\\r\\n                    (cut)='stopProp($event)' (paste)='stopProp($event)'\\r\\n                    [(ngModel)]='data.args[0].value'\\r\\n                    name='data.args[0].name'\\r\\n                    placeholder={{data.args[0].name}}\\r\\n                    size={{data.args[0].value?.length||data.args[0].name.length}}>  \\r\\n                    )\\r\\n\\r\\n        </div>\\r\\n\\r\\n        <!-- ELSEIF Template -->\\r\\n        <div class='line--item hasChildren' *ngSwitchCase=\\\"ProcedureTypes.Elseif\\\">\\r\\n            <div class='function-text'>\\r\\n                Else if\\r\\n            </div>\\r\\n            \\r\\n        \\r\\n        ( <input class='input--arg'\\r\\n                (cut)='stopProp($event)' (paste)='stopProp($event)' \\r\\n                [(ngModel)]='data.args[0].value'\\r\\n                name='data.args[0].name'\\r\\n                placeholder={{data.args[0].name}}\\r\\n                size={{data.args[0].value?.length||data.args[0].name.length}}>  \\r\\n                )\\r\\n        </div>\\r\\n\\r\\n        <!-- ELSE Template -->\\r\\n        <div class='line--item hasChildren' *ngSwitchCase=\\\"ProcedureTypes.Else\\\">\\r\\n            <div class='function-text'>\\r\\n                Else\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <!-- BREAK Template -->\\r\\n        <div class='line--item' *ngSwitchCase=\\\"ProcedureTypes.Break\\\">\\r\\n            <div class='function-text'>\\r\\n                Break\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <!-- CONTINUE Template -->\\r\\n        <div class='line--item' *ngSwitchCase=\\\"ProcedureTypes.Continue\\\">\\r\\n            <div class='function-text'>\\r\\n                Continue\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n\\r\\n    <!-- FOREACH Template -->\\r\\n        <div class='line--item hasChildren' *ngSwitchCase=\\\"ProcedureTypes.Foreach\\\">\\r\\n                <div class='function-text'>\\r\\n                    For\\r\\n                </div>\\r\\n                <input class='input--arg'\\r\\n                    (cut)='stopProp($event)' (paste)='stopProp($event)'\\r\\n                    [(ngModel)]='data.args[0].value'\\r\\n                    name='data.args[0].name'\\r\\n                    placeholder={{data.args[0].name}}\\r\\n                    size={{data.args[0].value?.length||data.args[0].name.length}}>  \\r\\n                <div class='function-text'>\\r\\n                    in\\r\\n                </div>\\r\\n                <input class='input--arg'\\r\\n                    (cut)='stopProp($event)' (paste)='stopProp($event)'\\r\\n                    [(ngModel)]='data.args[1].value'\\r\\n                    name='data.args[1].name'\\r\\n                    placeholder={{data.args[1].name}}\\r\\n                    size={{data.args[1].value?.length||data.args[1].name.length}}>  \\r\\n                    \\r\\n        </div>\\r\\n\\r\\n        <!-- WHILE Template -->\\r\\n        <div class='line--item hasChildren' *ngSwitchCase=\\\"ProcedureTypes.While\\\">\\r\\n            <div class='function-text'>\\r\\n                While\\r\\n            </div>\\r\\n            <input class='input--arg' \\r\\n                    (cut)='stopProp($event)' (paste)='stopProp($event)'\\r\\n                    [(ngModel)]='data.args[0].value'\\r\\n                    name='data.args[0].name'\\r\\n                    placeholder={{data.args[0].name}}\\r\\n                    size={{data.args[0].value?.length||data.args[0].name.length}}>  \\r\\n\\r\\n        </div>\\r\\n        \\r\\n        <!-- Function Template -->\\r\\n        <div class='line--item' *ngSwitchCase=\\\"ProcedureTypes.Function\\\">\\r\\n            <ng-container *ngIf=\\\"data.meta.module.toUpperCase() !='OUTPUT' && data.args[0].name !=='__none__'\\\">\\r\\n                <input class='input--var'\\r\\n                [ngModel]='data.args[0].value'\\r\\n                (ngModelChange)='data.args[0].value=varMod($event)'\\r\\n                (cut)='stopProp($event)' \\r\\n                (paste)='stopProp($event)'\\r\\n                placeholder={{data.args[0].name}}>  \\r\\n                = \\r\\n\\r\\n            </ng-container>\\r\\n            <div class='function-text'>{{data.meta.module}}.{{data.meta.name}} </div>\\r\\n\\r\\n            <ng-container *ngFor='let p of data.args.slice(1);let i=index'>\\r\\n                <!--\\r\\n                <input *ngIf=\\\"p.name.toUpperCase() !== '__MODEL__'; else text_template\\\" \\r\\n                \\r\\n                (cut)='stopProp($event)' \\r\\n                (paste)='stopProp($event)' \\r\\n                [(ngModel)]='p.value' \\r\\n                placeholder={{p.name}}>    \\r\\n                \\r\\n                <ng-template #text_template>\\r\\n                    model,\\r\\n                </ng-template>\\r\\n                -->\\r\\n\\r\\n                <input *ngIf=\\\"p.name.indexOf('__') == -1\\\" \\r\\n                        class='input--arg' \\r\\n                        (cut)='stopProp($event)' \\r\\n                        (paste)='stopProp($event)' \\r\\n                        [(ngModel)]='p.value' \\r\\n                        placeholder={{p.name}}\\r\\n                        size={{p.value?.length||p.name.length}}>    \\r\\n                \\r\\n                <!--\\r\\n\\r\\n                <ng-template #model_template>\\r\\n                    <ng-container *ngIf=\\\"p.name == model; else params_template\\\">\\r\\n                        model,\\r\\n                    </ng-container>\\r\\n                </ng-template>\\r\\n                <ng-template #params_template>\\r\\n                    <ng-container *ngIf=\\\"p.name == constList;\\\">\\r\\n                        const_list,\\r\\n                    </ng-container>\\r\\n                </ng-template>\\r\\n                -->\\r\\n\\r\\n            </ng-container>\\r\\n\\r\\n        </div>\\r\\n\\r\\n        <!-- Imported Function Template -->\\r\\n        <div class='line--item' *ngSwitchCase=\\\"ProcedureTypes.Imported\\\">\\r\\n            <input class='input--var'\\r\\n                    [ngModel]='data.args[0].value'\\r\\n                    (ngModelChange)='data.args[0].value=varMod($event)'\\r\\n                    (cut)='stopProp($event)' (paste)='stopProp($event)'\\r\\n                    placeholder={{data.args[0].name}}>  \\r\\n            = \\r\\n            <div class='function-text'>{{data.meta.name}} </div> \\r\\n            \\r\\n            <ng-container *ngFor='let p of data.args.slice(1);let i=index'>\\r\\n                <input class='input--arg' \\r\\n                        (cut)='stopProp($event)' (paste)='stopProp($event)' \\r\\n                        [(ngModel)]='p.value' \\r\\n                        placeholder={{p.name}}\\r\\n                        size={{p.value?.length||p.name.length}}>    \\r\\n            </ng-container>\\r\\n            \\r\\n\\r\\n        </div>\\r\\n\\r\\n\\r\\n        <!-- delete button-->\\r\\n        <button class='btn' mat-icon-button title=\\\"Delete Procedure\\\" (click)=\\\"emitDelete()\\\" tabindex=\\\"-1\\\">\\r\\n            <mat-icon class='icon'>delete_outline</mat-icon>\\r\\n        </button>\\r\\n        <!-- Disable button-->\\r\\n        <button class='btn' mat-icon-button title=\\\"Disable Procedure\\\" [class.highlighted]='!data.enabled' (click)='markDisabled()' tabindex=\\\"-1\\\">\\r\\n            <mat-icon class='icon'>tv_off</mat-icon>\\r\\n        </button>\\r\\n        <!-- Print button-->\\r\\n        <button *ngIf='canBePrinted()' class='btn' mat-icon-button title=\\\"Print Result In Console\\\" [class.highlighted]='data.print' (click)='markPrint()' tabindex=\\\"-1\\\">\\r\\n            <mat-icon class='icon'>print</mat-icon>\\r\\n        </button>\\r\\n        <!-- help button-->\\r\\n        <button class='btn' mat-icon-button title=\\\"Help\\\" tabindex=\\\"-1\\\">\\r\\n            <mat-icon class='icon'>help</mat-icon>\\r\\n        </button>\\r\\n    </div>\\r\\n    <!-- list of child procedures (if the procedure has children) -->\\r\\n    <div *ngIf=\\\"data?.children\\\" class='container--nested'>\\r\\n        <procedure-item \\r\\n            *ngFor=\\\"let line of data?.children; let idx=index\\\" \\r\\n            [data]=\\\"line\\\"\\r\\n            (select)='selectChild($event, line)'\\r\\n            (delete)='deleteChild(idx)'></procedure-item>\\r\\n    </div>\\r\\n\\r\\n\\r\\n</div>\\r\\n\\r\\n\"","module.exports = \".container--nested {\\n  padding-left: 0px; }\\n\\n.container--line {\\n  margin: 8px 0px 8px 10px;\\n  padding: 2px 0px 2px 2px;\\n  border-bottom: 1px solid gainsboro;\\n  border-left: 1px solid gainsboro;\\n  color: #505050;\\n  min-height: 22px;\\n  opacity: 1; }\\n\\n.container--line.disabled {\\n    opacity: 0.5; }\\n\\n.container--line.selected {\\n    border: 1px solid #000096;\\n    background-color: gainsboro; }\\n\\n.container--line.error {\\n    border: 1px solid red; }\\n\\n.container--item {\\n  margin: none;\\n  padding: none;\\n  border: none; }\\n\\n.btn {\\n  height: 24px;\\n  width: 24px;\\n  float: right;\\n  background-color: transparent;\\n  border: none;\\n  display: none;\\n  color: #777; }\\n\\n.btn.highlighted {\\n    background-color: #ff9696; }\\n\\n.container--item:hover .btn {\\n  display: block; }\\n\\n.icon {\\n  vertical-align: top;\\n  font-size: 20px; }\\n\\n.line--item {\\n  display: inline-block;\\n  color: #505050; }\\n\\n/*\\r\\n.hasChildren::before{\\r\\n    content: '\\\\25B6';\\r\\n    position: absolute;\\r\\n    left: 3px;\\r\\n    font-size: 8px;\\r\\n}\\r\\n*/\\n\\n.input--var {\\n  width: 70px;\\n  background-color: #fafafa;\\n  border: none;\\n  border-bottom: 1px solid #505050;\\n  margin-right: 5px; }\\n\\n.input--arg {\\n  resize: horizontal;\\n  min-width: 1px;\\n  max-width: 300px;\\n  width: auto;\\n  background-color: #fafafa;\\n  border: none;\\n  border-bottom: 1px solid #505050;\\n  margin-left: 5px; }\\n\\ninput:focus {\\n  border: 1px solid #000096; }\\n\\n.function-text {\\n  display: inline-block;\\n  white-space: normal;\\n  font-style: italic;\\n  color: #be8c1e;\\n  font-weight: 600; }\\n\"","import { Component, Input, Output,  EventEmitter, OnInit, OnDestroy} from '@angular/core';\r\n\r\nimport { IProcedure, ProcedureTypes } from '@models/procedure';\r\nimport { ProcedureTypesAware } from '@shared/decorators';\r\n\r\nimport { _parameterTypes} from '@modules';\r\n\r\n@ProcedureTypesAware\r\n@Component({\r\n    selector: 'procedure-item',\r\n    templateUrl: './procedure-item.component.html', \r\n    styleUrls: ['procedure-item.component.scss']\r\n})\r\nexport class ProcedureItemComponent{\r\n    @Input() data: IProcedure;\r\n    @Output() delete = new EventEmitter();\r\n    @Output() select = new EventEmitter();\r\n    @Output() copied = new EventEmitter();\r\n    @Output() pasteOn = new EventEmitter();\r\n\r\n    private model = _parameterTypes.model;\r\n    private constList = _parameterTypes.constList;\r\n    ProcedureTypes = ProcedureTypes;\r\n\r\n    // delete this procedure\r\n    emitDelete(): void{\r\n        this.delete.emit();\r\n    }\r\n\r\n    // select this procedure\r\n    emitSelect(event, procedure: IProcedure){\r\n        event.stopPropagation();\r\n        this.select.emit({\"ctrl\":event.ctrlKey, \"prod\":procedure});\r\n    }\r\n\r\n    // delete child procedure (after receiving emitDelete from child procedure)\r\n    deleteChild(index: number): void{\r\n        this.data.children.splice(index, 1);\r\n    }\r\n\r\n    // select child procedure (after receiving emitSelect from child procedure)\r\n    selectChild(event, procedure: IProcedure){\r\n        this.select.emit(event);\r\n    }\r\n\r\n    markPrint(){\r\n        this.data.print = !this.data.print;\r\n    }\r\n\r\n    markDisabled(){\r\n        this.data.enabled = !this.data.enabled;\r\n    }\r\n\r\n    canBePrinted(){\r\n        return (this.data.argCount > 0 && this.data.args[0].name == 'var_name')\r\n    }\r\n\r\n    // stopPropagation to prevent cut/paste with input box focused\r\n    stopProp(event):void{\r\n        event.stopPropagation();\r\n    }\r\n\r\n    // modify input: replace space \" \" with underscore \"_\"\r\n    varMod(event){\r\n        if(!event) return event;\r\n        let str = event.trim();\r\n        str = str.replace(/ /g,\"_\");\r\n        return str;\r\n    }\r\n}","module.exports = \"<ng-container *ngIf=\\\"nodeType == ''\\\">\\r\\n    <!-- basic functions: variable, if, else, else if, for, while, continue, break -->\\r\\n    <ul class='toolset__basic'>\\r\\n        <ng-container *ngFor=\\\"let type of ProcedureTypesArr\\\">\\r\\n            <li *ngIf='type.toUpperCase() !== \\\"FUNCTION\\\" && type.toUpperCase() !== \\\"IMPORTED\\\"'\\r\\n                (click)='add(ProcedureTypes[type])'> \\r\\n                {{type}}\\r\\n            </li>\\r\\n        </ng-container>\\r\\n    </ul>\\r\\n    \\r\\n    <!--\\r\\n    <div class='toolset__functions'>\\r\\n        <section *ngFor='let mod of Modules' >\\r\\n            <div *ngIf='mod.module.toUpperCase() != \\\"INPUT\\\" && mod.module.toUpperCase() != \\\"OUTPUT\\\"'>\\r\\n                <h3>{{ mod.module }}</h3>\\r\\n                <ul class='toolset__functions--subset'>\\r\\n                    <li *ngFor='let fn of mod.functions' (click)='add_function(fn)'> {{fn.name}} </li>\\r\\n                </ul>\\r\\n            </div>\\r\\n        </section>\\r\\n    </div>\\r\\n    <div class='toolset__functions'>\\r\\n        <section>\\r\\n            <h3>Imported</h3>\\r\\n            <ul class='toolset__functions--subset'>\\r\\n                <li *ngFor='let fn of functions' (click)='add_imported_function(fn)'> {{fn.name}} \\r\\n                    <button class='remove-btn' (click)='delete_imported_function(fn)'>\\r\\n                        <mat-icon class='remove-icon'>close</mat-icon>\\r\\n                    </button>\\r\\n                </li>\\r\\n            </ul>\\r\\n        </section>\\r\\n        <br>\\r\\n        <input type=\\\"file\\\" id=\\\"selectedFile\\\" (change)=\\\"import_function($event)\\\" style=\\\"display: none;\\\" />\\r\\n        <button class='add-btn' onclick=\\\"document.getElementById('selectedFile').click();\\\">\\r\\n            <mat-icon class='add-icon'>open_in_browser</mat-icon>\\r\\n        </button>\\r\\n    </div>\\r\\n    -->\\r\\n\\r\\n    <!-- functions from core.modules -->\\r\\n    <ng-container *ngFor='let mod of Modules' >\\r\\n\\r\\n        <button id='{{mod.module}}' class=\\\"accordion\\\" \\r\\n        *ngIf='mod.module.toUpperCase() != \\\"INPUT\\\" && mod.module.toUpperCase() != \\\"OUTPUT\\\"'\\r\\n        (click)='toggleAccordion(mod.module)' >{{ mod.module }}</button>\\r\\n        <div class=\\\"panel\\\">\\r\\n            <ul class='toolset__functions--subset'>\\r\\n                <li *ngFor='let fn of mod.functions' (click)='add_function(fn)'> {{fn.name}} </li>\\r\\n            </ul>\\r\\n        </div>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- imported functions -->\\r\\n    <ng-container>\\r\\n        <button id='imported' class=\\\"accordion\\\" \\r\\n        (click)='toggleAccordion(\\\"imported\\\")' >Imported</button>\\r\\n        <div class=\\\"panel\\\">\\r\\n            <ul class='toolset__functions--subset'>\\r\\n                <li *ngFor='let fn of functions' (click)='add_imported_function(fn)'> {{fn.name}} \\r\\n                    <button class='remove-btn' (click)='delete_imported_function(fn)'>\\r\\n                        <mat-icon class='remove-icon'>close</mat-icon>\\r\\n                    </button>\\r\\n                </li>\\r\\n            </ul>\\r\\n            <br>\\r\\n            <input type=\\\"file\\\" id=\\\"selectedFile\\\" (change)=\\\"import_function($event)\\\" style=\\\"display: none;\\\" />\\r\\n            <button class='add-btn' onclick=\\\"document.getElementById('selectedFile').click();\\\" title=\\\"Import Function from File\\\">\\r\\n                <mat-icon class='add-icon'>open_in_browser</mat-icon>\\r\\n            </button>\\r\\n        </div>\\r\\n    </ng-container>\\r\\n</ng-container>\\r\\n\\r\\n<!-- functions for input nodes -->\\r\\n<div id='toolset_inp' class = 'toolset' *ngIf=\\\"nodeType == 'start'\\\">\\r\\n    \\r\\n    <div class='toolset__functions'>\\r\\n        <section *ngFor='let mod of Modules' >\\r\\n            <div *ngIf='mod.module.toUpperCase() == \\\"INPUT\\\"'>\\r\\n                <!-- <h3>{{ mod.module }}</h3> -->\\r\\n                <ul class='toolset__functions--subset'>\\r\\n                    <li *ngFor='let fn of mod.functions' (click)='add_function(fn)'> {{fn.name}} </li>\\r\\n                </ul>\\r\\n            </div>\\r\\n        </section>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<!-- functions for output nodes -->\\r\\n<div id='toolset_inp' class = 'toolset' *ngIf=\\\"nodeType == 'end'\\\">\\r\\n    <div class='toolset__functions' *ngIf=\\\"hasProd===false\\\">\\r\\n        <section *ngFor='let mod of Modules' >\\r\\n            <div *ngIf='mod.module.toUpperCase() == \\\"OUTPUT\\\"'>\\r\\n                <!-- <h3>{{ mod.module }}</h3> -->\\r\\n                <ul class='toolset__functions--subset'>\\r\\n                    <li *ngFor='let fn of mod.functions' (click)='add_function(fn)'> {{fn.name}} </li>\\r\\n                </ul>\\r\\n            </div>\\r\\n        </section>\\r\\n    </div>\\r\\n</div>\\r\\n\"","module.exports = \":host {\\n  width: 100%;\\n  background-color: #efefef; }\\n\\nul {\\n  list-style-type: none;\\n  margin: 0px;\\n  padding: 0px;\\n  padding-left: 15px; }\\n\\nul li {\\n    -webkit-user-select: none;\\n       -moz-user-select: none;\\n        -ms-user-select: none;\\n            user-select: none;\\n    margin: 0px;\\n    padding: 0px;\\n    color: #505050;\\n    font-size: 12px;\\n    line-height: 18px; }\\n\\n.remove-btn {\\n  background-color: transparent;\\n  border: none;\\n  height: 13px;\\n  float: right; }\\n\\n.remove-btn .remove-icon {\\n    font-size: 11px;\\n    height: 11px;\\n    color: #505050; }\\n\\n.add-btn {\\n  background-color: transparent;\\n  border: none;\\n  float: left;\\n  padding: 6px;\\n  transition: 0.4s; }\\n\\n.add-btn :hover {\\n    background-color: gainsboro; }\\n\\n.add-btn .add-icon {\\n    float: left;\\n    color: #505050; }\\n\\n.accordion {\\n  background-color: gainsboro;\\n  color: #505050;\\n  cursor: pointer;\\n  width: 100%;\\n  padding: 8px 8px 8px 8px;\\n  border: none;\\n  display: block;\\n  text-align: left;\\n  outline: none;\\n  font-size: 12px;\\n  transition: 0.4s;\\n  font-weight: 550; }\\n\\n.active, .accordion:hover {\\n  background-color: #ccc; }\\n\\n.panel {\\n  width: inherit;\\n  padding: 0px 10px 0px 0px;\\n  display: none;\\n  background-color: #efefef;\\n  overflow: hidden; }\\n\"","import { Component, Output, EventEmitter, Input} from '@angular/core';\r\n\r\nimport { ProcedureTypes, IFunction, IModule } from '@models/procedure';\r\nimport { IFlowchart } from '@models/flowchart';\r\nimport * as CircularJSON from 'circular-json';\r\nimport { IArgument } from '@models/code';\r\nimport * as Modules from '@modules';\r\n\r\n\r\nconst keys = Object.keys(ProcedureTypes);\r\n\r\n@Component({\r\n  selector: 'toolset',\r\n  templateUrl: './toolset.component.html',\r\n  styleUrls: ['./toolset.component.scss']\r\n})\r\nexport class ToolsetComponent{\r\n\r\n    @Output() select = new EventEmitter();\r\n    @Output() delete = new EventEmitter();\r\n    @Output() imported = new EventEmitter();\r\n    @Input() functions: IFunction[];\r\n    @Input() nodeType: string;\r\n    @Input() hasProd: boolean;\r\n\r\n    Modules = ToolsetComponent.ModuleAware();\r\n    \r\n    ProcedureTypes = ProcedureTypes;\r\n    ProcedureTypesArr = keys.slice(keys.length / 2);\r\n\r\n    constructor(){}\r\n    \r\n    // add selected basic function as a new procedure\r\n    add(type: ProcedureTypes): void{\r\n        this.select.emit( { type: type, data: undefined } ); \r\n    }\r\n\r\n    // add selected function from core.modules as a new procedure\r\n    add_function(fnData){\r\n        // create a fresh copy of the params to avoid linked objects\r\n        // todo: figure out\r\n        fnData.args = fnData.args.map( (arg) => { \r\n            return {name: arg.name, value: arg.value, default: arg.default};\r\n            });\r\n        \r\n        this.select.emit( { type: ProcedureTypes.Function, data: fnData } ); \r\n    }\r\n\r\n    // add selected imported function as a new procedure\r\n    add_imported_function(fnData){\r\n        fnData.args = fnData.args.map( (arg) => { \r\n            return {name: arg.name, value: arg.value};\r\n            });\r\n        this.select.emit( { type: ProcedureTypes.Imported, data: fnData } ); \r\n    }\r\n\r\n    // delete imported function\r\n    delete_imported_function(fnData){\r\n        this.delete.emit(fnData); \r\n    }\r\n\r\n\r\n    // import a flowchart as function\r\n    async import_function(event){\r\n        // read the file and create the function based on the flowchart\r\n        const p = new Promise((resolve) => {\r\n            let reader = new FileReader();\r\n            reader.onload = function(){\r\n                // parse the flowchart\r\n                const fl = CircularJSON.parse(reader.result.toString()).flowchart;\r\n                // create function\r\n                var funcs = [];\r\n                var func: IFunction = <IFunction>{\r\n                    module: <IFlowchart>{\r\n                        name: fl.name,\r\n                        nodes: fl.nodes,\r\n                        edges: fl.edges\r\n                    },\r\n                    name: event.target.files[0].name.split('.')[0],\r\n                };\r\n\r\n                // go through the nodes\r\n                func.argCount = fl.nodes[0].procedure.length;\r\n                func.args = fl.nodes[0].procedure.map(prod => {\r\n                    return <IArgument>{\r\n                        name: prod.args[prod.argCount-2].value.substring(1,prod.args[prod.argCount-2].value.length-1),\r\n                        default: prod.args[prod.argCount-1].default,\r\n                        value: undefined,\r\n                        min: undefined,\r\n                        max: undefined\r\n                    };\r\n                });\r\n                if (!func.argCount){\r\n                    resolve('error');\r\n                }\r\n\r\n                // add func and all the imported functions of the imported flowchart to funcs\r\n                funcs.push(func);\r\n                for (let i of fl.functions){\r\n                    funcs.push(i)\r\n                }\r\n                resolve(funcs)\r\n            }\r\n            reader.onerror = function(){\r\n                resolve('error')\r\n            }\r\n            reader.readAsText(event.target.files[0])\r\n        });\r\n        const fnc = await p;\r\n        (<HTMLInputElement>document.getElementById('selectedFile')).value = \"\";\r\n        if (fnc === 'error'){\r\n            console.warn('Error reading file')\r\n            return\r\n        }\r\n        this.imported.emit(fnc);\r\n    }\r\n\r\n    toggleAccordion(id: string){\r\n        var acc = document.getElementById(id);\r\n        //var acc = document.getElementsByClassName(\"accordion\");\r\n        acc.classList.toggle(\"active\");\r\n        var panel = <HTMLElement>acc.nextElementSibling;\r\n        console.log(panel)\r\n        if (panel.style.display === \"block\") {\r\n            panel.style.display = \"none\";\r\n        } else {\r\n            panel.style.display = \"block\";\r\n        }\r\n        \r\n    }\r\n\r\n\r\n\r\n    // todo: bug fix for defaults\r\n    static extract_params(func: Function): [IArgument[], boolean] {\r\n    let fnStr = func.toString().replace( /((\\/\\/.*$)|(\\/\\*[\\s\\S]*?\\*\\/))/mg, '');\r\n    \r\n    let result = fnStr.slice(fnStr.indexOf('(')+1, fnStr.indexOf(')')).split(\",\")//.match( /([^\\s,]+)/g);\r\n    if(result === null || result[0]==\"\"){\r\n         result = [];\r\n    }\r\n    let final_result = result.map(function(r){ \r\n        r = r.trim();\r\n        let r_value = r.split(\"=\");\r\n\r\n        if (r_value.length == 1){\r\n            return { name: r_value[0].trim(), value: undefined, default: 0}\r\n        }\r\n        else{\r\n            return { name: r_value[0].trim(), value: undefined, default: 0 }\r\n        }\r\n\r\n    });\r\n    let hasReturn = true;\r\n    if (fnStr.indexOf(\"return\") === -1 || fnStr.indexOf(\"return;\") !== -1){\r\n        hasReturn = false;\r\n    }\r\n    return [final_result, hasReturn];\r\n    }\r\n\r\n\r\n    static ModuleAware() {\r\n    let module_list = [];\r\n    for( let m_name in Modules ){\r\n        if (m_name[0] == '_') continue;\r\n        \r\n        let modObj = <IModule>{};\r\n        modObj.module = m_name;\r\n        modObj.functions = [];\r\n        \r\n        for( let fn_name of Object.keys(Modules[m_name])){\r\n            \r\n            let func = Modules[m_name][fn_name];\r\n\r\n            let fnObj = <IFunction>{};\r\n            fnObj.module = m_name;\r\n            fnObj.name = fn_name;\r\n            fnObj.argCount = func.length;\r\n            let args = ToolsetComponent.extract_params(func);\r\n            fnObj.args = args[0];\r\n            fnObj.hasReturn = args[1];\r\n            modObj.functions.push(fnObj);\r\n        }\r\n        module_list.push(modObj);\r\n    }\r\n\r\n    return module_list;\r\n    }\r\n}\r\n","module.exports = \"<h2>{{node?.name}}</h2>\\r\\n\\r\\n<div class='container--editor' (mouseenter)='activateCopyPaste()'  (mouseleave)='deactivateCopyPaste()'\\r\\n(copy)='copyProd()' (cut)='cutProd($event)' (paste)='pasteProd($event)'>\\r\\n\\r\\n\\t<div class='container__content'>\\r\\n\\t\\t<!-- toolset on the left side -->\\r\\n\\t\\t<div class=\\\"container--toolset\\\">\\r\\n\\t\\t\\t<toolset [functions]='flowchart.functions' \\r\\n\\t\\t\\t[nodeType]='node.type' \\r\\n\\t\\t\\t[hasProd]='node.procedure.length>0' \\r\\n\\t\\t\\t(delete)='deleteFunction($event)' \\r\\n\\t\\t\\t(select)='add($event)' \\r\\n\\t\\t\\t(imported)='importFunction($event)'></toolset>\\r\\n\\t\\t</div>\\r\\n\\r\\n\\t\\t<!-- procedure editor on the right side -->\\r\\n\\t\\t<div id='procedure' class=\\\"container--procedure\\\">\\r\\n\\t\\t\\t<!-- parameter-editor only for start node -->\\r\\n\\t\\t\\t<parameter-editor *ngIf=\\\"node.type == 'start'\\\" [flowchart]='flowchart' [node]='node'></parameter-editor>\\r\\n\\r\\n\\t\\t\\t<!-- list of procedure items for all nodes -->\\r\\n\\t\\t\\t<procedure-item \\r\\n\\t\\t\\t*ngFor=\\\"let line of node?.procedure; let idx=index\\\" \\r\\n\\t\\t\\t[data]=\\\"line\\\"\\r\\n\\t\\t\\t(select)=\\\"selectProcedure($event,line)\\\"\\r\\n\\t\\t\\t(delete)=\\\"deleteChild(idx)\\\"></procedure-item>\\r\\n\\t\\t\\t<br>\\r\\n\\t\\t\\t<br>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n\\r\\n</div>\\r\\n\"","module.exports = \".container--editor {\\n  display: block;\\n  height: 95%;\\n  width: 100%; }\\n\\n.container__heading {\\n  display: block;\\n  text-align: center;\\n  width: 98%; }\\n\\nh2 {\\n  color: #505050;\\n  text-align: left;\\n  width: 100%;\\n  font-size: 12px;\\n  line-height: 14px;\\n  font-weight: 600;\\n  padding-left: 15px; }\\n\\nhr {\\n  border-top: 2px solid #efefef; }\\n\\n.container__content {\\n  display: inline-flex;\\n  width: 100%;\\n  min-height: 95%;\\n  overflow: inherit; }\\n\\n.container--toolset {\\n  display: inline-flex;\\n  width: 20%; }\\n\\n.container--procedure {\\n  display: block;\\n  width: 76%;\\n  bottom: 10px;\\n  background-color: #fafafa;\\n  padding: none; }\\n\\nhr {\\n  border-top: 2px solid #efefef;\\n  width: 100%; }\\n\\n/*\\r\\n$header-height: 45px;\\r\\n\\r\\n.container{\\r\\n    position: relative;\\r\\n    overflow: auto;\\r\\n    margin: 10px 10px;\\r\\n\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n    justify-content: space-around;\\r\\n        \\r\\n    h1, h2, h3, h4, h5, h6, p{\\r\\n        margin: 0px;\\r\\n        padding: 0px;\\r\\n    }\\r\\n\\r\\n    .container__header{\\r\\n        flex: 0 1 auto;\\r\\n        min-height: $header-height;\\r\\n\\r\\n        display: flex;\\r\\n        flex-direction: row;\\r\\n        justify-content: space-between;\\r\\n\\r\\n        padding: 0px 0px 0px 15px;\\r\\n\\r\\n        background-color: #3F4651;\\r\\n        color: #E7BF00;\\r\\n        \\r\\n        line-height: $header-height;\\r\\n        text-transform: uppercase;\\r\\n    \\r\\n        font-size: 18px;\\r\\n        font-weight: 600;\\r\\n        text-align: center;\\r\\n    }\\r\\n\\r\\n    .container__content{\\r\\n        flex-grow: 1;\\r\\n        height: 0px;\\r\\n        border: 2px solid #3F4651;\\r\\n        overflow: auto;\\r\\n\\r\\n        split{\\r\\n            height: 100%;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    .container__footer{\\r\\n        text-align: center;\\r\\n        font-size: 12px;\\r\\n        line-height: 18px;\\r\\n\\r\\n        background-color: #3F4651;\\r\\n        color: #E7BF00;\\r\\n    }\\r\\n}\\r\\n\\r\\n\\r\\n.content__panel{\\r\\n    height: 100%; \\r\\n    overflow: auto;\\r\\n\\r\\n    //padding: 10px 15px;\\r\\n}\\r\\n*/\\n\"","import { Component, Input, EventEmitter, Output} from '@angular/core';\r\nimport { IFlowchart } from '@models/flowchart';\r\nimport { NodeUtils, INode } from '@models/node';\r\nimport { ProcedureTypes, IFunction, IProcedure } from '@models/procedure';\r\n\r\n@Component({\r\n  selector: 'view-editor',\r\n  templateUrl: './view-editor.component.html',\r\n  styleUrls: ['./view-editor.component.scss']\r\n})\r\nexport class ViewEditorComponent{\r\n    @Input() flowchart: IFlowchart; \r\n    @Input() node: INode;\r\n    @Output() imported = new EventEmitter();\r\n    @Output() delete_Function = new EventEmitter();\r\n    copiedProd: IProcedure[];\r\n\r\n    private copyCheck: boolean = false;\r\n\r\n    constructor() { \r\n    }\r\n\r\n    // add a procedure\r\n    add(data: {type: ProcedureTypes, data: IFunction}): void {\r\n      NodeUtils.add_procedure(this.node, data.type, data.data);\r\n    }\r\n\r\n\r\n    // delete a procedure\r\n    deleteChild(index: number): void{\r\n      this.node.procedure.splice(index, 1);\r\n      NodeUtils.deselect_procedure(this.node);\r\n    }\r\n\r\n    // select a procedure\r\n    selectProcedure(event, line): void{\r\n      NodeUtils.select_procedure(this.node, event.prod, event.ctrl||false);\r\n    }\r\n\r\n    // copy selected procedures\r\n    copyProd(){\r\n      if (!this.copyCheck) return;\r\n      console.log('copying', this.node.state.procedure)\r\n      this.copiedProd = this.node.state.procedure;\r\n    }\r\n\r\n    // cut selected procedures\r\n    cutProd(event){\r\n      if (!this.copyCheck || document.activeElement.nodeName == \"INPUT\") return;\r\n      console.log('cutting', this.node.state.procedure)\r\n      this.copiedProd = this.node.state.procedure;\r\n      var parentArray;\r\n      for (let prod of this.copiedProd){\r\n        if (prod.parent){\r\n          parentArray = prod.parent.children;\r\n        } else parentArray = this.node.procedure;\r\n\r\n        for (let i = 0; i < parentArray.length; i++ ){\r\n          if (parentArray[i] === prod){\r\n            parentArray.splice(i, 1);\r\n            break;\r\n          }\r\n        }\r\n      }\r\n      NodeUtils.deselect_procedure(this.node);\r\n    }\r\n\r\n    // paste copied procedures\r\n    pasteProd(event){\r\n      if (this.copyCheck && document.activeElement.nodeName.toUpperCase() != \"INPUT\"){\r\n        const pastingPlace = this.node.state.procedure[0];\r\n        if (pastingPlace === undefined){\r\n          for (let i = 0; i< this.copiedProd.length; i++){\r\n            console.log('pasting', this.copiedProd[i].ID)\r\n            NodeUtils.paste_procedure(this.node, this.copiedProd[i]);\r\n            this.node.state.procedure[0].selected = false;\r\n            this.node.state.procedure = []\r\n          }\r\n        } else if (pastingPlace.children){\r\n          for (let i = 0; i< this.copiedProd.length; i++){\r\n            console.log('pasting', this.copiedProd[i].ID)\r\n            NodeUtils.paste_procedure(this.node, this.copiedProd[i]);\r\n            this.node.state.procedure[0].selected = false;\r\n            pastingPlace.selected = true\r\n            this.node.state.procedure = [pastingPlace]\r\n          }\r\n\r\n        } else {\r\n          for (let i = this.copiedProd.length-1; i>=0; i --){\r\n            console.log('pasting', this.copiedProd[i].ID)\r\n            NodeUtils.paste_procedure(this.node, this.copiedProd[i]);\r\n            this.node.state.procedure[0].selected = false;\r\n            pastingPlace.selected = true\r\n            this.node.state.procedure = [pastingPlace]\r\n          }\r\n        }\r\n        //this.copiedProd = undefined;\r\n      }\r\n    }\r\n\r\n    // activate copying/cutting/pasting when the mouse hovers over the procedure list\r\n    activateCopyPaste(): void{\r\n      this.copyCheck = true;\r\n    }\r\n\r\n    // deactivate copying/cutting/pasting when the mouse exit the procedure list\r\n    deactivateCopyPaste(): void{\r\n      this.copyCheck = false;\r\n    }\r\n\r\n    // import a flowchart as function\r\n    importFunction(event){\r\n      for (let func of event){\r\n        this.flowchart.functions.push(func);\r\n      }\r\n    }\r\n\r\n    // delete an imported function\r\n    deleteFunction(event){\r\n        for (let i = 0; i < this.flowchart.functions.length; i++){\r\n            if (this.flowchart.functions[i] == event){\r\n                this.flowchart.functions.splice(i,1);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n","import { NgModule, ModuleWithProviders } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { SharedModule } from '@shared/shared.module';\r\n\r\nimport { ViewEditorComponent } from './view-editor.component'; \r\nimport { ProcedureItemComponent } from './procedure-item/procedure-item.component';\r\nimport { ToolsetComponent } from './toolset/toolset.component';\r\nimport { ParameterEditorComponent } from './parameter-editor/parameter-editor.component';\r\nimport { procedureInputEditorComponent } from './parameter-editor/procedure-input-editor/procedure-input-editor.component';\r\nimport { _parameterTypes} from '@modules';\r\nimport { MatSliderModule, MatIconModule, MatExpansionModule, MatButtonModule, MatSelectModule } from '@angular/material';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ViewEditorComponent,\r\n    ProcedureItemComponent,\r\n    ToolsetComponent,\r\n    ParameterEditorComponent,\r\n    procedureInputEditorComponent,\r\n  ],\r\n  entryComponents: [\r\n  ], \r\n  imports: [\r\n    CommonModule, \r\n    SharedModule,\r\n    MatSliderModule,\r\n    MatIconModule,\r\n    MatExpansionModule,\r\n    MatButtonModule,\r\n    MatSelectModule,\r\n  ],\r\n  exports: [\r\n    ViewEditorComponent,\r\n  ],\r\n  providers: []\r\n})\r\n\r\nexport class ViewEditorModule {\r\n  constructor () { }\r\n\r\n}\r\n","module.exports = \"<parameter-viewer [flowchart]='flowchart' [startNode]='flowchart.nodes[0]' [endNode]='getEndNode()'></parameter-viewer>\\r\\n\\r\\n<!--\\r\\n<div class='container'>\\r\\n\\t<div class='container__content'>\\r\\n\\t\\r\\n\\t\\t< !-- Side content__Panel: Split into three panes -- >\\r\\n\\t\\t<as-split direction=\\\"vertical\\\">\\r\\n\\r\\n\\t\\t\\t<as-split-area size='20'>\\r\\n\\t\\t\\t\\t<div class='content__panel'>\\r\\n\\t\\t\\t\\t\\t<parameter-viewer [node]='flowchart.nodes[0]'></parameter-viewer>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</as-split-area>\\r\\n\\t\\t\\t\\r\\n\\t\\t\\t< !-- \\r\\n\\t\\t\\t<as-split-area size='20'>\\r\\n\\t\\t\\t\\t<div class='content__panel'>\\r\\n\\t\\t\\t\\t\\t\\t<flowchart [data]=\\\"flowchart\\\" (select)='selectNode($event)'></flowchart>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</as-split-area> \\r\\n\\t\\t\\t-- >\\r\\n\\t\\t\\r\\n\\t\\t</as-split>\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t</div>\\r\\n</div>\\r\\n-->\\r\\n<!--\\r\\n<div class='container'>\\r\\n\\r\\n\\t<div class='container__header'>\\r\\n\\t\\tMobius Viewer\\t\\r\\n\\t\\t<navigation></navigation>\\r\\n\\t\\t<execute [flowchart]='flowchart'></execute>\\r\\n\\t</div>\\r\\n\\r\\n\\t<div class='container__content'>\\r\\n\\t\\t<file-new *ngIf='!flowchart'></file-new>\\r\\n\\r\\n\\t\\t<as-split direction=\\\"horizontal\\\" *ngIf='flowchart'>\\r\\n\\t\\t\\t<as-split-area size=\\\"60\\\">\\r\\n\\r\\n\\t\\t\\t\\t<div class='content__panel' *ngIf='flowchart.meta.selected_nodes[0] !== undefined'>\\r\\n\\t\\t\\t\\t\\t<mviewer [node]='flowchart.nodes[flowchart.meta.selected_nodes[0]]'></mviewer>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</as-split-area>\\r\\n\\t\\t\\t\\r\\n\\t\\t\\t<as-split-area size=\\\"40\\\">\\r\\n\\t\\r\\n\\r\\n\\t\\t\\t\\t<as-split direction=\\\"vertical\\\">\\r\\n\\t\\r\\n\\t\\t\\t\\t\\t\\t<as-split-area size='20'>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class='content__panel'>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<parameter-viewer [node]='flowchart.nodes[0]'></parameter-viewer>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</as-split-area>\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t</as-split>\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t</as-split-area>\\r\\n\\t\\t</as-split>\\r\\n\\t</div>\\r\\n\\r\\n\\t<div class='container__footer'>\\r\\n\\t\\tCopyright © 2018 Design Automation Lab, NUS. All Rights Reserved.\\r\\n\\t</div>\\r\\n\\t\\r\\n\\t\\r\\n</div>\\r\\n-->\"","module.exports = \".container {\\n  position: relative;\\n  overflow: auto;\\n  height: 100%;\\n  display: flex;\\n  flex-direction: column;\\n  justify-content: space-around; }\\n  .container h1, .container h2, .container h3, .container h4, .container h5, .container h6, .container p {\\n    margin: 0px;\\n    padding: 0px; }\\n  .container .container__header {\\n    flex: 0 1 auto;\\n    min-height: 45px;\\n    display: flex;\\n    flex-direction: row;\\n    justify-content: space-between;\\n    padding: 0px 0px 0px 15px;\\n    background-color: #3F4651;\\n    color: #E7BF00;\\n    line-height: 45px;\\n    text-transform: uppercase;\\n    font-size: 18px;\\n    font-weight: 600;\\n    text-align: center; }\\n  .container .container__content {\\n    flex-grow: 1;\\n    height: 0px;\\n    border: none;\\n    overflow: auto; }\\n  .container .container__content split {\\n      height: 100%; }\\n  .container .container__footer {\\n    text-align: center;\\n    font-size: 12px;\\n    line-height: 18px;\\n    background-color: #3F4651;\\n    color: #E7BF00; }\\n  .content__panel {\\n  height: 100%;\\n  overflow: auto;\\n  padding: 10px 15px; }\\n\"","import { Component, Input } from '@angular/core';\r\nimport { IFlowchart } from '@models/flowchart';\r\nimport { INode } from '@models/node';\r\n\r\n@Component({\r\n  selector: 'view-publish',\r\n  templateUrl: './view-publish.component.html',\r\n  styleUrls: ['./view-publish.component.scss']\r\n})\r\nexport class ViewPublishComponent{\r\n    @Input() flowchart: IFlowchart;\r\n\r\n    constructor(){}\r\n\r\n    selectNode(node_index: number): void{  \r\n      if( typeof(node_index) == 'number' ){\r\n          this.flowchart.meta.selected_nodes = [node_index];  \r\n      }\r\n    }\r\n\r\n    getEndNode(): INode {\r\n      for (let node of this.flowchart.nodes){\r\n        if (node.type == 'end') return node;\r\n      }\r\n    }\r\n    \r\n}\r\n\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { SharedModule } from '@shared/shared.module';\r\nimport { ViewPublishRoutingModule } from './view-publish-routing.module';\r\nimport { ViewPublishComponent } from './view-publish.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ViewPublishComponent\r\n  ],\r\n  exports: [ \r\n    ViewPublishComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    SharedModule,\r\n  ],\r\n  entryComponents: [ ],\r\n  providers: [ ]\r\n})\r\nexport class ViewPublishModule {\r\n    constructor () { }\r\n}\r\n","// The file contents for the current environment will overwrite these during build.\r\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\r\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\r\n// The list of which env maps to which file can be found in `.angular-cli.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/appmodule/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nwindow['CESIUM_BASE_URL'] = 'assets/cesium';\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n"],"sourceRoot":""}