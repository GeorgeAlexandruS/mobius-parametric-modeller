{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/appmodule/app-routing.module.ts","webpack:///./src/app/appmodule/app.component.html","webpack:///./src/app/appmodule/app.component.scss","webpack:///./src/app/appmodule/app.component.ts","webpack:///./src/app/appmodule/app.module.ts","webpack:///./src/app/model-viewers/all-viewers/console-viewer/console-viewer.component.html","webpack:///./src/app/model-viewers/all-viewers/console-viewer/console-viewer.component.scss","webpack:///./src/app/model-viewers/all-viewers/console-viewer/console-viewer.component.ts","webpack:///./src/app/model-viewers/all-viewers/gi-cesium-viewer/cesium/cesium-viewer.component.html","webpack:///./src/app/model-viewers/all-viewers/gi-cesium-viewer/cesium/cesium-viewer.component.scss","webpack:///./src/app/model-viewers/all-viewers/gi-cesium-viewer/cesium/cesium-viewer.component.ts","webpack:///./src/app/model-viewers/all-viewers/gi-cesium-viewer/cesium/cesium-viewer.service.ts","webpack:///./src/app/model-viewers/all-viewers/gi-cesium-viewer/data/data.cesium.service.ts","webpack:///./src/app/model-viewers/all-viewers/gi-cesium-viewer/data/data.cesium.ts","webpack:///./src/app/model-viewers/all-viewers/gi-cesium-viewer/gi-cesium-viewer.component.html","webpack:///./src/app/model-viewers/all-viewers/gi-cesium-viewer/gi-cesium-viewer.component.scss","webpack:///./src/app/model-viewers/all-viewers/gi-cesium-viewer/gi-cesium-viewer.component.ts","webpack:///./src/app/model-viewers/all-viewers/gi-cesium-viewer/gi-cesium-viewer.module.ts","webpack:///./src/app/model-viewers/all-viewers/gi-cesium-viewer/gi-cesium-viewer.settings.ts","webpack:///./src/app/model-viewers/all-viewers/gi-cesium-viewer/gi-cesium-viewer.ts","webpack:///./src/app/model-viewers/all-viewers/gi-cesium-viewer/html/dropdown-menu.component.html","webpack:///./src/app/model-viewers/all-viewers/gi-cesium-viewer/html/dropdown-menu.component.scss","webpack:///./src/app/model-viewers/all-viewers/gi-cesium-viewer/html/dropdown-menu.component.ts","webpack:///./src/app/model-viewers/all-viewers/gi-cesium-viewer/html/modal-window.component.html","webpack:///./src/app/model-viewers/all-viewers/gi-cesium-viewer/html/modal-window.component.scss","webpack:///./src/app/model-viewers/all-viewers/gi-cesium-viewer/html/modal-window.component.ts","webpack:///./src/app/model-viewers/all-viewers/gi-cesium-viewer/html/modal-window.service.ts","webpack:///./src/app/model-viewers/all-viewers/gi-cesium-viewer/html/tab.component.ts","webpack:///./src/app/model-viewers/all-viewers/gi-cesium-viewer/html/tabs.component.html","webpack:///./src/app/model-viewers/all-viewers/gi-cesium-viewer/html/tabs.component.scss","webpack:///./src/app/model-viewers/all-viewers/gi-cesium-viewer/html/tabs.component.ts","webpack:///./src/app/model-viewers/all-viewers/gi-viewer/attribute/attribute.component.html","webpack:///./src/app/model-viewers/all-viewers/gi-viewer/attribute/attribute.component.scss","webpack:///./src/app/model-viewers/all-viewers/gi-viewer/attribute/attribute.component.ts","webpack:///./src/app/model-viewers/all-viewers/gi-viewer/attribute/attribute.module.ts","webpack:///./src/app/model-viewers/all-viewers/gi-viewer/attribute/tab.component.ts","webpack:///./src/app/model-viewers/all-viewers/gi-viewer/attribute/tabs.component.html","webpack:///./src/app/model-viewers/all-viewers/gi-viewer/attribute/tabs.component.scss","webpack:///./src/app/model-viewers/all-viewers/gi-viewer/attribute/tabs.component.ts","webpack:///./src/app/model-viewers/all-viewers/gi-viewer/data/data.service.ts","webpack:///./src/app/model-viewers/all-viewers/gi-viewer/data/data.threejs.ts","webpack:///./src/app/model-viewers/all-viewers/gi-viewer/gi-viewer.component.html","webpack:///./src/app/model-viewers/all-viewers/gi-viewer/gi-viewer.component.scss","webpack:///./src/app/model-viewers/all-viewers/gi-viewer/gi-viewer.component.ts","webpack:///./src/app/model-viewers/all-viewers/gi-viewer/gi-viewer.module.ts","webpack:///./src/app/model-viewers/all-viewers/gi-viewer/gi-viewer.settings.ts","webpack:///./src/app/model-viewers/all-viewers/gi-viewer/gi-viewer.ts","webpack:///./src/app/model-viewers/all-viewers/gi-viewer/html/dropdown-menu.component.html","webpack:///./src/app/model-viewers/all-viewers/gi-viewer/html/dropdown-menu.component.scss","webpack:///./src/app/model-viewers/all-viewers/gi-viewer/html/dropdown-menu.component.ts","webpack:///./src/app/model-viewers/all-viewers/gi-viewer/html/modal-window.component.html","webpack:///./src/app/model-viewers/all-viewers/gi-viewer/html/modal-window.component.scss","webpack:///./src/app/model-viewers/all-viewers/gi-viewer/html/modal-window.component.ts","webpack:///./src/app/model-viewers/all-viewers/gi-viewer/html/modal-window.service.ts","webpack:///./src/app/model-viewers/all-viewers/gi-viewer/html/tab.component.ts","webpack:///./src/app/model-viewers/all-viewers/gi-viewer/html/tabs.component.html","webpack:///./src/app/model-viewers/all-viewers/gi-viewer/html/tabs.component.scss","webpack:///./src/app/model-viewers/all-viewers/gi-viewer/html/tabs.component.ts","webpack:///./src/app/model-viewers/all-viewers/gi-viewer/threejs/threejs-viewer.component.html","webpack:///./src/app/model-viewers/all-viewers/gi-viewer/threejs/threejs-viewer.component.scss","webpack:///./src/app/model-viewers/all-viewers/gi-viewer/threejs/threejs-viewer.component.ts","webpack:///./src/app/model-viewers/all-viewers/gi-viewer/threejs/threejs-viewer.service.ts","webpack:///./src/app/model-viewers/all-viewers/help-viewer/help-viewer.component.html","webpack:///./src/app/model-viewers/all-viewers/help-viewer/help-viewer.component.scss","webpack:///./src/app/model-viewers/all-viewers/help-viewer/help-viewer.component.ts","webpack:///./src/app/model-viewers/model-viewers-container.component.html","webpack:///./src/app/model-viewers/model-viewers-container.component.scss","webpack:///./src/app/model-viewers/model-viewers-container.component.ts","webpack:///./src/app/model-viewers/model-viewers-container.module.ts","webpack:///./src/app/model-viewers/model-viewers.config.ts","webpack:///./src/app/shared/checkMissingProd.ts","webpack:///./src/app/shared/components/add-components/add_input.component.ts","webpack:///./src/app/shared/components/add-components/add_node.component.ts","webpack:///./src/app/shared/components/add-components/add_output.component.ts","webpack:///./src/app/shared/components/chrome/chrome.component.html","webpack:///./src/app/shared/components/chrome/chrome.component.scss","webpack:///./src/app/shared/components/chrome/chrome.component.ts","webpack:///./src/app/shared/components/execute/execute.component.html","webpack:///./src/app/shared/components/execute/execute.component.scss","webpack:///./src/app/shared/components/execute/execute.component.ts","webpack:///./src/app/shared/components/file/download.utils.ts","webpack:///./src/app/shared/components/file/index.ts","webpack:///./src/app/shared/components/file/loadfile.component.ts","webpack:///./src/app/shared/components/file/loadurl.component.ts","webpack:///./src/app/shared/components/file/newfile.component.ts","webpack:///./src/app/shared/components/file/savefile.component.ts","webpack:///./src/app/shared/components/header/panel-header.component.html","webpack:///./src/app/shared/components/header/panel-header.component.scss","webpack:///./src/app/shared/components/header/panel-header.component.ts","webpack:///./src/app/shared/components/header/publish-header.component.html","webpack:///./src/app/shared/components/header/publish-header.component.scss","webpack:///./src/app/shared/components/header/publish-header.component.ts","webpack:///./src/app/shared/components/navigation/navigation.component.ts","webpack:///./src/app/shared/components/not-found/not-found.component.html","webpack:///./src/app/shared/components/not-found/not-found.component.scss","webpack:///./src/app/shared/components/not-found/not-found.component.ts","webpack:///./src/app/shared/components/notification/notification.component.html","webpack:///./src/app/shared/components/notification/notification.component.scss","webpack:///./src/app/shared/components/notification/notification.component.ts","webpack:///./src/app/shared/components/parameter-viewer/parameter-viewer.component.html","webpack:///./src/app/shared/components/parameter-viewer/parameter-viewer.component.scss","webpack:///./src/app/shared/components/parameter-viewer/parameter-viewer.component.ts","webpack:///./src/app/shared/components/parameter-viewer/procedure-input-viewer/procedure-input-viewer.component.html","webpack:///./src/app/shared/components/parameter-viewer/procedure-input-viewer/procedure-input-viewer.component.scss","webpack:///./src/app/shared/components/parameter-viewer/procedure-input-viewer/procedure-input-viewer.component.ts","webpack:///./src/app/shared/components/spinner/spinner.component.html","webpack:///./src/app/shared/components/spinner/spinner.component.scss","webpack:///./src/app/shared/components/spinner/spinner.component.ts","webpack:///./src/app/shared/decorators/index.ts","webpack:///./src/app/shared/decorators/module-aware.decorator.ts","webpack:///./src/app/shared/decorators/porttypes-aware.decorator.ts","webpack:///./src/app/shared/decorators/prodtypes-aware.decorator.ts","webpack:///./src/app/shared/decorators/viewertypes-aware.decorator.ts","webpack:///./src/app/shared/directives/filesys/index.ts","webpack:///./src/app/shared/directives/filesys/mobfile-reader.directive.ts","webpack:///./src/app/shared/directives/textarea/autogrow.directive.ts","webpack:///./src/app/shared/directives/textarea/index.ts","webpack:///./src/app/shared/getViewerData.ts","webpack:///./src/app/shared/models/code/code.utils.ts","webpack:///./src/app/shared/models/code/execute.utils.ts","webpack:///./src/app/shared/models/code/index.ts","webpack:///./src/app/shared/models/flowchart/flowchart.interface.ts","webpack:///./src/app/shared/models/flowchart/flowchart.utils.ts","webpack:///./src/app/shared/models/flowchart/index.ts","webpack:///./src/app/shared/models/node/index.ts","webpack:///./src/app/shared/models/node/node.utils.ts","webpack:///./src/app/shared/models/port/index.ts","webpack:///./src/app/shared/models/port/port.utils.ts","webpack:///./src/app/shared/models/port/types.ts","webpack:///./src/app/shared/models/procedure/index.ts","webpack:///./src/app/shared/models/procedure/types.ts","webpack:///./src/app/shared/parser.ts","webpack:///./src/app/shared/services/data.service.ts","webpack:///./src/app/shared/services/google.analytics.ts","webpack:///./src/app/shared/services/index.ts","webpack:///./src/app/shared/services/viewer.service.ts","webpack:///./src/app/shared/shared.module.ts","webpack:///./src/app/shared/utils/GUID.ts","webpack:///./src/app/shared/utils/index.ts","webpack:///./src/app/views/index.ts","webpack:///./src/app/views/view-about/view-about-routing.module.ts","webpack:///./src/app/views/view-about/view-about.component.html","webpack:///./src/app/views/view-about/view-about.component.scss","webpack:///./src/app/views/view-about/view-about.component.ts","webpack:///./src/app/views/view-about/view-about.module.ts","webpack:///./src/app/views/view-dashboard/view-dashboard-routing.module.ts","webpack:///./src/app/views/view-dashboard/view-dashboard.component.html","webpack:///./src/app/views/view-dashboard/view-dashboard.component.scss","webpack:///./src/app/views/view-dashboard/view-dashboard.component.ts","webpack:///./src/app/views/view-dashboard/view-dashboard.module.ts","webpack:///./src/app/views/view-editor/parameter-editor/parameter-editor.component.html","webpack:///./src/app/views/view-editor/parameter-editor/parameter-editor.component.scss","webpack:///./src/app/views/view-editor/parameter-editor/parameter-editor.component.ts","webpack:///./src/app/views/view-editor/parameter-editor/procedure-input-editor/procedure-input-editor.component.html","webpack:///./src/app/views/view-editor/parameter-editor/procedure-input-editor/procedure-input-editor.component.scss","webpack:///./src/app/views/view-editor/parameter-editor/procedure-input-editor/procedure-input-editor.component.ts","webpack:///./src/app/views/view-editor/procedure-item/procedure-item.component.html","webpack:///./src/app/views/view-editor/procedure-item/procedure-item.component.scss","webpack:///./src/app/views/view-editor/procedure-item/procedure-item.component.ts","webpack:///./src/app/views/view-editor/toolset/toolset.component.html","webpack:///./src/app/views/view-editor/toolset/toolset.component.scss","webpack:///./src/app/views/view-editor/toolset/toolset.component.ts","webpack:///./src/app/views/view-editor/view-editor-routing.module.ts","webpack:///./src/app/views/view-editor/view-editor.component.html","webpack:///./src/app/views/view-editor/view-editor.component.scss","webpack:///./src/app/views/view-editor/view-editor.component.ts","webpack:///./src/app/views/view-editor/view-editor.module.ts","webpack:///./src/app/views/view-flowchart/edge/edge.component.html","webpack:///./src/app/views/view-flowchart/edge/edge.component.scss","webpack:///./src/app/views/view-flowchart/edge/edge.component.ts","webpack:///./src/app/views/view-flowchart/node/node.actions.ts","webpack:///./src/app/views/view-flowchart/node/node.component.html","webpack:///./src/app/views/view-flowchart/node/node.component.scss","webpack:///./src/app/views/view-flowchart/node/node.component.ts","webpack:///./src/app/views/view-flowchart/view-flowchart-routing.module.ts","webpack:///./src/app/views/view-flowchart/view-flowchart.component.html","webpack:///./src/app/views/view-flowchart/view-flowchart.component.scss","webpack:///./src/app/views/view-flowchart/view-flowchart.component.ts","webpack:///./src/app/views/view-flowchart/view-flowchart.module.ts","webpack:///./src/app/views/view-gallery/simple-name.pipe.ts","webpack:///./src/app/views/view-gallery/view-gallery-routing.module.ts","webpack:///./src/app/views/view-gallery/view-gallery.component.html","webpack:///./src/app/views/view-gallery/view-gallery.component.scss","webpack:///./src/app/views/view-gallery/view-gallery.component.ts","webpack:///./src/app/views/view-gallery/view-gallery.config.ts","webpack:///./src/app/views/view-gallery/view-gallery.module.ts","webpack:///./src/app/views/view-publish/view-publish-routing.module.ts","webpack:///./src/app/views/view-publish/view-publish.component.html","webpack:///./src/app/views/view-publish/view-publish.component.scss","webpack:///./src/app/views/view-publish/view-publish.component.ts","webpack:///./src/app/views/view-publish/view-publish.module.ts","webpack:///./src/assets/core/inline/inline.ts","webpack:///./src/assets/core/modules/_check_args.ts","webpack:///./src/assets/core/modules/_constants.ts","webpack:///./src/assets/core/modules/_conversion.ts","webpack:///./src/assets/core/modules/_list.ts","webpack:///./src/assets/core/modules/_mathjs.ts","webpack:///./src/assets/core/modules/_model.ts","webpack:///./src/assets/core/modules/_output.ts","webpack:///./src/assets/core/modules/_parameterTypes.ts","webpack:///./src/assets/core/modules/_rand.ts","webpack:///./src/assets/core/modules/_set.ts","webpack:///./src/assets/core/modules/_vec.ts","webpack:///./src/assets/core/modules/calc.ts","webpack:///./src/assets/core/modules/index.ts","webpack:///./src/assets/core/modules/list.ts","webpack:///./src/assets/core/modules/make.ts","webpack:///./src/assets/core/modules/modify.ts","webpack:///./src/assets/core/modules/pattern.ts","webpack:///./src/assets/core/modules/query.ts","webpack:///./src/assets/core/modules/render.ts","webpack:///./src/assets/core/modules/util.ts","webpack:///./src/assets/core/modules/virtual.ts","webpack:///./src/assets/libs/filesys/download.ts","webpack:///./src/assets/libs/geo-info/GIAttribMap.ts","webpack:///./src/assets/libs/geo-info/GIAttribs.ts","webpack:///./src/assets/libs/geo-info/GIAttribsAdd.ts","webpack:///./src/assets/libs/geo-info/GIAttribsIO.ts","webpack:///./src/assets/libs/geo-info/GIAttribsQuery.ts","webpack:///./src/assets/libs/geo-info/GIAttribsThreejs.ts","webpack:///./src/assets/libs/geo-info/GIGeom.ts","webpack:///./src/assets/libs/geo-info/GIGeomAdd.ts","webpack:///./src/assets/libs/geo-info/GIGeomIO.ts","webpack:///./src/assets/libs/geo-info/GIGeomModify.ts","webpack:///./src/assets/libs/geo-info/GIGeomQuery.ts","webpack:///./src/assets/libs/geo-info/GIGeomThreejs.ts","webpack:///./src/assets/libs/geo-info/GIModel.ts","webpack:///./src/assets/libs/geo-info/GIModelThreejs.ts","webpack:///./src/assets/libs/geo-info/common.ts","webpack:///./src/assets/libs/geo-info/export.ts","webpack:///./src/assets/libs/geo-info/id.ts","webpack:///./src/assets/libs/geom/distance.ts","webpack:///./src/assets/libs/geom/matrix.ts","webpack:///./src/assets/libs/geom/triangle.ts","webpack:///./src/assets/libs/geom/vectors.ts","webpack:///./src/assets/libs/triangulate/earcut.ts","webpack:///./src/assets/libs/triangulate/threex.ts","webpack:///./src/assets/libs/triangulate/triangulate.ts","webpack:///./src/assets/libs/util/arrays.ts","webpack:///./src/assets/libs/util/maps.ts","webpack:///./src/environments/environment.ts","webpack:///./src/environments/version.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","/**/\r\n\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { Component } from '@angular/core';\r\n\r\nimport { ViewFlowchartModule, ViewGalleryModule, ViewDashboardModule,\r\n         ViewEditorModule, ViewAboutModule, ViewPublishModule } from '@views';\r\n\r\n// app-routing.module.ts (this file): for development purpose, will be used when running ng build, ng serve or npm start\r\n// app-routing.module.prod.ts: for production purpose, will be used when running ng build --prod, ng serve --prod\r\n\r\n// the app-routing.module.prod.ts must also be changed accordingly to any changes done in this file\r\n\r\nconst appRoutes: Routes = [\r\n    { path: 'flowchart', loadChildren: () => ViewFlowchartModule },\r\n    { path: 'gallery', loadChildren: () => ViewGalleryModule },\r\n    { path: 'dashboard', loadChildren: () => ViewDashboardModule },\r\n    { path: 'publish', loadChildren: () => ViewPublishModule },\r\n    { path: 'editor', loadChildren: () => ViewEditorModule },\r\n    { path: 'about', loadChildren: () => ViewAboutModule },\r\n    { path: '',     redirectTo: '/gallery', pathMatch: 'full' },\r\n    { path: '**', component: ViewGalleryModule }\r\n];\r\n\r\n@NgModule({\r\n    imports: [\r\n        RouterModule.forRoot(\r\n            appRoutes,\r\n            { enableTracing: false } // <-- debugging purposes only\r\n        )\r\n    ],\r\n    exports: [\r\n        RouterModule\r\n    ]\r\n})\r\nexport class AppRoutingModule {}\r\n","module.exports = \"<router-outlet></router-outlet>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcG1vZHVsZS9hcHAuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, Injector, OnInit, OnDestroy } from '@angular/core';\r\nimport { DataService } from '@services';\r\nimport { MatIconRegistry } from '@angular/material';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nimport { GoogleAnalyticsService } from '@shared/services/google.analytics';\r\n\r\n\r\n@Component({\r\n    selector: 'app-root',\r\n    templateUrl: 'app.component.html',\r\n    styleUrls: ['app.component.scss']\r\n})\r\nexport class AppComponent implements OnInit, OnDestroy {\r\n\r\n    constructor(private dataService: DataService, private injector: Injector,\r\n        private matIconRegistry: MatIconRegistry, private domSanitizer: DomSanitizer,\r\n        private googleAnalyticsService: GoogleAnalyticsService) {\r\n        this.matIconRegistry.addSvgIcon('settings', this.domSanitizer.bypassSecurityTrustResourceUrl('assets/Icons/Settings.svg'));\r\n        this.matIconRegistry.addSvgIcon('select', this.domSanitizer.bypassSecurityTrustResourceUrl('assets/Icons/Select.svg'));\r\n        this.matIconRegistry.addSvgIcon('c3D Viewer', this.domSanitizer.bypassSecurityTrustResourceUrl('assets/Icons/3D2.svg'));\r\n        this.matIconRegistry.addSvgIcon('cGeo Viewer', this.domSanitizer.bypassSecurityTrustResourceUrl('assets/Icons/Geo.svg'));\r\n        this.matIconRegistry.addSvgIcon('cMobius Cesium', this.domSanitizer.bypassSecurityTrustResourceUrl('assets/Icons/Geo2.svg'));\r\n        this.matIconRegistry.addSvgIcon('cConsole', this.domSanitizer.bypassSecurityTrustResourceUrl('assets/Icons/Console.svg'));\r\n        this.matIconRegistry.addSvgIcon('cHelp', this.domSanitizer.bypassSecurityTrustResourceUrl('assets/Icons/Help.svg'));\r\n        this.matIconRegistry.addSvgIcon('cSummary', this.domSanitizer.bypassSecurityTrustResourceUrl('assets/Icons/Summary.svg'));\r\n        this.matIconRegistry.addSvgIcon('cZoom', this.domSanitizer.bypassSecurityTrustResourceUrl('assets/Icons/Zoom.svg'));\r\n        this.matIconRegistry.addSvgIcon('cfv', this.domSanitizer.bypassSecurityTrustResourceUrl('assets/Icons/Mobius favicon.svg'));\r\n        this.matIconRegistry.addSvgIcon('cMenu', this.domSanitizer.bypassSecurityTrustResourceUrl('assets/Icons/Three Lines Menu.svg'));\r\n        this.matIconRegistry.addSvgIcon('cGallery', this.domSanitizer.bypassSecurityTrustResourceUrl('assets/Icons/Home.svg'));\r\n        this.matIconRegistry.addSvgIcon('cDashboard', this.domSanitizer.bypassSecurityTrustResourceUrl('assets/Icons/Dashboard.svg'));\r\n        this.matIconRegistry.addSvgIcon('cFlowchart', this.domSanitizer.bypassSecurityTrustResourceUrl('assets/Icons/Flowchart.svg'));\r\n        this.matIconRegistry.addSvgIcon('cEditor', this.domSanitizer.bypassSecurityTrustResourceUrl('assets/Icons/Node.svg'));\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.googleAnalyticsService.subscribe();\r\n    }\r\n    ngOnDestroy() {\r\n        this.googleAnalyticsService.unsubscribe();\r\n    }\r\n\r\n}\r\n","// import @angular stuff\r\nimport { NgModule, Component } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n// import app services\r\nimport { DataService } from '@services';\r\nimport { DataService as GiViewerDataService } from '../model-viewers/all-viewers/gi-viewer/data/data.service';\r\n// import app modules\r\n// import { CoreModule } from '@assets/core/core.module';\r\nimport { SharedModule } from '@shared/shared.module';\r\n// import { AppRoutingModule } from './app-routing.module';\r\n// import app components\r\nimport { AppComponent } from './app.component';\r\nimport {ViewEditorModule, ViewDashboardModule, ViewGalleryModule,\r\n    ViewEditorComponent, ViewDashboardComponent, ViewGalleryComponent,\r\n    ViewFlowchartComponent, ViewFlowchartModule,\r\n    ViewAboutComponent, ViewAboutModule, ViewPublishModule, ViewPublishComponent} from '@views';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { GoogleAnalyticsService } from '@shared/services/google.analytics';\r\nimport { DataCesiumService } from '../model-viewers/all-viewers/gi-cesium-viewer/data/data.cesium.service';\r\n// import { WebWorkerService } from 'ngx-web-worker';\r\n\r\n\r\n\r\n/**\r\n * AppModule, the root module for the whole app.\r\n */\r\n@NgModule({\r\n    declarations: [\r\n        AppComponent,\r\n    ],\r\n    imports: [\r\n        BrowserModule,\r\n        BrowserAnimationsModule,\r\n        HttpClientModule,\r\n        FormsModule,\r\n        AppRoutingModule,\r\n        ViewGalleryModule,\r\n        ViewEditorModule,\r\n        ViewDashboardModule,\r\n        ViewPublishModule,\r\n        ViewFlowchartModule,\r\n        ViewAboutModule,\r\n        SharedModule,\r\n    ],\r\n    entryComponents: [\r\n        ViewEditorComponent,\r\n        ViewDashboardComponent,\r\n        ViewPublishComponent,\r\n        ViewFlowchartComponent,\r\n        ViewGalleryComponent,\r\n        ViewAboutComponent,\r\n    ],\r\n    providers: [ DataService, GiViewerDataService, DataCesiumService, GoogleAnalyticsService],\r\n    bootstrap: [ AppComponent ]\r\n})\r\nexport class AppModule {\r\n    /**\r\n     * constructor\r\n     */\r\n    constructor () {\r\n        // Do nothing\r\n    }\r\n}\r\n\r\n","module.exports = \"<div id='console-container'>\\r\\n    <div class='container'>\\r\\n        <ng-container *ngFor='let text of logs'>\\r\\n            <div class = 'line-container'>\\r\\n                <p class='normalText line'  *ngFor='let splittedText of text.split(\\\"\\\\n\\\")' >{{splittedText}}</p>\\r\\n\\r\\n                <!-- <ng-container *ngIf='text.join(\\\" \\\").indexOf(\\\"Error\\\") !== -1; else default_template'>\\r\\n                    <p class='errorText line' *ngFor='let splittedText of text.join(\\\" \\\").split(\\\"\\\\n\\\")' >{{splittedText}}</p>\\r\\n                </ng-container>\\r\\n                <ng-template #default_template>\\r\\n                    <p class='normalText line'  *ngFor='let splittedText of text.join(\\\" \\\").split(\\\"\\\\n\\\")' >{{splittedText}}</p>\\r\\n                </ng-template> -->\\r\\n            </div>\\r\\n        </ng-container>\\r\\n    </div>\\r\\n    <button id=\\\"clearConsole\\\"\\r\\n        mat-icon-button\\r\\n        (click)=\\\"clearConsole()\\\"\\r\\n        title='Clear Console'>\\r\\n        <mat-icon>block</mat-icon>\\r\\n    </button> \\r\\n</div>\\r\\n\"","module.exports = \"@import url(\\\"https://fonts.googleapis.com/css?family=Ubuntu+Mono\\\");\\n:host {\\n  height: 100%;\\n  width: 100%; }\\ndiv {\\n  font-family: sans-serif;\\n  color: #505050;\\n  width: 100%;\\n  padding-left: 10px; }\\nh5 {\\n  font-weight: 700;\\n  font-size: 12px; }\\n.funcDesc {\\n  font-weight: 600; }\\n.paramP {\\n  padding-left: 5px; }\\nspan {\\n  font-weight: 550;\\n  font-style: italic; }\\n#console-container {\\n  margin-top: 40px;\\n  height: calc(100vh - 40px);\\n  width: 100%;\\n  padding: 0px;\\n  overflow: auto; }\\n.container {\\n  padding: 0px 10px 10px 10px;\\n  height: -webkit-fit-content;\\n  height: -moz-fit-content;\\n  height: fit-content;\\n  width: 100%;\\n  box-sizing: border-box;\\n  display: flex;\\n  flex-flow: column nowrap;\\n  justify-content: flex-start; }\\n.container .line-container {\\n    border-bottom: 1px solid #E6E6E6;\\n    padding: 2px 0px; }\\n.container .line-container .line {\\n      white-space: pre-wrap;\\n      word-wrap: break-word;\\n      font-family: 'Ubuntu Mono'; }\\n.errorText {\\n  color: #E94858; }\\n.normalText {\\n  color: #808080; }\\n#clearConsole {\\n  position: absolute;\\n  background-color: transparent;\\n  padding: 0px;\\n  border: 0px;\\n  margin: 0px;\\n  top: 5px;\\n  right: 10px;\\n  color: #808080; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kZWwtdmlld2Vycy9hbGwtdmlld2Vycy9jb25zb2xlLXZpZXdlci9DOlxcRHJvcGJveFxcRmlsZXNcXFNvZnR3YXJlXFxHaXRIdWJcXGRlc2lnbi1hdXRvbWF0aW9uXFxtb2JpdXMtcGFyYW1ldHJpYy1tb2RlbGxlci9zcmNcXGFwcFxcbW9kZWwtdmlld2Vyc1xcYWxsLXZpZXdlcnNcXGNvbnNvbGUtdmlld2VyXFxjb25zb2xlLXZpZXdlci5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvbW9kZWwtdmlld2Vycy9hbGwtdmlld2Vycy9jb25zb2xlLXZpZXdlci9DOlxcRHJvcGJveFxcRmlsZXNcXFNvZnR3YXJlXFxHaXRIdWJcXGRlc2lnbi1hdXRvbWF0aW9uXFxtb2JpdXMtcGFyYW1ldHJpYy1tb2RlbGxlci9zcmNcXGFwcFxcbW9kZWwtdmlld2Vyc1xcYWxsLXZpZXdlcnNcXGdlbmVyYWwtdmlld2VyLnNjc3MiLCJzcmMvYXBwL21vZGVsLXZpZXdlcnMvYWxsLXZpZXdlcnMvY29uc29sZS12aWV3ZXIvQzpcXERyb3Bib3hcXEZpbGVzXFxTb2Z0d2FyZVxcR2l0SHViXFxkZXNpZ24tYXV0b21hdGlvblxcbW9iaXVzLXBhcmFtZXRyaWMtbW9kZWxsZXIvc3JjXFxzY3NzXFx2YXJpYWJsZXMuc2NzcyIsInNyYy9hcHAvbW9kZWwtdmlld2Vycy9hbGwtdmlld2Vycy9jb25zb2xlLXZpZXdlci9DOlxcRHJvcGJveFxcRmlsZXNcXFNvZnR3YXJlXFxHaXRIdWJcXGRlc2lnbi1hdXRvbWF0aW9uXFxtb2JpdXMtcGFyYW1ldHJpYy1tb2RlbGxlci9zcmNcXHNjc3NcXGNvbG9ycy5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUdBLGtFQUFZO0FDSFo7RUFDSSxZQUFZO0VBQ1osV0FBVyxFQUFBO0FBR2Y7RUFDSSx1QkFBdUI7RUFDdkIsY0FBb0I7RUFDcEIsV0FBVztFQUNYLGtCQUFpQixFQUFBO0FBR3JCO0VBQ0ksZ0JBQWdCO0VBQ2hCLGVDVFMsRUFBQTtBRFliO0VBQ0ksZ0JBQWdCLEVBQUE7QUFHcEI7RUFDSSxpQkFBaUIsRUFBQTtBQUdyQjtFQUNJLGdCQUFnQjtFQUNoQixrQkFBa0IsRUFBQTtBRHRCdEI7RUFDSSxnQkFBZ0I7RUFDaEIsMEJBQTBCO0VBQzFCLFdBQVc7RUFDWCxZQUFZO0VBQ1osY0FBYyxFQUFBO0FBRWxCO0VBQ0ksMkJBQTJCO0VBQzNCLDJCQUFtQjtFQUFuQix3QkFBbUI7RUFBbkIsbUJBQW1CO0VBQ25CLFdBQVc7RUFDWCxzQkFBc0I7RUFDdEIsYUFBYTtFQUNiLHdCQUF3QjtFQUN4QiwyQkFBMkIsRUFBQTtBQVAvQjtJQVNRLGdDR2hCUTtJSGlCUixnQkFBZ0IsRUFBQTtBQVZ4QjtNQVlZLHFCQUFxQjtNQUNyQixxQkFBcUI7TUFDckIsMEJBQTBCLEVBQUE7QUFLdEM7RUFDSSxjR2pCaUIsRUFBQTtBSG9CckI7RUFDSSxjR25DWSxFQUFBO0FIc0NoQjtFQUNJLGtCQUFrQjtFQUNsQiw2QkFBNkI7RUFDN0IsWUFBWTtFQUNaLFdBQVc7RUFDWCxXQUFXO0VBQ1gsUUFBUTtFQUNSLFdBQVc7RUFDWCxjRzlDWSxFQUFBIiwiZmlsZSI6InNyYy9hcHAvbW9kZWwtdmlld2Vycy9hbGwtdmlld2Vycy9jb25zb2xlLXZpZXdlci9jb25zb2xlLXZpZXdlci5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIkBpbXBvcnQgJ35zY3NzL2NvbG9ycyc7XHJcbkBpbXBvcnQgJ35zY3NzL3ZhcmlhYmxlcyc7XHJcbkBpbXBvcnQgJy4uL2dlbmVyYWwtdmlld2VyLnNjc3MnO1xyXG5AaW1wb3J0IHVybCgnaHR0cHM6Ly9mb250cy5nb29nbGVhcGlzLmNvbS9jc3M/ZmFtaWx5PVVidW50dStNb25vJyk7XHJcblxyXG4jY29uc29sZS1jb250YWluZXIge1xyXG4gICAgbWFyZ2luLXRvcDogNDBweDtcclxuICAgIGhlaWdodDogY2FsYygxMDB2aCAtIDQwcHgpOyAvLyRoZWFkZXItaGVpZ2h0XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIHBhZGRpbmc6IDBweDtcclxuICAgIG92ZXJmbG93OiBhdXRvO1xyXG59XHJcbi5jb250YWluZXJ7XHJcbiAgICBwYWRkaW5nOiAwcHggMTBweCAxMHB4IDEwcHg7XHJcbiAgICBoZWlnaHQ6IGZpdC1jb250ZW50O1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGZsZXgtZmxvdzogY29sdW1uIG5vd3JhcDtcclxuICAgIGp1c3RpZnktY29udGVudDogZmxleC1zdGFydDtcclxuICAgIC5saW5lLWNvbnRhaW5lcntcclxuICAgICAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgJGNvbG9yNTtcclxuICAgICAgICBwYWRkaW5nOiAycHggMHB4O1xyXG4gICAgICAgIC5saW5le1xyXG4gICAgICAgICAgICB3aGl0ZS1zcGFjZTogcHJlLXdyYXA7XHJcbiAgICAgICAgICAgIHdvcmQtd3JhcDogYnJlYWstd29yZDtcclxuICAgICAgICAgICAgZm9udC1mYW1pbHk6ICdVYnVudHUgTW9ubyc7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59XHJcblxyXG4uZXJyb3JUZXh0e1xyXG4gICAgY29sb3I6ICRlcnJvci1jb2xvcjtcclxufVxyXG5cclxuLm5vcm1hbFRleHR7XHJcbiAgICBjb2xvcjogJGNvbG9yMTtcclxufVxyXG5cclxuI2NsZWFyQ29uc29sZSB7XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcclxuICAgIHBhZGRpbmc6IDBweDtcclxuICAgIGJvcmRlcjogMHB4O1xyXG4gICAgbWFyZ2luOiAwcHg7XHJcbiAgICB0b3A6IDVweDtcclxuICAgIHJpZ2h0OiAxMHB4O1xyXG4gICAgY29sb3I6ICRjb2xvcjE7XHJcblxyXG59IiwiOmhvc3Qge1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbn1cclxuXHJcbmRpdiB7XHJcbiAgICBmb250LWZhbWlseTogc2Fucy1zZXJpZjtcclxuICAgIGNvbG9yOiByZ2IoODAsODAsODApO1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBwYWRkaW5nLWxlZnQ6MTBweDtcclxufVxyXG5cclxuaDUge1xyXG4gICAgZm9udC13ZWlnaHQ6IDcwMDtcclxuICAgIGZvbnQtc2l6ZTogJGZzaXplMjtcclxufVxyXG5cclxuLmZ1bmNEZXNjIHtcclxuICAgIGZvbnQtd2VpZ2h0OiA2MDA7XHJcbn1cclxuXHJcbi5wYXJhbVAge1xyXG4gICAgcGFkZGluZy1sZWZ0OiA1cHg7XHJcblxyXG59XHJcbnNwYW4ge1xyXG4gICAgZm9udC13ZWlnaHQ6IDU1MDtcclxuICAgIGZvbnQtc3R5bGU6IGl0YWxpYztcclxufVxyXG4iLCIkcGFkZGluZzogNDBweDsgLy8gPyBub3QgdXNlZFxyXG4kc21hbGwtcGFkZGluZzogMTVweDtcclxuJGhlYWRlci1oZWlnaHQ6IDQwcHg7XHJcblxyXG4kZnNpemUxOiAxNXB4O1xyXG4kZnNpemUyOiAxMnB4O1xyXG4kZnNpemUzOiAzMHB4O1xyXG5cclxuJHBvcnQtc2l6ZTogMTVweDtcclxuJGRlZmF1bHQtc2lkZS1wYWRkaW5nOiAxNXB4O1xyXG5cclxuJGRpc2FibGVkLW9wYWNpdHk6IDAuNDsiLCJcclxuJGNvbG9yMTogIzgwODA4MDtcclxuJGNvbG9yMjogIzk5OTk5OTtcclxuJGNvbG9yMzogI0IzQjNCMzsgXHJcbiRjb2xvcjQ6ICNDQ0NDQ0M7XHJcbiRjb2xvcjU6ICNFNkU2RTY7XHJcbiRjb2xvcjUtNTogcmdiKDI0NSwgMjQ1LCAyNDUpO1xyXG4kY29sb3I2OiByZ2IoMjUwLCAyNTAsIDI1MSk7XHJcblxyXG4kY29sb3I3OiB3aGl0ZTtcclxuJGNvbG9yODogIzM3MzczNztcclxuXHJcbiRzZWxlY3RlZC1jb2xvcjogcmdiKDAsIDAsIDEwOSk7XHJcbiRob3Zlci1jb2xvcjogJGNvbG9yMjtcclxuXHJcbiRlcnJvci1jb2xvcjogI0U5NDg1ODsgLy9waW5rLXJlZFxyXG4kZXJyb3ItY29sb3ItbHQ6IHJnYigyNTUsIDIyMCwgMjI0KTtcclxuJHBjb2xvcjI6ICNGM0EzMkE7IC8vb3JhbmdlLXllbGxvd1xyXG4kcHJpbnQtY29sb3I6IHJnYigxMzAsIDE5MSwgMTEwKTsgLy9saWdodGdyZWVuXHJcbiRwcmludC1jb2xvci1sdDogcmdiKDIzMCwgMjU1LCAyMjEpO1xyXG4kc2VsZWN0R2VvbS1jb2xvcjogcmdiKDI1NSwgMTc0LCAwKTsgLy8gbGlnaHQgb3JhbmdlXHJcbiRzZWxlY3RHZW9tLWNvbG9yLWx0OiByZ2IoMjU1LCAyMjUsIDE2MCk7XHJcblxyXG4vLyAkcHJvZC1iYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMjUwLDI1MCwyNTApO1xyXG4vLyAkYmFja2dyb3VuZC1jb2xvcjogcmdiKDIyMCwyMjAsMjIwKTtcclxuJGZ1bmN0aW9uLXRleHQtY29sb3I6IHJnYigxOTAsIDE0MCwgMzApO1xyXG4kZnVuY3Rpb24tdGV4dC1jb2xvcjI6IHJnYigxOCwgMTI2LCAxMzYpO1xyXG4kYmFzaWMtZnVuY3Rpb24tdGV4dC1jb2xvcjogcmdiKDIwMCwgNzAsIDE1MCk7XHJcbiRjb21tZW50LWNvbG9yOiBkYXJrZ3JlZW47XHJcbiJdfQ== */\"","import { Component, Input, OnInit, DoCheck, AfterViewInit, AfterViewChecked, OnDestroy } from '@angular/core';\r\nimport { DataService } from '@services';\r\n\r\n/**\r\n * ConsoleViewerComponent\r\n */\r\n@Component({\r\n    selector: 'console-viewer',\r\n    templateUrl: './console-viewer.component.html',\r\n    styleUrls: ['./console-viewer.component.scss']\r\n})\r\nexport class ConsoleViewerComponent implements OnInit, AfterViewInit, DoCheck, AfterViewChecked, OnDestroy {\r\n    text: string;\r\n    scrollcheck: boolean;\r\n    logs: string[];\r\n\r\n    /**\r\n     * constructor\r\n     */\r\n    constructor(private dataService: DataService) {\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        const ct = document.getElementById('console-container');\r\n        if (!ct) { return; }\r\n        this.dataService.consoleScroll = ct.scrollTop;\r\n    }\r\n\r\n    /**\r\n     * ngOnInit\r\n     */\r\n    ngOnInit() {\r\n        this.text = this.dataService.getLog().join('\\n');\r\n    }\r\n\r\n    /**\r\n     * ngOnInit\r\n     */\r\n    ngAfterViewInit() {\r\n        const ct = document.getElementById('console-container');\r\n        if (! this.dataService.consoleScroll) {\r\n            ct.scrollTop = ct.scrollHeight;\r\n        } else {\r\n            ct.scrollTop = this.dataService.consoleScroll;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * ngDoCheck\r\n     */\r\n    ngDoCheck() {\r\n        if (this.dataService.getLog().length > 500) {\r\n            this.dataService.spliceLog(500);\r\n        }\r\n        const t = this.dataService.getLog().join('\\n');\r\n        this.logs = this.dataService.getLog();\r\n        if (this.text !== t) {\r\n            this.text = t;\r\n            this.scrollcheck = true;\r\n        }\r\n    }\r\n\r\n    ngAfterViewChecked() {\r\n        if (this.dataService.consoleScroll) {\r\n            this.dataService.consoleScroll = undefined;\r\n        } else if (this.scrollcheck) {\r\n            const ct = document.getElementById('console-container');\r\n            ct.scrollTop = ct.scrollHeight;\r\n            this.scrollcheck = false;\r\n        }\r\n    }\r\n\r\n    clearConsole() {\r\n        this.dataService.clearLog();\r\n    }\r\n}\r\n","module.exports = \"<div\\r\\n    id=\\\"cesium-container\\\"\\r\\n    (window:keydown)=\\\"onKeyDown($event)\\\"\\r\\n    (window:keyup)=\\\"onKeyUp($event)\\\"\\r\\n    (window:mousedown)=\\\"onMouseDown($event)\\\"\\r\\n    (window:mousemove)=\\\"onMouseMove($event)\\\"\\r\\n    (window:mouseup)=\\\"onMouseUp($event)\\\"\\r\\n>\\r\\n    <div\\r\\n        *ngIf=\\\"_model_error\\\"\\r\\n        style=\\\"position:absolute;color:red;margin-top: 50px;left:40%;text-align: center;font-family:sans-serif;font-size: 14px;background-color: white;\\\"\\r\\n    >\\r\\n        Error displaying model:{{text}}\\r\\n    </div>\\r\\n    <div\\r\\n        *ngIf=\\\"_no_model\\\"\\r\\n        style=\\\"position:absolute;color:red;margin-top: 50px;left:40%;text-align: center;font-family:sans-serif;font-size: 14px;background-color: white;\\\"\\r\\n    >\\r\\n        Model or Scene not defined.\\r\\n    </div>\\r\\n    <div class = \\\"messages\\\"\\r\\n        *ngIf=\\\"messageVisible\\\"\\r\\n    >\\r\\n        {{message}}\\r\\n    </div>\\r\\n\\r\\n</div>\\r\\n\"","module.exports = \"button {\\n  cursor: pointer; }\\n  button:focus {\\n    outline: none; }\\n  :host {\\n  width: 100%;\\n  height: 100%;\\n  background-color: green;\\n  overflow: hidden; }\\n  #cesium-container {\\n  position: relative;\\n  height: 100%;\\n  width: 100%;\\n  margin: 0px;\\n  overflow: hidden;\\n  font-family: sans-serif; }\\n  #container-top-right-resize {\\n  top: 0px;\\n  right: 0px; }\\n  #shownumber {\\n  position: absolute;\\n  bottom: 5px;\\n  right: 5px;\\n  background: rgba(255, 255, 255, 0.3);\\n  padding: 10px;\\n  color: #2a8ac5; }\\n  /*#rotating{\\r\\n    width: 30px;\\r\\n    height: 25px;\\r\\n    font-size:15px;\\r\\n    right:0px; \\r\\n    text-align:center;\\r\\n    position: absolute;\\r\\n    top: 0px;\\r\\n    background-color:transparent;\\r\\n    border:0;\\r\\n}\\r\\n\\r\\n#paning{\\r\\n    width: 30px;\\r\\n    height: 25px;\\r\\n    font-size:15px;\\r\\n    right:0px; \\r\\n    text-align:center;\\r\\n    position: absolute;\\r\\n    top: 25px;\\r\\n    background-color:transparent;\\r\\n    border:0;\\r\\n}\\r\\n\\r\\n#zooming{\\r\\n    width: 30px;\\r\\n    height: 25px;\\r\\n    font-size:15px;\\r\\n    right:0px; \\r\\n    text-align:center;\\r\\n    position: absolute;\\r\\n    margin-top: 50px;\\r\\n    background-color:transparent;\\r\\n    border:0;\\r\\n}*/\\n  /*#imagery{\\r\\n    width: 30px;\\r\\n    height: 25px;\\r\\n    font-size:14px;\\r\\n    right:0px; \\r\\n    text-align:center;\\r\\n    position: absolute;\\r\\n    margin-top: 10px;\\r\\n    background-color:transparent;\\r\\n    border:0;\\r\\n}*/\\n  .messages {\\n  position: absolute;\\n  color: orange;\\n  margin-top: 50px;\\n  left: 40%;\\n  padding: 10px;\\n  text-align: center;\\n  font-family: sans-serif;\\n  font-size: 14px;\\n  background-color: white;\\n  box-shadow: 2px 2px 5px 0px #505050; }\\n  #zoomingfit {\\n  width: 40px;\\n  height: 40px;\\n  font-size: 15px;\\n  position: absolute;\\n  top: 0px;\\n  right: 0px;\\n  text-align: center;\\n  color: #505050;\\n  background-color: transparent;\\n  border: 0; }\\n  #EntitySelection {\\n  width: 40px;\\n  height: 40px;\\n  font-size: 15px;\\n  position: absolute;\\n  top: 40px;\\n  right: 0px;\\n  text-align: center;\\n  color: #505050;\\n  background-color: transparent;\\n  border: 0; }\\n  .needSelect {\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  width: 40px;\\n  height: 40px;\\n  border-radius: 50%;\\n  background-color: white;\\n  opacity: 0;\\n  -webkit-animation: scaleIn 2s infinite cubic-bezier(0.36, 0.11, 0.89, 0.32);\\n          animation: scaleIn 2s infinite cubic-bezier(0.36, 0.11, 0.89, 0.32); }\\n  @-webkit-keyframes scaleIn {\\n  from {\\n    -webkit-transform: scale(0.8, 0.8);\\n            transform: scale(0.8, 0.8);\\n    opacity: .5; }\\n  to {\\n    -webkit-transform: scale(1.2, 1.2);\\n            transform: scale(1.2, 1.2);\\n    opacity: 0; } }\\n  @keyframes scaleIn {\\n  from {\\n    -webkit-transform: scale(0.8, 0.8);\\n            transform: scale(0.8, 0.8);\\n    opacity: .5; }\\n  to {\\n    -webkit-transform: scale(1.2, 1.2);\\n            transform: scale(1.2, 1.2);\\n    opacity: 0; } }\\n  #SelectingEntityType {\\n  width: 40px;\\n  font-size: 15px;\\n  position: absolute;\\n  text-align: center;\\n  color: #505050;\\n  top: 75px;\\n  right: 0px;\\n  cursor: pointer; }\\n  #selectDropdown {\\n  position: absolute;\\n  top: 70px;\\n  right: 5px; }\\n  #selectDropdown button {\\n    width: 30px;\\n    height: 25px;\\n    font: 15px bolder;\\n    display: block;\\n    background-color: transparent;\\n    border: 1px solid transparent;\\n    font-family: sans-serif;\\n    color: #505050;\\n    cursor: pointer; }\\n  #selectDropdown button.active {\\n      background-color: #f3f3f3; }\\n  #selectDropdown button:hover {\\n      background-color: #f9f9f9;\\n      border-color: #bbbbbb; }\\n  #setting {\\n  width: 30px;\\n  height: 25px;\\n  font-size: 15px;\\n  right: 0px;\\n  text-align: center;\\n  position: absolute;\\n  top: 10px;\\n  background-color: transparent;\\n  border: 0; }\\n  .visible {\\n  color: grey; }\\n  .selectvisible {\\n  background-color: white !important;\\n  color: #395d73; }\\n  #mouse_label {\\n  display: none;\\n  position: fixed;\\n  overflow: hidden;\\n  font-style: italic;\\n  background: rgba(255, 255, 255, 0.5);\\n  padding: 5px; }\\n\\r\\n/*# sourceMappingURL=data:application/json;base64, */\"","import { GIModel } from '@libs/geo-info/GIModel';\r\n// import @angular stuff\r\nimport {\r\n    Component, OnInit, Input, Output, EventEmitter,\r\n    Injector, ElementRef, DoCheck, OnChanges, SimpleChanges, ViewChild, OnDestroy\r\n} from '@angular/core';\r\nimport { DataCesium } from '../data/data.cesium';\r\nimport { DataCesiumService } from '../data/data.cesium.service';\r\nimport { CesiumViewerService } from './cesium-viewer.service';\r\nimport { ModalService } from '../html/modal-window.service';\r\n\r\n// import { IModel } from 'gs-json';\r\n// import { DropdownMenuComponent } from '../html/dropdown-menu.component';\r\n// import { CesiumViewerService } from './cesium-viewer.service';\r\n\r\n/**\r\n * A cesium viewer for viewing geo-info (GI) models.\r\n * This component gets used in /app/model-viewers/all-viewers/gi-cesium-viewer/gi-cesium-viewer.component.html\r\n */\r\n@Component({\r\n    selector: 'cesium-viewer',\r\n    templateUrl: './cesium-viewer.component.html',\r\n    styleUrls: ['./cesium-viewer.component.scss']\r\n})\r\nexport class CesiumViewerComponent implements OnInit, DoCheck, OnChanges {\r\n    @Output() eventClicked = new EventEmitter<Event>();\r\n    @Input() model: GIModel;\r\n\r\n    // protected modalWindow: ModalService;\r\n    public container = null;\r\n    public _elem: ElementRef;\r\n    // viewer size\r\n    public _width: number;\r\n    public _height: number;\r\n    // DataService\r\n    protected dataService: DataCesiumService;\r\n    // cesium scene data\r\n    public _data_cesium: DataCesium;\r\n    // num of positions, edges, triangles in cesium\r\n    public _cesium_nums: [number, number, number];\r\n    // flags for displayinhg text in viewer, see html\r\n    public _no_model = false;\r\n    public _model_error = false;\r\n    public messageVisible = false;\r\n    public message: string;\r\n    // the selectable type of entity by user, depends on the Attribute Tab\r\n    // public selectable: number;\r\n    // right selection dropdown\r\n    // public needSelect = false;\r\n    // current entity type enabled for selection\r\n    // public SelectingEntityType: { id: string, name: string } = { id: EEntTypeStr[EEntType.FACE], name: 'Faces' };\r\n    // public selectDropdownVisible = false;\r\n    // public selections = [\r\n    //     { id: EEntTypeStr[EEntType.POSI], name: 'Positions' }, { id: EEntTypeStr[EEntType.VERT], name: 'Vetex' },\r\n    //     { id: EEntTypeStr[EEntType.EDGE], name: 'Edges' }, { id: EEntTypeStr[EEntType.WIRE], name: 'Wires' },\r\n    //     { id: EEntTypeStr[EEntType.FACE], name: 'Faces' }, { id: EEntTypeStr[EEntType.POINT], name: 'Points' },\r\n    //     { id: EEntTypeStr[EEntType.PLINE], name: 'Polylines' }, { id: EEntTypeStr[EEntType.PGON], name: 'Polygons' },\r\n    //     { id: EEntTypeStr[EEntType.COLL], name: 'Collections' }\r\n    // ];\r\n    // public dropdownPosition = { x: 0, y: 0 };\r\n    // private isDown = false;\r\n    // private lastX: number;\r\n    // private lastY: number;\r\n    // private dragHash: number;\r\n    // private shiftKeyPressed = false;\r\n    // private mouse_label: HTMLElement;\r\n\r\n    /**\r\n     * Creates a new viewer,\r\n     * @param injector\r\n     * @param elem\r\n     */\r\n    constructor(injector: Injector, elem: ElementRef, private cesiumViewerService: CesiumViewerService) {\r\n        this._elem = elem;\r\n        this.dataService = injector.get(DataCesiumService);\r\n        // this.modalWindow = injector.get(ModalService);\r\n    }\r\n    /**\r\n     * Called when the viewer is initialised.\r\n     */\r\n    ngOnInit() {\r\n        this.container = this._elem.nativeElement.children.namedItem('cesium-container');\r\n        // check for container\r\n        if (!this.container) {\r\n            console.error('No container in Cesium Viewer');\r\n            return;\r\n        }\r\n        // size of window\r\n        this._width = this.container.offsetWidth; // container.client_width;\r\n        this._height = this.container.offsetHeight; // container.client_height;\r\n\r\n        this._data_cesium = this.dataService.getCesiumScene();\r\n        this.cesiumViewerService.data_cesium = this._data_cesium;\r\n\r\n        // this.container.appendChild(this._data_cesium._renderer.domElement);\r\n\r\n        // ??? What is happening here?\r\n        const self = this;\r\n        // this._data_cesium._controls.addEventListener('change', function () { self.render(self); });\r\n        // self._data_cesium._renderer.render(self._data_cesium._scene, self._data_cesium._camera);\r\n\r\n        if (localStorage.getItem('mpm_selecting_entity_type') === null) {\r\n            // localStorage.setItem('mpm_selecting_entity_type', JSON.stringify(this.SelectingEntityType));\r\n        } else {\r\n            // this.getSelectingEntityType();\r\n        }\r\n    }\r\n    /**\r\n     * @param self\r\n     */\r\n    public render(self: CesiumViewerComponent) {\r\n        // self._data_cesium._renderer.render(self._data_cesium._scene, self._data_cesium._camera);\r\n    }\r\n\r\n    /**\r\n     * Called when anything changes\r\n     */\r\n    ngDoCheck() {\r\n        if (!this.container) {\r\n            console.error('No container in Cesium Viewer');\r\n            return;\r\n        }\r\n        const width: number = this.container.offsetWidth;\r\n        const height: number = this.container.offsetHeight;\r\n        // this is when dimensions change\r\n        if (width !== this._width || height !== this._height) {\r\n            this._width = width;\r\n            this._height = height;\r\n            setTimeout(() => {\r\n                // this._data_cesium._camera.aspect = this._width / this._height;\r\n                // this._data_cesium._camera.updateProjectionMatrix();\r\n                // this._data_cesium._renderer.setSize(this._width, this._height);\r\n                // this.render(this);\r\n            }, 10);\r\n        }\r\n    }\r\n\r\n    // receive data -> model from gi-cesium-viewer component and update model in the scene\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        if (changes['model']) {\r\n            if (this.model) {\r\n                this.updateModel(this.model);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Update the model in the viewer.\r\n     */\r\n    public async updateModel(model: GIModel) {\r\n        this._data_cesium = this.dataService.getCesiumScene();\r\n        if (!model) {\r\n            console.warn('Model or Scene not defined.');\r\n            this._no_model = true;\r\n            return;\r\n        } else {\r\n            if (model !== this._data_cesium._model) {\r\n                this._data_cesium._model = model;\r\n                try {\r\n                    // add geometry to the scene\r\n                    this._data_cesium.addGeometry(model, this.container);\r\n                    this._model_error = false;\r\n                    this._no_model = false;\r\n                    // this.render(this);\r\n                } catch (ex) {\r\n                    console.error('Error displaying model:', ex);\r\n                    this._model_error = true;\r\n                    this._data_cesium._text = ex;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    public onMouseUp(event) {\r\n        // do nothing for now\r\n    }\r\n\r\n    public onMouseMove(event) {\r\n        // do nothing for now\r\n    }\r\n\r\n    public onMouseDown(event) {\r\n        // do nothing for now\r\n    }\r\n\r\n    public onKeyDown(event) {\r\n        // do nothing for now\r\n    }\r\n\r\n    public onKeyUp(event) {\r\n        // do nothing for now\r\n    }\r\n\r\n    public onUserAction(event) {\r\n        // do nothing for now\r\n    }\r\n\r\n}\r\n","import { DataCesium } from '../data/data.cesium';\r\nexport class CesiumViewerService {\r\n    public data_cesium: DataCesium;\r\n}\r\n","import { DataCesium } from './data.cesium';\r\nimport { CesiumSettings } from '../gi-cesium-viewer.settings';\r\n\r\n// import @angular stuff\r\nimport { Injectable } from '@angular/core';\r\n\r\n/**\r\n * DataService\r\n * The data service for the Cesium viewer.\r\n */\r\n@Injectable()\r\nexport class DataCesiumService {\r\n    private _data_cesium: DataCesium;\r\n\r\n    /**\r\n     * Create a data service.\r\n     */\r\n    constructor() {\r\n    }\r\n\r\n    /**\r\n     * Get the Cesium Scene\r\n     */\r\n    getCesiumScene(): DataCesium {\r\n        return this._data_cesium;\r\n    }\r\n    /**\r\n     * Set the Cesium Scene\r\n     */\r\n    setCesiumScene(settings: CesiumSettings) {\r\n        this._data_cesium = new DataCesium(settings);\r\n    }\r\n\r\n    createCesiumViewer() {\r\n        this._data_cesium.createCesiumViewer();\r\n    }\r\n}\r\n","import { GIModel } from '@libs/geo-info/GIModel';\r\nimport { CesiumSettings } from '../gi-cesium-viewer.settings';\r\nimport { EEntType, Txyz, TAttribDataTypes } from '@assets/libs/geo-info/common';\r\nimport { vecSum } from '@assets/libs/geom/vectors';\r\n// import { HereMapsImageryProvider } from './HereMapsImageryProvider.js';\r\n/**\r\n * Cesium data\r\n */\r\nexport class DataCesium {\r\n    public _viewer: any;\r\n    // the GI model to display\r\n    public _model: GIModel;\r\n    // Cesium Settings\r\n    public settings: CesiumSettings;\r\n    // Cesium scene\r\n    // public _scene: THREE.Scene; // TODO switch with Cesium viewer\r\n    // text to display\r\n    public _text: string;\r\n    public _primitives: any[];\r\n    public _camera: any[];\r\n    // interaction and selection\r\n    // text labels\r\n    // number of cesium points, lines, triangles\r\n    // grid\r\n    // axes\r\n    /**\r\n     * Constructs a new data subscriber.\r\n     */\r\n    constructor(settings: CesiumSettings) {\r\n        this.settings = settings;\r\n        // renderer\r\n        // camera settings\r\n        // orbit controls\r\n        // mouse\r\n        // selecting\r\n        // add grid\r\n        // add lights\r\n    }\r\n    // matrix points from xyz to long lat\r\n    /**\r\n     *\r\n     */\r\n    public createCesiumViewer() {\r\n        // add Cesium Access Token\r\n        Cesium.Ion.defaultAccessToken = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9' +\r\n                                        '.eyJqdGkiOiI2MGMxNGYwMS1jZjYyLTQyNjM' +\r\n                                        'tOGNkYy1hOTRiYTk4ZGEzZDUiLCJpZCI6MTY' +\r\n                                        '4MSwiaWF0IjoxNTI5NTY4OTc4fQ.lL2fzwOZ' +\r\n                                        '6EQuL5BqXG5qIwlBn-P_DTbClhVYCIyCgS0';\r\n        // create the viewer\r\n        // https://cesiumjs.org/Cesium/Build/Documentation/Viewer.html\r\n        // https://cesium.com/docs/tutorials/getting-started/\r\n        // https://cesium.com/blog/2018/03/12/cesium-and-angular/\r\n        const view_models = this._getImageryViewModels();\r\n        this._viewer = new Cesium.Viewer(\r\n            document.getElementById('cesium-container'),\r\n            {\r\n                shadows : true,\r\n                terrainShadows: Cesium.ShadowMode.ENABLED,\r\n                scene3DOnly: false,\r\n                sceneModePicker: false,\r\n                homeButton: true,\r\n                navigationHelpButton: false,\r\n                fullscreenButton: false,\r\n                animation: false,\r\n                timeline: false,\r\n                geocoder: false,\r\n                imageryProviderViewModels : view_models,\r\n                selectedImageryProviderViewModel : view_models[0],\r\n                // terrainProviderViewModels : terrainViewModels\r\n                // selectedTerrainProviderViewModel : terrainViewModels[1]\r\n            }\r\n        );\r\n        this._viewer.scene.globe.depthTestAgainstTerrain = true;\r\n        this._viewer.clock.currentTime.secondsOfDay = 50000;\r\n        this._viewer.shadowMap.maxmimumDistance = 10000.0;\r\n        this._viewer.shadowMap.size = 2048;\r\n        this._viewer.shadowMap.softShadows = false; // if true, causes some strange effects\r\n        // document.getElementsByClassName('cesium-viewer-bottom')[0].remove();\r\n\r\n        // prevent camera goes underground #375\r\n        const handler = this._viewer.screenSpaceEventHandler;\r\n        handler.setInputAction(() => {\r\n            this._viewer.camera._suspendTerrainAdjustment = false;\r\n            this._viewer.camera._adjustHeightForTerrain();\r\n        }, Cesium.ScreenSpaceEventType.MIDDLE_DOWN);\r\n\r\n        if (this._primitives) {\r\n            this._viewer.scene.primitives.removeAll();\r\n            for (const primitive of this._primitives) {\r\n                this._viewer.scene.primitives.add(Cesium.clone(primitive));\r\n            }\r\n            this._viewer.camera.viewBoundingSphere(this._camera[0]);\r\n            this._viewer.camera.direction = this._camera[1].direction;\r\n            this._viewer.camera.position = this._camera[1].position;\r\n            this._viewer.camera.right = this._camera[1].right;\r\n            this._viewer.camera.up = this._camera[1].up;\r\n            this._viewer.render();\r\n        }\r\n    }\r\n    /**\r\n     *\r\n     * @param model\r\n     * @param container\r\n     */\r\n    public addGeometry(model: GIModel, container: any): void { // TODO delete container\r\n        this._viewer.scene.primitives.removeAll();\r\n        // the origin of the model\r\n        let longitude = 103.77575;\r\n        let latitude = 1.30298;\r\n        if (model.attribs.query.hasModelAttrib('longitude')) {\r\n            const long_value: TAttribDataTypes  = model.attribs.query.getModelAttribValue('longitude');\r\n            if (typeof long_value !== 'number') {\r\n                throw new Error('Longitude attribute must be a number.');\r\n            }\r\n            longitude = long_value as number;\r\n            if (longitude < -180 || longitude > 180) {\r\n                throw new Error('Longitude attribute must be between -180 and 180.');\r\n            }\r\n        }\r\n        if (model.attribs.query.hasModelAttrib('latitude')) {\r\n            const lat_value: TAttribDataTypes = model.attribs.query.getModelAttribValue('latitude');\r\n            if (typeof lat_value !== 'number') {\r\n                throw new Error('Latitude attribute must be a number');\r\n            }\r\n            latitude = lat_value as number;\r\n            if (latitude < 0 || latitude > 90) {\r\n                throw new Error('Latitude attribute must be between 0 and 90.');\r\n            }\r\n        }\r\n        const origin = Cesium.Cartesian3.fromDegrees(longitude, latitude);\r\n        // create a matrix to transform points\r\n        const xform_matrix: any = Cesium.Matrix4.multiplyByTranslation(\r\n            Cesium.Transforms.eastNorthUpToFixedFrame(origin),\r\n            new Cesium.Cartesian3(0, 0, 1),\r\n            new Cesium.Matrix4()\r\n        );\r\n        // create all positions\r\n        const posis_i: number[] = model.geom.query.getEnts(EEntType.POSI, false);\r\n        const posi_to_point_map: Map<number, any> = new Map();\r\n        for (const posi_i of posis_i) {\r\n            if (!posi_to_point_map.has(posi_i)) {\r\n                const xyz: Txyz = model.attribs.query.getPosiCoords(posi_i);\r\n                const pnt: any = Cesium.Cartesian3.fromArray(xyz);\r\n                const xform_pnt: any = new Cesium.Cartesian3();\r\n                Cesium.Matrix4.multiplyByPoint(xform_matrix, pnt, xform_pnt);\r\n                posi_to_point_map.set(posi_i, xform_pnt);\r\n            }\r\n        }\r\n        // add geom\r\n        if (model) {\r\n            // get each polygon\r\n            const pgons_i: number[] = model.geom.query.getEnts(EEntType.PGON, false);\r\n            // get each triangle\r\n            const lines_instances: any[] = [];\r\n            const tris_instances: any[] = [];\r\n            for (const pgon_i of pgons_i) {\r\n                // get the colour of the vertices\r\n                let pgon_colour = Cesium.Color.WHITE;\r\n                if (model.attribs.query.hasAttrib(EEntType.VERT, 'rgb')) {\r\n                    const verts_i: number[] = model.geom.query.navAnyToVert(EEntType.PGON, pgon_i);\r\n                    const rgb_sum: Txyz = [0, 0, 0];\r\n                    for (const vert_i of verts_i) {\r\n                        let vert_rgb: Txyz = model.attribs.query.getAttribValue(EEntType.VERT, 'rgb', vert_i) as Txyz;\r\n                        if (!vert_rgb) { vert_rgb = [1, 1, 1]; }\r\n                        rgb_sum[0] = rgb_sum[0] + vert_rgb[0];\r\n                        rgb_sum[1] = rgb_sum[1] + vert_rgb[1];\r\n                        rgb_sum[2] = rgb_sum[2] + vert_rgb[2];\r\n                    }\r\n                    const num_verts: number = verts_i.length;\r\n                    pgon_colour = new Cesium.Color(rgb_sum[0] / num_verts, rgb_sum[1] / num_verts, rgb_sum[2] / num_verts, 1.0);\r\n                }\r\n                // create the edges\r\n                const wires_i: number[] = model.geom.query.navAnyToWire(EEntType.PGON, pgon_i);\r\n                for (const wire_i of wires_i) {\r\n                    const wire_posis_i: number[] = model.geom.query.navAnyToPosi(EEntType.WIRE, wire_i);\r\n                    if (wire_posis_i.length > 2) {\r\n                        // const wire_verts_i: number[] = model.geom.query.navAnyToVert(EEntType.WIRE, wire_i);\r\n                        // const wire_posis_i: number[] = wire_verts_i.map( wire_vert_i => model.geom.query.navVertToPosi(wire_vert_i) );\r\n                        const wire_points: any[] = wire_posis_i.map( wire_posi_i => posi_to_point_map.get(wire_posi_i) );\r\n                        if (model.geom.query.istWireClosed(wire_i)) {\r\n                            wire_points.push(wire_points[0]);\r\n                        }\r\n                        const line_geom = new Cesium.SimplePolylineGeometry({\r\n                            positions: wire_points,\r\n                            vertexFormat: Cesium.PerInstanceColorAppearance.VERTEX_FORMAT,\r\n                            perPositionHeight: true,\r\n                            // arcType: Cesium.ArcType.NONE,\r\n                            width: 1.0\r\n                        });\r\n                        const line_instance = new Cesium.GeometryInstance({\r\n                            geometry : line_geom,\r\n                            attributes : {\r\n                                color : Cesium.ColorGeometryInstanceAttribute.fromColor(Cesium.Color.BLACK)\r\n                            }\r\n                        });\r\n                        lines_instances.push(line_instance);\r\n                    }\r\n                }\r\n                // create the triangles\r\n                const pgon_tris_i: number[] = model.geom.query.navAnyToTri(EEntType.PGON, pgon_i);\r\n                for (const pgon_tri_i of pgon_tris_i) {\r\n                    // tris_i.push(pgon_tri_i);\r\n                    const tri_posis_i: number[] = model.geom.query.navAnyToPosi(EEntType.TRI, pgon_tri_i);\r\n                    const tri_points: any[] = tri_posis_i.map( posi_i => posi_to_point_map.get(posi_i) );\r\n                    const tri_geom = new Cesium.PolygonGeometry({\r\n                        perPositionHeight : true,\r\n                        polygonHierarchy: new Cesium.PolygonHierarchy(tri_points),\r\n                        vertexFormat : Cesium.PerInstanceColorAppearance.VERTEX_FORMAT\r\n                    });\r\n                    const instance = new Cesium.GeometryInstance({\r\n                        geometry : tri_geom,\r\n                        attributes : {\r\n                            color : Cesium.ColorGeometryInstanceAttribute.fromColor(pgon_colour)\r\n                        }\r\n                    });\r\n                    tris_instances.push(instance);\r\n                }\r\n            }\r\n            // get each polygon\r\n            const plines_i: number[] = model.geom.query.getEnts(EEntType.PLINE, false);\r\n            // get each pline\r\n            for (const pline_i of plines_i) {\r\n                let pline_colour = Cesium.Color.BLACK;\r\n                if (model.attribs.query.hasAttrib(EEntType.VERT, 'rgb')) {\r\n                    const verts_i: number[] = model.geom.query.navAnyToVert(EEntType.PLINE, pline_i);\r\n                    const rgb_sum: Txyz = [0, 0, 0];\r\n                    for (const vert_i of verts_i) {\r\n                        let vert_rgb: Txyz = model.attribs.query.getAttribValue(EEntType.VERT, 'rgb', vert_i) as Txyz;\r\n                        if (!vert_rgb) { vert_rgb = [0, 0, 0]; }\r\n                        rgb_sum[0] = rgb_sum[0] + vert_rgb[0];\r\n                        rgb_sum[1] = rgb_sum[1] + vert_rgb[1];\r\n                        rgb_sum[2] = rgb_sum[2] + vert_rgb[2];\r\n                    }\r\n                    const num_verts: number = verts_i.length;\r\n                    pline_colour = new Cesium.Color(rgb_sum[0] / num_verts, rgb_sum[1] / num_verts, rgb_sum[2] / num_verts, 1.0);\r\n                }\r\n                // create the edges\r\n                const wire_i: number = model.geom.query.navPlineToWire(pline_i);\r\n                const wire_posis_i: number[] = model.geom.query.navAnyToPosi(EEntType.WIRE, wire_i);\r\n                if (wire_posis_i.length > 1) {\r\n                    const wire_points: any[] = wire_posis_i.map( wire_posi_i => posi_to_point_map.get(wire_posi_i) );\r\n                    if (model.geom.query.istWireClosed(wire_i)) {\r\n                        wire_points.push(wire_points[0]);\r\n                    }\r\n                    const line_geom = new Cesium.SimplePolylineGeometry({\r\n                        positions: wire_points,\r\n                        vertexFormat: Cesium.PerInstanceColorAppearance.VERTEX_FORMAT,\r\n                        perPositionHeight: true,\r\n                        // arcType: Cesium.ArcType.NONE,\r\n                        width: 1.0\r\n                    });\r\n                    const line_instance = new Cesium.GeometryInstance({\r\n                        geometry : line_geom,\r\n                        attributes : {\r\n                            color : Cesium.ColorGeometryInstanceAttribute.fromColor(pline_colour)\r\n                        }\r\n                    });\r\n                    lines_instances.push(line_instance);\r\n                }\r\n            }\r\n            const lines_primitive = new Cesium.Primitive({\r\n                                        allowPicking: false,\r\n                                        geometryInstances : lines_instances,\r\n                                        shadows : Cesium.ShadowMode.DISABLED,\r\n                                        appearance : new Cesium.PerInstanceColorAppearance({\r\n                                            flat: true,\r\n                                            translucent : false\r\n                                        })\r\n                                    });\r\n            const tris_primitive =  new Cesium.Primitive({\r\n                                        allowPicking: true,\r\n                                        geometryInstances : tris_instances,\r\n                                        shadows : Cesium.ShadowMode.ENABLED,\r\n                                        appearance : new Cesium.PerInstanceColorAppearance({\r\n                                            translucent : false\r\n                                        })\r\n                                    });\r\n            this._primitives = [lines_primitive, tris_primitive];\r\n            for (const primitive of this._primitives) {\r\n                this._viewer.scene.primitives.add(Cesium.clone(primitive));\r\n            }\r\n\r\n            // const sphere = new Cesium.BoundingSphere(origin, 1e2);\r\n            // this._viewer.camera.viewBoundingSphere(sphere);\r\n            // this._camera = [sphere, this._viewer.camera];\r\n\r\n            //if (!this._camera) {\r\n                // set up the camera\r\n                const sphere = new Cesium.BoundingSphere(origin, 1e2);\r\n                this._viewer.camera.viewBoundingSphere(sphere);\r\n                this._camera = [sphere, this._viewer.camera];\r\n            //}\r\n\r\n\r\n            const extent = new Cesium.Rectangle.fromDegrees(\r\n                origin[0] - 0.1, origin[1] - 0.1,\r\n                origin[0] + 0.1, origin[1] + 0.1); // 100.3, 5.4, 100.4, 5.5);\r\n                // Cesium.Camera.DEFAULT_VIEW_RECTANGLE = extent;\r\n                // Cesium.Camera.DEFAULT_VIEW_FACTOR = 0;\r\n\r\n            this._viewer.render();\r\n        }\r\n    }\r\n    // PRIVATE METHODS\r\n    /**\r\n     * Get a set of image layers\r\n     */\r\n    private _getImageryViewModels(): any[] {\r\n        const view_models: any[] = [];\r\n        // view_models.push(new Cesium.ProviderViewModel({\r\n        //     name: 'Here Map',\r\n        //     iconUrl: Cesium.buildModuleUrl('Widgets/Images/ImageryProviders/openStreetMap.png'),\r\n        //     tooltip: 'OpenStreetMap (OSM) is a collaborative project to create a free editable \\\r\n        //          map of the world.\\nhttp://www.openstreetmap.org',\r\n        //     creationFunction: function () {\r\n        //         return new Cesium.HereMapsImageryProvider({\r\n        //             appId: 'r4wDXkIdwoefnLKzNBmn',\r\n        //             appCode: 'VknnhofMzg10PmECHFXHaw'\r\n        //         });\r\n        //     },\r\n        // }));\r\n        view_models.push(new Cesium.ProviderViewModel({\r\n            name: 'Open\\u00adStreet\\u00adMap',\r\n            iconUrl: Cesium.buildModuleUrl('Widgets/Images/ImageryProviders/openStreetMap.png'),\r\n            tooltip: 'OpenStreetMap (OSM) is a collaborative project to create a free editable \\\r\n                 map of the world.\\nhttp://www.openstreetmap.org',\r\n            creationFunction: function () {\r\n                return Cesium.createOpenStreetMapImageryProvider({\r\n                    url: 'https://a.tile.openstreetmap.org/',\r\n                });\r\n            },\r\n        }));\r\n        view_models.push(new Cesium.ProviderViewModel({\r\n            name: 'Stamen Toner',\r\n            iconUrl: Cesium.buildModuleUrl('Widgets/Images/ImageryProviders/stamenToner.png'),\r\n            tooltip: 'A high contrast black and white map.\\nhttp://www.maps.stamen.com/',\r\n            creationFunction: function () {\r\n                return Cesium.createOpenStreetMapImageryProvider({\r\n                    url: 'https://stamen-tiles.a.ssl.fastly.net/toner/',\r\n                });\r\n            },\r\n        }));\r\n        view_models.push(new Cesium.ProviderViewModel({\r\n            name: 'Stamen Toner(Lite)',\r\n            iconUrl: Cesium.buildModuleUrl('Widgets/Images/ImageryProviders/stamenToner.png'),\r\n            tooltip: 'A high contrast black and white map(Lite).\\nhttp://www.maps.stamen.com/',\r\n            creationFunction: function () {\r\n                return Cesium.createOpenStreetMapImageryProvider({\r\n                    url: 'https://stamen-tiles.a.ssl.fastly.net/toner-lite/',\r\n                });\r\n            },\r\n        }));\r\n        view_models.push(new Cesium.ProviderViewModel({\r\n            name: 'Terrain(Standard)',\r\n            iconUrl: Cesium.buildModuleUrl('Widgets/Images/TerrainProviders/CesiumWorldTerrain.png'),\r\n            tooltip: 'A high contrast black and white map(Standard).\\nhttp://www.maps.stamen.com/',\r\n            creationFunction: function () {\r\n                return Cesium.createOpenStreetMapImageryProvider({\r\n                    url: 'https://stamen-tiles.a.ssl.fastly.net/terrain/',\r\n                });\r\n            },\r\n        }));\r\n        view_models.push(new Cesium.ProviderViewModel({\r\n            name: 'Terrain(Background)',\r\n            iconUrl: Cesium.buildModuleUrl('Widgets/Images/TerrainProviders/CesiumWorldTerrain.png'),\r\n            tooltip: 'A high contrast black and white map(Background).\\nhttp://www.maps.stamen.com/',\r\n            creationFunction: function () {\r\n                return Cesium.createOpenStreetMapImageryProvider({\r\n                    url: 'https://stamen-tiles.a.ssl.fastly.net/terrain-background/',\r\n                });\r\n            },\r\n        }));\r\n        // view_models.push(new Cesium.ProviderViewModel({\r\n        //     name: \"Earth at Night\",\r\n        //     iconUrl: Cesium.buildModuleUrl(\"Widgets/Images/ImageryProviders/earthAtNight.png\"),\r\n        //     tooltip: \"The lights of cities and villages trace the outlines of civilization \\\r\n        //              in this global view of the Earth at night as seen by NASA/NOAA\\'s Suomi NPP satellite.\",\r\n        //     creationFunction: function () {\r\n        //         return new Cesium.IonImageryProvider({ assetId: 3812 });\r\n        //     },\r\n        // }));\r\n        // view_models.push(new Cesium.ProviderViewModel({\r\n        //     name: \"Natural Earth\\u00a0II\",\r\n        //     iconUrl: Cesium.buildModuleUrl(\"Widgets/Images/ImageryProviders/naturalEarthII.png\"),\r\n        //     tooltip: \"Natural Earth II, darkened for contrast.\\nhttp://www.naturalearthdata.com/\",\r\n        //     creationFunction: function () {\r\n        //         return Cesium.createTileMapServiceImageryProvider({\r\n        //             url: Cesium.buildModuleUrl(\"Assets/Textures/NaturalEarthII\"),\r\n        //         });\r\n        //     },\r\n        // }));\r\n        // view_models.push(new Cesium.ProviderViewModel({\r\n        //     name: \"Blue Marble\",\r\n        //     iconUrl: Cesium.buildModuleUrl(\"Widgets/Images/ImageryProviders/blueMarble.png\"),\r\n        //     tooltip: \"Blue Marble Next Generation July, 2004 imagery from NASA.\",\r\n        //     creationFunction: function () {\r\n        //         return new Cesium.IonImageryProvider({ assetId: 3845 });\r\n        //     },\r\n        // }));\r\n        return view_models;\r\n    }\r\n}\r\n\r\n","module.exports = \"<div id=\\\"gi-viewer-container\\\">\\r\\n    <cesium-viewer [model]='data' (eventClicked)=\\\"childEventClicked($event)\\\"></cesium-viewer>\\r\\n</div>\\r\\n\"","module.exports = \"#gi-viewer-container {\\n  width: 100%;\\n  height: 100%;\\n  overflow: hidden; }\\n\\n.mat-tab-group {\\n  margin-bottom: 0px; }\\n\\nas-split-area {\\n  position: relative;\\n  overflow: hidden auto !important; }\\n\\n#settings_button {\\n  position: absolute;\\n  top: 2px;\\n  right: 10px;\\n  cursor: pointer;\\n  z-index: 800;\\n  display: inline-block;\\n  vertical-align: bottom;\\n  background-color: transparent;\\n  color: #808080;\\n  border: none;\\n  outline: none;\\n  padding: 0px;\\n  width: 40px;\\n  height: 40px;\\n  transition: 0.3s;\\n  font-size: 14px; }\\n\\n#settings_button:hover {\\n    color: #E6E6E6; }\\n\\n#settings_button.active {\\n    color: #00006d; }\\n\\n#attrib {\\n  overflow: hidden !important; }\\n\\n#attrib attribute {\\n    height: calc(100% - 10px);\\n    display: flex;\\n    flex-flow: column nowrap;\\n    justify-content: space-between; }\\n\\nmodal-window {\\n  display: none; }\\n\\nmodal-window h1 {\\n    font-size: 15px;\\n    font-weight: 550;\\n    line-height: 35px; }\\n\\nmodal-window dl {\\n    margin: 20px 0;\\n    padding: 0;\\n    background-color: transparent; }\\n\\nmodal-window dl dd {\\n      list-style: none;\\n      padding: 8px 0;\\n      margin-left: 20px;\\n      margin-right: 20px;\\n      background-color: inherit;\\n      min-height: 12px;\\n      box-sizing: content-box;\\n      color: #373737;\\n      font-size: 12px;\\n      font-style: normal; }\\n\\nmodal-window dl dd .label {\\n        float: left;\\n        line-height: 15px;\\n        width: 120px; }\\n\\nmodal-window dl dd .label + div {\\n        float: left; }\\n\\nmodal-window dl dd .label, modal-window dl dd input {\\n        color: #373737;\\n        font-size: 12px;\\n        font-style: normal; }\\n\\nmodal-window dl dd .label:hover, modal-window dl dd input:hover {\\n          background-color: inherit; }\\n\\nmodal-window dl dd.colors hr {\\n        margin: 20px 0px 0px; }\\n\\nmodal-window dl dd.colors .label {\\n        line-height: 20px; }\\n\\nmodal-window dl dd.colors input {\\n        padding-left: 5px;\\n        margin-left: 0px !important;\\n        border: 1px solid #E6E6E6;\\n        width: 120px;\\n        vertical-align: top;\\n        text-transform: uppercase; }\\n\\nmodal-window dl dd.colors input.light {\\n          color: #ffffff !important; }\\n\\nmodal-window .closebtn {\\n    background: white;\\n    border: 1px solid #CCCCCC;\\n    box-sizing: border-box;\\n    margin-left: 10px; }\\n\\nbody.modal-open {\\n  overflow: hidden; }\\n\\n#settings_modal {\\n  /* The slider itself */\\n  /* Mouse-over effects */\\n  /* The slider handle (use -webkit- (Chrome, Opera, Safari, Edge) and -moz- (Firefox) to override default look) */ }\\n\\n#settings_modal .filebtn.setting {\\n    margin-top: 20px; }\\n\\n#settings_modal /deep/ .modal-window .modal-body {\\n    background: #fafafb; }\\n\\n#settings_modal .onoffswitch {\\n    position: relative;\\n    width: 30px;\\n    height: 15px;\\n    box-sizing: border-box;\\n    vertical-align: middle;\\n    -webkit-user-select: none;\\n    -moz-user-select: none;\\n    -ms-user-select: none; }\\n\\n#settings_modal .onoffswitch-checkbox {\\n    display: none; }\\n\\n#settings_modal .onoffswitch-label {\\n    display: block;\\n    overflow: hidden;\\n    height: inherit;\\n    background-color: #CCCCCC;\\n    cursor: pointer; }\\n\\n#settings_modal .onoffswitch-switch {\\n    position: absolute;\\n    top: 1px;\\n    left: 1px;\\n    width: 13px;\\n    height: 13px;\\n    background: #E6E6E6; }\\n\\n#settings_modal .onoffswitch-checkbox:hover:not(:checked) + .onoffswitch-label {\\n    background-color: rgba(0, 0, 109, 0.4); }\\n\\n#settings_modal .onoffswitch-checkbox:hover:not(:checked) + .onoffswitch-label .onoffswitch-switch {\\n      box-shadow: 2px 0px 0px 0px; }\\n\\n#settings_modal .onoffswitch-checkbox:disabled + .onoffswitch-label {\\n    background-color: #CCCCCC !important; }\\n\\n#settings_modal .onoffswitch-checkbox:disabled + .onoffswitch-label .onoffswitch-switch {\\n      box-shadow: none !important; }\\n\\n#settings_modal .onoffswitch-checkbox:checked + .onoffswitch-label {\\n    background-color: #00006d; }\\n\\n#settings_modal .onoffswitch-checkbox:checked + .onoffswitch-label .onoffswitch-switch {\\n      right: 0px;\\n      left: calc(100% - 2px);\\n      -webkit-transform: translateX(-100%);\\n              transform: translateX(-100%); }\\n\\n#settings_modal .onoffswitch-checkbox:disabled:checked + .onoffswitch-label .onoffswitch-inner,\\n  #settings_modal .onoffswitch-checkbox:disabled:checked + .onoffswitch-label .onoffswitch-switch {\\n    cursor: help; }\\n\\n#settings_modal .slidecontainer {\\n    width: 100%;\\n    /* Width of the outside container */\\n    height: 15px; }\\n\\n#settings_modal .slidecontainer:hover {\\n      background-color: transparent; }\\n\\n#settings_modal .slidecontainer.light {\\n      width: calc(100% - 120px); }\\n\\n#settings_modal .slidecontainer.light .slider {\\n        margin-left: 0px !important;\\n        width: calc(100% - 80px); }\\n\\n#settings_modal .slidecontainer.light .slider + input[type='text'] {\\n        margin-left: 15px !important; }\\n\\n#settings_modal .slider {\\n    -webkit-appearance: none;\\n    /* Override default CSS styles */\\n    -moz-appearance: none;\\n         appearance: none;\\n    width: calc(100% - 230px);\\n    max-width: 500px;\\n    height: 15px;\\n    /* Specified height */\\n    background: whitesmoke;\\n    /* Grey background */\\n    box-sizing: border-box;\\n    border: 2px solid #E6E6E6;\\n    outline: none;\\n    /* Remove outline */\\n    opacity: 0.7;\\n    /* Set transparency (for mouse-over effects on hover) */\\n    /* 0.2 seconds transition on hover */\\n    transition: opacity .2s;\\n    margin: 0;\\n    margin-left: 10px !important; }\\n\\n#settings_modal .slider:hover {\\n    opacity: 1;\\n    /* Fully shown on mouse-over */ }\\n\\n#settings_modal .slider::-webkit-slider-thumb {\\n    -webkit-appearance: none;\\n    appearance: none;\\n    width: 5px;\\n    height: 15px;\\n    background: #CCCCCC;\\n    border: 1px solid #808080;\\n    cursor: pointer; }\\n\\n#settings_modal .slider::-webkit-slider-thumb:hover, #settings_modal .slider::-webkit-slider-thumb:active {\\n      background: #00006d; }\\n\\n#settings_modal .slider::-moz-range-thumb {\\n    width: 5px;\\n    height: 15px;\\n    background: #CCCCCC;\\n    cursor: pointer; }\\n\\n#settings_modal .slider:disabled::-webkit-slider-thumb {\\n    background: white; }\\n\\n#settings_modal .slider:disabled::-moz-range-thumb {\\n    background: white; }\\n\\n#settings_modal .slider:disabled {\\n    cursor: help; }\\n\\n#settings_modal input + input {\\n    vertical-align: top;\\n    border: none;\\n    line-height: 20px;\\n    background: transparent;\\n    width: 60px;\\n    margin-left: 10px !important;\\n    height: 14px; }\\n\\n#settings_modal .number {\\n    width: 100px;\\n    padding-left: 5px;\\n    border: 1px solid #dddddd; }\\n\\n#settings_modal .light-shadow {\\n    width: 120px;\\n    float: left; }\\n\\n/deep/ #settingsTab {\\n  height: 100%;\\n  width: 100%;\\n  overflow-x: scroll; }\\n\\n/deep/ #settingsTab ul {\\n    background-color: transparent;\\n    margin: 0;\\n    padding-left: 0px;\\n    white-space: nowrap;\\n    width: 100%;\\n    min-width: -webkit-fit-content;\\n    min-width: -moz-fit-content;\\n    min-width: fit-content;\\n    display: inline-flex; }\\n\\n/deep/ #settingsTab ul li {\\n      list-style: none;\\n      float: left;\\n      min-width: 75px;\\n      color: #808080;\\n      overflow: visible;\\n      cursor: pointer;\\n      position: relative;\\n      height: inherit;\\n      padding: 0px; }\\n\\n/deep/ #settingsTab ul li span {\\n        font-family: sans-serif;\\n        margin-right: 2px;\\n        font-weight: 550;\\n        font-size: 12px;\\n        line-height: 15px;\\n        border: 1px solid transparent;\\n        position: relative;\\n        display: block;\\n        padding: 2px 7px;\\n        text-align: center;\\n        width: inherit;\\n        box-sizing: border-box;\\n        width: 100%;\\n        margin-top: -1px;\\n        height: 21px; }\\n\\n/deep/ #settingsTab ul li:hover {\\n        background-color: transparent; }\\n\\n/deep/ #settingsTab ul li:hover span {\\n          color: #00006d;\\n          background-color: transparent; }\\n\\n/deep/ #settingsTab ul li.active {\\n        background-color: transparent; }\\n\\n/deep/ #settingsTab ul li.active span {\\n          color: #00006d;\\n          cursor: default;\\n          background-color: #fafafb;\\n          border: 1px solid #B3B3B3;\\n          border-bottom: 0px; }\\n\\n/deep/ #settingsTab .pane {\\n    margin-top: -1px;\\n    border: 1px solid #B3B3B3; }\\n\\n/deep/ #settingsTab .pane .mat-elevation-z1 {\\n      display: flex;\\n      flex-flow: column nowrap;\\n      justify-content: space-between;\\n      box-shadow: none; }\\n\\n/deep/ #settingsTab hr {\\n    border: 1px solid #dfdfdf;\\n    background: #dfdfdf; }\\n\\n/*# sourceMappingURL=data:application/json;base64, */\"","import { GIModel } from '@libs/geo-info/GIModel';\r\nimport { Locale, CesiumSettings } from './gi-cesium-viewer.settings';\r\nimport { isDevMode } from '@angular/core';\r\n\r\n// import @angular stuff\r\nimport { Component, Input, OnInit } from '@angular/core';\r\n\r\n// import app services\r\nimport { DataCesiumService } from './data/data.cesium.service';\r\nimport { ModalService } from './html/modal-window.service';\r\nimport { ColorPickerService } from 'ngx-color-picker';\r\n\r\n// import others\r\n\r\n/**\r\n * GICesiumViewerComponent\r\n * This component is used in /app/model-viewers/model-viewers-container.component.html\r\n */\r\n@Component({\r\n    selector: 'gi-viewer',\r\n    templateUrl: './gi-cesium-viewer.component.html',\r\n    styleUrls: ['./gi-cesium-viewer.component.scss'],\r\n})\r\nexport class GICesiumViewerComponent implements OnInit {\r\n    public dataservice: DataCesiumService;\r\n    // model data passed to the viewer\r\n    @Input() data: GIModel;\r\n    public modelData: GIModel;\r\n    public settings: CesiumSettings;\r\n    public clickedEvent: Event;\r\n\r\n    /**\r\n     * constructor\r\n     * @param dataService\r\n     */\r\n    constructor(private dataService: DataCesiumService, private modalService: ModalService, private cpService: ColorPickerService) {\r\n        // const previous_settings = JSON.parse(localStorage.getItem('mpm_settings'));\r\n        const singapore = Locale[0];\r\n    }\r\n    /**\r\n     * ngOnInit\r\n     */\r\n    ngOnInit() {\r\n        if (localStorage.getItem('mpm_settings') !== null) {\r\n            // this.settings = JSON.parse(localStorage.getItem('mpm_settings'));\r\n        }\r\n        if (this.dataService.getCesiumScene() === undefined) {\r\n            this.dataService.setCesiumScene(this.settings);\r\n        }\r\n        this.dataService.createCesiumViewer();\r\n    }\r\n    /**\r\n     * childEventClicked\r\n     * @param event\r\n     */\r\n    childEventClicked(event: Event) {\r\n        this.clickedEvent = event;\r\n    }\r\n    /**\r\n     * settingOnChange\r\n     * @param setting\r\n     * @param value\r\n     */\r\n    public settingOnChange(setting: string, value?: number) {\r\n        const scene = this.dataService.getCesiumScene();\r\n        // scene._renderer.render(scene._scene, scene._camera);\r\n    }\r\n    /**\r\n     *\r\n     * @param id\r\n     */\r\n    public openModal(id: string) {\r\n        if (localStorage.getItem('mpm_settings') !== null) {\r\n            // this.settings = JSON.parse(localStorage.getItem('mpm_settings'));\r\n        }\r\n        if (document.body.className === 'modal-open') {\r\n            this.modalService.close(id);\r\n        } else {\r\n            this.modalService.open(id);\r\n            const scene = this.dataService.getCesiumScene();\r\n        }\r\n    }\r\n    /**\r\n     *\r\n     * @param id\r\n     * @param save\r\n     */\r\n    public closeModal(id: string, save = false) {\r\n        this.modalService.close(id);\r\n        if (save) {\r\n            this.dataService.getCesiumScene().settings = this.settings;\r\n            // localStorage.setItem('mpm_settings', JSON.stringify(this.settings));\r\n            // document.getElementById('executeButton').click();\r\n        }\r\n    }\r\n}\r\n","// import @angular stuff\r\nimport { NgModule, ModuleWithProviders } from '@angular/core';\r\nimport { MatSliderModule } from '@angular/material/slider';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { MatTooltipModule} from '@angular/material/tooltip';\r\nimport { MatIconModule} from '@angular/material';\r\nimport { MatExpansionModule} from '@angular/material/expansion';\r\n\r\n// import other modules\r\nimport { AngularSplitModule } from 'angular-split';\r\nimport { NgxPaginationModule} from 'ngx-pagination';\r\nimport { ColorPickerModule } from 'ngx-color-picker';\r\n\r\n// import app components\r\nimport { GICesiumViewerComponent } from './gi-cesium-viewer.component';\r\nimport { CesiumViewerComponent } from './cesium/cesium-viewer.component';\r\nimport { CesiumViewerService } from './cesium/cesium-viewer.service';\r\n\r\n// import html components\r\nimport { TabComponent } from './html/tab.component';\r\nimport { TabsComponent } from './html/tabs.component';\r\nimport { DropdownMenuComponent } from './html/dropdown-menu.component';\r\nimport { ModalWindowComponent } from './html/modal-window.component';\r\nimport { ModalService } from './html/modal-window.service';\r\n\r\n// import { AttributeComponent } from './attribute/attribute.component';\r\n// import { ATabComponent } from './attribute/tab.component';\r\n// import { ATabsComponent } from './attribute/tabs.component';\r\n\r\n\r\n/**\r\n * GICesiumViewer\r\n * A viewer for Geo-Info models.\r\n */\r\n@NgModule({\r\n    declarations: [\r\n        GICesiumViewerComponent,\r\n        CesiumViewerComponent,\r\n        TabComponent,\r\n        TabsComponent,\r\n        DropdownMenuComponent,\r\n        ModalWindowComponent\r\n        // AttributeComponent,\r\n        // ATabComponent,\r\n        // ATabsComponent,\r\n    ],\r\n    exports: [\r\n        GICesiumViewerComponent\r\n    ],\r\n    imports: [\r\n        CommonModule,\r\n        AngularSplitModule,\r\n        MatSliderModule,\r\n        MatIconModule,\r\n        NgxPaginationModule,\r\n        MatExpansionModule,\r\n        MatTooltipModule,\r\n        FormsModule,\r\n        ColorPickerModule\r\n    ],\r\n    providers: [\r\n        ModalService,\r\n        CesiumViewerService\r\n    ]\r\n})\r\nexport class GICesiumViewerModule {\r\n     static forRoot(): ModuleWithProviders {\r\n        return {\r\n            ngModule: GICesiumViewerModule\r\n        };\r\n    }\r\n}\r\n","import { VERSION } from '@env/version';\r\n\r\nexport interface CesiumSettings {\r\n    normals: { show: boolean, size: number };\r\n    axes: { show: boolean, size: number };\r\n    grid: { show: boolean, size: number };\r\n    positions: { show: boolean, size: number };\r\n    wireframe: { show: boolean };\r\n    version: string;\r\n}\r\n\r\nexport const Locale = [{\r\n    name: 'Singapore',\r\n    zone: 'Asia/Singapore',\r\n    lat: '1.35',\r\n    long: '103.8'\r\n}];\r\n","export * from './gi-cesium-viewer.module';\r\n","module.exports = \"<div\\r\\n    [hidden]=\\\"!visible\\\"\\r\\n    [style.left.px]='position.x'\\r\\n    [style.top.px]='position.y'\\r\\n>\\r\\n    <ul>\\r\\n        <ol>Please choose:</ol>\\r\\n        <ol *ngFor=\\\"let item of items\\\" (click)=\\\"selectItem(item)\\\">{{item.label}}</ol>\\r\\n    </ul>\\r\\n</div>\\r\\n\"","module.exports = \"div {\\n  position: absolute; }\\n  div ul {\\n    padding: 0;\\n    border: 1px solid #eeeeee;\\n    box-shadow: 1px 1px 3px 0px #bbbbbb; }\\n  div ul ol {\\n      cursor: pointer;\\n      list-style: none;\\n      background: #ffffff;\\n      min-width: 20px;\\n      padding: 5px 10px; }\\n  div ul ol:hover {\\n        background: #eeeeee; }\\n  div ul:first-child {\\n      background: #f9f9f9; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kZWwtdmlld2Vycy9hbGwtdmlld2Vycy9naS1jZXNpdW0tdmlld2VyL2h0bWwvQzpcXERyb3Bib3hcXEZpbGVzXFxTb2Z0d2FyZVxcR2l0SHViXFxkZXNpZ24tYXV0b21hdGlvblxcbW9iaXVzLXBhcmFtZXRyaWMtbW9kZWxsZXIvc3JjXFxhcHBcXG1vZGVsLXZpZXdlcnNcXGFsbC12aWV3ZXJzXFxnaS1jZXNpdW0tdmlld2VyXFxodG1sXFxkcm9wZG93bi1tZW51LmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksa0JBQWtCLEVBQUE7RUFEdEI7SUFHUSxVQUFVO0lBQ1YseUJBQXlCO0lBQ3pCLG1DQUFtQyxFQUFBO0VBTDNDO01BT1ksZUFBZTtNQUNmLGdCQUFnQjtNQUNoQixtQkFBbUI7TUFDbkIsZUFBZTtNQUNmLGlCQUFpQixFQUFBO0VBWDdCO1FBYWdCLG1CQUFtQixFQUFBO0VBYm5DO01BaUJZLG1CQUFtQixFQUFBIiwiZmlsZSI6InNyYy9hcHAvbW9kZWwtdmlld2Vycy9hbGwtdmlld2Vycy9naS1jZXNpdW0tdmlld2VyL2h0bWwvZHJvcGRvd24tbWVudS5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbImRpdntcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIHVse1xyXG4gICAgICAgIHBhZGRpbmc6IDA7XHJcbiAgICAgICAgYm9yZGVyOiAxcHggc29saWQgI2VlZWVlZTtcclxuICAgICAgICBib3gtc2hhZG93OiAxcHggMXB4IDNweCAwcHggI2JiYmJiYjtcclxuICAgICAgICBvbHtcclxuICAgICAgICAgICAgY3Vyc29yOiBwb2ludGVyO1xyXG4gICAgICAgICAgICBsaXN0LXN0eWxlOiBub25lO1xyXG4gICAgICAgICAgICBiYWNrZ3JvdW5kOiAjZmZmZmZmO1xyXG4gICAgICAgICAgICBtaW4td2lkdGg6IDIwcHg7XHJcbiAgICAgICAgICAgIHBhZGRpbmc6IDVweCAxMHB4O1xyXG4gICAgICAgICAgICAmOmhvdmVye1xyXG4gICAgICAgICAgICAgICAgYmFja2dyb3VuZDogI2VlZWVlZTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICAmOmZpcnN0LWNoaWxke1xyXG4gICAgICAgICAgICBiYWNrZ3JvdW5kOiAjZjlmOWY5O1xyXG4gICAgICAgIH1cclxuICAgIH1cclxufSJdfQ== */\"","import { Component, Output, EventEmitter } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'dropdown-menu',\r\n    styleUrls: ['./dropdown-menu.component.scss'],\r\n    templateUrl: './dropdown-menu.component.html'\r\n})\r\nexport class DropdownMenuComponent {\r\n    @Output() selected = new EventEmitter<number>();\r\n    items: { id: number, label: string }[];\r\n    position: {x: number, y: number};\r\n    visible: boolean;\r\n\r\n    setItems(items: number[], label: string) {\r\n        const dropdownMenu = [];\r\n        items.map(item => dropdownMenu.push({ id: item, label: `${label}${item}` }));\r\n        // console.log('dropdownMenu', dropdownMenu);\r\n        this.items = dropdownMenu;\r\n    }\r\n    selectItem(item: {id: number, label: string}) {\r\n        this.visible = false;\r\n        this.selected.emit(item.id);\r\n    }\r\n}\r\n","module.exports = \"<div class=\\\"modal-window\\\" id=\\\"modal-window\\\">\\r\\n    <div class=\\\"modal-body\\\">\\r\\n        <ng-content></ng-content>\\r\\n    </div>\\r\\n</div>\\r\\n<div class=\\\"modal-background\\\"></div>\"","module.exports = \"@charset \\\"UTF-8\\\";\\n.modal-window {\\n  max-width: 777px;\\n  position: absolute;\\n  top: 0;\\n  right: 0;\\n  bottom: 0;\\n  z-index: 1000;\\n  overflow: auto;\\n  -webkit-transition: transform 1s ease; }\\n.modal-window.open {\\n    -webkit-animation: slide 0.5s forwards;\\n    animation: slide 0.5s forwards; }\\n.modal-window     .modal-body {\\n    padding: 20px;\\n    background: #fff;\\n    margin: 0;\\n    min-height: calc(100% - 40px);\\n    position: relative; }\\n@-webkit-keyframes slide {\\n  100% {\\n    left: 0; } }\\n@keyframes slide {\\n  100% {\\n    left: 0; } }\\n.modal-background {\\n  position: fixed;\\n  top: 0;\\n  right: 0;\\n  bottom: 0;\\n  left: 0;\\n  background-color: transparent;\\n  opacity: 0.5;\\n  z-index: 900; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kZWwtdmlld2Vycy9hbGwtdmlld2Vycy9naS1jZXNpdW0tdmlld2VyL2h0bWwvbW9kYWwtd2luZG93LmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC9tb2RlbC12aWV3ZXJzL2FsbC12aWV3ZXJzL2dpLWNlc2l1bS12aWV3ZXIvaHRtbC9DOlxcRHJvcGJveFxcRmlsZXNcXFNvZnR3YXJlXFxHaXRIdWJcXGRlc2lnbi1hdXRvbWF0aW9uXFxtb2JpdXMtcGFyYW1ldHJpYy1tb2RlbGxlci9zcmNcXGFwcFxcbW9kZWwtdmlld2Vyc1xcYWxsLXZpZXdlcnNcXGdpLWNlc2l1bS12aWV3ZXJcXGh0bWxcXG1vZGFsLXdpbmRvdy5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxnQkFBZ0I7QUNBaEI7RUFDSSxnQkFBZ0I7RUFDaEIsa0JBQWtCO0VBQ2xCLE1BQU07RUFDTixRQUFRO0VBQ1IsU0FBUztFQUVULGFBQWE7RUFDYixjQUFjO0VBQ2QscUNBQXFDLEVBQUE7QUFUekM7SUFXUSxzQ0FBc0M7SUFDdEMsOEJBQThCLEVBQUE7QUFadEM7SUFnQlEsYUFBYTtJQUNiLGdCQUFnQjtJQUNoQixTQUFTO0lBQ1QsNkJBQTZCO0lBSTdCLGtCQUFrQixFQUFBO0FBSzFCO0VBQ0k7SUFBTyxPQUFPLEVBQUEsRUFBQTtBQUdsQjtFQUNJO0lBQU8sT0FBTyxFQUFBLEVBQUE7QUFHbEI7RUFDSSxlQUFlO0VBQ2YsTUFBTTtFQUNOLFFBQVE7RUFDUixTQUFTO0VBQ1QsT0FBTztFQUNQLDZCQUE2QjtFQUM3QixZQUFZO0VBQ1osWUFBWSxFQUFBIiwiZmlsZSI6InNyYy9hcHAvbW9kZWwtdmlld2Vycy9hbGwtdmlld2Vycy9naS1jZXNpdW0tdmlld2VyL2h0bWwvbW9kYWwtd2luZG93LmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiQGNoYXJzZXQgXCJVVEYtOFwiO1xuLm1vZGFsLXdpbmRvdyB7XG4gIG1heC13aWR0aDogNzc3cHg7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiAwO1xuICByaWdodDogMDtcbiAgYm90dG9tOiAwO1xuICB6LWluZGV4OiAxMDAwO1xuICBvdmVyZmxvdzogYXV0bztcbiAgLXdlYmtpdC10cmFuc2l0aW9uOiB0cmFuc2Zvcm0gMXMgZWFzZTsgfVxuICAubW9kYWwtd2luZG93Lm9wZW4ge1xuICAgIC13ZWJraXQtYW5pbWF0aW9uOiBzbGlkZSAwLjVzIGZvcndhcmRzO1xuICAgIGFuaW1hdGlvbjogc2xpZGUgMC41cyBmb3J3YXJkczsgfVxuICAubW9kYWwtd2luZG93IMKgwqDCoMKgLm1vZGFsLWJvZHkge1xuICAgIHBhZGRpbmc6IDIwcHg7XG4gICAgYmFja2dyb3VuZDogI2ZmZjtcbiAgICBtYXJnaW46IDA7XG4gICAgbWluLWhlaWdodDogY2FsYygxMDAlIC0gNDBweCk7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlOyB9XG5cbkAtd2Via2l0LWtleWZyYW1lcyBzbGlkZSB7XG4gIDEwMCUge1xuICAgIGxlZnQ6IDA7IH0gfVxuXG5Aa2V5ZnJhbWVzIHNsaWRlIHtcbiAgMTAwJSB7XG4gICAgbGVmdDogMDsgfSB9XG5cbi5tb2RhbC1iYWNrZ3JvdW5kIHtcbiAgcG9zaXRpb246IGZpeGVkO1xuICB0b3A6IDA7XG4gIHJpZ2h0OiAwO1xuICBib3R0b206IDA7XG4gIGxlZnQ6IDA7XG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xuICBvcGFjaXR5OiAwLjU7XG4gIHotaW5kZXg6IDkwMDsgfVxuIiwiLm1vZGFsLXdpbmRvdyB7XHJcbiAgICBtYXgtd2lkdGg6IDc3N3B4O1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgdG9wOiAwO1xyXG4gICAgcmlnaHQ6IDA7XHJcbiAgICBib3R0b206IDA7XHJcbiAgICAvLyBsZWZ0OiAwO1xyXG4gICAgei1pbmRleDogMTAwMDtcclxuICAgIG92ZXJmbG93OiBhdXRvO1xyXG4gICAgLXdlYmtpdC10cmFuc2l0aW9uOiB0cmFuc2Zvcm0gMXMgZWFzZTtcclxuICAgICYub3BlbntcclxuICAgICAgICAtd2Via2l0LWFuaW1hdGlvbjogc2xpZGUgMC41cyBmb3J3YXJkcztcclxuICAgICAgICBhbmltYXRpb246IHNsaWRlIDAuNXMgZm9yd2FyZHM7XHJcbiAgICB9XHJcblxyXG7CoMKgwqDCoC5tb2RhbC1ib2R5IHtcclxuICAgICAgICBwYWRkaW5nOiAyMHB4O1xyXG4gICAgICAgIGJhY2tncm91bmQ6ICNmZmY7XHJcbiAgICAgICAgbWFyZ2luOiAwO1xyXG4gICAgICAgIG1pbi1oZWlnaHQ6IGNhbGMoMTAwJSAtIDQwcHgpO1xyXG4gICAgICAgIC8vIHdpZHRoOiA1MCU7XHJcbiAgICAgICAgLy8gbWFyZ2luLWxlZnQ6IDUwJTtcclxuICAgICAgICAvLyBsZWZ0OiAtMjUlO1xyXG4gICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgIH1cclxufVxyXG5cclxuXHJcbkAtd2Via2l0LWtleWZyYW1lcyBzbGlkZSB7XHJcbiAgICAxMDAlIHsgbGVmdDogMDsgfVxyXG59XHJcblxyXG5Aa2V5ZnJhbWVzIHNsaWRlIHtcclxuICAgIDEwMCUgeyBsZWZ0OiAwOyB9XHJcbn1cclxuXHJcbi5tb2RhbC1iYWNrZ3JvdW5kIHtcclxuICAgIHBvc2l0aW9uOiBmaXhlZDtcclxuICAgIHRvcDogMDtcclxuICAgIHJpZ2h0OiAwO1xyXG4gICAgYm90dG9tOiAwO1xyXG4gICAgbGVmdDogMDtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xyXG4gICAgb3BhY2l0eTogMC41O1xyXG4gICAgei1pbmRleDogOTAwO1xyXG59Il19 */\"","import { Component, Input, OnInit, OnDestroy, ElementRef, Output, EventEmitter } from '@angular/core';\r\nimport { ModalService } from './modal-window.service';\r\n\r\n@Component({\r\n    selector: 'modal-window',\r\n    styleUrls: ['./modal-window.component.scss'],\r\n    templateUrl: './modal-window.component.html'\r\n})\r\n\r\nexport class ModalWindowComponent implements OnInit, OnDestroy {\r\n    @Input() id: string;\r\n    private element: any;\r\n    private containerWidth: number;\r\n\r\n    constructor(private modalService: ModalService, private el: ElementRef) {\r\n        this.element = el.nativeElement;\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        const modal = this;\r\n\r\n        // ensure id attribute exists\r\n        if (!this.id) {\r\n            console.error('modal must have an id');\r\n            return;\r\n        }\r\n\r\n        const leftContent = document.getElementsByClassName('content__panel')[0];\r\n        this.containerWidth = leftContent.clientWidth;\r\n        const modalWindow = this.element.querySelector('.modal-window');\r\n        modalWindow.style.width = `${this.containerWidth + 11}px`;\r\n        modalWindow.style.left = `${-this.containerWidth - 11}px`;\r\n\r\n        // move element to bottom of page (just before </body>) so it can be displayed above everything else\r\n        document.body.appendChild(this.element);\r\n\r\n        // close modal on background click\r\n        this.element.addEventListener('click', function (e: any) {\r\n            if (e.target.className === 'modal-background') {\r\n                modal.close();\r\n            }\r\n        });\r\n\r\n        // add self (this modal instance) to the modal service so it's accessible from controllers\r\n        this.modalService.add(this);\r\n    }\r\n\r\n    // remove self from modal service when directive is destroyed\r\n    ngOnDestroy(): void {\r\n        this.modalService.remove(this.id);\r\n        this.element.remove();\r\n    }\r\n\r\n    // open modal\r\n    open(): void {\r\n        const modalWindow = document.getElementById('modal-window');\r\n        // modalWindow.style.left = 0;\r\n        modalWindow.classList.add('open');\r\n        this.element.style.display = 'block';\r\n        document.body.classList.add('modal-open');\r\n    }\r\n\r\n    // close modal\r\n    close(): void {\r\n        this.element.style.display = 'none';\r\n        const modalWindow = this.element.querySelector('.modal-window');\r\n        // modalWindow.style.left = `${-this.containerWidth - 11}px`;\r\n        modalWindow.classList.remove('open');\r\n        document.body.classList.remove('modal-open');\r\n    }\r\n}\r\n","export class ModalService {\r\n    private modals: any[] = [];\r\n    add(modal: any) {\r\n        // add modal to array of active modals\r\n        this.modals.push(modal);\r\n    }\r\n\r\n    remove(id: string) {\r\n        // remove modal from array of active modals\r\n        this.modals = this.modals.filter(x => x.id !== id);\r\n    }\r\n\r\n    open(id: string) {\r\n        const modal: any = this.modals.filter(x => x.id === id)[0];\r\n        modal.open();\r\n    }\r\n\r\n    close(id: string) {\r\n        // close modal specified by id\r\n        const modal: any = this.modals.filter(x => x.id === id)[0];\r\n        modal.close();\r\n    }\r\n}\r\n","import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'tab',\r\n  styles: [\r\n    `\r\n    .pane{\r\n      padding: 0;\r\n    }\r\n  `\r\n  ],\r\n  template: `\r\n    <div [hidden]=\"!active\" class=\"pane\">\r\n      <ng-content></ng-content>\r\n    </div>\r\n  `\r\n})\r\nexport class TabComponent {\r\n    // tslint:disable-next-line: no-input-rename\r\n    @Input('tabTitle') title: string;\r\n    @Input() active = false;\r\n    // tslint:disable-next-line: no-input-rename\r\n    @Input('index') index: number;\r\n}\r\n","module.exports = \"<ul class=\\\"nav nav-tabs\\\">\\r\\n    <li\\r\\n        *ngFor=\\\"let tab of tabs;\\\"\\r\\n        (click)=\\\"selectTab(tab)\\\"\\r\\n        [class.active]=\\\"tab.active\\\"\\r\\n    >\\r\\n        <div>\\r\\n            <span>{{tab.title}}</span>\\r\\n        </div>\\r\\n    </li>\\r\\n    \\r\\n</ul>\\r\\n<ng-content></ng-content>\\r\\n\"","module.exports = \"/* Style The Dropdown Button */\\n.dropbtn {\\n  background-color: transparent;\\n  color: #808080;\\n  border: 1px solid transparent;\\n  cursor: pointer;\\n  font-family: sans-serif;\\n  font-weight: 550;\\n  font-size: 12px;\\n  line-height: 15px;\\n  outline: none;\\n  text-align: center;\\n  width: 100%;\\n  height: 21px;\\n  margin-top: -1px;\\n  padding-right: 10px;\\n  border-bottom: 2px solid transparent; }\\n.dropbtn::after {\\n  content: '';\\n  width: 0;\\n  height: 0;\\n  border-left: 4px solid transparent;\\n  border-right: 4px solid transparent;\\n  border-top: 4px solid #505050;\\n  border-bottom: none;\\n  position: absolute;\\n  top: 7px;\\n  right: 6px; }\\n/* The container <div> - needed to position the dropdown content */\\n.dropdown {\\n  position: absolute;\\n  display: inline-block;\\n  left: 0px;\\n  width: 100%; }\\n/* Dropdown Content (Hidden by Default) */\\n.dropdown-content {\\n  display: none;\\n  position: absolute;\\n  background-color: #ececec;\\n  min-width: 85px;\\n  box-shadow: 0px 8px 16px 0px rgba(0, 0, 0, 0.2);\\n  z-index: 500;\\n  top: 19px; }\\n/* Links inside the dropdown */\\n.dropdown-content div {\\n  color: black;\\n  padding: 6px 8px;\\n  text-decoration: none; }\\n/* Change color of dropdown links on hover */\\n.dropdown-content div:hover {\\n  background-color: #fefefe; }\\n/* Show the dropdown menu on hover */\\n/* Change the background color of the dropdown button when the dropdown content is shown */\\n.dropdown:hover .dropbtn {\\n  color: #00006d; }\\n.nav-tabs li.active .dropbtn {\\n  color: #00006d;\\n  background-color: whitesmoke;\\n  border: 1px solid #B3B3B3;\\n  border-bottom: 2px solid whitesmoke; }\\n.nav-tabs li.open .dropbtn::after {\\n  content: '';\\n  border-top: none;\\n  border-bottom: 4px solid #505050; }\\n#topology_dropdown, #object_dropdown {\\n  display: none;\\n  position: absolute;\\n  width: -webkit-fit-content;\\n  width: -moz-fit-content;\\n  width: fit-content;\\n  transition: display 0.4s;\\n  z-index: 99999999;\\n  background-color: #fafafb;\\n  border: 1px solid #808080;\\n  box-shadow: none; }\\n#topology_dropdown div, #object_dropdown div {\\n    cursor: pointer;\\n    display: block;\\n    min-width: 100px;\\n    max-width: 300px;\\n    overflow: hidden;\\n    line-height: 20px;\\n    background-color: #fafafb;\\n    border: 0px;\\n    margin: 0px;\\n    padding: 0px 10px 0px 10px;\\n    line-height: 30px;\\n    height: 30px;\\n    font-size: 12px;\\n    color: #373737; }\\n#topology_dropdown div:hover, #object_dropdown div:hover {\\n      color: #00006d;\\n      background-color: #E6E6E6; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kZWwtdmlld2Vycy9hbGwtdmlld2Vycy9naS1jZXNpdW0tdmlld2VyL2h0bWwvQzpcXERyb3Bib3hcXEZpbGVzXFxTb2Z0d2FyZVxcR2l0SHViXFxkZXNpZ24tYXV0b21hdGlvblxcbW9iaXVzLXBhcmFtZXRyaWMtbW9kZWxsZXIvc3JjXFxhcHBcXG1vZGVsLXZpZXdlcnNcXGFsbC12aWV3ZXJzXFxnaS1jZXNpdW0tdmlld2VyXFxodG1sXFx0YWJzLmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC9tb2RlbC12aWV3ZXJzL2FsbC12aWV3ZXJzL2dpLWNlc2l1bS12aWV3ZXIvaHRtbC9DOlxcRHJvcGJveFxcRmlsZXNcXFNvZnR3YXJlXFxHaXRIdWJcXGRlc2lnbi1hdXRvbWF0aW9uXFxtb2JpdXMtcGFyYW1ldHJpYy1tb2RlbGxlci9zcmNcXHNjc3NcXGNvbG9ycy5zY3NzIiwic3JjL2FwcC9tb2RlbC12aWV3ZXJzL2FsbC12aWV3ZXJzL2dpLWNlc2l1bS12aWV3ZXIvaHRtbC9DOlxcRHJvcGJveFxcRmlsZXNcXFNvZnR3YXJlXFxHaXRIdWJcXGRlc2lnbi1hdXRvbWF0aW9uXFxtb2JpdXMtcGFyYW1ldHJpYy1tb2RlbGxlci9zcmNcXHNjc3NcXHZhcmlhYmxlcy5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUdBLDhCQUFBO0FBQ0E7RUFDSSw2QkFBNkI7RUFDN0IsY0FBYztFQUNkLDZCQUE2QjtFQUM3QixlQUFlO0VBQ2YsdUJBQXVCO0VBQ3ZCLGdCQUFnQjtFQUNoQixlQUFlO0VBQ2YsaUJBQWlCO0VBQ2pCLGFBQWE7RUFDYixrQkFBa0I7RUFDbEIsV0FBVztFQUNYLFlBQVk7RUFDWixnQkFBZ0I7RUFDaEIsbUJBQW1CO0VBQ25CLG9DQUFvQyxFQUFBO0FBR3hDO0VBQ0ksV0FBVztFQUNYLFFBQVE7RUFDUixTQUFTO0VBQ1Qsa0NBQWtDO0VBQ2xDLG1DQUFtQztFQUNuQyw2QkFBNkI7RUFDN0IsbUJBQW1CO0VBQ25CLGtCQUFrQjtFQUNsQixRQUFRO0VBQ1IsVUFBVSxFQUFBO0FBR1osa0VBQUE7QUFDQTtFQUNFLGtCQUFrQjtFQUNsQixxQkFBcUI7RUFDckIsU0FBUztFQUNULFdBQVcsRUFBQTtBQUdiLHlDQUFBO0FBQ0E7RUFDRSxhQUFhO0VBQ2Isa0JBQWtCO0VBQ2xCLHlCQUF5QjtFQUN6QixlQUFlO0VBQ2YsK0NBQTRDO0VBQzVDLFlBQVk7RUFDWixTQUFTLEVBQUE7QUFHWCw4QkFBQTtBQUNBO0VBQ0UsWUFBWTtFQUNaLGdCQUFnQjtFQUNoQixxQkFBcUIsRUFBQTtBQUd2Qiw0Q0FBQTtBQUNBO0VBQTZCLHlCQUF5QixFQUFBO0FBRXRELG9DQUFBO0FBS0EsMEZBQUE7QUFDQTtFQUNFLGNBQ0osRUFBQTtBQUVBO0VBR1ksY0FBYztFQUNkLDRCQUE0QjtFQUM1Qix5QkFBeUI7RUFDekIsbUNBQW1DLEVBQUE7QUFOL0M7RUFXWSxXQUFXO0VBQ1gsZ0JBQWdCO0VBQ2hCLGdDQUFnQyxFQUFBO0FBSzVDO0VBQ0ksYUFBYTtFQUNiLGtCQUFrQjtFQUNsQiwwQkFBa0I7RUFBbEIsdUJBQWtCO0VBQWxCLGtCQUFrQjtFQUNsQix3QkFBd0I7RUFFeEIsaUJBQWlCO0VBQ2pCLHlCQzVGdUI7RUQ2RnZCLHlCQ25HWTtFRG9HWixnQkFBZ0IsRUFBQTtBQVRwQjtJQVlRLGVBQWU7SUFDZixjQUFjO0lBQ2QsZ0JBQWdCO0lBQ2hCLGdCQUFnQjtJQUNoQixnQkFBZ0I7SUFDaEIsaUJBQWlCO0lBQ2pCLHlCQ3ZHbUI7SUR3R25CLFdBQVc7SUFDWCxXQUFXO0lBQ1gsMEJBQTBCO0lBQzFCLGlCRTVHSztJRjZHTCxZRTdHSztJRjhHTCxlRS9HSztJRmdITCxjQzNHUSxFQUFBO0FEa0ZoQjtNQTJCWSxjQzNHbUI7TUQ0R25CLHlCQ25ISSxFQUFBIiwiZmlsZSI6InNyYy9hcHAvbW9kZWwtdmlld2Vycy9hbGwtdmlld2Vycy9naS1jZXNpdW0tdmlld2VyL2h0bWwvdGFicy5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIkBpbXBvcnQgJ35zY3NzL2NvbG9ycyc7XHJcbkBpbXBvcnQgJ35zY3NzL3ZhcmlhYmxlcyc7XHJcblxyXG4vKiBTdHlsZSBUaGUgRHJvcGRvd24gQnV0dG9uICovXHJcbi5kcm9wYnRuIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xyXG4gICAgY29sb3I6ICM4MDgwODA7XHJcbiAgICBib3JkZXI6IDFweCBzb2xpZCB0cmFuc3BhcmVudDtcclxuICAgIGN1cnNvcjogcG9pbnRlcjtcclxuICAgIGZvbnQtZmFtaWx5OiBzYW5zLXNlcmlmO1xyXG4gICAgZm9udC13ZWlnaHQ6IDU1MDtcclxuICAgIGZvbnQtc2l6ZTogMTJweDtcclxuICAgIGxpbmUtaGVpZ2h0OiAxNXB4O1xyXG4gICAgb3V0bGluZTogbm9uZTtcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgaGVpZ2h0OiAyMXB4O1xyXG4gICAgbWFyZ2luLXRvcDogLTFweDtcclxuICAgIHBhZGRpbmctcmlnaHQ6IDEwcHg7XHJcbiAgICBib3JkZXItYm90dG9tOiAycHggc29saWQgdHJhbnNwYXJlbnQ7XHJcbn1cclxuXHJcbi5kcm9wYnRuOjphZnRlcntcclxuICAgIGNvbnRlbnQ6ICcnO1xyXG4gICAgd2lkdGg6IDA7IFxyXG4gICAgaGVpZ2h0OiAwOyBcclxuICAgIGJvcmRlci1sZWZ0OiA0cHggc29saWQgdHJhbnNwYXJlbnQ7XHJcbiAgICBib3JkZXItcmlnaHQ6IDRweCBzb2xpZCB0cmFuc3BhcmVudDtcclxuICAgIGJvcmRlci10b3A6IDRweCBzb2xpZCAjNTA1MDUwO1xyXG4gICAgYm9yZGVyLWJvdHRvbTogbm9uZTtcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIHRvcDogN3B4O1xyXG4gICAgcmlnaHQ6IDZweDtcclxufVxyXG4gIFxyXG4gIC8qIFRoZSBjb250YWluZXIgPGRpdj4gLSBuZWVkZWQgdG8gcG9zaXRpb24gdGhlIGRyb3Bkb3duIGNvbnRlbnQgKi9cclxuICAuZHJvcGRvd24ge1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgbGVmdDogMHB4O1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgfVxyXG4gIFxyXG4gIC8qIERyb3Bkb3duIENvbnRlbnQgKEhpZGRlbiBieSBEZWZhdWx0KSAqL1xyXG4gIC5kcm9wZG93bi1jb250ZW50IHtcclxuICAgIGRpc3BsYXk6IG5vbmU7XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZWNlY2VjO1xyXG4gICAgbWluLXdpZHRoOiA4NXB4O1xyXG4gICAgYm94LXNoYWRvdzogMHB4IDhweCAxNnB4IDBweCByZ2JhKDAsMCwwLDAuMik7XHJcbiAgICB6LWluZGV4OiA1MDA7XHJcbiAgICB0b3A6IDE5cHg7XHJcbiAgfVxyXG4gIFxyXG4gIC8qIExpbmtzIGluc2lkZSB0aGUgZHJvcGRvd24gKi9cclxuICAuZHJvcGRvd24tY29udGVudCBkaXYge1xyXG4gICAgY29sb3I6IGJsYWNrO1xyXG4gICAgcGFkZGluZzogNnB4IDhweDtcclxuICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcclxuICB9XHJcbiAgXHJcbiAgLyogQ2hhbmdlIGNvbG9yIG9mIGRyb3Bkb3duIGxpbmtzIG9uIGhvdmVyICovXHJcbiAgLmRyb3Bkb3duLWNvbnRlbnQgZGl2OmhvdmVyIHtiYWNrZ3JvdW5kLWNvbG9yOiAjZmVmZWZlfVxyXG4gIFxyXG4gIC8qIFNob3cgdGhlIGRyb3Bkb3duIG1lbnUgb24gaG92ZXIgKi9cclxuICAuZHJvcGRvd246aG92ZXIgLmRyb3Bkb3duLWNvbnRlbnQge1xyXG4gICAgLy8gZGlzcGxheTogYmxvY2s7XHJcbiAgfVxyXG4gIFxyXG4gIC8qIENoYW5nZSB0aGUgYmFja2dyb3VuZCBjb2xvciBvZiB0aGUgZHJvcGRvd24gYnV0dG9uIHdoZW4gdGhlIGRyb3Bkb3duIGNvbnRlbnQgaXMgc2hvd24gKi9cclxuICAuZHJvcGRvd246aG92ZXIgLmRyb3BidG4ge1xyXG4gICAgY29sb3I6ICMwMDAwNmRcclxufVxyXG5cclxuLm5hdi10YWJze1xyXG4gICAgbGkuYWN0aXZle1xyXG4gICAgICAgIC5kcm9wYnRue1xyXG4gICAgICAgICAgICBjb2xvcjogIzAwMDA2ZDtcclxuICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGVzbW9rZTtcclxuICAgICAgICAgICAgYm9yZGVyOiAxcHggc29saWQgI0IzQjNCMztcclxuICAgICAgICAgICAgYm9yZGVyLWJvdHRvbTogMnB4IHNvbGlkIHdoaXRlc21va2U7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgbGkub3BlbntcclxuICAgICAgICAuZHJvcGJ0bjo6YWZ0ZXJ7XHJcbiAgICAgICAgICAgIGNvbnRlbnQ6ICcnO1xyXG4gICAgICAgICAgICBib3JkZXItdG9wOiBub25lO1xyXG4gICAgICAgICAgICBib3JkZXItYm90dG9tOiA0cHggc29saWQgIzUwNTA1MDtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbn1cclxuXHJcbiN0b3BvbG9neV9kcm9wZG93biwgI29iamVjdF9kcm9wZG93biB7XHJcbiAgICBkaXNwbGF5OiBub25lO1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgd2lkdGg6IGZpdC1jb250ZW50O1xyXG4gICAgdHJhbnNpdGlvbjogZGlzcGxheSAwLjRzO1xyXG5cclxuICAgIHotaW5kZXg6IDk5OTk5OTk5O1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogJGNvbG9yNjtcclxuICAgIGJvcmRlcjogMXB4IHNvbGlkICRjb2xvcjE7XHJcbiAgICBib3gtc2hhZG93OiBub25lO1xyXG5cclxuICAgIGRpdntcclxuICAgICAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgICAgICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICAgICAgbWluLXdpZHRoOiAxMDBweDtcclxuICAgICAgICBtYXgtd2lkdGg6IDMwMHB4O1xyXG4gICAgICAgIG92ZXJmbG93OiBoaWRkZW47XHJcbiAgICAgICAgbGluZS1oZWlnaHQ6IDIwcHg7XHJcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJGNvbG9yNjtcclxuICAgICAgICBib3JkZXI6IDBweDtcclxuICAgICAgICBtYXJnaW46IDBweDtcclxuICAgICAgICBwYWRkaW5nOiAwcHggMTBweCAwcHggMTBweDtcclxuICAgICAgICBsaW5lLWhlaWdodDogJGZzaXplMztcclxuICAgICAgICBoZWlnaHQ6ICRmc2l6ZTM7XHJcbiAgICAgICAgZm9udC1zaXplOiAkZnNpemUyO1xyXG4gICAgICAgIGNvbG9yOiAkY29sb3I4O1xyXG4gICAgICAgICY6aG92ZXJ7XHJcbiAgICAgICAgICAgIGNvbG9yOiAkc2VsZWN0ZWQtY29sb3I7XHJcbiAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICRjb2xvcjU7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxufSIsIlxyXG4kY29sb3IxOiAjODA4MDgwO1xyXG4kY29sb3IyOiAjOTk5OTk5O1xyXG4kY29sb3IzOiAjQjNCM0IzOyBcclxuJGNvbG9yNDogI0NDQ0NDQztcclxuJGNvbG9yNTogI0U2RTZFNjtcclxuJGNvbG9yNS01OiByZ2IoMjQ1LCAyNDUsIDI0NSk7XHJcbiRjb2xvcjY6IHJnYigyNTAsIDI1MCwgMjUxKTtcclxuXHJcbiRjb2xvcjc6IHdoaXRlO1xyXG4kY29sb3I4OiAjMzczNzM3O1xyXG5cclxuJHNlbGVjdGVkLWNvbG9yOiByZ2IoMCwgMCwgMTA5KTtcclxuJGhvdmVyLWNvbG9yOiAkY29sb3IyO1xyXG5cclxuJGVycm9yLWNvbG9yOiAjRTk0ODU4OyAvL3BpbmstcmVkXHJcbiRlcnJvci1jb2xvci1sdDogcmdiKDI1NSwgMjIwLCAyMjQpO1xyXG4kcGNvbG9yMjogI0YzQTMyQTsgLy9vcmFuZ2UteWVsbG93XHJcbiRwcmludC1jb2xvcjogcmdiKDEzMCwgMTkxLCAxMTApOyAvL2xpZ2h0Z3JlZW5cclxuJHByaW50LWNvbG9yLWx0OiByZ2IoMjMwLCAyNTUsIDIyMSk7XHJcbiRzZWxlY3RHZW9tLWNvbG9yOiByZ2IoMjU1LCAxNzQsIDApOyAvLyBsaWdodCBvcmFuZ2VcclxuJHNlbGVjdEdlb20tY29sb3ItbHQ6IHJnYigyNTUsIDIyNSwgMTYwKTtcclxuXHJcbi8vICRwcm9kLWJhY2tncm91bmQtY29sb3I6IHJnYigyNTAsMjUwLDI1MCk7XHJcbi8vICRiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMjIwLDIyMCwyMjApO1xyXG4kZnVuY3Rpb24tdGV4dC1jb2xvcjogcmdiKDE5MCwgMTQwLCAzMCk7XHJcbiRmdW5jdGlvbi10ZXh0LWNvbG9yMjogcmdiKDE4LCAxMjYsIDEzNik7XHJcbiRiYXNpYy1mdW5jdGlvbi10ZXh0LWNvbG9yOiByZ2IoMjAwLCA3MCwgMTUwKTtcclxuJGNvbW1lbnQtY29sb3I6IGRhcmtncmVlbjtcclxuIiwiJHBhZGRpbmc6IDQwcHg7IC8vID8gbm90IHVzZWRcclxuJHNtYWxsLXBhZGRpbmc6IDE1cHg7XHJcbiRoZWFkZXItaGVpZ2h0OiA0MHB4O1xyXG5cclxuJGZzaXplMTogMTVweDtcclxuJGZzaXplMjogMTJweDtcclxuJGZzaXplMzogMzBweDtcclxuXHJcbiRwb3J0LXNpemU6IDE1cHg7XHJcbiRkZWZhdWx0LXNpZGUtcGFkZGluZzogMTVweDtcclxuXHJcbiRkaXNhYmxlZC1vcGFjaXR5OiAwLjQ7Il19 */\"","import {\r\n    Component,\r\n    ContentChildren,\r\n    QueryList,\r\n    AfterContentInit\r\n} from '@angular/core';\r\n\r\nimport { TabComponent } from './tab.component';\r\n\r\n@Component({\r\n    selector: 'tabs',\r\n    templateUrl: `./tabs.component.html`,\r\n    styleUrls: ['./tabs.component.scss']\r\n})\r\nexport class TabsComponent implements AfterContentInit {\r\n    @ContentChildren(TabComponent) tabs: QueryList<TabComponent>;\r\n    ngAfterContentInit() {\r\n        setTimeout(() => {// get all active tabs\r\n            const activeTabs = this.tabs.filter((tab) => tab.active);\r\n            // if there is no active tab set, activate the first\r\n            if (activeTabs.length === 0) {\r\n                this.selectTab(this.tabs.first);\r\n            }\r\n        }, 0);\r\n    }\r\n    selectTab(tab: TabComponent) {\r\n        // deactivate all tabs\r\n        this.tabs.toArray().forEach(_tab => _tab.active = false);\r\n        tab.active = true;\r\n    }\r\n}\r\n","module.exports = \"<div class = 'attrib--container'>\\r\\n  <my-tabs id=\\\"attribTab\\\" (selectedTab) = \\\"_setDataSource($event)\\\" (selectedTopology) = \\\"_setDataSource($event)\\\" [hidden]=\\\"dataSource === undefined\\\">\\r\\n    <my-tab *ngFor=\\\"let tab of tabs; let i = index\\\" tabTitle=\\\"{{tab.title}}\\\" index=\\\"{{i}}\\\">\\r\\n      <div class=\\\"mat-elevation-z1\\\">\\r\\n        <div class = \\\"table--container\\\">\\r\\n          <table mat-table [dataSource]=\\\"dataSource\\\" matSort [class] = 'columnItalic'>\\r\\n            <ng-container *ngFor=\\\"let column of displayedColumns;\\\" [matColumnDef]=\\\"column\\\" [sticky] = 'column === \\\"_id\\\"'>\\r\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> {{column}} </th>\\r\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element[column]}} </td>\\r\\n            </ng-container>\\r\\n            <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns; sticky: true\\\"></tr>\\r\\n            <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\" [class.selected-row]='row.selected?row.selected:false' (click)=\\\"selectRow(row._id, $event)\\\"></tr>\\r\\n          </table>\\r\\n          <!-- <div *ngIf=\\\"dataSource && dataSource.data.length === 0\\\" id=\\\"emptyMessage\\\">\\r\\n            No Data\\r\\n          </div> -->\\r\\n           \\r\\n        </div>\\r\\n        <div class = 'btm--container'>\\r\\n          <div id=\\\"displaySelected\\\">\\r\\n            <span>Show Selected</span>\\r\\n            <input type=\\\"checkbox\\\" id=\\\"switch\\\" (click)=\\\"showSelectedSwitch();\\\" [checked]=\\\"showSelected\\\"/><label for=\\\"switch\\\">Toggle</label>\\r\\n          </div>\\r\\n          <div class = 'paginator--container'>\\r\\n            <mat-paginator id=\\\"matPaginator\\\" [pageSizeOptions]=\\\"[20, 50, 100]\\\" showFirstLastButtons></mat-paginator>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </my-tab>\\r\\n  </my-tabs>\\r\\n</div>\\r\\n  \"","module.exports = \".table--container {\\n  overflow-y: auto;\\n  overflow-x: auto; }\\n\\n.mat-table {\\n  background-color: whitesmoke;\\n  border-bottom: 1px solid #CCCCCC; }\\n\\ntable {\\n  width: 100%;\\n  min-width: 600px;\\n  font-family: sans-serif;\\n  background-color: transparent; }\\n\\ntable th.mat-header-cell:not(:first-of-type) {\\n    padding: 0px 5px; }\\n\\ntable th.mat-header-cell {\\n    border-left: 1px solid transparent;\\n    border-right: 1px solid transparent; }\\n\\ntable th.mat-header-cell:hover {\\n      border-left-color: #B3B3B3;\\n      border-right-color: #B3B3B3; }\\n\\ntable th.mat-header-cell:first-of-type {\\n    width: 40px !important;\\n    padding-left: 12px; }\\n\\ntable th:nth-child(2) {\\n    width: 100px; }\\n\\ntable th:nth-child(n+3) {\\n    width: 50px; }\\n\\ntable th:last-child {\\n    width: 2000px; }\\n\\ntable tr.mat-header-row {\\n    background-color: whitesmoke;\\n    height: 27px; }\\n\\ntable tr.mat-row {\\n    height: 24px; }\\n\\ntable tr.mat-row.selected-row .mat-cell {\\n      background-color: #e6e6e6; }\\n\\ntable tr.mat-row .mat-cell {\\n      font-size: 12px;\\n      color: #373737;\\n      background-color: #fafafb;\\n      border-bottom: 1px solid #B3B3B3;\\n      border-left: 1px solid transparent;\\n      border-right: 1px solid #B3B3B3; }\\n\\ntable tr.mat-row .mat-cell:not(:first-of-type) {\\n        padding: 0px 5px; }\\n\\ntable tr.mat-row .mat-cell:first-of-type {\\n        width: 40px !important;\\n        padding-left: 12px; }\\n\\ntable tr.mat-row .mat-cell:nth-child(2) {\\n        width: 100px; }\\n\\ntable tr.mat-row .mat-cell:nth-child(n+3) {\\n        width: 50px; }\\n\\ntable tr.mat-row .mat-cell:last-child {\\n        width: 2000px; }\\n\\ntable tr.mat-row:last-child .mat-cell {\\n      border-bottom-color: transparent; }\\n\\ntable td.mat-cell:first-of-type, table td.mat-footer-cell:first-of-type, table th.mat-header-cell:first-of-type {\\n    width: 10%; }\\n\\ntable.c2 tr.mat-row .mat-cell:nth-child(2), table.c2 th:nth-child(2) {\\n  font-style: italic; }\\n\\n/deep/ #attribTab {\\n  height: 100%;\\n  width: 100%;\\n  overflow-x: scroll; }\\n\\n/deep/ #attribTab ul {\\n    background-color: transparent;\\n    margin: 0;\\n    padding-left: 11px;\\n    white-space: nowrap;\\n    height: 20px;\\n    position: absolute;\\n    top: 1px;\\n    width: 100%;\\n    min-width: -webkit-fit-content;\\n    min-width: -moz-fit-content;\\n    min-width: fit-content;\\n    display: inline-flex; }\\n\\n/deep/ #attribTab ul li {\\n      list-style: none;\\n      float: left;\\n      width: 90px;\\n      color: #808080;\\n      overflow: visible;\\n      cursor: pointer;\\n      position: relative;\\n      height: inherit;\\n      padding: 0px; }\\n\\n/deep/ #attribTab ul li span {\\n        font-family: sans-serif;\\n        margin-right: 2px;\\n        font-weight: 550;\\n        font-size: 12px;\\n        line-height: 15px;\\n        border: 1px solid transparent;\\n        position: relative;\\n        display: block;\\n        padding: 2px;\\n        text-align: center;\\n        position: absolute;\\n        width: inherit;\\n        box-sizing: border-box;\\n        width: 100%;\\n        margin-top: -1px;\\n        height: 21px; }\\n\\n/deep/ #attribTab ul li:hover {\\n        background-color: transparent; }\\n\\n/deep/ #attribTab ul li:hover span {\\n          color: #00006d;\\n          background-color: transparent; }\\n\\n/deep/ #attribTab ul li.active {\\n        background-color: transparent; }\\n\\n/deep/ #attribTab ul li.active span {\\n          color: #00006d;\\n          cursor: default;\\n          background-color: whitesmoke;\\n          border: 1px solid #B3B3B3;\\n          border-bottom: 2px solid whitesmoke; }\\n\\n/deep/ #attribTab ul li:nth-child(2) {\\n        width: 85px; }\\n\\n/deep/ #attribTab .pane {\\n    margin-top: 20px;\\n    height: calc(100% - 31px); }\\n\\n/deep/ #attribTab .pane .mat-elevation-z1 {\\n      display: flex;\\n      flex-flow: column nowrap;\\n      height: 100%;\\n      justify-content: space-between;\\n      box-shadow: none;\\n      border-top: 1px solid #B3B3B3; }\\n\\n.attrib--container {\\n  height: calc(100% - 30px); }\\n\\n.attrib--container #attribTab {\\n    height: 100%; }\\n\\n.attrib--container #attribTab my-tab {\\n      height: 100%; }\\n\\n#displaySelected {\\n  position: absolute;\\n  z-index: 1;\\n  bottom: 13px;\\n  left: 5px; }\\n\\n#displaySelected span {\\n    vertical-align: middle;\\n    font-size: 12px;\\n    color: #808080;\\n    padding-right: 5px; }\\n\\n#displaySelected input[type=checkbox] {\\n    height: 0;\\n    width: 0;\\n    visibility: hidden; }\\n\\n#emptyMessage {\\n  text-align: center;\\n  margin-top: 20px;\\n  color: #888888; }\\n\\n.btm--container {\\n  position: relative;\\n  height: 30px;\\n  position: absolute;\\n  display: flex;\\n  flex-flow: row nowrap;\\n  justify-content: flex-end;\\n  width: 100%;\\n  bottom: 0px; }\\n\\n.btm--container #displaySelected {\\n    padding-left: 10px;\\n    width: 30%; }\\n\\n.btm--container #displaySelected span {\\n      vertical-align: middle;\\n      font-size: 12px;\\n      color: #808080;\\n      padding-right: 5px;\\n      -moz-user-select: none;\\n      -webkit-user-select: none; }\\n\\n.btm--container #displaySelected input[type=checkbox] {\\n      height: 0;\\n      width: 0;\\n      visibility: hidden; }\\n\\n.btm--container #displaySelected label {\\n      vertical-align: middle;\\n      cursor: pointer;\\n      text-indent: -9999px;\\n      width: 30px;\\n      height: 15px;\\n      background: #CCCCCC;\\n      display: inline-block;\\n      position: relative; }\\n\\n.btm--container #displaySelected label:after {\\n        content: '';\\n        position: absolute;\\n        top: 1px;\\n        left: 1px;\\n        width: 13px;\\n        height: 13px;\\n        background: #E6E6E6;\\n        transition: 0.3s; }\\n\\n.btm--container #displaySelected input:checked + label {\\n      background: #00006d; }\\n\\n.btm--container #displaySelected input:checked + label:after {\\n      left: calc(100% - 2px);\\n      -webkit-transform: translateX(-100%);\\n              transform: translateX(-100%); }\\n\\n.btm--container #displaySelected input:hover:not(:checked) + label {\\n      background: rgba(0, 0, 109, 0.4); }\\n\\n.btm--container #displaySelected input:hover:not(:checked) + label:after {\\n        box-shadow: 2px 0px 0px 0px; }\\n\\n.btm--container #displaySelected label:active:after {\\n      width: 13px; }\\n\\n.btm--container .paginator--container {\\n    position: relative;\\n    width: 80%;\\n    display: flex;\\n    flex-flow: row nowrap;\\n    justify-content: flex-end; }\\n\\n.btm--container #matPaginator {\\n    position: absolute;\\n    top: -20px;\\n    background-color: transparent;\\n    width: 100%; }\\n\\n.btm--container #matPaginator .mat-paginator-outer-container .mat-paginator-container {\\n      width: inherit;\\n      min-height: 30px !important;\\n      position: absolute;\\n      bottom: 8px;\\n      height: 20px;\\n      display: flex;\\n      flex-flow: row nowrap;\\n      flex-shrink: 0;\\n      font-family: sans-serif; }\\n\\n.btm--container #matPaginator .mat-paginator-outer-container .mat-paginator-container .mat-paginator-page-size, .btm--container #matPaginator .mat-paginator-outer-container .mat-paginator-container .mat-paginator-range-actions {\\n        height: inherit;\\n        align-items: baseline;\\n        padding-right: 15px; }\\n\\n.btm--container #matPaginator .mat-paginator-outer-container .mat-paginator-container .mat-paginator-page-size-label, .btm--container #matPaginator .mat-paginator-outer-container .mat-paginator-container .mat-paginator-range-label {\\n        white-space: nowrap; }\\n\\n.btm--container #matPaginator .mat-paginator-outer-container .mat-paginator-container .mat-paginator-page-size-select {\\n        margin: 0; }\\n\\n.btm--container #matPaginator .mat-paginator-outer-container .mat-paginator-container .mat-paginator-page-size-select .mat-form-field-wrapper {\\n          padding-bottom: 0.95em; }\\n\\n.btm--container #matPaginator .mat-paginator-outer-container .mat-paginator-container .mat-paginator-page-size-select .mat-form-field-wrapper .mat-form-field-flex .mat-form-field-infix .mat-select .mat-select-trigger .mat-select-value {\\n            font-family: sans-serif;\\n            color: #808080; }\\n\\n.btm--container #matPaginator .mat-paginator-outer-container .mat-paginator-container .mat-icon-button:hover .mat-paginator-icon {\\n        fill: #00006d; }\\n\\n/*# sourceMappingURL=data:application/json;base64, */\"","import { Component, Injector, Input, OnChanges, SimpleChanges,\r\n  ViewChildren, QueryList, Output, EventEmitter, ViewChild } from '@angular/core';\r\nimport { MatTableDataSource, MatSort, MatPaginator } from '@angular/material';\r\nimport { GIModel } from '@libs/geo-info/GIModel';\r\nimport { DataService } from '../data/data.service';\r\nimport { EEntType, EEntTypeStr } from '@libs/geo-info/common';\r\nimport { GIAttribsThreejs } from '@assets/libs/geo-info/GIAttribsThreejs';\r\nimport { ATabsComponent } from './tabs.component';\r\n\r\n@Component({\r\n  selector: 'attribute',\r\n  templateUrl: './attribute.component.html',\r\n  styleUrls: ['./attribute.component.scss'],\r\n})\r\n\r\nexport class AttributeComponent implements OnChanges {\r\n  @ViewChild(ATabsComponent ) child: ATabsComponent ;\r\n\r\n  @Input() data: GIModel;\r\n  @Input() refresh: Event;\r\n  @Input() reset: Event;\r\n  @Output() attrTableSelect = new EventEmitter<Object>();\r\n  showSelected = false;\r\n\r\n  tabs: { type: number, title: string }[] =\r\n    [\r\n      { type: EEntType.POSI, title: 'Positions' },\r\n      { type: EEntType.VERT, title: 'Vertices' },\r\n      { type: EEntType.EDGE, title: 'Edges' },\r\n      { type: EEntType.WIRE, title: 'Wires' },\r\n      { type: EEntType.FACE, title: 'Faces' },\r\n      { type: EEntType.POINT, title: 'Points' },\r\n      { type: EEntType.PLINE, title: 'Polylines' },\r\n      { type: EEntType.PGON, title: 'Polygons' },\r\n      { type: EEntType.COLL, title: 'Collections' },\r\n      { type: EEntType.MOD, title: 'Model' }\r\n    ];\r\n  displayedColumns: string[] = [];\r\n  displayData: {}[] = [];\r\n  selected_ents = new Map();\r\n\r\n  @ViewChildren(MatPaginator) paginator = new QueryList<MatPaginator>();\r\n  @ViewChildren(MatSort) sort = new QueryList<MatSort>();\r\n\r\n  dataSource: MatTableDataSource<object>;\r\n\r\n  protected dataService: DataService;\r\n\r\n  tab_map = {\r\n    0: EEntType.POSI,\r\n    1: EEntType.VERT,\r\n    2: EEntType.EDGE,\r\n    3: EEntType.WIRE,\r\n    4: EEntType.FACE,\r\n    5: EEntType.POINT,\r\n    6: EEntType.PLINE,\r\n    7: EEntType.PGON,\r\n    8: EEntType.COLL,\r\n    9: EEntType.MOD\r\n  };\r\n\r\n  tab_rev_map = {\r\n    0: 0,\r\n    2: 1,\r\n    3: 2,\r\n    4: 3,\r\n    5: 4,\r\n    6: 5, // point\r\n    7: 6, // plines\r\n    8: 7, // pgons\r\n    9: 8,\r\n    10: 9\r\n  };\r\n\r\n  columnItalic = 'c2';\r\n\r\n  constructor(injector: Injector) {\r\n    this.dataService = injector.get(DataService);\r\n    if (localStorage.getItem('mpm_attrib_current_tab') === null) {\r\n      localStorage.setItem('mpm_attrib_current_tab', '0');\r\n    }\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (changes['data'] && this.data) {\r\n      this.refreshTable();\r\n    }\r\n    if (changes['reset']) {\r\n      this.resetTable();\r\n    }\r\n    if (changes['refresh']) {\r\n      this.refreshTable();\r\n    }\r\n  }\r\n\r\n  generateTable(tabIndex: number) {\r\n    if (this.data) {\r\n      const ThreeJSData = this.data.attribs.threejs;\r\n      if (Number(tabIndex) === 9) {\r\n        this.displayData = ThreeJSData.getModelAttribsForTable();\r\n      } else {\r\n        const ready = this.data.attribs.threejs instanceof GIAttribsThreejs;\r\n        this.selected_ents = this.dataService.selected_ents.get(EEntTypeStr[this.tab_map[tabIndex]]);\r\n\r\n        if (!ready) { return; }\r\n        if (this.showSelected) {\r\n          const SelectedAttribData = ThreeJSData.getEntsVals(this.selected_ents, this.tab_map[tabIndex]);\r\n          this.displayData = SelectedAttribData;\r\n        } else {\r\n          const AllAttribData = ThreeJSData.getAttribsForTable(this.tab_map[tabIndex]);\r\n          AllAttribData.map(row => {\r\n            if (this.selected_ents.has(row._id)) {\r\n              return row.selected = true;\r\n            }\r\n          });\r\n          this.displayData = AllAttribData;\r\n        }\r\n      }\r\n      if (this.displayData.length > 0) {\r\n        const columns = Object.keys(this.displayData[0]).filter(e => e !== 'selected');\r\n        let new_columns;\r\n        if (Number(tabIndex) === 9) {\r\n          new_columns = columns;\r\n        } else {\r\n          const first = columns.shift();\r\n          const second = columns.shift();\r\n          const selected = columns.find(column => column.substr(0, 1) === '_');\r\n          const rest_of_columns = columns.filter(column => column.substr(0, 1) !== '_');\r\n          new_columns = selected ? [first, second, selected, ...rest_of_columns, ' '] : [first, second, ...rest_of_columns, ' '];\r\n        }\r\n        this.displayedColumns = new_columns;\r\n        this.dataSource = new MatTableDataSource<object>(this.displayData);\r\n      } else {\r\n        this.displayedColumns = [];\r\n        this.dataSource = new MatTableDataSource<object>();\r\n      }\r\n      this.dataSource.paginator = this.paginator.toArray()[tabIndex];\r\n      this.dataSource.sort = this.sort.toArray()[tabIndex];\r\n    }\r\n    return tabIndex;\r\n  }\r\n\r\n  _setDataSource(tabIndex: number) {\r\n    setTimeout(() => {\r\n      localStorage.setItem('mpm_attrib_current_tab', tabIndex.toString());\r\n      if (tabIndex === 999) {\r\n        this.displayedColumns = [];\r\n        this.dataSource = new MatTableDataSource<object>();\r\n      } else {\r\n        this.generateTable(tabIndex);\r\n      }\r\n    });\r\n    sessionStorage.setItem('mpm_showSelected', JSON.stringify(this.showSelected));\r\n  }\r\n\r\n  getCurrentTab() {\r\n    if (localStorage.getItem('mpm_attrib_current_tab') !== null) {\r\n      return Number(localStorage.getItem('mpm_attrib_current_tab'));\r\n    } else {\r\n      return 0;\r\n    }\r\n  }\r\n\r\n  showSelectedSwitch() {\r\n    this.showSelected = !this.showSelected;\r\n    sessionStorage.setItem('mpm_showSelected', JSON.stringify(this.showSelected));\r\n    sessionStorage.setItem('mpm_changetab', JSON.stringify(false));\r\n    this.refreshTable();\r\n  }\r\n\r\n  public refreshTable() {\r\n    const currentTab = this.getCurrentTab();\r\n    setTimeout(() => {\r\n      if (sessionStorage.getItem('mpm_showSelected')) {\r\n        this.showSelected = JSON.parse(sessionStorage.getItem('mpm_showSelected'));\r\n      }\r\n      let changeTab;\r\n      if (sessionStorage.getItem('mpm_changetab')) {\r\n        changeTab = JSON.parse(sessionStorage.getItem('mpm_changetab'));\r\n      }\r\n      // sessionStorage.setItem('mpm_changetab', JSON.stringify(true));\r\n      if (changeTab) {\r\n        if (this.data) {\r\n          if (currentTab === 0 || currentTab === 9 || currentTab === 10) {\r\n            this.child.selectTab(this.tab_rev_map[currentTab]);\r\n          } else if (currentTab === 2 || currentTab === 3 || currentTab === 4 || currentTab === 5) {\r\n            this.child.selectTopology(this.tab_rev_map[currentTab], event);\r\n          } else if (currentTab === 6 || currentTab === 7 || currentTab === 8) {\r\n            this.child.selectObject(this.tab_rev_map[currentTab], event);\r\n          }\r\n        }\r\n      }\r\n      this.generateTable(currentTab);\r\n    }, 0);\r\n  }\r\n\r\n  resetTable() {\r\n    const rows = document.querySelectorAll('.selected-row');\r\n    rows.forEach(row => row.classList.remove('selected-row'));\r\n    this.selected_ents.clear();\r\n  }\r\n\r\n  selectRow(ent_id: string, event: Event) {\r\n    const currentTab = this.getCurrentTab();\r\n    if (currentTab === 9) {\r\n      return;\r\n    }\r\n    const ent_type = ent_id.substr(0, 2);\r\n    const id = Number(ent_id.substr(2));\r\n    const target = event.target || event.srcElement || event.currentTarget;\r\n    if (this.selected_ents.has(ent_id)) {\r\n      this.attrTableSelect.emit({ action: 'unselect', ent_type: ent_type, id: id });\r\n      this.selected_ents.delete(ent_id);\r\n      // @ts-ignore\r\n      target.parentNode.classList.remove('selected-row');\r\n    } else {\r\n      this.attrTableSelect.emit({ action: 'select', ent_type: ent_type, id: id });\r\n      this.selected_ents.set(ent_id, id);\r\n      // @ts-ignore\r\n      target.parentNode.classList.add('selected-row');\r\n    }\r\n\r\n  }\r\n\r\n}","import { NgModule } from '@angular/core';\r\nimport {\r\n  MatTableModule,\r\n  MatSortModule,\r\n  MatPaginatorModule\r\n} from '@angular/material';\r\n\r\n@NgModule({\r\n  imports: [\r\n    MatTableModule,\r\n    MatSortModule,\r\n    MatPaginatorModule\r\n  ],\r\n  exports: [\r\n    MatTableModule,\r\n    MatSortModule,\r\n    MatPaginatorModule\r\n  ]\r\n})\r\nexport class AttributeModule {}\r\n","import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'my-tab',\r\n  styles: [\r\n    `\r\n    .pane{\r\n      padding: 0;\r\n    }\r\n  `\r\n  ],\r\n  template: `\r\n    <div [hidden]=\"!active\" class=\"pane\">\r\n      <ng-content></ng-content>\r\n    </div>\r\n  `\r\n})\r\nexport class ATabComponent {\r\n    // tslint:disable-next-line: no-input-rename\r\n    @Input('tabTitle') title: string;\r\n    @Input() active = false;\r\n    // tslint:disable-next-line: no-input-rename\r\n    @Input('index') index: number;\r\n}\r\n","module.exports = \"<ul class=\\\"nav nav-tabs\\\">\\r\\n    <li (click)=\\\"selectTab(0)\\\" [class.active]=\\\"tab_active===0\\\"><span>Positions</span></li>\\r\\n    <li\\r\\n        [class.active]=\\\"tab_active===1\\\"\\r\\n        [class.open]='topology_open'\\r\\n    >\\r\\n        <div class=\\\"dropdown\\\">\\r\\n            <button class=\\\"dropbtn\\\" (click) = 'showTDropdown()' title=\\\"Topology{{topology_text!=='Topology'?(': '+topology_text):''}}\\\">{{topology_text}}</button>\\r\\n            <div class=\\\"dropdown-content\\\" id='topology_dropdown'>\\r\\n                <div *ngFor=\\\"let option of topology;\\\" (click)=\\\"selectTopology(option.tab, $event);\\\">{{option.title}}</div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </li>\\r\\n    <li\\r\\n        [class.active]=\\\"tab_active===2\\\"\\r\\n        [class.open]='object_open'\\r\\n    >\\r\\n        <div class=\\\"dropdown\\\">\\r\\n            <button class=\\\"dropbtn\\\" (click) = 'showODropdown()' title=\\\"Object{{object_text!=='Object'?(': '+object_text):''}}\\\">{{object_text}}</button>\\r\\n            <div class=\\\"dropdown-content\\\" id='object_dropdown'>\\r\\n                <div *ngFor=\\\"let option of object;\\\" (click)=\\\"selectObject(option.tab, $event);\\\">{{option.title}}</div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </li>\\r\\n    <li (click)=\\\"selectTab(8)\\\" [class.active]=\\\"tab_active===8\\\"><span>Collections</span></li>\\r\\n    <li (click)=\\\"selectTab(9)\\\" [class.active]=\\\"tab_active===9\\\"><span>Model</span></li>\\r\\n</ul>\\r\\n<ng-content></ng-content>\\r\\n\\r\\n<ng-template #topoTemplate>\\r\\n    \\r\\n</ng-template>\\r\\n\\r\\n<ng-template #objectTemplate>\\r\\n    \\r\\n</ng-template>\\r\\n\\r\\n\"","module.exports = \"/* Style The Dropdown Button */\\n.dropbtn {\\n  background-color: transparent;\\n  color: #808080;\\n  border: 1px solid transparent;\\n  cursor: pointer;\\n  font-family: sans-serif;\\n  font-weight: 550;\\n  font-size: 12px;\\n  line-height: 15px;\\n  outline: none;\\n  text-align: center;\\n  width: 100%;\\n  height: 21px;\\n  margin-top: -1px;\\n  padding-right: 10px;\\n  border-bottom: 2px solid transparent; }\\n.dropbtn::after {\\n  content: '';\\n  width: 0;\\n  height: 0;\\n  border-left: 4px solid transparent;\\n  border-right: 4px solid transparent;\\n  border-top: 4px solid #505050;\\n  border-bottom: none;\\n  position: absolute;\\n  top: 7px;\\n  right: 6px; }\\n/* The container <div> - needed to position the dropdown content */\\n.dropdown {\\n  position: absolute;\\n  display: inline-block;\\n  left: 0px;\\n  width: 100%; }\\n/* Dropdown Content (Hidden by Default) */\\n.dropdown-content {\\n  display: none;\\n  position: absolute;\\n  background-color: #ececec;\\n  min-width: 85px;\\n  box-shadow: 0px 8px 16px 0px rgba(0, 0, 0, 0.2);\\n  z-index: 500;\\n  top: 19px; }\\n/* Links inside the dropdown */\\n.dropdown-content div {\\n  color: black;\\n  padding: 6px 8px;\\n  text-decoration: none; }\\n/* Change color of dropdown links on hover */\\n.dropdown-content div:hover {\\n  background-color: #fefefe; }\\n/* Show the dropdown menu on hover */\\n/* Change the background color of the dropdown button when the dropdown content is shown */\\n.dropdown:hover .dropbtn {\\n  color: #00006d; }\\n.nav-tabs li.active .dropbtn {\\n  color: #00006d;\\n  background-color: whitesmoke;\\n  border: 1px solid #B3B3B3;\\n  border-bottom: 2px solid whitesmoke; }\\n.nav-tabs li.open .dropbtn::after {\\n  content: '';\\n  border-top: none;\\n  border-bottom: 4px solid #505050; }\\n#topology_dropdown, #object_dropdown {\\n  display: none;\\n  position: absolute;\\n  width: -webkit-fit-content;\\n  width: -moz-fit-content;\\n  width: fit-content;\\n  transition: display 0.4s;\\n  z-index: 99999999;\\n  background-color: #fafafb;\\n  border: 1px solid #808080;\\n  box-shadow: none; }\\n#topology_dropdown div, #object_dropdown div {\\n    cursor: pointer;\\n    display: block;\\n    min-width: 100px;\\n    max-width: 300px;\\n    overflow: hidden;\\n    line-height: 20px;\\n    background-color: #fafafb;\\n    border: 0px;\\n    margin: 0px;\\n    padding: 0px 10px 0px 10px;\\n    line-height: 30px;\\n    height: 30px;\\n    font-size: 12px;\\n    color: #373737; }\\n#topology_dropdown div:hover, #object_dropdown div:hover {\\n      color: #00006d;\\n      background-color: #E6E6E6; }\\n\\n/*# sourceMappingURL=data:application/json;base64, */\"","import {\r\n    Component,\r\n    ContentChildren,\r\n    QueryList,\r\n    AfterContentInit,\r\n    Output,\r\n    EventEmitter,\r\n    AfterViewInit\r\n} from '@angular/core';\r\n\r\nimport { ATabComponent } from './tab.component';\r\n\r\n@Component({\r\n    selector: 'my-tabs',\r\n    templateUrl: `./tabs.component.html`,\r\n    styleUrls: ['./tabs.component.scss']\r\n})\r\nexport class ATabsComponent implements AfterContentInit, AfterViewInit {\r\n    @Output() selectedTab = new EventEmitter<number>();\r\n    @Output() selectedTopology = new EventEmitter<number>();\r\n\r\n    @ContentChildren(ATabComponent) tabs: QueryList<ATabComponent>;\r\n\r\n    tab_active = 0;\r\n\r\n    topology_dropdown;\r\n    topology_text = 'Topology';\r\n    topologyActive = false;\r\n    topology_open = false;\r\n\r\n    topology: { tab: number, title: string }[] =\r\n        [\r\n            { tab: 1, title: 'Vertices' },\r\n            { tab: 2, title: 'Edges' },\r\n            { tab: 3, title: 'Wires' },\r\n            { tab: 4, title: 'Faces' }\r\n        ];\r\n\r\n    object_dropdown;\r\n    object_text = 'Objects';\r\n    objectActive = false;\r\n    object_open = false;\r\n\r\n    object: { tab: number, title: string }[] =\r\n        [\r\n            { tab: 5, title: 'Points' },\r\n            { tab: 6, title: 'Polylines' },\r\n            { tab: 7, title: 'Polygons' }\r\n        ];\r\n\r\n    // contentChildren are set\r\n    ngAfterContentInit() {\r\n        setTimeout(() => {// get all active tabs\r\n            const activeTabs = this.tabs.filter((tab) => tab.active);\r\n            // if there is no active tab set, activate the first\r\n            if (activeTabs.length === 0) {\r\n                this.selectTab(0);\r\n            }\r\n        }, 0);\r\n    }\r\n\r\n    ngAfterViewInit(): void {\r\n        this.topology_dropdown = document.getElementById('topology_dropdown');\r\n        this.topology_dropdown.style.display = 'none';\r\n\r\n        this.object_dropdown = document.getElementById('object_dropdown');\r\n        this.object_dropdown.style.display = 'none';\r\n    }\r\n\r\n    selectTab(tab: number) {\r\n        // deactivate all tabs\r\n        this.tabs.toArray().forEach(_tab => _tab.active = false);\r\n        // activate the tab the user has clicked on.\r\n        this.tab_active = tab;\r\n        const tt = this.tabs.find(t => Number(t.index) === tab);\r\n        if (tt) {\r\n            tt.active = true;\r\n        }\r\n\r\n        this.selectedTab.emit(tab);\r\n        this.topology_dropdown.style.display = 'none';\r\n        this.topology_text = 'Topology';\r\n        this.topology_open = false;\r\n\r\n        this.object_dropdown.style.display = 'none';\r\n        this.object_text = 'Objects';\r\n        this.object_open = false;\r\n    }\r\n\r\n    selectTopology(tab, event: Event) {\r\n        this.tabs.toArray().forEach(_tab => _tab.active = false);\r\n        this.tab_active = 1;\r\n        const option = this.topology.find(item => item.tab === tab);\r\n        if (!option) {\r\n            return;\r\n        }\r\n        this.selectedTopology.emit(Number(tab));\r\n        this.topology_text = option.title;\r\n        this.tabs.toArray()[option.tab].active = true;\r\n        if (event !== undefined) {\r\n            // @ts-ignore\r\n            event.target.parentElement.style.display = 'none';\r\n        }\r\n        this.topology_open = false;\r\n    }\r\n\r\n    selectObject(tab, event: Event) {\r\n        this.tabs.toArray().forEach(_tab => _tab.active = false);\r\n        this.tab_active = 2;\r\n        const option = this.object.find(item => item.tab === tab);\r\n        if (!option) {\r\n            return;\r\n        }\r\n        this.selectedTopology.emit(Number(tab));\r\n        this.object_text = option.title;\r\n        this.tabs.toArray()[option.tab].active = true;\r\n        if (event !== undefined) {\r\n            // @ts-ignore\r\n            event.target.parentElement.style.display = 'none';\r\n        }\r\n        this.object_open = false;\r\n    }\r\n\r\n    showTDropdown() {\r\n        this.object_text = 'Objects';\r\n        this.object_open = false;\r\n        this.object_dropdown.style.display = 'none';\r\n        // this.tabs.toArray().forEach(_tab => _tab.active = false);\r\n        if (this.topology_dropdown.style.display === 'none') {\r\n            this.topology_dropdown.style.display = 'block';\r\n            this.topology_open = true;\r\n        } else {\r\n            this.topology_dropdown.style.display = 'none';\r\n            this.topology_open = false;\r\n        }\r\n    }\r\n\r\n    showODropdown() {\r\n        this.topology_text = 'Topology';\r\n        this.topology_open = false;\r\n        this.topology_dropdown.style.display = 'none';\r\n        // this.tabs.toArray().forEach(_tab => _tab.active = false);\r\n        if (this.object_dropdown.style.display === 'none') {\r\n            this.object_dropdown.style.display = 'block';\r\n            this.object_open = true;\r\n        } else {\r\n            this.object_dropdown.style.display = 'none';\r\n            this.object_open = false;\r\n        }\r\n    }\r\n}\r\n","import { GIModel } from '@libs/geo-info/GIModel';\r\nimport { EEntType, EEntTypeStr } from '@libs/geo-info/common';\r\nimport { DataThreejs } from './data.threejs';\r\n// import @angular stuff\r\nimport { Injectable } from '@angular/core';\r\n/**\r\n * DataService\r\n * The data service for the Goe-Info viewer.\r\n */\r\n@Injectable()\r\nexport class DataService {\r\n    // GI Model\r\n    // private _model: GIModel;\r\n    private _data_threejs: DataThreejs;\r\n\r\n    selecting: any = [];\r\n\r\n    // Selected Entities by Threejs Viewer for Attribute Table\r\n    selected_ents: Map<string, Map<string, number>> = new Map();\r\n    selected_positions: Map<string, string[]>;\r\n    selected_vertex: Map<string, string[]>;\r\n    selected_face_edges: Map<string, string[]>;\r\n    selected_face_wires: Map<string, string[]>;\r\n    selected_coll: Map<string, string[]>;\r\n    /**\r\n     * Create a data service.\r\n     */\r\n    constructor() {\r\n        this.selected_ents.set(EEntTypeStr[EEntType.POSI], new Map());\r\n        this.selected_ents.set(EEntTypeStr[EEntType.VERT], new Map());\r\n        this.selected_ents.set(EEntTypeStr[EEntType.EDGE], new Map());\r\n        this.selected_ents.set(EEntTypeStr[EEntType.FACE], new Map());\r\n        this.selected_ents.set(EEntTypeStr[EEntType.WIRE], new Map());\r\n        this.selected_ents.set(EEntTypeStr[EEntType.PGON], new Map());\r\n        this.selected_ents.set(EEntTypeStr[EEntType.PLINE], new Map());\r\n        this.selected_ents.set(EEntTypeStr[EEntType.POINT], new Map());\r\n        this.selected_ents.set(EEntTypeStr[EEntType.COLL], new Map());\r\n        this.selected_positions = new Map();\r\n        this.selected_vertex = new Map();\r\n        this.selected_face_edges = new Map();\r\n        this.selected_face_wires = new Map();\r\n        this.selected_coll = new Map();\r\n    }\r\n\r\n    /**\r\n     * Get the THreejs Scene\r\n     */\r\n    getThreejsScene(): DataThreejs {\r\n        return this._data_threejs;\r\n    }\r\n\r\n    /**\r\n     * Set the THreejs Scene\r\n     */\r\n    setThreejsScene(settings) {\r\n        this._data_threejs = new DataThreejs(settings);\r\n    }\r\n\r\n    /**\r\n     * check selected entites number\r\n     */\r\n    countSelectedEnts() {\r\n        let count = 0;\r\n        this.selected_ents.forEach(selected_ents => {\r\n            count = +selected_ents.size;\r\n        });\r\n        return count;\r\n    }\r\n\r\n    clearAll() {\r\n        this.selected_ents.forEach(selected_ents => selected_ents.clear());\r\n    }\r\n}\r\n","import * as THREE from 'three';\r\nimport * as OrbitControls from 'three-orbit-controls';\r\nimport { GIModel } from '@libs/geo-info/GIModel';\r\nimport { IThreeJS } from '@libs/geo-info/ThreejsJSON';\r\nimport { EEntTypeStr, EEntType } from '@assets/libs/geo-info/common';\r\n\r\n/**\r\n * ThreejsScene\r\n */\r\nexport class DataThreejs {\r\n    // threeJS objects\r\n    public _scene: THREE.Scene;\r\n    // public basic_scene: THREE.Scene;\r\n    public _renderer: THREE.WebGLRenderer;\r\n    public _camera: THREE.PerspectiveCamera;\r\n    public _controls: THREE.OrbitControls;\r\n    public _raycaster: THREE.Raycaster;\r\n    public _mouse: THREE.Vector2;\r\n    // interaction and selection\r\n    public tri_select_map: Map<number, number>;\r\n    public edge_select_map: Map<number, number>;\r\n    public point_select_map: Map<number, number>;\r\n    public posis_map: Map<number, number>;\r\n    public vertex_map: Map<number, number>;\r\n\r\n    public selected_geoms: Map<string, number> = new Map();\r\n    public selected_positions: Map<string, Map<string, number>> = new Map();\r\n    public selected_vertex: Map<string, Map<string, number>> = new Map();\r\n    public selected_face_edges: Map<string, Map<string, number>> = new Map();\r\n    public selected_face_wires: Map<string, Map<string, number>> = new Map();\r\n    public _text: string;\r\n    // text labels\r\n    public ObjLabelMap: Map<string, any> = new Map();\r\n    public _textLabels: Map<string, any> = new Map();\r\n    // number of threejs points, lines, triangles\r\n    public _threejs_nums: [number, number, number] = [0, 0, 0];\r\n    // grid\r\n    public grid: THREE.GridHelper;\r\n    private grid_pos: THREE.Vector3 = new THREE.Vector3();\r\n    // axes\r\n    public axesHelper: THREE.AxesHelper;\r\n    private axes_pos: THREE.Vector3 = new THREE.Vector3();\r\n    directional_light: THREE.DirectionalLight;\r\n    ambient_light: THREE.AmbientLight;\r\n    hemisphere_light: THREE.HemisphereLight;\r\n    groundObj: THREE.Mesh;\r\n    // the GI model to display\r\n    public _model: GIModel;\r\n\r\n    public sceneObjs: THREE.Object3D[] = [];\r\n    public sceneObjsSelected: Map<string, THREE.Object3D> = new Map();\r\n    public _positions: THREE.Object3D[] = [];\r\n    // Show Normals\r\n    public vnh: THREE.VertexNormalsHelper;\r\n    // Settings\r\n    public settings: Settings;\r\n\r\n    // BufferGeoms\r\n    private BufferGeoms: THREE.BufferGeometry[] = [];\r\n    /**\r\n     * Constructs a new data subscriber.\r\n     */\r\n    constructor(settings: Settings) {\r\n        this.settings = settings;\r\n        // scene\r\n        this._scene = new THREE.Scene();\r\n        this._scene.background = new THREE.Color(this.settings.colors.viewer_bg);\r\n\r\n        // this.basic_scene = new THREE.Scene();\r\n        // this.basic_scene.background = new THREE.Color(0xE6E6E6);\r\n\r\n        // renderer\r\n        this._renderer = new THREE.WebGLRenderer({ antialias: true, alpha: true });\r\n        this._renderer.autoClear = false;\r\n        // this._renderer.setClearColor(0xcccccc, 0);\r\n        this._renderer.setPixelRatio(window.devicePixelRatio);\r\n        this._renderer.setSize(window.innerWidth / 1.8, window.innerHeight);\r\n        this._renderer.shadowMap.enabled = true;\r\n        this._renderer.shadowMap.type = THREE.PCFSoftShadowMap;\r\n\r\n        // camera settings\r\n        this._camera = new THREE.PerspectiveCamera(50, 1, 0.01, 1000000);\r\n        // document.addEventListener( 'keypress', this.onWindowKeyPress, false );\r\n        this._camera.position.x = -80;\r\n        this._camera.position.y = -80;\r\n        this._camera.position.z = 80;\r\n        this._camera.aspect = 1;\r\n        this._camera.up.set(0, 0, 1);\r\n        this._camera.lookAt(this._scene.position);\r\n        this._camera.updateProjectionMatrix();\r\n\r\n        // orbit controls\r\n        const orbit_controls = OrbitControls(THREE);\r\n        this._controls = new orbit_controls(this._camera, this._renderer.domElement);\r\n        this._controls.enableKeys = false;\r\n        this._controls.update();\r\n\r\n        // mouse\r\n        this._mouse = new THREE.Vector2();\r\n\r\n        // selecting\r\n        this._raycaster = new THREE.Raycaster();\r\n        this._raycaster.linePrecision = 0.05;\r\n        this._raycaster.params.Points.threshold = 0.1;\r\n\r\n        // add grid and lights\r\n        this._addGrid();\r\n        if (this.settings.ambient_light.show) {\r\n            this._addAmbientLight();\r\n        }\r\n        if (this.settings.hemisphere_light.show) {\r\n            this._addHemisphereLight();\r\n        }\r\n        if (this.settings.directional_light.show) {\r\n            this._addDirectionalLight();\r\n        }\r\n        this._addAxes();\r\n    }\r\n    /**\r\n     *\r\n     * @param model\r\n     * @param container\r\n     */\r\n    public addGeometry(model: GIModel, container): void {\r\n        if (localStorage.getItem('mpm_settings') !== null) {\r\n            this.settings = JSON.parse(localStorage.getItem('mpm_settings'));\r\n        }\r\n        this._scene.background = new THREE.Color(this.settings.colors.viewer_bg);\r\n        while (this._scene.children.length > 0) {\r\n            this._scene.remove(this._scene.children[0]);\r\n            this.sceneObjs = [];\r\n        }\r\n        document.querySelectorAll('[id^=textLabel_]').forEach(value => {\r\n            container.removeChild(value);\r\n        });\r\n        this.ObjLabelMap.clear();\r\n        this._textLabels.clear();\r\n\r\n        this._addGrid();\r\n        if (this.settings.ambient_light.show) {\r\n            this._addAmbientLight();\r\n        }\r\n        if (this.settings.hemisphere_light.show) {\r\n            this._addHemisphereLight();\r\n        }\r\n        if (this.settings.directional_light.show) {\r\n            this._addDirectionalLight();\r\n        }\r\n        this._addAxes();\r\n\r\n        // Add geometry\r\n        if (!model.threejs) {\r\n            return;\r\n        }\r\n        const threejs_data: IThreeJS = model.threejs.get3jsData();\r\n        this.tri_select_map = threejs_data.triangle_select_map;\r\n        this.edge_select_map = threejs_data.edge_select_map;\r\n        this.point_select_map = threejs_data.point_select_map;\r\n        this.posis_map = threejs_data.posis_map;\r\n        this.vertex_map = threejs_data.vertex_map;\r\n\r\n        const material_groups = threejs_data.material_groups;\r\n        const materials = threejs_data.materials;\r\n\r\n        // Create buffers that will be used by all geometry\r\n        const verts_xyz_buffer = new THREE.Float32BufferAttribute(threejs_data.vertex_xyz, 3);\r\n        const normals_buffer = new THREE.Float32BufferAttribute(threejs_data.normals, 3);\r\n        const colors_buffer = new THREE.Float32BufferAttribute(threejs_data.colors, 3);\r\n        const posis_xyz_buffer = new THREE.Float32BufferAttribute(threejs_data.posis_xyz, 3);\r\n        this._addTris(threejs_data.triangle_indices, verts_xyz_buffer, colors_buffer, material_groups, materials);\r\n        this._addLines(threejs_data.edge_indices, verts_xyz_buffer, normals_buffer);\r\n        this._addPoints(threejs_data.point_indices, verts_xyz_buffer, colors_buffer, [255, 255, 255], 1);\r\n        this._addPositions(threejs_data.posis_indices, posis_xyz_buffer, this.settings.colors.position, this.settings.positions.size);\r\n\r\n        const position_size = this.settings.positions.size;\r\n        this._raycaster.params.Points.threshold = position_size > 1 ? position_size / 3 : position_size / 4;\r\n\r\n        const ground = this.settings.ground;\r\n        if (ground.show) {\r\n            const planeGeometry = new THREE.PlaneBufferGeometry(ground.width, ground.length, 32, 32);\r\n            const planeMaterial = new THREE.MeshPhongMaterial({\r\n                color: new THREE.Color(parseInt(ground.color.replace('#', '0x'), 16)),\r\n                shininess: ground.shininess,\r\n                side: THREE.DoubleSide\r\n            });\r\n            this.groundObj = new THREE.Mesh(planeGeometry, planeMaterial);\r\n            this.groundObj.position.setZ(ground.height);\r\n            this.groundObj.receiveShadow = true;\r\n            this._scene.add(this.groundObj);\r\n        }\r\n\r\n        const allObjs = this.getAllObjs();\r\n        const center = allObjs.center;\r\n        this.grid_pos.x = center.x;\r\n        this.grid_pos.y = center.y;\r\n        this.axes_pos.x = center.x;\r\n        this.axes_pos.y = center.y;\r\n        this.grid.position.set(center.x, center.y, 0);\r\n        this.axesHelper.position.set(center.x, center.y, 0);\r\n        // this.cameraLookat(center, allObjs.radius);\r\n\r\n        setTimeout(() => {\r\n            if (!this._model.attribs.query.hasAttrib(EEntType.MOD, 'hud')) { return; }\r\n            const hud = this._model.attribs.query.getModelAttribValue('hud') as string;\r\n            const element = this._createHud(hud).element;\r\n            const old = document.getElementById('hud');\r\n            if (old) {\r\n                container.removeChild(old);\r\n            }\r\n            container.appendChild(element);\r\n        }, 0);\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param ent_id\r\n     * @param triangle_i\r\n     * @param positions\r\n     * @param container\r\n     * @param label\r\n     */\r\n    public selectObjFace(ent_id: string,\r\n        tris_i: number[],\r\n        positions: number[],\r\n        container,\r\n        labelText = null) {\r\n        const geom = new THREE.BufferGeometry();\r\n        geom.setIndex(tris_i);\r\n        geom.addAttribute('position', new THREE.Float32BufferAttribute(positions, 3));\r\n        geom.addAttribute('normal', new THREE.Float32BufferAttribute(Array(positions.length).fill(0), 3));\r\n        geom.addAttribute('color', new THREE.Float32BufferAttribute(Array(positions.length).fill(0), 3));\r\n        geom.clearGroups();\r\n        geom.addGroup(0, tris_i.length, 0);\r\n        geom.addGroup(0, tris_i.length, 1);\r\n        const colorf = new THREE.Color(parseInt(this.settings.colors.face_f_s.replace('#', '0x'), 16));\r\n        const colorb = new THREE.Color(parseInt(this.settings.colors.face_b_s.replace('#', '0x'), 16));\r\n        const matf = new THREE.MeshPhongMaterial({\r\n            specular: 0x000000,\r\n            emissive: 0x000000,\r\n            color: colorf,\r\n            shininess: 0,\r\n            side: THREE.FrontSide\r\n        });\r\n        const matb = new THREE.MeshPhongMaterial({\r\n            specular: 0x000000,\r\n            emissive: 0x000000,\r\n            color: colorb,\r\n            shininess: 0,\r\n            side: THREE.BackSide\r\n        });\r\n        const mesh = new THREE.Mesh(geom, [matf, matb]);\r\n        mesh.geometry.computeBoundingSphere();\r\n        mesh.geometry.computeVertexNormals();\r\n        this._scene.add(mesh);\r\n        this.selected_geoms.set(ent_id, mesh.id);\r\n        this.sceneObjsSelected.set(ent_id, mesh);\r\n        if (labelText) {\r\n            const obj: { entity: THREE.Mesh, type: string, text: string } = { entity: mesh, type: objType.face, text: labelText };\r\n            this.createLabelforObj(container, obj.entity, obj.type, labelText, ent_id);\r\n            this.ObjLabelMap.set(ent_id, obj);\r\n        }\r\n        this.BufferGeoms.push(geom);\r\n    }\r\n\r\n    private initBufferLine(positions, indices: number[], colors: [number, number, number]) {\r\n        const geom = new THREE.BufferGeometry();\r\n        if (indices.length > 2) {\r\n            geom.setIndex(indices);\r\n        } else {\r\n            geom.setIndex([0, 1]);\r\n        }\r\n        geom.addAttribute('position', new THREE.Float32BufferAttribute(positions, 3));\r\n        geom.addAttribute('normal', new THREE.Float32BufferAttribute(Array(positions.length).fill(0), 3));\r\n        this.BufferGeoms.push(geom);\r\n        const rgb = `rgb(${colors.toString()})`;\r\n        const mat = new THREE.LineBasicMaterial({\r\n            color: new THREE.Color(rgb),\r\n            linewidth: 5,\r\n            linecap: 'round', // ignored by WebGLRenderer\r\n            linejoin: 'round' // ignored by WebGLRenderer\r\n        });\r\n        const bg = { geom, mat };\r\n        return bg;\r\n    }\r\n\r\n    public selectObjLine(ent_id: string, indices, positions, container, labelText = null) {\r\n        const bg = this.initBufferLine(positions, indices, [255, 0, 0]);\r\n        const line = new THREE.LineSegments(bg.geom, bg.mat);\r\n        this._scene.add(line);\r\n        this.selected_geoms.set(ent_id, line.id);\r\n        this.sceneObjsSelected.set(ent_id, line);\r\n\r\n        if (labelText) {\r\n            const obj: { entity: THREE.LineSegments, type: string, text: string } = { entity: line, type: objType.line, text: labelText };\r\n            this.createLabelforObj(container, obj.entity, obj.type, labelText, ent_id);\r\n            this.ObjLabelMap.set(ent_id, obj);\r\n        }\r\n    }\r\n\r\n    public selectEdgeByFace(parent_ent_id: string, ent_id: string, indices, positions, container, labelText = null) {\r\n        const bg = this.initBufferLine(positions, indices, [255, 0, 0]);\r\n        if (this.selected_face_edges.get(parent_ent_id) === undefined) {\r\n            this.selected_face_edges.set(parent_ent_id, new Map());\r\n        }\r\n\r\n        const check_exist: string[] = [];\r\n        this.selected_face_edges.forEach(v => {\r\n            v.forEach((vv, k) => {\r\n                check_exist.push(k);\r\n            });\r\n        });\r\n\r\n        this.selected_geoms.forEach((v, k) => {\r\n            check_exist.push(k);\r\n        });\r\n\r\n        if (!check_exist.includes(ent_id)) {\r\n            const line = new THREE.LineSegments(bg.geom, bg.mat);\r\n            this._scene.add(line);\r\n            this.selected_face_edges.get(parent_ent_id).set(ent_id, line.id);\r\n            this.selected_geoms.set(ent_id, line.id);\r\n            this.sceneObjsSelected.set(ent_id, line);\r\n            if (labelText) {\r\n                const obj: {\r\n                    entity: THREE.LineSegments,\r\n                    type: string,\r\n                    text: string\r\n                } = {\r\n                    entity: line,\r\n                    type: objType.line,\r\n                    text: labelText\r\n                };\r\n                this.createLabelforObj(container, obj.entity, obj.type, labelText, ent_id);\r\n                this.ObjLabelMap.set(ent_id, obj);\r\n            }\r\n        }\r\n    }\r\n\r\n    public selectWireByFace(parent_ent_id: string, ent_id: string, indices, positions, container, labelText = null) {\r\n        const bg = this.initBufferLine(positions, indices, [255, 0, 0]);\r\n        if (this.selected_face_wires.get(parent_ent_id) === undefined) {\r\n            this.selected_face_wires.set(parent_ent_id, new Map());\r\n        }\r\n\r\n        const check_exist: string[] = [];\r\n        this.selected_face_wires.forEach(v => {\r\n            v.forEach((vv, k) => {\r\n                check_exist.push(k);\r\n            });\r\n        });\r\n\r\n        this.selected_geoms.forEach((v, k) => {\r\n            check_exist.push(k);\r\n        });\r\n\r\n        if (!check_exist.includes(ent_id)) {\r\n            const line = new THREE.LineSegments(bg.geom, bg.mat);\r\n            this._scene.add(line);\r\n            this.selected_face_wires.get(parent_ent_id).set(ent_id, line.id);\r\n            this.selected_geoms.set(ent_id, line.id);\r\n            this.sceneObjsSelected.set(ent_id, line);\r\n            if (labelText) {\r\n                const obj: {\r\n                    entity: THREE.LineSegments,\r\n                    type: string,\r\n                    text: string\r\n                } = {\r\n                    entity: line,\r\n                    type: objType.line,\r\n                    text: labelText\r\n                };\r\n                this.createLabelforObj(container, obj.entity, obj.type, labelText, ent_id);\r\n                this.ObjLabelMap.set(ent_id, obj);\r\n            }\r\n        }\r\n    }\r\n\r\n    private initBufferPoint(positions: number[],\r\n        point_indices = null,\r\n        colors: number[] = null,\r\n        color: string,\r\n        size: number = 1) {\r\n        // TODO check color and colors\r\n        const geom = new THREE.BufferGeometry();\r\n        if (point_indices) {\r\n            geom.setIndex(point_indices);\r\n        }\r\n        geom.addAttribute('position', new THREE.Float32BufferAttribute(positions, 3));\r\n        const color_rgb = new THREE.Color(parseInt(color.replace('#', '0x'), 16));\r\n        if (colors) {\r\n            geom.addAttribute('color', new THREE.Float32BufferAttribute(colors, 3));\r\n        } else {\r\n            let color_data;\r\n            if (positions.length < 3) {\r\n                color_data = [color_rgb.r, color_rgb.g, color_rgb.b];\r\n            } else {\r\n                // @ts-ignore\r\n                color_data = Array(positions.length / 3).fill([color_rgb.r, color_rgb.g, color_rgb.b]).flat(1);\r\n            }\r\n            const color_buffer = new Uint8Array(color_data);\r\n            geom.addAttribute('color', new THREE.BufferAttribute(color_buffer, 3, true));\r\n        }\r\n        geom.computeBoundingSphere();\r\n        this.BufferGeoms.push(geom);\r\n        const mat = new THREE.PointsMaterial({\r\n            color: color_rgb,\r\n            size: size,\r\n            // vertexColors: THREE.VertexColors\r\n        });\r\n        const bg = { geom, mat };\r\n        return bg;\r\n    }\r\n\r\n    public selectObjPoint(ent_id: string = null, point_indices, positions, container, labelText = null) {\r\n        const bg = this.initBufferPoint(positions, point_indices, null, '#ff0000');\r\n        const point = new THREE.Points(bg.geom, bg.mat);\r\n        this._scene.add(point);\r\n        this.selected_geoms.set(ent_id, point.id);\r\n        this.sceneObjsSelected.set(ent_id, point);\r\n        if (labelText) {\r\n            const obj: { entity: THREE.Points, type: string, text: string } = { entity: point, type: objType.point, text: labelText };\r\n            this.createLabelforObj(container, obj.entity, obj.type, labelText, ent_id);\r\n            this.ObjLabelMap.set(ent_id, obj);\r\n        }\r\n    }\r\n\r\n    public selectObjPosition(parent_ent_id: string, ent_id: string, positions, container, labelText = null) {\r\n        const bg = this.initBufferPoint(positions, null, null, this.settings.colors.position_s, this.settings.positions.size + 0.1);\r\n        if (parent_ent_id === null) {\r\n            const point = new THREE.Points(bg.geom, bg.mat);\r\n            this._scene.add(point);\r\n            this.selected_geoms.set(ent_id, point.id);\r\n            this.sceneObjsSelected.set(ent_id, point);\r\n            if (labelText) {\r\n                const obj: {\r\n                    entity: THREE.Points,\r\n                    type: string,\r\n                    text: string\r\n                } = {\r\n                    entity: point,\r\n                    type: objType.point,\r\n                    text: labelText\r\n                };\r\n                this.createLabelforObj(container, obj.entity, obj.type, labelText, ent_id);\r\n                this.ObjLabelMap.set(ent_id, obj);\r\n            }\r\n        } else {\r\n            if (this.selected_positions.get(parent_ent_id) === undefined) {\r\n                this.selected_positions.set(parent_ent_id, new Map());\r\n            }\r\n\r\n            const check_exist: string[] = [];\r\n            this.selected_positions.forEach(v => {\r\n                v.forEach((vv, k) => {\r\n                    check_exist.push(k);\r\n                });\r\n            });\r\n\r\n            if (!check_exist.includes(ent_id)) {\r\n                const point = new THREE.Points(bg.geom, bg.mat);\r\n                this._scene.add(point);\r\n                this.selected_positions.get(parent_ent_id).set(ent_id, point.id);\r\n                this.selected_geoms.set(ent_id, point.id);\r\n                this.sceneObjsSelected.set(ent_id, point);\r\n                if (labelText) {\r\n                    const obj: {\r\n                        entity: THREE.Points,\r\n                        type: string,\r\n                        text: string\r\n                    } = {\r\n                        entity: point,\r\n                        type: objType.point,\r\n                        text: labelText\r\n                    };\r\n                    this.createLabelforObj(container, obj.entity, obj.type, labelText, ent_id);\r\n                    this.ObjLabelMap.set(ent_id, obj);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    public selectObjVetex(parent_ent_id: string, ent_id: string, positions, container, labelText = null) {\r\n        const bg = this.initBufferPoint(positions, null, null, this.settings.colors.vertex_s, this.settings.positions.size + 0.1);\r\n        if (parent_ent_id === null) {\r\n            const point = new THREE.Points(bg.geom, bg.mat);\r\n            this._scene.add(point);\r\n            this.sceneObjsSelected.set(ent_id, point);\r\n            this.selected_geoms.set(ent_id, point.id);\r\n            if (labelText) {\r\n                const obj: {\r\n                    entity: THREE.Points,\r\n                    type: string,\r\n                    text: string\r\n                } = {\r\n                    entity: point,\r\n                    type: objType.point,\r\n                    text: labelText\r\n                };\r\n                this.createLabelforObj(container, obj.entity, obj.type, labelText, ent_id);\r\n                this.ObjLabelMap.set(ent_id, obj);\r\n            }\r\n        } else {\r\n            if (this.selected_vertex.get(parent_ent_id) === undefined) {\r\n                this.selected_vertex.set(parent_ent_id, new Map());\r\n            }\r\n\r\n            const check_exist: string[] = [];\r\n            this.selected_vertex.forEach(v => {\r\n                v.forEach((vv, k) => {\r\n                    check_exist.push(k);\r\n                });\r\n            });\r\n\r\n            if (!check_exist.includes(ent_id)) {\r\n                const point = new THREE.Points(bg.geom, bg.mat);\r\n                this._scene.add(point);\r\n                this.selected_vertex.get(parent_ent_id).set(ent_id, point.id);\r\n                this.sceneObjsSelected.set(ent_id, point);\r\n                this.selected_geoms.set(ent_id, point.id);\r\n                if (labelText) {\r\n                    const obj: {\r\n                        entity: THREE.Points,\r\n                        type: string,\r\n                        text: string\r\n                    } = {\r\n                        entity: point,\r\n                        type: objType.point,\r\n                        text: labelText\r\n                    };\r\n                    this.createLabelforObj(container, obj.entity, obj.type, labelText, ent_id);\r\n                    this.ObjLabelMap.set(ent_id, obj);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    public createLabelforObj(container, obj, type: string, labelText: string, ent_id: string) {\r\n        const label = this._createTextLabel(container, type, labelText, ent_id);\r\n        const showSelected = JSON.parse(sessionStorage.getItem('mpm_showSelected'));\r\n        if (showSelected) {\r\n            let arr = [];\r\n            if (JSON.parse(sessionStorage.getItem('mpm_selected_ents_arr'))) {\r\n                arr = JSON.parse(sessionStorage.getItem('mpm_selected_ents_arr'));\r\n            }\r\n            const allLabels = document.getElementsByClassName('text-label');\r\n            for (let i = 0; i < allLabels.length; i++) {\r\n                const element = allLabels[i];\r\n                const attr = Number(element.getAttribute('data-index'));\r\n                const index = arr.findIndex(l => l === attr);\r\n                element.innerHTML = String(index);\r\n            }\r\n        } else {\r\n            label.setHTML(labelText);\r\n        }\r\n        label.setParent(obj);\r\n        this._textLabels.set(label.element.id, label);\r\n        container.appendChild(label.element);\r\n    }\r\n\r\n    public unselectObj(ent_id, container) {\r\n        const removing = this.selected_geoms.get(ent_id);\r\n        // remove Geom from scene\r\n        this._scene.remove(this._scene.getObjectById(removing));\r\n        this.selected_geoms.delete(ent_id);\r\n        // remove Geom from selected Objs Map\r\n        this.sceneObjsSelected.delete(ent_id);\r\n\r\n        this.ObjLabelMap.delete(ent_id);\r\n        if (document.getElementById(`textLabel_${ent_id}`)) {\r\n            container.removeChild(document.getElementById(`textLabel_${ent_id}`));\r\n        }\r\n    }\r\n\r\n    public unselectObjGroup(parent_ent_id, container, group) {\r\n        let removing;\r\n        if (group === 'positions') {\r\n            removing = this.selected_positions.get(parent_ent_id);\r\n        } else if (group === 'vertex') {\r\n            removing = this.selected_vertex.get(parent_ent_id);\r\n        } else if (group === 'face_edges') {\r\n            // get the removing first\r\n            removing = this.selected_face_edges.get(parent_ent_id);\r\n        } else if (group === 'face_wires') {\r\n            removing = this.selected_face_wires.get(parent_ent_id);\r\n        }\r\n        // remove positions from scene\r\n        removing.forEach((v, k) => {\r\n            this._scene.remove(this._scene.getObjectById(v));\r\n            this.ObjLabelMap.delete(k);\r\n            if (document.getElementById(`textLabel_${k}`)) {\r\n                container.removeChild(document.getElementById(`textLabel_${k}`));\r\n            }\r\n        });\r\n        if (group === 'positions') {\r\n            // then delete\r\n            this.selected_positions.delete(parent_ent_id);\r\n        } else if (group === 'vertex') {\r\n            this.selected_vertex.delete(parent_ent_id);\r\n        } else if (group === 'face_edges') {\r\n            this.selected_face_edges.delete(parent_ent_id);\r\n        } else if (group === 'face_wires') {\r\n            this.selected_face_wires.delete(parent_ent_id);\r\n        }\r\n    }\r\n\r\n    // ============================================================================\r\n    // Private methods\r\n    // ============================================================================\r\n\r\n    /**\r\n     * Creates an ambient light\r\n     */\r\n    private _addAmbientLight() {\r\n        const color = new THREE.Color(parseInt(this.settings.ambient_light.color.replace('#', '0x'), 16));\r\n        const intensity = this.settings.ambient_light.intensity;\r\n        this.ambient_light = new THREE.AmbientLight(color, intensity); // soft white light\r\n        this._scene.add(this.ambient_light);\r\n    }\r\n\r\n    /**\r\n     * Creates a hemisphere light\r\n     */\r\n    private _addHemisphereLight() {\r\n        const skyColor = new THREE.Color(parseInt(this.settings.hemisphere_light.skyColor.replace('#', '0x'), 16));\r\n        const groundColor = new THREE.Color(parseInt(this.settings.hemisphere_light.groundColor.replace('#', '0x'), 16));\r\n        const intensity = this.settings.hemisphere_light.intensity;\r\n        this.hemisphere_light = new THREE.HemisphereLight(\r\n            skyColor, // skyColor\r\n            groundColor, // groundColor\r\n            intensity // intensity\r\n        );\r\n        this._scene.add(this.hemisphere_light);\r\n        const helper = new THREE.HemisphereLightHelper(this.hemisphere_light, 10);\r\n        helper.visible = this.settings.hemisphere_light.helper;\r\n        this._scene.add(helper);\r\n    }\r\n\r\n    // Creates a Directional Light\r\n    private _addDirectionalLight(): void {\r\n        this.directional_light = new THREE.DirectionalLight(0xffffff, this.settings.directional_light.intensity);\r\n        const distance = this.settings.directional_light.distance;\r\n        this.getDLPosition(distance);\r\n        this.directional_light.castShadow = this.settings.directional_light.shadow;\r\n        this.directional_light.visible = this.settings.directional_light.show;\r\n        const shadowMapSize = this.settings.directional_light.shadowSize;\r\n        this.directional_light.shadow.mapSize.width = 1024 * shadowMapSize;  // default\r\n        this.directional_light.shadow.mapSize.height = 1024 * shadowMapSize; // default\r\n        this.directional_light.shadow.camera.near = 0.5;    // default\r\n        this._scene.add(this.directional_light);\r\n        this.DLDistance(distance);\r\n    }\r\n\r\n    private getDLPosition(scale: number): void {\r\n        const azimuth = this.settings.directional_light.azimuth,\r\n            altitude = this.settings.directional_light.altitude,\r\n            posX = Math.cos(azimuth * Math.PI * 2 / 360) * scale,\r\n            posY = Math.sin(azimuth * Math.PI * 2 / 360) * scale,\r\n            posZ = Math.sin(altitude * Math.PI * 2 / 360) * scale;\r\n\r\n        this.directional_light.position.set(posX, posY, posZ);\r\n    }\r\n\r\n    public DLMapSize(size = null): void {\r\n        let _size;\r\n        if (size) {\r\n            _size = 1024 * size;\r\n        } else {\r\n            _size = 8192;\r\n        }\r\n        if (this.directional_light) {\r\n            this.directional_light.shadow.mapSize.width = _size;\r\n            this.directional_light.shadow.mapSize.width = _size;\r\n        }\r\n        this._renderer.render(this._scene, this._camera);\r\n    }\r\n\r\n    public DLDistance(size = null): void {\r\n        let scale;\r\n        if (size) {\r\n            scale = size;\r\n        } else {\r\n            scale = 10000;\r\n        }\r\n        if (this.directional_light) {\r\n            let i = 0;\r\n            const length = this._scene.children.length;\r\n            if (length !== 0) {\r\n                for (; i < length; i++) {\r\n                    if (this._scene.children[i]) {\r\n                        if (this._scene.children[i].name === 'DLHelper') {\r\n                            this._scene.remove(this._scene.children[i]);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            this.directional_light.shadow.camera.far = 3 * scale;\r\n            this.directional_light.shadow.camera.left = -scale;\r\n            this.directional_light.shadow.camera.right = scale;\r\n            this.directional_light.shadow.camera.top = scale;\r\n            this.directional_light.shadow.camera.bottom = -scale;\r\n            const helper = new THREE.CameraHelper(this.directional_light.shadow.camera);\r\n            helper.visible = this.settings.directional_light.helper;\r\n            helper.name = 'DLHelper';\r\n            this._scene.add(helper);\r\n            this.getDLPosition(scale);\r\n            this._renderer.render(this._scene, this._camera);\r\n        }\r\n    }\r\n\r\n    public directionalLightMove(azimuth = null, altitude = null): void {\r\n        const distance = this.settings.directional_light.distance;\r\n        if (azimuth) {\r\n            this.directional_light.position.x = Math.cos(azimuth * Math.PI * 2 / 360) * distance;\r\n            this.directional_light.position.y = Math.sin(azimuth * Math.PI * 2 / 360) * distance;\r\n        }\r\n        if (altitude) {\r\n            this.directional_light.position.x = Math.cos(altitude * Math.PI * 2 / 360) * distance;\r\n            this.directional_light.position.z = Math.sin(altitude * Math.PI * 2 / 360) * distance;\r\n        }\r\n    }\r\n\r\n    // add axes\r\n    public _addAxes(size: number = this.settings.axes.size) {\r\n        let i = 0;\r\n        const length = this._scene.children.length;\r\n        if (length !== 0) {\r\n            for (; i < length; i++) {\r\n                if (this._scene.children[i]) {\r\n                    if (this._scene.children[i].name === 'AxesHelper') {\r\n                        this._scene.remove(this._scene.children[i]);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        this.axesHelper = new THREE.AxesHelper(size);\r\n        this.axesHelper.visible = this.settings.axes.show;\r\n        if (this.axesHelper.visible) {\r\n            this.axesHelper.name = 'AxesHelper';\r\n            this.axesHelper.position.set(this.axes_pos.x, this.axes_pos.y, 0);\r\n            this._scene.add(this.axesHelper);\r\n        }\r\n        // this.axesHelper.position.set(0, 0, 0);\r\n    }\r\n    /**\r\n     * Draws a grid on the XY plane.\r\n     */\r\n    public _addGrid(size: number = this.settings.grid.size) {\r\n        let i = 0;\r\n        const length = this._scene.children.length;\r\n        for (; i < length; i++) {\r\n            if (this._scene.children[i]) {\r\n                if (this._scene.children[i].name === 'GridHelper') {\r\n                    this._scene.remove(this._scene.children[i]);\r\n                }\r\n            }\r\n        }\r\n        this.grid = new THREE.GridHelper(size, size / 10);\r\n        this.grid.visible = this.settings.grid.show;\r\n        // todo: change grid -> grid_value\r\n        if (this.grid.visible) {\r\n            this.grid.name = 'GridHelper';\r\n            const vector = new THREE.Vector3(0, 1, 0);\r\n            this.grid.lookAt(vector);\r\n            this.grid.position.set(this.grid_pos.x, this.grid_pos.y, 0);\r\n            this._scene.add(this.grid);\r\n        }\r\n    }\r\n    /**\r\n     * Add threejs triangles to the scene\r\n     */\r\n    private _addTris(tris_i: number[],\r\n        posis_buffer: THREE.Float32BufferAttribute,\r\n        // normals_buffer: THREE.Float32BufferAttribute,\r\n        colors_buffer: THREE.Float32BufferAttribute,\r\n        material_groups,\r\n        materials): void {\r\n        const geom = new THREE.BufferGeometry();\r\n        geom.setIndex(tris_i);\r\n        geom.addAttribute('position', posis_buffer);\r\n        // geom.addAttribute('normal', normals_buffer);\r\n        geom.addAttribute('color', colors_buffer);\r\n        const colorf = new THREE.Color(parseInt(this.settings.colors.face_f.replace('#', '0x'), 16));\r\n        const colorb = new THREE.Color(parseInt(this.settings.colors.face_b.replace('#', '0x'), 16));\r\n        geom.clearGroups();\r\n        material_groups.forEach(element => {\r\n            geom.addGroup(element[0], element[1], element[2]);\r\n        });\r\n\r\n        this.BufferGeoms.push(geom);\r\n\r\n        const material_arr = [];\r\n        let index = 0;\r\n        const l = materials.length;\r\n        for (; index < l; index++) {\r\n            const element = materials[index];\r\n            let mat;\r\n            if (index === 0) {\r\n                delete element.type; element.color = colorf;\r\n                mat = new THREE.MeshPhongMaterial(element);\r\n            } else if (index === 1) {\r\n                delete element.type;\r\n                element.color = colorb;\r\n                mat = new THREE.MeshPhongMaterial(element);\r\n            } else {\r\n                if (element.type === MaterialType.MeshBasicMaterial) {\r\n                    delete element.type;\r\n                    mat = new THREE.MeshBasicMaterial(element);\r\n                } else if (element.type === MaterialType.MeshPhongMaterial) {\r\n                    delete element.type;\r\n                    mat = new THREE.MeshPhongMaterial(element);\r\n                } else if (element.type === MaterialType.MeshPhysicalMaterial) {\r\n                    delete element.type;\r\n                    mat = new THREE.MeshPhysicalMaterial(element);\r\n                } else if (element.type === MaterialType.MeshLambertMaterial) {\r\n                    delete element.type;\r\n                    mat = new THREE.MeshLambertMaterial(element);\r\n                } else if (element.type === MaterialType.MeshStandardMaterial) {\r\n                    delete element.type;\r\n                    mat = new THREE.MeshStandardMaterial(element);\r\n                }\r\n            }\r\n            material_arr.push(mat);\r\n        }\r\n        const mesh = new THREE.Mesh(geom, material_arr);\r\n        mesh.geometry.computeBoundingSphere();\r\n        mesh.geometry.computeVertexNormals();\r\n        mesh.castShadow = true;\r\n\r\n        // show vertex normals\r\n        this.vnh = new THREE.VertexNormalsHelper(mesh, this.settings.normals.size, 0x0000ff);\r\n        this.vnh.visible = this.settings.normals.show;\r\n        this._scene.add(this.vnh);\r\n        this.sceneObjs.push(mesh);\r\n        // add mesh to scene\r\n        this._scene.add(mesh);\r\n        this._threejs_nums[2] = tris_i.length / 3;\r\n    }\r\n    /**\r\n     * Add threejs lines to the scene\r\n     */\r\n    private _addLines(lines_i: number[],\r\n        posis_buffer: THREE.Float32BufferAttribute,\r\n        normals_buffer: THREE.Float32BufferAttribute,\r\n        size: number = 1): void {\r\n        const geom = new THREE.BufferGeometry();\r\n        geom.setIndex(lines_i);\r\n        geom.addAttribute('position', posis_buffer);\r\n        geom.addAttribute('normal', normals_buffer);\r\n        this.BufferGeoms.push(geom);\r\n        // geom.addAttribute( 'color', new THREE.Float32BufferAttribute( colors_flat, 3 ) );\r\n        const mat = new THREE.LineBasicMaterial({\r\n            color: 0x000000,\r\n            linewidth: size,\r\n            linecap: 'round', // ignored by WebGLRenderer\r\n            linejoin: 'round' // ignored by WebGLRenderer\r\n        });\r\n        const line = new THREE.LineSegments(geom, mat);\r\n        this.sceneObjs.push(line);\r\n        this._scene.add(line);\r\n        this._threejs_nums[1] = lines_i.length / 2;\r\n    }\r\n    /**\r\n     * Add threejs points to the scene\r\n     */\r\n    private _addPoints(points_i: number[],\r\n        posis_buffer: THREE.Float32BufferAttribute,\r\n        colors_buffer: THREE.Float32BufferAttribute,\r\n        color: [number, number, number],\r\n        size: number = 1): void {\r\n        const geom = new THREE.BufferGeometry();\r\n        geom.setIndex(points_i);\r\n        geom.addAttribute('position', posis_buffer);\r\n        geom.addAttribute('color', colors_buffer);\r\n        this.BufferGeoms.push(geom);\r\n        // geom.computeBoundingSphere();\r\n        const rgb = `rgb(${color.toString()})`;\r\n        const mat = new THREE.PointsMaterial({\r\n            color: new THREE.Color(rgb),\r\n            size: size,\r\n            vertexColors: THREE.VertexColors\r\n        });\r\n        const point = new THREE.Points(geom, mat);\r\n        this.sceneObjs.push(point);\r\n        this._scene.add(point);\r\n        this._threejs_nums[0] = points_i.length;\r\n    }\r\n\r\n    private _addPositions(points_i: number[],\r\n        posis_buffer: THREE.Float32BufferAttribute,\r\n        color: string,\r\n        size: number = 1): void {\r\n        const geom = new THREE.BufferGeometry();\r\n        geom.setIndex(points_i);\r\n        geom.addAttribute('position', posis_buffer);\r\n        this.BufferGeoms.push(geom);\r\n        // geom.computeBoundingSphere();\r\n        const mat = new THREE.PointsMaterial({\r\n            color: new THREE.Color(parseInt(color.replace('#', '0x'), 16)),\r\n            size: size,\r\n            // vertexColors: THREE.VertexColors\r\n        });\r\n        const point = new THREE.Points(geom, mat);\r\n        this.sceneObjs.push(point);\r\n        this._scene.add(point);\r\n        this._positions.push(point);\r\n        this._positions.map(p => p.visible = this.settings.positions.show);\r\n    }\r\n\r\n    private _createTextLabel(container, type: string, labelText: string, ent_id: string) {\r\n        const div = document.createElement('div');\r\n        div.id = `textLabel_${ent_id}`;\r\n        div.title = ent_id;\r\n        div.setAttribute('data-index', ent_id.substr(2));\r\n        div.className = 'text-label';\r\n        div.style.position = 'absolute';\r\n        div.style.background = 'rgba(255, 255, 255, 0.3)';\r\n        div.style.padding = '1px';\r\n        div.innerHTML = labelText;\r\n        div.style.top = '-1000';\r\n        div.style.left = '-1000';\r\n        const _this = this;\r\n        return {\r\n            element: div,\r\n            parent: false,\r\n            position: new THREE.Vector3(0, 0, 0),\r\n            setHTML: function (html) {\r\n                this.element.innerHTML = html;\r\n            },\r\n            setParent: function (threejsobj) {\r\n                this.parent = threejsobj;\r\n            },\r\n            updatePosition: function () {\r\n                if (this.parent) {\r\n                    if (type === objType.point || type === objType.face) {\r\n                        const center = this.parent.geometry.boundingSphere.center;\r\n                        this.position.copy(center);\r\n                    } else if (type === objType.line) {\r\n                        const p = this.parent.geometry.getAttribute('position').array;\r\n                        const x = (p[0] + p[3]) / 2, y = (p[1] + p[4]) / 2, z = (p[2] + p[5]) / 2;\r\n                        const center = new THREE.Vector3(x, y, z);\r\n                        this.position.copy(center);\r\n                    }\r\n                }\r\n                const coords2d = this.get2DCoords(this.position, _this._camera);\r\n                this.element.style.left = coords2d.x + 'px';\r\n                this.element.style.top = coords2d.y + 'px';\r\n            },\r\n            get2DCoords: function (position, camera) {\r\n                const vector = position.project(camera);\r\n                vector.x = (vector.x + 1) / 2 * container.offsetWidth;\r\n                vector.y = -(vector.y - 1) / 2 * container.offsetHeight;\r\n                return vector;\r\n            }\r\n        };\r\n    }\r\n\r\n    public disposeWebGL() {\r\n        console.log('this._renderer.info', this._renderer.info.memory.geometries);\r\n        this.sceneObjs.forEach(obj => this._scene.remove(obj));\r\n        const BufferGeoms = this.BufferGeoms;\r\n        BufferGeoms.forEach(geom => {\r\n            geom.dispose();\r\n        });\r\n        this.BufferGeoms = [];\r\n        console.log('this._renderer.info', this._renderer.info.memory.geometries);\r\n    }\r\n\r\n    public lookAtObj(width: number) {\r\n        const allObjs = this.getAllObjs();\r\n        const selectedObjs = this.getSelectedObjs();\r\n        if (allObjs === null && selectedObjs === null) {\r\n            const sceneCenter = this._scene.position;\r\n            this._camera.lookAt(sceneCenter);\r\n            // this._camera.updateProjectionMatrix();\r\n            this._controls.target.set(sceneCenter.x, sceneCenter.y, sceneCenter.z);\r\n            this._controls.update();\r\n        }\r\n\r\n        let center = null;\r\n        let radius = null;\r\n        if (selectedObjs) {\r\n            center = selectedObjs.center;\r\n            radius = selectedObjs.radius;\r\n        } else if (allObjs) {\r\n            center = allObjs.center;\r\n            radius = allObjs.radius;\r\n        } else {\r\n            center = this._scene.position;\r\n            radius = 50;\r\n        }\r\n        // set grid and axeshelper to center of the objs\r\n        // this.grid.position.set(center.x, center.y, 0);\r\n        // this.axesHelper.position.set(center.x, center.y, 0);\r\n\r\n        this.cameraLookat(center, radius);\r\n    }\r\n\r\n    private cameraLookat(center, radius = 100) {\r\n        const fov = this._camera.fov * (Math.PI / 180);\r\n        const vec_centre_to_pos: THREE.Vector3 = new THREE.Vector3();\r\n        vec_centre_to_pos.subVectors(this._camera.position, vec_centre_to_pos);\r\n        const tmp_vec = new THREE.Vector3(Math.abs(radius / Math.sin(fov / 2)),\r\n            Math.abs(radius / Math.sin(fov / 2)),\r\n            Math.abs(radius / Math.sin(fov / 2)));\r\n        vec_centre_to_pos.setLength(tmp_vec.length());\r\n        const perspectiveNewPos: THREE.Vector3 = new THREE.Vector3();\r\n        perspectiveNewPos.addVectors(center, vec_centre_to_pos);\r\n        const newLookAt = new THREE.Vector3(center.x, center.y, center.z);\r\n        this._camera.position.copy(perspectiveNewPos);\r\n        this._camera.lookAt(newLookAt);\r\n        this._camera.updateProjectionMatrix();\r\n        this._controls.target.set(newLookAt.x, newLookAt.y, newLookAt.z);\r\n        this._controls.update();\r\n    }\r\n\r\n    private getAllObjs() {\r\n        if (this.sceneObjs.length !== 0) {\r\n            const objs = new THREE.Object3D();\r\n            this.sceneObjs.map(obj => objs.children.push(obj));\r\n            const boxHelper = new THREE.BoxHelper(objs);\r\n            boxHelper.geometry.computeBoundingSphere();\r\n            const boundingSphere = boxHelper.geometry.boundingSphere;\r\n            return boundingSphere;\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    private getSelectedObjs() {\r\n        if (this.sceneObjsSelected.size !== 0) {\r\n            const objs = new THREE.Object3D();\r\n            this.sceneObjsSelected.forEach(obj => objs.children.push(obj));\r\n            const boxHelper = new THREE.BoxHelper(objs);\r\n            boxHelper.geometry.computeBoundingSphere();\r\n            const boundingSphere = boxHelper.geometry.boundingSphere;\r\n            return boundingSphere;\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    private _createHud(text: string) {\r\n        const div = document.createElement('div');\r\n        div.id = `hud`;\r\n        div.style.position = 'absolute';\r\n        div.style.background = 'rgba(255, 255, 255, 0.3)';\r\n        div.style.padding = '5px';\r\n        div.innerHTML = text;\r\n        div.style.top = '40px';\r\n        div.style.left = '5px';\r\n        div.style.maxWidth = '200px';\r\n        div.style.whiteSpace = 'pre-wrap';\r\n        div.style.fontSize = '14px';\r\n        return {\r\n            element: div\r\n        };\r\n    }\r\n\r\n    public onWindowKeyPress(event: KeyboardEvent) {\r\n        const nodeName = (<Element>event.target).nodeName;\r\n        if (nodeName === 'TEXTAREA' || nodeName === 'INPUT') { return; }\r\n        const segment_str = window.location.pathname;\r\n        const segment_array = segment_str.split('/');\r\n        const last_segment = segment_array[segment_array.length - 1];\r\n        if (last_segment === 'editor') {\r\n            return;\r\n        }\r\n        const keyCode = event.which;\r\n        // console.log(keyCode);\r\n        const positionDelta = 10;\r\n        const rotationDelta = 0.02;\r\n        const xp = this._camera.position.x;\r\n        const yp = this._camera.position.y;\r\n        switch (keyCode) {\r\n            case 65: // A: move left\r\n                this._camera.position.x -= positionDelta;\r\n                break;\r\n            case 68: // D: move right\r\n                this._camera.position.x += positionDelta;\r\n                break;\r\n            case 87: // W: move forward\r\n                this._camera.position.y += positionDelta;\r\n                break;\r\n            case 83: // S: move backward\r\n                this._camera.position.y -= positionDelta;\r\n                break;\r\n            case 90: // Z: move up\r\n                this._camera.position.z += positionDelta;\r\n                break;\r\n            case 88: // X: move down\r\n                this._camera.position.z -= positionDelta;\r\n                break;\r\n            case 81: // Q: rotate clockwise\r\n                this._camera.position.x = xp * Math.cos(rotationDelta) + yp * Math.sin(rotationDelta);\r\n                this._camera.position.y = yp * Math.cos(rotationDelta) - xp * Math.sin(rotationDelta);\r\n                this._camera.lookAt(this._scene.position);\r\n                break;\r\n            case 69: // E: rotate anticlockwise\r\n                this._camera.position.x = xp * Math.cos(rotationDelta) - yp * Math.sin(rotationDelta);\r\n                this._camera.position.y = yp * Math.cos(rotationDelta) + xp * Math.sin(rotationDelta);\r\n                this._camera.lookAt(this._scene.position);\r\n                break;\r\n            case 84: // T\r\n                this._camera.rotation.x += rotationDelta;\r\n                break;\r\n            case 71: // G\r\n                this._camera.rotation.x -= rotationDelta;\r\n                break;\r\n            case 70: // F\r\n                this._camera.rotation.y += rotationDelta;\r\n                break;\r\n            case 72: // H\r\n                this._camera.rotation.y -= rotationDelta;\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * objType includes point, line, face\r\n */\r\n\r\nenum objType {\r\n    point = 'point',\r\n    line = 'line',\r\n    face = 'face'\r\n}\r\n\r\nenum MaterialType {\r\n    MeshBasicMaterial = 'MeshBasicMaterial',\r\n    MeshStandardMaterial = 'MeshStandardMaterial',\r\n    MeshLambertMaterial = 'MeshLambertMaterial',\r\n    MeshPhongMaterial = 'MeshPhongMaterial',\r\n    MeshPhysicalMaterial = 'MeshPhysicalMaterial'\r\n}\r\n\r\ninterface Settings {\r\n    normals: { show: boolean, size: number };\r\n    axes: { show: boolean, size: number };\r\n    grid: { show: boolean, size: number };\r\n    positions: { show: boolean, size: number };\r\n    tjs_summary: { show: boolean };\r\n    gi_summary: { show: boolean };\r\n    wireframe: { show: boolean };\r\n    colors: {\r\n        viewer_bg: string,\r\n        position: string,\r\n        position_s: string,\r\n        vertex_s: string,\r\n        face_f: string,\r\n        face_f_s: string,\r\n        face_b: string,\r\n        face_b_s: string\r\n    };\r\n    ambient_light: {\r\n        show: boolean,\r\n        color: string,\r\n        intensity: number\r\n    };\r\n    hemisphere_light: {\r\n        show: boolean,\r\n        helper: boolean,\r\n        skyColor: string,\r\n        groundColor: string,\r\n        intensity: number\r\n    };\r\n    directional_light: {\r\n        show: boolean,\r\n        helper: boolean,\r\n        color: string,\r\n        intensity: number,\r\n        shadow: boolean,\r\n        shadowSize: number,\r\n        azimuth: number,\r\n        altitude: number,\r\n        distance: number\r\n    };\r\n    ground: {\r\n        show: boolean,\r\n        width: number,\r\n        length: number,\r\n        height: number,\r\n        color: string,\r\n        shininess: number\r\n    };\r\n}\r\n","module.exports = \"<div id=\\\"gi-viewer-container\\\">\\r\\n\\t<as-split direction=\\\"vertical\\\">\\r\\n\\t\\t<as-split-area [size]=\\\"66\\\" id=\\\"three-js\\\">\\r\\n\\t\\t\\t<threejs-viewer [model]='data'\\r\\n\\t\\t\\t\\t(eventClicked)=\\\"childEventClicked($event)\\\"\\r\\n\\t\\t\\t\\t[attr_table_select]='attrTableSelect'\\r\\n\\t\\t\\t\\t(resetTableEvent) = \\\"resetTable()\\\">\\r\\n\\t\\t\\t</threejs-viewer>\\r\\n\\t\\t\\t<button class='btn' id=\\\"settings_button\\\" mat-icon-button (click)=\\\"openModal('settings_modal')\\\" title=\\\"Settings\\\"><mat-icon svgIcon=\\\"settings\\\"></mat-icon></button>\\r\\n\\t\\t</as-split-area>\\r\\n\\t\\t<as-split-area [size]='34' id=\\\"attrib\\\">\\r\\n\\t\\t\\t<attribute [data]=\\\"data\\\"\\r\\n\\t\\t\\t\\t[refresh]=\\\"clickedEvent\\\"\\r\\n\\t\\t\\t\\t[reset]=\\\"attrTableReset\\\"\\r\\n\\t\\t\\t\\t(attrTableSelect) = \\\"attribTableSelected($event)\\\">\\r\\n\\t\\t\\t</attribute>\\r\\n\\t\\t\\t<modal-window id=\\\"settings_modal\\\">\\r\\n\\t\\t\\t\\t<h1>3D Viewer Settings</h1>\\r\\n\\t\\t\\t\\t<tabs id=\\\"settingsTab\\\">\\r\\n\\t\\t\\t\\t\\t<tab tabTitle=\\\"Scene\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"mat-elevation-z1\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<dl>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<dd [title] = \\\"!normalsEnabled?'No models available':''\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"label\\\">Normals</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"onoffswitch\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"checkbox\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tname=\\\"onoffswitch\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tclass=\\\"onoffswitch-checkbox\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tid=\\\"normalsOnOff\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t[checked]='settings.normals.show'\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t[disabled] = \\\"!normalsEnabled\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t(change)=\\\"settingOnChange('normals.show')\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label class=\\\"onoffswitch-label\\\" for=\\\"normalsOnOff\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"onoffswitch-inner\\\"></span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"onoffswitch-switch\\\"></span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"slidecontainer\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"range\\\" min=\\\"1\\\" max=\\\"100\\\" step=\\\"1\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t[value]=\\\"settings.normals.size\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tclass=\\\"slider\\\" id=\\\"normalSize\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t(input)=\\\"settingOnChange('normals.size', $event.target.value)\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t[disabled] = \\\"!normalsEnabled\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" [value]=\\\"settings.normals.size\\\" disabled>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</dd>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<dd>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"label\\\">Axes</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"onoffswitch\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"checkbox\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tname=\\\"onoffswitch\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tclass=\\\"onoffswitch-checkbox\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tid=\\\"axesOnOff\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t[checked]=\\\"settings.axes.show\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t(change)=\\\"settingOnChange('axes.show')\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label class=\\\"onoffswitch-label\\\" for=\\\"axesOnOff\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"onoffswitch-inner\\\"></span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"onoffswitch-switch\\\"></span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"slidecontainer\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"range\\\" min=\\\"1\\\" max=\\\"1000\\\" step=\\\"1\\\" [value]=\\\"settings.axes.size\\\" class=\\\"slider\\\" id=\\\"axesSize\\\" (input)=\\\"settingOnChange('axes.size', $event.target.value)\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" [value]=\\\"settings.axes.size\\\" disabled>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</dd>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<dd>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"label\\\">Grid</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"onoffswitch\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"checkbox\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tname=\\\"onoffswitch\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tclass=\\\"onoffswitch-checkbox\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tid=\\\"gridOnOff\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t[checked]='settings.grid.show'\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t(change)=\\\"settingOnChange('grid.show')\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label class=\\\"onoffswitch-label\\\" for=\\\"gridOnOff\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"onoffswitch-inner\\\"></span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"onoffswitch-switch\\\"></span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"slidecontainer\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"range\\\" min=\\\"10\\\" max=\\\"10000\\\" step=\\\"10\\\" [value]=\\\"settings.grid.size\\\" class=\\\"slider\\\" id=\\\"gridSize\\\" (input)=\\\"settingOnChange('grid.size', $event.target.value)\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" [value]=\\\"settings.grid.size\\\" disabled>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</dd>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<dd>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"label\\\">Positions</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"onoffswitch\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"checkbox\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tname=\\\"onoffswitch\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tclass=\\\"onoffswitch-checkbox\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tid=\\\"positionsOnOff\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t[checked]='settings.positions.show'\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t(change)=\\\"settingOnChange('positions.show')\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label class=\\\"onoffswitch-label\\\" for=\\\"positionsOnOff\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"onoffswitch-inner\\\"></span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"onoffswitch-switch\\\"></span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"slidecontainer\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"range\\\" min=\\\"0.1\\\" max=\\\"10\\\" step=\\\"0.1\\\" [value]=\\\"settings.positions.size\\\" class=\\\"slider\\\" id=\\\"positionsSize\\\" (input)=\\\"settingOnChange('positions.size', $event.target.value)\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" [value]=\\\"settings.positions.size\\\" disabled>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</dd>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<dd>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"label\\\">Wireframe</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"onoffswitch\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"checkbox\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tname=\\\"onoffswitch\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tclass=\\\"onoffswitch-checkbox\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tid=\\\"wireframeOnOff\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t[checked]='settings.wireframe.show'\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t(change)=\\\"settingOnChange('wireframe.show')\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label class=\\\"onoffswitch-label\\\" for=\\\"wireframeOnOff\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"onoffswitch-inner\\\"></span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"onoffswitch-switch\\\"></span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</dd>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<dd>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"label\\\">GI Summary</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"onoffswitch\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"checkbox\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tname=\\\"onoffswitch\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tclass=\\\"onoffswitch-checkbox\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tid=\\\"gi_summaryOnOff\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t[checked]='settings.gi_summary.show'\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t(change)=\\\"settingOnChange('gi_summary.show')\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label class=\\\"onoffswitch-label\\\" for=\\\"gi_summaryOnOff\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"onoffswitch-inner\\\"></span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"onoffswitch-switch\\\"></span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</dd>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<dd>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"label\\\">Threejs Summary</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"onoffswitch\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"checkbox\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tname=\\\"onoffswitch\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tclass=\\\"onoffswitch-checkbox\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tid=\\\"tjs_summaryOnOff\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t[checked]='settings.tjs_summary.show'\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t(change)=\\\"settingOnChange('tjs_summary.show')\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label class=\\\"onoffswitch-label\\\" for=\\\"tjs_summaryOnOff\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"onoffswitch-inner\\\"></span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"onoffswitch-switch\\\"></span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</dd>\\r\\n\\t\\t\\t\\t\\t\\t\\t</dl>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t</tab>\\r\\n\\t\\t\\t\\t\\t<tab tabTitle=\\\"Colors\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"mat-elevation-z1\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<dl>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<dd class='colors' *ngFor=\\\"let item of setting_colors; let i = index\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"label\\\">{{item.label}}</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t[(colorPicker)]=\\\"settings.colors[item.setting]\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t[style.background]=\\\"settings.colors[item.setting]\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t[value]=\\\"settings.colors[item.setting]\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t[class.light] = \\\"checkColor(this.settings.colors[item.setting])\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t/>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<!-- <button *ngIf=\\\"item.default\\\" (click)=\\\"resetDefault('colors.viewer_bg','#E6E6E6');\\\" class='filebtn closebtn'>Default</button> -->\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<hr [hidden]=\\\"i % 2 === 1\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</dd>\\r\\n\\t\\t\\t\\t\\t\\t\\t</dl>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t</tab>\\r\\n\\t\\t\\t\\t\\t<tab tabTitle=\\\"Light & Shadow\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"mat-elevation-z1\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<dl>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<dd>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"label\\\">Ambient Light</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"onoffswitch\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"checkbox\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tname=\\\"onoffswitch\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tclass=\\\"onoffswitch-checkbox\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tid=\\\"AmbientOnOff\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t[checked]='settings.ambient_light.show'\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t(change)=\\\"settingOnChange('ambient_light.show')\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label class=\\\"onoffswitch-label\\\" for=\\\"AmbientOnOff\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"onoffswitch-inner\\\"></span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"onoffswitch-switch\\\"></span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</dd>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<dd class='colors'>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"label\\\">Color</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t[(colorPicker)]=\\\"settings.ambient_light.color\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t[style.background]=\\\"settings.ambient_light.color\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t[value]=\\\"settings.ambient_light.color\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t[class.light] = \\\"checkColor(settings.ambient_light.color)\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t/>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<!-- <button (click)=\\\"resetDefault('ambient_light.color','#FFFFFF');\\\" class='filebtn closebtn'>Default</button> -->\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</dd>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<dd>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"label\\\">Intensity</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"slidecontainer light\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"range\\\" min=\\\"0\\\" max=\\\"1\\\" step=\\\"0.01\\\" [value]=\\\"settings.ambient_light.intensity\\\" class=\\\"slider\\\" (input)=\\\"settingOnChange('ambient_light.intensity', $event.target.value)\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" [value]=\\\"settings.ambient_light.intensity\\\" disabled>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</dd>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<dd><hr></dd>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<dd>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"label\\\">Hemisphere Light</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"onoffswitch\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"checkbox\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tname=\\\"onoffswitch\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tclass=\\\"onoffswitch-checkbox\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tid=\\\"HemisphereOnOff\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t[checked]='settings.hemisphere_light.show'\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t(change)=\\\"settingOnChange('hemisphere_light.show')\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label class=\\\"onoffswitch-label\\\" for=\\\"HemisphereOnOff\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"onoffswitch-inner\\\"></span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"onoffswitch-switch\\\"></span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"label\\\" style=\\\"margin-left:90px\\\">Helper</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"onoffswitch\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"checkbox\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tname=\\\"onoffswitch\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tclass=\\\"onoffswitch-checkbox\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tid=\\\"HemisphereLightHelperOnOff\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t[checked]='settings.hemisphere_light.helper'\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t(change)=\\\"settingOnChange('hemisphere_light.helper')\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label class=\\\"onoffswitch-label\\\" for=\\\"HemisphereLightHelperOnOff\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"onoffswitch-inner\\\"></span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"onoffswitch-switch\\\"></span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</dd>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<dd class='colors'>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"label\\\">Sky Color</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t[(colorPicker)]=\\\"settings.hemisphere_light.skyColor\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t[style.background]=\\\"settings.hemisphere_light.skyColor\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t[value]=\\\"settings.hemisphere_light.skyColor\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t[class.light] = \\\"checkColor(settings.hemisphere_light.skyColor)\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t/>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<!-- <button (click)=\\\"resetDefault('hemisphere_light.skyColor','#FFFFFF');\\\" class='filebtn closebtn'>Default</button> -->\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</dd>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<dd class='colors'>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"label\\\">Ground Color</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t[(colorPicker)]=\\\"settings.hemisphere_light.groundColor\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t[style.background]=\\\"settings.hemisphere_light.groundColor\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t[value]=\\\"settings.hemisphere_light.groundColor\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t[class.light] = \\\"checkColor(settings.hemisphere_light.groundColor)\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t/>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<!-- <button (click)=\\\"resetDefault('hemisphere_light.groundColor','#FFFFFF');\\\" class='filebtn closebtn'>Default</button> -->\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</dd>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<dd>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"label\\\">Intensity</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"slidecontainer light\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"range\\\" min=\\\"0\\\" max=\\\"1\\\" step=\\\"0.01\\\" [value]=\\\"settings.hemisphere_light.intensity\\\" class=\\\"slider\\\" (input)=\\\"settingOnChange('hemisphere_light.intensity', $event.target.value)\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" [value]=\\\"settings.hemisphere_light.intensity\\\" disabled>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</dd>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<dd><hr></dd>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<dd>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"label\\\">Directional Light</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"onoffswitch\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"checkbox\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tname=\\\"onoffswitch\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tclass=\\\"onoffswitch-checkbox\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tid=\\\"DirectionalOnOff\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t[checked]='settings.directional_light.show'\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t(change)=\\\"settingOnChange('directional_light.show')\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label class=\\\"onoffswitch-label\\\" for=\\\"DirectionalOnOff\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"onoffswitch-inner\\\"></span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"onoffswitch-switch\\\"></span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"label\\\" style=\\\"margin-left:90px\\\">Helper</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"onoffswitch\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"checkbox\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tname=\\\"onoffswitch\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tclass=\\\"onoffswitch-checkbox\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tid=\\\"DaylightHelperOnOff\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t[checked]='settings.directional_light.helper'\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t(change)=\\\"settingOnChange('directional_light.helper')\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label class=\\\"onoffswitch-label\\\" for=\\\"DaylightHelperOnOff\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"onoffswitch-inner\\\"></span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"onoffswitch-switch\\\"></span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</dd>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<dd class='colors'>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"label\\\">Color</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t[(colorPicker)]=\\\"settings.directional_light.color\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t[style.background]=\\\"settings.directional_light.color\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t[value]=\\\"settings.directional_light.color\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t[class.light] = \\\"checkColor(settings.directional_light.color)\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t/>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<!-- <button (click)=\\\"resetDefault('directional_light.color','#FFFFFF');\\\" class='filebtn closebtn'>Default</button> -->\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</dd>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<dd>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"label\\\">Intensity</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"slidecontainer light\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"range\\\" min=\\\"0\\\" max=\\\"1\\\" step=\\\"0.01\\\" [value]=\\\"settings.directional_light.intensity\\\" class=\\\"slider\\\" (input)=\\\"settingOnChange('directional_light.intensity', $event.target.value)\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" [value]=\\\"settings.directional_light.intensity\\\" disabled>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</dd>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<dd>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"label\\\">Shadow</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"onoffswitch\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"checkbox\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tname=\\\"onoffswitch\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tclass=\\\"onoffswitch-checkbox\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tid=\\\"DirectionalShadowOnOff\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t[checked]='settings.directional_light.shadow'\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t(change)=\\\"settingOnChange('directional_light.shadow')\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label class=\\\"onoffswitch-label\\\" for=\\\"DirectionalShadowOnOff\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"onoffswitch-inner\\\"></span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"onoffswitch-switch\\\"></span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</dd>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<dd>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"label\\\">Shadow Size</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"slidecontainer light\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"range\\\" min=\\\"1\\\" max=\\\"20\\\" step=\\\"1\\\" [value]=\\\"settings.directional_light.shadowSize\\\" class=\\\"slider\\\" (input)=\\\"settingOnChange('directional_light.shadowSize', $event.target.value)\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" [value]=\\\"settings.directional_light.shadowSize\\\" disabled>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</dd>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<dd>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"label\\\">Azimuth</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"slidecontainer light\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"range\\\" min=\\\"0\\\" max=\\\"360\\\" step=\\\"1\\\" [value]=\\\"settings.directional_light.azimuth\\\" class=\\\"slider\\\" (input)=\\\"settingOnChange('directional_light.azimuth', $event.target.value)\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"number\\\" disabled [value]=\\\"settings.directional_light.azimuth\\\" class=\\\"number\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</dd>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<dd>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"label\\\">Altitude</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"slidecontainer light\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"range\\\" min=\\\"0\\\" max=\\\"180\\\" step=\\\"1\\\" [value]=\\\"settings.directional_light.altitude\\\" class=\\\"slider\\\" (input)=\\\"settingOnChange('directional_light.altitude', $event.target.value)\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"number\\\" disabled [value]=\\\"settings.directional_light.altitude\\\" class=\\\"number\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</dd>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<dd>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"label\\\">Distance</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"slidecontainer light\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"range\\\" min=\\\"1000\\\" max=\\\"100000\\\" step=\\\"1000\\\" [value]=\\\"settings.directional_light.distance\\\" class=\\\"slider\\\" (input)=\\\"settingOnChange('directional_light.distance', $event.target.value)\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" [value]=\\\"settings.directional_light.distance\\\" disabled>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</dd>\\r\\n\\t\\t\\t\\t\\t\\t\\t</dl>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t</tab>\\r\\n\\t\\t\\t\\t\\t<tab tabTitle=\\\"Environment\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"mat-elevation-z1\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<dl>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<dd>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"label\\\">Ground</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"onoffswitch\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"checkbox\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tname=\\\"onoffswitch\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tclass=\\\"onoffswitch-checkbox\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tid=\\\"GroundOnOff\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t[checked]='settings.ground.show'\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t(change)=\\\"settingOnChange('ground.show')\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label class=\\\"onoffswitch-label\\\" for=\\\"GroundOnOff\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"onoffswitch-inner\\\"></span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"onoffswitch-switch\\\"></span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</dd>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<dd>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"label\\\">Width</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"slidecontainer light\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"range\\\" min=\\\"0\\\" max=\\\"100000\\\" step=\\\"100\\\" [value]=\\\"settings.ground.width\\\" class=\\\"slider\\\" (input)=\\\"settingOnChange('ground.width', $event.target.value)\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"number\\\" [value]=\\\"settings.ground.width\\\" min=\\\"0\\\" max=\\\"100000\\\" class=\\\"number\\\" (input)=\\\"settingOnChange('ground.width', $event.target.value)\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</dd>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<dd>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"label\\\">Length</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"slidecontainer light\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"range\\\" min=\\\"0\\\" max=\\\"100000\\\" step=\\\"100\\\" [value]=\\\"settings.ground.length\\\" class=\\\"slider\\\" (input)=\\\"settingOnChange('ground.length', $event.target.value)\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"number\\\" [value]=\\\"settings.ground.length\\\" min=\\\"0\\\" max=\\\"100000\\\" class=\\\"number\\\" (input)=\\\"settingOnChange('ground.length', $event.target.value)\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</dd>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<dd>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"label\\\">Height</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"slidecontainer light\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"range\\\" min=\\\"-10\\\" max=\\\"10\\\" step=\\\"0.1\\\" [value]=\\\"settings.ground.height\\\" class=\\\"slider\\\" (input)=\\\"settingOnChange('ground.height', $event.target.value)\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"number\\\" [value]=\\\"settings.ground.height\\\" min=\\\"-10\\\" max=\\\"10\\\" class=\\\"number\\\" (input)=\\\"settingOnChange('ground.height', $event.target.value)\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</dd>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<dd class='colors'>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"label\\\">Color</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t[(colorPicker)]=\\\"settings.ground.color\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t[style.background]=\\\"settings.ground.color\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t[value]=\\\"settings.ground.color\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t[class.light] = \\\"checkColor(settings.ground.color)\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t/>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<!-- <button (click)=\\\"resetDefault('ground.color','#FFFFFF');\\\" class='filebtn closebtn'>Default</button> -->\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</dd>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<dd>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"label\\\">Shininess</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"slidecontainer light\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"range\\\" min=\\\"0\\\" max=\\\"100\\\" step=\\\"1\\\" [value]=\\\"settings.ground.shininess\\\" class=\\\"slider\\\" (input)=\\\"settingOnChange('ground.shininess', $event.target.value)\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"number\\\" min=\\\"0\\\" max=\\\"100\\\" [value]=\\\"settings.ground.shininess\\\" class=\\\"number\\\" (input)=\\\"settingOnChange('ground.shininess', $event.target.value)\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</dd>\\r\\n\\t\\t\\t\\t\\t\\t\\t</dl>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t</tab>\\r\\n\\t\\t\\t\\t</tabs>\\r\\n\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t<button (click)=\\\"closeModal('settings_modal', true);\\\" class=\\\"filebtn setting save\\\">Save</button>\\r\\n\\t\\t\\t\\t<button (click)=\\\"closeModal('settings_modal');\\\" class='filebtn closebtn setting'>Close</button>\\r\\n\\t\\t\\t\\t<button (click)=\\\"resetToDefault();\\\" class='filebtn closebtn setting' style=\\\"float: right;\\\">Default</button>\\r\\n\\t\\t\\t</modal-window>\\r\\n\\t\\t</as-split-area>\\r\\n\\t</as-split>\\r\\n</div>\\r\\n\"","module.exports = \"#gi-viewer-container {\\n  width: 100%;\\n  height: 100%;\\n  overflow: hidden; }\\n\\n.mat-tab-group {\\n  margin-bottom: 0px; }\\n\\nas-split-area {\\n  position: relative;\\n  overflow: hidden auto !important; }\\n\\n#settings_button {\\n  outline: none;\\n  width: 40px;\\n  height: 30px;\\n  font-size: 15px;\\n  position: absolute;\\n  top: 0px;\\n  right: 0px;\\n  text-align: center;\\n  color: #808080;\\n  background-color: transparent;\\n  border: 0;\\n  cursor: pointer; }\\n\\n#settings_button:hover {\\n    color: #00006d; }\\n\\n#attrib {\\n  overflow: hidden !important; }\\n\\n#attrib attribute {\\n    height: calc(100% - 10px);\\n    display: flex;\\n    flex-flow: column nowrap;\\n    justify-content: space-between; }\\n\\nmodal-window {\\n  display: none; }\\n\\nmodal-window h1 {\\n    font-size: 14px;\\n    font-weight: 700;\\n    line-height: 35px; }\\n\\nmodal-window dl {\\n    margin: 20px 0;\\n    padding: 0;\\n    background-color: transparent; }\\n\\nmodal-window dl dd {\\n      list-style: none;\\n      padding: 8px 0;\\n      margin-left: 20px;\\n      margin-right: 20px;\\n      background-color: inherit;\\n      min-height: 12px;\\n      box-sizing: content-box;\\n      color: #373737;\\n      font-size: 12px;\\n      font-style: normal; }\\n\\nmodal-window dl dd .label {\\n        float: left;\\n        line-height: 15px;\\n        width: 120px; }\\n\\nmodal-window dl dd .label + div {\\n        float: left; }\\n\\nmodal-window dl dd .label, modal-window dl dd input {\\n        color: #373737;\\n        font-size: 12px;\\n        font-style: normal; }\\n\\nmodal-window dl dd .label:hover, modal-window dl dd input:hover {\\n          background-color: inherit; }\\n\\nmodal-window dl dd.colors hr {\\n        margin: 20px 0px 0px; }\\n\\nmodal-window dl dd.colors .label {\\n        line-height: 20px; }\\n\\nmodal-window dl dd.colors input {\\n        padding-left: 5px;\\n        margin-left: 0px !important;\\n        border: 1px solid #E6E6E6;\\n        width: 120px;\\n        vertical-align: top;\\n        text-transform: uppercase; }\\n\\nmodal-window dl dd.colors input.light {\\n          color: #ffffff !important; }\\n\\nmodal-window .save {\\n    cursor: pointer;\\n    background: #00006d;\\n    color: #ffffff;\\n    height: 20px; }\\n\\nmodal-window .closebtn {\\n    cursor: pointer;\\n    background: white;\\n    border: 1px solid #CCCCCC;\\n    box-sizing: border-box;\\n    margin-left: 10px;\\n    height: 20px; }\\n\\nbody.modal-open {\\n  overflow: hidden; }\\n\\n#settings_modal {\\n  /* The slider itself */\\n  /* Mouse-over effects */\\n  /* The slider handle (use -webkit- (Chrome, Opera, Safari, Edge) and -moz- (Firefox) to override default look) */ }\\n\\n#settings_modal .filebtn.setting {\\n    margin-top: 20px; }\\n\\n#settings_modal /deep/ .modal-window .modal-body {\\n    background: #fafafb; }\\n\\n#settings_modal .onoffswitch {\\n    position: relative;\\n    width: 30px;\\n    height: 15px;\\n    box-sizing: border-box;\\n    vertical-align: middle;\\n    -webkit-user-select: none;\\n    -moz-user-select: none;\\n    -ms-user-select: none; }\\n\\n#settings_modal .onoffswitch-checkbox {\\n    display: none; }\\n\\n#settings_modal .onoffswitch-label {\\n    display: block;\\n    overflow: hidden;\\n    height: inherit;\\n    background-color: #CCCCCC;\\n    cursor: pointer; }\\n\\n#settings_modal .onoffswitch-switch {\\n    position: absolute;\\n    top: 1px;\\n    left: 1px;\\n    width: 13px;\\n    height: 13px;\\n    background: #E6E6E6; }\\n\\n#settings_modal .onoffswitch-checkbox:hover:not(:checked) + .onoffswitch-label {\\n    background-color: rgba(0, 0, 109, 0.4); }\\n\\n#settings_modal .onoffswitch-checkbox:hover:not(:checked) + .onoffswitch-label .onoffswitch-switch {\\n      box-shadow: 2px 0px 0px 0px; }\\n\\n#settings_modal .onoffswitch-checkbox:disabled + .onoffswitch-label {\\n    background-color: #CCCCCC !important; }\\n\\n#settings_modal .onoffswitch-checkbox:disabled + .onoffswitch-label .onoffswitch-switch {\\n      box-shadow: none !important; }\\n\\n#settings_modal .onoffswitch-checkbox:checked + .onoffswitch-label {\\n    background-color: #00006d; }\\n\\n#settings_modal .onoffswitch-checkbox:checked + .onoffswitch-label .onoffswitch-switch {\\n      right: 0px;\\n      left: calc(100% - 2px);\\n      -webkit-transform: translateX(-100%);\\n              transform: translateX(-100%); }\\n\\n#settings_modal .onoffswitch-checkbox:disabled:checked + .onoffswitch-label .onoffswitch-inner,\\n  #settings_modal .onoffswitch-checkbox:disabled:checked + .onoffswitch-label .onoffswitch-switch {\\n    cursor: help; }\\n\\n#settings_modal .slidecontainer {\\n    width: 100%;\\n    /* Width of the outside container */\\n    height: 15px; }\\n\\n#settings_modal .slidecontainer:hover {\\n      background-color: transparent; }\\n\\n#settings_modal .slidecontainer.light {\\n      width: calc(100% - 120px); }\\n\\n#settings_modal .slidecontainer.light .slider {\\n        margin-left: 0px !important;\\n        width: calc(100% - 80px); }\\n\\n#settings_modal .slidecontainer.light .slider + input[type='text'] {\\n        margin-left: 15px !important; }\\n\\n#settings_modal .slider {\\n    -webkit-appearance: none;\\n    /* Override default CSS styles */\\n    -moz-appearance: none;\\n         appearance: none;\\n    width: calc(100% - 230px);\\n    max-width: 500px;\\n    height: 15px;\\n    /* Specified height */\\n    background: whitesmoke;\\n    /* Grey background */\\n    box-sizing: border-box;\\n    border: 2px solid #E6E6E6;\\n    outline: none;\\n    /* Remove outline */\\n    opacity: 0.7;\\n    /* Set transparency (for mouse-over effects on hover) */\\n    /* 0.2 seconds transition on hover */\\n    transition: opacity .2s;\\n    margin: 0;\\n    margin-left: 10px !important; }\\n\\n#settings_modal .slider:hover {\\n    opacity: 1;\\n    /* Fully shown on mouse-over */ }\\n\\n#settings_modal .slider::-webkit-slider-thumb {\\n    -webkit-appearance: none;\\n    appearance: none;\\n    width: 5px;\\n    height: 15px;\\n    background: #CCCCCC;\\n    border: 1px solid #808080;\\n    cursor: pointer; }\\n\\n#settings_modal .slider::-webkit-slider-thumb:hover, #settings_modal .slider::-webkit-slider-thumb:active {\\n      background: #00006d; }\\n\\n#settings_modal .slider::-moz-range-thumb {\\n    width: 5px;\\n    height: 15px;\\n    background: #CCCCCC;\\n    cursor: pointer; }\\n\\n#settings_modal .slider:disabled::-webkit-slider-thumb {\\n    background: white; }\\n\\n#settings_modal .slider:disabled::-moz-range-thumb {\\n    background: white; }\\n\\n#settings_modal .slider:disabled {\\n    cursor: help; }\\n\\n#settings_modal input + input {\\n    vertical-align: top;\\n    border: none;\\n    line-height: 20px;\\n    background: transparent;\\n    width: 60px;\\n    margin-left: 10px !important;\\n    height: 14px; }\\n\\n#settings_modal .number {\\n    width: 100px;\\n    padding-left: 5px;\\n    border: 1px solid #dddddd; }\\n\\n#settings_modal .light-shadow {\\n    width: 120px;\\n    float: left; }\\n\\n/deep/ #settingsTab {\\n  height: 100%;\\n  width: 100%;\\n  overflow-x: scroll; }\\n\\n/deep/ #settingsTab ul {\\n    background-color: transparent;\\n    margin: 0;\\n    padding-left: 0px;\\n    white-space: nowrap;\\n    width: 100%;\\n    min-width: -webkit-fit-content;\\n    min-width: -moz-fit-content;\\n    min-width: fit-content;\\n    display: inline-flex; }\\n\\n/deep/ #settingsTab ul li {\\n      list-style: none;\\n      float: left;\\n      min-width: 75px;\\n      color: #808080;\\n      overflow: visible;\\n      cursor: pointer;\\n      position: relative;\\n      height: inherit;\\n      padding: 0px; }\\n\\n/deep/ #settingsTab ul li span {\\n        font-family: sans-serif;\\n        margin-right: 2px;\\n        font-weight: 550;\\n        font-size: 12px;\\n        line-height: 15px;\\n        border: 1px solid transparent;\\n        position: relative;\\n        display: block;\\n        padding: 2px 7px;\\n        text-align: center;\\n        width: inherit;\\n        box-sizing: border-box;\\n        width: 100%;\\n        margin-top: -1px;\\n        height: 21px; }\\n\\n/deep/ #settingsTab ul li:hover {\\n        background-color: transparent; }\\n\\n/deep/ #settingsTab ul li:hover span {\\n          color: #00006d;\\n          background-color: transparent; }\\n\\n/deep/ #settingsTab ul li.active {\\n        background-color: transparent; }\\n\\n/deep/ #settingsTab ul li.active span {\\n          color: #00006d;\\n          cursor: default;\\n          background-color: #fafafb;\\n          border: 1px solid #B3B3B3;\\n          border-bottom: 0px; }\\n\\n/deep/ #settingsTab .pane {\\n    margin-top: -1px;\\n    border: 1px solid #B3B3B3; }\\n\\n/deep/ #settingsTab .pane .mat-elevation-z1 {\\n      display: flex;\\n      flex-flow: column nowrap;\\n      justify-content: space-between;\\n      box-shadow: none; }\\n\\n/deep/ #settingsTab hr {\\n    border: 1px solid #dfdfdf;\\n    background: #dfdfdf; }\\n\\n/*# sourceMappingURL=data:application/json;base64, */\"","import { GIModel } from '@libs/geo-info/GIModel';\r\nimport { isDevMode } from '@angular/core';\r\nimport { DefaultSettings, SettingsColorMap, Locale } from './gi-viewer.settings';\r\n// import @angular stuff\r\nimport { Component, Input, OnInit } from '@angular/core';\r\n// import app services\r\nimport { DataService } from './data/data.service';\r\nimport { ModalService } from './html/modal-window.service';\r\nimport { ColorPickerService } from 'ngx-color-picker';\r\nimport { EEntType } from '@assets/libs/geo-info/common';\r\n// import others\r\n// import { ThreejsViewerComponent } from './threejs/threejs-viewer.component';\r\n\r\n/**\r\n * GIViewerComponent\r\n * This component is used in /app/model-viewers/model-viewers-container.component.html\r\n */\r\n@Component({\r\n    selector: 'gi-viewer',\r\n    templateUrl: './gi-viewer.component.html',\r\n    styleUrls: ['./gi-viewer.component.scss'],\r\n})\r\nexport class GIViewerComponent implements OnInit {\r\n    dataservice: DataService;\r\n    // model data passed to the viewer\r\n    @Input() data: GIModel;\r\n    modelData: GIModel;\r\n\r\n    settings: Settings = DefaultSettings;\r\n\r\n    setting_colors = SettingsColorMap;\r\n\r\n    normalsEnabled = false;\r\n\r\n    columns_control;\r\n\r\n    public clickedEvent: Event;\r\n    public attrTableSelect: Event;\r\n    public attrTableReset: number;\r\n    /**\r\n     * constructor\r\n     * @param dataService\r\n     */\r\n    constructor(private dataService: DataService, private modalService: ModalService, private cpService: ColorPickerService) {\r\n        const previous_settings = JSON.parse(localStorage.getItem('mpm_settings'));\r\n        if (previous_settings === null ||\r\n            this.hasDiffProps(previous_settings, this.settings) ||\r\n            this.settings.version !== previous_settings.version ||\r\n            isDevMode()) {\r\n            localStorage.setItem('mpm_settings', JSON.stringify(this.settings));\r\n        }\r\n        // if (localStorage.getItem('mpm_attrib_columns') !== null) {\r\n        //     this.columns_control = JSON.parse(localStorage.getItem('mpm_attrib_columns'));\r\n        // }\r\n    }\r\n\r\n    /**\r\n     * Check whether the current settings has same structure with\r\n     * the previous settings saved in local storage. If not, replace the local storage.\r\n     * @param obj1\r\n     * @param obj2\r\n     */\r\n    hasDiffProps(obj1, obj2) {\r\n        return !Object.keys(obj2).every(e => Object.keys(obj1).includes(e));\r\n    }\r\n\r\n    /**\r\n     * ngOnInit\r\n     */\r\n    ngOnInit() {\r\n        this.getSettings();\r\n        if (this.dataService.getThreejsScene() === undefined) {\r\n            this.dataService.setThreejsScene(this.settings);\r\n        }\r\n        localStorage.setItem('mpm_default_settings', JSON.stringify(DefaultSettings));\r\n    }\r\n\r\n    private getSettings() {\r\n        if (localStorage.getItem('mpm_settings') !== null) {\r\n            this.settings = JSON.parse(localStorage.getItem('mpm_settings'));\r\n        }\r\n    }\r\n\r\n    childEventClicked(event: Event) {\r\n        this.clickedEvent = event;\r\n    }\r\n\r\n    attribTableSelected(event: Event) {\r\n        this.attrTableSelect = event;\r\n    }\r\n\r\n    resetTable() {\r\n        this.attrTableReset = Date.now();\r\n    }\r\n\r\n    openModal(id: string) {\r\n        this.getSettings();\r\n        if (document.body.className === 'modal-open') {\r\n            this.modalService.close(id);\r\n        } else {\r\n            this.modalService.open(id);\r\n            const scene = this.dataService.getThreejsScene();\r\n            if (scene._threejs_nums.reduce((a, b) => a + b, 0) !== 0) {\r\n                scene.vnh !== undefined ? this.normalsEnabled = true : this.normalsEnabled = false;\r\n            }\r\n        }\r\n    }\r\n\r\n    closeModal(id: string, save = false) {\r\n        this.modalService.close(id);\r\n        if (save) {\r\n            this.dataService.getThreejsScene().settings = this.settings;\r\n            localStorage.setItem('mpm_settings', JSON.stringify(this.settings));\r\n            document.getElementById('executeButton').click();\r\n        }\r\n    }\r\n\r\n    settingOnChange(setting: string, value?: number) {\r\n        const scene = this.dataService.getThreejsScene();\r\n        switch (setting) {\r\n            case 'normals.show':\r\n                this.settings.normals.show = !this.settings.normals.show;\r\n                scene.vnh.visible = this.settings.normals.show;\r\n                break;\r\n            case 'normals.size':\r\n                this.settings.normals.size = Number(value);\r\n                break;\r\n            case 'axes.show':\r\n                this.settings.axes.show = !this.settings.axes.show;\r\n                scene.axesHelper.visible = this.settings.axes.show;\r\n                break;\r\n            case 'axes.size':\r\n                this.settings.axes.size = Number(value);\r\n                scene._addAxes(Number(value));\r\n                break;\r\n            case 'grid.show':\r\n                this.settings.grid.show = !this.settings.grid.show;\r\n                scene.grid.visible = this.settings.grid.show;\r\n                break;\r\n            case 'grid.size':\r\n                this.settings.grid.size = Number(value);\r\n                scene._addGrid(this.settings.grid.size);\r\n                break;\r\n            case 'positions.show':\r\n                this.settings.positions.show = !this.settings.positions.show;\r\n                scene._positions.map(p => p.visible = this.settings.positions.show);\r\n                break;\r\n            case 'positions.size':\r\n                this.settings.positions.size = Number(value);\r\n                break;\r\n            case 'tjs_summary.show':\r\n                this.settings.gi_summary.show = false;\r\n                this.settings.tjs_summary.show = !this.settings.tjs_summary.show;\r\n                break;\r\n            case 'gi_summary.show':\r\n                this.settings.tjs_summary.show = false;\r\n                this.settings.gi_summary.show = !this.settings.gi_summary.show;\r\n                let colls = 0, pgons = 0, plines = 0, points = 0, faces = 0, wires = 0, edges = 0, vertices = 0, positions = 0;\r\n                if (scene._model) {\r\n                    colls = scene._model.geom.query.numEnts(EEntType.COLL, false);\r\n                    pgons = scene._model.geom.query.numEnts(EEntType.PGON, false);\r\n                    plines = scene._model.geom.query.numEnts(EEntType.PLINE, false);\r\n                    points = scene._model.geom.query.numEnts(EEntType.POINT, false);\r\n                    faces = scene._model.geom.query.numEnts(EEntType.FACE, false);\r\n                    wires = scene._model.geom.query.numEnts(EEntType.WIRE, false);\r\n                    edges = scene._model.geom.query.numEnts(EEntType.EDGE, false);\r\n                    vertices = scene._model.geom.query.numEnts(EEntType.VERT, false);\r\n                    positions = scene._model.geom.query.numEnts(EEntType.POSI, false);\r\n                }\r\n                const gi_summary = [{title: 'Collections', val: colls},\r\n                {title: 'Polygons', val: pgons},\r\n                {title: 'Polylines', val: plines},\r\n                {title: 'Points', val: points},\r\n                {title: 'Faces', val: faces},\r\n                {title: 'Wires', val: wires},\r\n                {title: 'Edges', val: edges},\r\n                {title: 'Vertices', val: vertices},\r\n                {title: 'Positions', val: positions}];\r\n                localStorage.setItem('gi_summary', JSON.stringify(gi_summary));\r\n                break;\r\n            case 'wireframe.show':\r\n                this.wireframeToggle();\r\n                break;\r\n            case 'ambient_light.show': // Ambient Light\r\n                this.settings.ambient_light.show = !this.settings.ambient_light.show;\r\n                if (scene.ambient_light) {\r\n                    scene.ambient_light.visible = this.settings.ambient_light.show;\r\n                }\r\n                break;\r\n            case 'ambient_light.intensity':\r\n                this.settings.ambient_light.intensity = Number(value);\r\n                scene.ambient_light.intensity = this.settings.ambient_light.intensity;\r\n                break;\r\n            case 'hemisphere_light.show': // Hemisphere Light\r\n                this.settings.hemisphere_light.show = !this.settings.hemisphere_light.show;\r\n                if (scene.hemisphere_light) {\r\n                    scene.hemisphere_light.visible = this.settings.hemisphere_light.show;\r\n                }\r\n                break;\r\n            case 'hemisphere_light.helper':\r\n                this.settings.hemisphere_light.helper = !this.settings.hemisphere_light.helper;\r\n                break;\r\n            case 'hemisphere_light.intensity':\r\n                this.settings.hemisphere_light.intensity = Number(value);\r\n                scene.hemisphere_light.intensity = this.settings.hemisphere_light.intensity;\r\n                break;\r\n            case 'directional_light.show': // Directional Light\r\n                this.settings.directional_light.show = !this.settings.directional_light.show;\r\n                if (scene.directional_light) {\r\n                    scene.directional_light.visible = this.settings.directional_light.show;\r\n                }\r\n                if (this.settings.directional_light.show) {\r\n                    this.settings.ambient_light.intensity = 0.3;\r\n                    this.settings.hemisphere_light.intensity = 0.3;\r\n                } else {\r\n                    this.settings.ambient_light.intensity = 0.5;\r\n                    this.settings.hemisphere_light.intensity = 0.5;\r\n                }\r\n                break;\r\n            case 'directional_light.helper':\r\n                this.settings.directional_light.helper = !this.settings.directional_light.helper;\r\n                break;\r\n            case 'directional_light.intensity':\r\n                this.settings.directional_light.intensity = Number(value);\r\n                scene.directional_light.intensity = this.settings.directional_light.intensity;\r\n                break;\r\n            case 'directional_light.shadow':\r\n                this.settings.directional_light.shadow = !this.settings.directional_light.shadow;\r\n                break;\r\n            case 'directional_light.shadowSize':\r\n                this.settings.directional_light.shadowSize = Number(value);\r\n                setTimeout(() => {\r\n                    scene.DLMapSize(this.settings.directional_light.shadowSize);\r\n                }, 10);\r\n                break;\r\n            case 'directional_light.azimuth':\r\n                this.settings.directional_light.azimuth = Number(value);\r\n                scene.directionalLightMove(this.settings.directional_light.azimuth);\r\n                break;\r\n            case 'directional_light.altitude':\r\n                this.settings.directional_light.altitude = Number(value);\r\n                scene.directionalLightMove(null, this.settings.directional_light.altitude);\r\n                break;\r\n            case 'directional_light.distance':\r\n                this.settings.directional_light.distance = Number(value);\r\n                scene.DLDistance(this.settings.directional_light.distance);\r\n                break;\r\n            case 'ground.show':\r\n                this.settings.ground.show = !this.settings.ground.show;\r\n                // scene.directional_light.visible = this.settings.directional_light.show;\r\n                break;\r\n            case 'ground.width':\r\n                this.settings.ground.width = Number(value);\r\n                break;\r\n            case 'ground.length':\r\n                this.settings.ground.length = Number(value);\r\n                break;\r\n            case 'ground.height':\r\n                this.settings.ground.height = Number(value);\r\n                if (scene.groundObj) {\r\n                    scene.groundObj.position.setZ(this.settings.ground.height);\r\n                }\r\n                break;\r\n            case 'ground.shininess':\r\n                this.settings.ground.shininess = Number(value);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        scene._renderer.render(scene._scene, scene._camera);\r\n    }\r\n\r\n    // resetDefault(setting, value) {\r\n    //     const seg = setting.split('.');\r\n    //     this.settings[seg[0]][seg[1]] = value;\r\n    // }\r\n\r\n    resetToDefault() {\r\n        const default_settings = JSON.parse(localStorage.getItem('mpm_default_settings'));\r\n        this.settings = default_settings;\r\n    }\r\n\r\n    checkColor(color) {\r\n        const _color = this.cpService.hsvaToRgba(this.cpService.stringToHsva(color));\r\n        if ((_color.r + _color.g + _color.b) / _color.a < 1.5) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    wireframeToggle() {\r\n        const scene = this.dataService.getThreejsScene();\r\n        scene.sceneObjs.forEach(obj => {\r\n            if (obj.type === 'Mesh') {\r\n                this.settings.wireframe.show = !this.settings.wireframe.show;\r\n                // @ts-ignore\r\n                // obj.material.wireframe = this.settings.wireframe.show;\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\ninterface Settings {\r\n    normals: { show: boolean, size: number };\r\n    axes: { show: boolean, size: number };\r\n    grid: { show: boolean, size: number };\r\n    positions: { show: boolean, size: number };\r\n    tjs_summary: { show: boolean };\r\n    gi_summary: { show: boolean };\r\n    wireframe: { show: boolean };\r\n    colors: {\r\n        viewer_bg: string,\r\n        position: string,\r\n        position_s: string,\r\n        vertex_s: string,\r\n        face_f: string,\r\n        face_f_s: string,\r\n        face_b: string,\r\n        face_b_s: string\r\n    };\r\n    ambient_light: {\r\n        show: boolean,\r\n        color: string,\r\n        intensity: number\r\n    };\r\n    hemisphere_light: {\r\n        show: boolean,\r\n        helper: boolean,\r\n        skyColor: string,\r\n        groundColor: string,\r\n        intensity: number\r\n    };\r\n    directional_light: {\r\n        show: boolean,\r\n        helper: boolean,\r\n        color: string,\r\n        intensity: number,\r\n        shadow: boolean,\r\n        shadowSize: number,\r\n        azimuth: number,\r\n        altitude: number,\r\n        distance: number\r\n    };\r\n    ground: {\r\n        show: boolean,\r\n        width: number,\r\n        length: number,\r\n        height: number,\r\n        color: string,\r\n        shininess: number\r\n    };\r\n    version: string;\r\n}\r\n","import { AngularSplitModule } from 'angular-split';\r\nimport { NgxPaginationModule} from 'ngx-pagination';\r\n// import @angular stuff\r\nimport { NgModule, ModuleWithProviders } from '@angular/core';\r\nimport { MatSliderModule } from '@angular/material/slider';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { MatTooltipModule} from '@angular/material/tooltip';\r\nimport { MatIconModule} from '@angular/material';\r\nimport { MatExpansionModule} from '@angular/material/expansion';\r\nimport { ColorPickerModule } from 'ngx-color-picker';\r\n\r\nimport { AttributeModule } from './attribute/attribute.module';\r\n\r\n// import app components\r\nimport { GIViewerComponent } from './gi-viewer.component';\r\nimport { ThreejsViewerComponent } from './threejs/threejs-viewer.component';\r\nimport { AttributeComponent } from './attribute/attribute.component';\r\n\r\nimport { ATabComponent } from './attribute/tab.component';\r\nimport { ATabsComponent } from './attribute/tabs.component';\r\nimport { TabComponent } from './html/tab.component';\r\nimport { TabsComponent } from './html/tabs.component';\r\nimport { DropdownMenuComponent } from './html/dropdown-menu.component';\r\nimport { ModalWindowComponent } from './html/modal-window.component';\r\nimport { ModalService } from './html/modal-window.service';\r\nimport { ThreeJSViewerService } from './threejs/threejs-viewer.service';\r\n\r\n/**\r\n * GIViewer\r\n * A viewer for Geo-Info models.\r\n */\r\n@NgModule({\r\n    declarations: [\r\n        GIViewerComponent,\r\n        ThreejsViewerComponent,\r\n        AttributeComponent,\r\n        ATabComponent,\r\n        ATabsComponent,\r\n        TabComponent,\r\n        TabsComponent,\r\n        DropdownMenuComponent,\r\n        ModalWindowComponent\r\n    ],\r\n    exports: [\r\n        GIViewerComponent\r\n    ],\r\n    imports: [\r\n        CommonModule,\r\n        AngularSplitModule,\r\n        MatSliderModule,\r\n        MatIconModule,\r\n        NgxPaginationModule,\r\n        MatExpansionModule,\r\n        MatTooltipModule,\r\n        AttributeModule,\r\n        FormsModule,\r\n        ColorPickerModule\r\n    ],\r\n    providers: [\r\n        ModalService,\r\n        ThreeJSViewerService\r\n    ]\r\n})\r\nexport class GIViewerModule {\r\n     static forRoot(): ModuleWithProviders {\r\n        return {\r\n            ngModule: GIViewerModule\r\n        };\r\n    }\r\n}\r\n","import { VERSION } from '@env/version';\r\nexport const DefaultSettings = {\r\n    normals: { show: false, size: 5 },\r\n    axes: { show: true, size: 50 },\r\n    grid: { show: true, size: 500 },\r\n    positions: { show: true, size: 0.5 },\r\n    tjs_summary: { show: false },\r\n    gi_summary: { show: false },\r\n    wireframe: { show: false },\r\n    colors: {\r\n        viewer_bg: '#E6E6E6',\r\n        position: '#000000',\r\n        position_s: '#0033FF',\r\n        vertex_s: '#FFCC00',\r\n        face_f: '#FFFFFF',\r\n        face_f_s: '#4949BD',\r\n        face_b: '#DDDDDD',\r\n        face_b_s: '#00006D'\r\n    },\r\n    ambient_light: {\r\n        show: true,\r\n        color: '#FFFFFF',\r\n        intensity: 0.5\r\n    },\r\n    hemisphere_light: {\r\n        show: true,\r\n        helper: false,\r\n        skyColor: '#FFFFFF',\r\n        groundColor: '#FFFFFF',\r\n        intensity: 0.5\r\n    },\r\n    directional_light: {\r\n        show: false,\r\n        helper: false,\r\n        color: '#FFFFFF',\r\n        intensity: 1,\r\n        shadow: true,\r\n        shadowSize: 4,\r\n        azimuth: 90,\r\n        altitude: 45,\r\n        distance: 10000\r\n    },\r\n    ground: {\r\n        show: false,\r\n        width: 1000,\r\n        length: 1000,\r\n        height: -0.5,\r\n        color: '#FFFFFF',\r\n        shininess: 0\r\n    },\r\n    version: VERSION.version\r\n};\r\n\r\n\r\nexport const SettingsColorMap = [{\r\n    label: 'Viewer Background',\r\n    setting: 'viewer_bg',\r\n    default: '#E6E6E6'\r\n}, {\r\n    label: 'Position',\r\n    setting: 'position'\r\n}, {\r\n    label: 'Position Selected',\r\n    setting: 'position_s'\r\n}, {\r\n    label: 'Face Front',\r\n    setting: 'face_f'\r\n}, {\r\n    label: 'Face Front Selected',\r\n    setting: 'face_f_s'\r\n}, {\r\n    label: 'Face Back',\r\n    setting: 'face_b'\r\n}, {\r\n    label: 'Face Back Selected',\r\n    setting: 'face_b_s'\r\n}, {\r\n    label: 'Vertices Selected',\r\n    setting: 'vertex_s'\r\n}];\r\n\r\nexport const Locale = [{\r\n    name: 'Singapore',\r\n    zone: 'Asia/Singapore',\r\n    lat: '1.35',\r\n    long: '103.8'\r\n}];\r\n","export * from './gi-viewer.module';\r\n","module.exports = \"<div\\r\\n    [hidden]=\\\"!visible\\\"\\r\\n    [style.left.px]='position.x'\\r\\n    [style.top.px]='position.y'\\r\\n>\\r\\n    <ul>\\r\\n        <ol>Please choose:</ol>\\r\\n        <ol *ngFor=\\\"let item of items\\\" (click)=\\\"selectItem(item)\\\">{{item.label}}</ol>\\r\\n    </ul>\\r\\n</div>\\r\\n\"","module.exports = \"div {\\n  position: absolute; }\\n  div ul {\\n    padding: 0;\\n    border: 1px solid #eeeeee;\\n    box-shadow: 1px 1px 3px 0px #bbbbbb; }\\n  div ul ol {\\n      cursor: pointer;\\n      list-style: none;\\n      background: #ffffff;\\n      min-width: 20px;\\n      padding: 5px 10px; }\\n  div ul ol:hover {\\n        background: #eeeeee; }\\n  div ul:first-child {\\n      background: #f9f9f9; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kZWwtdmlld2Vycy9hbGwtdmlld2Vycy9naS12aWV3ZXIvaHRtbC9DOlxcRHJvcGJveFxcRmlsZXNcXFNvZnR3YXJlXFxHaXRIdWJcXGRlc2lnbi1hdXRvbWF0aW9uXFxtb2JpdXMtcGFyYW1ldHJpYy1tb2RlbGxlci9zcmNcXGFwcFxcbW9kZWwtdmlld2Vyc1xcYWxsLXZpZXdlcnNcXGdpLXZpZXdlclxcaHRtbFxcZHJvcGRvd24tbWVudS5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGtCQUFrQixFQUFBO0VBRHRCO0lBR1EsVUFBVTtJQUNWLHlCQUF5QjtJQUN6QixtQ0FBbUMsRUFBQTtFQUwzQztNQU9ZLGVBQWU7TUFDZixnQkFBZ0I7TUFDaEIsbUJBQW1CO01BQ25CLGVBQWU7TUFDZixpQkFBaUIsRUFBQTtFQVg3QjtRQWFnQixtQkFBbUIsRUFBQTtFQWJuQztNQWlCWSxtQkFBbUIsRUFBQSIsImZpbGUiOiJzcmMvYXBwL21vZGVsLXZpZXdlcnMvYWxsLXZpZXdlcnMvZ2ktdmlld2VyL2h0bWwvZHJvcGRvd24tbWVudS5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbImRpdntcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIHVse1xyXG4gICAgICAgIHBhZGRpbmc6IDA7XHJcbiAgICAgICAgYm9yZGVyOiAxcHggc29saWQgI2VlZWVlZTtcclxuICAgICAgICBib3gtc2hhZG93OiAxcHggMXB4IDNweCAwcHggI2JiYmJiYjtcclxuICAgICAgICBvbHtcclxuICAgICAgICAgICAgY3Vyc29yOiBwb2ludGVyO1xyXG4gICAgICAgICAgICBsaXN0LXN0eWxlOiBub25lO1xyXG4gICAgICAgICAgICBiYWNrZ3JvdW5kOiAjZmZmZmZmO1xyXG4gICAgICAgICAgICBtaW4td2lkdGg6IDIwcHg7XHJcbiAgICAgICAgICAgIHBhZGRpbmc6IDVweCAxMHB4O1xyXG4gICAgICAgICAgICAmOmhvdmVye1xyXG4gICAgICAgICAgICAgICAgYmFja2dyb3VuZDogI2VlZWVlZTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICAmOmZpcnN0LWNoaWxke1xyXG4gICAgICAgICAgICBiYWNrZ3JvdW5kOiAjZjlmOWY5O1xyXG4gICAgICAgIH1cclxuICAgIH1cclxufSJdfQ== */\"","import { Component, Output, EventEmitter } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'dropdown-menu',\r\n    styleUrls: ['./dropdown-menu.component.scss'],\r\n    templateUrl: './dropdown-menu.component.html'\r\n})\r\nexport class DropdownMenuComponent {\r\n    @Output() selected = new EventEmitter<number>();\r\n    items: { id: number, label: string }[];\r\n    position: {x: number, y: number};\r\n    visible: boolean;\r\n\r\n    setItems(items: number[], label: string) {\r\n        const dropdownMenu = [];\r\n        items.map(item => dropdownMenu.push({ id: item, label: `${label}${item}` }));\r\n        // console.log('dropdownMenu', dropdownMenu);\r\n        this.items = dropdownMenu;\r\n    }\r\n    selectItem(item: {id: number, label: string}) {\r\n        this.visible = false;\r\n        this.selected.emit(item.id);\r\n    }\r\n}\r\n","module.exports = \"<div class=\\\"modal-window\\\" id=\\\"modal-window\\\">\\r\\n    <div class=\\\"modal-body\\\">\\r\\n        <ng-content></ng-content>\\r\\n    </div>\\r\\n</div>\\r\\n<div class=\\\"modal-background\\\"></div>\"","module.exports = \"@charset \\\"UTF-8\\\";\\n.modal-window {\\n  max-width: 777px;\\n  position: absolute;\\n  top: 0;\\n  right: 0;\\n  bottom: 0;\\n  z-index: 1000;\\n  overflow: auto;\\n  -webkit-transition: transform 1s ease; }\\n.modal-window.open {\\n    -webkit-animation: slide 0.5s forwards;\\n    animation: slide 0.5s forwards; }\\n.modal-window     .modal-body {\\n    padding: 20px;\\n    background: #fff;\\n    margin: 0;\\n    min-height: calc(100% - 40px);\\n    position: relative; }\\n@-webkit-keyframes slide {\\n  100% {\\n    left: 0; } }\\n@keyframes slide {\\n  100% {\\n    left: 0; } }\\n.modal-background {\\n  position: fixed;\\n  top: 0;\\n  right: 0;\\n  bottom: 0;\\n  left: 0;\\n  background-color: transparent;\\n  opacity: 0.5;\\n  z-index: 900; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kZWwtdmlld2Vycy9hbGwtdmlld2Vycy9naS12aWV3ZXIvaHRtbC9tb2RhbC13aW5kb3cuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL21vZGVsLXZpZXdlcnMvYWxsLXZpZXdlcnMvZ2ktdmlld2VyL2h0bWwvQzpcXERyb3Bib3hcXEZpbGVzXFxTb2Z0d2FyZVxcR2l0SHViXFxkZXNpZ24tYXV0b21hdGlvblxcbW9iaXVzLXBhcmFtZXRyaWMtbW9kZWxsZXIvc3JjXFxhcHBcXG1vZGVsLXZpZXdlcnNcXGFsbC12aWV3ZXJzXFxnaS12aWV3ZXJcXGh0bWxcXG1vZGFsLXdpbmRvdy5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxnQkFBZ0I7QUNBaEI7RUFDSSxnQkFBZ0I7RUFDaEIsa0JBQWtCO0VBQ2xCLE1BQU07RUFDTixRQUFRO0VBQ1IsU0FBUztFQUVULGFBQWE7RUFDYixjQUFjO0VBQ2QscUNBQXFDLEVBQUE7QUFUekM7SUFXUSxzQ0FBc0M7SUFDdEMsOEJBQThCLEVBQUE7QUFadEM7SUFnQlEsYUFBYTtJQUNiLGdCQUFnQjtJQUNoQixTQUFTO0lBQ1QsNkJBQTZCO0lBSTdCLGtCQUFrQixFQUFBO0FBSzFCO0VBQ0k7SUFBTyxPQUFPLEVBQUEsRUFBQTtBQUdsQjtFQUNJO0lBQU8sT0FBTyxFQUFBLEVBQUE7QUFHbEI7RUFDSSxlQUFlO0VBQ2YsTUFBTTtFQUNOLFFBQVE7RUFDUixTQUFTO0VBQ1QsT0FBTztFQUNQLDZCQUE2QjtFQUM3QixZQUFZO0VBQ1osWUFBWSxFQUFBIiwiZmlsZSI6InNyYy9hcHAvbW9kZWwtdmlld2Vycy9hbGwtdmlld2Vycy9naS12aWV3ZXIvaHRtbC9tb2RhbC13aW5kb3cuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJAY2hhcnNldCBcIlVURi04XCI7XG4ubW9kYWwtd2luZG93IHtcbiAgbWF4LXdpZHRoOiA3NzdweDtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDA7XG4gIHJpZ2h0OiAwO1xuICBib3R0b206IDA7XG4gIHotaW5kZXg6IDEwMDA7XG4gIG92ZXJmbG93OiBhdXRvO1xuICAtd2Via2l0LXRyYW5zaXRpb246IHRyYW5zZm9ybSAxcyBlYXNlOyB9XG4gIC5tb2RhbC13aW5kb3cub3BlbiB7XG4gICAgLXdlYmtpdC1hbmltYXRpb246IHNsaWRlIDAuNXMgZm9yd2FyZHM7XG4gICAgYW5pbWF0aW9uOiBzbGlkZSAwLjVzIGZvcndhcmRzOyB9XG4gIC5tb2RhbC13aW5kb3cgwqDCoMKgwqAubW9kYWwtYm9keSB7XG4gICAgcGFkZGluZzogMjBweDtcbiAgICBiYWNrZ3JvdW5kOiAjZmZmO1xuICAgIG1hcmdpbjogMDtcbiAgICBtaW4taGVpZ2h0OiBjYWxjKDEwMCUgLSA0MHB4KTtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7IH1cblxuQC13ZWJraXQta2V5ZnJhbWVzIHNsaWRlIHtcbiAgMTAwJSB7XG4gICAgbGVmdDogMDsgfSB9XG5cbkBrZXlmcmFtZXMgc2xpZGUge1xuICAxMDAlIHtcbiAgICBsZWZ0OiAwOyB9IH1cblxuLm1vZGFsLWJhY2tncm91bmQge1xuICBwb3NpdGlvbjogZml4ZWQ7XG4gIHRvcDogMDtcbiAgcmlnaHQ6IDA7XG4gIGJvdHRvbTogMDtcbiAgbGVmdDogMDtcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gIG9wYWNpdHk6IDAuNTtcbiAgei1pbmRleDogOTAwOyB9XG4iLCIubW9kYWwtd2luZG93IHtcclxuICAgIG1heC13aWR0aDogNzc3cHg7XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICB0b3A6IDA7XHJcbiAgICByaWdodDogMDtcclxuICAgIGJvdHRvbTogMDtcclxuICAgIC8vIGxlZnQ6IDA7XHJcbiAgICB6LWluZGV4OiAxMDAwO1xyXG4gICAgb3ZlcmZsb3c6IGF1dG87XHJcbiAgICAtd2Via2l0LXRyYW5zaXRpb246IHRyYW5zZm9ybSAxcyBlYXNlO1xyXG4gICAgJi5vcGVue1xyXG4gICAgICAgIC13ZWJraXQtYW5pbWF0aW9uOiBzbGlkZSAwLjVzIGZvcndhcmRzO1xyXG4gICAgICAgIGFuaW1hdGlvbjogc2xpZGUgMC41cyBmb3J3YXJkcztcclxuICAgIH1cclxuXHJcbsKgwqDCoMKgLm1vZGFsLWJvZHkge1xyXG4gICAgICAgIHBhZGRpbmc6IDIwcHg7XHJcbiAgICAgICAgYmFja2dyb3VuZDogI2ZmZjtcclxuICAgICAgICBtYXJnaW46IDA7XHJcbiAgICAgICAgbWluLWhlaWdodDogY2FsYygxMDAlIC0gNDBweCk7XHJcbiAgICAgICAgLy8gd2lkdGg6IDUwJTtcclxuICAgICAgICAvLyBtYXJnaW4tbGVmdDogNTAlO1xyXG4gICAgICAgIC8vIGxlZnQ6IC0yNSU7XHJcbiAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgfVxyXG59XHJcblxyXG5cclxuQC13ZWJraXQta2V5ZnJhbWVzIHNsaWRlIHtcclxuICAgIDEwMCUgeyBsZWZ0OiAwOyB9XHJcbn1cclxuXHJcbkBrZXlmcmFtZXMgc2xpZGUge1xyXG4gICAgMTAwJSB7IGxlZnQ6IDA7IH1cclxufVxyXG5cclxuLm1vZGFsLWJhY2tncm91bmQge1xyXG4gICAgcG9zaXRpb246IGZpeGVkO1xyXG4gICAgdG9wOiAwO1xyXG4gICAgcmlnaHQ6IDA7XHJcbiAgICBib3R0b206IDA7XHJcbiAgICBsZWZ0OiAwO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XHJcbiAgICBvcGFjaXR5OiAwLjU7XHJcbiAgICB6LWluZGV4OiA5MDA7XHJcbn0iXX0= */\"","import { Component, Input, OnInit, OnDestroy, ElementRef, Output, EventEmitter } from '@angular/core';\r\nimport { ModalService } from './modal-window.service';\r\n\r\n@Component({\r\n    selector: 'modal-window',\r\n    styleUrls: ['./modal-window.component.scss'],\r\n    templateUrl: './modal-window.component.html'\r\n})\r\n\r\nexport class ModalWindowComponent implements OnInit, OnDestroy {\r\n    @Input() id: string;\r\n    private element: any;\r\n    private containerWidth: number;\r\n\r\n    constructor(private modalService: ModalService, private el: ElementRef) {\r\n        this.element = el.nativeElement;\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        const modal = this;\r\n\r\n        // ensure id attribute exists\r\n        if (!this.id) {\r\n            console.error('modal must have an id');\r\n            return;\r\n        }\r\n\r\n        const leftContent = document.getElementsByClassName('content__panel')[0];\r\n        this.containerWidth = leftContent.clientWidth;\r\n        const modalWindow = this.element.querySelector('.modal-window');\r\n        modalWindow.style.width = `${this.containerWidth + 11}px`;\r\n        modalWindow.style.left = `${-this.containerWidth - 11}px`;\r\n\r\n        // move element to bottom of page (just before </body>) so it can be displayed above everything else\r\n        document.body.appendChild(this.element);\r\n\r\n        // close modal on background click\r\n        this.element.addEventListener('click', function (e: any) {\r\n            if (e.target.className === 'modal-background') {\r\n                modal.close();\r\n            }\r\n        });\r\n\r\n        // add self (this modal instance) to the modal service so it's accessible from controllers\r\n        this.modalService.add(this);\r\n    }\r\n\r\n    // remove self from modal service when directive is destroyed\r\n    ngOnDestroy(): void {\r\n        this.modalService.remove(this.id);\r\n        this.element.remove();\r\n    }\r\n\r\n    // open modal\r\n    open(): void {\r\n        const modalWindow = document.getElementById('modal-window');\r\n        // modalWindow.style.left = 0;\r\n        modalWindow.classList.add('open');\r\n        this.element.style.display = 'block';\r\n        document.body.classList.add('modal-open');\r\n    }\r\n\r\n    // close modal\r\n    close(): void {\r\n        this.element.style.display = 'none';\r\n        const modalWindow = this.element.querySelector('.modal-window');\r\n        // modalWindow.style.left = `${-this.containerWidth - 11}px`;\r\n        modalWindow.classList.remove('open');\r\n        document.body.classList.remove('modal-open');\r\n    }\r\n}\r\n","export class ModalService {\r\n    private modals: any[] = [];\r\n    add(modal: any) {\r\n        // add modal to array of active modals\r\n        this.modals.push(modal);\r\n    }\r\n\r\n    remove(id: string) {\r\n        // remove modal from array of active modals\r\n        this.modals = this.modals.filter(x => x.id !== id);\r\n    }\r\n\r\n    open(id: string) {\r\n        const modal: any = this.modals.filter(x => x.id === id)[0];\r\n        modal.open();\r\n    }\r\n\r\n    close(id: string) {\r\n        // close modal specified by id\r\n        const modal: any = this.modals.filter(x => x.id === id)[0];\r\n        modal.close();\r\n    }\r\n}\r\n","import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'tab',\r\n  styles: [\r\n    `\r\n    .pane{\r\n      padding: 0;\r\n    }\r\n  `\r\n  ],\r\n  template: `\r\n    <div [hidden]=\"!active\" class=\"pane\">\r\n      <ng-content></ng-content>\r\n    </div>\r\n  `\r\n})\r\nexport class TabComponent {\r\n    // tslint:disable-next-line: no-input-rename\r\n    @Input('tabTitle') title: string;\r\n    @Input() active = false;\r\n    // tslint:disable-next-line: no-input-rename\r\n    @Input('index') index: number;\r\n}\r\n","module.exports = \"<ul class=\\\"nav nav-tabs\\\">\\r\\n    <li\\r\\n        *ngFor=\\\"let tab of tabs;\\\"\\r\\n        (click)=\\\"selectTab(tab)\\\"\\r\\n        [class.active]=\\\"tab.active\\\"\\r\\n    >\\r\\n        <div>\\r\\n            <span>{{tab.title}}</span>\\r\\n        </div>\\r\\n    </li>\\r\\n    \\r\\n</ul>\\r\\n<ng-content></ng-content>\\r\\n\"","module.exports = \"/* Style The Dropdown Button */\\n.dropbtn {\\n  background-color: transparent;\\n  color: #808080;\\n  border: 1px solid transparent;\\n  cursor: pointer;\\n  font-family: sans-serif;\\n  font-weight: 550;\\n  font-size: 12px;\\n  line-height: 15px;\\n  outline: none;\\n  text-align: center;\\n  width: 100%;\\n  height: 21px;\\n  margin-top: -1px;\\n  padding-right: 10px;\\n  border-bottom: 2px solid transparent; }\\n.dropbtn::after {\\n  content: '';\\n  width: 0;\\n  height: 0;\\n  border-left: 4px solid transparent;\\n  border-right: 4px solid transparent;\\n  border-top: 4px solid #505050;\\n  border-bottom: none;\\n  position: absolute;\\n  top: 7px;\\n  right: 6px; }\\n/* The container <div> - needed to position the dropdown content */\\n.dropdown {\\n  position: absolute;\\n  display: inline-block;\\n  left: 0px;\\n  width: 100%; }\\n/* Dropdown Content (Hidden by Default) */\\n.dropdown-content {\\n  display: none;\\n  position: absolute;\\n  background-color: #ececec;\\n  min-width: 85px;\\n  box-shadow: 0px 8px 16px 0px rgba(0, 0, 0, 0.2);\\n  z-index: 500;\\n  top: 19px; }\\n/* Links inside the dropdown */\\n.dropdown-content div {\\n  color: black;\\n  padding: 6px 8px;\\n  text-decoration: none; }\\n/* Change color of dropdown links on hover */\\n.dropdown-content div:hover {\\n  background-color: #fefefe; }\\n/* Show the dropdown menu on hover */\\n/* Change the background color of the dropdown button when the dropdown content is shown */\\n.dropdown:hover .dropbtn {\\n  color: #00006d; }\\n.nav-tabs li.active .dropbtn {\\n  color: #00006d;\\n  background-color: whitesmoke;\\n  border: 1px solid #B3B3B3;\\n  border-bottom: 2px solid whitesmoke; }\\n.nav-tabs li.open .dropbtn::after {\\n  content: '';\\n  border-top: none;\\n  border-bottom: 4px solid #505050; }\\n#topology_dropdown, #object_dropdown {\\n  display: none;\\n  position: absolute;\\n  width: -webkit-fit-content;\\n  width: -moz-fit-content;\\n  width: fit-content;\\n  transition: display 0.4s;\\n  z-index: 99999999;\\n  background-color: #fafafb;\\n  border: 1px solid #808080;\\n  box-shadow: none; }\\n#topology_dropdown div, #object_dropdown div {\\n    cursor: pointer;\\n    display: block;\\n    min-width: 100px;\\n    max-width: 300px;\\n    overflow: hidden;\\n    line-height: 20px;\\n    background-color: #fafafb;\\n    border: 0px;\\n    margin: 0px;\\n    padding: 0px 10px 0px 10px;\\n    line-height: 30px;\\n    height: 30px;\\n    font-size: 12px;\\n    color: #373737; }\\n#topology_dropdown div:hover, #object_dropdown div:hover {\\n      color: #00006d;\\n      background-color: #E6E6E6; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kZWwtdmlld2Vycy9hbGwtdmlld2Vycy9naS12aWV3ZXIvaHRtbC9DOlxcRHJvcGJveFxcRmlsZXNcXFNvZnR3YXJlXFxHaXRIdWJcXGRlc2lnbi1hdXRvbWF0aW9uXFxtb2JpdXMtcGFyYW1ldHJpYy1tb2RlbGxlci9zcmNcXGFwcFxcbW9kZWwtdmlld2Vyc1xcYWxsLXZpZXdlcnNcXGdpLXZpZXdlclxcaHRtbFxcdGFicy5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvbW9kZWwtdmlld2Vycy9hbGwtdmlld2Vycy9naS12aWV3ZXIvaHRtbC9DOlxcRHJvcGJveFxcRmlsZXNcXFNvZnR3YXJlXFxHaXRIdWJcXGRlc2lnbi1hdXRvbWF0aW9uXFxtb2JpdXMtcGFyYW1ldHJpYy1tb2RlbGxlci9zcmNcXHNjc3NcXGNvbG9ycy5zY3NzIiwic3JjL2FwcC9tb2RlbC12aWV3ZXJzL2FsbC12aWV3ZXJzL2dpLXZpZXdlci9odG1sL0M6XFxEcm9wYm94XFxGaWxlc1xcU29mdHdhcmVcXEdpdEh1YlxcZGVzaWduLWF1dG9tYXRpb25cXG1vYml1cy1wYXJhbWV0cmljLW1vZGVsbGVyL3NyY1xcc2Nzc1xcdmFyaWFibGVzLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBR0EsOEJBQUE7QUFDQTtFQUNJLDZCQUE2QjtFQUM3QixjQUFjO0VBQ2QsNkJBQTZCO0VBQzdCLGVBQWU7RUFDZix1QkFBdUI7RUFDdkIsZ0JBQWdCO0VBQ2hCLGVBQWU7RUFDZixpQkFBaUI7RUFDakIsYUFBYTtFQUNiLGtCQUFrQjtFQUNsQixXQUFXO0VBQ1gsWUFBWTtFQUNaLGdCQUFnQjtFQUNoQixtQkFBbUI7RUFDbkIsb0NBQW9DLEVBQUE7QUFHeEM7RUFDSSxXQUFXO0VBQ1gsUUFBUTtFQUNSLFNBQVM7RUFDVCxrQ0FBa0M7RUFDbEMsbUNBQW1DO0VBQ25DLDZCQUE2QjtFQUM3QixtQkFBbUI7RUFDbkIsa0JBQWtCO0VBQ2xCLFFBQVE7RUFDUixVQUFVLEVBQUE7QUFHWixrRUFBQTtBQUNBO0VBQ0Usa0JBQWtCO0VBQ2xCLHFCQUFxQjtFQUNyQixTQUFTO0VBQ1QsV0FBVyxFQUFBO0FBR2IseUNBQUE7QUFDQTtFQUNFLGFBQWE7RUFDYixrQkFBa0I7RUFDbEIseUJBQXlCO0VBQ3pCLGVBQWU7RUFDZiwrQ0FBNEM7RUFDNUMsWUFBWTtFQUNaLFNBQVMsRUFBQTtBQUdYLDhCQUFBO0FBQ0E7RUFDRSxZQUFZO0VBQ1osZ0JBQWdCO0VBQ2hCLHFCQUFxQixFQUFBO0FBR3ZCLDRDQUFBO0FBQ0E7RUFBNkIseUJBQXlCLEVBQUE7QUFFdEQsb0NBQUE7QUFLQSwwRkFBQTtBQUNBO0VBQ0UsY0FDSixFQUFBO0FBRUE7RUFHWSxjQUFjO0VBQ2QsNEJBQTRCO0VBQzVCLHlCQUF5QjtFQUN6QixtQ0FBbUMsRUFBQTtBQU4vQztFQVdZLFdBQVc7RUFDWCxnQkFBZ0I7RUFDaEIsZ0NBQWdDLEVBQUE7QUFLNUM7RUFDSSxhQUFhO0VBQ2Isa0JBQWtCO0VBQ2xCLDBCQUFrQjtFQUFsQix1QkFBa0I7RUFBbEIsa0JBQWtCO0VBQ2xCLHdCQUF3QjtFQUV4QixpQkFBaUI7RUFDakIseUJDNUZ1QjtFRDZGdkIseUJDbkdZO0VEb0daLGdCQUFnQixFQUFBO0FBVHBCO0lBWVEsZUFBZTtJQUNmLGNBQWM7SUFDZCxnQkFBZ0I7SUFDaEIsZ0JBQWdCO0lBQ2hCLGdCQUFnQjtJQUNoQixpQkFBaUI7SUFDakIseUJDdkdtQjtJRHdHbkIsV0FBVztJQUNYLFdBQVc7SUFDWCwwQkFBMEI7SUFDMUIsaUJFNUdLO0lGNkdMLFlFN0dLO0lGOEdMLGVFL0dLO0lGZ0hMLGNDM0dRLEVBQUE7QURrRmhCO01BMkJZLGNDM0dtQjtNRDRHbkIseUJDbkhJLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9tb2RlbC12aWV3ZXJzL2FsbC12aWV3ZXJzL2dpLXZpZXdlci9odG1sL3RhYnMuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJAaW1wb3J0ICd+c2Nzcy9jb2xvcnMnO1xyXG5AaW1wb3J0ICd+c2Nzcy92YXJpYWJsZXMnO1xyXG5cclxuLyogU3R5bGUgVGhlIERyb3Bkb3duIEJ1dHRvbiAqL1xyXG4uZHJvcGJ0biB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcclxuICAgIGNvbG9yOiAjODA4MDgwO1xyXG4gICAgYm9yZGVyOiAxcHggc29saWQgdHJhbnNwYXJlbnQ7XHJcbiAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgICBmb250LWZhbWlseTogc2Fucy1zZXJpZjtcclxuICAgIGZvbnQtd2VpZ2h0OiA1NTA7XHJcbiAgICBmb250LXNpemU6IDEycHg7XHJcbiAgICBsaW5lLWhlaWdodDogMTVweDtcclxuICAgIG91dGxpbmU6IG5vbmU7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGhlaWdodDogMjFweDtcclxuICAgIG1hcmdpbi10b3A6IC0xcHg7XHJcbiAgICBwYWRkaW5nLXJpZ2h0OiAxMHB4O1xyXG4gICAgYm9yZGVyLWJvdHRvbTogMnB4IHNvbGlkIHRyYW5zcGFyZW50O1xyXG59XHJcblxyXG4uZHJvcGJ0bjo6YWZ0ZXJ7XHJcbiAgICBjb250ZW50OiAnJztcclxuICAgIHdpZHRoOiAwOyBcclxuICAgIGhlaWdodDogMDsgXHJcbiAgICBib3JkZXItbGVmdDogNHB4IHNvbGlkIHRyYW5zcGFyZW50O1xyXG4gICAgYm9yZGVyLXJpZ2h0OiA0cHggc29saWQgdHJhbnNwYXJlbnQ7XHJcbiAgICBib3JkZXItdG9wOiA0cHggc29saWQgIzUwNTA1MDtcclxuICAgIGJvcmRlci1ib3R0b206IG5vbmU7XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICB0b3A6IDdweDtcclxuICAgIHJpZ2h0OiA2cHg7XHJcbn1cclxuICBcclxuICAvKiBUaGUgY29udGFpbmVyIDxkaXY+IC0gbmVlZGVkIHRvIHBvc2l0aW9uIHRoZSBkcm9wZG93biBjb250ZW50ICovXHJcbiAgLmRyb3Bkb3duIHtcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICAgIGxlZnQ6IDBweDtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gIH1cclxuICBcclxuICAvKiBEcm9wZG93biBDb250ZW50IChIaWRkZW4gYnkgRGVmYXVsdCkgKi9cclxuICAuZHJvcGRvd24tY29udGVudCB7XHJcbiAgICBkaXNwbGF5OiBub25lO1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2VjZWNlYztcclxuICAgIG1pbi13aWR0aDogODVweDtcclxuICAgIGJveC1zaGFkb3c6IDBweCA4cHggMTZweCAwcHggcmdiYSgwLDAsMCwwLjIpO1xyXG4gICAgei1pbmRleDogNTAwO1xyXG4gICAgdG9wOiAxOXB4O1xyXG4gIH1cclxuICBcclxuICAvKiBMaW5rcyBpbnNpZGUgdGhlIGRyb3Bkb3duICovXHJcbiAgLmRyb3Bkb3duLWNvbnRlbnQgZGl2IHtcclxuICAgIGNvbG9yOiBibGFjaztcclxuICAgIHBhZGRpbmc6IDZweCA4cHg7XHJcbiAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XHJcbiAgfVxyXG4gIFxyXG4gIC8qIENoYW5nZSBjb2xvciBvZiBkcm9wZG93biBsaW5rcyBvbiBob3ZlciAqL1xyXG4gIC5kcm9wZG93bi1jb250ZW50IGRpdjpob3ZlciB7YmFja2dyb3VuZC1jb2xvcjogI2ZlZmVmZX1cclxuICBcclxuICAvKiBTaG93IHRoZSBkcm9wZG93biBtZW51IG9uIGhvdmVyICovXHJcbiAgLmRyb3Bkb3duOmhvdmVyIC5kcm9wZG93bi1jb250ZW50IHtcclxuICAgIC8vIGRpc3BsYXk6IGJsb2NrO1xyXG4gIH1cclxuICBcclxuICAvKiBDaGFuZ2UgdGhlIGJhY2tncm91bmQgY29sb3Igb2YgdGhlIGRyb3Bkb3duIGJ1dHRvbiB3aGVuIHRoZSBkcm9wZG93biBjb250ZW50IGlzIHNob3duICovXHJcbiAgLmRyb3Bkb3duOmhvdmVyIC5kcm9wYnRuIHtcclxuICAgIGNvbG9yOiAjMDAwMDZkXHJcbn1cclxuXHJcbi5uYXYtdGFic3tcclxuICAgIGxpLmFjdGl2ZXtcclxuICAgICAgICAuZHJvcGJ0bntcclxuICAgICAgICAgICAgY29sb3I6ICMwMDAwNmQ7XHJcbiAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6IHdoaXRlc21va2U7XHJcbiAgICAgICAgICAgIGJvcmRlcjogMXB4IHNvbGlkICNCM0IzQjM7XHJcbiAgICAgICAgICAgIGJvcmRlci1ib3R0b206IDJweCBzb2xpZCB3aGl0ZXNtb2tlO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIGxpLm9wZW57XHJcbiAgICAgICAgLmRyb3BidG46OmFmdGVye1xyXG4gICAgICAgICAgICBjb250ZW50OiAnJztcclxuICAgICAgICAgICAgYm9yZGVyLXRvcDogbm9uZTtcclxuICAgICAgICAgICAgYm9yZGVyLWJvdHRvbTogNHB4IHNvbGlkICM1MDUwNTA7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59XHJcblxyXG4jdG9wb2xvZ3lfZHJvcGRvd24sICNvYmplY3RfZHJvcGRvd24ge1xyXG4gICAgZGlzcGxheTogbm9uZTtcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIHdpZHRoOiBmaXQtY29udGVudDtcclxuICAgIHRyYW5zaXRpb246IGRpc3BsYXkgMC40cztcclxuXHJcbiAgICB6LWluZGV4OiA5OTk5OTk5OTtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICRjb2xvcjY7XHJcbiAgICBib3JkZXI6IDFweCBzb2xpZCAkY29sb3IxO1xyXG4gICAgYm94LXNoYWRvdzogbm9uZTtcclxuXHJcbiAgICBkaXZ7XHJcbiAgICAgICAgY3Vyc29yOiBwb2ludGVyO1xyXG4gICAgICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgICAgIG1pbi13aWR0aDogMTAwcHg7XHJcbiAgICAgICAgbWF4LXdpZHRoOiAzMDBweDtcclxuICAgICAgICBvdmVyZmxvdzogaGlkZGVuO1xyXG4gICAgICAgIGxpbmUtaGVpZ2h0OiAyMHB4O1xyXG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICRjb2xvcjY7XHJcbiAgICAgICAgYm9yZGVyOiAwcHg7XHJcbiAgICAgICAgbWFyZ2luOiAwcHg7XHJcbiAgICAgICAgcGFkZGluZzogMHB4IDEwcHggMHB4IDEwcHg7XHJcbiAgICAgICAgbGluZS1oZWlnaHQ6ICRmc2l6ZTM7XHJcbiAgICAgICAgaGVpZ2h0OiAkZnNpemUzO1xyXG4gICAgICAgIGZvbnQtc2l6ZTogJGZzaXplMjtcclxuICAgICAgICBjb2xvcjogJGNvbG9yODtcclxuICAgICAgICAmOmhvdmVye1xyXG4gICAgICAgICAgICBjb2xvcjogJHNlbGVjdGVkLWNvbG9yO1xyXG4gICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkY29sb3I1O1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbn0iLCJcclxuJGNvbG9yMTogIzgwODA4MDtcclxuJGNvbG9yMjogIzk5OTk5OTtcclxuJGNvbG9yMzogI0IzQjNCMzsgXHJcbiRjb2xvcjQ6ICNDQ0NDQ0M7XHJcbiRjb2xvcjU6ICNFNkU2RTY7XHJcbiRjb2xvcjUtNTogcmdiKDI0NSwgMjQ1LCAyNDUpO1xyXG4kY29sb3I2OiByZ2IoMjUwLCAyNTAsIDI1MSk7XHJcblxyXG4kY29sb3I3OiB3aGl0ZTtcclxuJGNvbG9yODogIzM3MzczNztcclxuXHJcbiRzZWxlY3RlZC1jb2xvcjogcmdiKDAsIDAsIDEwOSk7XHJcbiRob3Zlci1jb2xvcjogJGNvbG9yMjtcclxuXHJcbiRlcnJvci1jb2xvcjogI0U5NDg1ODsgLy9waW5rLXJlZFxyXG4kZXJyb3ItY29sb3ItbHQ6IHJnYigyNTUsIDIyMCwgMjI0KTtcclxuJHBjb2xvcjI6ICNGM0EzMkE7IC8vb3JhbmdlLXllbGxvd1xyXG4kcHJpbnQtY29sb3I6IHJnYigxMzAsIDE5MSwgMTEwKTsgLy9saWdodGdyZWVuXHJcbiRwcmludC1jb2xvci1sdDogcmdiKDIzMCwgMjU1LCAyMjEpO1xyXG4kc2VsZWN0R2VvbS1jb2xvcjogcmdiKDI1NSwgMTc0LCAwKTsgLy8gbGlnaHQgb3JhbmdlXHJcbiRzZWxlY3RHZW9tLWNvbG9yLWx0OiByZ2IoMjU1LCAyMjUsIDE2MCk7XHJcblxyXG4vLyAkcHJvZC1iYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMjUwLDI1MCwyNTApO1xyXG4vLyAkYmFja2dyb3VuZC1jb2xvcjogcmdiKDIyMCwyMjAsMjIwKTtcclxuJGZ1bmN0aW9uLXRleHQtY29sb3I6IHJnYigxOTAsIDE0MCwgMzApO1xyXG4kZnVuY3Rpb24tdGV4dC1jb2xvcjI6IHJnYigxOCwgMTI2LCAxMzYpO1xyXG4kYmFzaWMtZnVuY3Rpb24tdGV4dC1jb2xvcjogcmdiKDIwMCwgNzAsIDE1MCk7XHJcbiRjb21tZW50LWNvbG9yOiBkYXJrZ3JlZW47XHJcbiIsIiRwYWRkaW5nOiA0MHB4OyAvLyA/IG5vdCB1c2VkXHJcbiRzbWFsbC1wYWRkaW5nOiAxNXB4O1xyXG4kaGVhZGVyLWhlaWdodDogNDBweDtcclxuXHJcbiRmc2l6ZTE6IDE1cHg7XHJcbiRmc2l6ZTI6IDEycHg7XHJcbiRmc2l6ZTM6IDMwcHg7XHJcblxyXG4kcG9ydC1zaXplOiAxNXB4O1xyXG4kZGVmYXVsdC1zaWRlLXBhZGRpbmc6IDE1cHg7XHJcblxyXG4kZGlzYWJsZWQtb3BhY2l0eTogMC40OyJdfQ== */\"","import {\r\n    Component,\r\n    ContentChildren,\r\n    QueryList,\r\n    AfterContentInit\r\n} from '@angular/core';\r\n\r\nimport { TabComponent } from './tab.component';\r\n\r\n@Component({\r\n    selector: 'tabs',\r\n    templateUrl: `./tabs.component.html`,\r\n    styleUrls: ['./tabs.component.scss']\r\n})\r\nexport class TabsComponent implements AfterContentInit {\r\n    @ContentChildren(TabComponent) tabs: QueryList<TabComponent>;\r\n    ngAfterContentInit() {\r\n        setTimeout(() => {// get all active tabs\r\n            const activeTabs = this.tabs.filter((tab) => tab.active);\r\n            // if there is no active tab set, activate the first\r\n            if (activeTabs.length === 0) {\r\n                this.selectTab(this.tabs.first);\r\n            }\r\n        }, 0);\r\n    }\r\n    selectTab(tab: TabComponent) {\r\n        // deactivate all tabs\r\n        this.tabs.toArray().forEach(_tab => _tab.active = false);\r\n        tab.active = true;\r\n    }\r\n}\r\n","module.exports = \"<div\\r\\n    id=\\\"threejs-container\\\"\\r\\n    (window:keydown)=\\\"onKeyDown($event)\\\"\\r\\n    (window:keyup)=\\\"onKeyUp($event)\\\"\\r\\n    (window:mousedown)=\\\"onMouseDown($event)\\\"\\r\\n    (window:mousemove)=\\\"onMouseMove($event)\\\"\\r\\n    (window:mouseup)=\\\"onMouseUp($event)\\\"\\r\\n>\\r\\n    <div\\r\\n        *ngIf=\\\"_model_error\\\"\\r\\n        style=\\\"position:absolute;color:red;margin-top: 50px;left:40%;text-align: center;font-family:sans-serif;font-size: 14px;background-color: white;\\\"\\r\\n    >\\r\\n        Error displaying model:{{text}}\\r\\n    </div>\\r\\n    <div\\r\\n        *ngIf=\\\"_no_model\\\"\\r\\n        style=\\\"position:absolute;color:red;margin-top: 50px;left:40%;text-align: center;font-family:sans-serif;font-size: 14px;background-color: white;\\\"\\r\\n    >\\r\\n        Model or Scene not defined.\\r\\n    </div>\\r\\n    <div class = \\\"messages\\\"\\r\\n        *ngIf=\\\"messageVisible\\\"\\r\\n    >\\r\\n        {{message}}\\r\\n    </div>\\r\\n\\r\\n\\r\\n    <!-- <button id=\\\"zoomingfit\\\"  \\r\\n        [class.visible]=\\\"Visible === 'zoomfit'\\\" \\r\\n        (click)=\\\"zoomfit()\\\">\\r\\n        <span matTooltip=\\\"zoom to fit\\\"><i class=\\\"fa fa-arrows-alt\\\"></i></span>\\r\\n    </button> -->\\r\\n\\r\\n    <button\\r\\n        id=\\\"zoomingfit\\\"\\r\\n        mat-icon-button\\r\\n        (click)=\\\"zoomfit()\\\"\\r\\n    >\\r\\n        <mat-icon svgIcon=\\\"cZoom\\\"></mat-icon>\\r\\n    </button>\\r\\n\\r\\n\\r\\n    <!-- <button id=\\\"selecting\\\" [class.visible]=\\\"Visible === 'select'\\\" (click)= \\\"select($event, Visible)\\\" ><i class=\\\"fa fa-mouse-pointer\\\"></i></button> -->\\r\\n    <!-- <button id=\\\"setting\\\" [class.selected]=\\\"settingVisible\\\" (click)= \\\"setting(settingVisible)\\\"><i class=\\\"fa fa-cog\\\"></i></button> -->\\r\\n    <!-- <button id=\\\"selecting\\\" [class.selected]=\\\"seVisible\\\" (click)= \\\"select(seVisible)\\\" ><span matTooltip=\\\"select\\\"><i class=\\\"fa fa-mouse-pointer\\\"></i></span></button> -->\\r\\n    <button\\r\\n        id=\\\"EntitySelection\\\"\\r\\n        mat-icon-button\\r\\n        (click)=\\\"selectDropdownVisible = !selectDropdownVisible; needSelect=false\\\"\\r\\n    >\\r\\n        <mat-icon svgIcon=\\\"select\\\"></mat-icon>\\r\\n        <div\\r\\n            [hidden]=\\\"needSelect?(!needSelect&&selectDropdownVisible):!needSelect\\\"\\r\\n            class=\\\"needSelect\\\"\\r\\n        ></div>\\r\\n    </button>\\r\\n    <span\\r\\n        *ngIf=\\\"!selectDropdownVisible\\\"\\r\\n        id=\\\"SelectingEntityType\\\"\\r\\n        matTooltip=\\\"Selecting {{SelectingEntityType.name}}\\\"\\r\\n        (click)=\\\"selectDropdownVisible = !selectDropdownVisible; needSelect=false\\\"\\r\\n    >\\r\\n        {{SelectingEntityType.id}}\\r\\n    </span>\\r\\n    <div\\r\\n        id=\\\"selectDropdown\\\"\\r\\n        *ngIf=\\\"selectDropdownVisible == true\\\"\\r\\n    >\\r\\n        <button\\r\\n            *ngFor=\\\"let selection of selections\\\"\\r\\n            (click)=\\\"selectEntityType(selection); needSelect=false\\\"\\r\\n            [class.active]=\\\"SelectingEntityType.id === selection.id\\\"\\r\\n        >\\r\\n            <span matTooltip=\\\"Select {{selection.name}}\\\">{{selection.id}}</span>\\r\\n        </button>\\r\\n    </div>\\r\\n\\r\\n    <!-- <div id=\\\"giSummary\\\" [hidden]='!this._data_threejs.settings.gi_summary.show'>\\r\\n        <tbody>\\r\\n            <tr *ngFor=\\\"let item of giSummary\\\">\\r\\n                <td style=\\\"width: 80px;\\\">{{item.title}}</td><td>{{item.val}}</td>\\r\\n            </tr>\\r\\n        </tbody>\\r\\n    </div>\\r\\n    <div id=\\\"tjsSummary\\\" [hidden]='!this._data_threejs.settings.tjs_summary.show'>\\r\\n        <tbody>\\r\\n            <tr>\\r\\n                <td\\r\\n                    align=left\\r\\n                    style=\\\"width: 80px;\\\"\\r\\n                >\\r\\n                    3js Triangles:\\r\\n                </td>\\r\\n                <td\\r\\n                    align=left\\r\\n                    style=\\\"width: 20px;\\\"\\r\\n                >\\r\\n                    {{_threejs_nums[2]}}\\r\\n                </td>\\r\\n            </tr>\\r\\n            <tr>\\r\\n                <td\\r\\n                    align=left\\r\\n                    style=\\\"width: 80px;\\\"\\r\\n                >\\r\\n                    3js Edges:\\r\\n                </td>\\r\\n                <td\\r\\n                    align=left\\r\\n                    style=\\\"width: 20px;\\\"\\r\\n                >\\r\\n                    {{_threejs_nums[1]}}\\r\\n                </td>\\r\\n            </tr>\\r\\n            <tr>\\r\\n                <td\\r\\n                    align=left\\r\\n                    style=\\\"width: 80px;\\\"\\r\\n                >\\r\\n                    3js Points:\\r\\n                </td>\\r\\n                <td\\r\\n                    align=left\\r\\n                    style=\\\"width: 20px;\\\"\\r\\n                >\\r\\n                    {{_threejs_nums[0]}}\\r\\n                </td>\\r\\n            </tr>\\r\\n        </tbody>\\r\\n    </div> -->\\r\\n\\r\\n\\r\\n    <dropdown-menu (selected)='selectEntity($event)'></dropdown-menu>\\r\\n    <div id=\\\"mouse_label\\\"></div>\\r\\n    <!-- <button id=\\\"imagery\\\"  \\r\\n        [class.selected]=\\\"imVisible\\\" (click)=\\\"leaflet()\\\">I\\r\\n        </button> -->\\r\\n    <!-- setting -->\\r\\n\\r\\n\\r\\n    <!-- <app-setting *ngIf=\\\"settingVisible == true\\\"></app-setting> -->\\r\\n</div>\\r\\n\"","module.exports = \"button {\\n  cursor: pointer; }\\n  button:focus {\\n    outline: none; }\\n  :host {\\n  width: 100%;\\n  height: 100%;\\n  background-color: green;\\n  overflow: hidden; }\\n  #threejs-container {\\n  position: relative;\\n  height: 100%;\\n  width: 100%;\\n  margin: 0px;\\n  overflow: hidden;\\n  font-family: sans-serif; }\\n  #container-top-right-resize {\\n  top: 0px;\\n  right: 0px; }\\n  #giSummary, #tjsSummary {\\n  position: absolute;\\n  bottom: 5px;\\n  left: 5px;\\n  background: rgba(255, 255, 255, 0.3);\\n  padding: 10px;\\n  color: #2a8ac5; }\\n  #giSummary td, #tjsSummary td {\\n    height: 17px; }\\n  /*#rotating{\\r\\n    width: 30px;\\r\\n    height: 25px;\\r\\n    font-size:15px;\\r\\n    right:0px; \\r\\n    text-align:center;\\r\\n    position: absolute;\\r\\n    top: 0px;\\r\\n    background-color:transparent;\\r\\n    border:0;\\r\\n}\\r\\n\\r\\n#paning{\\r\\n    width: 30px;\\r\\n    height: 25px;\\r\\n    font-size:15px;\\r\\n    right:0px; \\r\\n    text-align:center;\\r\\n    position: absolute;\\r\\n    top: 25px;\\r\\n    background-color:transparent;\\r\\n    border:0;\\r\\n}\\r\\n\\r\\n#zooming{\\r\\n    width: 30px;\\r\\n    height: 25px;\\r\\n    font-size:15px;\\r\\n    right:0px; \\r\\n    text-align:center;\\r\\n    position: absolute;\\r\\n    margin-top: 50px;\\r\\n    background-color:transparent;\\r\\n    border:0;\\r\\n}*/\\n  /*#imagery{\\r\\n    width: 30px;\\r\\n    height: 25px;\\r\\n    font-size:14px;\\r\\n    right:0px; \\r\\n    text-align:center;\\r\\n    position: absolute;\\r\\n    margin-top: 10px;\\r\\n    background-color:transparent;\\r\\n    border:0;\\r\\n}*/\\n  .messages {\\n  position: absolute;\\n  color: orange;\\n  margin-top: 50px;\\n  left: 40%;\\n  padding: 10px;\\n  text-align: center;\\n  font-family: sans-serif;\\n  font-size: 14px;\\n  background-color: white;\\n  box-shadow: 2px 2px 5px 0px #505050; }\\n  #zoomingfit {\\n  width: 40px;\\n  height: 30px;\\n  font-size: 15px;\\n  position: absolute;\\n  top: 30px;\\n  right: 0px;\\n  text-align: center;\\n  color: #808080;\\n  background-color: transparent;\\n  border: 0; }\\n  #zoomingfit:hover {\\n    color: #00006d; }\\n  #EntitySelection {\\n  width: 40px;\\n  height: 30px;\\n  font-size: 15px;\\n  position: absolute;\\n  top: 60px;\\n  right: 0px;\\n  text-align: center;\\n  color: #808080;\\n  background-color: transparent;\\n  border: 0; }\\n  #EntitySelection:hover {\\n    color: #00006d; }\\n  .needSelect {\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  width: 40px;\\n  height: 40px;\\n  border-radius: 50%;\\n  background-color: white;\\n  opacity: 0;\\n  -webkit-animation: scaleIn 2s infinite cubic-bezier(0.36, 0.11, 0.89, 0.32);\\n          animation: scaleIn 2s infinite cubic-bezier(0.36, 0.11, 0.89, 0.32); }\\n  @-webkit-keyframes scaleIn {\\n  from {\\n    -webkit-transform: scale(0.8, 0.8);\\n            transform: scale(0.8, 0.8);\\n    opacity: .5; }\\n  to {\\n    -webkit-transform: scale(1.2, 1.2);\\n            transform: scale(1.2, 1.2);\\n    opacity: 0; } }\\n  @keyframes scaleIn {\\n  from {\\n    -webkit-transform: scale(0.8, 0.8);\\n            transform: scale(0.8, 0.8);\\n    opacity: .5; }\\n  to {\\n    -webkit-transform: scale(1.2, 1.2);\\n            transform: scale(1.2, 1.2);\\n    opacity: 0; } }\\n  #SelectingEntityType {\\n  width: 40px;\\n  font-size: 15px;\\n  position: absolute;\\n  text-align: center;\\n  color: #505050;\\n  top: 90px;\\n  right: 0px;\\n  cursor: pointer; }\\n  #selectDropdown {\\n  position: absolute;\\n  top: 85px;\\n  right: 5px; }\\n  #selectDropdown button {\\n    width: 30px;\\n    height: 25px;\\n    font: 15px bolder;\\n    display: block;\\n    background-color: transparent;\\n    border: 1px solid transparent;\\n    font-family: sans-serif;\\n    color: #505050;\\n    cursor: pointer; }\\n  #selectDropdown button.active {\\n      background-color: #f3f3f3; }\\n  #selectDropdown button:hover {\\n      background-color: #f9f9f9;\\n      border-color: #bbbbbb; }\\n  #setting {\\n  width: 30px;\\n  height: 25px;\\n  font-size: 15px;\\n  right: 0px;\\n  text-align: center;\\n  position: absolute;\\n  top: 10px;\\n  background-color: transparent;\\n  border: 0; }\\n  .visible {\\n  color: grey; }\\n  .selectvisible {\\n  background-color: white !important;\\n  color: #395d73; }\\n  #mouse_label {\\n  display: none;\\n  position: fixed;\\n  overflow: hidden;\\n  font-style: italic;\\n  background: rgba(255, 255, 255, 0.5);\\n  padding: 5px; }\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kZWwtdmlld2Vycy9hbGwtdmlld2Vycy9naS12aWV3ZXIvdGhyZWVqcy9DOlxcRHJvcGJveFxcRmlsZXNcXFNvZnR3YXJlXFxHaXRIdWJcXGRlc2lnbi1hdXRvbWF0aW9uXFxtb2JpdXMtcGFyYW1ldHJpYy1tb2RlbGxlci9zcmNcXGFwcFxcbW9kZWwtdmlld2Vyc1xcYWxsLXZpZXdlcnNcXGdpLXZpZXdlclxcdGhyZWVqc1xcdGhyZWVqcy12aWV3ZXIuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL21vZGVsLXZpZXdlcnMvYWxsLXZpZXdlcnMvZ2ktdmlld2VyL3RocmVlanMvdGhyZWVqcy12aWV3ZXIuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL21vZGVsLXZpZXdlcnMvYWxsLXZpZXdlcnMvZ2ktdmlld2VyL3RocmVlanMvQzpcXERyb3Bib3hcXEZpbGVzXFxTb2Z0d2FyZVxcR2l0SHViXFxkZXNpZ24tYXV0b21hdGlvblxcbW9iaXVzLXBhcmFtZXRyaWMtbW9kZWxsZXIvc3JjXFxzY3NzXFx2YXJpYWJsZXMuc2NzcyIsInNyYy9hcHAvbW9kZWwtdmlld2Vycy9hbGwtdmlld2Vycy9naS12aWV3ZXIvdGhyZWVqcy9DOlxcRHJvcGJveFxcRmlsZXNcXFNvZnR3YXJlXFxHaXRIdWJcXGRlc2lnbi1hdXRvbWF0aW9uXFxtb2JpdXMtcGFyYW1ldHJpYy1tb2RlbGxlci9zcmNcXHNjc3NcXGNvbG9ycy5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUdBO0VBQ0ksZUFBZSxFQUFBO0VBRG5CO0lBR1EsYUFBYSxFQUFBO0VBSXJCO0VBR0ksV0FBVztFQUNYLFlBQVk7RUFDWix1QkFBdUI7RUFDdkIsZ0JBQWUsRUFBQTtFQUduQjtFQUNJLGtCQUFrQjtFQUVsQixZQUFZO0VBQ1osV0FBVztFQUNYLFdBQVU7RUFDVixnQkFBZ0I7RUFFaEIsdUJBQXNCLEVBQUE7RUFHMUI7RUFDSSxRQUFRO0VBQ1IsVUFBVSxFQUFBO0VBR2Q7RUFDSSxrQkFBa0I7RUFDbEIsV0FBVztFQUNYLFNBQVM7RUFDVCxvQ0FBaUM7RUFDakMsYUFBYTtFQUNiLGNBQWMsRUFBQTtFQU5sQjtJQVFRLFlBQVksRUFBQTtFQUtwQjs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztFQ21CRTtFRGlCRjs7Ozs7Ozs7OztFQ05FO0VEa0JGO0VBQ0ksa0JBQWlCO0VBQ2pCLGFBQVk7RUFDWixnQkFBZ0I7RUFDaEIsU0FBUTtFQUNSLGFBQVk7RUFDWixrQkFBa0I7RUFDbEIsdUJBQXNCO0VBQ3RCLGVBQWU7RUFDZix1QkFBdUI7RUFDdkIsbUNBQW1DLEVBQUE7RUFJdkM7RUFDSSxXQUFXO0VBQ1gsWUFBWTtFQUNaLGVFN0dTO0VGOEdULGtCQUFrQjtFQUNsQixTQUFRO0VBQ1IsVUFBUztFQUNULGtCQUFpQjtFQUNqQixjR3JIWTtFSHNIWiw2QkFBNEI7RUFDNUIsU0FBUSxFQUFBO0VBVlo7SUFZUSxjRzlHdUIsRUFBQTtFSGtIL0I7RUFDSSxXQUFXO0VBQ1gsWUFBWTtFQUNaLGVFN0hTO0VGOEhULGtCQUFrQjtFQUNsQixTQUFTO0VBQ1QsVUFBUztFQUNULGtCQUFpQjtFQUNqQixjR3JJWTtFSHNJWiw2QkFBNEI7RUFDNUIsU0FBUSxFQUFBO0VBVlo7SUFZUSxjRzlIdUIsRUFBQTtFSGlJL0I7RUFDSSxrQkFBa0I7RUFDbEIsTUFBTTtFQUNOLE9BQU87RUFDUCxXQUFXO0VBQ1gsWUFBWTtFQUNaLGtCQUFrQjtFQUNsQix1QkFBdUI7RUFDdkIsVUFBVTtFQUNWLDJFQUErRDtVQUEvRCxtRUFBK0QsRUFBQTtFQUduRTtFQUNJO0lBQ0Usa0NBQXdCO1lBQXhCLDBCQUF3QjtJQUN4QixXQUFXLEVBQUE7RUFFYjtJQUNFLGtDQUEwQjtZQUExQiwwQkFBMEI7SUFDMUIsVUFBVSxFQUFBLEVBQUE7RUFQaEI7RUFDSTtJQUNFLGtDQUF3QjtZQUF4QiwwQkFBd0I7SUFDeEIsV0FBVyxFQUFBO0VBRWI7SUFDRSxrQ0FBMEI7WUFBMUIsMEJBQTBCO0lBQzFCLFVBQVUsRUFBQSxFQUFBO0VBSWhCO0VBQ0ksV0FBVztFQUNYLGVFbEtTO0VGbUtULGtCQUFrQjtFQUNsQixrQkFBaUI7RUFDakIsY0FBYztFQUNkLFNBQVM7RUFDVCxVQUFTO0VBQ1QsZUFBZSxFQUFBO0VBR25CO0VBQ0ksa0JBQWtCO0VBQ2xCLFNBQVM7RUFDVCxVQUFVLEVBQUE7RUFIZDtJQUtRLFdBQVc7SUFDWCxZQUFZO0lBQ1osaUJBQW9CO0lBQ3BCLGNBQWM7SUFDZCw2QkFBNEI7SUFDNUIsNkJBQTRCO0lBQzVCLHVCQUFzQjtJQUN0QixjQUFjO0lBQ2QsZUFBZSxFQUFBO0VBYnZCO01BZVkseUJBQTBCLEVBQUE7RUFmdEM7TUFrQlkseUJBQTBCO01BQzFCLHFCQUFxQixFQUFBO0VBS2pDO0VBQ0ksV0FBVztFQUNYLFlBQVk7RUFDWixlRXRNUztFRnVNVCxVQUFTO0VBQ1Qsa0JBQWlCO0VBQ2pCLGtCQUFrQjtFQUNsQixTQUFTO0VBQ1QsNkJBQTRCO0VBQzVCLFNBQVEsRUFBQTtFQUtaO0VBQ0ksV0FBVyxFQUFBO0VBR2Y7RUFDSSxrQ0FBbUM7RUFDbkMsY0FBYSxFQUFBO0VBR2pCO0VBQ0ksYUFBWTtFQUNaLGVBQWM7RUFDZCxnQkFBZTtFQUNmLGtCQUFrQjtFQUNsQixvQ0FBaUM7RUFDakMsWUFBWSxFQUFBIiwiZmlsZSI6InNyYy9hcHAvbW9kZWwtdmlld2Vycy9hbGwtdmlld2Vycy9naS12aWV3ZXIvdGhyZWVqcy90aHJlZWpzLXZpZXdlci5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIkBpbXBvcnQgJ35zY3NzL2NvbG9ycyc7XHJcbkBpbXBvcnQgJ35zY3NzL3ZhcmlhYmxlcyc7XHJcblxyXG5idXR0b257XHJcbiAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgICAmOmZvY3Vze1xyXG4gICAgICAgIG91dGxpbmU6IG5vbmU7XHJcbiAgICB9XHJcbn1cclxuLy90aHJlZWpzLXZpZXdlclxyXG46aG9zdCAgeyBcclxuICAgIC8vIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIC8vIHBhZGRpbmc6NXB4O1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBncmVlbjtcclxuICAgIG92ZXJmbG93OmhpZGRlbjtcclxufVxyXG5cclxuI3RocmVlanMtY29udGFpbmVyIHtcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgIC8vIHBhZGRpbmc6NTBweDtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgbWFyZ2luOjBweDtcclxuICAgIG92ZXJmbG93OiBoaWRkZW47XHJcbiAgICAvLyBjb2xvcjogYmx1ZTtcclxuICAgIGZvbnQtZmFtaWx5OnNhbnMtc2VyaWY7XHJcbn1cclxuXHJcbiNjb250YWluZXItdG9wLXJpZ2h0LXJlc2l6ZSB7IFxyXG4gICAgdG9wOiAwcHg7IFxyXG4gICAgcmlnaHQ6IDBweDsgXHJcbn1cclxuXHJcbiNnaVN1bW1hcnksICN0anNTdW1tYXJ5e1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgYm90dG9tOiA1cHg7XHJcbiAgICBsZWZ0OiA1cHg7XHJcbiAgICBiYWNrZ3JvdW5kOiByZ2JhKDI1NSwyNTUsMjU1LDAuMyk7XHJcbiAgICBwYWRkaW5nOiAxMHB4O1xyXG4gICAgY29sb3I6ICMyYThhYzU7XHJcbiAgICB0ZHtcclxuICAgICAgICBoZWlnaHQ6IDE3cHg7XHJcbiAgICB9XHJcbn1cclxuXHJcblxyXG4vKiNyb3RhdGluZ3tcclxuICAgIHdpZHRoOiAzMHB4O1xyXG4gICAgaGVpZ2h0OiAyNXB4O1xyXG4gICAgZm9udC1zaXplOjE1cHg7XHJcbiAgICByaWdodDowcHg7IFxyXG4gICAgdGV4dC1hbGlnbjpjZW50ZXI7XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICB0b3A6IDBweDtcclxuICAgIGJhY2tncm91bmQtY29sb3I6dHJhbnNwYXJlbnQ7XHJcbiAgICBib3JkZXI6MDtcclxufVxyXG5cclxuI3BhbmluZ3tcclxuICAgIHdpZHRoOiAzMHB4O1xyXG4gICAgaGVpZ2h0OiAyNXB4O1xyXG4gICAgZm9udC1zaXplOjE1cHg7XHJcbiAgICByaWdodDowcHg7IFxyXG4gICAgdGV4dC1hbGlnbjpjZW50ZXI7XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICB0b3A6IDI1cHg7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOnRyYW5zcGFyZW50O1xyXG4gICAgYm9yZGVyOjA7XHJcbn1cclxuXHJcbiN6b29taW5ne1xyXG4gICAgd2lkdGg6IDMwcHg7XHJcbiAgICBoZWlnaHQ6IDI1cHg7XHJcbiAgICBmb250LXNpemU6MTVweDtcclxuICAgIHJpZ2h0OjBweDsgXHJcbiAgICB0ZXh0LWFsaWduOmNlbnRlcjtcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIG1hcmdpbi10b3A6IDUwcHg7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOnRyYW5zcGFyZW50O1xyXG4gICAgYm9yZGVyOjA7XHJcbn0qL1xyXG5cclxuLyojaW1hZ2VyeXtcclxuICAgIHdpZHRoOiAzMHB4O1xyXG4gICAgaGVpZ2h0OiAyNXB4O1xyXG4gICAgZm9udC1zaXplOjE0cHg7XHJcbiAgICByaWdodDowcHg7IFxyXG4gICAgdGV4dC1hbGlnbjpjZW50ZXI7XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICBtYXJnaW4tdG9wOiAxMHB4O1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjp0cmFuc3BhcmVudDtcclxuICAgIGJvcmRlcjowO1xyXG59Ki9cclxuXHJcbi5tZXNzYWdlc3tcclxuICAgIHBvc2l0aW9uOmFic29sdXRlO1xyXG4gICAgY29sb3I6b3JhbmdlO1xyXG4gICAgbWFyZ2luLXRvcDogNTBweDtcclxuICAgIGxlZnQ6NDAlO1xyXG4gICAgcGFkZGluZzoxMHB4O1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgZm9udC1mYW1pbHk6c2Fucy1zZXJpZjtcclxuICAgIGZvbnQtc2l6ZTogMTRweDtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xyXG4gICAgYm94LXNoYWRvdzogMnB4IDJweCA1cHggMHB4ICM1MDUwNTA7XHJcbn1cclxuXHJcblxyXG4jem9vbWluZ2ZpdHtcclxuICAgIHdpZHRoOiA0MHB4O1xyXG4gICAgaGVpZ2h0OiAzMHB4O1xyXG4gICAgZm9udC1zaXplOiRmc2l6ZTE7XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICB0b3A6MzBweDtcclxuICAgIHJpZ2h0OjBweDsgXHJcbiAgICB0ZXh0LWFsaWduOmNlbnRlcjtcclxuICAgIGNvbG9yOiAkY29sb3IxO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjp0cmFuc3BhcmVudDtcclxuICAgIGJvcmRlcjowO1xyXG4gICAgJjpob3ZlciB7XHJcbiAgICAgICAgY29sb3I6JHNlbGVjdGVkLWNvbG9yO1xyXG4gICAgfVxyXG59XHJcblxyXG4jRW50aXR5U2VsZWN0aW9ue1xyXG4gICAgd2lkdGg6IDQwcHg7XHJcbiAgICBoZWlnaHQ6IDMwcHg7XHJcbiAgICBmb250LXNpemU6JGZzaXplMTtcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIHRvcDogNjBweDtcclxuICAgIHJpZ2h0OjBweDsgXHJcbiAgICB0ZXh0LWFsaWduOmNlbnRlcjtcclxuICAgIGNvbG9yOiAkY29sb3IxO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjp0cmFuc3BhcmVudDtcclxuICAgIGJvcmRlcjowO1xyXG4gICAgJjpob3ZlciB7XHJcbiAgICAgICAgY29sb3I6JHNlbGVjdGVkLWNvbG9yO1xyXG4gICAgfVxyXG59XHJcbi5uZWVkU2VsZWN0e1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgdG9wOiAwO1xyXG4gICAgbGVmdDogMDtcclxuICAgIHdpZHRoOiA0MHB4O1xyXG4gICAgaGVpZ2h0OiA0MHB4O1xyXG4gICAgYm9yZGVyLXJhZGl1czogNTAlO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XHJcbiAgICBvcGFjaXR5OiAwO1xyXG4gICAgYW5pbWF0aW9uOiBzY2FsZUluIDJzIGluZmluaXRlIGN1YmljLWJlemllciguMzYsIC4xMSwgLjg5LCAuMzIpO1xyXG59XHJcblxyXG5Aa2V5ZnJhbWVzIHNjYWxlSW4ge1xyXG4gICAgZnJvbSB7XHJcbiAgICAgIHRyYW5zZm9ybTogc2NhbGUoLjgsIC44KTtcclxuICAgICAgb3BhY2l0eTogLjU7XHJcbiAgICB9XHJcbiAgICB0byB7XHJcbiAgICAgIHRyYW5zZm9ybTogc2NhbGUoMS4yLCAxLjIpO1xyXG4gICAgICBvcGFjaXR5OiAwO1xyXG4gICAgfVxyXG59XHJcblxyXG4jU2VsZWN0aW5nRW50aXR5VHlwZXtcclxuICAgIHdpZHRoOiA0MHB4O1xyXG4gICAgZm9udC1zaXplOiRmc2l6ZTE7XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICB0ZXh0LWFsaWduOmNlbnRlcjtcclxuICAgIGNvbG9yOiAjNTA1MDUwO1xyXG4gICAgdG9wOiA5MHB4O1xyXG4gICAgcmlnaHQ6MHB4O1xyXG4gICAgY3Vyc29yOiBwb2ludGVyO1xyXG59XHJcblxyXG4jc2VsZWN0RHJvcGRvd257XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICB0b3A6IDg1cHg7XHJcbiAgICByaWdodDogNXB4O1xyXG4gICAgYnV0dG9ue1xyXG4gICAgICAgIHdpZHRoOiAzMHB4O1xyXG4gICAgICAgIGhlaWdodDogMjVweDtcclxuICAgICAgICBmb250OiAkZnNpemUxIGJvbGRlcjtcclxuICAgICAgICBkaXNwbGF5OiBibG9jaztcclxuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOnRyYW5zcGFyZW50O1xyXG4gICAgICAgIGJvcmRlcjoxcHggc29saWQgdHJhbnNwYXJlbnQ7XHJcbiAgICAgICAgZm9udC1mYW1pbHk6c2Fucy1zZXJpZjtcclxuICAgICAgICBjb2xvcjogIzUwNTA1MDtcclxuICAgICAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgICAgICAgJi5hY3RpdmV7XHJcbiAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICAjZjNmM2YzO1xyXG4gICAgICAgIH1cclxuICAgICAgICAmOmhvdmVye1xyXG4gICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAgI2Y5ZjlmOTtcclxuICAgICAgICAgICAgYm9yZGVyLWNvbG9yOiAjYmJiYmJiO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxufVxyXG5cclxuI3NldHRpbmd7XHJcbiAgICB3aWR0aDogMzBweDtcclxuICAgIGhlaWdodDogMjVweDtcclxuICAgIGZvbnQtc2l6ZTokZnNpemUxO1xyXG4gICAgcmlnaHQ6MHB4OyBcclxuICAgIHRleHQtYWxpZ246Y2VudGVyO1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgdG9wOiAxMHB4O1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjp0cmFuc3BhcmVudDtcclxuICAgIGJvcmRlcjowO1xyXG59XHJcblxyXG5cclxuXHJcbi52aXNpYmxle1xyXG4gICAgY29sb3I6IGdyZXk7XHJcbn1cclxuXHJcbi5zZWxlY3R2aXNpYmxle1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIHdoaXRlICFpbXBvcnRhbnQ7XHJcbiAgICBjb2xvcjojMzk1ZDczO1xyXG59XHJcblxyXG4jbW91c2VfbGFiZWx7XHJcbiAgICBkaXNwbGF5Om5vbmU7XHJcbiAgICBwb3NpdGlvbjpmaXhlZDtcclxuICAgIG92ZXJmbG93OmhpZGRlbjtcclxuICAgIGZvbnQtc3R5bGU6IGl0YWxpYztcclxuICAgIGJhY2tncm91bmQ6IHJnYmEoMjU1LDI1NSwyNTUsMC41KTtcclxuICAgIHBhZGRpbmc6IDVweDtcclxufVxyXG4iLCJidXR0b24ge1xuICBjdXJzb3I6IHBvaW50ZXI7IH1cbiAgYnV0dG9uOmZvY3VzIHtcbiAgICBvdXRsaW5lOiBub25lOyB9XG5cbjpob3N0IHtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMTAwJTtcbiAgYmFja2dyb3VuZC1jb2xvcjogZ3JlZW47XG4gIG92ZXJmbG93OiBoaWRkZW47IH1cblxuI3RocmVlanMtY29udGFpbmVyIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBoZWlnaHQ6IDEwMCU7XG4gIHdpZHRoOiAxMDAlO1xuICBtYXJnaW46IDBweDtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgZm9udC1mYW1pbHk6IHNhbnMtc2VyaWY7IH1cblxuI2NvbnRhaW5lci10b3AtcmlnaHQtcmVzaXplIHtcbiAgdG9wOiAwcHg7XG4gIHJpZ2h0OiAwcHg7IH1cblxuI2dpU3VtbWFyeSwgI3Rqc1N1bW1hcnkge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGJvdHRvbTogNXB4O1xuICBsZWZ0OiA1cHg7XG4gIGJhY2tncm91bmQ6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC4zKTtcbiAgcGFkZGluZzogMTBweDtcbiAgY29sb3I6ICMyYThhYzU7IH1cbiAgI2dpU3VtbWFyeSB0ZCwgI3Rqc1N1bW1hcnkgdGQge1xuICAgIGhlaWdodDogMTdweDsgfVxuXG4vKiNyb3RhdGluZ3tcclxuICAgIHdpZHRoOiAzMHB4O1xyXG4gICAgaGVpZ2h0OiAyNXB4O1xyXG4gICAgZm9udC1zaXplOjE1cHg7XHJcbiAgICByaWdodDowcHg7IFxyXG4gICAgdGV4dC1hbGlnbjpjZW50ZXI7XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICB0b3A6IDBweDtcclxuICAgIGJhY2tncm91bmQtY29sb3I6dHJhbnNwYXJlbnQ7XHJcbiAgICBib3JkZXI6MDtcclxufVxyXG5cclxuI3BhbmluZ3tcclxuICAgIHdpZHRoOiAzMHB4O1xyXG4gICAgaGVpZ2h0OiAyNXB4O1xyXG4gICAgZm9udC1zaXplOjE1cHg7XHJcbiAgICByaWdodDowcHg7IFxyXG4gICAgdGV4dC1hbGlnbjpjZW50ZXI7XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICB0b3A6IDI1cHg7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOnRyYW5zcGFyZW50O1xyXG4gICAgYm9yZGVyOjA7XHJcbn1cclxuXHJcbiN6b29taW5ne1xyXG4gICAgd2lkdGg6IDMwcHg7XHJcbiAgICBoZWlnaHQ6IDI1cHg7XHJcbiAgICBmb250LXNpemU6MTVweDtcclxuICAgIHJpZ2h0OjBweDsgXHJcbiAgICB0ZXh0LWFsaWduOmNlbnRlcjtcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIG1hcmdpbi10b3A6IDUwcHg7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOnRyYW5zcGFyZW50O1xyXG4gICAgYm9yZGVyOjA7XHJcbn0qL1xuLyojaW1hZ2VyeXtcclxuICAgIHdpZHRoOiAzMHB4O1xyXG4gICAgaGVpZ2h0OiAyNXB4O1xyXG4gICAgZm9udC1zaXplOjE0cHg7XHJcbiAgICByaWdodDowcHg7IFxyXG4gICAgdGV4dC1hbGlnbjpjZW50ZXI7XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICBtYXJnaW4tdG9wOiAxMHB4O1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjp0cmFuc3BhcmVudDtcclxuICAgIGJvcmRlcjowO1xyXG59Ki9cbi5tZXNzYWdlcyB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgY29sb3I6IG9yYW5nZTtcbiAgbWFyZ2luLXRvcDogNTBweDtcbiAgbGVmdDogNDAlO1xuICBwYWRkaW5nOiAxMHB4O1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIGZvbnQtZmFtaWx5OiBzYW5zLXNlcmlmO1xuICBmb250LXNpemU6IDE0cHg7XG4gIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xuICBib3gtc2hhZG93OiAycHggMnB4IDVweCAwcHggIzUwNTA1MDsgfVxuXG4jem9vbWluZ2ZpdCB7XG4gIHdpZHRoOiA0MHB4O1xuICBoZWlnaHQ6IDMwcHg7XG4gIGZvbnQtc2l6ZTogMTVweDtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDMwcHg7XG4gIHJpZ2h0OiAwcHg7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgY29sb3I6ICM4MDgwODA7XG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xuICBib3JkZXI6IDA7IH1cbiAgI3pvb21pbmdmaXQ6aG92ZXIge1xuICAgIGNvbG9yOiAjMDAwMDZkOyB9XG5cbiNFbnRpdHlTZWxlY3Rpb24ge1xuICB3aWR0aDogNDBweDtcbiAgaGVpZ2h0OiAzMHB4O1xuICBmb250LXNpemU6IDE1cHg7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiA2MHB4O1xuICByaWdodDogMHB4O1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIGNvbG9yOiAjODA4MDgwO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgYm9yZGVyOiAwOyB9XG4gICNFbnRpdHlTZWxlY3Rpb246aG92ZXIge1xuICAgIGNvbG9yOiAjMDAwMDZkOyB9XG5cbi5uZWVkU2VsZWN0IHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDA7XG4gIGxlZnQ6IDA7XG4gIHdpZHRoOiA0MHB4O1xuICBoZWlnaHQ6IDQwcHg7XG4gIGJvcmRlci1yYWRpdXM6IDUwJTtcbiAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XG4gIG9wYWNpdHk6IDA7XG4gIGFuaW1hdGlvbjogc2NhbGVJbiAycyBpbmZpbml0ZSBjdWJpYy1iZXppZXIoMC4zNiwgMC4xMSwgMC44OSwgMC4zMik7IH1cblxuQGtleWZyYW1lcyBzY2FsZUluIHtcbiAgZnJvbSB7XG4gICAgdHJhbnNmb3JtOiBzY2FsZSgwLjgsIDAuOCk7XG4gICAgb3BhY2l0eTogLjU7IH1cbiAgdG8ge1xuICAgIHRyYW5zZm9ybTogc2NhbGUoMS4yLCAxLjIpO1xuICAgIG9wYWNpdHk6IDA7IH0gfVxuXG4jU2VsZWN0aW5nRW50aXR5VHlwZSB7XG4gIHdpZHRoOiA0MHB4O1xuICBmb250LXNpemU6IDE1cHg7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBjb2xvcjogIzUwNTA1MDtcbiAgdG9wOiA5MHB4O1xuICByaWdodDogMHB4O1xuICBjdXJzb3I6IHBvaW50ZXI7IH1cblxuI3NlbGVjdERyb3Bkb3duIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDg1cHg7XG4gIHJpZ2h0OiA1cHg7IH1cbiAgI3NlbGVjdERyb3Bkb3duIGJ1dHRvbiB7XG4gICAgd2lkdGg6IDMwcHg7XG4gICAgaGVpZ2h0OiAyNXB4O1xuICAgIGZvbnQ6IDE1cHggYm9sZGVyO1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xuICAgIGJvcmRlcjogMXB4IHNvbGlkIHRyYW5zcGFyZW50O1xuICAgIGZvbnQtZmFtaWx5OiBzYW5zLXNlcmlmO1xuICAgIGNvbG9yOiAjNTA1MDUwO1xuICAgIGN1cnNvcjogcG9pbnRlcjsgfVxuICAgICNzZWxlY3REcm9wZG93biBidXR0b24uYWN0aXZlIHtcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICNmM2YzZjM7IH1cbiAgICAjc2VsZWN0RHJvcGRvd24gYnV0dG9uOmhvdmVyIHtcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICNmOWY5Zjk7XG4gICAgICBib3JkZXItY29sb3I6ICNiYmJiYmI7IH1cblxuI3NldHRpbmcge1xuICB3aWR0aDogMzBweDtcbiAgaGVpZ2h0OiAyNXB4O1xuICBmb250LXNpemU6IDE1cHg7XG4gIHJpZ2h0OiAwcHg7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDEwcHg7XG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xuICBib3JkZXI6IDA7IH1cblxuLnZpc2libGUge1xuICBjb2xvcjogZ3JleTsgfVxuXG4uc2VsZWN0dmlzaWJsZSB7XG4gIGJhY2tncm91bmQtY29sb3I6IHdoaXRlICFpbXBvcnRhbnQ7XG4gIGNvbG9yOiAjMzk1ZDczOyB9XG5cbiNtb3VzZV9sYWJlbCB7XG4gIGRpc3BsYXk6IG5vbmU7XG4gIHBvc2l0aW9uOiBmaXhlZDtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgZm9udC1zdHlsZTogaXRhbGljO1xuICBiYWNrZ3JvdW5kOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuNSk7XG4gIHBhZGRpbmc6IDVweDsgfVxuIiwiJHBhZGRpbmc6IDQwcHg7IC8vID8gbm90IHVzZWRcclxuJHNtYWxsLXBhZGRpbmc6IDE1cHg7XHJcbiRoZWFkZXItaGVpZ2h0OiA0MHB4O1xyXG5cclxuJGZzaXplMTogMTVweDtcclxuJGZzaXplMjogMTJweDtcclxuJGZzaXplMzogMzBweDtcclxuXHJcbiRwb3J0LXNpemU6IDE1cHg7XHJcbiRkZWZhdWx0LXNpZGUtcGFkZGluZzogMTVweDtcclxuXHJcbiRkaXNhYmxlZC1vcGFjaXR5OiAwLjQ7IiwiXHJcbiRjb2xvcjE6ICM4MDgwODA7XHJcbiRjb2xvcjI6ICM5OTk5OTk7XHJcbiRjb2xvcjM6ICNCM0IzQjM7IFxyXG4kY29sb3I0OiAjQ0NDQ0NDO1xyXG4kY29sb3I1OiAjRTZFNkU2O1xyXG4kY29sb3I1LTU6IHJnYigyNDUsIDI0NSwgMjQ1KTtcclxuJGNvbG9yNjogcmdiKDI1MCwgMjUwLCAyNTEpO1xyXG5cclxuJGNvbG9yNzogd2hpdGU7XHJcbiRjb2xvcjg6ICMzNzM3Mzc7XHJcblxyXG4kc2VsZWN0ZWQtY29sb3I6IHJnYigwLCAwLCAxMDkpO1xyXG4kaG92ZXItY29sb3I6ICRjb2xvcjI7XHJcblxyXG4kZXJyb3ItY29sb3I6ICNFOTQ4NTg7IC8vcGluay1yZWRcclxuJGVycm9yLWNvbG9yLWx0OiByZ2IoMjU1LCAyMjAsIDIyNCk7XHJcbiRwY29sb3IyOiAjRjNBMzJBOyAvL29yYW5nZS15ZWxsb3dcclxuJHByaW50LWNvbG9yOiByZ2IoMTMwLCAxOTEsIDExMCk7IC8vbGlnaHRncmVlblxyXG4kcHJpbnQtY29sb3ItbHQ6IHJnYigyMzAsIDI1NSwgMjIxKTtcclxuJHNlbGVjdEdlb20tY29sb3I6IHJnYigyNTUsIDE3NCwgMCk7IC8vIGxpZ2h0IG9yYW5nZVxyXG4kc2VsZWN0R2VvbS1jb2xvci1sdDogcmdiKDI1NSwgMjI1LCAxNjApO1xyXG5cclxuLy8gJHByb2QtYmFja2dyb3VuZC1jb2xvcjogcmdiKDI1MCwyNTAsMjUwKTtcclxuLy8gJGJhY2tncm91bmQtY29sb3I6IHJnYigyMjAsMjIwLDIyMCk7XHJcbiRmdW5jdGlvbi10ZXh0LWNvbG9yOiByZ2IoMTkwLCAxNDAsIDMwKTtcclxuJGZ1bmN0aW9uLXRleHQtY29sb3IyOiByZ2IoMTgsIDEyNiwgMTM2KTtcclxuJGJhc2ljLWZ1bmN0aW9uLXRleHQtY29sb3I6IHJnYigyMDAsIDcwLCAxNTApO1xyXG4kY29tbWVudC1jb2xvcjogZGFya2dyZWVuO1xyXG4iXX0= */\"","import { GIModel } from '@libs/geo-info/GIModel';\r\n// import @angular stuff\r\nimport {\r\n    Component, OnInit, Input, Output, EventEmitter,\r\n    Injector, ElementRef, DoCheck, OnChanges, SimpleChanges, ViewChild\r\n} from '@angular/core';\r\nimport { DataThreejs } from '../data/data.threejs';\r\n// import { IModel } from 'gs-json';\r\nimport { DataService } from '../data/data.service';\r\nimport { EEntType, EAttribNames, EEntTypeStr, Txyz } from '@libs/geo-info/common';\r\nimport { DropdownMenuComponent } from '../html/dropdown-menu.component';\r\nimport { ModalService } from '../html/modal-window.service';\r\nimport { ThreeJSViewerService } from './threejs-viewer.service';\r\nimport { sortByKey } from '@libs/util/maps';\r\n/**\r\n * A threejs viewer for viewing geo-info (GI) models.\r\n * This component gets used in /app/model-viewers/all-viewers/gi-viewer/gi-viewer.component.html\r\n */\r\n@Component({\r\n    selector: 'threejs-viewer',\r\n    templateUrl: './threejs-viewer.component.html',\r\n    styleUrls: ['./threejs-viewer.component.scss']\r\n})\r\nexport class ThreejsViewerComponent implements OnInit, DoCheck, OnChanges {\r\n    @Output() eventClicked = new EventEmitter<Event>();\r\n    @Output() resetTableEvent = new EventEmitter<number>();\r\n    @Input() model: GIModel;\r\n    @Input() attr_table_select: { action: string, ent_type: string, id: number };\r\n    @ViewChild(DropdownMenuComponent) dropdown = new DropdownMenuComponent();\r\n\r\n    protected modalWindow: ModalService;\r\n    public container = null;\r\n    public _elem;\r\n    // viewer size\r\n    public _width: number;\r\n    public _height: number;\r\n    // DataService\r\n    protected dataService: DataService;\r\n    // threeJS scene data\r\n    public _data_threejs: DataThreejs;\r\n    // num of positions, edges, triangles in threejs\r\n    public _threejs_nums: [number, number, number];\r\n    // flags for displayinhg text in viewer, see html\r\n    public _no_model = false;\r\n    public _model_error = false;\r\n    public messageVisible = false;\r\n    public message: string;\r\n    // the selectable type of entity by user, depends on the Attribute Tab\r\n    public selectable: number;\r\n\r\n    // right selection dropdown\r\n    // public needSelect = false;\r\n    // current entity type enabled for selection\r\n    public SelectingEntityType: { id: string, name: string } = { id: EEntTypeStr[EEntType.FACE], name: 'Faces' };\r\n    public selectDropdownVisible = false;\r\n    public selections = [\r\n        { id: EEntTypeStr[EEntType.POSI], name: 'Positions' }, { id: EEntTypeStr[EEntType.VERT], name: 'Vetex' },\r\n        { id: EEntTypeStr[EEntType.EDGE], name: 'Edges' }, { id: EEntTypeStr[EEntType.WIRE], name: 'Wires' },\r\n        { id: EEntTypeStr[EEntType.FACE], name: 'Faces' }, { id: EEntTypeStr[EEntType.POINT], name: 'Points' },\r\n        { id: EEntTypeStr[EEntType.PLINE], name: 'Polylines' }, { id: EEntTypeStr[EEntType.PGON], name: 'Polygons' },\r\n        { id: EEntTypeStr[EEntType.COLL], name: 'Collections' }];\r\n\r\n    public dropdownPosition = { x: 0, y: 0 };\r\n\r\n    private isDown = false;\r\n    private lastX: number;\r\n    private lastY: number;\r\n    private dragHash: number;\r\n    private shiftKeyPressed = false;\r\n    private mouse_label;\r\n    private giSummary = [];\r\n    /**\r\n     * Creates a new viewer,\r\n     * @param injector\r\n     * @param elem\r\n     */\r\n    constructor(injector: Injector, elem: ElementRef, private threeJSViewerService: ThreeJSViewerService) {\r\n        this._elem = elem;\r\n        this.dataService = injector.get(DataService);\r\n        this.modalWindow = injector.get(ModalService);\r\n    }\r\n    /**\r\n     * Called when the viewer is initialised.\r\n     */\r\n    ngOnInit() {\r\n        this.mouse_label = document.getElementById('mouse_label');\r\n        this.dropdown.items = [];\r\n        this.dropdown.visible = false;\r\n        this.dropdown.position = { x: 0, y: 0 };\r\n        this.container = this._elem.nativeElement.children.namedItem('threejs-container');\r\n        // check for container\r\n        if (!this.container) {\r\n            console.error('No container in Three Viewer');\r\n            return;\r\n        }\r\n        // size of window\r\n        this._width = this.container.offsetWidth; // container.client_width;\r\n        this._height = this.container.offsetHeight; // container.client_height;\r\n\r\n        this._data_threejs = this.dataService.getThreejsScene();\r\n        this.threeJSViewerService.DataThreejs = this._data_threejs;\r\n        this.container.appendChild(this._data_threejs._renderer.domElement);\r\n        // set the numbers of entities\r\n        this._threejs_nums = this._data_threejs._threejs_nums;\r\n        // ??? What is happening here?\r\n        const self = this;\r\n        this._data_threejs._controls.addEventListener('change', function () { self.render(self); });\r\n        self._data_threejs._renderer.render(self._data_threejs._scene, self._data_threejs._camera);\r\n\r\n        if (this._data_threejs.ObjLabelMap.size !== 0) {\r\n            this._data_threejs.ObjLabelMap.forEach((obj, label) => {\r\n                this._data_threejs.createLabelforObj(this.container, obj.entity, obj.type, obj.text, label);\r\n            });\r\n        }\r\n\r\n        if (localStorage.getItem('mpm_selecting_entity_type') === null) {\r\n            localStorage.setItem('mpm_selecting_entity_type', JSON.stringify(this.SelectingEntityType));\r\n        } else {\r\n            this.getSelectingEntityType();\r\n        }\r\n    }\r\n    /**\r\n     * @param self\r\n     */\r\n    public render(self) {\r\n        const textLabels = this._data_threejs._textLabels;\r\n        if (textLabels.size !== 0) {\r\n            textLabels.forEach((label) => {\r\n                label.updatePosition();\r\n            });\r\n        }\r\n        self._data_threejs._renderer.render(self._data_threejs._scene, self._data_threejs._camera);\r\n    }\r\n\r\n    /**\r\n     * Called when anything changes\r\n     */\r\n    ngDoCheck() {\r\n        if (!this.container) {\r\n            console.error('No container in Three Viewer');\r\n            return;\r\n        }\r\n        const width: number = this.container.offsetWidth;\r\n        const height: number = this.container.offsetHeight;\r\n\r\n        // this is when dimensions change\r\n        if (width !== this._width || height !== this._height) {\r\n            this._width = width;\r\n            this._height = height;\r\n            setTimeout(() => {\r\n                this._data_threejs._camera.aspect = this._width / this._height;\r\n                this._data_threejs._camera.updateProjectionMatrix();\r\n                this._data_threejs._renderer.setSize(this._width, this._height);\r\n                this.render(this);\r\n            }, 10);\r\n        }\r\n    }\r\n\r\n    // receive data -> model from gi-viewer component and update model in the scene\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        if (changes['model']) {\r\n            if (this.model) {\r\n                this.updateModel(this.model);\r\n            }\r\n        }\r\n        if (changes['attr_table_select']) {\r\n            if (this.attr_table_select) {\r\n                this.attrTableSelect(this.attr_table_select);\r\n            }\r\n        }\r\n    }\r\n\r\n    attrTableSelect(attrib: { action: string, ent_type: string, id: number }) {\r\n        sessionStorage.setItem('mpm_changetab', JSON.stringify(false));\r\n        if (attrib.action === 'select') {\r\n            switch (attrib.ent_type) {\r\n                case EEntTypeStr[EEntType.POSI]:\r\n                    this.selectPositions(attrib.id, null, null, attrib.ent_type + attrib.id);\r\n                    break;\r\n                case EEntTypeStr[EEntType.VERT]:\r\n                    this.selectVertex(attrib.id, null, null, attrib.ent_type + attrib.id);\r\n                    break;\r\n                case EEntTypeStr[EEntType.EDGE]:\r\n                    this.selectEdge(attrib.id);\r\n                    break;\r\n                case EEntTypeStr[EEntType.WIRE]:\r\n                    this.selectWire(attrib.id);\r\n                    break;\r\n                case EEntTypeStr[EEntType.FACE]:\r\n                    this.selectFace(attrib.id);\r\n                    break;\r\n                case EEntTypeStr[EEntType.PGON]:\r\n                    this.selectPGon(attrib.id);\r\n                    break;\r\n                case EEntTypeStr[EEntType.PLINE]:\r\n                    this.selectPLine(attrib.id);\r\n                    break;\r\n                case EEntTypeStr[EEntType.POINT]:\r\n                    this.selectPoint(attrib.id);\r\n                    break;\r\n                case EEntTypeStr[EEntType.COLL]:\r\n                    this.chooseColl(attrib.id);\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        } else if (attrib.action === 'unselect') {\r\n            if (attrib.ent_type === EEntTypeStr[EEntType.COLL]) {\r\n                const coll_children = this.dataService.selected_coll.get(attrib.ent_type + attrib.id);\r\n                if (coll_children && coll_children.length) {\r\n                    coll_children.forEach(child => {\r\n                        this.unselectGeom(child, attrib.ent_type, true);\r\n                    });\r\n                    this.dataService.selected_ents.get(EEntTypeStr[EEntType.COLL]).delete(attrib.ent_type + attrib.id);\r\n                }\r\n            } else {\r\n                this.unselectGeom(attrib.ent_type + attrib.id, attrib.ent_type, true);\r\n            }\r\n        }\r\n        this.render(this);\r\n    }\r\n\r\n    /**\r\n     * Update the model in the viewer.\r\n     */\r\n    public async updateModel(model: GIModel) {\r\n        this._data_threejs = this.dataService.getThreejsScene();\r\n        if (!model) {\r\n            console.warn('Model or Scene not defined.');\r\n            this._no_model = true;\r\n            return;\r\n        } else {\r\n            if (model !== this._data_threejs._model) {\r\n                this._data_threejs._model = model;\r\n                try {\r\n                    // to be completed and test\r\n                    // this._data_threejs.disposeWebGL();\r\n                    // add geometry to the scene\r\n                    this._data_threejs.addGeometry(model, this.container);\r\n                    // this.resetTable();\r\n                    if (localStorage.getItem('gi_summary')) {\r\n                        this.giSummary = JSON.parse(localStorage.getItem('gi_summary'));\r\n                    }\r\n                    this._model_error = false;\r\n                    this._no_model = false;\r\n\r\n                    // Show Flowchart Selected Entities\r\n                    const selected = this.model.geom.selected;\r\n                    if (selected.length) {\r\n                        let selectingType;\r\n                        selected.forEach(s => {\r\n                            const type = EEntTypeStr[s[0]], id = Number(s[1]);\r\n                            this.attrTableSelect({ action: 'select', ent_type: type, id: id });\r\n                            this.dataService.selected_ents.get(type).set(`${type}${id}`, id);\r\n                            selectingType = s[0];\r\n                        });\r\n                        this.SelectingEntityType = this.selections.find(selection => selection.id === EEntTypeStr[selectingType]);\r\n\r\n                        sessionStorage.setItem('mpm_showSelected', JSON.stringify(true));\r\n                        sessionStorage.setItem('mpm_changetab', JSON.stringify(true));\r\n                        localStorage.setItem('mpm_attrib_current_tab', selectingType.toString());\r\n                        console.log(selectingType.toString());\r\n                        this.refreshTable(event);\r\n                    } else {\r\n                        this.dataService.clearAll();\r\n                        sessionStorage.setItem('mpm_showSelected', JSON.stringify(false));\r\n                        sessionStorage.setItem('mpm_changetab', JSON.stringify(false));\r\n                        this.refreshTable(event);\r\n                    }\r\n                    this.render(this);\r\n                } catch (ex) {\r\n                    console.error('Error displaying model:', ex);\r\n                    this._model_error = true;\r\n                    this._data_threejs._text = ex;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    // private initRaycaster(event) {\r\n    //     const scene = this._data_threejs;\r\n    //     scene._mouse.x = (event.offsetX / scene._renderer.domElement.clientWidth) * 2 - 1;\r\n    //     scene._mouse.y = - (event.offsetY / scene._renderer.domElement.clientHeight) * 2 + 1;\r\n    //     scene._raycaster.setFromCamera(scene._mouse, scene._camera);\r\n    //     return scene._raycaster.intersectObjects(scene.sceneObjs);\r\n    // }\r\n\r\n    onMouseUp(event) {\r\n        if (event.target.tagName !== 'CANVAS') {\r\n            return null;\r\n        } else {\r\n            if (this.dragHash < 10) {\r\n                this.onUserAction(event);\r\n            } else {\r\n                // this._data_threejs._controls.enabled = true;\r\n            }\r\n            this.isDown = false;\r\n        }\r\n    }\r\n\r\n    public onMouseMove(event) {\r\n        const body = document.getElementsByTagName('body');\r\n\r\n        if (event.target.tagName !== 'CANVAS') {\r\n            body[0].style.cursor = 'default';\r\n            // if (this.mouse_label !== null) {\r\n            //     this.mouse_label.style.display = 'none';\r\n            // }\r\n            return null;\r\n        } else {\r\n            const intersects = this.threeJSViewerService.initRaycaster(event);\r\n            if (intersects && intersects.length > 0) {\r\n                body[0].style.cursor = 'pointer';\r\n                // if (this.mouse_label !== null) {\r\n                //     const x = event.clientX, y = event.clientY;\r\n                //     this.mouse_label.style.top = y + 'px';\r\n                //     this.mouse_label.style.left = (x + 15) + 'px';\r\n                //     this.mouse_label.style.display = 'block';\r\n                //     this.mouse_label.innerHTML = mouseLabel[intersects[0].object.type];\r\n                // }\r\n            } else {\r\n                body[0].style.cursor = 'default';\r\n                // if (this.mouse_label !== null) {\r\n                //     this.mouse_label.style.display = 'none';\r\n                // }\r\n            }\r\n\r\n            if (!this.isDown) { return; }\r\n\r\n            // Put your mousemove stuff here\r\n            const mouseX = event.clientX - event.target.getBoundingClientRect().left;\r\n            const mouseY = event.clientY - event.target.getBoundingClientRect().top;\r\n            const dx = mouseX - this.lastX;\r\n            const dy = mouseY - this.lastY;\r\n            this.lastX = mouseX;\r\n            this.lastY = mouseY;\r\n\r\n            // accumulate the drag distance\r\n            // (used in mouseup to see if this is a drag or click)\r\n            this.dragHash += Math.abs(dx) + Math.abs(dy);\r\n            if (this.dragHash > 4) {\r\n                // dragging\r\n            }\r\n        }\r\n    }\r\n\r\n    onMouseDown(event) {\r\n        if (event.target.tagName !== 'CANVAS') {\r\n            return null;\r\n        } else {\r\n            event.stopPropagation();\r\n\r\n            this.lastX = event.clientX - event.target.getBoundingClientRect().left;\r\n            this.lastY = event.clientY - event.target.getBoundingClientRect().top;\r\n\r\n            // Put your mousedown stuff here\r\n            this.dragHash = 0;\r\n            this.isDown = true;\r\n        }\r\n    }\r\n\r\n    onKeyDown(event) {\r\n        const scene = this._data_threejs;\r\n        // keyboard control for camera\r\n        scene.onWindowKeyPress(event);\r\n        if (event.shiftKey) {\r\n            this.shiftKeyPressed = true;\r\n        }\r\n        this.render(this);\r\n    }\r\n\r\n    onKeyUp(event) {\r\n        this.shiftKeyPressed = false;\r\n    }\r\n\r\n    public onUserAction(event) {\r\n        // get entities for mouse event\r\n        const intersects = this.threeJSViewerService.initRaycaster(event);\r\n\r\n        // check intersect exist\r\n        if (intersects.length > 0) {\r\n            if (event.which === 1) {\r\n                // check mouse event triggered in THREE viewer, then enable dropdown menu\r\n                if (event.target.tagName === 'CANVAS') {\r\n                    const pos_x = event.clientX - event.target.getBoundingClientRect().left;\r\n                    const pos_y = event.clientY - event.target.getBoundingClientRect().top;\r\n                    this.dropdownPosition = { x: pos_x, y: pos_y };\r\n                }\r\n                this.selectObj(intersects[0]);\r\n            }\r\n        } else {\r\n            if (event.target.tagName === 'CANVAS') {\r\n                this.unselectAll();\r\n                if (event.target.tagName !== 'OL') {\r\n                    // not clicking on Menu item, hide dropdown menu\r\n                    this.dropdown.visible = false;\r\n                    // return;\r\n                }\r\n            }\r\n        }\r\n        this.refreshTable(event);\r\n    }\r\n\r\n    private refreshTable(event: Event) {\r\n        this.eventClicked.emit(event);\r\n    }\r\n\r\n    private resetTable() {\r\n        this.resetTableEvent.emit();\r\n    }\r\n\r\n    private unselectAll() {\r\n        const scene = this._data_threejs;\r\n        const selectings = Array.from(scene.selected_geoms.keys());\r\n        for (const selecting of selectings) {\r\n            scene.unselectObj(selecting, this.container);\r\n        }\r\n        document.querySelectorAll('[id^=textLabel_]').forEach(value => {\r\n            this.container.removeChild(value);\r\n        });\r\n        this._data_threejs._textLabels.clear();\r\n\r\n        this.dataService.selected_ents.forEach(map => {\r\n            map.clear();\r\n        });\r\n        this.refreshTable(event);\r\n        scene.sceneObjsSelected.clear();\r\n        // if (this.SelectingEntityType.id === EEntTypeStr[EEntType.COLL]) {\r\n        //     document.getElementById('executeButton').click();\r\n        // }\r\n        const positions = Array.from(scene.selected_positions.keys());\r\n        for (const posi of positions) {\r\n            scene.unselectObjGroup(posi, this.container, 'positions');\r\n        }\r\n\r\n        const vertex = Array.from(scene.selected_vertex.keys());\r\n        for (const vert of vertex) {\r\n            scene.unselectObjGroup(vert, this.container, 'vertex');\r\n        }\r\n\r\n        const edges = Array.from(scene.selected_face_edges.keys());\r\n        for (const edge of edges) {\r\n            scene.unselectObjGroup(edge, this.container, 'face_edges');\r\n        }\r\n\r\n        const wires = Array.from(scene.selected_face_wires.keys());\r\n        for (const wire of wires) {\r\n            scene.unselectObjGroup(wire, this.container, 'face_wires');\r\n        }\r\n\r\n        this.render(this);\r\n    }\r\n\r\n    private getSelectingEntityType() {\r\n        if (localStorage.getItem('mpm_selecting_entity_type') != null) {\r\n            this.SelectingEntityType = JSON.parse(localStorage.getItem('mpm_selecting_entity_type'));\r\n        }\r\n    }\r\n\r\n    private selectObj(intersect0: THREE.Intersection) {\r\n        const scene = this._data_threejs;\r\n        this.getSelectingEntityType();\r\n        switch (this.SelectingEntityType.id) {\r\n            case EEntTypeStr[EEntType.POSI]:\r\n                if (intersect0.object.type === 'Points') {\r\n                    const posi = scene.posis_map.get(intersect0.index);\r\n                    const ent_id = `${EEntTypeStr[EEntType.POSI]}${posi}`;\r\n                    if (scene.selected_geoms.has(ent_id)) {\r\n                        this.unselectGeom(ent_id, EEntTypeStr[EEntType.POSI], true);\r\n                    } else {\r\n                        if (!this.shiftKeyPressed) {\r\n                            this.unselectAll();\r\n                        }\r\n                        this.selectPositions(posi, null, null, ent_id);\r\n                    }\r\n                } else if (intersect0.object.type === 'LineSegments') {\r\n                    const edge = scene.edge_select_map.get(intersect0.index / 2);\r\n                    const ent_id = `_e_posi${edge}`;\r\n                    if (scene.selected_positions.has(ent_id)) {\r\n                        this.unselectGeom(ent_id, EEntTypeStr[EEntType.POSI]);\r\n                    } else {\r\n                        if (!this.shiftKeyPressed) {\r\n                            this.unselectAll();\r\n                        }\r\n                        this.selectPositions(null, edge, null, ent_id);\r\n                    }\r\n                } else if (intersect0.object.type === 'Mesh') {\r\n                    const tri = scene.tri_select_map.get(intersect0.faceIndex);\r\n                    const face = this.model.geom.query.navTriToFace(tri);\r\n                    const ent_id = `_f_posi${face}`;\r\n                    if (scene.selected_positions.has(ent_id)) {\r\n                        this.unselectGeom(ent_id, EEntTypeStr[EEntType.POSI]);\r\n                    } else {\r\n                        if (!this.shiftKeyPressed) {\r\n                            this.unselectAll();\r\n                        }\r\n                        this.selectPositions(null, null, face, ent_id);\r\n                    }\r\n                }\r\n                break;\r\n            case EEntTypeStr[EEntType.VERT]:\r\n                if (intersect0.object.type === 'Points') {\r\n                    const vert = scene.vertex_map.get(intersect0.index);\r\n                    const verts = this.model.geom.query.navPosiToVert(intersect0.index);\r\n                    let point: number;\r\n                    if (verts.length > 1) {\r\n                        this.dropdown.setItems(verts, EEntTypeStr[EEntType.VERT]);\r\n                        this.dropdown.visible = true;\r\n                        this.dropdown.position = this.dropdownPosition;\r\n                    } else {\r\n                        point = vert;\r\n                    }\r\n                    const ent_id = `${EEntTypeStr[EEntType.VERT]}${point}`;\r\n                    if (scene.selected_geoms.has(ent_id)) {\r\n                        this.unselectGeom(ent_id, EEntTypeStr[EEntType.VERT], true);\r\n                    } else {\r\n                        if (!this.shiftKeyPressed) {\r\n                            this.unselectAll();\r\n                        }\r\n                        this.selectVertex(point, null, null, ent_id);\r\n                    }\r\n                } else if (intersect0.object.type === 'LineSegments') {\r\n                    const edge = scene.edge_select_map.get(intersect0.index / 2);\r\n                    const ent_id = `_e_v${edge}`;\r\n                    if (scene.selected_vertex.has(ent_id)) {\r\n                        this.unselectGeom(ent_id, EEntTypeStr[EEntType.VERT]);\r\n                    } else {\r\n                        if (!this.shiftKeyPressed) {\r\n                            this.unselectAll();\r\n                        }\r\n                        this.selectVertex(null, edge, null, ent_id);\r\n                    }\r\n                } else if (intersect0.object.type === 'Mesh') {\r\n                    const tri = scene.tri_select_map.get(intersect0.faceIndex);\r\n                    const face = this.model.geom.query.navTriToFace(tri);\r\n                    const ent_id = `_f_v${face}`;\r\n                    if (scene.selected_vertex.has(ent_id)) {\r\n                        this.unselectGeom(ent_id, EEntTypeStr[EEntType.VERT]);\r\n                    } else {\r\n                        if (!this.shiftKeyPressed) {\r\n                            this.unselectAll();\r\n                        }\r\n                        this.selectVertex(null, null, face, ent_id);\r\n                    }\r\n                }\r\n                break;\r\n            case EEntTypeStr[EEntType.COLL]:\r\n                if (!this.shiftKeyPressed) {\r\n                    this.unselectAll();\r\n                }\r\n                this.selectColl(intersect0, intersect0.object.type);\r\n                break;\r\n            case EEntTypeStr[EEntType.FACE]:\r\n                if (intersect0.object.type === 'Mesh') {\r\n                    const tri = scene.tri_select_map.get(intersect0.faceIndex);\r\n                    const face = this.model.geom.query.navTriToFace(tri);\r\n                    const ent_id = `${EEntTypeStr[EEntType.FACE]}${face}`;\r\n                    if (scene.selected_geoms.has(ent_id)) {\r\n                        this.unselectGeom(ent_id, EEntTypeStr[EEntType.FACE], true);\r\n                    } else {\r\n                        if (!this.shiftKeyPressed) {\r\n                            this.unselectAll();\r\n                        }\r\n                        this.selectFace(face);\r\n                    }\r\n                } else {\r\n                    this.showMessages('Faces');\r\n                }\r\n                break;\r\n            case EEntTypeStr[EEntType.PGON]:\r\n                if (intersect0.object.type === 'Mesh') {\r\n                    const tri = scene.tri_select_map.get(intersect0.faceIndex);\r\n                    const face = this.model.geom.query.navTriToFace(tri);\r\n                    const pgon = this.model.geom.query.navFaceToPgon(face);\r\n                    const ent_id = `${EEntTypeStr[EEntType.PGON]}${pgon}`;\r\n                    if (scene.selected_geoms.has(ent_id)) {\r\n                        this.unselectGeom(ent_id, EEntTypeStr[EEntType.PGON], true);\r\n                    } else {\r\n                        if (!this.shiftKeyPressed) {\r\n                            this.unselectAll();\r\n                        }\r\n                        this.selectPGon(face);\r\n                    }\r\n                } else {\r\n                    this.showMessages('Polygons');\r\n                }\r\n                break;\r\n            case EEntTypeStr[EEntType.EDGE]:\r\n                if (intersect0.object.type === 'LineSegments') {\r\n                    const edge = scene.edge_select_map.get(intersect0.index / 2);\r\n                    const ent_id = `${EEntTypeStr[EEntType.EDGE]}${edge}`;\r\n                    if (scene.selected_geoms.has(ent_id)) {\r\n                        this.unselectGeom(ent_id, EEntTypeStr[EEntType.EDGE], true);\r\n                    } else {\r\n                        if (!this.shiftKeyPressed) {\r\n                            this.unselectAll();\r\n                        }\r\n                        this.selectEdge(edge);\r\n                    }\r\n                } else if (intersect0.object.type === 'Mesh') {\r\n                    const tri = scene.tri_select_map.get(intersect0.faceIndex);\r\n                    const face = this.model.geom.query.navTriToFace(tri);\r\n                    const ent_id = `${EEntTypeStr[EEntType.FACE]}${face}`;\r\n                    if (scene.selected_face_edges.has(ent_id)) {\r\n                        this.unselectGeom(ent_id, 'face_edges');\r\n                    } else {\r\n                        if (!this.shiftKeyPressed) {\r\n                            this.unselectAll();\r\n                        }\r\n                        this.selectEdgeByFace(face, ent_id);\r\n                    }\r\n                } else {\r\n                    this.showMessages('Edges');\r\n                }\r\n                break;\r\n            case EEntTypeStr[EEntType.WIRE]:\r\n                if (intersect0.object.type === 'LineSegments') {\r\n                    const edge = scene.edge_select_map.get(intersect0.index / 2),\r\n                        wire = this.model.geom.query.navEdgeToWire(edge);\r\n                    const ent_id = `${EEntTypeStr[EEntType.WIRE]}${edge}`;\r\n                    if (scene.selected_geoms.has(ent_id)) {\r\n                        this.unselectGeom(ent_id, EEntTypeStr[EEntType.WIRE], true);\r\n                    } else {\r\n                        if (!this.shiftKeyPressed) {\r\n                            this.unselectAll();\r\n                        }\r\n                        this.selectWire(wire);\r\n                    }\r\n                } else if (intersect0.object.type === 'Mesh') {\r\n                    const tri = scene.tri_select_map.get(intersect0.faceIndex);\r\n                    const face = this.model.geom.query.navTriToFace(tri);\r\n                    const ent_id = `${EEntTypeStr[EEntType.FACE]}${face}`;\r\n                    if (scene.selected_face_wires.has(ent_id)) {\r\n                        this.unselectGeom(ent_id, 'face_wires');\r\n                    } else {\r\n                        if (!this.shiftKeyPressed) {\r\n                            this.unselectAll();\r\n                        }\r\n                        this.selectWireByFace(face, ent_id);\r\n                    }\r\n                } else {\r\n                    this.showMessages('Wires');\r\n                }\r\n                break;\r\n            case EEntTypeStr[EEntType.PLINE]:\r\n                if (intersect0.object.type === 'LineSegments') {\r\n                    const edge = scene.edge_select_map.get(intersect0.index / 2);\r\n                    const wire = this.model.geom.query.navEdgeToWire(edge);\r\n                    const pline = this.model.geom.query.navWireToPline(wire);\r\n                    const ent_id = `${EEntTypeStr[EEntType.PLINE]}${pline}`;\r\n                    if (scene.selected_geoms.has(ent_id)) {\r\n                        this.unselectGeom(ent_id, EEntTypeStr[EEntType.PLINE], true);\r\n                    } else {\r\n                        if (!this.shiftKeyPressed) {\r\n                            this.unselectAll();\r\n                        }\r\n                        if (pline) {\r\n                            this.selectPLine(pline);\r\n                        } else {\r\n                            this.showMessages('Selection is not a Polyline', 'custom');\r\n                        }\r\n                    }\r\n                } else {\r\n                    this.showMessages('Polylines');\r\n                }\r\n                break;\r\n            case EEntTypeStr[EEntType.POINT]:\r\n                if (intersect0.object.type === 'Points') {\r\n                    const vert = this.model.geom.query.navPosiToVert(intersect0.index);\r\n                    const _point = this.model.geom.query.navVertToPoint(vert[0]);\r\n                    const point = scene.point_select_map.get(_point);\r\n                    const ent_id = `${EEntTypeStr[EEntType.POINT]}${point}`;\r\n                    if (scene.selected_geoms.has(ent_id)) {\r\n                        this.unselectGeom(ent_id, EEntTypeStr[EEntType.POINT], true);\r\n                    } else {\r\n                        if (!this.shiftKeyPressed) {\r\n                            this.unselectAll();\r\n                        }\r\n                        if (point) {\r\n                            this.selectPoint(point);\r\n                        } else {\r\n                            this.showMessages('Selection is not a Point', 'custom');\r\n                        }\r\n                    }\r\n                } else {\r\n                    this.showMessages('Points');\r\n                }\r\n                break;\r\n            default:\r\n                this.showMessages('Please choose an Entity type.', 'custom');\r\n                break;\r\n        }\r\n        this.render(this);\r\n    }\r\n\r\n    private showMessages(msg: string, mode: string = 'notice') {\r\n        switch (mode) {\r\n            case 'custom':\r\n                this.message = msg;\r\n                break;\r\n            case 'notice':\r\n                this.message = `Please Select ${msg}`;\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        this.messageVisible = true;\r\n        setTimeout(() => {\r\n            this.messageVisible = false;\r\n        }, 3000);\r\n    }\r\n\r\n    private selectPositions(point: number = null, edge: number = null, face: number = null, parent_ent_id: string) {\r\n        const ent_type_str = EEntTypeStr[EEntType.POSI];\r\n        const scene = this._data_threejs;\r\n        const posi_ent = this.dataService.selected_ents.get(ent_type_str);\r\n        if (point !== null) {\r\n            const position = this.model.attribs.query.getPosiCoords(point);\r\n            const ent_id = parent_ent_id;\r\n            const labelText = this.indexAsLabel(ent_type_str, ent_id, point, EEntType.POSI);\r\n            scene.selectObjPosition(null, ent_id, position, this.container, labelText);\r\n            posi_ent.set(ent_id, point);\r\n            this.dataService.selected_positions.set(`${parent_ent_id}`, [ent_id]);\r\n        } else if (edge !== null) {\r\n            const verts = this.model.geom.query.navEdgeToVert(edge);\r\n            const posis = verts.map(v => this.model.geom.query.navVertToPosi(v));\r\n            const children = [];\r\n            posis.map(posi => {\r\n                const ent_id = `${ent_type_str}${posi}`;\r\n                const position = this.model.attribs.query.getPosiCoords(posi);\r\n                const labelText = this.indexAsLabel(ent_type_str, ent_id, posi, EEntType.POSI);\r\n                scene.selectObjPosition(parent_ent_id, ent_id, position, this.container, labelText);\r\n                posi_ent.set(ent_id, posi);\r\n                children.push(ent_id);\r\n            });\r\n            this.dataService.selected_positions.set(`${parent_ent_id}`, children);\r\n        } else if (face !== null) {\r\n            const tris = this.model.geom.query.navFaceToTri(face),\r\n                posis = tris.map(tri => this.model.geom.query.navAnyToPosi(EEntType.TRI, tri)),\r\n                posi_flat = [].concat(...posis);\r\n\r\n            const uniqPositions = this.uniq(posi_flat);\r\n            const children = [];\r\n            uniqPositions.map(posi => {\r\n                const ent_id = `${ent_type_str}${posi}`;\r\n                const position = this.model.attribs.query.getPosiCoords(posi);\r\n                const labelText = this.indexAsLabel(ent_type_str, ent_id, posi, EEntType.POSI);\r\n                scene.selectObjPosition(parent_ent_id, ent_id, position, this.container, labelText);\r\n                posi_ent.set(ent_id, posi);\r\n                children.push(ent_id);\r\n            });\r\n            this.dataService.selected_positions.set(`${parent_ent_id}`, children);\r\n        }\r\n    }\r\n\r\n    private uniq(a) {\r\n        const seen = {};\r\n        return a.filter(function (item) {\r\n            return seen.hasOwnProperty(item) ? false : (seen[item] = true);\r\n        });\r\n    }\r\n\r\n    private selectVertex(point: number = null, edge: number = null, face: number = null, parent_ent_id: string) {\r\n        const ent_type_str = EEntTypeStr[EEntType.VERT];\r\n        const posi_ent = this.dataService.selected_ents.get(ent_type_str);\r\n        const scene = this._data_threejs;\r\n        if (point !== null) {\r\n            const position = this.model.attribs.query.getVertCoords(point);\r\n            const ent_id = parent_ent_id;\r\n            const labelText = this.indexAsLabel(ent_type_str, ent_id, point, EEntType.POSI);\r\n            scene.selectObjVetex(null, ent_id, position, this.container, labelText);\r\n            posi_ent.set(ent_id, point);\r\n            this.dataService.selected_vertex.set(`${parent_ent_id}`, [ent_id]);\r\n        } else if (edge !== null) {\r\n            const verts = this.model.geom.query.navEdgeToVert(edge);\r\n            const children = [];\r\n            verts.map(vert => {\r\n                const ent_id = `${ent_type_str}${vert}`;\r\n                const position = this.model.attribs.query.getVertCoords(vert);\r\n                const labelText = this.indexAsLabel(ent_type_str, ent_id, vert, EEntType.VERT);\r\n                scene.selectObjVetex(parent_ent_id, ent_id, position, this.container, labelText);\r\n                posi_ent.set(ent_id, vert);\r\n                children.push(ent_id);\r\n            });\r\n            this.dataService.selected_vertex.set(`${parent_ent_id}`, children);\r\n\r\n        } else if (face !== null) {\r\n            const tris = this.model.geom.query.navFaceToTri(face),\r\n                verts = tris.map(tri => this.model.geom.query.navTriToVert(tri)),\r\n                verts_flat = [].concat(...verts);\r\n\r\n            const uniqVerts = this.uniq(verts_flat);\r\n            const children = [];\r\n            uniqVerts.map(vert => {\r\n                const ent_id = `${ent_type_str}${vert}`;\r\n                const position = this.model.attribs.query.getVertCoords(vert);\r\n                const labelText = this.indexAsLabel(ent_type_str, ent_id, vert, EEntType.VERT);\r\n                scene.selectObjVetex(parent_ent_id, ent_id, position, this.container, labelText);\r\n                posi_ent.set(ent_id, vert);\r\n                children.push(ent_id);\r\n            });\r\n            this.dataService.selected_vertex.set(`${parent_ent_id}`, children);\r\n        }\r\n    }\r\n\r\n    private unselectGeom(ent_id: string, ent_type_str: string, direct = false) {\r\n        const scene = this._data_threejs;\r\n        if (!direct) {\r\n            if (ent_type_str === EEntTypeStr[EEntType.POSI]) {\r\n                scene.unselectObjGroup(ent_id, this.container, 'positions');\r\n                const children = this.dataService.selected_positions.get(ent_id);\r\n                children.forEach(c => {\r\n                    this.dataService.selected_ents.get(EEntTypeStr[EEntType.POSI]).delete(c);\r\n                });\r\n                this.dataService.selected_positions.delete(ent_id);\r\n\r\n            } else if (ent_type_str === EEntTypeStr[EEntType.VERT]) {\r\n                scene.unselectObjGroup(ent_id, this.container, 'vertex');\r\n                const children = this.dataService.selected_vertex.get(ent_id);\r\n                children.forEach(c => {\r\n                    this.dataService.selected_ents.get(EEntTypeStr[EEntType.VERT]).delete(c);\r\n                });\r\n                this.dataService.selected_vertex.delete(ent_id);\r\n\r\n            } else if (ent_type_str === 'face_edges') {\r\n                scene.unselectObjGroup(ent_id, this.container, 'face_edges');\r\n                const children = this.dataService.selected_face_edges.get(ent_id);\r\n                children.forEach(c => {\r\n                    this.dataService.selected_ents.get(EEntTypeStr[EEntType.EDGE]).delete(c);\r\n                });\r\n                this.dataService.selected_face_edges.delete(ent_id);\r\n\r\n            } else if (ent_type_str === 'face_wires') {\r\n                scene.unselectObjGroup(ent_id, this.container, 'face_wires');\r\n                const children = this.dataService.selected_face_wires.get(ent_id);\r\n                children.forEach(c => {\r\n                    this.dataService.selected_ents.get(EEntTypeStr[EEntType.WIRE]).delete(c);\r\n                });\r\n                this.dataService.selected_face_wires.delete(ent_id);\r\n            }\r\n        } else {\r\n            scene.unselectObj(ent_id, this.container);\r\n            this.dataService.selected_ents.get(ent_type_str).delete(ent_id);\r\n        }\r\n        this.render(this);\r\n        this.refreshTable(event);\r\n    }\r\n\r\n    private selectEdge(line: number) {\r\n        const ent_type_str = EEntTypeStr[EEntType.EDGE],\r\n            verts = this.model.geom.query.navEdgeToVert(line),\r\n            positions = verts.map(v => this.model.attribs.query.getVertCoords(v)),\r\n            posi_flat = [].concat(...positions),\r\n            ent_id = `${ent_type_str}${line}`;\r\n        const labelText = this.indexAsLabel(ent_type_str, ent_id, line, EEntType.EDGE);\r\n        this._data_threejs.selectObjLine(ent_id, [], posi_flat, this.container, labelText);\r\n        this.dataService.selected_ents.get(ent_type_str).set(ent_id, line);\r\n    }\r\n\r\n    private selectEdgeByFace(face: number, parent_ent_id: string) {\r\n        const ent_type_str = EEntTypeStr[EEntType.EDGE],\r\n            edges = this.model.geom.query.navAnyToAny(EEntType.FACE, EEntType.EDGE, face);\r\n        const children = [];\r\n        edges.map(edge => {\r\n            const ent_id = `${ent_type_str}${edge}`;\r\n            children.push(ent_id);\r\n            const vert = this.model.geom.query.navEdgeToVert(edge);\r\n            const position = [];\r\n            const indices = [];\r\n            vert.map((v, i) => {\r\n                position.push(this.model.attribs.query.getVertCoords(v));\r\n                indices.push(i);\r\n            });\r\n            const posi_flat = [].concat(...position);\r\n            const labelText = this.indexAsLabel(ent_type_str, ent_id, edge, EEntType.EDGE);\r\n            this._data_threejs.selectEdgeByFace(parent_ent_id, ent_id, indices, posi_flat, this.container, labelText);\r\n            this.dataService.selected_ents.get(ent_type_str).set(ent_id, edge);\r\n        });\r\n        this.dataService.selected_face_edges.set(`${parent_ent_id}`, children);\r\n    }\r\n\r\n    private selectWire(wire: number) {\r\n        const ent_type_str = EEntTypeStr[EEntType.WIRE],\r\n            edges = this.model.geom.query.navWireToEdge(wire),\r\n            verts = edges.map(e => this.model.geom.query.navEdgeToVert(e)),\r\n            verts_flat = [].concat(...[].concat(...verts)),\r\n            indices = [],\r\n            positions = [];\r\n        verts_flat.map((v, i) => {\r\n            positions.push(this.model.attribs.query.getVertCoords(v));\r\n            indices.push(i);\r\n        });\r\n        const posi_flat = [].concat(...positions),\r\n            ent_id = `${ent_type_str}${wire}`;\r\n        const labelText = this.indexAsLabel(ent_type_str, ent_id, wire, EEntType.WIRE);\r\n        this._data_threejs.selectObjLine(ent_id, indices, posi_flat, this.container, labelText);\r\n        this.dataService.selected_ents.get(ent_type_str).set(ent_id, wire);\r\n    }\r\n\r\n    private selectWireByFace(face: number, parent_ent_id: string) {\r\n        const ent_type_str = EEntTypeStr[EEntType.WIRE],\r\n            wires = this.model.geom.query.navFaceToWire(face);\r\n        const children = [];\r\n        wires.map(wire => {\r\n            const ent_id = `${ent_type_str}${wire}`;\r\n            children.push(ent_id);\r\n            const edges = this.model.geom.query.navWireToEdge(wire),\r\n                verts = edges.map(e => this.model.geom.query.navEdgeToVert(e));\r\n            // @ts-ignore\r\n            const verts_flat = verts.flat(1),\r\n                indices = [],\r\n                positions = [];\r\n            verts_flat.map((v, i) => {\r\n                positions.push(this.model.attribs.query.getVertCoords(v));\r\n                indices.push(i);\r\n            });\r\n            const posi_flat = [].concat(...positions);\r\n            const labelText = this.indexAsLabel(ent_type_str, ent_id, wire, EEntType.WIRE);\r\n            this._data_threejs.selectWireByFace(parent_ent_id, ent_id, indices, posi_flat, this.container, labelText);\r\n            this.dataService.selected_ents.get(ent_type_str).set(ent_id, wire);\r\n        });\r\n        this.dataService.selected_face_wires.set(`${parent_ent_id}`, children);\r\n    }\r\n\r\n    private selectFace(face: number) {\r\n        const ent_type_str = EEntTypeStr[EEntType.FACE],\r\n            tri = this.model.geom.query.navFaceToTri(face),\r\n            verts = tri.map(index => this.model.geom.query.navTriToVert(index)),\r\n            verts_flat = [].concat(...verts),\r\n            posis = verts_flat.map(v => this.model.geom.query.navAnyToPosi(EEntType.VERT, v)),\r\n            posis_flat = [].concat(...posis),\r\n            tri_indices = [],\r\n            positions = [];\r\n        posis_flat.map((posi, index) => {\r\n            positions.push(this.model.attribs.query.getPosiCoords(posi));\r\n            tri_indices.push(index);\r\n        });\r\n        const posi_flat = [].concat(...positions),\r\n            ent_id = `${ent_type_str}${face}`;\r\n\r\n        const labelText = this.indexAsLabel(ent_type_str, ent_id, face, EEntType.FACE);\r\n        this._data_threejs.selectObjFace(ent_id, tri_indices, posi_flat, this.container, labelText);\r\n    }\r\n\r\n    private indexAsLabel(ent_type_str: string, ent_id: string, id: number, type: EEntType) {\r\n        let indexAsLabel;\r\n        const showSelected = JSON.parse(sessionStorage.getItem('mpm_showSelected'));\r\n        this.dataService.selected_ents.get(ent_type_str).set(ent_id, id);\r\n        if (showSelected) {\r\n            const selected_ents = this.dataService.selected_ents.get(ent_type_str);\r\n            const selected_ents_sorted = sortByKey(selected_ents);\r\n            const arr = [];\r\n            selected_ents_sorted.forEach(ent => {\r\n                arr.push(ent);\r\n            });\r\n            indexAsLabel = String(arr.findIndex(ent => ent === id));\r\n            sessionStorage.setItem('mpm_selected_ents_arr', JSON.stringify(arr));\r\n        } else {\r\n            indexAsLabel = String(this._data_threejs._model.attribs.threejs.getIdIndex(type, id));\r\n        }\r\n        return indexAsLabel;\r\n    }\r\n\r\n    private selectPoint(point: number) {\r\n        const ent_type_str = EEntTypeStr[EEntType.POINT];\r\n        const result = this.getPointPosis(point, null);\r\n        const point_indices = result.point_indices;\r\n        const point_posi = result.posi_flat;\r\n        const ent_id = `${ent_type_str}${point}`;\r\n        const labelText = this.indexAsLabel(ent_type_str, ent_id, point, EEntType.POINT);\r\n        this._data_threejs.selectObjPoint(ent_id, point_indices, point_posi, this.container, labelText);\r\n        this.dataService.selected_ents.get(ent_type_str).set(ent_id, point);\r\n    }\r\n\r\n    private selectPLine(pline: number) {\r\n        const ent_type_str = EEntTypeStr[EEntType.PLINE];\r\n        const result = this.getPLinePosis(pline);\r\n        const ent_id = `${ent_type_str}${pline}`;\r\n        if (result) {\r\n            const posi_flat = result.posi_flat;\r\n            const indices = result.indices;\r\n            const labelText = this.indexAsLabel(ent_type_str, ent_id, pline, EEntType.PLINE);\r\n            this._data_threejs.selectObjLine(ent_id, indices, posi_flat, this.container, labelText);\r\n            this.dataService.selected_ents.get(ent_type_str).set(ent_id, pline);\r\n        } else {\r\n            this.showMessages('Please Select a Polyline', 'custom');\r\n        }\r\n    }\r\n\r\n    private selectPGon(face: number) {\r\n        const ent_type_str = EEntTypeStr[EEntType.PGON];\r\n        const result = this.getPGonPosis(face);\r\n        const posi_flat = result.posi_flat;\r\n        const tri_indices = result.indices;\r\n\r\n        const ent_id = `${ent_type_str}${face}`;\r\n        const labelText = this.indexAsLabel(ent_type_str, ent_id, face, EEntType.PGON);\r\n        this._data_threejs.selectObjFace(ent_id, tri_indices, posi_flat, this.container, labelText);\r\n        this.dataService.selected_ents.get(ent_type_str).set(ent_id, face);\r\n    }\r\n\r\n    /**\r\n     * get point positions for collections\r\n     * @param points\r\n     */\r\n\r\n    private getPointPosis(point1: number = null, points: number[] = null) {\r\n        let verts_flat: number[] = null;\r\n        if (point1 !== null) {\r\n            verts_flat = [this.model.geom.query.navPointToVert(point1)];\r\n        }\r\n        if (points !== null) {\r\n            const verts = points.map(p => this.model.geom.query.navPointToVert(p));\r\n            verts_flat = [].concat(...verts);\r\n        }\r\n\r\n        const point_indices: number[] = [];\r\n        const positions: Txyz[] = [];\r\n        verts_flat.map((v, i) => {\r\n            positions.push(this.model.attribs.query.getPosiCoords(v));\r\n            point_indices.push(i);\r\n        });\r\n        const posi_flat = [].concat(...positions);\r\n        const result = { posi_flat, point_indices };\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * get pline positions for selectPLine or collections\r\n     * @param wire1\r\n     * @param plines\r\n     */\r\n\r\n    private getPLinePosis(pline1: number = null, plines: number[] = null) {\r\n        let wires_flat: number[] = null;\r\n        if (pline1 !== null) {\r\n            wires_flat = [this.model.geom.query.navPlineToWire(pline1)];\r\n        }\r\n        if (plines !== null) {\r\n            const wires = plines.map(pl => this.model.geom.query.navPlineToWire(pl));\r\n            wires_flat = [].concat(...wires);\r\n        }\r\n\r\n        const edges = wires_flat.map(w => this.model.geom.query.navWireToEdge(w));\r\n        const edges_flat = [].concat(...edges);\r\n        const verts = edges_flat.map(e => this.model.geom.query.navEdgeToVert(e));\r\n        const verts_flat = [].concat(...[].concat(...verts));\r\n        const indices = [];\r\n        const positions = [];\r\n        verts_flat.map((v, i) => {\r\n            positions.push(this.model.attribs.query.getVertCoords(v));\r\n            indices.push(i);\r\n        });\r\n        const posi_flat = [].concat(...positions);\r\n        const result = { posi_flat, indices };\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * get pgon positions for selectPGon or collections\r\n     * @param face1\r\n     * @param pgons\r\n     */\r\n\r\n    private getPGonPosis(face1: number = null, pgons: number[] = null) {\r\n        let faces_flat: number[] = null;\r\n        if (face1 !== null) {\r\n            const _pgon = this.model.geom.query.navFaceToPgon(face1);\r\n            if (_pgon === undefined) {\r\n                return null;\r\n            }\r\n            faces_flat = [this.model.geom.query.navPgonToFace(_pgon)];\r\n        }\r\n        if (pgons !== null) {\r\n            const faces = pgons.map(pgon => this.model.geom.query.navPgonToFace(pgon));\r\n            faces_flat = [].concat(...faces);\r\n        }\r\n        const tris = faces_flat.map(face => this.model.geom.query.navFaceToTri(face));\r\n        const tris_flat = [].concat(...tris);\r\n        const verts = tris_flat.map(tri => this.model.geom.query.navTriToVert(tri));\r\n        const verts_flat = [].concat(...verts);\r\n        const posis = verts_flat.map(v => this.model.geom.query.navAnyToPosi(EEntType.VERT, v));\r\n        const posis_flat = [].concat(...posis);\r\n        const indices = [];\r\n        const positions = [];\r\n        posis_flat.map((posi, index) => {\r\n            positions.push(this.model.attribs.query.getPosiCoords(posi));\r\n            indices.push(index);\r\n        });\r\n        const posi_flat = [].concat(...positions);\r\n        const result = { posi_flat, indices };\r\n        return result;\r\n    }\r\n\r\n    private selectColl(object: THREE.Intersection, type) {\r\n        let colls = [];\r\n        if (type === 'Mesh') {\r\n            colls = this.model.geom.query.navAnyToColl(EEntType.TRI, object.faceIndex);\r\n        } else if (type === 'LineSegments') {\r\n            colls = this.model.geom.query.navAnyToColl(EEntType.EDGE, object.index / 2);\r\n        } else if (type === 'Points') {\r\n            const vert = this.model.geom.query.navPosiToVert(object.index);\r\n            const point = this.model.geom.query.navVertToPoint(vert[0]);\r\n            colls = this.model.geom.query.navAnyToColl(EEntType.POINT, point);\r\n        }\r\n        /**\r\n         * Show dropdown menu only when Entity belongs to more than 1 Collection.\r\n         */\r\n        if (this.dataService.selected_ents.get(EEntTypeStr[EEntType.COLL]).size === 0 && colls.length > 1) {\r\n            this.dropdown.setItems(colls, 'co');\r\n            this.dropdown.visible = true;\r\n            this.dropdown.position = this.dropdownPosition;\r\n        } else if (colls && colls.length === 1) {\r\n            this.chooseColl(colls[0]);\r\n        } else {\r\n            this.showMessages('No Collections Available', 'custom');\r\n        }\r\n    }\r\n\r\n    private chooseColl(id: number) {\r\n        const scene = this._data_threejs;\r\n        const coll_id = `${EEntTypeStr[EEntType.COLL]}${id}`;\r\n        const children = [];\r\n        const pgons = this.model.geom.query.navCollToPgon(id);\r\n        const pgons_flat = [].concat(...pgons);\r\n\r\n        if (pgons_flat.length) {\r\n            const pgonResult = this.getPGonPosis(null, pgons_flat);\r\n            const pgons_posi = pgonResult.posi_flat;\r\n            const pgons_indices = pgonResult.indices;\r\n\r\n            if (pgons_indices.length !== 0) {\r\n                // const attrib_val = this.model.attribs.query.getAttribValue(EEntType.COLL, EAttribNames.NAME, id);\r\n                // const selecting = attrib_val ? attrib_val.toString() : `${EEntType.COLL}${id}`;\r\n                const pgon_id = `${EEntTypeStr[EEntType.COLL]}_pg_${id}`;\r\n                scene.selectObjFace(pgon_id, pgons_indices, pgons_posi, this.container, false);\r\n                children.push(pgon_id);\r\n            }\r\n        }\r\n\r\n        const plines = this.model.geom.query.navCollToPline(id);\r\n        const plines_flat = [].concat(...plines);\r\n        if (plines_flat.length) {\r\n            const plineResult = this.getPLinePosis(null, plines_flat);\r\n            const plines_posi = plineResult.posi_flat;\r\n            const plines_indices = plineResult.indices;\r\n            if (plines_indices.length !== 0) {\r\n                const pline_id = `${EEntTypeStr[EEntType.COLL]}_pl_${id}`;\r\n                scene.selectObjLine(pline_id, plines_indices, plines_posi, this.container, false);\r\n                children.push(pline_id);\r\n            }\r\n        }\r\n\r\n        const points = this.model.geom.query.navCollToPoint(id);\r\n        const points_flat = [].concat(...points);\r\n        if (points_flat.length) {\r\n            const pointResult = this.getPointPosis(null, points_flat);\r\n            const point_posi = pointResult.posi_flat;\r\n            const point_indices = pointResult.point_indices;\r\n            if (point_indices.length !== 0) {\r\n                const point_id = `${EEntTypeStr[EEntType.COLL]}_pt_${id}`;\r\n                scene.selectObjPoint(point_id, point_indices, point_posi, this.container, false);\r\n                children.push(point_id);\r\n            }\r\n        }\r\n\r\n        this.dataService.selected_ents.get(EEntTypeStr[EEntType.COLL]).set(coll_id, id);\r\n        this.dataService.selected_coll.set(coll_id, children);\r\n        this.refreshTable(null);\r\n        this.render(this);\r\n    }\r\n\r\n    private chooseVertex(id: number) {\r\n        const ent_type_str = EEntTypeStr[EEntType.VERT];\r\n        const posi_ent = this.dataService.selected_ents.get(ent_type_str);\r\n        const scene = this._data_threejs;\r\n        const date = new Date(), timestamp = date.getTime();\r\n        const position = this.model.attribs.query.getVertCoords(id);\r\n        const ent_id = `${ent_type_str}${id}`;\r\n        scene.selectObjVetex(`_single_v${timestamp}`, ent_id, position, this.container, true);\r\n        posi_ent.set(ent_id, id);\r\n        this.dataService.selected_vertex.set(`_single_v${timestamp}`, [ent_id]);\r\n        this.refreshTable(null);\r\n        this.render(this);\r\n    }\r\n\r\n    public zoomfit() {\r\n        this._data_threejs.lookAtObj(this._width);\r\n    }\r\n\r\n    private selectEntityType(selection: { id: string, name: string }) {\r\n        this.SelectingEntityType = selection;\r\n        localStorage.setItem('mpm_selecting_entity_type', JSON.stringify(selection));\r\n        this.selectDropdownVisible = false;\r\n    }\r\n\r\n    selectEntity(id: number) {\r\n        if (this.SelectingEntityType.id === EEntTypeStr[EEntType.COLL]) {\r\n            this.chooseColl(id);\r\n        } else if (this.SelectingEntityType.id === EEntTypeStr[EEntType.VERT]) {\r\n            this.chooseVertex(id);\r\n        }\r\n    }\r\n}\r\n\r\nenum mouseLabel {\r\n    Mesh = 'Polygon',\r\n    LineSegments = 'Polyline/',\r\n    Points = 'Point/Position'\r\n}\r\n","import { DataThreejs } from '../data/data.threejs';\r\nexport class ThreeJSViewerService {\r\n    DataThreejs: DataThreejs;\r\n    initRaycaster(event) {\r\n        const scene = this.DataThreejs;\r\n        const rect = scene._renderer.domElement.getBoundingClientRect();\r\n        scene._mouse.x = ((event.clientX - rect.left) / rect.width) * 2 - 1;\r\n        scene._mouse.y = - ((event.clientY - rect.top) / rect.height) * 2 + 1;\r\n        scene._raycaster.setFromCamera(scene._mouse, scene._camera);\r\n        return scene._raycaster.intersectObjects(scene.sceneObjs);\r\n    }\r\n}\r\n","module.exports = \"<div id=\\\"help-container\\\">\\r\\n    <h1 id = 'help-tab' (click)='openHelpMenu($event)'><span class='activeModName'>{{getActiveModule()||\\\"Select Module\\\"}}</span><span>▾</span></h1>\\r\\n    <div id=\\\"helpMenu\\\">\\r\\n        <ng-container *ngFor='let mod of Modules; let i = index'>\\r\\n            <li (click)=\\\"switchHelp(i)\\\">\\r\\n                {{mod.module}}\\r\\n            </li>\\r\\n        </ng-container>\\r\\n    </div>\\r\\n\\r\\n    <div class = 'container' *ngIf='output; else module_help'>\\r\\n        <h2><span>{{output.module}}</span>.{{output.name}}</h2>\\r\\n        <!--<h4>Module: <span>{{output.module}}</span></h4>-->\\r\\n        <div class = 'body--container'>\\r\\n            <div class = 'descr--container'>\\r\\n                <h5>Description:</h5>\\r\\n                <p *ngFor='let desc of output.description.split(\\\"~\\\")'>{{desc}}</p>\\r\\n            </div>\\r\\n    \\r\\n            <div class = 'param--container'>\\r\\n                <h5 *ngIf='output.parameters?.length > 0'>Parameters:</h5>\\r\\n                <ul class='params'>\\r\\n                    <ng-container *ngFor='let param of output.parameters'>\\r\\n                        <li *ngIf='param'>\\r\\n                            <div class = 'li--item'>\\r\\n                                <span>{{param.name}}: </span>{{param.description}}\\r\\n                            </div>\\r\\n                        </li>\\r\\n                    </ng-container>\\r\\n                </ul>\\r\\n            </div>        \\r\\n    \\r\\n            <!-- <p class='paramP' *ngFor='let param of output.parameters'>\\r\\n                <span>{{param.name}} - </span>{{param.description}}\\r\\n            </p> -->\\r\\n            \\r\\n            <div class = 'ret--container' *ngIf='output.returns'>\\r\\n                <h5>Returns:</h5>\\r\\n                <p>{{output.returns}}</p>\\r\\n            </div>\\r\\n\\r\\n            <div *ngIf='output.example' class = 'exam--container'>\\r\\n                <h5>Examples:</h5>\\r\\n                <div *ngFor='let ex of output.example; let i = index;' class = 'examp'>\\r\\n                    <ul>\\r\\n                        <li>{{ex}}</li>\\r\\n                        <p *ngIf='output.example_info'>{{output.example_info[i]}}</p>\\r\\n                    </ul>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n            <div *ngIf='output.example_link' class = 'exam--container'>\\r\\n                <h5>Example URLs:</h5>\\r\\n                <ul *ngFor='let ex of output.example_link; let i = index;'>\\r\\n                    <li>{{i+1}}) <a class='hyperlink' href={{urlString+ex.split()}} target=\\\"_blank\\\">{{ex.split('&node=')[0]}}</a></li>\\r\\n                </ul>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <ng-template #module_help>\\r\\n        <div class = 'container'> \\r\\n            <p class='moduleDesc' *ngIf='Modules[activeModIndex]?.description'>{{Modules[activeModIndex].description}}</p> <br>\\r\\n            <!--\\r\\n            <ng-container *ngIf='Modules[activeModIndex]?.description'>\\r\\n                <p class='moduleDesc' *ngFor='let txt of Modules[activeModIndex].description.split(\\\"~\\\")'>{{txt}}</p> <br>\\r\\n            </ng-container>\\r\\n            -->\\r\\n            <ng-container *ngFor='let func of getFuncs()'>\\r\\n                <hr>\\r\\n                <h2><span>{{func.module}}</span>.{{func.name}}</h2>\\r\\n                <!--<h4>Module: <span>{{func.module}}</span></h4>-->\\r\\n                <div class = 'body--container'>\\r\\n                    <div class = 'descr--container'>\\r\\n                        <h5>Description:</h5>\\r\\n                        <p *ngFor='let txt of func.description.split(\\\"~\\\")'>{{txt}}</p>\\r\\n                    </div>\\r\\n            \\r\\n                    <div class = 'param--container'>\\r\\n                        <h5 *ngIf='func.parameters?.length > 0'>Parameters:</h5>\\r\\n                        <ul class='params'>\\r\\n                            <ng-container *ngFor='let param of func.parameters'>\\r\\n                                <li *ngIf='param'>\\r\\n                                    <div class = 'li--item'>\\r\\n                                        <span>{{param.name}}: </span>{{param.description}}\\r\\n                                    </div>\\r\\n                                </li>\\r\\n                            </ng-container>\\r\\n                        </ul>\\r\\n                    </div>        \\r\\n            \\r\\n                    <!-- <p class='paramP' *ngFor='let param of func.parameters'>\\r\\n                        <span>{{param.name}} - </span>{{param.description}}\\r\\n                    </p> -->\\r\\n                    \\r\\n                    <div class = 'ret--container' *ngIf='func.returns'>\\r\\n                        <h5>Returns:</h5>\\r\\n                        <p>{{func.returns}}</p>\\r\\n                    </div>\\r\\n        \\r\\n                    <div *ngIf='func.example' class = 'exam--container'>\\r\\n                        <h5>Examples:</h5>\\r\\n                        <div *ngFor='let ex of func.example; let i = index;' class = 'examp'>\\r\\n                            <ul>\\r\\n                                <li>{{ex}}</li>\\r\\n                                <p *ngIf='func.example_info'>{{func.example_info[i]}}</p>\\r\\n                            </ul>\\r\\n                        </div>\\r\\n                    </div>\\r\\n        \\r\\n                    <div *ngIf='func.example_link' class = 'exam--container'>\\r\\n                        <h5>Example URLs:</h5>\\r\\n                        <ul *ngFor='let ex of func.example_link; let i = index;'>\\r\\n                            <li>{{i+1}}) <a class='hyperlink' href={{urlString+ex.split()}} target=\\\"_blank\\\">{{ex.split('&node=')[0]}}</a></li>\\r\\n                        </ul>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </ng-container>\\r\\n        </div>\\r\\n    </ng-template>\\r\\n</div>\\r\\n\"","module.exports = \"@import url(\\\"https://fonts.googleapis.com/css?family=Ubuntu+Mono\\\");\\n:host {\\n  height: 100%;\\n  width: 100%; }\\ndiv {\\n  font-family: sans-serif;\\n  color: #505050;\\n  width: 100%;\\n  padding-left: 10px; }\\nh5 {\\n  font-weight: 700;\\n  font-size: 12px; }\\n.funcDesc {\\n  font-weight: 600; }\\n.paramP {\\n  padding-left: 5px; }\\nspan {\\n  font-weight: 550;\\n  font-style: italic; }\\n#help-container {\\n  margin-top: 40px;\\n  padding: 0px;\\n  height: calc(100vh - 40px);\\n  width: 100%;\\n  min-width: -webkit-fit-content;\\n  min-width: -moz-fit-content;\\n  min-width: fit-content;\\n  overflow: auto;\\n  resize: none;\\n  background-color: transparent;\\n  color: #373737;\\n  border: none; }\\n.container {\\n  display: flex;\\n  flex-flow: column nowrap;\\n  justify-content: flex-start;\\n  box-sizing: border-box;\\n  height: -webkit-fit-content;\\n  height: -moz-fit-content;\\n  height: fit-content;\\n  width: 100%;\\n  min-width: 200px;\\n  padding: 15px; }\\n.body--container {\\n  padding: 6px 0px;\\n  border-top: 1px solid #808080; }\\n.descr--container, .param--container, .ret--container, .exam--container {\\n  padding: 0px;\\n  line-height: 15px;\\n  margin-bottom: 7.5px; }\\n.descr--container h5, .param--container h5, .ret--container h5, .exam--container h5 {\\n    margin-bottom: 3.75px; }\\n.descr--container ul, .param--container ul, .ret--container ul, .exam--container ul {\\n    margin: 0px;\\n    padding-left: 15px;\\n    background-color: transparent; }\\n.descr--container ul li, .param--container ul li, .ret--container ul li, .exam--container ul li {\\n      display: list-item; }\\n.descr--container ul li .li--item, .param--container ul li .li--item, .ret--container ul li .li--item, .exam--container ul li .li--item {\\n        display: flex;\\n        flex-flow: row nowrap;\\n        padding: 0px;\\n        font-style: normal;\\n        font-weight: 400; }\\n.descr--container ul li .li--item span, .param--container ul li .li--item span, .ret--container ul li .li--item span, .exam--container ul li .li--item span {\\n          margin-right: 2px;\\n          font-weight: 550; }\\n.descr--container ul li .li--item:hover, .param--container ul li .li--item:hover, .ret--container ul li .li--item:hover, .exam--container ul li .li--item:hover {\\n          background-color: transparent; }\\n.descr--container ul li:hover, .param--container ul li:hover, .ret--container ul li:hover, .exam--container ul li:hover {\\n        background-color: transparent; }\\n.exam--container h5 {\\n  margin-top: 3.75px; }\\n.exam--container .examp {\\n  padding: 0px; }\\n.exam--container .examp ul {\\n    margin-bottom: 6px;\\n    padding: 0px;\\n    background-color: transparent; }\\n.exam--container .examp ul li {\\n      display: flex;\\n      border: 1px solid #808080;\\n      color: #373737;\\n      font-style: normal;\\n      font-family: 'Ubuntu Mono';\\n      padding: 0px 0px 0px 2px;\\n      margin: 4px 0px;\\n      background-color: transparent !important; }\\n.exam--container .examp ul p {\\n      background-color: transparent !important; }\\n.hyperlink {\\n  color: #808080; }\\n.hyperlink :link {\\n    color: #808080; }\\n.hyperlink :visited {\\n    color: #999999; }\\n.hyperlink :hover {\\n    color: #B3B3B3; }\\nh1 {\\n  padding-left: 10px;\\n  font-size: 14px;\\n  font-weight: 600;\\n  line-height: 30px;\\n  cursor: pointer; }\\nh1 .activeModName {\\n    display: inline-block;\\n    min-width: 50px; }\\nh2 {\\n  padding: 0px;\\n  padding-bottom: 6px;\\n  font-size: 14px; }\\np {\\n  padding-bottom: 10px; }\\n.moduleDesc {\\n  font-size: 12px; }\\n#helpMenu {\\n  display: none;\\n  position: absolute;\\n  width: -webkit-fit-content;\\n  width: -moz-fit-content;\\n  width: fit-content;\\n  transition: display 0.4s;\\n  z-index: 1;\\n  background-color: #fafafb;\\n  border: 1px solid #808080;\\n  padding-left: 0px; }\\n#helpMenu button {\\n    cursor: pointer;\\n    display: block;\\n    min-width: 100px;\\n    max-width: 200px;\\n    background-color: #fafafb;\\n    border: 0px;\\n    margin: 0px;\\n    padding: 0px;\\n    line-height: 30px;\\n    height: 30px;\\n    font-size: 12px; }\\n#helpMenu li {\\n    cursor: pointer;\\n    display: block;\\n    min-width: 100px;\\n    max-width: 300px;\\n    overflow: hidden;\\n    line-height: 20px;\\n    background-color: #fafafb;\\n    border: 0px;\\n    margin: 0px;\\n    padding: 0px 10px 0px 10px;\\n    line-height: 30px;\\n    height: 30px;\\n    font-size: 12px;\\n    color: #373737; }\\n#helpMenu li:hover {\\n      color: #00006d;\\n      background-color: #E6E6E6; }\\n\\n/*# sourceMappingURL=data:application/json;base64, */\"","import { Component, Input, DoCheck, OnDestroy } from '@angular/core';\r\nimport { ModuleList, ModuleDocList } from '@shared/decorators';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { DataService } from '@shared/services';\r\n\r\n/**\r\n * HelpViewerComponent\r\n */\r\n @Component({\r\n  selector: 'help-viewer',\r\n  templateUrl: './help-viewer.component.html',\r\n  styleUrls: ['./help-viewer.component.scss']\r\n})\r\nexport class HelpViewerComponent implements DoCheck, OnDestroy {\r\n    output: any;\r\n    ModuleDoc = ModuleDocList;\r\n    Modules = [];\r\n    activeModIndex: string;\r\n\r\n    // TODO: update mobius url\r\n    urlString: string;\r\n    /**\r\n     * constructor\r\n     */\r\n    constructor(private mainDataService: DataService) {\r\n        this.urlString = `${window.location.origin}` +\r\n                        '/flowchart?file=' +\r\n                        'https://raw.githubusercontent.com/design-automation/' +\r\n                        'mobius-parametric-modeller/master/src/assets/gallery/function_examples/';\r\n\r\n        for (const mod of ModuleList) {\r\n            if (mod.module[0] === '_') {continue; }\r\n            const nMod = {'module': mod.module, 'functions': [], 'description': ModuleDocList[mod.module].description};\r\n            for (const func of mod.functions) {\r\n                if (func.name[0] === '_') {continue; }\r\n                nMod.functions.push(ModuleDocList[mod.module][func.name]);\r\n            }\r\n            if (mod.functions.length > 0) {\r\n                this.Modules.push(nMod);\r\n            }\r\n        }\r\n        this.output = this.mainDataService.helpViewData[0];\r\n        this.activeModIndex = this.mainDataService.helpViewData[1];\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.mainDataService.helpViewData = [this.output, this.activeModIndex];\r\n    }\r\n\r\n    ngDoCheck() {\r\n        if (this.mainDataService.helpView[1] === true) {\r\n            this.output = this.mainDataService.helpView[2];\r\n            this.mainDataService.togglePageHelp(false);\r\n        }\r\n    }\r\n\r\n    openHelpMenu(e: MouseEvent) {\r\n        const stl = document.getElementById('helpMenu').style;\r\n        if (!stl.display || stl.display === 'none') {\r\n            stl.display = 'block';\r\n        } else {\r\n            stl.display = 'none';\r\n        }\r\n        e.stopPropagation();\r\n    }\r\n\r\n    getActiveModule() {\r\n        if (this.output) { return ''; }\r\n        if (this.activeModIndex === '') { return ''; }\r\n        return this.Modules[this.activeModIndex].module.toUpperCase();\r\n    }\r\n\r\n    getFuncs() {\r\n        if (this.activeModIndex === '') { return []; }\r\n        return this.Modules[this.activeModIndex].functions;\r\n    }\r\n\r\n    switchHelp(mod) {\r\n        this.output = undefined;\r\n        this.activeModIndex = mod;\r\n    }\r\n}\r\n","module.exports = \"<div class='viewers-container'>  \\r\\n\\r\\n    <div class='container__header'>\\r\\n        <div class=\\\"header-btn-group\\\">\\r\\n            <button class='btn' mat-icon-button *ngFor='let view of Viewers;' id='{{view.name}}'\\r\\n            [class.active]='view.name == activeView.name' (click)='updateView(view)' title='{{view.name}}'>\\r\\n                <mat-icon [svgIcon]='\\\"c\\\"+view.name'></mat-icon>\\r\\n            </button>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <div class='content__panel'>\\r\\n        <ng-container #vc></ng-container>\\r\\n    </div>\\r\\n\\r\\n</div>\"","module.exports = \".viewers-container {\\n  position: relative;\\n  display: block;\\n  height: 100%;\\n  overflow: hidden; }\\n  .viewers-container .container__header {\\n    position: absolute;\\n    left: 0;\\n    top: 0;\\n    display: flex;\\n    background-color: transparent;\\n    height: 40px;\\n    padding: 0px;\\n    margin: 0px; }\\n  .viewers-container .container__header .header-btn-group {\\n      height: 40px;\\n      padding: 0px;\\n      margin: 0px;\\n      overflow: hidden;\\n      background-color: transparent;\\n      z-index: 1; }\\n  .viewers-container .content__panel {\\n    background-color: transparent;\\n    width: 100%;\\n    height: 100%;\\n    overflow: hidden;\\n    padding: 0px;\\n    margin: 0px; }\\n  .viewers-container button {\\n    display: inline-block;\\n    vertical-align: bottom;\\n    background-color: transparent;\\n    color: #808080;\\n    border: none;\\n    outline: none;\\n    cursor: pointer;\\n    padding: 0px;\\n    width: 34px;\\n    height: 34px;\\n    transition: 0.3s;\\n    font-size: 14px; }\\n  .viewers-container button:hover {\\n      color: #00006d; }\\n  .viewers-container button.active {\\n      color: #00006d; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kZWwtdmlld2Vycy9DOlxcRHJvcGJveFxcRmlsZXNcXFNvZnR3YXJlXFxHaXRIdWJcXGRlc2lnbi1hdXRvbWF0aW9uXFxtb2JpdXMtcGFyYW1ldHJpYy1tb2RlbGxlci9zcmNcXGFwcFxcbW9kZWwtdmlld2Vyc1xcbW9kZWwtdmlld2Vycy1jb250YWluZXIuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL21vZGVsLXZpZXdlcnMvQzpcXERyb3Bib3hcXEZpbGVzXFxTb2Z0d2FyZVxcR2l0SHViXFxkZXNpZ24tYXV0b21hdGlvblxcbW9iaXVzLXBhcmFtZXRyaWMtbW9kZWxsZXIvc3JjXFxzY3NzXFx2YXJpYWJsZXMuc2NzcyIsInNyYy9hcHAvbW9kZWwtdmlld2Vycy9DOlxcRHJvcGJveFxcRmlsZXNcXFNvZnR3YXJlXFxHaXRIdWJcXGRlc2lnbi1hdXRvbWF0aW9uXFxtb2JpdXMtcGFyYW1ldHJpYy1tb2RlbGxlci9zcmNcXHNjc3NcXGNvbG9ycy5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUtBO0VBQ0ksa0JBQWtCO0VBQ2xCLGNBQWM7RUFDZCxZQUFZO0VBQ1osZ0JBQWdCLEVBQUE7RUFKcEI7SUFPUSxrQkFBa0I7SUFDbEIsT0FBTztJQUNQLE1BQU07SUFDTixhQUFhO0lBQ2IsNkJBQTZCO0lBQzdCLFlDZlk7SURnQlosWUFBWTtJQUNaLFdBQVcsRUFBQTtFQWRuQjtNQWtCWSxZQ3JCUTtNRHNCUixZQUFZO01BQ1osV0FBVztNQUNYLGdCQUFnQjtNQUNoQiw2QkFBNkI7TUFDN0IsVUFBVSxFQUFBO0VBdkJ0QjtJQTJCUSw2QkFBNkI7SUFDN0IsV0FBVztJQUNYLFlBQVk7SUFDWixnQkFBZ0I7SUFDaEIsWUFBWTtJQUNaLFdBQVcsRUFBQTtFQWhDbkI7SUFxQ1EscUJBQXFCO0lBQ3JCLHNCQUFzQjtJQUN0Qiw2QkFBNkI7SUFDN0IsY0U1Q1E7SUY2Q1IsWUFBWTtJQUNaLGFBQWE7SUFDYixlQUFlO0lBQ2YsWUFBWTtJQUNaLFdBQVc7SUFDWCxZQUFZO0lBQ1osZ0JBQWdCO0lBQ2hCLGVBQWUsRUFBQTtFQWhEdkI7TUFrRFksY0UzQ21CLEVBQUE7RUZQL0I7TUFxRFksY0U5Q21CLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9tb2RlbC12aWV3ZXJzL21vZGVsLXZpZXdlcnMtY29udGFpbmVyLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiQGltcG9ydCAnfnNjc3MvY29sb3JzJztcclxuQGltcG9ydCAnfnNjc3MvdmFyaWFibGVzJztcclxuXHJcbi8vIHRoZSBob3N0XHJcblxyXG4udmlld2Vycy1jb250YWluZXJ7XHJcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICBkaXNwbGF5OiBibG9jaztcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIG92ZXJmbG93OiBoaWRkZW47XHJcblxyXG4gICAgLmNvbnRhaW5lcl9faGVhZGVye1xyXG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgICBsZWZ0OiAwO1xyXG4gICAgICAgIHRvcDogMDtcclxuICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xyXG4gICAgICAgIGhlaWdodDogJGhlYWRlci1oZWlnaHQ7XHJcbiAgICAgICAgcGFkZGluZzogMHB4O1xyXG4gICAgICAgIG1hcmdpbjogMHB4O1xyXG4gICAgXHJcbiAgICAgICAgLmhlYWRlci1idG4tZ3JvdXAge1xyXG4gICAgICAgICAgICAvL2Rpc3BsYXk6IGlubGluZTtcclxuICAgICAgICAgICAgaGVpZ2h0OiAkaGVhZGVyLWhlaWdodDtcclxuICAgICAgICAgICAgcGFkZGluZzogMHB4O1xyXG4gICAgICAgICAgICBtYXJnaW46IDBweDtcclxuICAgICAgICAgICAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XHJcbiAgICAgICAgICAgIHotaW5kZXg6IDE7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgLmNvbnRlbnRfX3BhbmVse1xyXG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xyXG4gICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgIGhlaWdodDogMTAwJTsgXHJcbiAgICAgICAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICAgICAgICBwYWRkaW5nOiAwcHg7XHJcbiAgICAgICAgbWFyZ2luOiAwcHg7XHJcbiAgICBcclxuICAgICAgICAvL3BhZGRpbmc6IDEwcHggMTVweDtcclxuICAgIH1cclxuICAgIGJ1dHRvbiB7XHJcbiAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgICAgIHZlcnRpY2FsLWFsaWduOiBib3R0b207XHJcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XHJcbiAgICAgICAgY29sb3I6ICRjb2xvcjE7XHJcbiAgICAgICAgYm9yZGVyOiBub25lO1xyXG4gICAgICAgIG91dGxpbmU6IG5vbmU7XHJcbiAgICAgICAgY3Vyc29yOiBwb2ludGVyO1xyXG4gICAgICAgIHBhZGRpbmc6IDBweDtcclxuICAgICAgICB3aWR0aDogMzRweDtcclxuICAgICAgICBoZWlnaHQ6IDM0cHg7XHJcbiAgICAgICAgdHJhbnNpdGlvbjogMC4zcztcclxuICAgICAgICBmb250LXNpemU6IDE0cHg7XHJcbiAgICAgICAgJjpob3ZlciB7XHJcbiAgICAgICAgICAgIGNvbG9yOiRzZWxlY3RlZC1jb2xvcjtcclxuICAgICAgICB9XHJcbiAgICAgICAgJi5hY3RpdmUge1xyXG4gICAgICAgICAgICBjb2xvcjogJHNlbGVjdGVkLWNvbG9yO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbn1cclxuXHJcblxyXG4iLCIkcGFkZGluZzogNDBweDsgLy8gPyBub3QgdXNlZFxyXG4kc21hbGwtcGFkZGluZzogMTVweDtcclxuJGhlYWRlci1oZWlnaHQ6IDQwcHg7XHJcblxyXG4kZnNpemUxOiAxNXB4O1xyXG4kZnNpemUyOiAxMnB4O1xyXG4kZnNpemUzOiAzMHB4O1xyXG5cclxuJHBvcnQtc2l6ZTogMTVweDtcclxuJGRlZmF1bHQtc2lkZS1wYWRkaW5nOiAxNXB4O1xyXG5cclxuJGRpc2FibGVkLW9wYWNpdHk6IDAuNDsiLCJcclxuJGNvbG9yMTogIzgwODA4MDtcclxuJGNvbG9yMjogIzk5OTk5OTtcclxuJGNvbG9yMzogI0IzQjNCMzsgXHJcbiRjb2xvcjQ6ICNDQ0NDQ0M7XHJcbiRjb2xvcjU6ICNFNkU2RTY7XHJcbiRjb2xvcjUtNTogcmdiKDI0NSwgMjQ1LCAyNDUpO1xyXG4kY29sb3I2OiByZ2IoMjUwLCAyNTAsIDI1MSk7XHJcblxyXG4kY29sb3I3OiB3aGl0ZTtcclxuJGNvbG9yODogIzM3MzczNztcclxuXHJcbiRzZWxlY3RlZC1jb2xvcjogcmdiKDAsIDAsIDEwOSk7XHJcbiRob3Zlci1jb2xvcjogJGNvbG9yMjtcclxuXHJcbiRlcnJvci1jb2xvcjogI0U5NDg1ODsgLy9waW5rLXJlZFxyXG4kZXJyb3ItY29sb3ItbHQ6IHJnYigyNTUsIDIyMCwgMjI0KTtcclxuJHBjb2xvcjI6ICNGM0EzMkE7IC8vb3JhbmdlLXllbGxvd1xyXG4kcHJpbnQtY29sb3I6IHJnYigxMzAsIDE5MSwgMTEwKTsgLy9saWdodGdyZWVuXHJcbiRwcmludC1jb2xvci1sdDogcmdiKDIzMCwgMjU1LCAyMjEpO1xyXG4kc2VsZWN0R2VvbS1jb2xvcjogcmdiKDI1NSwgMTc0LCAwKTsgLy8gbGlnaHQgb3JhbmdlXHJcbiRzZWxlY3RHZW9tLWNvbG9yLWx0OiByZ2IoMjU1LCAyMjUsIDE2MCk7XHJcblxyXG4vLyAkcHJvZC1iYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMjUwLDI1MCwyNTApO1xyXG4vLyAkYmFja2dyb3VuZC1jb2xvcjogcmdiKDIyMCwyMjAsMjIwKTtcclxuJGZ1bmN0aW9uLXRleHQtY29sb3I6IHJnYigxOTAsIDE0MCwgMzApO1xyXG4kZnVuY3Rpb24tdGV4dC1jb2xvcjI6IHJnYigxOCwgMTI2LCAxMzYpO1xyXG4kYmFzaWMtZnVuY3Rpb24tdGV4dC1jb2xvcjogcmdiKDIwMCwgNzAsIDE1MCk7XHJcbiRjb21tZW50LWNvbG9yOiBkYXJrZ3JlZW47XHJcbiJdfQ== */\"","import { Component, Injector, Input,\r\n    ViewChild, ViewContainerRef, ComponentFactoryResolver, OnDestroy, OnInit, DoCheck } from '@angular/core';\r\nimport { IView } from './view.interface';\r\nimport { Viewers } from './model-viewers.config';\r\nimport { DataService } from '@services';\r\nimport { Router } from '@angular/router';\r\n\r\n/**\r\n * A component that contains all the viewers.\r\n * This component is used in /app/appmodule/app.component.html\r\n */\r\n@Component({\r\n    // tslint:disable-next-line:component-selector\r\n    selector: 'model-viewers-container',\r\n    templateUrl: 'model-viewers-container.component.html',\r\n    styleUrls: ['model-viewers-container.component.scss']\r\n})\r\nexport class DataViewersContainerComponent implements DoCheck, OnInit, OnDestroy {\r\n    @ViewChild('vc', {read: ViewContainerRef}) vc: ViewContainerRef;\r\n    @Input() data: any;\r\n    private views = [];\r\n    private activeView: IView;\r\n    Viewers = Viewers;\r\n    /**\r\n     * Construct the viewer container.\r\n     * @param injector\r\n     * @param r\r\n     */\r\n    constructor(private injector: Injector, private r: ComponentFactoryResolver, private dataService: DataService, private router: Router) {\r\n        if (this.router.url.split('?')[0] === '/publish') {\r\n            this.Viewers = [];\r\n            let viewCheck: any = this.router.url.split('viewer=');\r\n\r\n            if (viewCheck.length === 0) { viewCheck = '';\r\n            } else { viewCheck = viewCheck[1]; }\r\n\r\n            for (const view of Viewers) {\r\n                if (view.component.name === 'HelpViewerComponent') { continue; }\r\n                if (viewCheck === '0' && view.component.name === 'GICesiumViewerComponent') { continue; }\r\n                if (viewCheck === '1' && view.component.name === 'GIViewerComponent') { continue; }\r\n                this.Viewers.push(view);\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * ngOnInit\r\n     */\r\n    ngOnInit() {\r\n        this.activeView = this.Viewers[0];\r\n        if (this.dataService.activeView) {\r\n            for (const view of this.Viewers) {\r\n                if (view.name === this.dataService.activeView) {\r\n                    this.activeView = view;\r\n                }\r\n            }\r\n        }\r\n        this.updateView( this.activeView );\r\n    }\r\n    /**\r\n     * ngOnDestroy\r\n     */\r\n    ngOnDestroy() {\r\n        this.dataService.activeView = this.activeView.name;\r\n        this.vc.clear();\r\n        for (const view in this.views) {\r\n            if (this.views[view]) {\r\n                this.views[view].destroy();\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * ngDoCheck\r\n     */\r\n    ngDoCheck() {\r\n        if (this.dataService.helpView[0] === true) {\r\n            let view;\r\n            for (const v of this.Viewers) {\r\n                if (v.name === 'Help') { view = v; }\r\n            }\r\n            this.dataService.toggleViewHelp(false);\r\n            this.updateView(view);\r\n        } else { this.updateValue(); }\r\n    }\r\n    /**\r\n     * createView\r\n     * @param view\r\n     */\r\n    createView(view: IView) {\r\n        const component = view.component;\r\n        const factory = this.r.resolveComponentFactory(component);\r\n        const componentRef = factory.create(this.injector);\r\n        /*\r\n        if (view.name != 'Console'){\r\n            componentRef.instance[\"data\"] = this.data;\r\n        }\r\n        */\r\n        return componentRef;\r\n    }\r\n    /**\r\n     * updateView\r\n     * @param view\r\n     */\r\n    updateView(view: IView): void {\r\n        this.activeView = view;\r\n\r\n        if ( this.views[ this.activeView.name ] === undefined) {\r\n            this.views[ this.activeView.name ] = this.createView(view);\r\n        }\r\n\r\n        this.updateValue();\r\n\r\n        this.vc.detach();\r\n        this.vc.insert( this.views[ this.activeView.name ].hostView );\r\n    }\r\n    /**\r\n     * updateValue\r\n     */\r\n    updateValue() {\r\n        try {\r\n            const componentRef =  this.views[ this.activeView.name ];\r\n            if (this.activeView.name === 'Help') {\r\n                // componentRef.instance['output'] = this.dataService.helpView[1];\r\n            } else if (this.activeView.name !== 'Console') {\r\n                componentRef.instance['data'] = this.data;\r\n            // } else {\r\n            //     componentRef.instance['scrollcheck'] = true;\r\n            }\r\n        } catch (ex) {\r\n            // console.log(`Active View not defined`);\r\n        }\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { DataViewersContainerComponent } from './model-viewers-container.component';\r\nimport { VIEWER_ARR, VIEWER_MOD } from './model-viewers.config';\r\n// viewers\r\nimport { ConsoleViewerComponent } from './all-viewers/console-viewer/console-viewer.component';\r\nimport { HelpViewerComponent } from './all-viewers/help-viewer/help-viewer.component';\r\n// import { GIViewerModule } from './all-viewers/gi-viewer/gi-viewer.module';\r\nimport { MatIconModule } from '@angular/material';\r\n// import { ThreejsViewerComponent } from './viewers/gi-viewer/threejs/threejs-viewer.component';\r\n// import { MobiusCesium } from './viewers/cesium-viewer/mobius-cesium.module';\r\n// import { VisualiseComponent } from \"./viewers/cesium-viewer/setting/visualise.component\";\r\n// import { AttributesComponent } from \"./viewers/cesium-viewer/setting/attributes.copmponent\";\r\n\r\n/**\r\n * DataViewersContainer, NgModule\r\n */\r\n@NgModule({\r\n    declarations: [\r\n        DataViewersContainerComponent,\r\n        // TextViewerComponent,\r\n        ConsoleViewerComponent,\r\n        HelpViewerComponent,\r\n    ],\r\n    exports: [\r\n        DataViewersContainerComponent\r\n    ],\r\n    imports: [\r\n        CommonModule,\r\n        FormsModule,\r\n        MatIconModule,\r\n        ...VIEWER_MOD\r\n\r\n        // SharedModule\r\n    ],\r\n    entryComponents: [\r\n        ...VIEWER_ARR\r\n    ],\r\n    providers: [ ]\r\n})\r\nexport class DataViewersContainer {\r\n    /**\r\n     * constructor\r\n     */\r\n    constructor () {\r\n        // do nothing\r\n    }\r\n}\r\n","import { IView } from './view.interface';\r\nimport { ConsoleViewerComponent } from './all-viewers/console-viewer/console-viewer.component';\r\nimport { HelpViewerComponent } from './all-viewers/help-viewer/help-viewer.component';\r\n// GI Threejs viewer\r\nimport { GIViewerComponent } from './all-viewers/gi-viewer/gi-viewer.component';\r\nimport { GIViewerModule } from './all-viewers/gi-viewer/gi-viewer';\r\n// GI Cesium viewer\r\nimport { GICesiumViewerComponent } from './all-viewers/gi-cesium-viewer/gi-cesium-viewer.component';\r\nimport { GICesiumViewerModule } from './all-viewers/gi-cesium-viewer/gi-cesium-viewer';\r\n// Old Cesium viewer - to be deleted\r\n// import { MobiuscesiumComponent } from './all-viewers/cesium-viewer/mobius-cesium.component';\r\n// import { MobiusCesium } from './all-viewers/cesium-viewer/mobius-cesium';\r\n\r\n// Viewer Components array\r\nexport const VIEWER_ARR = [\r\n    ConsoleViewerComponent,\r\n    HelpViewerComponent,\r\n    // Step-1: Add Component here\r\n    GIViewerComponent,\r\n    GICesiumViewerComponent,\r\n    // MobiuscesiumComponent\r\n];\r\n\r\n// Viewer modules array\r\nexport const VIEWER_MOD = [\r\n    // Step-2: Add Module here\r\n    GIViewerModule,\r\n    GICesiumViewerModule,\r\n    // MobiusCesium\r\n];\r\n\r\n// Viewers\r\nexport const Viewers: IView[] = [\r\n    // Step-3: Add Viewer Definition here: name, icon and component\r\n    // The order of these views here will influence the order of the view appearing in the viewer header.\r\n    { name: '3D Viewer', icon: undefined, component: GIViewerComponent },\r\n    { name: 'Geo Viewer', icon: undefined, component: GICesiumViewerComponent },\r\n    // { name: 'Mobius Cesium', icon: undefined, component: MobiuscesiumComponent },\r\n    { name: 'Console', icon: undefined, component: ConsoleViewerComponent },\r\n    { name: 'Help', icon: undefined, component: HelpViewerComponent }\r\n];\r\n\r\n","import { ProcedureTypes } from '@models/procedure';\r\nimport { ModuleList } from './decorators';\r\nimport * as funcs from '@modules';\r\nimport * as depreciated from '@assets/core/depreciated.json';\r\n\r\nimport * as circularJSON from 'circular-json';\r\n\r\n\r\nexport function checkMissingProd(prodList: any[]) {\r\n    let check = true;\r\n    for (const prod of prodList) {\r\n        if (prod.children) {\r\n            if (!checkMissingProd(prod.children)) {\r\n                check = false;\r\n            }\r\n        }\r\n        prod.hasError = false;\r\n        if (prod.type !== ProcedureTypes.Function) { continue; }\r\n\r\n        // @ts-ignore\r\n        for (const dpFn of depreciated.default) {\r\n            if (dpFn.old_func.name.toLowerCase() === prod.meta.name.toLowerCase() &&\r\n                dpFn.old_func.module.toLowerCase() === prod.meta.module.toLowerCase()) {\r\n                let data: any;\r\n                for (const mod of ModuleList) {\r\n                    if (mod.module.toLowerCase() === dpFn.new_func.module.toLowerCase()) {\r\n                        for (const fn of mod.functions) {\r\n                            if (fn.name.toLowerCase() === dpFn.new_func.name.toLowerCase()) {\r\n                                data = circularJSON.parse(circularJSON.stringify(fn));\r\n                                break;\r\n                            }\r\n                        }\r\n                        break;\r\n                    }\r\n                }\r\n                if (dpFn.old_func.name === dpFn.new_func.name && prod.argCount === (data.argCount + 1)) { break; }\r\n                prod.meta = { module: data.module, name: data.name};\r\n                prod.argCount = data.argCount + 1;\r\n                let returnArg = {name: 'var_name', value: undefined, default: undefined};\r\n                if (!data.hasReturn) {\r\n                    returnArg = {name: '__none__', value: undefined, default: undefined};\r\n                } else if (prod.args[0].name !== '__none__') {\r\n                    returnArg.value = prod.args[0].value;\r\n                    returnArg.default = prod.args[0].default;\r\n                }\r\n                for (const arg of data.args) {\r\n                    let UpdateCheck = false;\r\n                    for (const updatedArg in dpFn.new_func.values) {\r\n                        if (updatedArg.toLowerCase() === arg.name.toLowerCase()) {\r\n                            arg.value = dpFn.new_func.values[updatedArg];\r\n                            UpdateCheck = true;\r\n                            break;\r\n                        }\r\n                    }\r\n                    if (UpdateCheck) { continue; }\r\n                    for (const oldArg of prod.args) {\r\n                        if (arg.name.toLowerCase() === oldArg.name.toLowerCase()) {\r\n                            arg.value = oldArg.value;\r\n                            arg.default = oldArg.default;\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n                prod.args = [ returnArg, ...data.args];\r\n                break;\r\n            }\r\n        }\r\n        if (!funcs[prod.meta.module] || !funcs[prod.meta.module][prod.meta.name]) {\r\n            prod.hasError = true;\r\n            check = false;\r\n        }\r\n    }\r\n    return check;\r\n}\r\n","import { Component, Input } from '@angular/core';\r\nimport { INode } from '@models/node';\r\nimport { PortUtils } from '@models/port';\r\n\r\n@Component({\r\n  selector: 'add-input',\r\n  template:  `<button (click)='addInput()'>AddInput</button>`,\r\n  styles: [ ]\r\n})\r\nexport class AddInputComponent {\r\n\r\n    @Input() node: INode;\r\n    constructor() {}\r\n\r\n    addInput(): void {\r\n      return;\r\n      /*\r\n      let newPort = PortUtils.getNewInput();\r\n      newPort.parentNode = this.node;\r\n      this.node.input.push(newPort);\r\n      */\r\n    }\r\n\r\n}\r\n","import { Component, Input } from '@angular/core';\r\nimport { NodeUtils } from '@models/node';\r\nimport { IFlowchart } from '@models/flowchart';\r\n\r\n@Component({\r\n  selector: 'add-node',\r\n  template:  `<button (click)='addNode()'>AddNode</button>`,\r\n  styles: [ ]\r\n})\r\nexport class AddNodeComponent {\r\n\r\n    @Input() flowchart: IFlowchart;\r\n    constructor() {}\r\n\r\n    addNode(): void {  this.flowchart.nodes.push(NodeUtils.getNewNode()); }\r\n\r\n}\r\n","import { Component, Input } from '@angular/core';\r\nimport { INode } from '@models/node';\r\nimport { PortUtils } from '@models/port';\r\n\r\n@Component({\r\n  selector: 'add-output',\r\n  template:  `<button (click)='addOutput()'>AddOutput</button>`,\r\n  styles: [ ]\r\n})\r\nexport class AddOutputComponent {\r\n\r\n    @Input() node: INode;\r\n    constructor() {}\r\n\r\n    addOutput(): void {\r\n      return;\r\n      /*\r\n      let newPort = PortUtils.getNewOutput();\r\n      newPort.parentNode = this.node;\r\n      this.node.output.push(newPort);\r\n      */\r\n    }\r\n\r\n}\r\n","module.exports = \"<div id='chrome-only'>\\r\\n    Möbius Modeller only works on Chrome. Please install Chrome.\\r\\n</div>\\r\\n\"","module.exports = \"panel-header button {\\n  display: inline-block;\\n  vertical-align: bottom;\\n  background-color: transparent;\\n  color: #808080;\\n  border: none;\\n  outline: none;\\n  cursor: pointer;\\n  padding: 0px;\\n  width: 34px;\\n  height: 34px;\\n  transition: 0.3s;\\n  font-size: 15px; }\\n\\npublish-header button {\\n  display: inline-block;\\n  vertical-align: bottom;\\n  background-color: transparent;\\n  color: #808080;\\n  border: none;\\n  outline: none;\\n  cursor: pointer;\\n  padding: 0px;\\n  width: 34px;\\n  height: 34px;\\n  transition: 0.3s;\\n  font-size: 15px; }\\n\\nbutton:hover {\\n  color: #00006d; }\\n\\npanel-header button.active {\\n  color: #00006d; }\\n\\npublish-header button.active {\\n  color: #00006d; }\\n\\n#chrome-only {\\n  position: fixed;\\n  display: none;\\n  width: 100%;\\n  height: 100%;\\n  top: 0;\\n  left: 0;\\n  right: 0;\\n  bottom: 0;\\n  background-color: #E6E6E6;\\n  z-index: 1000;\\n  pointer-events: all;\\n  cursor: default; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc2hhcmVkL2NvbXBvbmVudHMvY2hyb21lL0M6XFxEcm9wYm94XFxGaWxlc1xcU29mdHdhcmVcXEdpdEh1YlxcZGVzaWduLWF1dG9tYXRpb25cXG1vYml1cy1wYXJhbWV0cmljLW1vZGVsbGVyL3NyY1xcc2Nzc1xcaGVhZGVyLWJ1dHRvbi5zY3NzIiwic3JjL2FwcC9zaGFyZWQvY29tcG9uZW50cy9jaHJvbWUvQzpcXERyb3Bib3hcXEZpbGVzXFxTb2Z0d2FyZVxcR2l0SHViXFxkZXNpZ24tYXV0b21hdGlvblxcbW9iaXVzLXBhcmFtZXRyaWMtbW9kZWxsZXIvc3JjXFxzY3NzXFxjb2xvcnMuc2NzcyIsInNyYy9hcHAvc2hhcmVkL2NvbXBvbmVudHMvY2hyb21lL0M6XFxEcm9wYm94XFxGaWxlc1xcU29mdHdhcmVcXEdpdEh1YlxcZGVzaWduLWF1dG9tYXRpb25cXG1vYml1cy1wYXJhbWV0cmljLW1vZGVsbGVyL3NyY1xcc2Nzc1xcdmFyaWFibGVzLnNjc3MiLCJzcmMvYXBwL3NoYXJlZC9jb21wb25lbnRzL2Nocm9tZS9DOlxcRHJvcGJveFxcRmlsZXNcXFNvZnR3YXJlXFxHaXRIdWJcXGRlc2lnbi1hdXRvbWF0aW9uXFxtb2JpdXMtcGFyYW1ldHJpYy1tb2RlbGxlci9zcmNcXGFwcFxcc2hhcmVkXFxjb21wb25lbnRzXFxjaHJvbWVcXGNocm9tZS5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFHQTtFQUNJLHFCQUFxQjtFQUNyQixzQkFBc0I7RUFDdEIsNkJBQTZCO0VBQzdCLGNDTlk7RURPWixZQUFZO0VBQ1osYUFBYTtFQUNiLGVBQWU7RUFDZixZQUFZO0VBQ1osV0FBVztFQUNYLFlBQVk7RUFDWixnQkFBZ0I7RUFDaEIsZUVYUyxFQUFBOztBRmNiO0VBQ0kscUJBQXFCO0VBQ3JCLHNCQUFzQjtFQUN0Qiw2QkFBNkI7RUFDN0IsY0NyQlk7RURzQlosWUFBWTtFQUNaLGFBQWE7RUFDYixlQUFlO0VBQ2YsWUFBWTtFQUNaLFdBQVc7RUFDWCxZQUFZO0VBQ1osZ0JBQWdCO0VBQ2hCLGVFMUJTLEVBQUE7O0FGNkJiO0VBQ0ksY0N0QjJCLEVBQUE7O0FEeUIvQjtFQUNJLGNDMUIyQixFQUFBOztBRDZCL0I7RUFDSSxjQzlCMkIsRUFBQTs7QUVUL0I7RUFDSSxlQUFlO0VBQ2YsYUFBYTtFQUNiLFdBQVc7RUFDWCxZQUFZO0VBQ1osTUFBTTtFQUNOLE9BQU87RUFDUCxRQUFRO0VBQ1IsU0FBUztFQUNULHlCRlBZO0VFUVosYUFBYTtFQUNiLG1CQUFtQjtFQUNuQixlQUFlLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9zaGFyZWQvY29tcG9uZW50cy9jaHJvbWUvY2hyb21lLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiQGltcG9ydCAnfnNjc3MvdmFyaWFibGVzJztcclxuQGltcG9ydCAnfnNjc3MvY29sb3JzJztcclxuXHJcbnBhbmVsLWhlYWRlciBidXR0b24ge1xyXG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgdmVydGljYWwtYWxpZ246IGJvdHRvbTtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xyXG4gICAgY29sb3I6ICRjb2xvcjE7XHJcbiAgICBib3JkZXI6IG5vbmU7XHJcbiAgICBvdXRsaW5lOiBub25lO1xyXG4gICAgY3Vyc29yOiBwb2ludGVyO1xyXG4gICAgcGFkZGluZzogMHB4O1xyXG4gICAgd2lkdGg6IDM0cHg7XHJcbiAgICBoZWlnaHQ6IDM0cHg7XHJcbiAgICB0cmFuc2l0aW9uOiAwLjNzO1xyXG4gICAgZm9udC1zaXplOiAkZnNpemUxO1xyXG59XHJcblxyXG5wdWJsaXNoLWhlYWRlciBidXR0b24ge1xyXG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgdmVydGljYWwtYWxpZ246IGJvdHRvbTtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xyXG4gICAgY29sb3I6ICRjb2xvcjE7XHJcbiAgICBib3JkZXI6IG5vbmU7XHJcbiAgICBvdXRsaW5lOiBub25lO1xyXG4gICAgY3Vyc29yOiBwb2ludGVyO1xyXG4gICAgcGFkZGluZzogMHB4O1xyXG4gICAgd2lkdGg6IDM0cHg7XHJcbiAgICBoZWlnaHQ6IDM0cHg7XHJcbiAgICB0cmFuc2l0aW9uOiAwLjNzO1xyXG4gICAgZm9udC1zaXplOiAkZnNpemUxO1xyXG59XHJcblxyXG5idXR0b246aG92ZXIge1xyXG4gICAgY29sb3I6JHNlbGVjdGVkLWNvbG9yO1xyXG59XHJcblxyXG5wYW5lbC1oZWFkZXIgYnV0dG9uLmFjdGl2ZSB7XHJcbiAgICBjb2xvcjogJHNlbGVjdGVkLWNvbG9yO1xyXG59XHJcblxyXG5wdWJsaXNoLWhlYWRlciBidXR0b24uYWN0aXZlIHtcclxuICAgIGNvbG9yOiAkc2VsZWN0ZWQtY29sb3I7XHJcbn1cclxuIiwiXHJcbiRjb2xvcjE6ICM4MDgwODA7XHJcbiRjb2xvcjI6ICM5OTk5OTk7XHJcbiRjb2xvcjM6ICNCM0IzQjM7IFxyXG4kY29sb3I0OiAjQ0NDQ0NDO1xyXG4kY29sb3I1OiAjRTZFNkU2O1xyXG4kY29sb3I1LTU6IHJnYigyNDUsIDI0NSwgMjQ1KTtcclxuJGNvbG9yNjogcmdiKDI1MCwgMjUwLCAyNTEpO1xyXG5cclxuJGNvbG9yNzogd2hpdGU7XHJcbiRjb2xvcjg6ICMzNzM3Mzc7XHJcblxyXG4kc2VsZWN0ZWQtY29sb3I6IHJnYigwLCAwLCAxMDkpO1xyXG4kaG92ZXItY29sb3I6ICRjb2xvcjI7XHJcblxyXG4kZXJyb3ItY29sb3I6ICNFOTQ4NTg7IC8vcGluay1yZWRcclxuJGVycm9yLWNvbG9yLWx0OiByZ2IoMjU1LCAyMjAsIDIyNCk7XHJcbiRwY29sb3IyOiAjRjNBMzJBOyAvL29yYW5nZS15ZWxsb3dcclxuJHByaW50LWNvbG9yOiByZ2IoMTMwLCAxOTEsIDExMCk7IC8vbGlnaHRncmVlblxyXG4kcHJpbnQtY29sb3ItbHQ6IHJnYigyMzAsIDI1NSwgMjIxKTtcclxuJHNlbGVjdEdlb20tY29sb3I6IHJnYigyNTUsIDE3NCwgMCk7IC8vIGxpZ2h0IG9yYW5nZVxyXG4kc2VsZWN0R2VvbS1jb2xvci1sdDogcmdiKDI1NSwgMjI1LCAxNjApO1xyXG5cclxuLy8gJHByb2QtYmFja2dyb3VuZC1jb2xvcjogcmdiKDI1MCwyNTAsMjUwKTtcclxuLy8gJGJhY2tncm91bmQtY29sb3I6IHJnYigyMjAsMjIwLDIyMCk7XHJcbiRmdW5jdGlvbi10ZXh0LWNvbG9yOiByZ2IoMTkwLCAxNDAsIDMwKTtcclxuJGZ1bmN0aW9uLXRleHQtY29sb3IyOiByZ2IoMTgsIDEyNiwgMTM2KTtcclxuJGJhc2ljLWZ1bmN0aW9uLXRleHQtY29sb3I6IHJnYigyMDAsIDcwLCAxNTApO1xyXG4kY29tbWVudC1jb2xvcjogZGFya2dyZWVuO1xyXG4iLCIkcGFkZGluZzogNDBweDsgLy8gPyBub3QgdXNlZFxyXG4kc21hbGwtcGFkZGluZzogMTVweDtcclxuJGhlYWRlci1oZWlnaHQ6IDQwcHg7XHJcblxyXG4kZnNpemUxOiAxNXB4O1xyXG4kZnNpemUyOiAxMnB4O1xyXG4kZnNpemUzOiAzMHB4O1xyXG5cclxuJHBvcnQtc2l6ZTogMTVweDtcclxuJGRlZmF1bHQtc2lkZS1wYWRkaW5nOiAxNXB4O1xyXG5cclxuJGRpc2FibGVkLW9wYWNpdHk6IDAuNDsiLCJAaW1wb3J0ICd+c2Nzcy9jb2xvcnMnO1xyXG5AaW1wb3J0ICd+c2Nzcy9oZWFkZXItYnV0dG9uJztcclxuXHJcbiNjaHJvbWUtb25seSB7XHJcbiAgICBwb3NpdGlvbjogZml4ZWQ7XHJcbiAgICBkaXNwbGF5OiBub25lO1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgICB0b3A6IDA7XHJcbiAgICBsZWZ0OiAwO1xyXG4gICAgcmlnaHQ6IDA7XHJcbiAgICBib3R0b206IDA7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkY29sb3I1O1xyXG4gICAgei1pbmRleDogMTAwMDtcclxuICAgIHBvaW50ZXItZXZlbnRzOiBhbGw7XHJcbiAgICBjdXJzb3I6IGRlZmF1bHQ7XHJcbiAgfSJdfQ== */\"","\r\nimport { Component, AfterViewInit, } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'chrome',\r\n    templateUrl: 'chrome.component.html',\r\n    styleUrls: ['chrome.component.scss']\r\n})\r\nexport class ChromeComponent implements AfterViewInit {\r\n\r\n    check: boolean;\r\n\r\n    constructor() {\r\n\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        // @ts-ignore\r\n        const isChromium = window.chrome;\r\n        const winNav = window.navigator;\r\n        const vendorName = winNav.vendor;\r\n        // @ts-ignore\r\n        const isOpera = typeof window.opr !== 'undefined';\r\n        const isIEedge = winNav.userAgent.indexOf('Edge') > -1;\r\n        const isIOSChrome = winNav.userAgent.match('CriOS');\r\n        if (isIOSChrome) {\r\n        } else if (\r\n          isChromium !== null &&\r\n          typeof isChromium !== 'undefined' &&\r\n          vendorName === 'Google Inc.' &&\r\n          isOpera === false &&\r\n          isIEedge === false\r\n        ) {\r\n        } else {\r\n            document.getElementById('chrome-only').style.display = 'block';\r\n        }\r\n    }\r\n\r\n\r\n}\r\n","module.exports = \"<button id='executeButton' class=\\\"btn\\\" mat-icon-button title=\\\"Execute\\\" (click)=\\\"execute()\\\">\\r\\n    <mat-icon>play_circle_outline</mat-icon>\\r\\n</button>\\r\\n\"","module.exports = \"panel-header button {\\n  display: inline-block;\\n  vertical-align: bottom;\\n  background-color: transparent;\\n  color: #808080;\\n  border: none;\\n  outline: none;\\n  cursor: pointer;\\n  padding: 0px;\\n  width: 34px;\\n  height: 34px;\\n  transition: 0.3s;\\n  font-size: 15px; }\\n\\npublish-header button {\\n  display: inline-block;\\n  vertical-align: bottom;\\n  background-color: transparent;\\n  color: #808080;\\n  border: none;\\n  outline: none;\\n  cursor: pointer;\\n  padding: 0px;\\n  width: 34px;\\n  height: 34px;\\n  transition: 0.3s;\\n  font-size: 15px; }\\n\\nbutton:hover {\\n  color: #00006d; }\\n\\npanel-header button.active {\\n  color: #00006d; }\\n\\npublish-header button.active {\\n  color: #00006d; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc2hhcmVkL2NvbXBvbmVudHMvZXhlY3V0ZS9DOlxcRHJvcGJveFxcRmlsZXNcXFNvZnR3YXJlXFxHaXRIdWJcXGRlc2lnbi1hdXRvbWF0aW9uXFxtb2JpdXMtcGFyYW1ldHJpYy1tb2RlbGxlci9zcmNcXHNjc3NcXGhlYWRlci1idXR0b24uc2NzcyIsInNyYy9hcHAvc2hhcmVkL2NvbXBvbmVudHMvZXhlY3V0ZS9DOlxcRHJvcGJveFxcRmlsZXNcXFNvZnR3YXJlXFxHaXRIdWJcXGRlc2lnbi1hdXRvbWF0aW9uXFxtb2JpdXMtcGFyYW1ldHJpYy1tb2RlbGxlci9zcmNcXHNjc3NcXGNvbG9ycy5zY3NzIiwic3JjL2FwcC9zaGFyZWQvY29tcG9uZW50cy9leGVjdXRlL0M6XFxEcm9wYm94XFxGaWxlc1xcU29mdHdhcmVcXEdpdEh1YlxcZGVzaWduLWF1dG9tYXRpb25cXG1vYml1cy1wYXJhbWV0cmljLW1vZGVsbGVyL3NyY1xcc2Nzc1xcdmFyaWFibGVzLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBR0E7RUFDSSxxQkFBcUI7RUFDckIsc0JBQXNCO0VBQ3RCLDZCQUE2QjtFQUM3QixjQ05ZO0VET1osWUFBWTtFQUNaLGFBQWE7RUFDYixlQUFlO0VBQ2YsWUFBWTtFQUNaLFdBQVc7RUFDWCxZQUFZO0VBQ1osZ0JBQWdCO0VBQ2hCLGVFWFMsRUFBQTs7QUZjYjtFQUNJLHFCQUFxQjtFQUNyQixzQkFBc0I7RUFDdEIsNkJBQTZCO0VBQzdCLGNDckJZO0VEc0JaLFlBQVk7RUFDWixhQUFhO0VBQ2IsZUFBZTtFQUNmLFlBQVk7RUFDWixXQUFXO0VBQ1gsWUFBWTtFQUNaLGdCQUFnQjtFQUNoQixlRTFCUyxFQUFBOztBRjZCYjtFQUNJLGNDdEIyQixFQUFBOztBRHlCL0I7RUFDSSxjQzFCMkIsRUFBQTs7QUQ2Qi9CO0VBQ0ksY0M5QjJCLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9zaGFyZWQvY29tcG9uZW50cy9leGVjdXRlL2V4ZWN1dGUuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJAaW1wb3J0ICd+c2Nzcy92YXJpYWJsZXMnO1xyXG5AaW1wb3J0ICd+c2Nzcy9jb2xvcnMnO1xyXG5cclxucGFuZWwtaGVhZGVyIGJ1dHRvbiB7XHJcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICB2ZXJ0aWNhbC1hbGlnbjogYm90dG9tO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XHJcbiAgICBjb2xvcjogJGNvbG9yMTtcclxuICAgIGJvcmRlcjogbm9uZTtcclxuICAgIG91dGxpbmU6IG5vbmU7XHJcbiAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgICBwYWRkaW5nOiAwcHg7XHJcbiAgICB3aWR0aDogMzRweDtcclxuICAgIGhlaWdodDogMzRweDtcclxuICAgIHRyYW5zaXRpb246IDAuM3M7XHJcbiAgICBmb250LXNpemU6ICRmc2l6ZTE7XHJcbn1cclxuXHJcbnB1Ymxpc2gtaGVhZGVyIGJ1dHRvbiB7XHJcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICB2ZXJ0aWNhbC1hbGlnbjogYm90dG9tO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XHJcbiAgICBjb2xvcjogJGNvbG9yMTtcclxuICAgIGJvcmRlcjogbm9uZTtcclxuICAgIG91dGxpbmU6IG5vbmU7XHJcbiAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgICBwYWRkaW5nOiAwcHg7XHJcbiAgICB3aWR0aDogMzRweDtcclxuICAgIGhlaWdodDogMzRweDtcclxuICAgIHRyYW5zaXRpb246IDAuM3M7XHJcbiAgICBmb250LXNpemU6ICRmc2l6ZTE7XHJcbn1cclxuXHJcbmJ1dHRvbjpob3ZlciB7XHJcbiAgICBjb2xvcjokc2VsZWN0ZWQtY29sb3I7XHJcbn1cclxuXHJcbnBhbmVsLWhlYWRlciBidXR0b24uYWN0aXZlIHtcclxuICAgIGNvbG9yOiAkc2VsZWN0ZWQtY29sb3I7XHJcbn1cclxuXHJcbnB1Ymxpc2gtaGVhZGVyIGJ1dHRvbi5hY3RpdmUge1xyXG4gICAgY29sb3I6ICRzZWxlY3RlZC1jb2xvcjtcclxufVxyXG4iLCJcclxuJGNvbG9yMTogIzgwODA4MDtcclxuJGNvbG9yMjogIzk5OTk5OTtcclxuJGNvbG9yMzogI0IzQjNCMzsgXHJcbiRjb2xvcjQ6ICNDQ0NDQ0M7XHJcbiRjb2xvcjU6ICNFNkU2RTY7XHJcbiRjb2xvcjUtNTogcmdiKDI0NSwgMjQ1LCAyNDUpO1xyXG4kY29sb3I2OiByZ2IoMjUwLCAyNTAsIDI1MSk7XHJcblxyXG4kY29sb3I3OiB3aGl0ZTtcclxuJGNvbG9yODogIzM3MzczNztcclxuXHJcbiRzZWxlY3RlZC1jb2xvcjogcmdiKDAsIDAsIDEwOSk7XHJcbiRob3Zlci1jb2xvcjogJGNvbG9yMjtcclxuXHJcbiRlcnJvci1jb2xvcjogI0U5NDg1ODsgLy9waW5rLXJlZFxyXG4kZXJyb3ItY29sb3ItbHQ6IHJnYigyNTUsIDIyMCwgMjI0KTtcclxuJHBjb2xvcjI6ICNGM0EzMkE7IC8vb3JhbmdlLXllbGxvd1xyXG4kcHJpbnQtY29sb3I6IHJnYigxMzAsIDE5MSwgMTEwKTsgLy9saWdodGdyZWVuXHJcbiRwcmludC1jb2xvci1sdDogcmdiKDIzMCwgMjU1LCAyMjEpO1xyXG4kc2VsZWN0R2VvbS1jb2xvcjogcmdiKDI1NSwgMTc0LCAwKTsgLy8gbGlnaHQgb3JhbmdlXHJcbiRzZWxlY3RHZW9tLWNvbG9yLWx0OiByZ2IoMjU1LCAyMjUsIDE2MCk7XHJcblxyXG4vLyAkcHJvZC1iYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMjUwLDI1MCwyNTApO1xyXG4vLyAkYmFja2dyb3VuZC1jb2xvcjogcmdiKDIyMCwyMjAsMjIwKTtcclxuJGZ1bmN0aW9uLXRleHQtY29sb3I6IHJnYigxOTAsIDE0MCwgMzApO1xyXG4kZnVuY3Rpb24tdGV4dC1jb2xvcjI6IHJnYigxOCwgMTI2LCAxMzYpO1xyXG4kYmFzaWMtZnVuY3Rpb24tdGV4dC1jb2xvcjogcmdiKDIwMCwgNzAsIDE1MCk7XHJcbiRjb21tZW50LWNvbG9yOiBkYXJrZ3JlZW47XHJcbiIsIiRwYWRkaW5nOiA0MHB4OyAvLyA/IG5vdCB1c2VkXHJcbiRzbWFsbC1wYWRkaW5nOiAxNXB4O1xyXG4kaGVhZGVyLWhlaWdodDogNDBweDtcclxuXHJcbiRmc2l6ZTE6IDE1cHg7XHJcbiRmc2l6ZTI6IDEycHg7XHJcbiRmc2l6ZTM6IDMwcHg7XHJcblxyXG4kcG9ydC1zaXplOiAxNXB4O1xyXG4kZGVmYXVsdC1zaWRlLXBhZGRpbmc6IDE1cHg7XHJcblxyXG4kZGlzYWJsZWQtb3BhY2l0eTogMC40OyJdfQ== */\"","import { Component, isDevMode } from '@angular/core';\r\nimport { IFlowchart, FlowchartUtils } from '@models/flowchart';\r\nimport { CodeUtils } from '@models/code';\r\nimport { INode, NodeUtils } from '@models/node';\r\nimport { IProcedure, ProcedureTypes } from '@models/procedure';\r\n\r\nimport * as Modules from '@modules';\r\nimport { _parameterTypes, _varString } from '@modules';\r\nimport { DataService } from '@services';\r\n// import { WebWorkerService } from 'ngx-web-worker';\r\nimport { InputType } from '@models/port';\r\nimport { GoogleAnalyticsService } from '@shared/services/google.analytics';\r\n\r\nexport const mergeInputsFunc = `\r\nfunction mergeInputs(models){\r\n    let result = __modules__.${_parameterTypes.new}();\r\n    for (let model of models){\r\n        __modules__.${_parameterTypes.merge}(result, model);\r\n    }\r\n    return result;\r\n}\r\n`;\r\nexport const printFunc = `\r\nfunction printFunc(_console, name, value){\r\n    let val;\r\n    if (typeof value === 'number' || value === undefined) {\r\n        val = value;\r\n    } else if (typeof value === 'string') {\r\n        val = '\"' + value + '\"';\r\n    } else if (value.constructor === [].constructor) {\r\n        val = JSON.stringify(value);\r\n    } else if (value.constructor === {}.constructor) {\r\n        val = JSON.stringify(value);\r\n    } else {\r\n        val = value;\r\n    }\r\n    _console.push(name+': '+val);\r\n    return val;\r\n}\r\n`;\r\nconst DEBUG = false;\r\n\r\n@Component({\r\n    selector: 'execute',\r\n    templateUrl: 'execute.component.html',\r\n    styleUrls: ['execute.component.scss']\r\n})\r\nexport class ExecuteComponent {\r\n\r\n    private startTime;\r\n    private isDev = true;\r\n    constructor(private dataService: DataService, private googleAnalyticsService: GoogleAnalyticsService) {\r\n        this.isDev = isDevMode();\r\n    }\r\n\r\n    async execute(testing?: boolean) {\r\n        this.startTime = performance.now();\r\n        document.getElementById('spinner-on').click();\r\n        this.dataService.log(' ');\r\n\r\n        // reset input of all nodes except start & resolve all async processes (file reading + get url content)\r\n        for (const node of this.dataService.flowchart.nodes) {\r\n            let EmptyECheck = false;\r\n            let InvalidECheck = false;\r\n            if (node.type !== 'start') {\r\n                if (node.input.edges) {\r\n                    node.input.value = undefined;\r\n                }\r\n            }\r\n\r\n            try {\r\n                await this.resolveImportedUrl(node.procedure);\r\n            } catch (ex) {\r\n                document.getElementById('spinner-off').click();\r\n                document.getElementById('Console').click();\r\n                this.dataService.log(ex.message);\r\n                const _category = this.isDev ? 'dev' : 'execute';\r\n                this.googleAnalyticsService.trackEvent(_category, `error: ${ex.name}`, 'click', performance.now() - this.startTime);\r\n                throw ex;\r\n            }\r\n\r\n            if (!node.enabled) {\r\n                continue;\r\n            }\r\n\r\n            for (const prod of node.procedure) {\r\n                if (prod.type === ProcedureTypes.Return || prod.type === ProcedureTypes.Comment || !prod.enabled) { continue; }\r\n                if (prod.args.length > 0 && prod.args[0].invalidVar) {\r\n                    node.hasError = true;\r\n                    prod.hasError = true;\r\n                    InvalidECheck = true;\r\n                }\r\n                if (prod.type === ProcedureTypes.Constant) {\r\n                    try {\r\n                        prod.resolvedValue = await CodeUtils.getStartInput(prod.args[1], prod.meta.inputMode);\r\n                    } catch (ex) {\r\n                        node.hasError = true;\r\n                        prod.hasError = true;\r\n                        if (ex.message.indexOf('HTTP') !== -1 || ex.message.indexOf('File Reading') !== -1) {\r\n                            document.getElementById('Console').click();\r\n                            document.getElementById('spinner-off').click();\r\n                            const _category = this.isDev ? 'dev' : 'execute';\r\n                            this.googleAnalyticsService.trackEvent(_category, `error: Reserved Word Argument`,\r\n                                'click', performance.now() - this.startTime);\r\n                            this.dataService.log(ex.message);\r\n                            throw(ex);\r\n                        }\r\n                        InvalidECheck = true;\r\n                    }\r\n                    if (!prod.args[0].value || (!prod.args[1].value && !prod.args[1].default &&\r\n                        prod.args[1].value !== 0 && prod.args[1].default !== 0)) {\r\n                        node.hasError = true;\r\n                        prod.hasError = true;\r\n                        EmptyECheck = true;\r\n                    }\r\n                } else {\r\n                    for (const arg of prod.args) {\r\n                        if (arg.name[0] === '_' || arg.type === 5) {\r\n                            continue;\r\n                        }\r\n                        if (arg.value !== 0 && !arg.value) {\r\n                            node.hasError = true;\r\n                            prod.hasError = true;\r\n                            EmptyECheck = true;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            if (EmptyECheck) {\r\n                document.getElementById('Console').click();\r\n                this.dataService.log('Error: Empty Argument detected. Check marked node(s) and procedure(s)!');\r\n                document.getElementById('spinner-off').click();\r\n                const _category = this.isDev ? 'dev' : 'execute';\r\n                this.googleAnalyticsService.trackEvent(_category, `error: Empty Argument`, 'click', performance.now() - this.startTime);\r\n                throw new Error('Empty Argument');\r\n            }\r\n            if (InvalidECheck) {\r\n                document.getElementById('Console').click();\r\n                this.dataService.log('Error: Invalid Argument or Argument with Reserved Word detected.' +\r\n                                     'Check marked node(s) and procedure(s)!');\r\n                document.getElementById('spinner-off').click();\r\n                const _category = this.isDev ? 'dev' : 'execute';\r\n                this.googleAnalyticsService.trackEvent(_category, `error: Reserved Word Argument`,\r\n                    'click', performance.now() - this.startTime);\r\n                throw new Error('Reserved Word Argument');\r\n            }\r\n        }\r\n\r\n        if (testing) {\r\n            this.executeFlowchart();\r\n            return;\r\n        } else {\r\n            // setTimeout for 20ms so that the loading screen has enough time to be loaded in\r\n            setTimeout(() => {\r\n                this.executeFlowchart();\r\n            }, 20);\r\n        }\r\n\r\n    }\r\n\r\n    executeFlowchart() {\r\n        let globalVars = '';\r\n\r\n        // order the flowchart\r\n        if (!this.dataService.flowchart.ordered) {\r\n            FlowchartUtils.orderNodes(this.dataService.flowchart);\r\n        }\r\n\r\n        // get the string of all imported functions\r\n        const funcStrings = {};\r\n        for (const func of this.dataService.flowchart.functions) {\r\n            funcStrings[func.name] =  CodeUtils.getFunctionString(func);\r\n        }\r\n\r\n        // execute each node\r\n        for (const node of this.dataService.flowchart.nodes) {\r\n            if (!node.enabled) {\r\n                node.output.value = undefined;\r\n                continue;\r\n            }\r\n            globalVars = this.executeNode(node, funcStrings, globalVars);\r\n        }\r\n\r\n        for (const node of this.dataService.flowchart.nodes) {\r\n            if (node.type !== 'end') {\r\n                delete node.output.value;\r\n            }\r\n        }\r\n\r\n        document.getElementById('spinner-off').click();\r\n        const category = this.isDev ? 'dev' : 'execute';\r\n        this.googleAnalyticsService.trackEvent(category, 'successful', 'click', performance.now() - this.startTime);\r\n    }\r\n\r\n    async resolveImportedUrl(prodList: IProcedure[]) {\r\n        for (const prod of prodList) {\r\n            if (prod.type === ProcedureTypes.Imported) {\r\n                for (let i = 1; i < prod.args.length; i++) {\r\n                    const arg = prod.args[i];\r\n                    // args.slice(1).map((arg) => {\r\n                    if (arg.type.toString() !== InputType.URL.toString()) { continue; }\r\n                    prod.resolvedValue = await CodeUtils.getStartInput(arg, InputType.URL);\r\n                }\r\n            } else if (prod.type === ProcedureTypes.Function && prod.meta.name === 'ImportData') {\r\n                const arg = prod.args[2];\r\n                let val = <string>arg.value.replace(/ /g, '');\r\n                if (val[0] === '\"' || val[0] === `'`) {\r\n                    val = val.substring(1, val.length - 1);\r\n                }\r\n                if (val.indexOf('dropbox') !== -1) {\r\n                    val = val.replace('www', 'dl').replace('dl=0', 'dl=1');\r\n                }\r\n                const p = new Promise((resolve) => {\r\n                    const request = new XMLHttpRequest();\r\n                    request.open('GET', val);\r\n                    request.onload = () => {\r\n                        if (request.status === 200) {\r\n                            resolve(request.responseText);\r\n                        } else {\r\n                            resolve(undefined);\r\n                        }\r\n                    };\r\n                    request.onerror = () => {\r\n                        resolve(undefined);\r\n                    };\r\n                    request.send();\r\n                });\r\n                const result = await p;\r\n                if (result === undefined) {\r\n                    prod.resolvedValue = arg.value;\r\n                } else {\r\n                    prod.resolvedValue = '`' + result + '`';\r\n                }\r\n            }\r\n            if (prod.children) {await this.resolveImportedUrl(prod.children); }\r\n        }\r\n    }\r\n\r\n    executeNode(node: INode, funcStrings, globalVars): string {\r\n        const params = {'currentProcedure': [''], 'console': []};\r\n        let fnString = '';\r\n        const startTime = performance.now();\r\n        try {\r\n            // get the code for the node\r\n            const codeRes = CodeUtils.getNodeCode(node, true);\r\n            const nodeCode = codeRes[0];\r\n            const varsDefined = codeRes[1];\r\n\r\n\r\n\r\n            // fnString = printFunc + nodeCode.join('\\n');\r\n            fnString = printFunc + '\\nfunction __main_node_code__(){\\n' + nodeCode.join('\\n') + '\\n}\\nreturn __main_node_code__();';\r\n            // add the constants from the start node\r\n            fnString = _varString + globalVars + fnString;\r\n            params['model'] = _parameterTypes.newFn();\r\n            _parameterTypes.mergeFn(params['model'], node.input.value);\r\n\r\n            // add the imported functions code\r\n            let hasFunctions = false;\r\n            for (const funcName in funcStrings) {\r\n                if (funcStrings.hasOwnProperty(funcName)) {\r\n                    fnString = funcStrings[funcName] + fnString;\r\n                    hasFunctions = true;\r\n                }\r\n            }\r\n            if (hasFunctions || node.type === 'start') {\r\n                fnString = mergeInputsFunc + '\\n\\n' + fnString;\r\n            }\r\n            // print the code\r\n            this.dataService.log(`Executing node: ${node.name}\\n`);\r\n            if (DEBUG) {\r\n                console.log(`______________________________________________________________\\n/*     ${node.name.toUpperCase()}     */\\n`);\r\n                console.log(fnString);\r\n            }\r\n\r\n            const prevWindowVar = {};\r\n            for (const v of varsDefined) {\r\n                if (window.hasOwnProperty(v)) {\r\n                    prevWindowVar[v] = window[v];\r\n                }\r\n            }\r\n\r\n            // create the function with the string: new Function ([arg1[, arg2[, ...argN]],] functionBody)\r\n            const fn = new Function('__modules__', '__params__', fnString);\r\n            // execute the function\r\n\r\n            const result = fn(Modules, params);\r\n\r\n            for (const v of varsDefined) {\r\n                if (window.hasOwnProperty(v)) {\r\n                    delete window[v];\r\n                    if (prevWindowVar[v]) {\r\n                        window[v] = prevWindowVar[v];\r\n                    }\r\n                }\r\n            }\r\n\r\n            node.output.value = result;\r\n            if (node.type === 'start') {\r\n                for (const constant in params['constants']) {\r\n                    if (params['constants'].hasOwnProperty(constant)) {\r\n                        const constString = JSON.stringify(params['constants'][constant]);\r\n                        globalVars += `const ${constant} = ${constString};\\n`;\r\n                    }\r\n                }\r\n                globalVars += '\\n';\r\n            }\r\n            node.model = params['model'];\r\n            const endTime = performance.now();\r\n            const duration: number = Math.round(endTime - startTime);\r\n            let duration_msg: string;\r\n            if (duration < 1000)  {\r\n                duration_msg = '  Executed in ' + duration + ' milliseconds.';\r\n            } else {\r\n                duration_msg = '  Executed in ' + duration / 1000 + ' seconds.';\r\n            }\r\n            for (const str of params.console) {\r\n                this.dataService.log(str);\r\n            }\r\n            this.dataService.log(duration_msg);\r\n            return globalVars;\r\n        } catch (ex) {\r\n            for (const str of params.console) {\r\n                this.dataService.log(str);\r\n            }\r\n            const endTime = performance.now();\r\n            const duration: number = Math.round(endTime - startTime);\r\n            let duration_msg: string;\r\n            if (duration < 1000)  {\r\n                duration_msg = '  Executed in ' + duration + ' milliseconds.';\r\n            } else {\r\n                duration_msg = '  Executed in ' + duration / 1000 + ' seconds.';\r\n            }\r\n            this.dataService.log(duration_msg);\r\n            document.getElementById('spinner-off').click();\r\n            if (DEBUG) {\r\n                this.dataService.log('\\n=======================================\\n' +\r\n                    ex.name +\r\n                    '\\n=======================================\\n' +\r\n                    ex.message);\r\n                throw ex;\r\n            }\r\n            node.hasError = true;\r\n            // console.warn(`${node.name} errored`);\r\n\r\n            // Unexpected Identifier\r\n            // Unexpected token\r\n            const prodWithError: string = params['currentProcedure'][0];\r\n            const markError = function(prod: IProcedure, id: string) {\r\n                if (prod['ID'] && id && prod['ID'] === id) {\r\n                    prod.hasError = true;\r\n                }\r\n                if (prod.children) {\r\n                    prod.children.map(function(p) {\r\n                        markError(p, id);\r\n                    });\r\n                }\r\n            };\r\n            if (prodWithError !== '') {\r\n                node.procedure.map(function(prod: IProcedure) {\r\n                    if (prod['ID'] === prodWithError) {\r\n                        prod.hasError = true;\r\n                    }\r\n                    if (prod.children) {\r\n                        prod.children.map(function(p) {\r\n                            markError(p, prodWithError);\r\n                        });\r\n                    }\r\n                });\r\n            }\r\n\r\n            if (ex.toString().indexOf('Unexpected identifier') > -1) {\r\n                ex.message = 'Unexpected Identifier error. Did you declare everything?' +\r\n                'Check that your strings are enclosed in quotes (\")';\r\n            } else if (ex.toString().indexOf('Unexpected token') > -1 || ex.toString().indexOf('unexpected token') > -1) {\r\n                ex.message = 'Unexpected token error. Check for stray spaces or reserved keywords?';\r\n            } else if (ex.toString().indexOf('\\'readAsText\\' on \\'FileReader\\'') > -1) {\r\n                ex.message = 'Unable to read file input. Check all start node inputs.';\r\n            } else if (ex.toString().indexOf('Cannot read property \\'splice\\'') > -1) {\r\n                ex.message = 'Unrecognized or missing variable in the procedure.';\r\n            }\r\n            document.getElementById('Console').click();\r\n            this.dataService.log('\\n=======================================\\n' +\r\n                        ex.name +\r\n                        '\\n=======================================\\n' +\r\n                        ex.message);\r\n            // console.log('---------------\\nError node code:');\r\n            // console.log(fnString);\r\n            const category = this.isDev ? 'dev' : 'execute';\r\n            this.googleAnalyticsService.trackEvent(category, `error: ${ex.name}`, 'click', performance.now() - this.startTime);\r\n            throw ex;\r\n\r\n        }\r\n    }\r\n\r\n    runningFunction(functionDetails) {\r\n        // create the function with the string: new Function ([arg1[, arg2[, ...argN]],] functionBody)\r\n        const fn = new Function('__modules__', '__params__', functionDetails.fnString);\r\n        // execute the function\r\n        const result = fn(functionDetails.Modules, functionDetails.params);\r\n        return [result, functionDetails.params];\r\n    }\r\n}\r\n","\r\nexport class DownloadUtils {\r\n\r\n    static downloadFile(fileName: string, fileContent: Blob) {\r\n        if (window.navigator.msSaveOrOpenBlob) {\r\n            window.navigator.msSaveOrOpenBlob(fileContent, fileName);\r\n        } else {\r\n            const a = document.createElement('a');\r\n            document.body.appendChild(a);\r\n            const url = window.URL.createObjectURL(fileContent);\r\n            a.href = url;\r\n            a.download = fileName;\r\n            a.click();\r\n            setTimeout(() => {\r\n                window.URL.revokeObjectURL(url);\r\n                document.body.removeChild(a);\r\n            }, 0);\r\n        }\r\n    }\r\n}\r\n","export { SaveFileComponent } from './savefile.component';\r\nexport { LoadFileComponent } from './loadfile.component';\r\nexport { NewFileComponent } from './newfile.component';\r\n","import { Component } from '@angular/core';\r\nimport { IMobius } from '@models/mobius';\r\nimport { Observable } from 'rxjs';\r\nimport * as circularJSON from 'circular-json';\r\nimport { DataService } from '@services';\r\nimport { _parameterTypes } from '@modules';\r\nimport { ModuleList } from '@shared/decorators';\r\nimport { checkMissingProd } from '@shared/checkMissingProd';\r\nimport { checkNodeValidity } from '@shared/parser';\r\n\r\n@Component({\r\n  selector: 'file-load',\r\n  template:  `<button id='loadfile' class='btn' onclick=\"document.getElementById('file-input').click();\">Load</button>\r\n              <input id=\"file-input\" type=\"file\" (change)=\"sendloadfile()\" style=\" display: none;\" />`,\r\n  styles: [\r\n            `\r\n            button.btn{\r\n                margin: 0px 0px 0px 0px;\r\n                font-size: 10px;\r\n                line-height: 12px;\r\n                border: 2px solid gray;\r\n                border-radius: 4px;\r\n                padding: 2px 5px;\r\n                background-color: #3F4651;\r\n                color: #E7BF00;\r\n                font-weight: 600;\r\n                text-transform: uppercase;\r\n             }\r\n            button.btn:hover{\r\n                background-color: gray;\r\n                color: white;\r\n            }\r\n\r\n             `\r\n          ]\r\n})\r\nexport class LoadFileComponent {\r\n\r\n    constructor(private dataService: DataService) {}\r\n\r\n\r\n    sendloadfile() {\r\n        const selectedFile = (<HTMLInputElement>document.getElementById('file-input')).files[0];\r\n        const stream = Observable.create(observer => {\r\n            const reader = new FileReader();\r\n            reader.onloadend = () => {\r\n                // if (typeof reader.result === 'string') {}\r\n                const f = circularJSON.parse(<string>reader.result);\r\n                const file: IMobius = {\r\n                    name: selectedFile.name.split('.mob')[0],\r\n                    author: f.author,\r\n                    flowchart: f.flowchart,\r\n                    last_updated: f.last_updated,\r\n                    version: f.version,\r\n                    settings: f.settings || {}\r\n                };\r\n                // file.flowchart.name = selectedFile.name.split('.mob')[0];\r\n                let hasError = false;\r\n                for (const node of file.flowchart.nodes) {\r\n                    if (!checkMissingProd(node.procedure)) {\r\n                        node.hasError = true;\r\n                        hasError = true;\r\n                    }\r\n                }\r\n                if (hasError) {\r\n                    alert('The flowchart contains functions that does not exist in the current version of Mobius');\r\n                }\r\n\r\n                // TO BE REMOVED after all the existing mob files are updated\r\n                const endNode = file.flowchart.nodes[file.flowchart.nodes.length - 1];\r\n                if (endNode.procedure.length === 0) {\r\n                    endNode.procedure = [{type: 13, ID: '',\r\n                    parent: undefined,\r\n                    meta: {name: '', module: ''},\r\n                    variable: undefined,\r\n                    children: undefined,\r\n                    argCount: 0,\r\n                    args: [],\r\n                    print: false,\r\n                    enabled: true,\r\n                    selected: false,\r\n                    selectGeom: false,\r\n                    hasError: false}];\r\n                }\r\n                if (endNode.procedure[endNode.procedure.length - 1].type !== 11) {\r\n                    const returnMeta = _parameterTypes.return.split('.');\r\n                    for (const i of ModuleList) {\r\n                        if (i.module !== returnMeta[0]) { continue; }\r\n                        for ( const j of i.functions) {\r\n                            if (j.name !== returnMeta[1]) { continue; }\r\n                            endNode.procedure.push({type: 11, ID: '',\r\n                            parent: undefined,\r\n                            meta: {name: '', module: ''},\r\n                            variable: undefined,\r\n                            children: undefined,\r\n                            argCount: j.argCount,\r\n                            args: j.args,\r\n                            print: false,\r\n                            enabled: true,\r\n                            selected: false,\r\n                            selectGeom: false,\r\n                            hasError: false});\r\n                            break;\r\n                        }\r\n                        break;\r\n                    }\r\n                }\r\n                // REMOVE ENDS\r\n\r\n                observer.next(file);\r\n                observer.complete();\r\n                };\r\n            reader.readAsText(selectedFile);\r\n        });\r\n        stream.subscribe(loadeddata => {\r\n            this.dataService.file = loadeddata;\r\n            if (loadeddata.settings && JSON.stringify(loadeddata.settings) !== '{}') {\r\n                window.localStorage.setItem('mpm_settings', loadeddata.settings);\r\n            }\r\n            this.dataService.newFlowchart = true;\r\n            if (this.dataService.node.type !== 'end') {\r\n                loadeddata.flowchart.meta.selected_nodes = [loadeddata.flowchart.nodes.length - 1];\r\n                // for (let i = 0; i < loadeddata.flowchart.nodes.length; i++) {\r\n                //     if (loadeddata.flowchart.nodes[i].type === 'end') {\r\n                //         loadeddata.flowchart.meta.selected_nodes = [i];\r\n                //         break;\r\n                //     }\r\n                // }\r\n            }\r\n            for (const node of loadeddata.flowchart.nodes) {\r\n                checkNodeValidity(node);\r\n            }\r\n            document.getElementById('executeButton').click();\r\n            const zooming = document.getElementById('zoomToFit');\r\n            if (zooming) {\r\n                zooming.click();\r\n                this.dataService.newFlowchart = false;\r\n            } else {\r\n                this.dataService.newFlowchart = true;\r\n            }\r\n        });\r\n        (<HTMLInputElement>document.getElementById('file-input')).value = '';\r\n    }\r\n\r\n}\r\n","import { Component, Output, EventEmitter } from '@angular/core';\r\nimport { IMobius } from '@models/mobius';\r\nimport { Observable } from 'rxjs';\r\nimport { ProcedureTypes } from '@shared/models/procedure';\r\nimport * as circularJSON from 'circular-json';\r\nimport * as funcs from '@modules';\r\nimport { DataService } from '@services';\r\nimport { _parameterTypes } from '@modules';\r\nimport { ModuleList } from '@shared/decorators';\r\nimport { Router } from '@angular/router';\r\nimport { checkMissingProd } from '@shared/checkMissingProd';\r\nimport { checkNodeValidity } from '@shared/parser';\r\n\r\n@Component({\r\n  selector: 'load-url',\r\n  template:  `<button id='loadurl' class='btn'></button>`,\r\n  styles: [\r\n            `\r\n            button.btn{\r\n                visibility: hidden;\r\n            }\r\n            `\r\n          ]\r\n})\r\nexport class LoadUrlComponent {\r\n\r\n    constructor(private dataService: DataService, private router: Router) {}\r\n\r\n\r\n    async loadStartUpURL(routerUrl: string) {\r\n        let url: any = routerUrl.split('file=');\r\n        if (url.length <= 1 ) {\r\n            return;\r\n        }\r\n        url = url[1].split('&')[0];\r\n        url = url.replace(/%2F/g, '/');\r\n        url = url.replace(/%5C/g, '\\\\');\r\n        url = url.replace(/%22|%27|'|\\s/g, '');\r\n        if (url.indexOf('dropbox') !== -1) {\r\n            url = url.replace('www', 'dl').replace('dl=0', 'dl=1');\r\n        }\r\n        if (routerUrl.indexOf('node=') !== -1) {\r\n            let nodeID: any = routerUrl.split('node=')[1].split('&')[0];\r\n            nodeID = Number(nodeID.replace(/%22|%27|'/g, ''));\r\n            await this.loadURL(url, nodeID);\r\n        } else {\r\n            await this.loadURL(url);\r\n        }\r\n    }\r\n\r\n\r\n\r\n    async loadURL(url: string, nodeID?: number) {\r\n        const p = new Promise((resolve) => {\r\n            const request = new XMLHttpRequest();\r\n\r\n            request.open('GET', url);\r\n            request.onload = () => {\r\n                if (request.status === 200) {\r\n\r\n                    const f = circularJSON.parse(request.responseText);\r\n                    const urlSplit = url.split('/');\r\n                    const file: IMobius = {\r\n                        name: urlSplit[urlSplit.length - 1 ].split('.mob')[0],\r\n                        author: f.author,\r\n                        flowchart: f.flowchart,\r\n                        last_updated: f.last_updated,\r\n                        version: f.version,\r\n                        settings: f.settings || {}\r\n                    };\r\n                    // file.flowchart.name = urlSplit[urlSplit.length - 1 ].split('.mob')[0];\r\n\r\n                    // TO BE REMOVED after all the existing mob files are updated\r\n                    const endNode = file.flowchart.nodes[file.flowchart.nodes.length - 1];\r\n                    if (endNode.procedure.length === 0) {\r\n                        endNode.procedure = [{type: 13, ID: '',\r\n                        parent: undefined,\r\n                        meta: {name: '', module: ''},\r\n                        children: undefined,\r\n                        variable: undefined,\r\n                        argCount: 0,\r\n                        args: [],\r\n                        print: false,\r\n                        enabled: true,\r\n                        selected: false,\r\n                        selectGeom: false,\r\n                        hasError: false}];\r\n                    }\r\n                    if (endNode.procedure[endNode.procedure.length - 1].type !== 11) {\r\n                        const returnMeta = _parameterTypes.return.split('.');\r\n                        for (const i of ModuleList) {\r\n                            if (i.module !== returnMeta[0]) { continue; }\r\n                            for ( const j of i.functions) {\r\n                                if (j.name !== returnMeta[1]) { continue; }\r\n                                endNode.procedure.push({type: 11, ID: '',\r\n                                parent: undefined,\r\n                                meta: {name: '', module: ''},\r\n                                children: undefined,\r\n                                variable: undefined,\r\n                                argCount: j.argCount,\r\n                                args: j.args,\r\n                                print: false,\r\n                                enabled: true,\r\n                                selected: false,\r\n                                selectGeom: false,\r\n                                hasError: false});\r\n                                break;\r\n                            }\r\n                            break;\r\n                        }\r\n                    }\r\n                    // REMOVE ENDS\r\n                    let hasError = false;\r\n                    for (const node of file.flowchart.nodes) {\r\n                        if (!checkMissingProd(node.procedure)) {\r\n                            node.hasError = true;\r\n                            hasError = true;\r\n                        }\r\n                    }\r\n                    if (hasError) {\r\n                        alert('The flowchart contains functions that does not exist in the current version of Mobius');\r\n                    }\r\n\r\n\r\n                    resolve(file);\r\n                } else {\r\n                    resolve('error happened');\r\n                }\r\n            };\r\n\r\n            request.onerror = () => {\r\n                resolve('error happened');\r\n            };\r\n            request.send();\r\n        });\r\n        const loadeddata: any = await p;\r\n        if (loadeddata === 'error happened') {\r\n            return;\r\n        }\r\n        this.dataService.file = loadeddata;\r\n        if (loadeddata.settings && JSON.stringify(loadeddata.settings) !== '{}') {\r\n            window.localStorage.setItem('mpm_settings', loadeddata.settings);\r\n        }\r\n        this.dataService.newFlowchart = true;\r\n        if ((nodeID || nodeID === 0) && nodeID >= 0 && nodeID < loadeddata.flowchart.nodes.length) {\r\n            loadeddata.flowchart.meta.selected_nodes = [nodeID];\r\n            this.router.navigate(['/editor']);\r\n        } else if (this.dataService.node.type !== 'end') {\r\n            loadeddata.flowchart.meta.selected_nodes = [loadeddata.flowchart.nodes.length - 1];\r\n        }\r\n        for (const node of loadeddata.flowchart.nodes) {\r\n            checkNodeValidity(node);\r\n        }\r\n        const executeB = document.getElementById('executeButton');\r\n        if (executeB) { executeB.click(); }\r\n    }\r\n\r\n}\r\n","import { Component, Output, EventEmitter, ChangeDetectorRef } from '@angular/core';\r\nimport { IMobius } from '@models/mobius';\r\nimport { FlowchartUtils } from '@models/flowchart';\r\nimport { DataService } from '@services';\r\n\r\n@Component({\r\n  selector: 'file-new',\r\n  template:  `<button id='newfile' class='btn' (click)='sendNewFile()'>New</button>`,\r\n  styles: [\r\n            `\r\n            button.btn{\r\n                margin: 0px 0px 0px 0px;\r\n                font-size: 10px;\r\n                line-height: 12px;\r\n                border: 2px solid gray;\r\n                border-radius: 4px;\r\n                padding: 2px 5px;\r\n                background-color: #3F4651;\r\n                color: #E7BF00;\r\n                font-weight: 600;\r\n                text-transform: uppercase;\r\n            }\r\n            button.btn:hover{\r\n                background-color: gray;\r\n                color: white;\r\n            }\r\n             `\r\n          ]\r\n})\r\nexport class NewFileComponent {\r\n\r\n    @Output() create = new EventEmitter();\r\n\r\n    constructor(private dataService: DataService, private cdr: ChangeDetectorRef) {}\r\n\r\n    sendNewFile() {\r\n        const confirmed = confirm('Loading a new file will delete the current flowchart. Would you like to continue?');\r\n        if (!confirmed) { return; }\r\n        const file: IMobius = {\r\n            name: 'Untitled',\r\n            author: 'new_user',\r\n            flowchart: FlowchartUtils.newflowchart(),\r\n            last_updated: new Date(),\r\n            version: 2,\r\n            settings: {}\r\n        };\r\n        this.dataService.file = file;\r\n        const zooming = document.getElementById('zoomToFit');\r\n        if (zooming) {\r\n            zooming.click();\r\n            this.dataService.newFlowchart = false;\r\n        } else {\r\n            this.dataService.newFlowchart = true;\r\n        }\r\n        this.cdr.detectChanges();\r\n        document.getElementById('executeButton').click();\r\n    }\r\n}\r\n","import { Component, Input} from '@angular/core';\r\nimport { DownloadUtils } from './download.utils';\r\nimport * as circularJSON from 'circular-json';\r\nimport { FlowchartUtils } from '@models/flowchart';\r\nimport { DataService } from '@services';\r\nimport { InputType } from '@models/port';\r\nimport { ProcedureTypes } from '@models/procedure';\r\nimport { IdGenerator } from '@utils';\r\n\r\n@Component({\r\n  selector: 'file-save',\r\n  template:  `<button id='savefile' class='btn' (click)='download()'>Save</button>`,\r\n  styles: [\r\n            `\r\n            button.btn{\r\n                margin: 0px 0px 0px 0px;\r\n                font-size: 10px;\r\n                line-height: 12px;\r\n                border: 2px solid gray;\r\n                border-radius: 4px;\r\n                padding: 2px 5px;\r\n                background-color: #3F4651;\r\n                color: #E7BF00;\r\n                font-weight: 600;\r\n                text-transform: uppercase;\r\n             }\r\n            button.btn:hover{\r\n                background-color: gray;\r\n                color: white;\r\n            }\r\n             `\r\n          ]\r\n})\r\nexport class SaveFileComponent {\r\n\r\n    constructor(private dataService: DataService) {}\r\n\r\n\r\n    async download() {\r\n        const f = this.dataService.file;\r\n        f.settings = localStorage.getItem('mpm_settings');\r\n        if (!f.flowchart.ordered) {\r\n            FlowchartUtils.orderNodes(f.flowchart);\r\n        }\r\n\r\n        for (const prod of f.flowchart.nodes[0].procedure) {\r\n            if (prod.type !== ProcedureTypes.Constant) { continue; }\r\n            if (prod.meta.inputMode.toString() === InputType.File.toString()) {\r\n                const arg = prod.args[1];\r\n                if (arg.value && arg.value.lastModified) {\r\n                    const p = new Promise((resolve) => {\r\n                        const reader = new FileReader();\r\n                        reader.onload = function() {\r\n                            resolve(reader.result);\r\n                        };\r\n                        reader.readAsText(arg.value);\r\n                    });\r\n                    window.localStorage.setItem(arg.value.name, '`' + await p + '`');\r\n                    arg.value = {'name': arg.value.name};\r\n                }\r\n                if (arg.default && arg.default.lastModified) {\r\n                    const p = new Promise((resolve) => {\r\n                        const reader = new FileReader();\r\n                        reader.onload = function() {\r\n                            resolve(reader.result);\r\n                        };\r\n                        reader.readAsText(arg.default);\r\n                    });\r\n                    window.localStorage.setItem(arg.default.name, '`' + await p + '`');\r\n                    arg.default = {'name': arg.default.name};\r\n                }\r\n            }\r\n        }\r\n\r\n        for (const node of f.flowchart.nodes) {\r\n            node.model = undefined;\r\n            if (node.input.hasOwnProperty('value')) {\r\n                node.input.value = undefined;\r\n            }\r\n            if (node.output.hasOwnProperty('value')) {\r\n                node.output.value = undefined;\r\n            }\r\n            for (const prod of node.procedure) {\r\n                if (prod.hasOwnProperty('resolvedValue')) {\r\n                    prod.resolvedValue = undefined;\r\n                }\r\n            }\r\n        }\r\n\r\n        const savedfile = circularJSON.parse(circularJSON.stringify(f));\r\n        for (const node of savedfile.flowchart.nodes) {\r\n            node.id = IdGenerator.getNodeID();\r\n            for (const prod of node.state.procedure) {\r\n                prod.selected = false;\r\n            }\r\n            node.state.procedure = [];\r\n        }\r\n\r\n        // **** need to modify this when changing the input's constant function:\r\n        // **** this part resets the value of the last argument of the function when saving the file\r\n        /*\r\n        for (const prod of savedfile.flowchart.nodes[0].procedure) {\r\n            prod.args[prod.argCount - 1].value = undefined;\r\n        }\r\n        */\r\n\r\n        savedfile.last_updated = new Date();\r\n        savedfile.flowchart.meta.selected_nodes = [0];\r\n        for (const edge of savedfile.flowchart.edges) {\r\n            edge.selected = false;\r\n        }\r\n\r\n\r\n        if (!savedfile.name || savedfile.name === '' || savedfile.name.toLowerCase() === 'untitled') {\r\n            savedfile.name = savedfile.flowchart.name;\r\n        }\r\n\r\n        const fileString = circularJSON.stringify(savedfile, null, 4);\r\n        let fname = savedfile.name.replace(/\\ /g, '_');\r\n        if (savedfile.name.length < 4 || savedfile.name.substring(savedfile.name.length - 4) !== '.mob') {\r\n            fname = `${fname}.mob`;\r\n        }\r\n        const blob = new Blob([fileString], {type: 'application/json'});\r\n        DownloadUtils.downloadFile(fname, blob);\r\n\r\n        this.dataService.file.name = 'Untitled';\r\n    }\r\n\r\n}\r\n","module.exports = \"<div class='container__header'>\\r\\n\\r\\n    <!-- hidden components (new file, save file, loaf file) for the dropdown menu-->\\r\\n    <div style=\\\"display: none;\\\">\\r\\n        <file-new></file-new>\\r\\n        <file-save></file-save>\\r\\n        <file-load></file-load>\\r\\n    </div>\\r\\n\\r\\n    <!-- buttons -->\\r\\n    <div class='header-btn-group'>\\r\\n\\r\\n        <!-- top left dropdown menu -->\\r\\n        <!-- <div class=\\\"dropmenu\\\"> -->\\r\\n            <!-- dropdown menu for new file, save file, loaf file-->\\r\\n            <!-- <div> -->\\r\\n                <!--\\r\\n                <button id='dropdownButton' class='btn' mat-icon-button (click)='openDropdownMenu($event)'>\\r\\n                    <mat-icon svgIcon=\\\"cMenu\\\" id='dropdownIcon'></mat-icon>\\r\\n                </button>\\r\\n                -->\\r\\n            <!-- </div>\\r\\n        </div> -->\\r\\n                        \\r\\n\\r\\n        <!-- buttons to navigate to the 4 pages -->\\r\\n        <button class='btn' [class.active]='getUrl()==\\\"/about\\\"' [routerLink]=\\\"'/about'\\\" title='About'>\\r\\n            <mat-icon svgIcon=\\\"cGallery\\\"></mat-icon>\\r\\n        </button>\\r\\n        <button class='btn' [class.active]='getUrl()==\\\"/gallery\\\"' [routerLink]=\\\"'/gallery'\\\" title='Gallery'>\\r\\n            <mat-icon>view_comfy</mat-icon>\\r\\n        </button>\\r\\n        <button class='btn' [class.active]='getUrl()==\\\"/dashboard\\\"' [routerLink]=\\\"'/dashboard'\\\" title='Dashboard'>\\r\\n            <mat-icon svgIcon=\\\"cDashboard\\\"></mat-icon>\\r\\n        </button>\\r\\n        <button class='btn' [class.active]='getUrl()==\\\"/flowchart\\\"' [routerLink]=\\\"'/flowchart'\\\" title='Flowchart'>\\r\\n            <mat-icon svgIcon=\\\"cFlowchart\\\"></mat-icon>\\r\\n        </button>\\r\\n        <button class='btn' [class.active]='getUrl()==\\\"/editor\\\"' [routerLink]=\\\"'/editor'\\\" title='Procedure'>\\r\\n            <mat-icon svgIcon=\\\"cEditor\\\"></mat-icon>\\r\\n        </button>\\r\\n                \\r\\n        <!-- execute button -->\\r\\n        <div class='executeCls' [class.disabled]='!executeCheck'>\\r\\n            <execute ></execute>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <div class='nodename-container' *ngIf='executeCheck'>\\r\\n        <div id = 'node-name' (click)='openNodeMenu($event)'><span id='node--name' title='{{getNode().name}}'>{{flowchart.meta.selected_nodes[0]}}. {{getNode().name}}</span><span id='node--arr'>▾</span></div>\\r\\n        <div id=\\\"nodeMenu\\\">\\r\\n            <div *ngFor='let nd of flowchart.nodes; let i = index;'>\\r\\n                <li (click)=\\\"changeNode(i)\\\"> \\r\\n                    {{i}}. {{nd.name}}\\r\\n                </li>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <div class='filename-container' *ngIf='executeCheck'>\\r\\n        <!-- <div class = \\\"divider\\\"></div> -->\\r\\n\\r\\n        <!-- <div id='filename' (click)='openDropdownMenu($event)'>{{getTitle()}}</div> -->\\r\\n        <button id='dropdownMenuButton' class='menu-btn' (click)='openDropdownMenu($event)' title='Procedure'>\\r\\n            <mat-icon>menu</mat-icon>\\r\\n        </button>\\r\\n        <div class='dropdownContainer'>\\r\\n            <div id=\\\"dropdownMenu\\\">\\r\\n                <button onclick=\\\"document.getElementById('newfile').click();\\\"\\r\\n                title=\\\"Create New Flowchart\\\"> \\r\\n                    <mat-icon>rotate_left</mat-icon> \\r\\n                    New File\\r\\n                </button>\\r\\n                <br>\\r\\n                <button onclick=\\\"document.getElementById('savefile').click();\\\"\\r\\n                title=\\\"Save Flowchart File to Computer\\\">\\r\\n                    <mat-icon>save_alt</mat-icon>\\r\\n                    Save File\\r\\n                </button>\\r\\n                <br>\\r\\n                <button (click)=\\\"loadFile()\\\"\\r\\n                title=\\\"Load Flowchart File from Computer\\\">\\r\\n                    <mat-icon>launch</mat-icon>\\r\\n                    Load File \\r\\n                </button>\\r\\n                <br>\\r\\n                <button (click)=\\\"openUrlDialog($event)\\\"\\r\\n                title=\\\"Generate Möbius view url from url of .mob file\\\">\\r\\n                    <mat-icon>link</mat-icon>\\r\\n                    &nbsp;Publish&nbsp;\\r\\n                </button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n<dialog id='genUrlDialog'>\\r\\n    <p>To publish your model, please upload your Möbius (.mob) file to an online file server to allows\\r\\n        you to share the URL. (For example, you can upload your file to platforms such Github, Dropbox\\r\\n        and Qiniu.) Then paste the URL for file below, and click 'Validate Url'. </p>\\r\\n    <br>\\r\\n    <br>\\r\\n    MOB file URL: <br>\\r\\n    <textarea [(ngModel)]='urlSet[0]' \\r\\n            [class.valid]='urlValid === true' \\r\\n            [class.invalid]='urlValid === false'\\r\\n            (keyup)='urlValid = undefined'></textarea><br>\\r\\n    <button (click)='validateUrl()'>Validate Url</button>\\r\\n\\r\\n    <ng-container *ngIf='urlValid === true'>\\r\\n    \\r\\n        <hr>\\r\\n        <input id='radio1' type='radio' name='showPage' value='publish' [(ngModel)]='urlSet[1]'/> <label for='radio1'>Uneditable</label> <br>\\r\\n        <input id='radio2' type='radio' name='showPage' value='dashboard' [(ngModel)]='urlSet[1]'/> <label for='radio2'>Editable</label>\\r\\n        <hr>\\r\\n    \\r\\n        <ng-container *ngIf='urlSet[1] == \\\"dashboard\\\"; else publish_template'>\\r\\n            <input id='radio3' type='radio' name='displayType' value='&node=' [(ngModel)]='urlSet[2]'/> <label for='radio3'>Show Specific Node</label> <br>\\r\\n            <input id='radio4' type='radio' name='displayType' value='' [(ngModel)]='urlSet[2]'/> <label for='radio4'>Show Dashboard</label> \\r\\n            <hr>\\r\\n            <ng-container *ngIf='urlSet[2] == \\\"&node=\\\"'>\\r\\n                <!-- Shown Node Index: <input [(ngModel)]='urlSet[3]'/> -->\\r\\n                Node Shown: <select [(ngModel)]='urlSet[3]'>\\r\\n                    <option *ngFor='let node of urlNodes; let i = index' value={{i}}>{{i}}. {{node.name}}</option>\\r\\n                </select>\\r\\n                <hr>\\r\\n            </ng-container>\\r\\n        </ng-container>\\r\\n        <ng-template #publish_template>\\r\\n            <input id='radio3D' type='radio' name='showViewer' value='&viewer=0' [(ngModel)]='urlSet[4]'/> <label for='radio3D'>3D Viewer</label> <br>\\r\\n            <input id='radioGeo' type='radio' name='showViewer' value='&viewer=1' [(ngModel)]='urlSet[4]'/> <label for='radioGeo'>Geo Viewer</label> <br>\\r\\n            <input id='radioBothV' type='radio' name='showViewer' value='' [(ngModel)]='urlSet[4]'/> <label for='radioBothV'>Both</label>\\r\\n            <hr>\\r\\n        </ng-template>\\r\\n    \\r\\n        <button (click)='generateUrl()'>Create Link</button>\\r\\n\\r\\n        <div>\\r\\n            <hr>\\r\\n            Möbius Link:<br>\\r\\n            <textarea [class.disabled]='true' id='generatedLink' disabled></textarea>\\r\\n        </div>\\r\\n    </ng-container>\\r\\n\\r\\n</dialog>\\r\\n\"","module.exports = \"panel-header button {\\n  display: inline-block;\\n  vertical-align: bottom;\\n  background-color: transparent;\\n  color: #808080;\\n  border: none;\\n  outline: none;\\n  cursor: pointer;\\n  padding: 0px;\\n  width: 34px;\\n  height: 34px;\\n  transition: 0.3s;\\n  font-size: 15px; }\\n\\npublish-header button {\\n  display: inline-block;\\n  vertical-align: bottom;\\n  background-color: transparent;\\n  color: #808080;\\n  border: none;\\n  outline: none;\\n  cursor: pointer;\\n  padding: 0px;\\n  width: 34px;\\n  height: 34px;\\n  transition: 0.3s;\\n  font-size: 15px; }\\n\\nbutton:hover {\\n  color: #00006d; }\\n\\npanel-header button.active {\\n  color: #00006d; }\\n\\npublish-header button.active {\\n  color: #00006d; }\\n\\n.container__header {\\n  display: inline-flex;\\n  float: left;\\n  width: 100%;\\n  height: 41px;\\n  padding: 0px;\\n  margin: 0px; }\\n\\n.container__header .header-btn-group {\\n    flex-shrink: 0;\\n    display: inline-flex;\\n    flex-flow: row nowrap;\\n    height: 41px;\\n    padding: 0px;\\n    margin: 0px;\\n    overflow: hidden;\\n    z-index: 1; }\\n\\n.container__header .header-btn-group .mat-icon-button {\\n      height: 40px !important;\\n      width: 40px !important; }\\n\\n.container__header .header-btn-group .active {\\n      background-color: transparent; }\\n\\n.container__header .nodename-container {\\n    z-index: 1; }\\n\\n.container__header .filename-container {\\n    z-index: 5;\\n    width: calc(100% - 170px - 37px); }\\n\\n.container__header .filename-container .menu-btn {\\n      float: right; }\\n\\n.container__header .filename-container .dropdownContainer {\\n      width: 1px;\\n      float: right;\\n      position: relative; }\\n\\n.container__header #filename {\\n    cursor: pointer;\\n    height: 40px;\\n    font-size: 15px;\\n    color: #373737;\\n    width: 100%;\\n    padding-top: 0px;\\n    text-align: left;\\n    vertical-align: middle;\\n    line-height: 35px;\\n    z-index: 5;\\n    overflow: hidden;\\n    text-overflow: ellipsis; }\\n\\n.container__header #filename:hover {\\n      color: #00006d; }\\n\\n/*\\r\\nbutton.mat-menu-item{ // drop-down (top-bar) menu buttons\\r\\n    background-color: $color5;\\r\\n    color: $color2;\\r\\n    mat-icon{\\r\\n        color: $color2;\\r\\n    }\\r\\n\\r\\n    height: $header-height;\\r\\n    line-height: $header-height;\\r\\n    font-size: $fsize2;\\r\\n    text-align: center;\\r\\n}\\r\\n\\r\\nbutton.mat-menu-item:hover{\\r\\n    background-color: $color5;\\r\\n    color: $color5;\\r\\n    // mat-icon{\\r\\n    //     color: $color5;\\r\\n    // }\\r\\n}\\r\\n*/\\n\\n#dropdownMenu {\\n  display: none;\\n  position: fixed;\\n  top: 40px;\\n  transition: display 0.4s;\\n  z-index: 1;\\n  background-color: #fafafb;\\n  border: 1px solid #999999; }\\n\\n#dropdownMenu button {\\n    display: inline-block;\\n    width: 100px;\\n    line-height: 30px;\\n    height: 30px;\\n    font-size: 12px;\\n    vertical-align: middle;\\n    color: #373737; }\\n\\n#dropdownMenu button mat-icon {\\n      color: inherit;\\n      vertical-align: middle;\\n      font-size: 20px;\\n      height: 20px;\\n      width: 20px; }\\n\\n#dropdownMenu button:hover {\\n      color: #00006d;\\n      background-color: #E6E6E6; }\\n\\n#node-name {\\n  min-height: 30px;\\n  color: #373737;\\n  padding-left: 8px;\\n  margin: 0px;\\n  width: -webkit-fit-content;\\n  width: -moz-fit-content;\\n  width: fit-content;\\n  font-family: sans-serif;\\n  line-height: 30px;\\n  font-size: 12px;\\n  font-weight: 550;\\n  display: flex;\\n  flex-flow: row nowrap;\\n  cursor: pointer; }\\n\\n#node-name #node--name {\\n    text-overflow: ellipsis;\\n    overflow: hidden;\\n    white-space: nowrap; }\\n\\n#nodeMenu {\\n  display: none;\\n  position: fixed;\\n  transition: display 0.4s;\\n  top: 40px;\\n  width: 125px;\\n  z-index: 1;\\n  background-color: #fafafb;\\n  border: 1px solid #999999;\\n  cursor: pointer; }\\n\\n#nodeMenu button {\\n    display: block;\\n    background-color: #fafafb;\\n    border: 0px;\\n    margin: 0px;\\n    padding: 0px;\\n    line-height: 30px;\\n    height: 30px;\\n    font-size: 12px; }\\n\\n#nodeMenu li {\\n    display: block;\\n    overflow: hidden;\\n    text-overflow: ellipsis;\\n    white-space: nowrap;\\n    line-height: 20px;\\n    background-color: #fafafb;\\n    font-weight: 550;\\n    border: 0px;\\n    margin: 0px;\\n    padding: 0px 10px 0px 10px;\\n    line-height: 30px;\\n    height: 30px;\\n    font-size: 12px;\\n    color: #373737; }\\n\\n#nodeMenu li:hover {\\n      color: #00006d;\\n      background-color: #E6E6E6; }\\n\\n.executeCls.disabled {\\n  display: none; }\\n\\n#genUrlDialog {\\n  font-family: 12px sans-serif;\\n  color: #808080;\\n  background-color: #fafafb;\\n  top: 10%;\\n  max-width: 605px;\\n  padding: 5px; }\\n\\n#genUrlDialog textarea {\\n    width: 600px;\\n    max-width: 600px;\\n    min-height: 70px;\\n    background-color: #fafafb; }\\n\\n#genUrlDialog textarea.disabled {\\n      background-color: #E6E6E6; }\\n\\n#genUrlDialog textarea.valid {\\n      border: 2px solid #82bf6e; }\\n\\n#genUrlDialog textarea.invalid {\\n      border: 2px solid #E94858; }\\n\\n#genUrlDialog select {\\n    color: #808080; }\\n\\n#genUrlDialog button {\\n    width: -webkit-fit-content;\\n    width: -moz-fit-content;\\n    width: fit-content;\\n    padding: 0px 5px 0px 5px;\\n    background-color: #E6E6E6;\\n    color: #808080; }\\n\\r\\n/*# sourceMappingURL=data:application/json;base64, */\"","import { Component, Input, HostListener } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { DataService } from '@shared/services';\r\nimport * as circularJSON from 'circular-json';\r\nimport { IFlowchart } from '@models/flowchart';\r\nimport { ProcedureTypes } from '@models/procedure';\r\n\r\nconst canvas = document.createElement('canvas');\r\nconst ctx = canvas.getContext('2d');\r\nctx.font = '12px sans-serif';\r\n\r\n@Component({\r\n  selector: 'panel-header',\r\n  templateUrl:  'panel-header.component.html',\r\n  styleUrls: ['panel-header.component.scss']\r\n})\r\nexport class PanelHeaderComponent {\r\n\r\n    @Input() flowchart: IFlowchart;\r\n    executeCheck: boolean;\r\n    dialogBox: HTMLDialogElement;\r\n\r\n    urlSet = ['', 'publish', '', '', ''];\r\n    urlValid: boolean;\r\n    urlNodes;\r\n\r\n    constructor(private dataService: DataService, private router: Router) {\r\n        if (this.router.url === '/about' || this.router.url === '/gallery') {\r\n            this.executeCheck = false;\r\n        } else {\r\n            this.executeCheck = true;\r\n        }\r\n    }\r\n\r\n\r\n    getUrl() {\r\n        return this.router.url;\r\n    }\r\n    getNode() {\r\n        return this.flowchart.nodes[this.flowchart.meta.selected_nodes[0]];\r\n    }\r\n\r\n    changeNode(index: number) {\r\n        this.dataService.flowchart.meta.selected_nodes = [index];\r\n        if (this.router.url === '/editor' &&\r\n           (index === 0 || index === this.dataService.flowchart.nodes.length - 1)) { setTimeout(() => {\r\n            this.adjustTextArea();\r\n        }, 50); }\r\n    }\r\n\r\n    adjustTextArea() {\r\n        let textarea = document.getElementById('flowchart-desc');\r\n        if (textarea) {\r\n            const desc = this.dataService.flowchart.description.split('\\n');\r\n            const textareaWidth = textarea.getBoundingClientRect().width - 30;\r\n            let lineCount = 0;\r\n            for (const line of desc) {\r\n                lineCount += Math.floor(ctx.measureText(line).width / textareaWidth) + 1;\r\n            }\r\n            textarea.style.height = lineCount * 14 + 4 + 'px';\r\n\r\n            for (const prod of this.dataService.node.procedure) {\r\n                if (prod.type !== ProcedureTypes.Constant) { continue; }\r\n                textarea = document.getElementById(prod.ID + '_desc');\r\n                if (textarea && prod.meta.description) {\r\n                    const prodDesc = prod.meta.description.split('\\n');\r\n                    const prodTextareaWidth = textarea.getBoundingClientRect().width - 30;\r\n                    let prodLineCount = 0;\r\n                    for (const line of prodDesc) {\r\n                        prodLineCount += Math.floor(ctx.measureText(line).width / prodTextareaWidth) + 1;\r\n                    }\r\n                    textarea.style.height = prodLineCount * 14 + 4 + 'px';\r\n                }\r\n            }\r\n        }\r\n        textarea = document.getElementById('flowchart-return');\r\n        if (textarea) {\r\n            const desc = (this.dataService.flowchart.returnDescription || '').split('\\n');\r\n            const textareaWidth = textarea.getBoundingClientRect().width - 30;\r\n            let lineCount = 0;\r\n            for (const line of desc) {\r\n                lineCount += Math.floor(ctx.measureText(line).width / textareaWidth) + 1;\r\n            }\r\n            textarea.style.height = lineCount * 14 + 4 + 'px';\r\n        }\r\n    }\r\n\r\n\r\n\r\n    loadFile() {\r\n        document.getElementById('file-input').click();\r\n        // this.router.navigate(['/dashboard']);\r\n    }\r\n\r\n    openDropdownMenu(e: MouseEvent) {\r\n        /*\r\n        const dropdowns = document.getElementsByClassName('dropdown-content');\r\n        for (let i = 0; i < dropdowns.length; i++) {\r\n            const openDropdown = dropdowns[i];\r\n            if (openDropdown.classList.contains('show')) {\r\n            openDropdown.classList.remove('show');\r\n            }\r\n        }\r\n        */\r\n       const stl = document.getElementById('dropdownMenu').style;\r\n       if (!stl.display || stl.display === 'none') {\r\n            const pos = document.getElementById('dropdownMenuButton').getBoundingClientRect();\r\n            stl.left = (pos.left + 34 - 100) + 'px';\r\n            stl.display = 'block';\r\n            // const bRect = (<Element>e.target).getBoundingClientRect();\r\n            // stl.transform = `translate(` + bRect.left + `px, ` + bRect.height + `px)`;\r\n        } else {\r\n            stl.display = 'none';\r\n        }\r\n        e.stopPropagation();\r\n    }\r\n\r\n    openNodeMenu(e: MouseEvent) {\r\n        const stl = document.getElementById('nodeMenu').style;\r\n        if (!stl.display || stl.display === 'none') {\r\n            stl.display = 'block';\r\n        } else {\r\n            stl.display = 'none';\r\n        }\r\n        e.stopPropagation();\r\n\r\n    }\r\n\r\n\r\n    openUrlDialog(event) {\r\n        event.stopPropagation();\r\n        this.dialogBox = <HTMLDialogElement>document.getElementById('genUrlDialog');\r\n        this.dialogBox.showModal();\r\n    }\r\n\r\n    @HostListener('window:click', ['$event'])\r\n    onWindowClick(event: MouseEvent) {\r\n        const dropdownMenu = document.getElementById('dropdownMenu');\r\n        if (dropdownMenu) {\r\n            dropdownMenu.style.display = 'none';\r\n        }\r\n        const nodeMenu = document.getElementById('nodeMenu');\r\n        if (nodeMenu) {\r\n            nodeMenu.style.display = 'none';\r\n        }\r\n        const galleryMenu = document.getElementById('galleryMenu');\r\n        if (galleryMenu) {\r\n            galleryMenu.style.display = 'none';\r\n        }\r\n        const helpMenu = document.getElementById('helpMenu');\r\n        if (helpMenu) {\r\n            helpMenu.style.display = 'none';\r\n        }\r\n        if (this.dialogBox) {\r\n            if ((<HTMLElement>event.target).tagName === 'SELECT') { return; }\r\n\r\n            const rect = this.dialogBox.getBoundingClientRect();\r\n\r\n            const isInDialog = (rect.top <= event.clientY && event.clientY <= rect.top + rect.height\r\n              && rect.left <= event.clientX && event.clientX <= rect.left + rect.width);\r\n            if (!isInDialog) {\r\n                this.dialogBox.close();\r\n                this.dialogBox = undefined;\r\n            }\r\n        }\r\n    }\r\n\r\n    validateUrl() {\r\n        if (this.urlSet[0] === '') {\r\n            this.urlValid = false;\r\n            return;\r\n        }\r\n        const request = new XMLHttpRequest();\r\n\r\n        let url = this.urlSet[0];\r\n        if (url.indexOf('dropbox') !== -1) {\r\n            url = url.replace('www', 'dl').replace('?dl=0', '');\r\n        }\r\n        request.open('GET', url);\r\n\r\n        request.onload = () => {\r\n            if (request.status === 200) {\r\n                try {\r\n                    const f = circularJSON.parse(request.responseText);\r\n                    this.urlNodes = f.flowchart.nodes;\r\n                    this.urlValid = true;\r\n                } catch (ex) {\r\n                    this.urlValid = false;\r\n                }\r\n            } else {\r\n                this.urlValid = false;\r\n            }\r\n        };\r\n        request.onerror = () => {\r\n            this.urlValid = false;\r\n        };\r\n        request.send();\r\n    }\r\n\r\n    generateUrl() {\r\n        if (this.urlSet[0] === '') {\r\n            return;\r\n        }\r\n        if (this.urlSet[1] === 'publish') {\r\n            this.urlSet[2] = '';\r\n            this.urlSet[3] = '';\r\n        } else if (this.urlSet[2] === '') {\r\n            this.urlSet[3] = '';\r\n        } else if (this.urlSet[3] === '') {\r\n            this.urlSet[2] = '';\r\n        }\r\n\r\n        let url = this.urlSet[0];\r\n        if (url.indexOf('dropbox') !== -1) {\r\n            url = url.replace('www', 'dl').replace('?dl=0', '');\r\n        }\r\n        url = url.replace(/\\//g, '%2F');\r\n\r\n        const txtArea = document.getElementById('generatedLink');\r\n        txtArea.innerHTML = `${window.location.origin}/${this.urlSet[1]}` +\r\n                            `?file=${url}${this.urlSet[2]}${this.urlSet[3]}${this.urlSet[4]}`;\r\n    }\r\n\r\n}\r\n","module.exports = \"<div class='container__header'>\\r\\n    <div class='filename-container'>\\r\\n        <div id='filename'>{{getTitle()}}</div>\\r\\n    </div>\\r\\n        \\r\\n    <!-- buttons -->\\r\\n    <div class='header-btn-group'>\\r\\n        <a  title=\\\"Share\\\" href={{expando_href}}>\\r\\n            <button class=\\\"btn\\\" mat-icon-button>\\r\\n                    <mat-icon>share</mat-icon>\\r\\n            </button>\\r\\n        </a>\\r\\n                \\r\\n        <execute></execute>\\r\\n    </div>\\r\\n\\r\\n\\r\\n\\r\\n</div>\\r\\n\"","module.exports = \"panel-header button {\\n  display: inline-block;\\n  vertical-align: bottom;\\n  background-color: transparent;\\n  color: #808080;\\n  border: none;\\n  outline: none;\\n  cursor: pointer;\\n  padding: 0px;\\n  width: 34px;\\n  height: 34px;\\n  transition: 0.3s;\\n  font-size: 15px; }\\n\\npublish-header button {\\n  display: inline-block;\\n  vertical-align: bottom;\\n  background-color: transparent;\\n  color: #808080;\\n  border: none;\\n  outline: none;\\n  cursor: pointer;\\n  padding: 0px;\\n  width: 34px;\\n  height: 34px;\\n  transition: 0.3s;\\n  font-size: 15px; }\\n\\nbutton:hover {\\n  color: #00006d; }\\n\\npanel-header button.active {\\n  color: #00006d; }\\n\\npublish-header button.active {\\n  color: #00006d; }\\n\\n.container__header {\\n  position: relative;\\n  display: inline-flex;\\n  float: left;\\n  width: 100%;\\n  height: 41px;\\n  padding: 0px;\\n  margin: 0px; }\\n\\n.container__header .header-btn-group {\\n    flex-shrink: 0;\\n    position: absolute;\\n    right: 0px;\\n    flex-flow: row nowrap;\\n    height: 41px;\\n    padding: 0px;\\n    margin: 0px;\\n    overflow: hidden;\\n    z-index: 1; }\\n\\n.container__header .header-btn-group .mat-icon-button {\\n      height: 40px !important;\\n      width: 40px !important; }\\n\\n.container__header .header-btn-group .active {\\n      background-color: transparent; }\\n\\n.container__header .filename-container {\\n    z-index: 1;\\n    padding-left: 10px;\\n    font-weight: 700;\\n    width: calc(100% - 44px);\\n    display: flex;\\n    justify-content: flex-start; }\\n\\n.container__header #filename {\\n    cursor: default;\\n    height: 40px;\\n    font-size: 15px;\\n    color: #373737;\\n    width: 100%;\\n    padding-top: 0px;\\n    text-align: left;\\n    vertical-align: middle;\\n    line-height: 35px;\\n    z-index: 5;\\n    overflow: hidden;\\n    text-overflow: ellipsis; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc2hhcmVkL2NvbXBvbmVudHMvaGVhZGVyL0M6XFxEcm9wYm94XFxGaWxlc1xcU29mdHdhcmVcXEdpdEh1YlxcZGVzaWduLWF1dG9tYXRpb25cXG1vYml1cy1wYXJhbWV0cmljLW1vZGVsbGVyL3NyY1xcc2Nzc1xcaGVhZGVyLWJ1dHRvbi5zY3NzIiwic3JjL2FwcC9zaGFyZWQvY29tcG9uZW50cy9oZWFkZXIvQzpcXERyb3Bib3hcXEZpbGVzXFxTb2Z0d2FyZVxcR2l0SHViXFxkZXNpZ24tYXV0b21hdGlvblxcbW9iaXVzLXBhcmFtZXRyaWMtbW9kZWxsZXIvc3JjXFxzY3NzXFxjb2xvcnMuc2NzcyIsInNyYy9hcHAvc2hhcmVkL2NvbXBvbmVudHMvaGVhZGVyL0M6XFxEcm9wYm94XFxGaWxlc1xcU29mdHdhcmVcXEdpdEh1YlxcZGVzaWduLWF1dG9tYXRpb25cXG1vYml1cy1wYXJhbWV0cmljLW1vZGVsbGVyL3NyY1xcc2Nzc1xcdmFyaWFibGVzLnNjc3MiLCJzcmMvYXBwL3NoYXJlZC9jb21wb25lbnRzL2hlYWRlci9DOlxcRHJvcGJveFxcRmlsZXNcXFNvZnR3YXJlXFxHaXRIdWJcXGRlc2lnbi1hdXRvbWF0aW9uXFxtb2JpdXMtcGFyYW1ldHJpYy1tb2RlbGxlci9zcmNcXGFwcFxcc2hhcmVkXFxjb21wb25lbnRzXFxoZWFkZXJcXHB1Ymxpc2gtaGVhZGVyLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUdBO0VBQ0kscUJBQXFCO0VBQ3JCLHNCQUFzQjtFQUN0Qiw2QkFBNkI7RUFDN0IsY0NOWTtFRE9aLFlBQVk7RUFDWixhQUFhO0VBQ2IsZUFBZTtFQUNmLFlBQVk7RUFDWixXQUFXO0VBQ1gsWUFBWTtFQUNaLGdCQUFnQjtFQUNoQixlRVhTLEVBQUE7O0FGY2I7RUFDSSxxQkFBcUI7RUFDckIsc0JBQXNCO0VBQ3RCLDZCQUE2QjtFQUM3QixjQ3JCWTtFRHNCWixZQUFZO0VBQ1osYUFBYTtFQUNiLGVBQWU7RUFDZixZQUFZO0VBQ1osV0FBVztFQUNYLFlBQVk7RUFDWixnQkFBZ0I7RUFDaEIsZUUxQlMsRUFBQTs7QUY2QmI7RUFDSSxjQ3RCMkIsRUFBQTs7QUR5Qi9CO0VBQ0ksY0MxQjJCLEVBQUE7O0FENkIvQjtFQUNJLGNDOUIyQixFQUFBOztBRVAvQjtFQUNJLGtCQUFrQjtFQUNsQixvQkFBb0I7RUFDcEIsV0FBVztFQUNYLFdBQVc7RUFDWCxZQUEwQjtFQUMxQixZQUFZO0VBQ1osV0FBVyxFQUFBOztBQVBmO0lBVVEsY0FBYztJQUNkLGtCQUFrQjtJQUNsQixVQUFVO0lBQ1YscUJBQXFCO0lBQ3JCLFlBQTBCO0lBQzFCLFlBQVk7SUFDWixXQUFXO0lBQ1gsZ0JBQWdCO0lBRWhCLFVBQVUsRUFBQTs7QUFuQmxCO01Bc0JZLHVCQUFpQztNQUNqQyxzQkFBZ0MsRUFBQTs7QUF2QjVDO01BMEJZLDZCQUE2QixFQUFBOztBQTFCekM7SUE4QlEsVUFBVTtJQUNWLGtCQUFrQjtJQUNsQixnQkFBZ0I7SUFDaEIsd0JBQXdCO0lBQ3hCLGFBQWE7SUFDYiwyQkFBMkIsRUFBQTs7QUFuQ25DO0lBdUNRLGVBQWU7SUFDZixZRDNDWTtJQzRDWixlRDFDSztJQzJDTCxjRnJDUTtJRXNDUixXQUFXO0lBRVgsZ0JBQWdCO0lBQ2hCLGdCQUFnQjtJQUNoQixzQkFBc0I7SUFDdEIsaUJBQWlDO0lBQ2pDLFVBQVU7SUFFVixnQkFBZ0I7SUFDaEIsdUJBQXVCLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9zaGFyZWQvY29tcG9uZW50cy9oZWFkZXIvcHVibGlzaC1oZWFkZXIuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJAaW1wb3J0ICd+c2Nzcy92YXJpYWJsZXMnO1xyXG5AaW1wb3J0ICd+c2Nzcy9jb2xvcnMnO1xyXG5cclxucGFuZWwtaGVhZGVyIGJ1dHRvbiB7XHJcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICB2ZXJ0aWNhbC1hbGlnbjogYm90dG9tO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XHJcbiAgICBjb2xvcjogJGNvbG9yMTtcclxuICAgIGJvcmRlcjogbm9uZTtcclxuICAgIG91dGxpbmU6IG5vbmU7XHJcbiAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgICBwYWRkaW5nOiAwcHg7XHJcbiAgICB3aWR0aDogMzRweDtcclxuICAgIGhlaWdodDogMzRweDtcclxuICAgIHRyYW5zaXRpb246IDAuM3M7XHJcbiAgICBmb250LXNpemU6ICRmc2l6ZTE7XHJcbn1cclxuXHJcbnB1Ymxpc2gtaGVhZGVyIGJ1dHRvbiB7XHJcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICB2ZXJ0aWNhbC1hbGlnbjogYm90dG9tO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XHJcbiAgICBjb2xvcjogJGNvbG9yMTtcclxuICAgIGJvcmRlcjogbm9uZTtcclxuICAgIG91dGxpbmU6IG5vbmU7XHJcbiAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgICBwYWRkaW5nOiAwcHg7XHJcbiAgICB3aWR0aDogMzRweDtcclxuICAgIGhlaWdodDogMzRweDtcclxuICAgIHRyYW5zaXRpb246IDAuM3M7XHJcbiAgICBmb250LXNpemU6ICRmc2l6ZTE7XHJcbn1cclxuXHJcbmJ1dHRvbjpob3ZlciB7XHJcbiAgICBjb2xvcjokc2VsZWN0ZWQtY29sb3I7XHJcbn1cclxuXHJcbnBhbmVsLWhlYWRlciBidXR0b24uYWN0aXZlIHtcclxuICAgIGNvbG9yOiAkc2VsZWN0ZWQtY29sb3I7XHJcbn1cclxuXHJcbnB1Ymxpc2gtaGVhZGVyIGJ1dHRvbi5hY3RpdmUge1xyXG4gICAgY29sb3I6ICRzZWxlY3RlZC1jb2xvcjtcclxufVxyXG4iLCJcclxuJGNvbG9yMTogIzgwODA4MDtcclxuJGNvbG9yMjogIzk5OTk5OTtcclxuJGNvbG9yMzogI0IzQjNCMzsgXHJcbiRjb2xvcjQ6ICNDQ0NDQ0M7XHJcbiRjb2xvcjU6ICNFNkU2RTY7XHJcbiRjb2xvcjUtNTogcmdiKDI0NSwgMjQ1LCAyNDUpO1xyXG4kY29sb3I2OiByZ2IoMjUwLCAyNTAsIDI1MSk7XHJcblxyXG4kY29sb3I3OiB3aGl0ZTtcclxuJGNvbG9yODogIzM3MzczNztcclxuXHJcbiRzZWxlY3RlZC1jb2xvcjogcmdiKDAsIDAsIDEwOSk7XHJcbiRob3Zlci1jb2xvcjogJGNvbG9yMjtcclxuXHJcbiRlcnJvci1jb2xvcjogI0U5NDg1ODsgLy9waW5rLXJlZFxyXG4kZXJyb3ItY29sb3ItbHQ6IHJnYigyNTUsIDIyMCwgMjI0KTtcclxuJHBjb2xvcjI6ICNGM0EzMkE7IC8vb3JhbmdlLXllbGxvd1xyXG4kcHJpbnQtY29sb3I6IHJnYigxMzAsIDE5MSwgMTEwKTsgLy9saWdodGdyZWVuXHJcbiRwcmludC1jb2xvci1sdDogcmdiKDIzMCwgMjU1LCAyMjEpO1xyXG4kc2VsZWN0R2VvbS1jb2xvcjogcmdiKDI1NSwgMTc0LCAwKTsgLy8gbGlnaHQgb3JhbmdlXHJcbiRzZWxlY3RHZW9tLWNvbG9yLWx0OiByZ2IoMjU1LCAyMjUsIDE2MCk7XHJcblxyXG4vLyAkcHJvZC1iYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMjUwLDI1MCwyNTApO1xyXG4vLyAkYmFja2dyb3VuZC1jb2xvcjogcmdiKDIyMCwyMjAsMjIwKTtcclxuJGZ1bmN0aW9uLXRleHQtY29sb3I6IHJnYigxOTAsIDE0MCwgMzApO1xyXG4kZnVuY3Rpb24tdGV4dC1jb2xvcjI6IHJnYigxOCwgMTI2LCAxMzYpO1xyXG4kYmFzaWMtZnVuY3Rpb24tdGV4dC1jb2xvcjogcmdiKDIwMCwgNzAsIDE1MCk7XHJcbiRjb21tZW50LWNvbG9yOiBkYXJrZ3JlZW47XHJcbiIsIiRwYWRkaW5nOiA0MHB4OyAvLyA/IG5vdCB1c2VkXHJcbiRzbWFsbC1wYWRkaW5nOiAxNXB4O1xyXG4kaGVhZGVyLWhlaWdodDogNDBweDtcclxuXHJcbiRmc2l6ZTE6IDE1cHg7XHJcbiRmc2l6ZTI6IDEycHg7XHJcbiRmc2l6ZTM6IDMwcHg7XHJcblxyXG4kcG9ydC1zaXplOiAxNXB4O1xyXG4kZGVmYXVsdC1zaWRlLXBhZGRpbmc6IDE1cHg7XHJcblxyXG4kZGlzYWJsZWQtb3BhY2l0eTogMC40OyIsIkBpbXBvcnQgJ35zY3NzL2NvbG9ycyc7XHJcbkBpbXBvcnQgJ35zY3NzL3ZhcmlhYmxlcyc7XHJcbkBpbXBvcnQgJ35zY3NzL2hlYWRlci1idXR0b24nO1xyXG5cclxuXHJcbi5jb250YWluZXJfX2hlYWRlcntcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgIGRpc3BsYXk6IGlubGluZS1mbGV4O1xyXG4gICAgZmxvYXQ6IGxlZnQ7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGhlaWdodDogJGhlYWRlci1oZWlnaHQgKyAxO1xyXG4gICAgcGFkZGluZzogMHB4O1xyXG4gICAgbWFyZ2luOiAwcHg7XHJcblxyXG4gICAgLmhlYWRlci1idG4tZ3JvdXAge1xyXG4gICAgICAgIGZsZXgtc2hyaW5rOiAwO1xyXG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgICByaWdodDogMHB4O1xyXG4gICAgICAgIGZsZXgtZmxvdzogcm93IG5vd3JhcDtcclxuICAgICAgICBoZWlnaHQ6ICRoZWFkZXItaGVpZ2h0ICsgMTtcclxuICAgICAgICBwYWRkaW5nOiAwcHg7XHJcbiAgICAgICAgbWFyZ2luOiAwcHg7XHJcbiAgICAgICAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICAgICAgICAvLyBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcclxuICAgICAgICB6LWluZGV4OiAxO1xyXG5cclxuICAgICAgICAubWF0LWljb24tYnV0dG9ue1xyXG4gICAgICAgICAgICBoZWlnaHQ6ICRoZWFkZXItaGVpZ2h0ICFpbXBvcnRhbnQ7XHJcbiAgICAgICAgICAgIHdpZHRoOiAkaGVhZGVyLWhlaWdodCAhaW1wb3J0YW50O1xyXG4gICAgICAgIH1cclxuICAgICAgICAuYWN0aXZle1xyXG4gICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICAuZmlsZW5hbWUtY29udGFpbmVye1xyXG4gICAgICAgIHotaW5kZXg6IDE7XHJcbiAgICAgICAgcGFkZGluZy1sZWZ0OiAxMHB4O1xyXG4gICAgICAgIGZvbnQtd2VpZ2h0OiA3MDA7XHJcbiAgICAgICAgd2lkdGg6IGNhbGMoMTAwJSAtIDQ0cHgpOy8vd2lkdGggb2YgYnRuLWNvbnRhaW5lciB3aWR0aCBvZiB6b29tIGZpdCBpbiBmbG93Y2hhcnQ7XHJcbiAgICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtc3RhcnQ7XHJcbiAgICB9XHJcbiAgICAjZmlsZW5hbWV7XHJcbiAgICAgICAgLy9kaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICAgICAgY3Vyc29yOiBkZWZhdWx0O1xyXG4gICAgICAgIGhlaWdodDogJGhlYWRlci1oZWlnaHQ7XHJcbiAgICAgICAgZm9udC1zaXplOiAkZnNpemUxO1xyXG4gICAgICAgIGNvbG9yOiAkY29sb3I4O1xyXG4gICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgIC8vIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xyXG4gICAgICAgIHBhZGRpbmctdG9wOiAwcHg7XHJcbiAgICAgICAgdGV4dC1hbGlnbjogbGVmdDtcclxuICAgICAgICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xyXG4gICAgICAgIGxpbmUtaGVpZ2h0OiAkaGVhZGVyLWhlaWdodCAtIDVweDtcclxuICAgICAgICB6LWluZGV4OiA1O1xyXG5cclxuICAgICAgICBvdmVyZmxvdzogaGlkZGVuO1xyXG4gICAgICAgIHRleHQtb3ZlcmZsb3c6IGVsbGlwc2lzO1xyXG4gICAgfVxyXG59XHJcbiJdfQ== */\"","import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'publish-header',\r\n  templateUrl:  'publish-header.component.html',\r\n  styleUrls: ['publish-header.component.scss']\r\n})\r\nexport class PublishHeaderComponent {\r\n\r\n    @Input() title: string;\r\n    expando_href: string;\r\n\r\n    constructor() {\r\n        const url = window.location.href.replace(/:/g, '%3A').replace(/\\//g, '%2F');\r\n        this.expando_href = `http://expando.github.io/add/?u=${url}&t=M%C3%B6bius%20Modeller%20Publish`;\r\n    }\r\n\r\n    getTitle() {\r\n        return this.title.replace(/_/g, ' ');\r\n    }\r\n\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'navigation',\r\n  template: `<ul class='nav'>\r\n                <li class='link' *ngFor='let link of _links;'\r\n                      [class.active]='link.path == _router.url'\r\n                      [routerLink]=\"link.path\"\r\n                      >{{link.name}}</li>\r\n              </ul>`,\r\n  styles: [`\r\n      ul.nav{\r\n        margin: 0px;\r\n        padding: 0px;\r\n      }\r\n\r\n      li.link{\r\n        display: inline;\r\n        border: 2px solid gray;\r\n        border-radius: 4px;\r\n        margin: 15px 15px 15px 0px;\r\n        padding: 5px;\r\n        text-transform: uppercase;\r\n        font-weight: 600;\r\n        cursor: pointer;\r\n        font-size: 16px;\r\n      }\r\n\r\n      li.link:hover{\r\n        background-color: gray;\r\n        color: white;\r\n      }\r\n\r\n      .active{\r\n        background-color: #222;\r\n        color: white;\r\n        border-color: #222 !important;\r\n      }\r\n  `],\r\n})\r\nexport class NavigationComponent {\r\n\r\n    _links = [\r\n      { path: '/about',\r\n        name: 'about'\r\n      },\r\n      { path: '/gallery',\r\n        name: 'gallery'\r\n      },\r\n      { path: '/dashboard',\r\n        name: 'dashboard'\r\n      },\r\n      { path: '/editor',\r\n        name: 'editor'\r\n      },\r\n\r\n    ];\r\n\r\n    constructor(private _router: Router) { }\r\n\r\n}\r\n","module.exports = \"<h1>Page Not Found</h1>\\r\\n<p>Dolore ex aliqua ut incididunt laborum deserunt pariatur officia.</p>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NoYXJlZC9jb21wb25lbnRzL25vdC1mb3VuZC9ub3QtZm91bmQuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'page-not-found',\r\n  templateUrl: './not-found.component.html',\r\n  styleUrls: ['./not-found.component.scss'],\r\n})\r\nexport class PageNotFoundComponent {\r\n\r\n    constructor() {  }\r\n\r\n}\r\n","module.exports = \"<div id=\\\"notificationBox\\\">{{message}}</div>\"","module.exports = \"#notificationBox {\\n  pointer-events: none;\\n  opacity: 0;\\n  min-width: 250px;\\n  background-color: white;\\n  color: #373737;\\n  border: solid #808080 1px;\\n  text-align: center;\\n  padding: 16px;\\n  position: fixed;\\n  z-index: 1;\\n  right: 40px;\\n  top: 0px; }\\n\\n#notificationBox.show {\\n  opacity: 1;\\n  top: 20px;\\n  transition: ease-in 0.2s; }\\n\\n#notificationBox.hide {\\n  opacity: 0;\\n  top: 0px;\\n  transition: ease-in 0.2s; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc2hhcmVkL2NvbXBvbmVudHMvbm90aWZpY2F0aW9uL0M6XFxEcm9wYm94XFxGaWxlc1xcU29mdHdhcmVcXEdpdEh1YlxcZGVzaWduLWF1dG9tYXRpb25cXG1vYml1cy1wYXJhbWV0cmljLW1vZGVsbGVyL3NyY1xcYXBwXFxzaGFyZWRcXGNvbXBvbmVudHNcXG5vdGlmaWNhdGlvblxcbm90aWZpY2F0aW9uLmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC9zaGFyZWQvY29tcG9uZW50cy9ub3RpZmljYXRpb24vQzpcXERyb3Bib3hcXEZpbGVzXFxTb2Z0d2FyZVxcR2l0SHViXFxkZXNpZ24tYXV0b21hdGlvblxcbW9iaXVzLXBhcmFtZXRyaWMtbW9kZWxsZXIvc3JjXFxzY3NzXFxjb2xvcnMuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFHQTtFQUNJLG9CQUFvQjtFQUNwQixVQUFVO0VBQ1YsZ0JBQWdCO0VBQ2hCLHVCQ0VVO0VERFYsY0NFWTtFRERaLHlCQUF5QjtFQUN6QixrQkFBa0I7RUFDbEIsYUFBYTtFQUNiLGVBQWU7RUFDZixVQUFVO0VBQ1YsV0FBVztFQUNYLFFBQVEsRUFBQTs7QUFHWjtFQUNJLFVBQVU7RUFDVixTQUFTO0VBQ1Qsd0JBQXdCLEVBQUE7O0FBRzVCO0VBQ0ksVUFBVTtFQUNWLFFBQVE7RUFDUix3QkFBd0IsRUFBQSIsImZpbGUiOiJzcmMvYXBwL3NoYXJlZC9jb21wb25lbnRzL25vdGlmaWNhdGlvbi9ub3RpZmljYXRpb24uY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJAaW1wb3J0ICd+c2Nzcy9jb2xvcnMnO1xyXG5AaW1wb3J0ICd+c2Nzcy92YXJpYWJsZXMnO1xyXG5cclxuI25vdGlmaWNhdGlvbkJveCB7XHJcbiAgICBwb2ludGVyLWV2ZW50czogbm9uZTtcclxuICAgIG9wYWNpdHk6IDA7XHJcbiAgICBtaW4td2lkdGg6IDI1MHB4OyBcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICRjb2xvcjc7IFxyXG4gICAgY29sb3I6ICRjb2xvcjg7IFxyXG4gICAgYm9yZGVyOiBzb2xpZCAkY29sb3IxIDFweDtcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgIHBhZGRpbmc6IDE2cHg7XHJcbiAgICBwb3NpdGlvbjogZml4ZWQ7IFxyXG4gICAgei1pbmRleDogMTsgXHJcbiAgICByaWdodDogNDBweDsgXHJcbiAgICB0b3A6IDBweDtcclxufVxyXG5cclxuI25vdGlmaWNhdGlvbkJveC5zaG93IHtcclxuICAgIG9wYWNpdHk6IDE7XHJcbiAgICB0b3A6IDIwcHg7XHJcbiAgICB0cmFuc2l0aW9uOiBlYXNlLWluIDAuMnM7IFxyXG59XHJcblxyXG4jbm90aWZpY2F0aW9uQm94LmhpZGUge1xyXG4gICAgb3BhY2l0eTogMDtcclxuICAgIHRvcDogMHB4O1xyXG4gICAgdHJhbnNpdGlvbjogZWFzZS1pbiAwLjJzOyBcclxufVxyXG4iLCJcclxuJGNvbG9yMTogIzgwODA4MDtcclxuJGNvbG9yMjogIzk5OTk5OTtcclxuJGNvbG9yMzogI0IzQjNCMzsgXHJcbiRjb2xvcjQ6ICNDQ0NDQ0M7XHJcbiRjb2xvcjU6ICNFNkU2RTY7XHJcbiRjb2xvcjUtNTogcmdiKDI0NSwgMjQ1LCAyNDUpO1xyXG4kY29sb3I2OiByZ2IoMjUwLCAyNTAsIDI1MSk7XHJcblxyXG4kY29sb3I3OiB3aGl0ZTtcclxuJGNvbG9yODogIzM3MzczNztcclxuXHJcbiRzZWxlY3RlZC1jb2xvcjogcmdiKDAsIDAsIDEwOSk7XHJcbiRob3Zlci1jb2xvcjogJGNvbG9yMjtcclxuXHJcbiRlcnJvci1jb2xvcjogI0U5NDg1ODsgLy9waW5rLXJlZFxyXG4kZXJyb3ItY29sb3ItbHQ6IHJnYigyNTUsIDIyMCwgMjI0KTtcclxuJHBjb2xvcjI6ICNGM0EzMkE7IC8vb3JhbmdlLXllbGxvd1xyXG4kcHJpbnQtY29sb3I6IHJnYigxMzAsIDE5MSwgMTEwKTsgLy9saWdodGdyZWVuXHJcbiRwcmludC1jb2xvci1sdDogcmdiKDIzMCwgMjU1LCAyMjEpO1xyXG4kc2VsZWN0R2VvbS1jb2xvcjogcmdiKDI1NSwgMTc0LCAwKTsgLy8gbGlnaHQgb3JhbmdlXHJcbiRzZWxlY3RHZW9tLWNvbG9yLWx0OiByZ2IoMjU1LCAyMjUsIDE2MCk7XHJcblxyXG4vLyAkcHJvZC1iYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMjUwLDI1MCwyNTApO1xyXG4vLyAkYmFja2dyb3VuZC1jb2xvcjogcmdiKDIyMCwyMjAsMjIwKTtcclxuJGZ1bmN0aW9uLXRleHQtY29sb3I6IHJnYigxOTAsIDE0MCwgMzApO1xyXG4kZnVuY3Rpb24tdGV4dC1jb2xvcjI6IHJnYigxOCwgMTI2LCAxMzYpO1xyXG4kYmFzaWMtZnVuY3Rpb24tdGV4dC1jb2xvcjogcmdiKDIwMCwgNzAsIDE1MCk7XHJcbiRjb21tZW50LWNvbG9yOiBkYXJrZ3JlZW47XHJcbiJdfQ== */\"","import { Component, OnChanges, Input, AfterViewInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'notification',\r\n  templateUrl: './notification.component.html',\r\n  styleUrls: ['./notification.component.scss'],\r\n})\r\nexport class NotificationComponent implements AfterViewInit, OnChanges {\r\n\r\n    notificationBox: HTMLElement;\r\n    @Input() message: string;\r\n    @Input() dummyTrigger: boolean;\r\n\r\n    timeOut;\r\n\r\n    constructor() {\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        this.notificationBox = document.getElementById('notificationBox');\r\n    }\r\n\r\n    ngOnChanges() {\r\n        if (!this.notificationBox) { return ; }\r\n        window.clearTimeout(this.timeOut);\r\n        this.notificationBox.className = 'show';\r\n\r\n        // After 3 seconds, remove the show class from DIV\r\n        this.timeOut = setTimeout(function() {\r\n            this.notificationBox.className = this.notificationBox.className.replace('show', '');\r\n            this.notificationBox.className = 'hide';\r\n            this.message = '';\r\n        }, 5000);\r\n    }\r\n\r\n}\r\n","module.exports = \"<!-- <h2>{{displayName()}}</h2> -->\\r\\n\\r\\n<textarea id='display-flowchart-desc' [(ngModel)]='flowchart.description' placeholder=\\\"Model Description\\\" disabled></textarea>\\r\\n\\r\\n<hr>\\r\\n\\r\\n<ng-container *ngFor=\\\"let prod of startNode.procedure\\\">\\r\\n    <div class='prod--container' *ngIf=\\\"prod.enabled && prod.type === 10 && prod.meta.inputMode != 5\\\">\\r\\n        <!-- input description -->\\r\\n        <textarea class='desc'\\r\\n                  id='{{prod.ID}}_desc'\\r\\n                  [(ngModel)]='prod.meta.description'\\r\\n                  placeholder=\\\"Parameter Description\\\"\\r\\n                  disabled></textarea>\\r\\n        <procedure-input-viewer [prod]=\\\"prod\\\"></procedure-input-viewer>\\r\\n    </div>\\r\\n</ng-container>\\r\\n\"","module.exports = \".container {\\n  background-color: transparent;\\n  width: auto;\\n  height: auto;\\n  display: flex;\\n  flex-direction: column;\\n  flex-wrap: wrap; }\\n\\nhr {\\n  border-top: 3px solid #808080;\\n  margin: 5px 0px 5px 0px; }\\n\\ndiv[class^=\\\"container--\\\"] {\\n  display: flex;\\n  flex-direction: column;\\n  margin: 10px 0px; }\\n\\ntextarea {\\n  color: #373737;\\n  background-color: transparent;\\n  border: none;\\n  padding: 0px;\\n  font-family: sans-serif;\\n  font-size: 12px;\\n  margin: 0px;\\n  width: 100%;\\n  min-height: 20px;\\n  resize: none;\\n  box-sizing: border-box;\\n  padding: 5px 20px 10px 0px;\\n  overflow-y: hidden; }\\n\\n.prod--container {\\n  padding: 7px 20px 7px 0px;\\n  border-bottom: 3px solid #E6E6E6; }\\n\\n#display-flowchart-desc {\\n  padding-bottom: 30px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc2hhcmVkL2NvbXBvbmVudHMvcGFyYW1ldGVyLXZpZXdlci9DOlxcRHJvcGJveFxcRmlsZXNcXFNvZnR3YXJlXFxHaXRIdWJcXGRlc2lnbi1hdXRvbWF0aW9uXFxtb2JpdXMtcGFyYW1ldHJpYy1tb2RlbGxlci9zcmNcXGFwcFxcc2hhcmVkXFxjb21wb25lbnRzXFxwYXJhbWV0ZXItdmlld2VyXFxwYXJhbWV0ZXItdmlld2VyLmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC9zaGFyZWQvY29tcG9uZW50cy9wYXJhbWV0ZXItdmlld2VyL0M6XFxEcm9wYm94XFxGaWxlc1xcU29mdHdhcmVcXEdpdEh1YlxcZGVzaWduLWF1dG9tYXRpb25cXG1vYml1cy1wYXJhbWV0cmljLW1vZGVsbGVyL3NyY1xcc2Nzc1xcY29sb3JzLnNjc3MiLCJzcmMvYXBwL3NoYXJlZC9jb21wb25lbnRzL3BhcmFtZXRlci12aWV3ZXIvQzpcXERyb3Bib3hcXEZpbGVzXFxTb2Z0d2FyZVxcR2l0SHViXFxkZXNpZ24tYXV0b21hdGlvblxcbW9iaXVzLXBhcmFtZXRyaWMtbW9kZWxsZXIvc3JjXFxzY3NzXFx2YXJpYWJsZXMuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFHQTtFQUNJLDZCQUE2QjtFQUU3QixXQUFXO0VBQ1gsWUFBWTtFQUVaLGFBQWE7RUFDYixzQkFBc0I7RUFDdEIsZUFBZSxFQUFBOztBQW1CbkI7RUFDSSw2QkM5Qlk7RUQrQlosdUJBQXVCLEVBQUE7O0FBRzNCO0VBQ0ksYUFBYTtFQUNiLHNCQUFzQjtFQUV0QixnQkFBZ0IsRUFBQTs7QUFHcEI7RUFDSSxjQ2pDWTtFRGtDWiw2QkFBNkI7RUFDN0IsWUFBVztFQUNYLFlBQVk7RUFDWix1QkFBdUI7RUFDdkIsZUUzQ1M7RUY0Q1QsV0FBVztFQUNYLFdBQVc7RUFDWCxnQkFBZ0I7RUFDaEIsWUFBWTtFQUNaLHNCQUFzQjtFQUN0QiwwQkFBMEI7RUFDMUIsa0JBQWtCLEVBQUE7O0FBT3RCO0VBRUkseUJBQXlCO0VBRXpCLGdDQzdEWSxFQUFBOztBRGdFaEI7RUFDSSxvQkFBb0IsRUFBQSIsImZpbGUiOiJzcmMvYXBwL3NoYXJlZC9jb21wb25lbnRzL3BhcmFtZXRlci12aWV3ZXIvcGFyYW1ldGVyLXZpZXdlci5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIkBpbXBvcnQgJ35zY3NzL2NvbG9ycyc7XHJcbkBpbXBvcnQgJ35zY3NzL3ZhcmlhYmxlcyc7XHJcblxyXG4uY29udGFpbmVye1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XHJcblxyXG4gICAgd2lkdGg6IGF1dG87XHJcbiAgICBoZWlnaHQ6IGF1dG87XHJcblxyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICBmbGV4LXdyYXA6IHdyYXA7XHJcbn1cclxuXHJcbi8vIGgye1xyXG4vLyAgICAgY29sb3I6ICRjb2xvcjg7XHJcbi8vICAgICB0ZXh0LWFsaWduOiBsZWZ0O1xyXG4vLyAgICAgcGFkZGluZy1sZWZ0OiAxNXB4O1xyXG4vLyAgICAgZm9udC1zaXplOiAkZnNpemUyO1xyXG4vLyAgICAgbGluZS1oZWlnaHQ6IDE2cHg7XHJcbi8vIH1cclxuXHJcbi8vIHB7XHJcbi8vICAgICBjb2xvcjogJGNvbG9yODtcclxuLy8gICAgIHRleHQtYWxpZ246IGxlZnQ7XHJcbi8vICAgICBwYWRkaW5nLWxlZnQ6IDE1cHg7XHJcbi8vICAgICBmb250LXNpemU6ICRmc2l6ZTI7XHJcbi8vICAgICBsaW5lLWhlaWdodDogMTRweDtcclxuLy8gfVxyXG5cclxuaHJ7XHJcbiAgICBib3JkZXItdG9wOiAzcHggc29saWQgJGNvbG9yMTtcclxuICAgIG1hcmdpbjogNXB4IDBweCA1cHggMHB4O1xyXG59XHJcblxyXG5kaXZbY2xhc3NePVwiY29udGFpbmVyLS1cIl17XHJcbiAgICBkaXNwbGF5OiBmbGV4OyBcclxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcblxyXG4gICAgbWFyZ2luOiAxMHB4IDBweDtcclxufVxyXG5cclxudGV4dGFyZWF7XHJcbiAgICBjb2xvcjogJGNvbG9yODtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xyXG4gICAgYm9yZGVyOm5vbmU7XHJcbiAgICBwYWRkaW5nOiAwcHg7XHJcbiAgICBmb250LWZhbWlseTogc2Fucy1zZXJpZjtcclxuICAgIGZvbnQtc2l6ZTogJGZzaXplMjtcclxuICAgIG1hcmdpbjogMHB4O1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBtaW4taGVpZ2h0OiAyMHB4O1xyXG4gICAgcmVzaXplOiBub25lOyBcclxuICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XHJcbiAgICBwYWRkaW5nOiA1cHggMjBweCAxMHB4IDBweDtcclxuICAgIG92ZXJmbG93LXk6IGhpZGRlbjtcclxufVxyXG5cclxuLmRlc2N7XHJcbiAgICAvL3BhZGRpbmctbGVmdDogJHNtYWxsLXBhZGRpbmc7XHJcbn1cclxuXHJcbi5wcm9kLS1jb250YWluZXJ7XHJcbiAgICAvL21hcmdpbi1ib3R0b206IDVweDtcclxuICAgIHBhZGRpbmc6IDdweCAyMHB4IDdweCAwcHg7XHJcbiAgICAvL2JvcmRlcjogMXB4IHNvbGlkIHJlZDtcclxuICAgIGJvcmRlci1ib3R0b206IDNweCBzb2xpZCAkY29sb3I1O1xyXG59XHJcblxyXG4jZGlzcGxheS1mbG93Y2hhcnQtZGVzYyB7XHJcbiAgICBwYWRkaW5nLWJvdHRvbTogMzBweDtcclxuICAgIC8vYm9yZGVyLWJvdHRvbTogM3B4IHNvbGlkICRjb2xvcjE7XHJcbn1cclxuIiwiXHJcbiRjb2xvcjE6ICM4MDgwODA7XHJcbiRjb2xvcjI6ICM5OTk5OTk7XHJcbiRjb2xvcjM6ICNCM0IzQjM7IFxyXG4kY29sb3I0OiAjQ0NDQ0NDO1xyXG4kY29sb3I1OiAjRTZFNkU2O1xyXG4kY29sb3I1LTU6IHJnYigyNDUsIDI0NSwgMjQ1KTtcclxuJGNvbG9yNjogcmdiKDI1MCwgMjUwLCAyNTEpO1xyXG5cclxuJGNvbG9yNzogd2hpdGU7XHJcbiRjb2xvcjg6ICMzNzM3Mzc7XHJcblxyXG4kc2VsZWN0ZWQtY29sb3I6IHJnYigwLCAwLCAxMDkpO1xyXG4kaG92ZXItY29sb3I6ICRjb2xvcjI7XHJcblxyXG4kZXJyb3ItY29sb3I6ICNFOTQ4NTg7IC8vcGluay1yZWRcclxuJGVycm9yLWNvbG9yLWx0OiByZ2IoMjU1LCAyMjAsIDIyNCk7XHJcbiRwY29sb3IyOiAjRjNBMzJBOyAvL29yYW5nZS15ZWxsb3dcclxuJHByaW50LWNvbG9yOiByZ2IoMTMwLCAxOTEsIDExMCk7IC8vbGlnaHRncmVlblxyXG4kcHJpbnQtY29sb3ItbHQ6IHJnYigyMzAsIDI1NSwgMjIxKTtcclxuJHNlbGVjdEdlb20tY29sb3I6IHJnYigyNTUsIDE3NCwgMCk7IC8vIGxpZ2h0IG9yYW5nZVxyXG4kc2VsZWN0R2VvbS1jb2xvci1sdDogcmdiKDI1NSwgMjI1LCAxNjApO1xyXG5cclxuLy8gJHByb2QtYmFja2dyb3VuZC1jb2xvcjogcmdiKDI1MCwyNTAsMjUwKTtcclxuLy8gJGJhY2tncm91bmQtY29sb3I6IHJnYigyMjAsMjIwLDIyMCk7XHJcbiRmdW5jdGlvbi10ZXh0LWNvbG9yOiByZ2IoMTkwLCAxNDAsIDMwKTtcclxuJGZ1bmN0aW9uLXRleHQtY29sb3IyOiByZ2IoMTgsIDEyNiwgMTM2KTtcclxuJGJhc2ljLWZ1bmN0aW9uLXRleHQtY29sb3I6IHJnYigyMDAsIDcwLCAxNTApO1xyXG4kY29tbWVudC1jb2xvcjogZGFya2dyZWVuO1xyXG4iLCIkcGFkZGluZzogNDBweDsgLy8gPyBub3QgdXNlZFxyXG4kc21hbGwtcGFkZGluZzogMTVweDtcclxuJGhlYWRlci1oZWlnaHQ6IDQwcHg7XHJcblxyXG4kZnNpemUxOiAxNXB4O1xyXG4kZnNpemUyOiAxMnB4O1xyXG4kZnNpemUzOiAzMHB4O1xyXG5cclxuJHBvcnQtc2l6ZTogMTVweDtcclxuJGRlZmF1bHQtc2lkZS1wYWRkaW5nOiAxNXB4O1xyXG5cclxuJGRpc2FibGVkLW9wYWNpdHk6IDAuNDsiXX0= */\"","import { Component, Input, AfterViewInit } from '@angular/core';\r\nimport { INode } from '@models/node';\r\nimport { IFlowchart } from '@models/flowchart';\r\n\r\n\r\n@Component({\r\n  selector: 'parameter-viewer',\r\n  templateUrl: './parameter-viewer.component.html',\r\n  styleUrls: ['./parameter-viewer.component.scss']\r\n})\r\nexport class ParameterViewerComponent {\r\n    @Input() flowchart: IFlowchart;\r\n    @Input() startNode: INode;\r\n    @Input() endNode: INode;\r\n\r\n    displayName() {\r\n        return this.flowchart.name.replace(/_/g, ' ');\r\n    }\r\n}\r\n\r\n\r\n","module.exports = \"<div class='container'>\\r\\n    <div class='container--parameter'>\\r\\n        <input class='input-const-name' [class.disabled-input]='true' [value]='displayConstName()' \\r\\n        [style.width.px]='inputSize(prod.args[prod.argCount-2].value,\\\"Undefined\\\") + 10' disabled>\\r\\n\\r\\n        <div class = \\\"FFA\\\">\\r\\n            <ng-container class='parameter__name' [ngSwitch]=\\\"prod.meta.inputMode\\\">\\r\\n                <input *ngSwitchCase=\\\"PortTypes.SimpleInput\\\" [(ngModel)]='prod.args[prod.argCount-1].value' \\r\\n                placeholder='{{prod.args[prod.argCount-1].default}}'\\r\\n                [style.width.px]='inputSize(prod.args[prod.argCount-1].value, prod.args[prod.argCount-1].default)'>\\r\\n                \\r\\n                <ng-container *ngSwitchCase=\\\"PortTypes.Slider\\\">\\r\\n                    <!--<input [class.disabled-input]='true' [(ngModel)]='prod.args[prod.argCount-1].value' \\r\\n                    placeholder='prod.args[prod.argCount-1].default'\\r\\n                    [style.width.px]='inputSize(prod.args[prod.argCount-1].value, prod.args[prod.argCount-1].default)' disabled>-->\\r\\n                    <input [(ngModel)]='prod.args[prod.argCount-1].value' \\r\\n                    placeholder='{{prod.args[prod.argCount-1].default}}'\\r\\n                    [style.width.px]='inputSize(prod.args[prod.argCount-1].value, prod.args[prod.argCount-1].default)'>\\r\\n                    <mat-slider\\r\\n                        [(ngModel)]='prod.args[prod.argCount-1].value'\\r\\n                        thumbLabel\\r\\n                        step={{prod.args[prod.argCount-1].step||1}}\\r\\n                        min={{prod.args[prod.argCount-1].min||0}}\\r\\n                        max={{prod.args[prod.argCount-1].max||100}}></mat-slider>\\r\\n                    <!--\\r\\n                    <input [(ngModel)]='prod.args[prod.argCount-1].value' type=\\\"range\\\" placeholder='{{prod.args[prod.argCount-1].default}}'>\\r\\n                    <input [(ngModel)]='prod.args[prod.argCount-1].value' value='prod.args[prod.argCount-1].value'  placeholder='{{prod.args[prod.argCount-1].default}}' disabled>\\r\\n                    -->\\r\\n                </ng-container>\\r\\n    \\r\\n                <div class = 'div--chbox' *ngSwitchCase=\\\"PortTypes.Checkbox\\\">\\r\\n                    <input id = 'chbox_{{prod.ID}}' *ngSwitchCase=\\\"PortTypes.Checkbox\\\" [(ngModel)]='prod.args[prod.argCount-1].value' type=\\\"checkbox\\\">\\r\\n                    <label for = 'chbox_{{prod.ID}}'></label>\\r\\n                </div>\\r\\n                \\r\\n                <input *ngSwitchCase=\\\"PortTypes.URL\\\" [(ngModel)]='prod.args[prod.argCount-1].value' placeholder='{{prod.args[prod.argCount-1].default}}' \\r\\n                [style.width.px]='inputSize(prod.args[prod.argCount-1].value, prod.args[prod.argCount-1].default)'>\\r\\n    \\r\\n                <ng-container *ngSwitchCase=\\\"PortTypes.File\\\" >\\r\\n                    <button class='filebtn' (click)=\\\"openFileBrowse(prod.ID)\\\" >File</button>\\r\\n                    <input [class.disabled-input]='true' value='{{prod.args[prod.argCount-1].value?.name}}' [style.width.px]='inputSize(prod.args[prod.argCount-1].value?.name||undefined,\\\"No Input\\\")' disabled>\\r\\n                    <input id='file_{{prod.ID}}' style='display: none;' (change)=\\\"onFileChange($event)\\\" type=\\\"file\\\">\\r\\n                </ng-container>\\r\\n    \\r\\n            </ng-container>\\r\\n        </div>\\r\\n        \\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n\"","module.exports = \".container {\\n  display: block;\\n  height: auto;\\n  width: 100%; }\\n\\n.container--parameter {\\n  padding: 10px 0px 5px 0px;\\n  display: flex;\\n  flex-flow: row nowrap;\\n  padding-left: 15px;\\n  color: #373737;\\n  vertical-align: bottom;\\n  overflow: hidden;\\n  width: 100%;\\n  height: 17px; }\\n\\n.container--parameter.inputDisabled {\\n    opacity: 0.4; }\\n\\n.container--parameter:hover .btns {\\n    display: inline-flex; }\\n\\n.FFA {\\n  display: flex;\\n  flex-flow: row nowrap;\\n  flex-grow: 1; }\\n\\n.FFA mat-slider {\\n    width: 100%;\\n    height: 30px;\\n    padding: 0px 20px 0px 0px;\\n    position: relative;\\n    bottom: 7px; }\\n\\ninput {\\n  color: #373737;\\n  background-color: transparent;\\n  border: none;\\n  border: 2px solid #E6E6E6;\\n  margin: 0px 2px;\\n  max-width: 95%;\\n  height: 15px;\\n  vertical-align: bottom;\\n  padding: 0px 0px 0px 6px;\\n  font-family: sans-serif;\\n  font-size: 12px; }\\n\\ninput:hover, input:focus {\\n    background-color: white;\\n    color: #373737; }\\n\\ninput.disabled-input {\\n    padding: 0px;\\n    border: 2px solid transparent; }\\n\\ninput.disabled-input:hover {\\n      background-color: transparent;\\n      color: #373737; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc2hhcmVkL2NvbXBvbmVudHMvcGFyYW1ldGVyLXZpZXdlci9wcm9jZWR1cmUtaW5wdXQtdmlld2VyL0M6XFxEcm9wYm94XFxGaWxlc1xcU29mdHdhcmVcXEdpdEh1YlxcZGVzaWduLWF1dG9tYXRpb25cXG1vYml1cy1wYXJhbWV0cmljLW1vZGVsbGVyL3NyY1xcYXBwXFxzaGFyZWRcXGNvbXBvbmVudHNcXHBhcmFtZXRlci12aWV3ZXJcXHByb2NlZHVyZS1pbnB1dC12aWV3ZXJcXHByb2NlZHVyZS1pbnB1dC12aWV3ZXIuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL3NoYXJlZC9jb21wb25lbnRzL3BhcmFtZXRlci12aWV3ZXIvcHJvY2VkdXJlLWlucHV0LXZpZXdlci9DOlxcRHJvcGJveFxcRmlsZXNcXFNvZnR3YXJlXFxHaXRIdWJcXGRlc2lnbi1hdXRvbWF0aW9uXFxtb2JpdXMtcGFyYW1ldHJpYy1tb2RlbGxlci9zcmNcXHNjc3NcXHZhcmlhYmxlcy5zY3NzIiwic3JjL2FwcC9zaGFyZWQvY29tcG9uZW50cy9wYXJhbWV0ZXItdmlld2VyL3Byb2NlZHVyZS1pbnB1dC12aWV3ZXIvQzpcXERyb3Bib3hcXEZpbGVzXFxTb2Z0d2FyZVxcR2l0SHViXFxkZXNpZ24tYXV0b21hdGlvblxcbW9iaXVzLXBhcmFtZXRyaWMtbW9kZWxsZXIvc3JjXFxzY3NzXFxjb2xvcnMuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFHQTtFQUNJLGNBQWM7RUFDZCxZQUFZO0VBRVosV0FBVyxFQUFBOztBQUdmO0VBQ0kseUJBQXlCO0VBRXpCLGFBQWE7RUFDYixxQkFBcUI7RUFDckIsa0JDZGdCO0VEZ0JoQixjRVBZO0VGUVosc0JBQXNCO0VBSXRCLGdCQUFnQjtFQUNoQixXQUFXO0VBQ1gsWUFBcUIsRUFBQTs7QUFkekI7SUFpQlEsWUFBWSxFQUFBOztBQWpCcEI7SUFxQlEsb0JBQW9CLEVBQUE7O0FBSTVCO0VBQ0ksYUFBYTtFQUNiLHFCQUFxQjtFQUNyQixZQUFZLEVBQUE7O0FBSGhCO0lBS1EsV0FBVztJQUNYLFlDbkNLO0lEb0NMLHlCQUF5QjtJQUN6QixrQkFBa0I7SUFDbEIsV0FBVyxFQUFBOztBQUluQjtFQUNJLGNFdkNZO0VGd0NaLDZCQUE2QjtFQUM3QixZQUFXO0VBQ1gseUJFL0NZO0VGZ0RaLGVBQWU7RUFHZixjQUFjO0VBQ2QsWUNyRFM7RURzRFQsc0JBQXNCO0VBQ3RCLHdCQUF3QjtFQUV4Qix1QkFBdUI7RUFDdkIsZUN6RFMsRUFBQTs7QUQyQ2I7SUFnQlEsdUJFdkRNO0lGd0ROLGNFdkRRLEVBQUE7O0FGc0NoQjtJQXlCUSxZQUFZO0lBRVosNkJBQTZCLEVBQUE7O0FBM0JyQztNQTZCWSw2QkFBNkI7TUFDN0IsY0VwRUksRUFBQSIsImZpbGUiOiJzcmMvYXBwL3NoYXJlZC9jb21wb25lbnRzL3BhcmFtZXRlci12aWV3ZXIvcHJvY2VkdXJlLWlucHV0LXZpZXdlci9wcm9jZWR1cmUtaW5wdXQtdmlld2VyLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiQGltcG9ydCAnfnNjc3MvY29sb3JzJztcclxuQGltcG9ydCAnfnNjc3MvdmFyaWFibGVzJztcclxuXHJcbi5jb250YWluZXJ7XHJcbiAgICBkaXNwbGF5OiBibG9jazsgXHJcbiAgICBoZWlnaHQ6IGF1dG87XHJcbiAgICAvLyBtYXJnaW46IDVweCAwcHggMHB4IDVweDtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG59XHJcblxyXG4uY29udGFpbmVyLS1wYXJhbWV0ZXJ7XHJcbiAgICBwYWRkaW5nOiAxMHB4IDBweCA1cHggMHB4O1xyXG5cclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBmbGV4LWZsb3c6IHJvdyBub3dyYXA7XHJcbiAgICBwYWRkaW5nLWxlZnQ6ICRzbWFsbC1wYWRkaW5nO1xyXG5cclxuICAgIGNvbG9yOiAkY29sb3I4O1xyXG4gICAgdmVydGljYWwtYWxpZ246IGJvdHRvbTtcclxuXHJcbiAgICAvL2JvcmRlci1ib3R0b206IDFweCBzb2xpZCAkY29sb3I1O1xyXG5cclxuICAgIG92ZXJmbG93OiBoaWRkZW47XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGhlaWdodDogJGZzaXplMSArIDJweDtcclxuXHJcbiAgICAmLmlucHV0RGlzYWJsZWR7XHJcbiAgICAgICAgb3BhY2l0eTogMC40O1xyXG4gICAgfVxyXG5cclxuICAgICY6aG92ZXIgLmJ0bnN7XHJcbiAgICAgICAgZGlzcGxheTogaW5saW5lLWZsZXg7XHJcbiAgICB9XHJcbn1cclxuXHJcbi5GRkF7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgZmxleC1mbG93OiByb3cgbm93cmFwO1xyXG4gICAgZmxleC1ncm93OiAxO1xyXG4gICAgbWF0LXNsaWRlcntcclxuICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICBoZWlnaHQ6ICRmc2l6ZTM7XHJcbiAgICAgICAgcGFkZGluZzogMHB4IDIwcHggMHB4IDBweDtcclxuICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICAgICAgYm90dG9tOiA3cHg7XHJcbiAgICB9XHJcbn1cclxuXHJcbmlucHV0e1xyXG4gICAgY29sb3I6ICRjb2xvcjg7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcclxuICAgIGJvcmRlcjpub25lO1xyXG4gICAgYm9yZGVyOiAycHggc29saWQgJGNvbG9yNTtcclxuICAgIG1hcmdpbjogMHB4IDJweDtcclxuICAgIFxyXG4gICAgLy8gbWFyZ2luLWxlZnQ6IDVweDtcclxuICAgIG1heC13aWR0aDogOTUlO1xyXG4gICAgaGVpZ2h0OiAkZnNpemUxO1xyXG4gICAgdmVydGljYWwtYWxpZ246IGJvdHRvbTtcclxuICAgIHBhZGRpbmc6IDBweCAwcHggMHB4IDZweDtcclxuXHJcbiAgICBmb250LWZhbWlseTogc2Fucy1zZXJpZjtcclxuICAgIGZvbnQtc2l6ZTogJGZzaXplMjtcclxuICAgICY6aG92ZXIsICY6Zm9jdXN7XHJcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJGNvbG9yNztcclxuICAgICAgICBjb2xvcjogJGNvbG9yODtcclxuICAgIH1cclxuXHJcbiAgICAvLyAmOmZvY3Vze1xyXG4gICAgLy8gICAgIGJvcmRlci1ib3R0b206IDJweCBzb2xpZCAkc2VsZWN0ZWQtY29sb3I7XHJcbiAgICAvLyB9XHJcblxyXG4gICAgJi5kaXNhYmxlZC1pbnB1dHtcclxuICAgICAgICBwYWRkaW5nOiAwcHg7XHJcbiAgICAgICAgLy9ib3JkZXItYm90dG9tOiAwcHg7IC8vMnB4IHNvbGlkIHRyYW5zcGFyZW50O1xyXG4gICAgICAgIGJvcmRlcjogMnB4IHNvbGlkIHRyYW5zcGFyZW50O1xyXG4gICAgICAgICY6aG92ZXJ7IC8vIG5vIGNoYW5nZVxyXG4gICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcclxuICAgICAgICAgICAgY29sb3I6ICRjb2xvcjg7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59XHJcbiIsIiRwYWRkaW5nOiA0MHB4OyAvLyA/IG5vdCB1c2VkXHJcbiRzbWFsbC1wYWRkaW5nOiAxNXB4O1xyXG4kaGVhZGVyLWhlaWdodDogNDBweDtcclxuXHJcbiRmc2l6ZTE6IDE1cHg7XHJcbiRmc2l6ZTI6IDEycHg7XHJcbiRmc2l6ZTM6IDMwcHg7XHJcblxyXG4kcG9ydC1zaXplOiAxNXB4O1xyXG4kZGVmYXVsdC1zaWRlLXBhZGRpbmc6IDE1cHg7XHJcblxyXG4kZGlzYWJsZWQtb3BhY2l0eTogMC40OyIsIlxyXG4kY29sb3IxOiAjODA4MDgwO1xyXG4kY29sb3IyOiAjOTk5OTk5O1xyXG4kY29sb3IzOiAjQjNCM0IzOyBcclxuJGNvbG9yNDogI0NDQ0NDQztcclxuJGNvbG9yNTogI0U2RTZFNjtcclxuJGNvbG9yNS01OiByZ2IoMjQ1LCAyNDUsIDI0NSk7XHJcbiRjb2xvcjY6IHJnYigyNTAsIDI1MCwgMjUxKTtcclxuXHJcbiRjb2xvcjc6IHdoaXRlO1xyXG4kY29sb3I4OiAjMzczNzM3O1xyXG5cclxuJHNlbGVjdGVkLWNvbG9yOiByZ2IoMCwgMCwgMTA5KTtcclxuJGhvdmVyLWNvbG9yOiAkY29sb3IyO1xyXG5cclxuJGVycm9yLWNvbG9yOiAjRTk0ODU4OyAvL3BpbmstcmVkXHJcbiRlcnJvci1jb2xvci1sdDogcmdiKDI1NSwgMjIwLCAyMjQpO1xyXG4kcGNvbG9yMjogI0YzQTMyQTsgLy9vcmFuZ2UteWVsbG93XHJcbiRwcmludC1jb2xvcjogcmdiKDEzMCwgMTkxLCAxMTApOyAvL2xpZ2h0Z3JlZW5cclxuJHByaW50LWNvbG9yLWx0OiByZ2IoMjMwLCAyNTUsIDIyMSk7XHJcbiRzZWxlY3RHZW9tLWNvbG9yOiByZ2IoMjU1LCAxNzQsIDApOyAvLyBsaWdodCBvcmFuZ2VcclxuJHNlbGVjdEdlb20tY29sb3ItbHQ6IHJnYigyNTUsIDIyNSwgMTYwKTtcclxuXHJcbi8vICRwcm9kLWJhY2tncm91bmQtY29sb3I6IHJnYigyNTAsMjUwLDI1MCk7XHJcbi8vICRiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMjIwLDIyMCwyMjApO1xyXG4kZnVuY3Rpb24tdGV4dC1jb2xvcjogcmdiKDE5MCwgMTQwLCAzMCk7XHJcbiRmdW5jdGlvbi10ZXh0LWNvbG9yMjogcmdiKDE4LCAxMjYsIDEzNik7XHJcbiRiYXNpYy1mdW5jdGlvbi10ZXh0LWNvbG9yOiByZ2IoMjAwLCA3MCwgMTUwKTtcclxuJGNvbW1lbnQtY29sb3I6IGRhcmtncmVlbjtcclxuIl19 */\"","import { Component, Input, Output, EventEmitter } from '@angular/core';\r\nimport { IProcedure } from '@models/procedure';\r\nimport { InputType } from '@models/port';\r\n\r\nconst canvas = document.createElement('canvas');\r\nconst ctx = canvas.getContext('2d');\r\nctx.font = '13px Arial';\r\n\r\n@Component({\r\n  selector: 'procedure-input-viewer',\r\n  templateUrl: './procedure-input-viewer.component.html',\r\n  styleUrls: ['./procedure-input-viewer.component.scss']\r\n})\r\nexport class ProcedureInputViewerComponent {\r\n\r\n    @Input() prod: IProcedure;\r\n    @Output() delete = new EventEmitter();\r\n    PortTypes = InputType;\r\n\r\n    constructor() { }\r\n\r\n    editOptions(): void { }\r\n\r\n    onFileChange(event) {\r\n      this.prod.args[this.prod.argCount - 1].value = event.target.files[0];\r\n    }\r\n\r\n    displayConstName() {\r\n        let val = this.prod.args[this.prod.argCount - 2].value;\r\n        if (!val) {\r\n            return 'undefined :';\r\n        }\r\n        if (val[0] === '\"' || val[0] === '\\'') {\r\n            val = val.substring(1, val.length - 1);\r\n        }\r\n        // return val.replace(/_/g, ' ') + ':';\r\n        return val + ':';\r\n    }\r\n\r\n    inputSize(val, defaultVal) {\r\n        if (val === undefined || val === '') { return ctx.measureText(defaultVal).width + 7; }\r\n        return ctx.measureText(val).width + 7;\r\n    }\r\n\r\n    openFileBrowse(id) {\r\n        document.getElementById(`file_${id}`).click();\r\n    }\r\n\r\n}\r\n","module.exports = \"<div id='spinner-div'>\\r\\n<div id='overlay'></div>\\r\\n<div id='spinner' class=\\\"loader\\\"></div>\\r\\n</div>\\r\\n<button id='spinner-on' style='visibility: hidden;' (click)='on()'></button>\\r\\n<button id='spinner-off' style='visibility: hidden;' (click)='off()'></button>\"","module.exports = \"panel-header button {\\n  display: inline-block;\\n  vertical-align: bottom;\\n  background-color: transparent;\\n  color: #808080;\\n  border: none;\\n  outline: none;\\n  cursor: pointer;\\n  padding: 0px;\\n  width: 34px;\\n  height: 34px;\\n  transition: 0.3s;\\n  font-size: 15px; }\\n\\npublish-header button {\\n  display: inline-block;\\n  vertical-align: bottom;\\n  background-color: transparent;\\n  color: #808080;\\n  border: none;\\n  outline: none;\\n  cursor: pointer;\\n  padding: 0px;\\n  width: 34px;\\n  height: 34px;\\n  transition: 0.3s;\\n  font-size: 15px; }\\n\\nbutton:hover {\\n  color: #00006d; }\\n\\npanel-header button.active {\\n  color: #00006d; }\\n\\npublish-header button.active {\\n  color: #00006d; }\\n\\n#spinner-div {\\n  visibility: hidden; }\\n\\n#overlay {\\n  position: fixed;\\n  width: 100%;\\n  height: 100%;\\n  top: 0;\\n  left: 0;\\n  right: 0;\\n  bottom: 0;\\n  background-color: #E6E6E6;\\n  z-index: 5;\\n  opacity: 0.4;\\n  pointer-events: none; }\\n\\n#spinner {\\n  position: fixed;\\n  left: 45%;\\n  top: 45%;\\n  color: #808080;\\n  border: 10px solid #E6E6E6;\\n  border-radius: 50%;\\n  border-top: 10px solid #00006d;\\n  width: 60px;\\n  height: 60px;\\n  -webkit-animation: spin 2s linear infinite;\\n  animation: spin 2s linear infinite;\\n  z-index: 6; }\\n\\n@-webkit-keyframes spin {\\n  0% {\\n    -webkit-transform: rotate(0deg); }\\n  100% {\\n    -webkit-transform: rotate(360deg); } }\\n\\n@keyframes spin {\\n  0% {\\n    -webkit-transform: rotate(0deg);\\n            transform: rotate(0deg); }\\n  100% {\\n    -webkit-transform: rotate(360deg);\\n            transform: rotate(360deg); } }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc2hhcmVkL2NvbXBvbmVudHMvc3Bpbm5lci9DOlxcRHJvcGJveFxcRmlsZXNcXFNvZnR3YXJlXFxHaXRIdWJcXGRlc2lnbi1hdXRvbWF0aW9uXFxtb2JpdXMtcGFyYW1ldHJpYy1tb2RlbGxlci9zcmNcXHNjc3NcXGhlYWRlci1idXR0b24uc2NzcyIsInNyYy9hcHAvc2hhcmVkL2NvbXBvbmVudHMvc3Bpbm5lci9DOlxcRHJvcGJveFxcRmlsZXNcXFNvZnR3YXJlXFxHaXRIdWJcXGRlc2lnbi1hdXRvbWF0aW9uXFxtb2JpdXMtcGFyYW1ldHJpYy1tb2RlbGxlci9zcmNcXHNjc3NcXGNvbG9ycy5zY3NzIiwic3JjL2FwcC9zaGFyZWQvY29tcG9uZW50cy9zcGlubmVyL0M6XFxEcm9wYm94XFxGaWxlc1xcU29mdHdhcmVcXEdpdEh1YlxcZGVzaWduLWF1dG9tYXRpb25cXG1vYml1cy1wYXJhbWV0cmljLW1vZGVsbGVyL3NyY1xcc2Nzc1xcdmFyaWFibGVzLnNjc3MiLCJzcmMvYXBwL3NoYXJlZC9jb21wb25lbnRzL3NwaW5uZXIvQzpcXERyb3Bib3hcXEZpbGVzXFxTb2Z0d2FyZVxcR2l0SHViXFxkZXNpZ24tYXV0b21hdGlvblxcbW9iaXVzLXBhcmFtZXRyaWMtbW9kZWxsZXIvc3JjXFxhcHBcXHNoYXJlZFxcY29tcG9uZW50c1xcc3Bpbm5lclxcc3Bpbm5lci5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFHQTtFQUNJLHFCQUFxQjtFQUNyQixzQkFBc0I7RUFDdEIsNkJBQTZCO0VBQzdCLGNDTlk7RURPWixZQUFZO0VBQ1osYUFBYTtFQUNiLGVBQWU7RUFDZixZQUFZO0VBQ1osV0FBVztFQUNYLFlBQVk7RUFDWixnQkFBZ0I7RUFDaEIsZUVYUyxFQUFBOztBRmNiO0VBQ0kscUJBQXFCO0VBQ3JCLHNCQUFzQjtFQUN0Qiw2QkFBNkI7RUFDN0IsY0NyQlk7RURzQlosWUFBWTtFQUNaLGFBQWE7RUFDYixlQUFlO0VBQ2YsWUFBWTtFQUNaLFdBQVc7RUFDWCxZQUFZO0VBQ1osZ0JBQWdCO0VBQ2hCLGVFMUJTLEVBQUE7O0FGNkJiO0VBQ0ksY0N0QjJCLEVBQUE7O0FEeUIvQjtFQUNJLGNDMUIyQixFQUFBOztBRDZCL0I7RUFDSSxjQzlCMkIsRUFBQTs7QUVUL0I7RUFDSSxrQkFBa0IsRUFBQTs7QUFFdEI7RUFDSSxlQUFlO0VBQ2YsV0FBVztFQUNYLFlBQVk7RUFDWixNQUFNO0VBQ04sT0FBTztFQUNQLFFBQVE7RUFDUixTQUFTO0VBQ1QseUJGVFk7RUVVWixVQUFVO0VBQ1YsWURMa0I7RUNNbEIsb0JBQW9CLEVBQUE7O0FBR3hCO0VBQ0ksZUFBZTtFQUNmLFNBQVM7RUFDVCxRQUFRO0VBQ1IsY0Z2Qlk7RUV3QlosMEJGcEJZO0VFcUJaLGtCQUFrQjtFQUNsQiw4QkZmMkI7RUVnQjNCLFdBQVc7RUFDWCxZQUFZO0VBQ1osMENBQTBDO0VBQzFDLGtDQUFrQztFQUNsQyxVQUFVLEVBQUE7O0FBSWQ7RUFDSTtJQUFLLCtCQUErQixFQUFBO0VBQ3BDO0lBQU8saUNBQWlDLEVBQUEsRUFBQTs7QUFHNUM7RUFDSTtJQUFLLCtCQUF1QjtZQUF2Qix1QkFBdUIsRUFBQTtFQUM1QjtJQUFPLGlDQUF5QjtZQUF6Qix5QkFBeUIsRUFBQSxFQUFBIiwiZmlsZSI6InNyYy9hcHAvc2hhcmVkL2NvbXBvbmVudHMvc3Bpbm5lci9zcGlubmVyLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiQGltcG9ydCAnfnNjc3MvdmFyaWFibGVzJztcclxuQGltcG9ydCAnfnNjc3MvY29sb3JzJztcclxuXHJcbnBhbmVsLWhlYWRlciBidXR0b24ge1xyXG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgdmVydGljYWwtYWxpZ246IGJvdHRvbTtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xyXG4gICAgY29sb3I6ICRjb2xvcjE7XHJcbiAgICBib3JkZXI6IG5vbmU7XHJcbiAgICBvdXRsaW5lOiBub25lO1xyXG4gICAgY3Vyc29yOiBwb2ludGVyO1xyXG4gICAgcGFkZGluZzogMHB4O1xyXG4gICAgd2lkdGg6IDM0cHg7XHJcbiAgICBoZWlnaHQ6IDM0cHg7XHJcbiAgICB0cmFuc2l0aW9uOiAwLjNzO1xyXG4gICAgZm9udC1zaXplOiAkZnNpemUxO1xyXG59XHJcblxyXG5wdWJsaXNoLWhlYWRlciBidXR0b24ge1xyXG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgdmVydGljYWwtYWxpZ246IGJvdHRvbTtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xyXG4gICAgY29sb3I6ICRjb2xvcjE7XHJcbiAgICBib3JkZXI6IG5vbmU7XHJcbiAgICBvdXRsaW5lOiBub25lO1xyXG4gICAgY3Vyc29yOiBwb2ludGVyO1xyXG4gICAgcGFkZGluZzogMHB4O1xyXG4gICAgd2lkdGg6IDM0cHg7XHJcbiAgICBoZWlnaHQ6IDM0cHg7XHJcbiAgICB0cmFuc2l0aW9uOiAwLjNzO1xyXG4gICAgZm9udC1zaXplOiAkZnNpemUxO1xyXG59XHJcblxyXG5idXR0b246aG92ZXIge1xyXG4gICAgY29sb3I6JHNlbGVjdGVkLWNvbG9yO1xyXG59XHJcblxyXG5wYW5lbC1oZWFkZXIgYnV0dG9uLmFjdGl2ZSB7XHJcbiAgICBjb2xvcjogJHNlbGVjdGVkLWNvbG9yO1xyXG59XHJcblxyXG5wdWJsaXNoLWhlYWRlciBidXR0b24uYWN0aXZlIHtcclxuICAgIGNvbG9yOiAkc2VsZWN0ZWQtY29sb3I7XHJcbn1cclxuIiwiXHJcbiRjb2xvcjE6ICM4MDgwODA7XHJcbiRjb2xvcjI6ICM5OTk5OTk7XHJcbiRjb2xvcjM6ICNCM0IzQjM7IFxyXG4kY29sb3I0OiAjQ0NDQ0NDO1xyXG4kY29sb3I1OiAjRTZFNkU2O1xyXG4kY29sb3I1LTU6IHJnYigyNDUsIDI0NSwgMjQ1KTtcclxuJGNvbG9yNjogcmdiKDI1MCwgMjUwLCAyNTEpO1xyXG5cclxuJGNvbG9yNzogd2hpdGU7XHJcbiRjb2xvcjg6ICMzNzM3Mzc7XHJcblxyXG4kc2VsZWN0ZWQtY29sb3I6IHJnYigwLCAwLCAxMDkpO1xyXG4kaG92ZXItY29sb3I6ICRjb2xvcjI7XHJcblxyXG4kZXJyb3ItY29sb3I6ICNFOTQ4NTg7IC8vcGluay1yZWRcclxuJGVycm9yLWNvbG9yLWx0OiByZ2IoMjU1LCAyMjAsIDIyNCk7XHJcbiRwY29sb3IyOiAjRjNBMzJBOyAvL29yYW5nZS15ZWxsb3dcclxuJHByaW50LWNvbG9yOiByZ2IoMTMwLCAxOTEsIDExMCk7IC8vbGlnaHRncmVlblxyXG4kcHJpbnQtY29sb3ItbHQ6IHJnYigyMzAsIDI1NSwgMjIxKTtcclxuJHNlbGVjdEdlb20tY29sb3I6IHJnYigyNTUsIDE3NCwgMCk7IC8vIGxpZ2h0IG9yYW5nZVxyXG4kc2VsZWN0R2VvbS1jb2xvci1sdDogcmdiKDI1NSwgMjI1LCAxNjApO1xyXG5cclxuLy8gJHByb2QtYmFja2dyb3VuZC1jb2xvcjogcmdiKDI1MCwyNTAsMjUwKTtcclxuLy8gJGJhY2tncm91bmQtY29sb3I6IHJnYigyMjAsMjIwLDIyMCk7XHJcbiRmdW5jdGlvbi10ZXh0LWNvbG9yOiByZ2IoMTkwLCAxNDAsIDMwKTtcclxuJGZ1bmN0aW9uLXRleHQtY29sb3IyOiByZ2IoMTgsIDEyNiwgMTM2KTtcclxuJGJhc2ljLWZ1bmN0aW9uLXRleHQtY29sb3I6IHJnYigyMDAsIDcwLCAxNTApO1xyXG4kY29tbWVudC1jb2xvcjogZGFya2dyZWVuO1xyXG4iLCIkcGFkZGluZzogNDBweDsgLy8gPyBub3QgdXNlZFxyXG4kc21hbGwtcGFkZGluZzogMTVweDtcclxuJGhlYWRlci1oZWlnaHQ6IDQwcHg7XHJcblxyXG4kZnNpemUxOiAxNXB4O1xyXG4kZnNpemUyOiAxMnB4O1xyXG4kZnNpemUzOiAzMHB4O1xyXG5cclxuJHBvcnQtc2l6ZTogMTVweDtcclxuJGRlZmF1bHQtc2lkZS1wYWRkaW5nOiAxNXB4O1xyXG5cclxuJGRpc2FibGVkLW9wYWNpdHk6IDAuNDsiLCJAaW1wb3J0ICd+c2Nzcy9jb2xvcnMnO1xyXG5AaW1wb3J0ICd+c2Nzcy9oZWFkZXItYnV0dG9uJztcclxuXHJcbiNzcGlubmVyLWRpdiB7XHJcbiAgICB2aXNpYmlsaXR5OiBoaWRkZW47XHJcbn1cclxuI292ZXJsYXkge1xyXG4gICAgcG9zaXRpb246IGZpeGVkO1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgICB0b3A6IDA7XHJcbiAgICBsZWZ0OiAwO1xyXG4gICAgcmlnaHQ6IDA7XHJcbiAgICBib3R0b206IDA7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkY29sb3I1O1xyXG4gICAgei1pbmRleDogNTtcclxuICAgIG9wYWNpdHk6ICRkaXNhYmxlZC1vcGFjaXR5O1xyXG4gICAgcG9pbnRlci1ldmVudHM6IG5vbmU7XHJcbiAgfVxyXG5cclxuI3NwaW5uZXIge1xyXG4gICAgcG9zaXRpb246IGZpeGVkO1xyXG4gICAgbGVmdDogNDUlO1xyXG4gICAgdG9wOiA0NSU7XHJcbiAgICBjb2xvcjogJGNvbG9yMTtcclxuICAgIGJvcmRlcjogMTBweCBzb2xpZCAkY29sb3I1O1xyXG4gICAgYm9yZGVyLXJhZGl1czogNTAlO1xyXG4gICAgYm9yZGVyLXRvcDogMTBweCBzb2xpZCAkc2VsZWN0ZWQtY29sb3I7XHJcbiAgICB3aWR0aDogNjBweDtcclxuICAgIGhlaWdodDogNjBweDtcclxuICAgIC13ZWJraXQtYW5pbWF0aW9uOiBzcGluIDJzIGxpbmVhciBpbmZpbml0ZTtcclxuICAgIGFuaW1hdGlvbjogc3BpbiAycyBsaW5lYXIgaW5maW5pdGU7XHJcbiAgICB6LWluZGV4OiA2O1xyXG5cclxufVxyXG4gIFxyXG5ALXdlYmtpdC1rZXlmcmFtZXMgc3BpbiB7XHJcbiAgICAwJSB7IC13ZWJraXQtdHJhbnNmb3JtOiByb3RhdGUoMGRlZyk7IH1cclxuICAgIDEwMCUgeyAtd2Via2l0LXRyYW5zZm9ybTogcm90YXRlKDM2MGRlZyk7IH1cclxufVxyXG5cclxuQGtleWZyYW1lcyBzcGluIHtcclxuICAgIDAlIHsgdHJhbnNmb3JtOiByb3RhdGUoMGRlZyk7IH1cclxuICAgIDEwMCUgeyB0cmFuc2Zvcm06IHJvdGF0ZSgzNjBkZWcpOyB9XHJcbn1cclxuICAiXX0= */\"","import { Component, } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'spinner',\r\n    templateUrl: 'spinner.component.html',\r\n    styleUrls: ['spinner.component.scss']\r\n})\r\nexport class SpinnerComponent {\r\n\r\n    constructor() {}\r\n\r\n    on() {\r\n        // document.getElementById('loading-spinner-overlay').style.visibility = 'visible';\r\n        // document.getElementById('loading-spinner').style.visibility = 'visible';\r\n        document.getElementById('spinner-div').style.visibility = 'visible';\r\n    }\r\n\r\n    off() {\r\n        // document.getElementById('loading-spinner-overlay').style.visibility = 'hidden';\r\n        // document.getElementById('loading-spinner').style.visibility = 'hidden';\r\n        document.getElementById('spinner-div').style.visibility = 'hidden';\r\n    }\r\n}\r\n","export { ModuleList, ModuleDocList} from './module-aware.decorator';\r\nexport { ProcedureTypesAware } from './prodtypes-aware.decorator';\r\nexport { ViewerTypesAware } from './viewertypes-aware.decorator';\r\nexport { PortTypesAware } from './porttypes-aware.decorator';\r\n","import { Injectable } from '@angular/core';\r\n\r\nimport { IModule, IFunction } from '@models/procedure';\r\nimport { IArgument } from '@models/code';\r\nimport * as doc from '@assets/typedoc-json/doc.json';\r\n// const doc = require('@assets/typedoc-json/doc.json');\r\n\r\n// @ts-ignore\r\nimport * as Modules from 'assets/core/modules';\r\n\r\nconst module_list = [];\r\n\r\n// todo: bug fix for defaults\r\nfunction extract_params(func: Function): [IArgument[], boolean] {\r\n    const fnStr = func.toString().replace( /((\\/\\/.*$)|(\\/\\*[\\s\\S]*?\\*\\/))/mg, '');\r\n\r\n    let result = fnStr.slice(fnStr.indexOf('(') + 1, fnStr.indexOf(')')).split(','); // .match( /([^\\s,]+)/g);\r\n    if (result === null || result[0] === '') {\r\n         result = [];\r\n    }\r\n    const final_result = result.map(function(r) {\r\n        r = r.trim();\r\n        const r_value = r.split('=');\r\n\r\n        if (r_value.length === 1) {\r\n            return { name: r_value[0].trim(), value: undefined, default: 0};\r\n        } else {\r\n            return { name: r_value[0].trim(), value: undefined, default: 0 };\r\n        }\r\n\r\n    });\r\n    let hasReturn = true;\r\n    if (fnStr.indexOf('return') === -1 || fnStr.indexOf('return;') !== -1) {\r\n        hasReturn = false;\r\n    }\r\n    return [final_result, hasReturn];\r\n}\r\n\r\nfor ( const m_name in Modules ) {\r\n    if (!Modules[m_name]) { continue; }\r\n    // if (m_name[0] === '_') { continue; }\r\n\r\n    const modObj = <IModule>{};\r\n    modObj.module = m_name;\r\n    modObj.functions = [];\r\n\r\n    for ( const fn_name of Object.keys(Modules[m_name])) {\r\n        // if (fn_name[0] === '_') { continue; }\r\n\r\n        const func = Modules[m_name][fn_name];\r\n\r\n        const fnObj = <IFunction>{};\r\n        fnObj.module = m_name;\r\n        fnObj.name = fn_name;\r\n        fnObj.argCount = func.length;\r\n        const args = extract_params(func);\r\n        fnObj.args = args[0];\r\n        fnObj.hasReturn = args[1];\r\n        modObj.functions.push(fnObj);\r\n    }\r\n    module_list.push(modObj);\r\n}\r\n\r\n\r\nfunction analyzeParamType(fn, paramType) {\r\n    if (paramType.type === 'array') {\r\n        return `${analyzeParamType(fn, paramType.elementType)}[]`;\r\n    } else if (paramType.type === 'intrinsic' || paramType.type === 'reference') {\r\n        return paramType.name;\r\n    } else if (paramType.type === 'union') {\r\n        return paramType.types.map((tp: any) => analyzeParamType(fn, tp)).join(' | ');\r\n    } else if (paramType.type === 'tuple') {\r\n        return '[' + paramType.elements.map((tp: any) => analyzeParamType(fn, tp)).join(', ') + ']';\r\n    } else {\r\n        /**\r\n         * TODO: Update unrecognized param type here\r\n         */\r\n        console.log('param type requires updating:', paramType);\r\n        console.log('in function:', fn.module + '.' + fn.name);\r\n        return paramType.type;\r\n    }\r\n\r\n}\r\n\r\nconst docs = {};\r\nfor (const mod of doc.children) {\r\n    let modName: any = mod.name.split('/');\r\n    modName = modName[modName.length - 1];\r\n    if (modName.substr(0, 1) === '\"' || modName.substr(0, 1) === '\\'') {\r\n        modName = modName.substr(1, modName.length - 2);\r\n    } else {\r\n        modName = modName.substr(0, modName.length - 1);\r\n    }\r\n    if (modName.substr(0, 1) === '_' || modName === 'index') {\r\n        continue;\r\n    }\r\n    const moduleDoc = {};\r\n    if (mod.comment && mod.comment.shortText) {\r\n        moduleDoc['description'] = mod.comment.shortText;\r\n    }\r\n    for (const func of mod.children) {\r\n        const fn = {};\r\n        fn['name'] = func.name;\r\n        fn['module'] = modName;\r\n        if (!func['signatures']) { continue; }\r\n        if (func['signatures'][0].comment) {\r\n            const cmmt = func['signatures'][0].comment;\r\n            fn['description'] = cmmt.shortText;\r\n            if (cmmt.text) {\r\n                fn['description'] = fn['description'] + cmmt.text;\r\n            }\r\n            if (cmmt.tags) {\r\n                for (const fnTag of cmmt.tags) {\r\n                    if (fnTag.tag === 'summary') { fn['summary'] = fnTag.text;\r\n                    } else {\r\n                        if (fn[fnTag.tag]) {\r\n                            fn[fnTag.tag].push(fnTag.text);\r\n                        } else {\r\n                            fn[fnTag.tag] = [fnTag.text];\r\n                        }\r\n\r\n                    }\r\n                }\r\n            }\r\n            fn['returns'] = cmmt.returns;\r\n            if (fn['returns']) { fn['returns'] = fn['returns'].trim(); }\r\n        }\r\n        fn['parameters'] = [];\r\n        if (func['signatures'][0].parameters) {\r\n            for (const param of func['signatures'][0].parameters) {\r\n                let namecheck = true;\r\n                for (const systemVarName in Modules._parameterTypes) {\r\n                    if (param.name === Modules._parameterTypes[systemVarName]) {\r\n                        namecheck = false;\r\n                        break;\r\n                    }\r\n                }\r\n                if (!namecheck) {\r\n                    fn['parameters'].push(undefined);\r\n                    continue;\r\n                }\r\n                const pr = {};\r\n\r\n                pr['name'] = param.name;\r\n                if (param.comment) {\r\n                    pr['description'] = param.comment.shortText || param.comment.text;\r\n                }\r\n                pr['type'] = analyzeParamType(fn, param.type);\r\n                fn['parameters'].push(pr);\r\n            }\r\n        }\r\n        moduleDoc[func.name] = fn;\r\n    }\r\n    docs[modName] = moduleDoc;\r\n}\r\n\r\nexport const ModuleList = module_list;\r\nexport const ModuleDocList = docs;\r\n","import { InputType } from '@models/port';\r\n\r\nexport function PortTypesAware(constructor: Function) {\r\n    constructor.prototype.PortTypes = InputType;\r\n\r\n    // array form\r\n    const keys = Object.keys(InputType);\r\n    constructor.prototype.PortTypesArr = keys.slice(keys.length / 2);\r\n}\r\n","import { ProcedureTypes } from '@models/procedure';\r\n\r\nexport function ProcedureTypesAware(constructor: Function) {\r\n    constructor.prototype.ProcedureTypes = ProcedureTypes;\r\n\r\n    // array form\r\n    const keys = Object.keys(ProcedureTypes);\r\n    constructor.prototype.ProcedureTypesArr = keys.slice(keys.length / 2);\r\n}\r\n","import { OutputType } from '@models/port';\r\n\r\nexport function ViewerTypesAware(constructor: Function) {\r\n    constructor.prototype.ViewerTypes = OutputType;\r\n\r\n    // array form\r\n    const keys = Object.keys(OutputType);\r\n    constructor.prototype.ViewerTypesArr = keys.slice(keys.length / 2);\r\n}\r\n","export * from './mobfile-reader.directive';\r\n","/*\r\n *  Adding this to an HTML5 input element\r\n *  allows for the file being read to be converted into a Mobius\r\n *  Flowchart\r\n *\r\n */\r\nimport { Directive, ElementRef, Input, Output, HostBinding, HostListener, EventEmitter } from '@angular/core';\r\nimport * as CircularJSON from 'circular-json';\r\n\r\n@Directive({\r\n  selector: '[mbFileReader]'\r\n})\r\nexport class MbFileReaderDirective {\r\n\r\n  @Input() data: any = {};\r\n  @Output() load = new EventEmitter();\r\n\r\n  constructor(private el: ElementRef) { }\r\n\r\n  @HostListener('change')\r\n  onFileChange() {\r\n    const f = this.el.nativeElement.files[0];\r\n    if (f) {\r\n        const reader = new FileReader();\r\n        reader.readAsText(f, 'UTF-8');\r\n        const ins = this;\r\n        reader.onload = function (evt) {\r\n            const fileString: string = evt.target['result'];\r\n            ins.load_flowchart_from_string(fileString);\r\n        };\r\n        reader.onerror = function (evt) {\r\n            console.log('Error reading file');\r\n        };\r\n    }\r\n  }\r\n\r\n\r\n  //\r\n  // Input: string\r\n  // Output: MobiusFile DS\r\n  //\r\n  //\r\n  private load_flowchart_from_string(fileString: string): void {\r\n    const _this = this;\r\n    // let jsonData: {language: string, flowchart: JSON, modules: JSON};\r\n    // let flowchart: any; // IFlowchart;\r\n\r\n    try {\r\n      const data = CircularJSON.parse(fileString);\r\n      this.load.emit(data);\r\n      // this.data.flowchart = data.flowchart;\r\n      // this.data.modules = data.modules;\r\n      // this.data.language = data.language;\r\n\r\n      // this.update_code_generator(CodeFactory.getCodeGenerator(data[\"language\"]));\r\n      // TODO: this.update_modules();\r\n\r\n      // flowchart = FlowchartReader.read_flowchart_from_data(data[\"flowchart\"]);\r\n      // TODO: select a node\r\n    } catch (err) {\r\n      console.error('Mob-file-reader error', err);\r\n    }\r\n\r\n  }\r\n\r\n\r\n}\r\n","/*\r\n *  Adding this to an HTML5 input element\r\n *  allows for the file being read to be converted into a Mobius\r\n *  Flowchart\r\n *\r\n */\r\nimport { Directive, ElementRef, HostListener } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[autogrow]'\r\n})\r\nexport class AutogrowDirective {\r\n\r\n    constructor(private textArea: ElementRef) {\r\n    }\r\n\r\n    @HostListener('keyup') onKeyUp() {\r\n        this.textArea.nativeElement.style.overflow = 'hidden';\r\n        this.textArea.nativeElement.style.height = '1px';\r\n        this.textArea.nativeElement.style.height = this.textArea.nativeElement.scrollHeight + 'px';\r\n    }\r\n}\r\n","export * from './autogrow.directive';\r\n","import { INode } from '@models/node';\r\nimport { _parameterTypes } from '@assets/core/modules';\r\nconst emptyModel = _parameterTypes.newFn();\r\n\r\nexport function getViewerData(node: INode, getViewOutput: boolean) {\r\n    if (!node || !node.enabled) { return emptyModel; }\r\n    // if (node.type === 'output') { return node.input.value; }\r\n    if (getViewOutput) {\r\n        return node.model;\r\n    }\r\n    return node.input.value;\r\n\r\n}\r\n","import { INode } from '@models/node';\r\nimport { IProcedure, ProcedureTypes, IFunction } from '@models/procedure';\r\nimport { IPortInput, InputType } from '@models/port';\r\nimport { Observable } from 'rxjs';\r\nimport * as circularJSON from 'circular-json';\r\nimport { _parameterTypes } from '@modules';\r\n\r\n\r\nexport class CodeUtils {\r\n\r\n    static getProcedureCode(prod: IProcedure, existingVars: string[], addProdArr: Boolean): string[] {\r\n        if (prod.enabled === false || prod.type === ProcedureTypes.Blank || prod.type === ProcedureTypes.Comment) { return ['']; }\r\n\r\n        prod.hasError = false;\r\n\r\n        let codeStr: string[] = [];\r\n        const args = prod.args;\r\n        let prefix = '';\r\n        if (args) {\r\n            prefix =\r\n            args.hasOwnProperty('0') && args[0].value && args[0].value.indexOf('[') === -1\r\n            && existingVars.indexOf(args[0].value) === -1 ? 'let ' : '';\r\n        }\r\n        codeStr.push('');\r\n        if (addProdArr && prod.type !== ProcedureTypes.Else && prod.type !== ProcedureTypes.Elseif) {\r\n            codeStr.push(`__params__.currentProcedure[0] = \"${prod.ID}\";`);\r\n        }\r\n\r\n        switch ( prod.type ) {\r\n            case ProcedureTypes.Variable:\r\n                if (!args[0].value) {\r\n                    codeStr.push(`${this.repGetAttrib(args[1].value)};`);\r\n                    break;\r\n                }\r\n                const repVar = this.repSetAttrib(args[0].value);\r\n                if (!repVar) {\r\n                    codeStr.push(`${prefix}${args[0].value} = ${this.repGetAttrib(args[1].value)};`);\r\n                    if (prefix === 'let ') {\r\n                        existingVars.push(args[0].value);\r\n                    }\r\n                } else {\r\n                    codeStr.push(`${repVar[0]} ${this.repGetAttrib(args[1].value)} ${repVar[1]}`);\r\n                }\r\n                break;\r\n\r\n            case ProcedureTypes.If:\r\n                if (args[0].value.indexOf('__params__') !== -1) { throw new Error('Unexpected Identifier'); }\r\n                codeStr.push(`if (${this.repGetAttrib(args[0].value)}){`);\r\n                break;\r\n\r\n            case ProcedureTypes.Else:\r\n                codeStr.push(`else {`);\r\n                break;\r\n\r\n            case ProcedureTypes.Elseif:\r\n                if (args[0].value.indexOf('__params__') !== -1) { throw new Error('Unexpected Identifier'); }\r\n                codeStr.push(`else if(${this.repGetAttrib(args[0].value)}){`);\r\n                break;\r\n\r\n            case ProcedureTypes.Foreach:\r\n                // codeStr.push(`for (${prefix} ${args[0].value} of [...Array(${args[1].value}).keys()]){`);\r\n                if (args[0].value.indexOf('__params__') !== -1) { throw new Error('Unexpected Identifier'); }\r\n                codeStr.push(`for (${prefix} ${args[0].value} of ${this.repGetAttrib(args[1].value)}){`);\r\n                break;\r\n\r\n            case ProcedureTypes.While:\r\n                if (args[0].value.indexOf('__params__') !== -1) { throw new Error('Unexpected Identifier'); }\r\n                codeStr.push(`while (${this.repGetAttrib(args[0].value)}){`);\r\n                break;\r\n\r\n            case ProcedureTypes.Break:\r\n                codeStr.push(`break;`);\r\n                break;\r\n\r\n            case ProcedureTypes.Continue:\r\n                codeStr.push(`continue;`);\r\n                break;\r\n\r\n            case ProcedureTypes.Constant:\r\n                if (!addProdArr) {\r\n                    return [''];\r\n                }\r\n                let constName = args[0].value;\r\n                if (constName[0] === '\"' || constName[0] === '\\'') {\r\n                    constName = args[0].value.substring(1, args[0].value.length - 1);\r\n                }\r\n                codeStr.push(`__params__['constants']['${constName}'] = ${prod.resolvedValue};`);\r\n\r\n                break;\r\n\r\n            case ProcedureTypes.AddData:\r\n                let cst = args[0].value;\r\n                if (!addProdArr) {\r\n                    return [`__modules__.${_parameterTypes.addData}( __params__.model, ${cst});`];\r\n                }\r\n                if (cst[0] === '\"' || cst[0] === '\\'') {\r\n                    cst = args[0].value.substring(1, args[0].value.length - 1);\r\n                }\r\n\r\n                codeStr.push(`__params__['constants']['${cst}'] = ${prod.resolvedValue};`);\r\n                if (_parameterTypes.addData) {\r\n                    codeStr.push(`__modules__.${_parameterTypes.addData}( __params__.model, __params__.constants['${cst}']);`);\r\n                } else {\r\n                    codeStr.push(`__params__.model = mergeInputs( [__params__.model, __params__.constants['${cst}']]);`);\r\n                }\r\n\r\n                break;\r\n\r\n\r\n            case ProcedureTypes.Return:\r\n                let check = true;\r\n                const returnArgVals = [];\r\n                for (const arg of args) {\r\n                    if (arg.name === _parameterTypes.constList) {\r\n                        returnArgVals.push('__params__.constants');\r\n                        continue;\r\n                    }\r\n                    if (arg.name === _parameterTypes.model) {\r\n                        returnArgVals.push('__params__.model');\r\n                        continue;\r\n                    }\r\n                    if (!arg.value) {\r\n                        check = false;\r\n                        break;\r\n                    }\r\n                    if (arg.value.indexOf('__params__') !== -1) { throw new Error('Unexpected Identifier'); }\r\n                    if (arg.value[0] === '#') {\r\n                        returnArgVals.push('`' + this.repGetAttrib(arg.value) + '`');\r\n                        continue;\r\n                    }\r\n                    returnArgVals.push(this.repGetAttrib(arg.value));\r\n                }\r\n                if (!check) {\r\n                    codeStr.push(`return __params__['model'];`);\r\n                } else {\r\n                    codeStr.push(`let __return_value__ = __modules__.${_parameterTypes.return}(${returnArgVals.join(', ')});`);\r\n                    if (addProdArr) {\r\n                        // codeStr.push(`console.(log'Return: ', __return_value__);`);\r\n                        codeStr.push(`__params__.console.push('Return: ' + __return_value__.toString());`);\r\n                    }\r\n                    codeStr.push(`return __return_value__;`);\r\n                }\r\n                break;\r\n\r\n            case ProcedureTypes.Function:\r\n                const argVals = [];\r\n                for (const arg of args.slice(1)) {\r\n                    if (arg.value && arg.value.indexOf('__params__') !== -1) { throw new Error('Unexpected Identifier'); }\r\n                    if (arg.name === _parameterTypes.constList) {\r\n                        argVals.push('__params__.constants');\r\n                        continue;\r\n                    }\r\n                    if (arg.name === _parameterTypes.model) {\r\n                        argVals.push('__params__.model');\r\n                        continue;\r\n                    }\r\n\r\n                    if (arg.value && arg.value[0] === '#') {\r\n                        argVals.push('`' + this.repGetAttrib(arg.value) + '`');\r\n                        continue;\r\n                    }\r\n                    argVals.push(this.repGetAttrib(arg.value));\r\n                }\r\n                if (prod.meta.name === 'ImportData') {\r\n                    argVals[1] = prod.resolvedValue;\r\n                }\r\n                const argValues = argVals.join(', ');\r\n                const fnCall = `__modules__.${prod.meta.module}.${prod.meta.name}( ${argValues} )`;\r\n                if ( prod.meta.module.toUpperCase() === 'OUTPUT') {\r\n                    if (prod.args[prod.args.length - 1].value) {\r\n                        codeStr.push(`return ${fnCall};`);\r\n                    }\r\n                } else if (args[0].name === '__none__' || !args[0].value) {\r\n                    codeStr.push(`${fnCall};`);\r\n                } else {\r\n                    const repfuncVar = this.repSetAttrib(args[0].value);\r\n                    if (!repfuncVar) {\r\n                        codeStr.push(`${prefix}${args[0].value} = ${fnCall};`);\r\n                        if (prefix === 'let ') {\r\n                            existingVars.push(args[0].value);\r\n                        }\r\n                    } else {\r\n                        codeStr.push(`${repfuncVar[0]} ${fnCall} ${repfuncVar[1]}`);\r\n                    }\r\n                }\r\n                break;\r\n            case ProcedureTypes.Imported:\r\n                let argsVals: any = [];\r\n                for (let i = 1; i < args.length; i++) {\r\n                    const arg = args[i];\r\n                    // args.slice(1).map((arg) => {\r\n                    if (arg.type.toString() !== InputType.URL.toString()) {\r\n                        argsVals.push(this.repGetAttrib(arg.value));\r\n                    } else {\r\n                        argsVals.push(prod.resolvedValue);\r\n                    }\r\n                }\r\n                argsVals = argsVals.join(', ');\r\n\r\n                const fn = `${prod.meta.name}(__params__, ${argsVals} )`;\r\n\r\n                if (args[0].name === '__none__' || !args[0].value) {\r\n                    codeStr.push(`${fn};`);\r\n                    break;\r\n                }\r\n                const repImpVar = this.repSetAttrib(args[0].value);\r\n                if (!repImpVar) {\r\n                    codeStr.push(`${prefix}${args[0].value} = ${fn};`);\r\n                } else {\r\n                    codeStr.push(`${repImpVar[0]} ${fn} ${repImpVar[1]}`);\r\n                }\r\n\r\n                if (prefix === 'let ') {\r\n                    existingVars.push(args[0].value);\r\n                }\r\n                break;\r\n\r\n        }\r\n        if (prod.children) {\r\n            for (const p of prod.children) {\r\n                codeStr = codeStr.concat(CodeUtils.getProcedureCode(p, existingVars, addProdArr));\r\n            }\r\n            codeStr.push(`}`);\r\n        }\r\n\r\n        if (prod.print && prod.args[0].value) {\r\n            const repGet = this.repGetAttrib(prod.args[0].value);\r\n            codeStr.push(`printFunc(__params__.console,'${prod.args[0].value}', ${repGet});`);\r\n        }\r\n        if (prod.selectGeom && prod.args[0].value) {\r\n            const repGet = this.repGetAttrib(prod.args[0].value);\r\n            codeStr.push(`__modules__.${_parameterTypes.select}(__params__.model, ${repGet}, \"${repGet}\");`);\r\n        }\r\n        return codeStr;\r\n    }\r\n    static repSetAttrib(val: string) {\r\n        // if (!val || val.indexOf('@') === -1) {\r\n        //     return false;\r\n        // }\r\n        // const splitted = val.split('@');\r\n        // if (splitted.length > 2) {\r\n        //     splitted[1] = splitted.splice(1, splitted.length - 1).join('@');\r\n        // }\r\n        // const openBracketMatch = (splitted[1].match(/\\[/g) || []).length;\r\n        // if (openBracketMatch) {\r\n        //     const bracketSplit = splitted[1].substring(0, splitted[1].length - 1).split('[');\r\n        //     const innerVar = CodeUtils.repGetAttrib(bracketSplit.splice(1, bracketSplit.length - 1).join('['));\r\n        //     return [`__modules__.${_parameterTypes.setattrib}(\r\n        //              __params__.model, ${splitted[0]}, '${bracketSplit[0]}',`, `, ${innerVar});`];\r\n        // } else {\r\n        //     return [`__modules__.${_parameterTypes.setattrib}(__params__.model, ${splitted[0]}, '${splitted[1]}',`, ');'];\r\n        // }\r\n\r\n        if (!val || val.indexOf('@') === -1) {\r\n            return false;\r\n        }\r\n        // get two parts, before @ and after @\r\n        let val_0: string;\r\n        let val_1: string;\r\n        const atIndex: number = val.indexOf('@');\r\n        if (atIndex === 0) {\r\n            val_0 = null;\r\n            val_1 = val.slice(1);\r\n        } else {\r\n            val_0 = val.slice(0, atIndex);\r\n            val_1 = val.slice(atIndex + 1);\r\n        }\r\n        const openBracketMatch = (val_1.match(/\\[/g) || []).length;\r\n        if (openBracketMatch) {\r\n            const bracketSplit = val_1.substring(0, val_1.length - 1).split('[');\r\n            const innerVar = CodeUtils.repGetAttrib(bracketSplit.splice(1, bracketSplit.length - 1).join('['));\r\n            return [`__modules__.${_parameterTypes.setattrib}(__params__.model, ${val_0}, '${bracketSplit[0]}',`, `, ${innerVar});`];\r\n        } else {\r\n            return [`__modules__.${_parameterTypes.setattrib}(__params__.model, ${val_0}, '${val_1}',`, ');'];\r\n        }\r\n    }\r\n\r\n    static repGetAttrib(val: string) {\r\n        // if (!val) { return; }\r\n        // const res = val.split(' ');\r\n        // for (const i in res) {\r\n        //     if (!res[i]) {\r\n        //         continue;\r\n        //     }\r\n        //     const atIndex = res[i].indexOf('@');\r\n        //     if (atIndex !== -1 && atIndex > 0 && res[i].trim()[0] !== '#') {\r\n        //         const splitted = res[i].split('@');\r\n        //         if (splitted.length > 2) {\r\n        //             splitted[1] = splitted.splice(1, splitted.length - 1).join('@');\r\n        //         }\r\n        //         let pref = '';\r\n        //         let postf = '';\r\n        //         while (splitted[0][0] === '[') {\r\n        //             splitted[0] = splitted[0].substring(1, splitted[0].length);\r\n        //             pref += '[';\r\n        //         }\r\n        //         const closeBracketMatch = (splitted[1].match(/\\]/g) || []).length;\r\n        //         const openBracketMatch = (splitted[1].match(/\\[/g) || []).length;\r\n        //         if (closeBracketMatch > openBracketMatch) {\r\n        //             splitted[1] = splitted[1].substring(0, splitted[1].length - (closeBracketMatch - openBracketMatch));\r\n        //             postf = ']'.repeat(closeBracketMatch - openBracketMatch);\r\n        //         }\r\n        //         if (openBracketMatch) {\r\n        //             const bracketSplit = splitted[1].substring(0, splitted[1].length - 1).split('[');\r\n        //             const innerVar = CodeUtils.repGetAttrib(bracketSplit.splice(1, bracketSplit.length - 1).join('['));\r\n        //             res[i] = `${pref}__modules__.${_parameterTypes.getattrib}` +\r\n        //                 `(__params__.model, ${splitted[0]}, '${bracketSplit[0]}', ${innerVar})${postf}`;\r\n        //         } else {\r\n        //             res[i] = `${pref}__modules__.${_parameterTypes.getattrib}(\r\n        //                      __params__.model, ${splitted[0]}, '${splitted[1]}')${postf}`;\r\n        //         }\r\n        //     }\r\n        // }\r\n        // return res.join(' ');\r\n        if (!val) { return; }\r\n        const res = val.split(' ');\r\n        for (const i in res) {\r\n            if (!res[i]) {\r\n                continue;\r\n            }\r\n            const atIndex = res[i].indexOf('@');\r\n            if (atIndex !== -1 && atIndex >= 0 && res[i].trim()[0] !== '#') {\r\n                // get two parts, before @ and after @\r\n                let val_0: string;\r\n                let val_1: string;\r\n                let pref = '';\r\n                let postf = '';\r\n                if (atIndex === 0) {\r\n                    val_0 = null;\r\n                    val_1 = res[i].slice(1);\r\n                } else {\r\n                    val_0 = res[i].slice(0, atIndex);\r\n                    val_1 = res[i].slice(atIndex + 1);\r\n                    while (val_0[0] === '[') {\r\n                        val_0 = val_0.substring(1, val_0.length);\r\n                        pref += '[';\r\n                    }\r\n                    if (val_0 === '') {\r\n                        val_0 = null;\r\n                    }\r\n                }\r\n                const closeBracketMatch = (val_1.match(/\\]/g) || []).length;\r\n                const openBracketMatch = (val_1.match(/\\[/g) || []).length;\r\n                if (closeBracketMatch > openBracketMatch) {\r\n                    val_1 = val_1.substring(0, val_1.length - (closeBracketMatch - openBracketMatch));\r\n                    postf = ']'.repeat(closeBracketMatch - openBracketMatch);\r\n                }\r\n                if (openBracketMatch) {\r\n                    const bracketSplit = val_1.substring(0, val_1.length - 1).split('[');\r\n                    const innerVar = CodeUtils.repGetAttrib(bracketSplit.splice(1, bracketSplit.length - 1).join('['));\r\n                    res[i] = `${pref}__modules__.${_parameterTypes.getattrib}` +\r\n                        `(__params__.model, ${val_0}, '${bracketSplit[0]}', ${innerVar})${postf}`;\r\n                } else {\r\n                    res[i] = `${pref}__modules__.${_parameterTypes.getattrib}(__params__.model, ${val_0}, '${val_1}')${postf}`;\r\n                }\r\n            }\r\n        }\r\n        return res.join(' ');\r\n    }\r\n\r\n    static async getStartInput(arg, inputMode): Promise<any> {\r\n        let val;\r\n        let defaultCheck = false;\r\n        if (arg.value === undefined) {\r\n            val = arg.default;\r\n            defaultCheck = true;\r\n        } else {\r\n            val = arg.value;\r\n        }\r\n        let result = val;\r\n        if (inputMode.toString() === InputType.URL.toString() ) {\r\n            if (val.indexOf('dropbox') !== -1) {\r\n                val = val.replace('www', 'dl').replace('dl=0', 'dl=1');\r\n            }\r\n            const p = new Promise((resolve) => {\r\n                const request = new XMLHttpRequest();\r\n                request.open('GET', val);\r\n                request.onload = () => {\r\n                    resolve(request.responseText);\r\n                };\r\n                request.onerror = () => {\r\n                    resolve('HTTP Request Error: unable to retrieve file from url ' + val);\r\n                };\r\n                request.send();\r\n            });\r\n            result = await p;\r\n            if (result.indexOf('HTTP Request Error') !== -1) {\r\n                throw(new Error(result));\r\n            }\r\n            result = '`' + result + '`';\r\n        } else if (inputMode.toString() === InputType.File.toString()) {\r\n            if (val.lastModified) {\r\n                const p = new Promise((resolve) => {\r\n                    const reader = new FileReader();\r\n                    reader.onload = function() {\r\n                        resolve(reader.result);\r\n                    };\r\n                    reader.onerror = () => {\r\n                        resolve('File Reading Error: unable to read file ' + val.name);\r\n                    };\r\n                    reader.readAsText(val);\r\n                });\r\n                result = await p;\r\n                if (result.indexOf('File Reading Error') !== -1) {\r\n                    throw(new Error(result));\r\n                }\r\n                result = '`' + result + '`';\r\n                    window.localStorage.setItem(val.name, result);\r\n                if (defaultCheck) {\r\n                    arg.default = {'name': val.name};\r\n                } else {\r\n                    arg.value = {'name': val.name};\r\n                }\r\n            } else {\r\n                result = window.localStorage.getItem(val.name);\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    static loadFile(f) {\r\n        const stream = Observable.create(observer => {\r\n          const request = new XMLHttpRequest();\r\n\r\n          request.open('GET', f.download_url);\r\n          request.onload = () => {\r\n              if (request.status === 200) {\r\n                  const fl = circularJSON.parse(request.responseText);\r\n                  observer.next(fl);\r\n                  observer.complete();\r\n              } else {\r\n                  observer.error('error happened');\r\n              }\r\n          };\r\n\r\n          request.onerror = () => {\r\n          observer.error('error happened');\r\n          };\r\n          request.send();\r\n        });\r\n\r\n        stream.subscribe(loadeddata => {\r\n          return loadeddata;\r\n        });\r\n    }\r\n\r\n    static mergeInputs(models): any {\r\n        const result = _parameterTypes['newFn']();\r\n        for (const model of models) {\r\n            _parameterTypes['mergeFn'](result, model);\r\n        }\r\n        return result;\r\n    }\r\n\r\n\r\n\r\n    static getInputValue(inp: IPortInput, node: INode): Promise<string> {\r\n        let input: any;\r\n        if (node.type === 'start' || inp.edges.length === 0) {\r\n            input = _parameterTypes['newFn']();\r\n        } else {\r\n            const inputs = [];\r\n            for (const edge of inp.edges) {\r\n                if (edge.source.parentNode.enabled) {\r\n                    inputs.push(edge.source.value);\r\n                }\r\n            }\r\n            input = CodeUtils.mergeInputs(inputs);\r\n            /*\r\n            if (input.constructor === gsConstructor) {\r\n                input = `new __MODULES__.gs.Model(${input.toJSON()})`\r\n            } else {\r\n                // do nothing\r\n            }\r\n            */\r\n        }\r\n        return input;\r\n    }\r\n\r\n    public static getNodeCode(node: INode, addProdArr = false): string[][] {\r\n        node.hasError = false;\r\n        let codeStr = [];\r\n        const varsDefined: string[] = [];\r\n        // input initializations\r\n        if (addProdArr) {\r\n            const input = CodeUtils.getInputValue(node.input, node);\r\n            node.input.value = input;\r\n        }\r\n\r\n        if (node.type === 'start') {\r\n            codeStr.push('__params__.constants = {};\\n');\r\n        }\r\n\r\n        codeStr.push(`__modules__.${_parameterTypes.preprocess}( __params__.model);`);\r\n        // procedure\r\n        for (const prod of node.procedure) {\r\n            // if (node.type === 'start' && !addProdArr) { break; }\r\n            codeStr = codeStr.concat(CodeUtils.getProcedureCode(prod, varsDefined, addProdArr) );\r\n        }\r\n        if (node.type === 'end' && node.procedure.length > 0) {\r\n            return [codeStr, varsDefined];\r\n            // codeStr.push('}');\r\n            // return ['{'].concat(codeStr);\r\n            // return `{\\n${codeStr.join('\\n')}\\n}`;\r\n        } else {\r\n            codeStr.push(`__modules__.${_parameterTypes.postprocess}( __params__.model);`);\r\n        }\r\n\r\n        codeStr.push('return __params__.model;');\r\n        return [codeStr, varsDefined];\r\n        // return `\\n${codeStr.join('\\n')}\\n\\nreturn __params__.model;\\n`;\r\n\r\n\r\n        // return `{\\n${codeStr.join('\\n')}\\nreturn result;\\n}`;\r\n        // return `/*    ${node.name.toUpperCase()}    */\\n\\n{\\n${codeStr.join('\\n')}\\nreturn ${node.output.name};\\n}`;\r\n\r\n\r\n    }\r\n\r\n    static getFunctionString(func: IFunction): string {\r\n        let fullCode = '';\r\n        let fnCode;\r\n        if (func.args.length === 0) {\r\n            fnCode = `function ${func.name}(__params__)` +\r\n            `{\\nvar merged;\\n`;\r\n        } else {\r\n            fnCode = `function ${func.name}(__params__, ${func.args.map(arg => arg.name).join(', ')})` +\r\n            `{\\nvar merged;\\n`;\r\n        }\r\n\r\n        for (const node of func.flowchart.nodes) {\r\n            const codeRes = CodeUtils.getNodeCode(node, false);\r\n            let code: any = codeRes[0];\r\n\r\n            code = '{\\n' + code.join('\\n') + '\\n}';\r\n            if (func.args.length === 0) {\r\n                fullCode += `function ${node.id}(__params__)` + code + `\\n\\n`;\r\n            } else {\r\n                fullCode += `function ${node.id}(__params__, ${func.args.map(arg => arg.name).join(', ')})` + code + `\\n\\n`;\r\n            }\r\n\r\n            if (node.type === 'start') {\r\n                // fnCode += `let result_${node.id} = ${node.id}(__params__);\\n`\r\n                fnCode += `let result_${node.id} = __params__.model;\\n`;\r\n            } else {\r\n                const activeNodes = [];\r\n                for (const nodeEdge of node.input.edges) {\r\n                    if (!nodeEdge.source.parentNode.enabled) {\r\n                        continue;\r\n                    }\r\n                    activeNodes.push(nodeEdge.source.parentNode.id);\r\n                }\r\n                fnCode += `\\n__params__.model = mergeInputs([${activeNodes.map((nodeId) => 'result_' + nodeId).join(', ')}]);\\n`;\r\n                // if (activeNodes.length === 1) {\r\n                //     fnCode += `__params__.model = mergeInputs([result_${activeNodes}]);\\n`;\r\n                // } else {\r\n                //     fnCode += `merged = mergeInputs([${activeNodes.map((nodeId) => 'result_' + nodeId).join(', ')}]);\\n`;\r\n                //     fnCode += `__params__.model = merged;\\n`;\r\n                // }\r\n                if (func.args.length === 0) {\r\n                    fnCode += `let result_${node.id} = ${node.id}(__params__);\\n`;\r\n                } else {\r\n                    fnCode += `let result_${node.id} = ${node.id}(__params__, ${func.args.map(arg => arg.name).join(', ')});\\n`;\r\n                }\r\n            }\r\n            if (node.type === 'end') {\r\n                // fnCode += `\\n__mainParams__.model = mergeInputs([__mainParams__.model,__params__.model]);\\n`;\r\n                fnCode += `\\nreturn result_${node.id};\\n`;\r\n            }\r\n        }\r\n        fnCode += '}\\n\\n';\r\n        fullCode += fnCode;\r\n        return fullCode;\r\n    }\r\n\r\n\r\n}\r\n","export class ExecuteUtils {\r\n\r\n}\r\n","export { IArgument } from './argument.interface';\r\nexport { CodeUtils } from './code.utils';\r\nexport { ExecuteUtils } from './execute.utils';\r\n","//\r\n//\r\n// The flowchart is the basic datastructure in Mobius - it is essentially a linked-list.\r\n// It also\r\n//\r\n\r\nimport { INode } from '@models/node';\r\nimport { IEdge } from '@models/edge';\r\nimport { IFunction } from '@models/procedure';\r\n\r\nexport interface IFlowchart {\r\n    name: string;\r\n    description: string;\r\n    returnDescription?: string;\r\n    language: string;\r\n\r\n    nodes: INode[];\r\n    edges: IEdge[];\r\n    functions: IFunction[];\r\n    ordered: boolean;\r\n\r\n    meta: {\r\n        selected_nodes: number[];\r\n    };\r\n}\r\n\r\nexport const canvasSize = 10000;\r\n\r\n","import { IFlowchart, canvasSize } from './flowchart.interface';\r\nimport { NodeUtils, INode } from '@models/node';\r\nimport { IEdge } from '@models/edge';\r\n\r\nexport class FlowchartUtils {\r\n\r\n    public static newflowchart(): IFlowchart {\r\n        const startNode = NodeUtils.getStartNode();\r\n        startNode.position = {x: canvasSize * 1.07 / 2, y: canvasSize / 2};\r\n\r\n        const middleNode = NodeUtils.getNewNode();\r\n        middleNode.position = {x: canvasSize * 1.07 / 2, y: 200 + canvasSize / 2};\r\n\r\n        const endNode = NodeUtils.getEndNode();\r\n        endNode.position = {x: canvasSize * 1.07 / 2, y: 400 + canvasSize / 2};\r\n\r\n        const startMid: IEdge = {\r\n            source: startNode.output,\r\n            target: middleNode.input,\r\n            selected: false\r\n        };\r\n        startNode.output.edges = [startMid];\r\n        middleNode.input.edges = [startMid];\r\n\r\n        const midEnd: IEdge = {\r\n            source: middleNode.output,\r\n            target: endNode.input,\r\n            selected: false\r\n        };\r\n        middleNode.output.edges = [midEnd];\r\n        endNode.input.edges = [midEnd];\r\n\r\n        middleNode.enabled = true;\r\n        endNode.enabled = true;\r\n\r\n        const flw: IFlowchart = {\r\n            name: 'Untitled',\r\n            description: '',\r\n            language: 'js',\r\n            meta: {\r\n                selected_nodes: [2]\r\n            },\r\n            nodes: [ startNode, middleNode, endNode ],\r\n            edges: [ startMid, midEnd ],\r\n            functions: [],\r\n            ordered: true\r\n        };\r\n\r\n        return flw;\r\n    }\r\n\r\n    static checkNode(nodeOrder: INode[], node: INode, enabled: boolean) {\r\n        if (node.hasExecuted) {\r\n            return;\r\n        } else if (node.type === 'start' ) {\r\n            nodeOrder.push(node);\r\n        } else {\r\n            for (const edge of node.input.edges) {\r\n                if (!edge.source.parentNode.hasExecuted) {\r\n                    return;\r\n                }\r\n            }\r\n            nodeOrder.push(node);\r\n        }\r\n        node.hasExecuted = true;\r\n        // node.enabled = enabled;\r\n        for (const edge of node.output.edges) {\r\n            FlowchartUtils.checkNode(nodeOrder, edge.target.parentNode, enabled);\r\n        }\r\n    }\r\n\r\n    public static orderNodes(flw: IFlowchart) {\r\n        let startNode;\r\n        for (const node of flw.nodes) {\r\n            if (node.type === 'start') {\r\n                startNode = node;\r\n            }\r\n            node.hasExecuted = false;\r\n        }\r\n        const nodeOrder = [];\r\n        FlowchartUtils.checkNode(nodeOrder, startNode, true);\r\n        if (nodeOrder.length < flw.nodes.length) {\r\n            /*\r\n            for (const node of flw.nodes) {\r\n                if (node.type !== 'start' && node.input.edges.length === 0) {\r\n                    FlowchartUtils.checkNode(nodeOrder, node, false);\r\n                }\r\n            }\r\n            */\r\n            for (const node of flw.nodes) {\r\n                let check = false;\r\n                for (const existingNode of nodeOrder) {\r\n                    if (existingNode === node) {\r\n                        check = true;\r\n                        break;\r\n                    }\r\n                }\r\n                if (check) { continue; }\r\n                // node.enabled = false;\r\n                nodeOrder.push(node);\r\n            }\r\n        }\r\n        if (nodeOrder[nodeOrder.length - 1].type !== 'end') {\r\n            for (let i = nodeOrder.length - 2; i > 0; i--) {\r\n                if (nodeOrder[i].type === 'end') {\r\n                    const endN = nodeOrder[i];\r\n                    nodeOrder.splice(i, 1);\r\n                    nodeOrder.push(endN);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        flw.nodes = nodeOrder;\r\n        flw.ordered = true;\r\n    }\r\n}\r\n","export { IFlowchart, canvasSize } from './flowchart.interface';\r\nexport { FlowchartUtils } from './flowchart.utils';\r\n","export { INode } from './node.interface';\r\nexport { NodeUtils } from './node.utils';\r\n","import { INode } from './node.interface';\r\nimport { ProcedureTypes, IFunction, IProcedure } from '@models/procedure';\r\nimport { InputType, PortUtils } from '@models/port';\r\nimport * as circularJSON from 'circular-json';\r\nimport { IdGenerator } from '@utils';\r\nimport { ModuleList, ModuleDocList } from '@shared/decorators';\r\nimport { _parameterTypes } from '@modules';\r\n\r\nexport abstract class NodeUtils {\r\n\r\n    static getNewNode(): INode {\r\n        const node: INode = <INode>{\r\n            name: 'Node',\r\n            id: IdGenerator.getNodeID(),\r\n            position: {x: 0, y: 0},\r\n            enabled: false,\r\n            type: '',\r\n            procedure: [{type: 13, ID: '',\r\n                parent: undefined,\r\n                meta: {name: '', module: ''},\r\n                variable: undefined,\r\n                children: undefined,\r\n                argCount: 0,\r\n                args: [],\r\n                print: false,\r\n                enabled: true,\r\n                selected: false,\r\n                selectGeom: false,\r\n                hasError: false}],\r\n            state: {\r\n                procedure: [],\r\n                input_port: undefined,\r\n                output_port: undefined\r\n            },\r\n            input: PortUtils.getNewInput(),\r\n            output: PortUtils.getNewOutput()\r\n        };\r\n        node.input.parentNode = node;\r\n        node.output.parentNode = node;\r\n\r\n        return node;\r\n    }\r\n\r\n    static getStartNode(): INode {\r\n        const node = NodeUtils.getNewNode();\r\n        // node.procedure = [];\r\n        node.enabled = true;\r\n        node.name = 'Start';\r\n        node.type = 'start';\r\n        return node;\r\n    }\r\n\r\n    static getEndNode(): INode {\r\n        const node = NodeUtils.getNewNode();\r\n        const returnMeta = _parameterTypes.return.split('.');\r\n        let check = false;\r\n        for (const i of ModuleList) {\r\n            if (i.module !== returnMeta[0]) { continue; }\r\n            for ( const j of i.functions) {\r\n                if (j.name !== returnMeta[1]) { continue; }\r\n                const newReturn = {type: 11, ID: '',\r\n                parent: undefined,\r\n                meta: {name: '', module: ''},\r\n                children: undefined,\r\n                variable: undefined,\r\n                argCount: j.argCount,\r\n                args: j.args,\r\n                print: false,\r\n                enabled: true,\r\n                selected: false,\r\n                selectGeom: false,\r\n                hasError: false};\r\n                for (const arg of newReturn.args) {\r\n                    arg.value = '';\r\n                }\r\n                node.procedure.push(newReturn);\r\n                check = true;\r\n                break;\r\n            }\r\n            break;\r\n        }\r\n        if (!check) {\r\n            console.log('CORE FUNCTION ERROR: Unable to retrieve return procedure, please check \"Return\" in _ParameterTypes.ts');\r\n        }\r\n        // node.procedure = [];\r\n        node.name = 'End';\r\n        node.type = 'end';\r\n        return node;\r\n    }\r\n\r\n\r\n    static deselect_procedure(node: INode) {\r\n        for (const prod of node.state.procedure) {\r\n            prod.selected = false;\r\n        }\r\n        node.state.procedure = [];\r\n    }\r\n\r\n\r\n    static rearrangeProcedures(prodList: IProcedure[], tempList: IProcedure[], prods: IProcedure[]) {\r\n        for (const pr of prods) {\r\n            let i = 0;\r\n            while (i < tempList.length) {\r\n                if (tempList[i].ID === pr.ID) {\r\n                    prodList.push(pr);\r\n                    tempList.splice(i, 1);\r\n                    break;\r\n                }\r\n                i += 1;\r\n            }\r\n            if (pr.children) { NodeUtils.rearrangeProcedures(prodList, tempList, pr.children); }\r\n        }\r\n    }\r\n\r\n    static select_procedure(node: INode, procedure: IProcedure, ctrl: boolean, shift: boolean) {\r\n        if (!procedure) {\r\n            return;\r\n        }\r\n        if (ctrl) {\r\n            let selIndex = 0;\r\n            let selected = false;\r\n            while (selIndex < node.state.procedure.length) {\r\n                if (node.state.procedure[selIndex] === procedure) {\r\n                    selected = true;\r\n                    node.state.procedure.splice(selIndex, 1);\r\n                    procedure.selected = false;\r\n                    return false;\r\n                }\r\n                selIndex += 1;\r\n            }\r\n            if (!selected) {\r\n                procedure.selected = true;\r\n                node.state.procedure.push(procedure);\r\n            }\r\n        } else if (shift) {\r\n            // fromProd: the last selected procedure\r\n            let fromProd = node.state.procedure[node.state.procedure.length - 1];\r\n            // find the whole path to the fromProd from the base level\r\n            const fromTree = [fromProd];\r\n            while (fromProd.parent) {\r\n                fromProd = fromProd.parent;\r\n                fromTree.unshift(fromProd);\r\n            }\r\n            // toProd: the procedure that was shift + clicked on\r\n            let toProd = procedure;\r\n            // find the whole path to the toProd from the base level\r\n            const toTree = [procedure];\r\n            while (toProd.parent) {\r\n                toProd = toProd.parent;\r\n                toTree.unshift(toProd);\r\n            }\r\n\r\n            // removing the common parents in the fromProd-toProd path\r\n            // env would be the list of procedure containing the first different parents between fromProd and toProd\r\n            let env = node.procedure;\r\n            while (fromTree[0] === toTree[0]) {\r\n                env = fromTree[0].children;\r\n                fromTree.splice(0, 1);\r\n                toTree.splice(0, 1);\r\n            }\r\n\r\n            // find the indices of the first different parents of fromProd and toProd\r\n            const fromIndex = env.indexOf(fromTree[0]);\r\n            const toIndex = env.indexOf(toTree[0]);\r\n\r\n            // check the direction from fromProd to toProd\r\n            // reverse = false: fromProd is above toProd\r\n            // reverse = true : fromProd is below toProd\r\n            const reverse = fromIndex < toIndex ? false : true;\r\n\r\n            // add the procedures between fromProd and toProd that are inside the fromTree\r\n            while (fromTree.length > 1) {\r\n                fromProd = fromTree.pop();\r\n                const prodList = fromProd.parent.children;\r\n                if (!reverse) {\r\n                    // add procedure from the fromProcedure to the end, not inclusive of the fromProcedure\r\n                    // since it is already selected\r\n                    for (let i = prodList.indexOf(fromProd) + 1; i < prodList.length; i++) {\r\n                        prodList[i].selected = true;\r\n                        node.state.procedure.push(prodList[i]);\r\n                    }\r\n                } else {\r\n                    // add procedure from the fromProcedure to the beginning,\r\n                    // not inclusive of the fromProcedure since it is already selected.\r\n                    // stop adding procedure when at index 1,\r\n                    // procedure at index 0 is not added to the list since it is always a blank\r\n                    for (let i = prodList.indexOf(fromProd) - 1; i > 0; i--) {\r\n                        prodList[i].selected = true;\r\n                        node.state.procedure.push(prodList[i]);\r\n                    }\r\n                }\r\n            }\r\n\r\n            // add the procedure between the first different parents of the fromProd and toProd\r\n            if (!reverse) {\r\n                for (let i = fromIndex + 1; i < toIndex; i++) {\r\n                    env[i].selected = true;\r\n                    node.state.procedure.push(env[i]);\r\n                }\r\n            } else {\r\n                for (let i = fromIndex - 1; i > toIndex; i--) {\r\n                    env[i].selected = true;\r\n                    node.state.procedure.push(env[i]);\r\n                }\r\n            }\r\n\r\n            // add the procedures between fromProd and toProd that are inside the toTree\r\n            for (let ind = 1; ind < toTree.length; ind++) {\r\n                toProd = toTree[ind];\r\n                const prodList = toProd.parent.children;\r\n                if (!reverse) {\r\n\r\n                    // procedure at index 0 is not added to the list since it is always a blank\r\n                    for (let i = prodList.indexOf(toProd) - 1; i > 0; i--) {\r\n                        prodList[i].selected = true;\r\n                        node.state.procedure.push(prodList[i]);\r\n                    }\r\n                } else {\r\n                    for (let i = prodList.indexOf(toProd) + 1; i < prodList.length; i++) {\r\n                        prodList[i].selected = true;\r\n                        node.state.procedure.push(prodList[i]);\r\n                    }\r\n                }\r\n            }\r\n\r\n            // add the toProd itself\r\n            procedure.selected = true;\r\n            node.state.procedure.push(procedure);\r\n\r\n        } else {\r\n            const sel = procedure.selected;\r\n            for (const prod of node.state.procedure) {\r\n                prod.selected = false;\r\n            }\r\n            if (sel && node.state.procedure.length === 1 && node.state.procedure[node.state.procedure.length - 1] === procedure) {\r\n                node.state.procedure = [];\r\n            } else {\r\n                node.state.procedure = [procedure];\r\n                procedure.selected = true;\r\n            }\r\n        }\r\n    }\r\n\r\n    static insert_procedure(node: INode, prod: IProcedure) {\r\n        if (prod.type === ProcedureTypes.Constant) {\r\n            if (node.type !== 'start') { return; }\r\n            if (node.state.procedure[node.state.procedure.length - 1]) {\r\n                if (node.state.procedure[node.state.procedure.length - 1].type === ProcedureTypes.Constant) {\r\n                    for (const index in node.procedure) {\r\n                        if (node.procedure[index].selected) {\r\n                            node.procedure.splice(parseInt(index, 10) + 1, 0, prod);\r\n                            break;\r\n                        }\r\n                    }\r\n                } else {\r\n                    let addCheck = false;\r\n                    for (const index in node.procedure) {\r\n                        if (node.procedure[index].type === ProcedureTypes.Constant) {\r\n                            node.procedure.splice(parseInt(index, 10), 0, prod);\r\n                            addCheck = true;\r\n                            break;\r\n                        }\r\n                    }\r\n                    if (!addCheck) {\r\n                        node.procedure.push(prod);\r\n                    }\r\n                }\r\n            } else {\r\n                node.procedure.push(prod);\r\n            }\r\n            return;\r\n        }\r\n        const lastNode = node.state.procedure[node.state.procedure.length - 1];\r\n        if (lastNode &&\r\n            lastNode.type !== ProcedureTypes.Constant) {\r\n            let list: IProcedure[];\r\n            if (lastNode.parent) {\r\n                prod.parent = lastNode.parent;\r\n                list = prod.parent.children;\r\n            } else {\r\n                list = node.procedure;\r\n            }\r\n            for (const index in list) {\r\n                if (list[index].ID === lastNode.ID) {\r\n                    list.splice(parseInt(index, 10) + 1, 0, prod);\r\n                    break;\r\n                }\r\n            }\r\n\r\n        } else {\r\n            if (node.type === 'end') {\r\n                node.procedure.splice( node.procedure.length - 1, 0, prod);\r\n                return;\r\n            } else if (node.type === 'start') {\r\n                for (let i = 0; i < node.procedure.length; i++) {\r\n                    if (node.procedure[i].type === ProcedureTypes.Constant ) {\r\n                        node.procedure.splice( i, 0, prod);\r\n                        return;\r\n                    }\r\n                }\r\n                node.procedure.push(prod);\r\n                return;\r\n            }\r\n            node.procedure.push(prod);\r\n        }\r\n    }\r\n\r\n    static initiateChildren(prod) {\r\n        prod.children = [\r\n            {type: 13, ID: '',\r\n            parent: prod, meta: {name: '', module: ''},\r\n            children: undefined,\r\n            variable: undefined,\r\n            argCount: 0,\r\n            args: [],\r\n            print: false,\r\n            enabled: true,\r\n            selected: false,\r\n            selectGeom: false,\r\n            hasError: false}\r\n        ];\r\n    }\r\n    static add_procedure(node: INode, type: ProcedureTypes, data: any) {\r\n        const prod: IProcedure = <IProcedure>{};\r\n        prod.type = type;\r\n\r\n        NodeUtils.insert_procedure(node, prod);\r\n\r\n        // add ID to the procedure\r\n        prod.ID = IdGenerator.getProdID();\r\n        prod.enabled = true;\r\n        prod.print = false;\r\n\r\n\r\n        switch (prod.type) {\r\n            case ProcedureTypes.Variable:\r\n                prod.argCount = 2;\r\n                prod.args = [\r\n                    {name: 'var_name', value: undefined, default: undefined},\r\n                    {name: 'value', value: undefined, default: undefined} ];\r\n                break;\r\n\r\n            case ProcedureTypes.Foreach:\r\n                prod.argCount = 2;\r\n                prod.args = [ {name: 'item', value: undefined, default: undefined}, {name: 'list', value: undefined, default: []} ];\r\n                this.initiateChildren(prod);\r\n                break;\r\n\r\n            case ProcedureTypes.While:\r\n                prod.argCount = 1;\r\n                prod.args = [ {name: 'condition', value: undefined, default: undefined} ];\r\n                this.initiateChildren(prod);\r\n                break;\r\n\r\n            case ProcedureTypes.If:\r\n            case ProcedureTypes.Elseif:\r\n                prod.argCount = 1;\r\n                prod.args = [ {name: 'condition', value: undefined, default: undefined} ];\r\n                this.initiateChildren(prod);\r\n                break;\r\n\r\n            case ProcedureTypes.Else:\r\n                prod.argCount = 0;\r\n                prod.args = [];\r\n                this.initiateChildren(prod);\r\n                break;\r\n\r\n            case ProcedureTypes.Break:\r\n            case ProcedureTypes.Continue:\r\n                prod.argCount = 0;\r\n                break;\r\n\r\n            case ProcedureTypes.Constant:\r\n                prod.argCount = 2;\r\n                prod.meta = { module: 'Input', name: 'Constant', inputMode: data, description: ''};\r\n                prod.args = [\r\n                {name: 'const_name', value: undefined, default: 0},\r\n                {name: '__input__', value: undefined, default: 0} ];\r\n            break;\r\n\r\n            case ProcedureTypes.AddData:\r\n                prod.argCount = 2;\r\n                prod.meta = { module: 'Input', name: 'Constant', inputMode: InputType.SimpleInput, description: undefined};\r\n                prod.args = [\r\n                {name: 'const_name', value: undefined, default: 0},\r\n                {name: '__input__', value: undefined, default: 0} ];\r\n            break;\r\n\r\n            case ProcedureTypes.Comment:\r\n                prod.argCount = 1;\r\n                prod.args = [{name: 'comment', value: undefined, default: 0}];\r\n            break;\r\n\r\n\r\n            case ProcedureTypes.Return:\r\n                prod.meta = { module: 'Output', name: 'Return', description: undefined};\r\n                prod.argCount = 1;\r\n                prod.args = [ {name: 'index', value: undefined, default: 0} ];\r\n                break;\r\n\r\n            case ProcedureTypes.Function:\r\n                if (!data) { throw Error('No function data'); }\r\n\r\n                prod.meta = { module: data.module, name: data.name};\r\n                prod.argCount = data.argCount + 1;\r\n                let returnArg = {name: 'var_name', value: undefined, default: undefined};\r\n                if (!data.hasReturn) {\r\n                    returnArg = {name: '__none__', value: undefined, default: undefined};\r\n                }\r\n\r\n                prod.args = [ returnArg, ...data.args];\r\n                break;\r\n\r\n            case ProcedureTypes.Imported:\r\n                prod.meta = { module: data.module, name: data.name};\r\n                prod.argCount = data.argCount + 1;\r\n\r\n                let iReturnArg = {name: 'var_name', value: undefined, default: undefined};\r\n                if (!data.hasReturn) {\r\n                    iReturnArg = {name: '__none__', value: undefined, default: undefined};\r\n                }\r\n\r\n                prod.args = [ iReturnArg, ...data.args];\r\n                break;\r\n        }\r\n        // select the procedure\r\n        if (prod.children) {\r\n            NodeUtils.select_procedure(node, prod.children[0], false, false);\r\n        } else {\r\n            NodeUtils.select_procedure(node, prod, false, false);\r\n        }\r\n    }\r\n\r\n    static updateNode(newNode: INode, newPos): INode {\r\n        newNode.id = IdGenerator.getNodeID();\r\n        newNode.input = PortUtils.getNewInput();\r\n        newNode.output = PortUtils.getNewOutput();\r\n        newNode.input.parentNode = newNode;\r\n        newNode.output.parentNode = newNode;\r\n        newNode.position.x = newPos.x;\r\n        newNode.position.y = newPos.y;\r\n        return newNode;\r\n    }\r\n\r\n    static updateID(prod: IProcedure): any {\r\n        if (prod.hasOwnProperty('children')) {\r\n            prod.children.map((child: IProcedure) => {\r\n                NodeUtils.updateID(child);\r\n            });\r\n        }\r\n        prod.ID = IdGenerator.getProdID();\r\n        NodeUtils.resetSelectGeom(prod);\r\n        return prod;\r\n    }\r\n\r\n    static resetSelectGeom(prod: IProcedure) {\r\n        prod.selectGeom = false;\r\n        if (prod.children) {\r\n            for (const chl of prod.children) {\r\n                NodeUtils.resetSelectGeom(chl);\r\n            }\r\n        }\r\n    }\r\n\r\n    static paste_procedure(node: INode, prod: IProcedure ) {\r\n        const newProd = NodeUtils.updateID(circularJSON.parse(circularJSON.stringify(prod)));\r\n        newProd.parent = undefined;\r\n        NodeUtils.insert_procedure(node, newProd);\r\n        NodeUtils.select_procedure(node, newProd, false, false);\r\n    }\r\n\r\n}\r\n","export { IPortInput, IPortOutput } from './port.interface';\r\nexport * from './types';\r\nexport { PortUtils } from './port.utils';\r\n","import { IPortOutput, IPortInput } from './port.interface';\r\nimport { PortType, OutputType, InputType } from './types';\r\nimport { IdGenerator } from '@shared/utils';\r\n\r\nexport class PortUtils {\r\n\r\n    static getNewInput(): IPortInput {\r\n        const inp: IPortInput = <IPortInput>{\r\n            name: 'input',\r\n            type: PortType.Input,\r\n            value: undefined,\r\n            default: undefined,\r\n            edges: [],\r\n            meta: {\r\n                mode: InputType.SimpleInput,\r\n                opts: {}\r\n            }\r\n        };\r\n\r\n        return inp;\r\n    }\r\n\r\n    static getNewOutput(): IPortOutput {\r\n        const oup: IPortOutput = <IPortOutput>{\r\n            name: 'output',\r\n            type: PortType.Output,\r\n            edges: [],\r\n            meta: {\r\n                mode: OutputType.Text,\r\n            }\r\n        };\r\n        return oup;\r\n    }\r\n\r\n}\r\n","export enum PortType {\r\n    Input,\r\n    Output\r\n}\r\n\r\nexport enum InputType {\r\n    SimpleInput,\r\n    Slider,\r\n    Checkbox,\r\n    URL,\r\n    File,\r\n    Constant\r\n}\r\n\r\nexport enum OutputType {\r\n    Text,\r\n    Code\r\n}\r\n","export { IProcedure, IModule, IFunction } from './procedure.interface';\r\nexport { ProcedureTypes } from './types';\r\n","export enum ProcedureTypes {\r\n    Variable,   // 0\r\n    If,         // 1\r\n    Elseif,     // 2\r\n    Else,       // 3\r\n    Foreach,    // 4\r\n    While,      // 5\r\n    Break,      // 6\r\n    Continue,   // 7\r\n\r\n    Function,   // 8\r\n    Imported,   // 9\r\n\r\n    Constant,   // 10\r\n    Return,     // 11\r\n\r\n    AddData,    // 12\r\n    Blank,      // 13\r\n    Comment,    // 14\r\n}\r\n\r\n","import { inline_func } from '@assets/core/inline/inline';\r\nimport { IProcedure, ProcedureTypes } from '@models/procedure';\r\nimport { IArgument } from '@models/code';\r\nimport { INode } from '@models/node';\r\n\r\nenum strType {\r\n    NUM,\r\n    VAR,\r\n    STR,\r\n    OTHER\r\n}\r\n\r\nconst binaryOperators = new Set([   '+' , '+=' , '-=', '*' , '/' , '%'  , '<' , '<=',\r\n                                    '==', '===', '>' , '>=', '!=', '!==', '&&', '||']);\r\n\r\nconst postfixUnaryOperators = new Set(['++', '--']);\r\nconst prefixUnaryOperators = new Set(['-', '!']);\r\nconst allConstants = (<string[][]>inline_func[0][1]).map(constComp => constComp[0]);\r\n\r\nconst reservedWords = [\r\n    'abstract', 'arguments', 'await', 'boolean',\r\n    'break', 'byte', 'case', 'catch',\r\n    'char', 'class', 'const', 'continue',\r\n    'debugger', 'default', 'delete', 'do',\r\n    'double', 'else', 'enum', 'eval',\r\n    'export', 'extends', 'false', 'final',\r\n    'finally', 'float', 'for', 'function',\r\n    'goto', 'if', 'implements', 'import',\r\n    'in', 'instanceof', 'int', 'interface',\r\n    'let', 'long', 'native', 'new',\r\n    'null', 'package', 'private', 'protected',\r\n    'public', 'return', 'short', 'static',\r\n    'super', 'switch', 'synchronized', 'this',\r\n    'throw', 'throws', 'transient', 'true',\r\n    'try', 'typeof', 'var', 'void',\r\n    'volatile', 'while', 'with', 'yield',\r\n\r\n    'Array', 'Date', 'hasOwnProperty', 'Infinity',\r\n    'isFinite', 'isNaN', 'isPrototypeOf', 'length',\r\n    'Math', 'NaN', 'name', 'Number', 'Object',\r\n    'prototype', 'String', 'toString', 'undefined', 'valueOf'\r\n];\r\n\r\nconst mathFuncs = [];\r\nfor (const funcMod of inline_func) {\r\n    for (const func of funcMod[1]) {\r\n        mathFuncs.push(func[0].split('(')[0]);\r\n    }\r\n}\r\n\r\n\r\nlet globals = [];\r\n\r\nexport function updateGlobals(startNode: INode) {\r\n    globals = [];\r\n    for (let i = startNode.procedure.length - 1; i > -1; i-- ) {\r\n        const prod = startNode.procedure[i];\r\n        if (prod.type !== ProcedureTypes.Constant) { return; }\r\n        globals.push(prod.args[0].value);\r\n    }\r\n}\r\n\r\nexport function modifyVar(procedure: IProcedure, nodeProdList: IProcedure[]) {\r\n    if (!procedure.args[0].value) { return; }\r\n    procedure.args[0].value = modifyVarArg(procedure.args[0]);\r\n\r\n    const modifiedVar = parseVariable(procedure.args[0].value);\r\n    if (modifiedVar.error) {\r\n        procedure.args[0].invalidVar = modifiedVar.error;\r\n        return;\r\n    }\r\n    if (modifiedVar.declaredVar) {\r\n        procedure.variable = modifiedVar.declaredVar;\r\n    }\r\n    if (modifiedVar.usedVars) {\r\n        const result = checkValidVar(modifiedVar.usedVars, procedure, nodeProdList);\r\n        if (!result.error) {\r\n            procedure.args[0].usedVars = result.vars;\r\n        } else {\r\n            procedure.args[0].invalidVar = result.error;\r\n            return;\r\n        }\r\n    }\r\n    procedure.args[0].invalidVar = false;\r\n}\r\n\r\nexport function modifyVarArg(arg: IArgument) {\r\n    let str = arg.value.trim();\r\n    str = str.replace(/ /g, '_');\r\n    str = str.toLowerCase();\r\n    if ((str.match(/\\[/g) || []).length !== (str.match(/\\]/g) || []).length) {\r\n        arg.invalidVar = true;\r\n        return str;\r\n    }\r\n    const strSplit = str.split(/[\\@\\[\\]]/g);\r\n    let teststr = str;\r\n    for (const i of strSplit) {\r\n        if (i === '') { continue; }\r\n        if (i === '0' || Number(i)) {\r\n            const sStr = `[${i}]`;\r\n            const ind = teststr.indexOf(sStr);\r\n            if (ind === -1) {\r\n                arg.invalidVar = true;\r\n                return str;\r\n            }\r\n            teststr = teststr.slice(0, ind) + teststr.slice(ind + sStr.length);\r\n            continue;\r\n        }\r\n        try {\r\n            if (i[0] === '_') {\r\n                arg.invalidVar = true;\r\n                return str;\r\n            }\r\n            for (const reserved of reservedWords) {\r\n                if (i === reserved) {\r\n                    arg.invalidVar = true;\r\n                    return str;\r\n                }\r\n            }\r\n            for (const funcName of mathFuncs) {\r\n                if (i === funcName) {\r\n                    arg.invalidVar = true;\r\n                    return str;\r\n                }\r\n            }\r\n            let currentWindow;\r\n            if (window.hasOwnProperty(i)) {\r\n                currentWindow = window[i];\r\n            }\r\n            const fn = new Function('', `${i}=1;`);\r\n            fn();\r\n            delete window[i];\r\n            if (currentWindow) {\r\n                window[i] = currentWindow;\r\n            }\r\n\r\n            arg.invalidVar = false;\r\n        } catch (ex) {\r\n            arg.invalidVar = true;\r\n            return str;\r\n        }\r\n    }\r\n    return str;\r\n}\r\n\r\nexport function modifyArgument(procedure: IProcedure, argIndex: number, nodeProdList: IProcedure[]) {\r\n    if (!procedure.args[argIndex].value) { return; }\r\n    // PARSER CALL\r\n    let varResult = parseArgument(procedure.args[argIndex].value);\r\n    if (varResult.error) {\r\n        procedure.args[argIndex].invalidVar = varResult.error;\r\n        return;\r\n    }\r\n    varResult = checkValidVar(varResult.vars, procedure, nodeProdList);\r\n    if (!varResult.error) {\r\n        procedure.args[argIndex].usedVars = varResult.vars;\r\n        procedure.args[argIndex].invalidVar = false;\r\n    } else {\r\n        procedure.args[argIndex].invalidVar = varResult.error;\r\n    }\r\n\r\n    // REGEX CALL\r\n    const vals = procedure.args[argIndex].value.split('\"');\r\n    let result = '';\r\n    let startOnEven = true;\r\n    for (let i = 0; i < vals.length; i += 2) {\r\n        if (i > 0) {\r\n            if (startOnEven) {\r\n                result += ' \"' + vals[i - 1] + '\" ';\r\n            } else {\r\n                result += '\"' + vals[i - 1] + '\"';\r\n            }\r\n        }\r\n        const valSplit = vals[i].split(`'`);\r\n        for (let j = startOnEven ? 0 : 1; j < valSplit.length; j += 2) {\r\n            if (j === 1) {\r\n                result += valSplit[0] + `' `;\r\n            } else if (j > 1) {\r\n                result += ` '` + valSplit[j - 1] + `' `;\r\n            }\r\n            result += valSplit[j].replace(\r\n                /\\s*([\\[\\]])\\s*/g, '$1').replace(\r\n                /([\\+\\-\\*\\/\\%\\{\\}\\(\\)\\,\\<\\>\\=\\!])/g, ' $1 ')\r\n                .replace(/([\\<\\>\\=\\!])\\s+=/g, '$1=')\r\n                .trim().replace(/\\s{2,}/g, ' ');\r\n            if (j === valSplit.length - 2 ) {\r\n                result += ` '` + valSplit[j + 1];\r\n            }\r\n        }\r\n        if (valSplit.length % 2 === 0) {\r\n            startOnEven = !startOnEven;\r\n        }\r\n\r\n        if (i === vals.length - 2 ) {\r\n            result += ' \"' + vals[i + 1] + '\" ';\r\n        }\r\n    }\r\n    procedure.args[argIndex].value = result.trim();\r\n}\r\n\r\n\r\nexport function parseVariable(value: string): {'error'?: string, 'declaredVar'?: string, 'usedVars'?: string[]} {\r\n    let str = value.trim();\r\n    // str = str.replace(/ /g, '_');\r\n    str = str.toLowerCase();\r\n    const comps = splitComponents(str);\r\n    if (typeof comps === 'string') {\r\n        return {'error': comps};\r\n    }\r\n    if (comps[0].value === '@') {\r\n        if (comps[1].type !== strType.VAR) {\r\n            return {'error': 'Error: Expect attribute name after @'};\r\n        }\r\n        return {};\r\n    }\r\n    if (comps[0].type !== strType.VAR) {\r\n        return {'error': `Error: Expect a Variable at the start of the input`};\r\n    }\r\n    if (comps.length === 1) {\r\n        return {'declaredVar': comps[0].value};\r\n    }\r\n\r\n    if (comps[1].value === '[') {\r\n        if (comps[comps.length - 1].value !== ']') {\r\n            return {'error': `Error: Expect ']' at the end of the input`};\r\n        }\r\n        let i = 1;\r\n        const openBrackets = [0, 0, 0]; // [roundBracketCount, squareBracketCount, curlyBracketCount]\r\n        const vars: string[] = [];\r\n        while (i < comps.length) {\r\n            const check = analyzeComponent(comps, i, openBrackets, vars);\r\n            if (check.error) {\r\n                return check;\r\n            }\r\n            i = check.value;\r\n        }\r\n        addVars(vars, comps[0].value);\r\n        return {'usedVars': vars};\r\n    }\r\n    if (comps[1].value === '@') {\r\n        if (comps[2].type !== strType.VAR) {\r\n            return {'error': 'Error: Expect attribute name after @'};\r\n        }\r\n        return {'usedVars': [comps[0].value]};\r\n    }\r\n    if (comps[1].value === '.') {\r\n        if (comps[2].type !== strType.VAR) {\r\n            return {'error': 'Error: Expect attribute name after .'};\r\n        }\r\n        return {'usedVars': [comps[0].value]};\r\n    }\r\n}\r\n\r\nexport function parseArgument(str: string): {'error'?: string, 'vars'?: string[]} {\r\n    const comps = splitComponents(str);\r\n    if (typeof comps === 'string') {\r\n        return {'error': comps};\r\n    }\r\n    let i = 0;\r\n    const openBrackets = [0, 0, 0]; // [roundBracketCount, squareBracketCount, curlyBracketCount]\r\n    const vars: string[] = [];\r\n    while (i < comps.length) {\r\n        const check = analyzeComponent(comps, i, openBrackets, vars);\r\n        if (check.error) {\r\n            return check;\r\n        }\r\n        i = check.value;\r\n    }\r\n    if (openBrackets[0] > 0) {\r\n        return { 'error': `Error: Mismatching number of round brackets: ${openBrackets[0]} extra open brackets \"(\"`};\r\n\r\n    } else if (openBrackets[0] < 0) {\r\n        return { 'error': `Error: Mismatching number of round brackets: ${0 - openBrackets[0]} extra closing brackets \")\"`};\r\n\r\n    }\r\n    if (openBrackets[1] > 0) {\r\n        return { 'error': `Error: Mismatching number of square brackets: ${openBrackets[1]} extra open brackets \"[\"`};\r\n\r\n    } else if (openBrackets[1] < 0) {\r\n        return { 'error': `Error: Mismatching number of square brackets: ${0 - openBrackets[1]} extra closing brackets \"]\"`};\r\n\r\n    }\r\n    if (openBrackets[2] > 0) {\r\n        return { 'error': `Error: Mismatching number of curly brackets: ${openBrackets[2]} extra open brackets \"{\"`};\r\n\r\n    } else if (openBrackets[2] < 0) {\r\n        return { 'error': `Error: Mismatching number of curly brackets: ${0 - openBrackets[2]} extra closing brackets \"}\"`};\r\n\r\n    }\r\n    return {'vars': vars};\r\n}\r\n\r\n\r\n\r\nfunction analyzeComponent(comps: {'type': strType, 'value': string}[], i: number,\r\n                          openBrackets: number[], vars: string[]): {'error'?: string, 'value'?: number} {\r\n    const comp = comps[i];\r\n    if (comp.type === strType.VAR) {\r\n        return checkVariable(comps, i, openBrackets, vars);\r\n    } else if (comp.type !== strType.OTHER) {\r\n        return checkNumStr(comps, i, openBrackets);\r\n    } else {\r\n        if (comp.value === '(') {\r\n            openBrackets[0] += 1;\r\n            if (!comps[i + 1] || (!isParameter(comps[i + 1]) && comps[i + 1].value !== ')')) {\r\n                return { 'error': `Error: Expect expression, string, number or variable after \"(\" \\n` +\r\n                            `at: ... ${comps.slice(i).map(cp => cp.value).join(' ')}`};\r\n\r\n            }\r\n        } else if (comp.value === '[') {\r\n            openBrackets[1] += 1;\r\n            if (!comps[i + 1] || (!isParameter(comps[i + 1]) && comps[i + 1].value !== ']')) {\r\n                return { 'error': `Error: Expect expression, string, number or variable after \"[\" \\n` +\r\n                            `at: ... ${comps.slice(i).map(cp => cp.value).join(' ')}`};\r\n\r\n            }\r\n        } else if (comp.value === '{') {\r\n            openBrackets[2] += 1;\r\n            if (!comps[i + 1] || (!isParameter(comps[i + 1]) && comps[i + 1].value !== '}')) {\r\n                return { 'error': `Error: Expect expression, string, number or variable after \"{\" \\n` +\r\n                            `at: ... ${comps.slice(i).map(cp => cp.value).join(' ')}`};\r\n\r\n            }\r\n        } else if (comp.value === ')') {\r\n            openBrackets[0] -= 1;\r\n        } else if (comp.value === ']') {\r\n            openBrackets[1] -= 1;\r\n        } else if (comp.value === '}') {\r\n            openBrackets[2] -= 1;\r\n        } else if (comp.value === '@') {\r\n            if (comps[i + 1].type !== strType.OTHER) {\r\n                i++;\r\n            } else {\r\n                return { 'error': 'Error: Expect attribute name after @ \\n' +\r\n                `at: ... ${comps.slice(i).map(cp => cp.value).join(' ')}`};\r\n\r\n            }\r\n        } else if (postfixUnaryOperators.has(comp.value)) {\r\n            if (!isParameter(comps[i - 1], true)) {\r\n                return { 'error': `Error: Expect expression, string, number or variable before operator ${comp.value} \\n` +\r\n                `at: ... ${comps.slice(i).map(cp => cp.value).join(' ')}`};\r\n\r\n            }\r\n        } else if (prefixUnaryOperators.has(comp.value)) {\r\n            if (i === comps.length - 1 || !isParameter(comps[i + 1])) {\r\n                return { 'error': `Error: Expect expression, string, number or variable before operator ${comp.value} \\n` +\r\n                `at: ... ${comps.slice(i).map(cp => cp.value).join(' ')}`};\r\n\r\n            }\r\n        } else if (binaryOperators.has(comp.value)) {\r\n            if (!isParameter(comps[i - 1], true)) {\r\n                return { 'error': `Error: Expect expression, string, number or variable before operator ${comp.value} \\n` +\r\n                `at: ... ${comps.slice(i).map(cp => cp.value).join(' ')}`};\r\n\r\n            }\r\n            if (i === comps.length - 1 || !isParameter(comps[i + 1])) {\r\n                return { 'error': `Error: Expect expression, string, number or variable before operator ${comp.value} \\n` +\r\n                `at: ... ${comps.slice(i).map(cp => cp.value).join(' ')}`};\r\n\r\n            }\r\n        }\r\n        i++;\r\n    }\r\n    return {'value': i};\r\n}\r\n\r\nfunction checkVariable(comps: {'type': strType, 'value': string}[], i: number,\r\n                       openBrackets: number[], vars: string[]): {'error'?: string, 'value'?: number} {\r\n    const comp = comps[i];\r\n    // if variable is the last component\r\n    // add the variable to the var list\r\n    if (i + 1 === comps.length) {\r\n        addVars(vars, comp.value);\r\n        i += 1;\r\n        return {'value': i};\r\n    }\r\n    // if variable is followed immediately by another var/num/str --> not allowed\r\n    if ( comps[i + 1].type !== strType.OTHER ) {\r\n        return { 'error': 'Error: Variable followed by another variable/number/string \\n' +\r\n        `at: ... ${comps.slice(i).map(cp => cp.value).join(' ')}`};\r\n\r\n    // if variable is followed by \"[\" --> array/json\r\n    // add the variable to var list and check for validity of the first component inside the bracket\r\n    } else if (comps[i + 1].value === '[') {\r\n        addVars(vars, comp.value);\r\n        openBrackets[1] += 1;\r\n        i += 2;\r\n        if (!isParameter(comps[i])) {\r\n            return { 'error': 'Error: Expect expression, string, number or variable after \"[\" \\n' +\r\n            `at: ... ${comps.slice(i - 2).map(cp => cp.value).join(' ')}`};\r\n        }\r\n\r\n    // if variable is followed by \"(\" --> function\r\n    // does not add to the var list since it's function name\r\n    } else if (comps[i + 1].value === '(') {\r\n        openBrackets[0] += 1;\r\n        i += 2;\r\n        if (comps[i].value === ')') {\r\n            i++;\r\n            openBrackets[0] -= 1;\r\n        } else if (!isParameter(comps[i])) {\r\n            return { 'error': 'Error: Expect expression, string, number, variable or \")\" after \"(\" \\n' +\r\n            `at: ... ${comps.slice(i - 2).map(cp => cp.value).join(' ')}`};\r\n        }\r\n\r\n    // if variable is followed by \"{\" --> not allowed\r\n    } else if (comps[i + 1].value === '{') {\r\n        return { 'error': 'Error: Variable followed by \"{\" \\n' +\r\n        `at: ... ${comps.slice(i).map(cp => cp.value).join(' ')}`};\r\n\r\n    // all other cases\r\n    } else {\r\n        addVars(vars, comp.value);\r\n        i += 1;\r\n    }\r\n    return {'value': i};\r\n}\r\n\r\nfunction checkNumStr(comps: {'type': strType, 'value': string}[], i: number, openBrackets: number[]): {'error'?: string, 'value'?: number} {\r\n    const comp = comps[i];\r\n\r\n    // if num/str is the last component --> return\r\n    if (i + 1 === comps.length) {\r\n        i += 1;\r\n        return {'value': i};\r\n    }\r\n    // if num/str is followed by another var/num/str --> not allowed\r\n    if ( comps[i + 1].type !== strType.OTHER ) {\r\n        return { 'error': 'Error: number/string followed by another variable/number/string \\n' +\r\n        `at: ... ${comps.slice(i).map(cp => cp.value).join(' ')}`};\r\n\r\n    // if num/str is followed by \"(\" or \"{\" --> not allowed\r\n    } else if (comps[i + 1].value === '(' || comps[i + 1].value === '{') {\r\n        return { 'error': 'Error: number/string followed by bracket \\n' +\r\n        `at: ... ${comps.slice(i).map(cp => cp.value).join(' ')}`};\r\n\r\n    // if num/str is followed by \"[\" --> only allowed for str\r\n    } else if (comps[i + 1].value === '[') {\r\n        if (comp.type === strType.NUM) {\r\n            return { 'error': 'Error: number/string followed by bracket \\n' +\r\n            `at: ... ${comps.slice(i).map(cp => cp.value).join(' ')}`};\r\n        }\r\n        openBrackets[1] += 1;\r\n        i += 2;\r\n        if (!isParameter(comps[i])) {\r\n            return { 'error': 'Error: Expect expression, string, number or variable after [ \\n' +\r\n            `at: ... ${comps.slice(i - 2).map(cp => cp.value).join(' ')}`};\r\n        }\r\n    // all other cases\r\n    } else {\r\n        i += 1;\r\n    }\r\n    return {'value': i};\r\n}\r\n\r\nfunction isParameter(comp: {'type': strType, 'value': string}, prev: boolean = false): boolean {\r\n    if (prev) { return comp.type !== strType.OTHER || comp.value === ')' || comp.value === ']' || comp.value === '}'; }\r\n    return comp.type !== strType.OTHER || comp.value === '(' || comp.value === '[' || comp.value === '{' || comp.value === '-';\r\n}\r\n\r\nfunction addVars(varList: string[], varName: string) {\r\n    if (allConstants.indexOf(varName) !== -1) { return; }\r\n    if (reservedWords.indexOf(varName) !== -1) { return; }\r\n    if (varList.indexOf(varName) === -1) {\r\n        varList.push(varName);\r\n    }\r\n}\r\n\r\nfunction splitComponents(str: string): {'type': strType, 'value': string}[] | string {\r\n    const comps = [];\r\n    let i = 0;\r\n    while (i < str.length) {\r\n        let code = str.charCodeAt(i);\r\n\r\n        // numeric (0-9) ==> number\r\n        if (code > 47 && code < 58) {\r\n            const startI = i;\r\n            while (code > 47 && code < 58) {\r\n                i ++;\r\n                if (i === str.length) { break; }\r\n                code = str.charCodeAt(i);\r\n            }\r\n            comps.push({'type': strType.NUM, 'value': str.substring(startI, i)});\r\n\r\n        // upper alpha (A-Z) & lower alpha (a-z) ==> variable\r\n        } else if ((code > 64 && code < 91) || (code > 96 && code < 123)) {\r\n            const startI = i;\r\n            // upper alpha (A-Z), lower alpha (a-z), numeric (0-9) and \"_\" are allowed for subsequent characters.\r\n            while ((code > 64 && code < 91) || (code > 96 && code < 123) || (code > 47 && code < 58) || code === 95) {\r\n                i += 1;\r\n                if (i === str.length) { break; }\r\n                code = str.charCodeAt(i);\r\n            }\r\n            comps.push({ 'type': strType.VAR, 'value': str.substring(startI, i)});\r\n\r\n        // double-quotes (\")\r\n        } else if (code === 34) {\r\n            const startI = i;\r\n            i += 1;\r\n            code = str.charCodeAt(i);\r\n            while (code !== 34) { // string must end with double-quote as well\r\n                i += 1;\r\n                if (i === str.length) { break; }\r\n                code = str.charCodeAt(i);\r\n            }\r\n            if (code === 34) { i += 1; }\r\n            const subStr = str.substring(startI, i);\r\n            if (subStr.charCodeAt(subStr.length - 1) !== 34) {\r\n                return 'Error: Missing ending double-quotes.';\r\n            }\r\n            comps.push({ 'type': strType.STR, 'value': str.substring(startI, i)});\r\n\r\n        // single-quote (')\r\n        } else if ( code === 39) {\r\n            const startI = i;\r\n            i += 1;\r\n            code = str.charCodeAt(i);\r\n            while (code !== 39) { // string must end with single-quote as well\r\n                i += 1;\r\n                if (i === str.length) { break; }\r\n                code = str.charCodeAt(i);\r\n            }\r\n            if (code === 39) { i += 1; }\r\n            const subStr = str.substring(startI, i);\r\n            if (subStr.charCodeAt(subStr.length - 1) !== 39) {\r\n                return 'Error: Missing ending single-quotes.';\r\n            }\r\n            comps.push({ 'type': strType.STR, 'value': str.substring(startI, i)});\r\n\r\n        // + sign or - sign ==> + / ++ / += / - / -- / -=\r\n        } else if ( code === 43 || code === 45) {\r\n            if (str.charCodeAt(i + 1) === code || str.charCodeAt(i + 1) === 61) {\r\n                comps.push({ 'type': strType.OTHER, 'value': str.substring(i, i + 2)});\r\n                i += 2;\r\n            } else {\r\n                comps.push({ 'type': strType.OTHER, 'value': str.charAt(i)});\r\n                i++;\r\n            }\r\n\r\n        // comparison operator (!, <, =, >)\r\n        } else if (code === 33 || (code > 59 && code < 63)) {\r\n            const startI = i;\r\n            i++;\r\n            if (str.charCodeAt(i) === 61) { // !=, <=, >=, ==\r\n                i++;\r\n                if (str.charCodeAt(i) === 61) { // !==, ===\r\n                    if (code === 60 || code === 62) { // mark invalid for <== and >==\r\n                        return 'Error: <== and >== not acceptable.';\r\n                    }\r\n                    i++;\r\n                }\r\n            }\r\n            comps.push({ 'type': strType.OTHER, 'value': str.substring(startI, i)});\r\n\r\n        // or operator (||); check 1st |\r\n        } else if (code === 124) {\r\n            i++;\r\n            if (str.charCodeAt(i) !== 124) { // check 2nd |\r\n                return 'Error: || expected.';\r\n            }\r\n            comps.push({ 'type': strType.OTHER, 'value': '||'});\r\n            i++;\r\n        } else if (code === 38) { // and operator (&&); check 1st &\r\n            i++;\r\n            if (str.charCodeAt(i) !== 38) { // check 2nd &\r\n                return 'Error: && expected.';\r\n            }\r\n            comps.push({ 'type': strType.OTHER, 'value': '&&'});\r\n            i++;\r\n\r\n        // others: numeric operator (*, /, %), brackets ((), [], {}), comma (,), space, ...\r\n        } else {\r\n            if (code !== 32) { // add to comp if it's not space\r\n                comps.push({ 'type': strType.OTHER, 'value': str.charAt(i)});\r\n            }\r\n            i++;\r\n        }\r\n    }\r\n    return comps;\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport function checkValidVar(vars: string[], procedure: IProcedure, nodeProdList: IProcedure[]): {'error'?: string, 'vars'?: string[]} {\r\n    let current = procedure;\r\n    const validVars = [];\r\n    for (const glb of globals) {\r\n        const i = vars.indexOf(glb);\r\n        if (i !== -1) {\r\n            validVars.push(vars.splice(i, 1)[0]);\r\n        }\r\n    }\r\n    while (current.parent) {\r\n        const prods = current.parent.children;\r\n        for (const prod of prods) {\r\n            if (prod.ID === current.ID) {\r\n                if (current.type !== ProcedureTypes.Foreach) {\r\n                    break;\r\n                } else {\r\n                    const i = vars.indexOf(prod.variable);\r\n                    if (i !== -1) {\r\n                        validVars.push(vars.splice(i, 1)[0]);\r\n                    }\r\n                    break;\r\n                }\r\n            }\r\n            if (!prod.variable || prod.type === ProcedureTypes.Foreach) { continue; }\r\n            const index = vars.indexOf(prod.variable);\r\n            if (index !== -1) {\r\n                validVars.push(vars.splice(index, 1)[0]);\r\n            }\r\n        }\r\n        current = current.parent;\r\n    }\r\n    if (vars.length === 0) {\r\n        return {'vars': validVars};\r\n    }\r\n    for (const prod of nodeProdList) {\r\n        if (prod.ID === current.ID) {\r\n            if (current.type !== ProcedureTypes.Foreach) {\r\n                break;\r\n            } else {\r\n                const i = vars.indexOf(prod.variable);\r\n                if (i !== -1) {\r\n                    validVars.push(vars.splice(i, 1)[0]);\r\n                }\r\n                break;\r\n            }\r\n        }\r\n        if (!prod.variable || prod.type === ProcedureTypes.Foreach) { continue; }\r\n        const index = vars.indexOf(prod.variable);\r\n        if (index !== -1) {\r\n            validVars.push(vars.splice(index, 1)[0]);\r\n        }\r\n    }\r\n    if (vars.length > 0) {\r\n        return { 'error': `Error: Invalid vars: ${vars.join(', ')}`};\r\n    }\r\n    return {'vars': validVars};\r\n}\r\n\r\nexport function checkNodeValidity(node: INode) {\r\n    if (node.type === 'start') {\r\n        updateGlobals(node);\r\n    }\r\n    checkProdListValidity(node.procedure, node.procedure);\r\n}\r\n\r\nfunction checkProdListValidity(prodList: IProcedure[], nodeProdList: IProcedure[]) {\r\n    for (const prod of prodList) {\r\n        switch (prod.type) {\r\n            case ProcedureTypes.Variable:\r\n            case ProcedureTypes.Foreach:\r\n                modifyVar(prod, nodeProdList);\r\n                modifyArgument(prod, 1, nodeProdList);\r\n                break;\r\n            case ProcedureTypes.Function:\r\n            case ProcedureTypes.Imported:\r\n                if (prod.args[0].name !== '__none__') {\r\n                    modifyVar(prod, nodeProdList);\r\n                }\r\n                for (let i = 1; i < prod.argCount; i++) {\r\n                    if (prod.args[i].name[0] === '_') { continue; }\r\n                    modifyArgument(prod, i, nodeProdList);\r\n                }\r\n                break;\r\n            case ProcedureTypes.If:\r\n            case ProcedureTypes.Elseif:\r\n            case ProcedureTypes.While:\r\n                modifyArgument(prod, 0, nodeProdList);\r\n                break;\r\n        }\r\n        for (const arg of prod.args) {\r\n            arg.linked = false;\r\n        }\r\n        if (prod.children) {\r\n            checkProdListValidity(prod.children, nodeProdList);\r\n        }\r\n    }\r\n}\r\n\r\nexport function updateInputValidity(type: 'add'|'remove', procedure: IProcedure, nodeProdList: IProcedure[]) {\r\n    let current = procedure;\r\n    while (current.parent) {\r\n        const prods = current.parent.children;\r\n        for (const prod of prods) {\r\n            if (prod.ID === current.ID) {\r\n                if (current.type !== ProcedureTypes.Foreach) {\r\n                    break;\r\n                } else {\r\n                    if (prod.variable !== procedure.variable) { break; }\r\n                    return;\r\n                }\r\n            }\r\n            if (!prod.variable || prod.type === ProcedureTypes.Foreach || prod.variable !== procedure.variable) { continue; }\r\n            return;\r\n        }\r\n        current = current.parent;\r\n    }\r\n    for (const prod of nodeProdList) {\r\n        if (prod.ID === current.ID) {\r\n            if (current.type !== ProcedureTypes.Foreach) {\r\n                break;\r\n            } else {\r\n                if (prod.variable !== procedure.variable) { break; }\r\n                return;\r\n            }\r\n        }\r\n        if (!prod.variable || prod.type === ProcedureTypes.Foreach || prod.variable !== procedure.variable) { continue; }\r\n        return;\r\n    }\r\n\r\n    if (type === 'add') {\r\n        if (procedure.parent) {\r\n            updateAdd(procedure.parent.children, procedure.variable, procedure);\r\n        } else {\r\n            updateAdd(nodeProdList, procedure.variable, procedure);\r\n        }\r\n    } else {\r\n        if (procedure.parent) {\r\n            updateRemove(procedure.parent.children, procedure.variable, procedure);\r\n        } else {\r\n            updateRemove(nodeProdList, procedure.variable, procedure);\r\n        }\r\n    }\r\n}\r\n\r\nfunction updateAdd(prodList: IProcedure[], varName: string, procedure?: IProcedure) {\r\n    for (let i = prodList.length - 1; i > 0; i--) {\r\n        if (procedure && procedure.ID === prodList[i].ID) { break; }\r\n        if (prodList[i].children) { updateAdd(prodList[i].children, varName); }\r\n        for (const arg of prodList[i].args) {\r\n            if (!arg.invalidVar) { continue; }\r\n            if (arg.invalidVar === `Error: Invalid vars: ${varName}`) {\r\n                arg.invalidVar = false;\r\n            } else if (typeof arg.invalidVar === 'string' && arg.invalidVar.indexOf('Invalid vars') !== -1) {\r\n                arg.invalidVar.replace(`${varName}\\s,`, '');\r\n                arg.invalidVar.replace(`, ${varName}`, '');\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nfunction updateRemove(prodList: IProcedure[], varName: string, procedure?: IProcedure) {\r\n    for (let i = prodList.length - 1; i > 0; i--) {\r\n        if (procedure && procedure.ID === prodList[i].ID) { break; }\r\n        if (prodList[i].children) { updateRemove(prodList[i].children, varName); }\r\n        for (const arg of prodList[i].args) {\r\n            if (arg.usedVars.indexOf(varName) === -1) { continue; }\r\n            if (!arg.invalidVar) {\r\n                arg.invalidVar = `Error: Invalid vars: ${varName}`;\r\n            } else if (typeof arg.invalidVar === 'string' && arg.invalidVar.indexOf('Invalid vars') !== -1) {\r\n                arg.invalidVar = arg.invalidVar.concat(`, ${varName}`);\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { IMobius } from '@models/mobius';\r\nimport { IFlowchart, FlowchartUtils } from '@models/flowchart';\r\nimport { INode } from '@models/node';\r\nimport { IProcedure } from '@models/procedure';\r\n\r\n@Injectable()\r\nexport class DataService {\r\n    private static _data: IMobius = {\r\n        name: 'Untitled',\r\n        author: 'new_user',\r\n        last_updated: new Date(),\r\n        version: 1,\r\n        flowchart: FlowchartUtils.newflowchart(),\r\n        settings: {}\r\n    };\r\n\r\n    private static _consoleLog: string[] = [];\r\n\r\n    private static _flowchartPosition: string = undefined;\r\n    private static _newFlowchart = true;\r\n\r\n    private static _modelOutputView = {};\r\n    private static _testModel = false;\r\n\r\n    private static _helpView = [false, false, undefined];\r\n    private static _helpViewData = [undefined, ''];\r\n\r\n    private static _activeModelView: string = undefined;\r\n    private static _activeGallery: any = undefined;\r\n\r\n    private static _focusedInput: any;\r\n\r\n    private static _splitVal = 60;\r\n    private static _flowchartSplitUpdate = false;\r\n\r\n    private static _copiedProd: IProcedure[];\r\n    private static _copiedType: IProcedure[];\r\n\r\n    private static _consoleScroll: number;\r\n\r\n    private _prevFlwActions = [];\r\n    private _nextFlwActions = [];\r\n\r\n    private _prevEdtActions = [];\r\n    private _nextEdtActions = [];\r\n\r\n    getLog(): string[] {\r\n        return DataService._consoleLog;\r\n    }\r\n\r\n    log(str: string) {\r\n        DataService._consoleLog.push(str);\r\n    }\r\n\r\n    clearLog() {\r\n        DataService._consoleLog = [];\r\n    }\r\n\r\n    spliceLog(remainingLogs: number) {\r\n        DataService._consoleLog.splice(0, DataService._consoleLog.length - remainingLogs);\r\n    }\r\n\r\n    get file() { return DataService._data; }\r\n    set file(data: IMobius) {\r\n        DataService._data = <IMobius>{\r\n            name: data.name,\r\n            author: data.author,\r\n            flowchart: data.flowchart,\r\n            last_updated: data.last_updated,\r\n            version: data.version,\r\n            settings: data.settings || {}\r\n        };\r\n    }\r\n    get settings() {return DataService._data.settings; }\r\n    set settings(settings: any) {DataService._data.settings = settings; }\r\n\r\n    get flowchartPos() {return DataService._flowchartPosition; }\r\n    set flowchartPos(transf: string) {DataService._flowchartPosition = transf; }\r\n\r\n    get newFlowchart() {return DataService._newFlowchart; }\r\n    set newFlowchart(check: boolean) {DataService._newFlowchart = check; }\r\n\r\n    getModelOutputView(nodeID: string) {\r\n        if (DataService._modelOutputView.hasOwnProperty(nodeID)) {\r\n            return DataService._modelOutputView[nodeID];\r\n        }\r\n        return true;\r\n    }\r\n    setModelOutputView(nodeID: string, check: boolean) {DataService._modelOutputView[nodeID] = check; }\r\n\r\n    get testModel() {return DataService._testModel; }\r\n    set testModel(check: boolean) {DataService._testModel = check; }\r\n\r\n    get activeView() {return DataService._activeModelView; }\r\n    set activeView(view: string) {DataService._activeModelView = view; }\r\n\r\n    get activeGallery() {return DataService._activeGallery; }\r\n    set activeGallery(gallery: any) {DataService._activeGallery = gallery; }\r\n\r\n    get helpView() {return DataService._helpView; }\r\n    set helpView(view: any) {DataService._helpView[2] = view; }\r\n    toggleHelp(state: boolean) { DataService._helpView[0] = state; DataService._helpView[1] = state; }\r\n    toggleViewHelp(state: boolean) { DataService._helpView[0] = state; }\r\n    togglePageHelp(state: boolean) { DataService._helpView[1] = state; }\r\n\r\n    get helpViewData() {return DataService._helpViewData; }\r\n    set helpViewData(view: any) {DataService._helpViewData = view; }\r\n\r\n    get focusedInput() {return DataService._focusedInput; }\r\n    set focusedInput(input: any) {DataService._focusedInput = input; }\r\n\r\n    get copiedProd() {return DataService._copiedProd; }\r\n    set copiedProd(prods: any) {DataService._copiedProd = prods; }\r\n\r\n    get copiedType() {return DataService._copiedType; }\r\n    set copiedType(Ptype: any) {DataService._copiedType = Ptype; }\r\n\r\n    get splitVal() {return DataService._splitVal; }\r\n    set splitVal(num: number) {DataService._splitVal = num; }\r\n\r\n    get splitUpdate() {return DataService._flowchartSplitUpdate; }\r\n    set splitUpdate(check: boolean) {DataService._flowchartSplitUpdate = check; }\r\n\r\n    get consoleScroll() {return DataService._consoleScroll; }\r\n    set consoleScroll(num: number) {DataService._consoleScroll = num; }\r\n\r\n    get flowchart(): IFlowchart { return DataService._data.flowchart; }\r\n    get node(): INode { return DataService._data.flowchart.nodes[DataService._data.flowchart.meta.selected_nodes[0]]; }\r\n\r\n\r\n    registerFlwAction(action) {\r\n        this._prevFlwActions.push(action);\r\n        this._nextFlwActions = [];\r\n        if (this._prevFlwActions.length > 10) {\r\n            this._prevFlwActions.splice(0, 1);\r\n        }\r\n    }\r\n\r\n    undoFlw() {\r\n        if (this._prevFlwActions.length === 0) {\r\n            return undefined;\r\n        }\r\n        const action = this._prevFlwActions.pop();\r\n        this._nextFlwActions.push(action);\r\n        return action;\r\n    }\r\n\r\n    redoFlw() {\r\n        if (this._nextFlwActions.length === 0) {\r\n            return undefined;\r\n        }\r\n        const action = this._nextFlwActions.pop();\r\n        this._prevFlwActions.push(action);\r\n        return action;\r\n    }\r\n\r\n\r\n\r\n    registerEdtAction(actions: any[]) {\r\n        this._prevEdtActions.push(actions);\r\n        this._nextEdtActions = [];\r\n        if (this._prevEdtActions.length > 10) {\r\n            this._prevEdtActions.splice(0, 1);\r\n        }\r\n    }\r\n\r\n    undoEdt() {\r\n        if (this._prevEdtActions.length === 0) {\r\n            return undefined;\r\n        }\r\n        const actions = this._prevEdtActions.pop();\r\n        this._nextEdtActions.push(actions);\r\n        return actions;\r\n    }\r\n\r\n    redoEdt() {\r\n        if (this._nextEdtActions.length === 0) {\r\n            return undefined;\r\n        }\r\n        const actions = this._nextEdtActions.pop();\r\n        this._prevEdtActions.push(actions);\r\n        return actions;\r\n    }\r\n\r\n\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Subscription } from 'rxjs/Subscription';\r\nimport { Router, NavigationEnd } from '@angular/router';\r\n\r\n// --- use a declare to allow the compiler find the ga function\r\ndeclare let ga: Function;\r\n\r\n// notes you may need to do this as well: npm install --save-dev @types/google.analytics\r\n@Injectable()\r\n\r\n\r\nexport class GoogleAnalyticsService {\r\n  private subscription: Subscription;\r\n\r\n  constructor(private router: Router) {  }\r\n\r\n\r\n  public subscribe() {\r\n    if (!this.subscription) {\r\n      // subscribe to any router navigation and once it ends, write out the google script notices\r\n      this.subscription = this.router.events.subscribe( e => {\r\n        if (e instanceof NavigationEnd) {\r\n          // this will find & use the ga function pulled via the google scripts\r\n          try {\r\n            ga('set', 'page', e.urlAfterRedirects);\r\n            ga('send', 'pageview');\r\n          } catch {\r\n             console.log('tracking not found - make sure you installed the scripts');\r\n          }\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  public unsubscribe() {\r\n    if (this.subscription) {\r\n      // --- clear our observable subscription\r\n      this.subscription.unsubscribe();\r\n    }\r\n  }\r\n\r\n  public trackEvent(category: string, label: string, action: string = 'click', value: number = null) {\r\n    try {\r\n      ga('send', 'event', { eventCategory: category, eventLabel: label,\r\n        eventAction: action, eventValue: value\r\n      });\r\n    } catch (error) {\r\n      console.log(`error: ${error}`);\r\n    }\r\n  }\r\n\r\n}\r\n","export * from './data.service';\r\nexport * from './viewer.service';\r\n","import { Injectable, ComponentFactoryResolver, Injector  } from '@angular/core';\r\nimport { Observable, Subject } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class ViewerService {\r\n    contextReceivedSource = new Subject<any>();\r\n    contextReceived$ = this.contextReceivedSource.asObservable();\r\n\r\n    receiveContext(componentFactoryResolver: ComponentFactoryResolver, injector: Injector) {\r\n        this.contextReceivedSource.next({ resolver: componentFactoryResolver, injector: injector });\r\n    }\r\n}\r\n","/*\r\n *  This module is to be imported ONLY by the AppModule\r\n *  Contains all global services\r\n *\r\n */\r\nimport { AngularSplitModule } from 'angular-split';\r\n// @angular stuff\r\nimport { NgModule, SkipSelf, Optional } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { MatSliderModule, MatCheckboxModule, MatIconModule } from '@angular/material';\r\n// app directives\r\nimport { MbFileReaderDirective } from './directives/filesys';\r\n// app components\r\nimport { ExecuteComponent } from './components/execute/execute.component';\r\nimport { PageNotFoundComponent } from './components/not-found/not-found.component';\r\nimport { NavigationComponent } from './components/navigation/navigation.component';\r\nimport { PanelHeaderComponent } from './components/header/panel-header.component';\r\nimport { PublishHeaderComponent } from './components/header/publish-header.component';\r\nimport { AddOutputComponent } from './components/add-components/add_output.component';\r\nimport { AddNodeComponent } from './components/add-components/add_node.component';\r\nimport { AddInputComponent } from './components/add-components/add_input.component';\r\n// import { ParameterViewerComponent } from './components/parameter-viewer/parameter-viewer.component';\r\n// import { InputPortViewerComponent } from './components/parameter-viewer/input-port-viewer/input-port-viewer.component';\r\n// import { ProcedureInputViewerComponent } from './components/parameter-viewer/procedure-input-viewer/procedure-input-viewer.component';\r\nimport { NewFileComponent, SaveFileComponent, LoadFileComponent } from './components/file';\r\nimport { NotificationComponent } from './components/notification/notification.component';\r\n// app model viewers\r\nimport { DataViewersContainer } from '../model-viewers/model-viewers-container.module';\r\nimport { LoadUrlComponent } from './components/file/loadurl.component';\r\nimport { SpinnerComponent } from './components/spinner/spinner.component';\r\nimport { ChromeComponent } from './components/chrome/chrome.component';\r\nimport { AutogrowDirective } from './directives/textarea';\r\nimport { ProcedureInputViewerComponent } from './components/parameter-viewer/procedure-input-viewer/procedure-input-viewer.component';\r\nimport { ParameterViewerComponent } from './components/parameter-viewer/parameter-viewer.component';\r\n\r\n@NgModule({\r\n    providers: [ ],\r\n    declarations: [\r\n            MbFileReaderDirective,\r\n            AutogrowDirective,\r\n            ExecuteComponent,\r\n            PageNotFoundComponent,\r\n            NavigationComponent,\r\n            PanelHeaderComponent,\r\n            PublishHeaderComponent,\r\n            NotificationComponent,\r\n            ProcedureInputViewerComponent,\r\n            ParameterViewerComponent,\r\n            AddNodeComponent, AddInputComponent, AddOutputComponent,\r\n            // ParameterViewerComponent,  InputPortViewerComponent, ProcedureInputViewerComponent,\r\n            NewFileComponent, SaveFileComponent, LoadFileComponent, LoadUrlComponent,\r\n            SpinnerComponent,\r\n            ChromeComponent\r\n        ],\r\n    imports: [\r\n            CommonModule,\r\n            RouterModule,\r\n            MatSliderModule, MatCheckboxModule,\r\n            DataViewersContainer,\r\n            AngularSplitModule,\r\n            FormsModule,\r\n            MatIconModule,\r\n            /*\r\n            MatMenuModule,\r\n            MatButtonModule,\r\n            MatExpansionModule,\r\n            MatSelectModule,\r\n            MatFormFieldModule,\r\n            */\r\n        ],\r\n    entryComponents: [  ],\r\n    exports: [\r\n            FormsModule,\r\n            MatIconModule,\r\n            MatSliderModule,\r\n            /*\r\n            MatMenuModule,\r\n            MatButtonModule,\r\n            MatExpansionModule,\r\n            MatSelectModule,\r\n            MatFormFieldModule,\r\n            */\r\n            DataViewersContainer,\r\n            AngularSplitModule,\r\n            MbFileReaderDirective,\r\n            AutogrowDirective,\r\n            ExecuteComponent,\r\n            PageNotFoundComponent,\r\n            NavigationComponent,\r\n            PanelHeaderComponent,\r\n            PublishHeaderComponent,\r\n            AddNodeComponent,\r\n            AddInputComponent,\r\n            AddOutputComponent,\r\n            SpinnerComponent,\r\n            ChromeComponent,\r\n            // ParameterViewerComponent,\r\n            NotificationComponent,\r\n            NewFileComponent, SaveFileComponent, LoadFileComponent, LoadUrlComponent,\r\n            ParameterViewerComponent\r\n    ]\r\n})\r\nexport class SharedModule {\r\n    constructor(@Optional() @SkipSelf() shared: SharedModule) {\r\n        /*\r\n        /// Prevents any module apart from AppModule from re-importing\r\n        if(shared){\r\n            throw new Error(\"Core Module has already been imported\");\r\n        }\r\n        */\r\n    }\r\n}\r\n","export abstract class IdGenerator {\r\n\r\n  private static s4(): string {\r\n      return Math.floor((1 + Math.random()) * 0x10000)\r\n        .toString(16)\r\n        .substring(1);\r\n  }\r\n\r\n  static getId(): string {\r\n    return this.s4() + this.s4() + '-' + this.s4() + '-' + this.s4() + '-' +\r\n      this.s4() + '-' + this.s4() + this.s4() + this.s4();\r\n  }\r\n\r\n  static getNodeID(): string {\r\n    return 'node_' + Math.random().toString(36).substr(2, 16);\r\n  }\r\n\r\n  static getProdID() {\r\n    return 'prod-' + Math.random().toString(36).substr(2, 16);\r\n  }\r\n}\r\n","export * from './GUID';\r\n","export * from './view-about/view-about.component';\r\nexport * from './view-about/view-about.module';\r\nexport * from './view-editor/view-editor.component';\r\nexport * from './view-editor/view-editor.module';\r\nexport * from './view-flowchart/view-flowchart.component';\r\nexport * from './view-flowchart/view-flowchart.module';\r\nexport * from './view-gallery/view-gallery.component';\r\nexport * from './view-gallery/view-gallery.module';\r\nexport * from './view-dashboard/view-dashboard.component';\r\nexport * from './view-dashboard/view-dashboard.module';\r\nexport * from './view-publish/view-publish.component';\r\nexport * from './view-publish/view-publish.module';\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { ViewAboutComponent } from './view-about.component';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        component: ViewAboutComponent,\r\n        children: [ ]\r\n    }\r\n];\r\n\r\n\r\n@NgModule({\r\n    imports: [ RouterModule.forChild(routes) ],\r\n    exports: [ RouterModule ]\r\n})\r\nexport class ViewAboutRoutingModule { }\r\n","module.exports = \"<div class='container'>\\r\\n    <panel-header [flowchart]='getFlowchart()'></panel-header>\\r\\n    <!-- viewchild content -->\\r\\n    <div class='content__panel'>\\r\\n        <div class='logo'>\\r\\n            <p><img  src=\\\"assets/logo/logo-120high.png\\\" alt=\\\"Möbius  Modeller\\\"></p>\\r\\n            <p><img  src=\\\"assets/logo/logo-120high.png\\\" alt=\\\"Möbius  Modeller\\\"></p>\\r\\n            <p><img  src=\\\"assets/logo/logo-120high.png\\\" alt=\\\"Möbius  Modeller\\\"></p>\\r\\n            <p>Version: {{version.version}}</p>\\r\\n            <p>\\r\\n                <a class='link-share' href=\\\"http://expando.github.io/add/?u=https%3A%2F%2Fmobius.design-automation.net%2F&t=Möbius%20Modeller\\\">\\r\\n                    Share this Site</a>\\r\\n            </p>\\r\\n            <p>The latest version has made some changes to the modelling functions. </p>\\r\\n            <p>The previous versions, \\r\\n                <a href='https://design-automation.github.io/mobius-parametric-modeller-0-4-18' target='_blank'>Version 0.4.18</a>\\r\\n                and \\r\\n                <a href='https://design-automation.github.io/mobius-parametric-modeller-0-4-11' target='_blank'>Version 0.4.11</a> \\r\\n                have therefore been archived.</p>\\r\\n\\r\\n        </div>\\r\\n        <div class='text'>\\r\\n            <h3>What is Möbius  Modeller?</h3>\\r\\n            <p>Möbius Modeller is an open-source web application for 3D parametric modelling. \\r\\n                The app allows users to create modelling procedures using the Öbi visual programming language.\\r\\n                In the Öbi language, your write computer programs by drawing flowcharts and by defining procedures\\r\\n                using 'click and fill-in-the-blanks' coding. </p>\\r\\n            <p>Since Möbius Modeller is a web app, you can just go ahead an use it.</p>\\r\\n            <ul>\\r\\n                <li>The software is free, so there is need to pay!</li>\\r\\n                <li>The software is online, so there is need to install anything on your computer.</li>\\r\\n                <li>The software does not require authentication, so there is no need to create an account or to log in.</li>\\r\\n                <li>Code is executed in your browser, so there is no need to worry about network speed.</li>\\r\\n                <li>Your data never leaves your browser, so there is no need to worry about data privacy and security.</li>\\r\\n            </ul>\\r\\n            <p>The Möbius models that you create can be \\r\\n                published as interactive web pages, allowing visitors on the web to explore the models.</p>\\r\\n    \\r\\n    \\r\\n            <h3>Getting Started</h3>\\r\\n            <p>The best way to start using Möbius Modeller is to explore some of the models in the gallery.\\r\\n                After that you can dive in and start creating your own flowcharts and procedures. </p>\\r\\n            <p>The icons at the top of the page allow you to navigate into your model, from the top level \\r\\n                dashboard down the procedures at the bottom level.</p>\\r\\n\\r\\n            <table class='key'>\\r\\n\\r\\n                <tr>\\r\\n                    <td><b>Gallery</b></td> \\r\\n                    <td>The gallery contains a selection of example models for you to explore. \\r\\n                    To access the gallery, click</td>\\r\\n                    <td><mat-icon (click)='routeTo(\\\"/gallery\\\")'>view_comfy</mat-icon></td> \\r\\n                </tr>\\r\\n\\r\\n                <tr>\\r\\n                    <td><b>Dashboard</b></td> \\r\\n                    <td>Each model has its own dashboard that exposes a set of parameters, that can be set using sliders and UI components.\\r\\n                    To access the dashboard, click</td>\\r\\n                    <td><mat-icon svgIcon=\\\"cDashboard\\\" (click)='routeTo(\\\"/dashboard\\\")'></mat-icon></td> \\r\\n                </tr>\\r\\n\\r\\n                <tr>\\r\\n                    <td><b>Flowchart</b></td> \\r\\n                    <td>Each model is has an Öbi flowchart that defines a set of nodes connected with edges. \\r\\n                        To access the flowchart, click</td>\\r\\n                    <td><mat-icon svgIcon=\\\"cFlowchart\\\" (click)='routeTo(\\\"/flowchart\\\")'></mat-icon></td> \\r\\n                </tr>\\r\\n\\r\\n                <tr>\\r\\n                    <td><b>Procedure</b></td> \\r\\n                    <td>Each node in the model has its own procedure, defined using the Öbi language.\\r\\n                        To access the procedure, click</td>\\r\\n                    <td><mat-icon svgIcon=\\\"cEditor\\\" (click)='routeTo(\\\"/editor\\\")'></mat-icon></td> \\r\\n                </tr>\\r\\n\\r\\n                <tr>\\r\\n                    <td><b>Execute</b></td> \\r\\n                    <td>To execute the Öbi flowchart, click the execute button. This will transpile your Öbi code \\r\\n                        into Javascript an execute it in your browser. </td>\\r\\n                    <td><mat-icon>play_circle_outline</mat-icon></td> \\r\\n                </tr>\\r\\n\\r\\n                <tr>\\r\\n                    <td><b>View</b></td> \\r\\n                    <td>To view the results, look at the model in the 3D viewer on the right. Also, you can check\\r\\n                        the console in case there were any errors.  </td>\\r\\n                    <td></td> \\r\\n                </tr>\\r\\n\\r\\n            </table>\\r\\n    \\r\\n            <h3>Links</h3>\\r\\n            <p>To understand more about Möbius Modeller and the Öbi language, read the online book.</p>\\r\\n            <ul>\\r\\n                <li><a href='https://mobius-book.design-automation.net'>Möbius Modeller Book</a></li>\\r\\n            </ul>\\r\\n            <p>For questions about how to use Möbius Modeller, please head over to the forum.</p>\\r\\n            <ul>\\r\\n                <li><a href='https://mobius-forum.design-automation.net'>Möbius Modeller Forum</a></li>\\r\\n            </ul>\\r\\n            <p>Möbius Modeller is open-source, under MIT license. The source-code is on GitHub.</p>\\r\\n            <ul>\\r\\n                <li><a href='https://github.com/design-automation/mobius-parametric-modeller'>Möbius Modeller source code</a></li>\\r\\n            </ul>\\r\\n            <p>If you like what we are doing, then do let us know on the forum.</p>\\r\\n            <p>If you would like to get involved, please contact us. We need your help!</p>\\r\\n    \\r\\n            <h3>Contact Us</h3>\\r\\n            <p>Möbius Modeller is being developed by the Design Automation Lab at the \\r\\n                National University of Singapore. .</p>\\r\\n            <ul>\\r\\n                <li><a href='http://design-automation.net'>Design Automation Lab</a></li>\\r\\n            </ul>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n<spinner></spinner>\\r\\n<chrome></chrome>\"","module.exports = \".container {\\n  display: block;\\n  height: 100%; }\\n\\n.content__panel {\\n  margin-top: 1px;\\n  margin-left: 11px;\\n  height: calc(100% - 41px);\\n  overflow: auto; }\\n\\n.content__panel .logo {\\n    float: right;\\n    margin-right: 50px; }\\n\\n.content__panel .text {\\n    max-width: 600px; }\\n\\n.content__panel .key {\\n    margin-left: 25px; }\\n\\n.content__panel .key td {\\n      padding: 10px; }\\n\\nh3 {\\n  line-height: 30px;\\n  height: 30px;\\n  color: #373737; }\\n\\np, li, td {\\n  color: #373737;\\n  text-align: left;\\n  margin-bottom: 14px;\\n  font-size: 12px;\\n  line-height: 14px; }\\n\\nmat-icon {\\n  color: #808080;\\n  margin: 0px;\\n  padding: 0px;\\n  cursor: pointer; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdmlld3Mvdmlldy1hYm91dC9DOlxcRHJvcGJveFxcRmlsZXNcXFNvZnR3YXJlXFxHaXRIdWJcXGRlc2lnbi1hdXRvbWF0aW9uXFxtb2JpdXMtcGFyYW1ldHJpYy1tb2RlbGxlci9zcmNcXGFwcFxcdmlld3NcXHZpZXctYWJvdXRcXHZpZXctYWJvdXQuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL3ZpZXdzL3ZpZXctYWJvdXQvQzpcXERyb3Bib3hcXEZpbGVzXFxTb2Z0d2FyZVxcR2l0SHViXFxkZXNpZ24tYXV0b21hdGlvblxcbW9iaXVzLXBhcmFtZXRyaWMtbW9kZWxsZXIvc3JjXFxzY3NzXFxjb2xvcnMuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFHQTtFQUNJLGNBQWM7RUFDZCxZQUFZLEVBQUE7O0FBRWhCO0VBQ0ksZUFBZTtFQUNmLGlCQUFpQjtFQUVqQix5QkFBeUI7RUFDekIsY0FBYyxFQUFBOztBQUxsQjtJQVFRLFlBQVk7SUFDWixrQkFBa0IsRUFBQTs7QUFUMUI7SUFZUSxnQkFBZ0IsRUFBQTs7QUFaeEI7SUFlUSxpQkFBaUIsRUFBQTs7QUFmekI7TUFpQlksYUFBYSxFQUFBOztBQUt6QjtFQUNJLGlCQUFpQjtFQUNqQixZQUFZO0VBQ1osY0N0QlksRUFBQTs7QUR5QmhCO0VBQ0ksY0MxQlk7RUQyQlosZ0JBQWdCO0VBQ2hCLG1CQUFtQjtFQUNuQixlQUFlO0VBQ2YsaUJBQWlCLEVBQUE7O0FBSXJCO0VBQ0ksY0M1Q1k7RUQ2Q1osV0FBVztFQUNYLFlBQVk7RUFDWixlQUFlLEVBQUEiLCJmaWxlIjoic3JjL2FwcC92aWV3cy92aWV3LWFib3V0L3ZpZXctYWJvdXQuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJAaW1wb3J0ICd+c2Nzcy9jb2xvcnMnO1xyXG5AaW1wb3J0ICd+c2Nzcy92YXJpYWJsZXMnO1xyXG5cclxuLmNvbnRhaW5lcntcclxuICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG59XHJcbi5jb250ZW50X19wYW5lbHtcclxuICAgIG1hcmdpbi10b3A6IDFweDtcclxuICAgIG1hcmdpbi1sZWZ0OiAxMXB4OyAvL3NwbGl0IGJhciB3aWR0aFxyXG4gICAgLy8gbWF4LXdpZHRoOiA2MDBweDtcclxuICAgIGhlaWdodDogY2FsYygxMDAlIC0gNDFweCk7XHJcbiAgICBvdmVyZmxvdzogYXV0bztcclxuXHJcbiAgICAubG9nb3tcclxuICAgICAgICBmbG9hdDogcmlnaHQ7XHJcbiAgICAgICAgbWFyZ2luLXJpZ2h0OiA1MHB4O1xyXG4gICAgfVxyXG4gICAgLnRleHR7XHJcbiAgICAgICAgbWF4LXdpZHRoOiA2MDBweDtcclxuICAgIH1cclxuICAgIC5rZXkge1xyXG4gICAgICAgIG1hcmdpbi1sZWZ0OiAyNXB4O1xyXG4gICAgICAgIHRkIHtcclxuICAgICAgICAgICAgcGFkZGluZzogMTBweDtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbn1cclxuXHJcbmgzIHtcclxuICAgIGxpbmUtaGVpZ2h0OiAzMHB4O1xyXG4gICAgaGVpZ2h0OiAzMHB4O1xyXG4gICAgY29sb3I6ICRjb2xvcjg7XHJcbn1cclxuXHJcbnAsIGxpLCB0ZHtcclxuICAgIGNvbG9yOiAkY29sb3I4O1xyXG4gICAgdGV4dC1hbGlnbjogbGVmdDtcclxuICAgIG1hcmdpbi1ib3R0b206IDE0cHg7XHJcbiAgICBmb250LXNpemU6IDEycHg7XHJcbiAgICBsaW5lLWhlaWdodDogMTRweDtcclxuICAgIC8vaGVpZ2h0OiAxNHB4O1xyXG59XHJcblxyXG5tYXQtaWNvbntcclxuICAgIGNvbG9yOiAkY29sb3IxO1xyXG4gICAgbWFyZ2luOiAwcHg7XHJcbiAgICBwYWRkaW5nOiAwcHg7XHJcbiAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbn0iLCJcclxuJGNvbG9yMTogIzgwODA4MDtcclxuJGNvbG9yMjogIzk5OTk5OTtcclxuJGNvbG9yMzogI0IzQjNCMzsgXHJcbiRjb2xvcjQ6ICNDQ0NDQ0M7XHJcbiRjb2xvcjU6ICNFNkU2RTY7XHJcbiRjb2xvcjUtNTogcmdiKDI0NSwgMjQ1LCAyNDUpO1xyXG4kY29sb3I2OiByZ2IoMjUwLCAyNTAsIDI1MSk7XHJcblxyXG4kY29sb3I3OiB3aGl0ZTtcclxuJGNvbG9yODogIzM3MzczNztcclxuXHJcbiRzZWxlY3RlZC1jb2xvcjogcmdiKDAsIDAsIDEwOSk7XHJcbiRob3Zlci1jb2xvcjogJGNvbG9yMjtcclxuXHJcbiRlcnJvci1jb2xvcjogI0U5NDg1ODsgLy9waW5rLXJlZFxyXG4kZXJyb3ItY29sb3ItbHQ6IHJnYigyNTUsIDIyMCwgMjI0KTtcclxuJHBjb2xvcjI6ICNGM0EzMkE7IC8vb3JhbmdlLXllbGxvd1xyXG4kcHJpbnQtY29sb3I6IHJnYigxMzAsIDE5MSwgMTEwKTsgLy9saWdodGdyZWVuXHJcbiRwcmludC1jb2xvci1sdDogcmdiKDIzMCwgMjU1LCAyMjEpO1xyXG4kc2VsZWN0R2VvbS1jb2xvcjogcmdiKDI1NSwgMTc0LCAwKTsgLy8gbGlnaHQgb3JhbmdlXHJcbiRzZWxlY3RHZW9tLWNvbG9yLWx0OiByZ2IoMjU1LCAyMjUsIDE2MCk7XHJcblxyXG4vLyAkcHJvZC1iYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMjUwLDI1MCwyNTApO1xyXG4vLyAkYmFja2dyb3VuZC1jb2xvcjogcmdiKDIyMCwyMjAsMjIwKTtcclxuJGZ1bmN0aW9uLXRleHQtY29sb3I6IHJnYigxOTAsIDE0MCwgMzApO1xyXG4kZnVuY3Rpb24tdGV4dC1jb2xvcjI6IHJnYigxOCwgMTI2LCAxMzYpO1xyXG4kYmFzaWMtZnVuY3Rpb24tdGV4dC1jb2xvcjogcmdiKDIwMCwgNzAsIDE1MCk7XHJcbiRjb21tZW50LWNvbG9yOiBkYXJrZ3JlZW47XHJcbiJdfQ== */\"","import { Component, Input } from '@angular/core';\r\nimport { IFlowchart } from '@models/flowchart';\r\nimport { INode } from '@models/node';\r\nimport { DataService } from '@services';\r\nimport { Router } from '@angular/router';\r\nimport { LoadUrlComponent } from '@shared/components/file/loadurl.component';\r\nimport { VERSION } from '@env/version';\r\n\r\n@Component({\r\n  selector: 'view-about',\r\n  templateUrl: './view-about.component.html',\r\n  styleUrls: ['./view-about.component.scss']\r\n})\r\nexport class ViewAboutComponent {\r\n    version = VERSION;\r\n\r\n    constructor(private dataService: DataService, private router: Router) {\r\n        new LoadUrlComponent(this.dataService, this.router).loadStartUpURL(this.router.url);\r\n    }\r\n\r\n    routeTo(url: string) { this.router.navigate([url]); }\r\n    getFlowchart() { return this.dataService.flowchart; }\r\n    getFlowchartName() { return this.dataService.file.name; }\r\n}\r\n\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { SharedModule } from '@shared/shared.module';\r\nimport { ViewAboutRoutingModule } from './view-about-routing.module';\r\nimport { ViewAboutComponent } from './view-about.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ViewAboutComponent,\r\n  ],\r\n  exports: [\r\n    ViewAboutComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    SharedModule,\r\n    ViewAboutRoutingModule\r\n  ],\r\n  entryComponents: [ ],\r\n  providers: [ ]\r\n})\r\nexport class ViewAboutModule {\r\n    constructor () { }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { ViewDashboardComponent } from './view-dashboard.component';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        component: ViewDashboardComponent,\r\n        children: [ ]\r\n    }\r\n];\r\n\r\n\r\n@NgModule({\r\n    imports: [ RouterModule.forChild(routes) ],\r\n    exports: [ RouterModule ]\r\n})\r\nexport class ViewDashboardRoutingModule { }\r\n","module.exports = \"<div class='container'>\\r\\n    <as-split direction=\\\"horizontal\\\" (dragEnd)='setSplit($event)'>\\r\\n        \\r\\n        <as-split-area [size]=\\\"100 - getSplit()\\\">\\r\\n            <panel-header [flowchart]='getFlowchart()'></panel-header>\\r\\n            <!-- viewchild content -->\\r\\n            <div class='content__panel'>\\r\\n                <h3>{{getFlowchart().name}}</h3>\\r\\n                <parameter-viewer [flowchart]='getFlowchart()' [startNode]='getFlowchart().nodes[0]' [endNode]='getEndNode()'></parameter-viewer>\\r\\n            </div>\\r\\n        </as-split-area>\\r\\n\\r\\n        <as-split-area [size]=\\\"getSplit()\\\">\\r\\n            <!-- data viewers panel -->\\r\\n            <div class='content__viewer' >\\r\\n                <model-viewers-container [data]='viewerData(getNode(), true)'></model-viewers-container>\\r\\n            </div>\\r\\n        </as-split-area>\\r\\n        \\r\\n    </as-split>\\r\\n</div>\\r\\n<spinner></spinner>\\r\\n<chrome></chrome>\"","module.exports = \".content__panel {\\n  margin-top: 40px;\\n  padding-left: 11px;\\n  height: calc(100% - 40px);\\n  overflow-y: auto; }\\n\\nh3 {\\n  line-height: 30px;\\n  height: 30px;\\n  color: #373737; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdmlld3Mvdmlldy1kYXNoYm9hcmQvQzpcXERyb3Bib3hcXEZpbGVzXFxTb2Z0d2FyZVxcR2l0SHViXFxkZXNpZ24tYXV0b21hdGlvblxcbW9iaXVzLXBhcmFtZXRyaWMtbW9kZWxsZXIvc3JjXFxhcHBcXHZpZXdzXFx2aWV3LWRhc2hib2FyZFxcdmlldy1kYXNoYm9hcmQuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL3ZpZXdzL3ZpZXctZGFzaGJvYXJkL0M6XFxEcm9wYm94XFxGaWxlc1xcU29mdHdhcmVcXEdpdEh1YlxcZGVzaWduLWF1dG9tYXRpb25cXG1vYml1cy1wYXJhbWV0cmljLW1vZGVsbGVyL3NyY1xcc2Nzc1xcdmFyaWFibGVzLnNjc3MiLCJzcmMvYXBwL3ZpZXdzL3ZpZXctZGFzaGJvYXJkL0M6XFxEcm9wYm94XFxGaWxlc1xcU29mdHdhcmVcXEdpdEh1YlxcZGVzaWduLWF1dG9tYXRpb25cXG1vYml1cy1wYXJhbWV0cmljLW1vZGVsbGVyL3NyY1xcc2Nzc1xcY29sb3JzLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBR0E7RUFDSSxnQkNGZ0I7RURHaEIsa0JBQWtCO0VBRWxCLHlCQUF5QjtFQUN6QixnQkFBZ0IsRUFBQTs7QUFHcEI7RUFDSSxpQkFBaUI7RUFDakIsWUFBWTtFQUNaLGNFSlksRUFBQSIsImZpbGUiOiJzcmMvYXBwL3ZpZXdzL3ZpZXctZGFzaGJvYXJkL3ZpZXctZGFzaGJvYXJkLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiQGltcG9ydCAnfnNjc3MvY29sb3JzJztcclxuQGltcG9ydCAnfnNjc3MvdmFyaWFibGVzJztcclxuXHJcbi5jb250ZW50X19wYW5lbHtcclxuICAgIG1hcmdpbi10b3A6ICRoZWFkZXItaGVpZ2h0O1xyXG4gICAgcGFkZGluZy1sZWZ0OiAxMXB4OyAvL3NwbGl0IGJhciB3aWR0aFxyXG5cclxuICAgIGhlaWdodDogY2FsYygxMDAlIC0gNDBweCk7IC8vaGVhZGVyIGhlaWdodDtcclxuICAgIG92ZXJmbG93LXk6IGF1dG87XHJcbn1cclxuXHJcbmgzIHtcclxuICAgIGxpbmUtaGVpZ2h0OiAzMHB4O1xyXG4gICAgaGVpZ2h0OiAzMHB4O1xyXG4gICAgY29sb3I6ICRjb2xvcjg7XHJcbn0iLCIkcGFkZGluZzogNDBweDsgLy8gPyBub3QgdXNlZFxyXG4kc21hbGwtcGFkZGluZzogMTVweDtcclxuJGhlYWRlci1oZWlnaHQ6IDQwcHg7XHJcblxyXG4kZnNpemUxOiAxNXB4O1xyXG4kZnNpemUyOiAxMnB4O1xyXG4kZnNpemUzOiAzMHB4O1xyXG5cclxuJHBvcnQtc2l6ZTogMTVweDtcclxuJGRlZmF1bHQtc2lkZS1wYWRkaW5nOiAxNXB4O1xyXG5cclxuJGRpc2FibGVkLW9wYWNpdHk6IDAuNDsiLCJcclxuJGNvbG9yMTogIzgwODA4MDtcclxuJGNvbG9yMjogIzk5OTk5OTtcclxuJGNvbG9yMzogI0IzQjNCMzsgXHJcbiRjb2xvcjQ6ICNDQ0NDQ0M7XHJcbiRjb2xvcjU6ICNFNkU2RTY7XHJcbiRjb2xvcjUtNTogcmdiKDI0NSwgMjQ1LCAyNDUpO1xyXG4kY29sb3I2OiByZ2IoMjUwLCAyNTAsIDI1MSk7XHJcblxyXG4kY29sb3I3OiB3aGl0ZTtcclxuJGNvbG9yODogIzM3MzczNztcclxuXHJcbiRzZWxlY3RlZC1jb2xvcjogcmdiKDAsIDAsIDEwOSk7XHJcbiRob3Zlci1jb2xvcjogJGNvbG9yMjtcclxuXHJcbiRlcnJvci1jb2xvcjogI0U5NDg1ODsgLy9waW5rLXJlZFxyXG4kZXJyb3ItY29sb3ItbHQ6IHJnYigyNTUsIDIyMCwgMjI0KTtcclxuJHBjb2xvcjI6ICNGM0EzMkE7IC8vb3JhbmdlLXllbGxvd1xyXG4kcHJpbnQtY29sb3I6IHJnYigxMzAsIDE5MSwgMTEwKTsgLy9saWdodGdyZWVuXHJcbiRwcmludC1jb2xvci1sdDogcmdiKDIzMCwgMjU1LCAyMjEpO1xyXG4kc2VsZWN0R2VvbS1jb2xvcjogcmdiKDI1NSwgMTc0LCAwKTsgLy8gbGlnaHQgb3JhbmdlXHJcbiRzZWxlY3RHZW9tLWNvbG9yLWx0OiByZ2IoMjU1LCAyMjUsIDE2MCk7XHJcblxyXG4vLyAkcHJvZC1iYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMjUwLDI1MCwyNTApO1xyXG4vLyAkYmFja2dyb3VuZC1jb2xvcjogcmdiKDIyMCwyMjAsMjIwKTtcclxuJGZ1bmN0aW9uLXRleHQtY29sb3I6IHJnYigxOTAsIDE0MCwgMzApO1xyXG4kZnVuY3Rpb24tdGV4dC1jb2xvcjI6IHJnYigxOCwgMTI2LCAxMzYpO1xyXG4kYmFzaWMtZnVuY3Rpb24tdGV4dC1jb2xvcjogcmdiKDIwMCwgNzAsIDE1MCk7XHJcbiRjb21tZW50LWNvbG9yOiBkYXJrZ3JlZW47XHJcbiJdfQ== */\"","import { Component, Input, AfterViewInit } from '@angular/core';\r\nimport { IFlowchart } from '@models/flowchart';\r\nimport { INode } from '@models/node';\r\nimport { DataService } from '@services';\r\nimport { Router } from '@angular/router';\r\nimport { LoadUrlComponent } from '@shared/components/file/loadurl.component';\r\nimport { getViewerData } from '@shared/getViewerData';\r\n\r\nconst canvas = document.createElement('canvas');\r\nconst ctx = canvas.getContext('2d');\r\nctx.font = '12px sans-serif';\r\n\r\n@Component({\r\n  selector: 'view-dashboard',\r\n  templateUrl: './view-dashboard.component.html',\r\n  styleUrls: ['./view-dashboard.component.scss']\r\n})\r\nexport class ViewDashboardComponent implements AfterViewInit {\r\n\r\n    viewerData = getViewerData;\r\n\r\n    constructor(private dataService: DataService, private router: Router) {\r\n        new LoadUrlComponent(this.dataService, this.router).loadStartUpURL(this.router.url);\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        setTimeout(() => {\r\n            this.adjustTextArea();\r\n        }, 50);\r\n    }\r\n\r\n    adjustTextArea() {\r\n        let textarea = document.getElementById('display-flowchart-desc');\r\n        if (textarea) {\r\n            const desc = this.dataService.flowchart.description.split('\\n');\r\n            const textareaWidth = textarea.getBoundingClientRect().width - 30;\r\n            let lineCount = 0;\r\n            for (const line of desc) {\r\n                lineCount += Math.floor(ctx.measureText(line).width / textareaWidth) + 1;\r\n            }\r\n            textarea.style.height = lineCount * 14 + 4 + 'px';\r\n        }\r\n        for (const prod of this.dataService.flowchart.nodes[0].procedure) {\r\n            if (!prod.enabled || prod.type !== 10 || prod.meta.inputMode === 5) { continue; }\r\n            textarea = document.getElementById(prod.ID + '_desc');\r\n            if (textarea && prod.meta.description) {\r\n                const desc = prod.meta.description.split('\\n');\r\n                const textareaWidth = textarea.getBoundingClientRect().width - 30;\r\n                let lineCount = 0;\r\n                for (const line of desc) {\r\n                    lineCount += Math.floor(ctx.measureText(line).width / textareaWidth) + 1;\r\n                }\r\n                textarea.style.height = lineCount * 14 + 4 + 'px';\r\n            }\r\n        }\r\n    }\r\n\r\n    getEndNode(): INode {\r\n      for (const node of this.dataService.flowchart.nodes) {\r\n        if (node.type === 'end') { return node; }\r\n      }\r\n    }\r\n\r\n    // viewerData(): any {\r\n    //     const node = this.dataService.flowchart.nodes[this.dataService.flowchart.meta.selected_nodes[0]];\r\n    //     if (!node || !node.enabled) { return ''; }\r\n    //     // if (node.type === 'output') { return node.input.value; }\r\n    //     return node.model;\r\n    // }\r\n\r\n    setSplit(event) {\r\n        this.dataService.splitUpdate = true;\r\n        this.dataService.splitVal = event.sizes[1];\r\n        this.adjustTextArea();\r\n    }\r\n\r\n    getSplit() { return this.dataService.splitVal; }\r\n    getFlowchart() { return this.dataService.flowchart; }\r\n    getNode() { return this.dataService.node; }\r\n    getFlowchartName() { return this.dataService.file.name; }\r\n}\r\n\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { SharedModule } from '@shared/shared.module';\r\nimport { ViewDashboardRoutingModule } from './view-dashboard-routing.module';\r\nimport { ViewDashboardComponent } from './view-dashboard.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ViewDashboardComponent,\r\n  ],\r\n  exports: [\r\n    ViewDashboardComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    SharedModule,\r\n    ViewDashboardRoutingModule\r\n  ],\r\n  entryComponents: [ ],\r\n  providers: [ ]\r\n})\r\nexport class ViewDashboardModule {\r\n    constructor () { }\r\n}\r\n","module.exports = \"<div class='flowchart-info' *ngIf=\\\"node.type=='start'\\\">\\r\\n    <!-- <div class = 'divider'></div> -->\\r\\n    <ng-container *ngIf='!prodCheck'>\\r\\n        <div class = 'input-container'>\\r\\n            <input id='flowchart-name' autocomplete='off' [(ngModel)]='flowchart.name' placeholder=\\\"flowchart name\\\" [style.width.px]='inputSize(flowchart.name||\\\"flowchart name\\\")'>\\r\\n        </div>\\r\\n        <textarea autogrow\\r\\n        id='flowchart-desc' [(ngModel)]='flowchart.description' placeholder=\\\"Model Description\\\"></textarea>\\r\\n    </ng-container>\\r\\n\\r\\n    <div class='container--input' *ngIf='prodCheck'>\\r\\n        <procedure-input-editor \\r\\n            *ngFor=\\\"let prod of node.procedure; let i = index;\\\" \\r\\n            [prod]=\\\"prod\\\" \\r\\n            [disableInput]='disableInput'\\r\\n            (delete)='deleteProd()' \\r\\n            (deleteC)='deleteChild(i)' \\r\\n            (disableProds)='markDisabled()' \\r\\n            (updateGlbs)='updateGlbs()' \\r\\n            (selectInp)='selectInput($event)'></procedure-input-editor>\\r\\n    </div>\\r\\n</div>\\r\\n<div class='flowchart-info' *ngIf=\\\"node.type=='end'\\\">\\r\\n    <!-- <div class = 'divider'></div> -->\\r\\n    <div id='ret-container'>\\r\\n        <div class='returnProd'>\\r\\n            <input class='disabled-input' value=\\\"Return\\\" disabled>\\r\\n            <ng-container *ngFor='let p of node.procedure[node.procedure.length-1].args; let i=index'>\\r\\n                <input id='ret--input' \\r\\n                *ngIf='p.name[0] !== \\\"_\\\"'\\r\\n                [(ngModel)]='p.value'\\r\\n                placeholder={{p.name}}\\r\\n                [style.width.px]='inputSize(p.value||p.name)'\\r\\n                autocomplete='off'\\r\\n                >  \\r\\n            </ng-container>\\r\\n            </div>\\r\\n        <textarea autogrow\\r\\n        id='flowchart-return' [(ngModel)]='flowchart.returnDescription' placeholder=\\\"Parameter Description\\\"></textarea>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n\"","module.exports = \"div[class^=\\\"container--\\\"] {\\n  display: flex;\\n  flex-direction: column;\\n  margin: 0px 0px; }\\n\\n.flowchart-info {\\n  display: flex;\\n  flex-flow: column nowrap;\\n  padding-left: 8px;\\n  padding-right: 5px;\\n  width: 100%;\\n  box-sizing: border-box; }\\n\\n.flowchart-info #ret-container {\\n    display: flex;\\n    flex-flow: column nowrap;\\n    padding-left: 2px;\\n    padding-bottom: 2px;\\n    border-left: 1px solid #999999;\\n    border-bottom: 1px solid #999999; }\\n\\ntextarea, #flowchart-name, #ret--input {\\n  color: #373737;\\n  border: 2px solid #E6E6E6;\\n  background-color: transparent;\\n  height: 15px;\\n  margin-bottom: 1px;\\n  padding-left: 6px;\\n  font-family: sans-serif;\\n  font-size: 12px;\\n  max-width: 100%;\\n  resize: none;\\n  overflow: auto; }\\n\\ntextarea:hover, textarea:focus, #flowchart-name:hover, #flowchart-name:focus, #ret--input:hover, #ret--input:focus {\\n    border-color: #00006d;\\n    background-color: white; }\\n\\n.input-container {\\n  padding: 0px;\\n  max-width: 100%;\\n  padding-right: 9px;\\n  box-sizing: border-box; }\\n\\n#flowchart-name {\\n  margin-bottom: 8px;\\n  max-width: 100%;\\n  height: 15px; }\\n\\nhr {\\n  width: inherit;\\n  border-top: 2px solid #808080; }\\n\\n.disabled-input {\\n  border: 0px;\\n  margin: 0px;\\n  width: 50px;\\n  font-family: sans-serif;\\n  font-size: 12px;\\n  font-weight: 550;\\n  font-style: italic;\\n  background-color: #fafafb;\\n  color: #be8c1e; }\\n\\n.input {\\n  font-size: 12px;\\n  resize: horizontal;\\n  min-width: 10px;\\n  background-color: #fafafb;\\n  margin-left: 6px;\\n  border: 2px solid #E6E6E6;\\n  padding-left: 2px; }\\n\\n.returnProd {\\n  display: inline-block; }\\n\\n.divider {\\n  width: 100%;\\n  height: 20px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdmlld3Mvdmlldy1lZGl0b3IvcGFyYW1ldGVyLWVkaXRvci9DOlxcRHJvcGJveFxcRmlsZXNcXFNvZnR3YXJlXFxHaXRIdWJcXGRlc2lnbi1hdXRvbWF0aW9uXFxtb2JpdXMtcGFyYW1ldHJpYy1tb2RlbGxlci9zcmNcXGFwcFxcdmlld3NcXHZpZXctZWRpdG9yXFxwYXJhbWV0ZXItZWRpdG9yXFxwYXJhbWV0ZXItZWRpdG9yLmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC92aWV3cy92aWV3LWVkaXRvci9wYXJhbWV0ZXItZWRpdG9yL0M6XFxEcm9wYm94XFxGaWxlc1xcU29mdHdhcmVcXEdpdEh1YlxcZGVzaWduLWF1dG9tYXRpb25cXG1vYml1cy1wYXJhbWV0cmljLW1vZGVsbGVyL3NyY1xcc2Nzc1xcY29sb3JzLnNjc3MiLCJzcmMvYXBwL3ZpZXdzL3ZpZXctZWRpdG9yL3BhcmFtZXRlci1lZGl0b3IvQzpcXERyb3Bib3hcXEZpbGVzXFxTb2Z0d2FyZVxcR2l0SHViXFxkZXNpZ24tYXV0b21hdGlvblxcbW9iaXVzLXBhcmFtZXRyaWMtbW9kZWxsZXIvc3JjXFxzY3NzXFx2YXJpYWJsZXMuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFHQTtFQUNJLGFBQWE7RUFDYixzQkFBc0I7RUFDdEIsZUFBZSxFQUFBOztBQUduQjtFQUNJLGFBQWE7RUFDYix3QkFBd0I7RUFDeEIsaUJBQWlCO0VBQ2pCLGtCQUFrQjtFQUNsQixXQUFXO0VBQ1gsc0JBQXNCLEVBQUE7O0FBTjFCO0lBUVEsYUFBYTtJQUNiLHdCQUF3QjtJQUN4QixpQkFBaUI7SUFDakIsbUJBQW1CO0lBQ25CLDhCQ25CUTtJRG9CUixnQ0NwQlEsRUFBQTs7QUR3QmhCO0VBQ0ksY0NqQlk7RURrQloseUJDdkJZO0VEd0JaLDZCQUE2QjtFQUM3QixZRTFCUztFRjJCVCxrQkFBa0I7RUFFbEIsaUJBQWlCO0VBQ2pCLHVCQUF1QjtFQUN2QixlRTlCUztFRitCVCxlQUFlO0VBQ2YsWUFBWTtFQUNaLGNBQWMsRUFBQTs7QUFabEI7SUFjUSxxQkM1QnVCO0lENkJ2Qix1QkNoQ00sRUFBQTs7QURvQ2Q7RUFDSSxZQUFZO0VBQ1osZUFBZTtFQUNmLGtCQUFrQjtFQUNsQixzQkFBc0IsRUFBQTs7QUFHMUI7RUFDSSxrQkFBa0I7RUFDbEIsZUFBZTtFQUNmLFlFbkRTLEVBQUE7O0FGc0RiO0VBQ0ksY0FBYztFQUNkLDZCQzNEWSxFQUFBOztBRDhEaEI7RUFDSSxXQUFXO0VBQ1gsV0FBVztFQUNYLFdBQVc7RUFDWCx1QkFBdUI7RUFDdkIsZUUvRFM7RUZnRVQsZ0JBQWdCO0VBQ2hCLGtCQUFrQjtFQUNsQix5QkNoRXVCO0VEaUV2QixjQy9DbUMsRUFBQTs7QURrRHZDO0VBQ0ksZUV2RVM7RUZ3RVQsa0JBQWtCO0VBQ2xCLGVBQWU7RUFDZix5QkN4RXVCO0VEeUV2QixnQkFBZ0I7RUFDaEIseUJDNUVZO0VENkVaLGlCQUFpQixFQUFBOztBQUdyQjtFQUNJLHFCQUFxQixFQUFBOztBQUd6QjtFQUNJLFdBQVc7RUFFWCxZQUFZLEVBQUEiLCJmaWxlIjoic3JjL2FwcC92aWV3cy92aWV3LWVkaXRvci9wYXJhbWV0ZXItZWRpdG9yL3BhcmFtZXRlci1lZGl0b3IuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJAaW1wb3J0ICd+c2Nzcy9jb2xvcnMnO1xyXG5AaW1wb3J0ICd+c2Nzcy92YXJpYWJsZXMnO1xyXG5cclxuZGl2W2NsYXNzXj1cImNvbnRhaW5lci0tXCJde1xyXG4gICAgZGlzcGxheTogZmxleDsgXHJcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gICAgbWFyZ2luOiAwcHggMHB4O1xyXG59XHJcblxyXG4uZmxvd2NoYXJ0LWluZm97XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgZmxleC1mbG93OiBjb2x1bW4gbm93cmFwO1xyXG4gICAgcGFkZGluZy1sZWZ0OiA4cHg7XHJcbiAgICBwYWRkaW5nLXJpZ2h0OiA1cHg7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XHJcbiAgICAjcmV0LWNvbnRhaW5lcntcclxuICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgIGZsZXgtZmxvdzogY29sdW1uIG5vd3JhcDtcclxuICAgICAgICBwYWRkaW5nLWxlZnQ6IDJweDtcclxuICAgICAgICBwYWRkaW5nLWJvdHRvbTogMnB4O1xyXG4gICAgICAgIGJvcmRlci1sZWZ0OiAxcHggc29saWQgJGNvbG9yMjtcclxuICAgICAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgJGNvbG9yMjtcclxuICAgIH1cclxufVxyXG5cclxudGV4dGFyZWEsICNmbG93Y2hhcnQtbmFtZSwgI3JldC0taW5wdXR7XHJcbiAgICBjb2xvcjogJGNvbG9yODtcclxuICAgIGJvcmRlcjogMnB4IHNvbGlkICRjb2xvcjU7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcclxuICAgIGhlaWdodDogJGZzaXplMTtcclxuICAgIG1hcmdpbi1ib3R0b206IDFweDtcclxuXHJcbiAgICBwYWRkaW5nLWxlZnQ6IDZweDtcclxuICAgIGZvbnQtZmFtaWx5OiBzYW5zLXNlcmlmO1xyXG4gICAgZm9udC1zaXplOiAkZnNpemUyO1xyXG4gICAgbWF4LXdpZHRoOiAxMDAlO1xyXG4gICAgcmVzaXplOiBub25lOyBcclxuICAgIG92ZXJmbG93OiBhdXRvO1xyXG4gICAgJjpob3ZlciwgJjpmb2N1c3tcclxuICAgICAgICBib3JkZXItY29sb3I6ICRzZWxlY3RlZC1jb2xvcjtcclxuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkY29sb3I3O1xyXG4gICAgfVxyXG59XHJcblxyXG4uaW5wdXQtY29udGFpbmVye1xyXG4gICAgcGFkZGluZzogMHB4O1xyXG4gICAgbWF4LXdpZHRoOiAxMDAlO1xyXG4gICAgcGFkZGluZy1yaWdodDogOXB4O1xyXG4gICAgYm94LXNpemluZzogYm9yZGVyLWJveDtcclxufVxyXG5cclxuI2Zsb3djaGFydC1uYW1le1xyXG4gICAgbWFyZ2luLWJvdHRvbTogOHB4O1xyXG4gICAgbWF4LXdpZHRoOiAxMDAlO1xyXG4gICAgaGVpZ2h0OiAkZnNpemUxO1xyXG59XHJcblxyXG5ocntcclxuICAgIHdpZHRoOiBpbmhlcml0O1xyXG4gICAgYm9yZGVyLXRvcDogMnB4IHNvbGlkICRjb2xvcjE7XHJcbn1cclxuXHJcbi5kaXNhYmxlZC1pbnB1dHtcclxuICAgIGJvcmRlcjogMHB4O1xyXG4gICAgbWFyZ2luOiAwcHg7XHJcbiAgICB3aWR0aDogNTBweDtcclxuICAgIGZvbnQtZmFtaWx5OiBzYW5zLXNlcmlmO1xyXG4gICAgZm9udC1zaXplOiAkZnNpemUyO1xyXG4gICAgZm9udC13ZWlnaHQ6IDU1MDtcclxuICAgIGZvbnQtc3R5bGU6IGl0YWxpYztcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICRjb2xvcjY7XHJcbiAgICBjb2xvcjogJGZ1bmN0aW9uLXRleHQtY29sb3I7XHJcbn1cclxuXHJcbi5pbnB1dHtcclxuICAgIGZvbnQtc2l6ZTogJGZzaXplMjtcclxuICAgIHJlc2l6ZTogaG9yaXpvbnRhbDtcclxuICAgIG1pbi13aWR0aDogMTBweDtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICRjb2xvcjY7IFxyXG4gICAgbWFyZ2luLWxlZnQ6IDZweDtcclxuICAgIGJvcmRlcjogMnB4IHNvbGlkICRjb2xvcjU7XHJcbiAgICBwYWRkaW5nLWxlZnQ6IDJweDtcclxufVxyXG5cclxuLnJldHVyblByb2R7XHJcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbn1cclxuXHJcbi5kaXZpZGVye1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICAvLyBiYWNrZ3JvdW5kLWNvbG9yOiAkY29sb3I1LTU7XHJcbiAgICBoZWlnaHQ6IDIwcHg7XHJcbn1cclxuIiwiXHJcbiRjb2xvcjE6ICM4MDgwODA7XHJcbiRjb2xvcjI6ICM5OTk5OTk7XHJcbiRjb2xvcjM6ICNCM0IzQjM7IFxyXG4kY29sb3I0OiAjQ0NDQ0NDO1xyXG4kY29sb3I1OiAjRTZFNkU2O1xyXG4kY29sb3I1LTU6IHJnYigyNDUsIDI0NSwgMjQ1KTtcclxuJGNvbG9yNjogcmdiKDI1MCwgMjUwLCAyNTEpO1xyXG5cclxuJGNvbG9yNzogd2hpdGU7XHJcbiRjb2xvcjg6ICMzNzM3Mzc7XHJcblxyXG4kc2VsZWN0ZWQtY29sb3I6IHJnYigwLCAwLCAxMDkpO1xyXG4kaG92ZXItY29sb3I6ICRjb2xvcjI7XHJcblxyXG4kZXJyb3ItY29sb3I6ICNFOTQ4NTg7IC8vcGluay1yZWRcclxuJGVycm9yLWNvbG9yLWx0OiByZ2IoMjU1LCAyMjAsIDIyNCk7XHJcbiRwY29sb3IyOiAjRjNBMzJBOyAvL29yYW5nZS15ZWxsb3dcclxuJHByaW50LWNvbG9yOiByZ2IoMTMwLCAxOTEsIDExMCk7IC8vbGlnaHRncmVlblxyXG4kcHJpbnQtY29sb3ItbHQ6IHJnYigyMzAsIDI1NSwgMjIxKTtcclxuJHNlbGVjdEdlb20tY29sb3I6IHJnYigyNTUsIDE3NCwgMCk7IC8vIGxpZ2h0IG9yYW5nZVxyXG4kc2VsZWN0R2VvbS1jb2xvci1sdDogcmdiKDI1NSwgMjI1LCAxNjApO1xyXG5cclxuLy8gJHByb2QtYmFja2dyb3VuZC1jb2xvcjogcmdiKDI1MCwyNTAsMjUwKTtcclxuLy8gJGJhY2tncm91bmQtY29sb3I6IHJnYigyMjAsMjIwLDIyMCk7XHJcbiRmdW5jdGlvbi10ZXh0LWNvbG9yOiByZ2IoMTkwLCAxNDAsIDMwKTtcclxuJGZ1bmN0aW9uLXRleHQtY29sb3IyOiByZ2IoMTgsIDEyNiwgMTM2KTtcclxuJGJhc2ljLWZ1bmN0aW9uLXRleHQtY29sb3I6IHJnYigyMDAsIDcwLCAxNTApO1xyXG4kY29tbWVudC1jb2xvcjogZGFya2dyZWVuO1xyXG4iLCIkcGFkZGluZzogNDBweDsgLy8gPyBub3QgdXNlZFxyXG4kc21hbGwtcGFkZGluZzogMTVweDtcclxuJGhlYWRlci1oZWlnaHQ6IDQwcHg7XHJcblxyXG4kZnNpemUxOiAxNXB4O1xyXG4kZnNpemUyOiAxMnB4O1xyXG4kZnNpemUzOiAzMHB4O1xyXG5cclxuJHBvcnQtc2l6ZTogMTVweDtcclxuJGRlZmF1bHQtc2lkZS1wYWRkaW5nOiAxNXB4O1xyXG5cclxuJGRpc2FibGVkLW9wYWNpdHk6IDAuNDsiXX0= */\"","import { Component, Input, AfterContentInit, AfterViewInit, AfterViewChecked, Output, EventEmitter } from '@angular/core';\r\nimport { INode, NodeUtils } from '@models/node';\r\nimport { PortType } from '@models/port';\r\nimport { IFlowchart } from '@models/flowchart';\r\nimport { updateGlobals } from '@shared/parser';\r\n\r\nconst canvas = document.createElement('canvas');\r\nconst ctx = canvas.getContext('2d');\r\nctx.font = 'bold 12px arial';\r\n\r\n@Component({\r\n  selector: 'parameter-editor',\r\n  templateUrl: './parameter-editor.component.html',\r\n  styleUrls: ['./parameter-editor.component.scss']\r\n})\r\nexport class ParameterEditorComponent  {\r\n    @Input() node: INode;\r\n    @Input() flowchart: IFlowchart;\r\n    @Input() prodCheck: boolean;\r\n    @Input() disableInput: boolean;\r\n    @Output() selectInp = new EventEmitter();\r\n    @Output() delete = new EventEmitter();\r\n    @Output() disableProds = new EventEmitter();\r\n    @Output() regAction = new EventEmitter();\r\n\r\n\r\n    deleteProd() {\r\n        this.delete.emit();\r\n    }\r\n\r\n    deleteChild(index: number) {\r\n        this.regAction.emit([{'type': 'del', 'parent': undefined, 'index': index, 'prod': this.node.procedure[index]}]);\r\n        this.node.procedure.splice(index, 1);\r\n        NodeUtils.deselect_procedure(this.node);\r\n    }\r\n\r\n    markDisabled() {\r\n        // this.node.procedure.splice(index, 1);\r\n        // NodeUtils.deselect_procedure(this.node);\r\n        this.disableProds.emit();\r\n    }\r\n\r\n    inputSize(val) {\r\n        return ctx.measureText(val).width + 7;\r\n    }\r\n\r\n    selectInput(event) {\r\n        this.selectInp.emit(event);\r\n    }\r\n\r\n    updateGlbs() {\r\n        updateGlobals(this.node);\r\n    }\r\n}\r\n\r\n\r\n","module.exports = \"<div class='container--parameter' \\r\\n*ngIf='prod.meta?.module ==\\\"Input\\\"'\\r\\n[class.error]='prod.hasError' \\r\\n[class.selected]='prod.selected' \\r\\n[class.inputDisabled]='!prod.enabled' \\r\\n(mousedown)='disableShift($event)'\\r\\n(click)='selectInput($event)'>\\r\\n    <div class = \\\"btn-container\\\">\\r\\n        <div class = \\\"btns\\\">\\r\\n            <!-- delete button-->\\r\\n            <button class='btn' mat-icon-button title=\\\"Delete Procedure\\\" (click)='deleteProd()' tabindex=\\\"-1\\\">\\r\\n                <mat-icon class='icon'>delete_outline</mat-icon>\\r\\n            </button>\\r\\n            <button class='btn' mat-icon-button title=\\\"Disable Procedure\\\" (click)='markDisabled()' tabindex=\\\"-1\\\">\\r\\n                <mat-icon class='icon'>tv_off</mat-icon>\\r\\n            </button>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class = 'inp--type--container'>\\r\\n        <div class='inline-div'>\\r\\n            <ng-container *ngIf='prod.type == 10'>\\r\\n                <ng-container [ngSwitch]=\\\"prod.meta.inputMode\\\">\\r\\n                    <input class = 'input--type' *ngSwitchCase='0' [class.disabled-input]='true' value='Simple Input' disabled>\\r\\n                    <input class = 'input--type' *ngSwitchCase='1' [class.disabled-input]='true' value='Slider' disabled>\\r\\n                    <input class = 'input--type' *ngSwitchCase='2' [class.disabled-input]='true' value='Check Box' disabled>\\r\\n                    <input class = 'input--type' *ngSwitchCase='3' [class.disabled-input]='true' value='URL' disabled>\\r\\n                    <input class = 'input--type' *ngSwitchCase='4' [class.disabled-input]='true' value='File' disabled>\\r\\n                    <input class = 'input--type' *ngSwitchCase='5' [class.disabled-input]='true' value='Constant' disabled>\\r\\n                </ng-container>\\r\\n            </ng-container>\\r\\n            <input class = 'input--type' *ngIf='prod.type == 12' [class.disabled-input]='true' value='Add Model' size='5' disabled>\\r\\n        </div>\\r\\n        <div class='inline-div'>\\r\\n            <!-- <input [class.disabled-input]='true' value='Name:' disabled> -->\\r\\n            <input \\r\\n            [(ngModel)]='prod.args[0].value'\\r\\n            (blur)='varMod()'\\r\\n            [class.error]='prod.args[0].invalidVar'\\r\\n            [class.disablePointer]='disableInput'\\r\\n            (focus)='emitClearSelect($event)'\\r\\n            placeholder=\\\"name\\\"\\r\\n            [style.width.px]='inputSize(prod.args[0].value,\\\"Undefined\\\")'>\\r\\n        </div>\\r\\n        <!-- <div class='inline-div' *ngIf='prod.type == 12'>\\r\\n            <select [(ngModel)]=\\\"prod.meta.inputMode\\\" tabindex=\\\"-1\\\">\\r\\n                <option value='3' [selected]=\\\"prod.meta.inputMode == 3\\\">URL</option>\\r\\n                <option value='4' [selected]=\\\"prod.meta.inputMode == 4\\\">File</option>\\r\\n            </select>\\r\\n        </div> -->\\r\\n        <!-- <input [class.disabled-input]='true' value='Default:' disabled> -->\\r\\n        <div class='inline-div'>\\r\\n            <ng-container [ngSwitch]=\\\"prod.meta.inputMode\\\" >\\r\\n                <!-- Constant -->\\r\\n                <input *ngSwitchCase=\\\"PortTypes.Constant\\\" [(ngModel)]='prod.args[prod.argCount-1].default' placeholder='Default Value' \\r\\n                (focus)='emitClearSelect($event)'\\r\\n                [class.disablePointer]='disableInput'\\r\\n                [style.width.px]='inputSize(prod.args[prod.argCount-1].default,\\\"Default Value\\\")'>\\r\\n    \\r\\n                <!-- simpleinput -->\\r\\n                <input *ngSwitchCase=\\\"PortTypes.SimpleInput\\\" [(ngModel)]='prod.args[prod.argCount-1].default' placeholder='Default Value' \\r\\n                (focus)='emitClearSelect($event)'\\r\\n                [class.disablePointer]='disableInput'\\r\\n                [style.width.px]='inputSize(prod.args[prod.argCount-1].default,\\\"Default Value\\\")'>\\r\\n    \\r\\n                <!-- slider -->\\r\\n                <div class='div--slider' *ngSwitchCase=\\\"PortTypes.Slider\\\">\\r\\n                    <div class = 'input--container'>\\r\\n                        <input [(ngModel)]='prod.args[prod.argCount-1].step' placeholder='Step'\\r\\n                            (focus)='emitClearSelect($event)'\\r\\n                            [class.disablePointer]='disableInput'\\r\\n                            [style.width.px]='inputSize(prod.args[prod.argCount-1].step,\\\"Step\\\")'>\\r\\n                        <input [value]='prod.args[prod.argCount-1].min||\\\"\\\"' placeholder='Min'\\r\\n                            (blur)='updateMin(prod.args[prod.argCount-1], $event)'\\r\\n                            (keyup)='updateMin(prod.args[prod.argCount-1], $event)'\\r\\n                            (focus)='emitClearSelect($event)'\\r\\n                            [class.disablePointer]='disableInput'\\r\\n                            [style.width.px]='inputSize(prod.args[prod.argCount-1].min,\\\"Min\\\")'>\\r\\n                        <input [value]='prod.args[prod.argCount-1].max||\\\"\\\"' placeholder='Max'\\r\\n                            (blur)='updateMax(prod.args[prod.argCount-1], $event)'\\r\\n                            (keyup)='updateMax(prod.args[prod.argCount-1], $event)'\\r\\n                            (focus)='emitClearSelect($event)'\\r\\n                            [class.disablePointer]='disableInput'\\r\\n                            [style.width.px]='inputSize(prod.args[prod.argCount-1].max,\\\"Max\\\")'>\\r\\n                    </div>              \\r\\n                </div>\\r\\n                \\r\\n                <!-- checkbox -->\\r\\n                <div class = 'div--chbox' *ngSwitchCase=\\\"PortTypes.Checkbox\\\">\\r\\n                    <input class='chkbox' id = 'chbox_{{prod.ID}}' \\r\\n                        [(ngModel)]='prod.args[prod.argCount-1].default' \\r\\n                        [class.disablePointer]='disableInput'\\r\\n                        type=\\\"checkbox\\\">\\r\\n                    <label for = 'chbox_{{prod.ID}}'></label>\\r\\n    \\r\\n                </div>\\r\\n    \\r\\n                <!-- URL -->\\r\\n                <input *ngSwitchCase=\\\"PortTypes.URL\\\" [(ngModel)]='prod.args[prod.argCount-1].default' placeholder='Default URL'\\r\\n                    (focus)='emitClearSelect($event)'\\r\\n                    [class.disablePointer]='disableInput'\\r\\n                    [style.width.px]='inputSize(prod.args[prod.argCount-1].default,\\\"Default URL\\\")'>\\r\\n    \\r\\n                <!-- File -->\\r\\n                <div class='div--filebtn inline-div' *ngSwitchCase=\\\"PortTypes.File\\\" >\\r\\n                    <button class='filebtn' (click)=\\\"openFileBrowse(prod.ID)\\\" [class.disablePointer]='disableInput' >File</button>\\r\\n                    <input [class.disabled-input]='true' value='{{prod.args[prod.argCount-1].default.name}}' [style.width.px]='inputSize(prod.args[prod.argCount-1].default.name,\\\"\\\")' disabled>\\r\\n                    <input id='file_{{prod.ID}}' style='display: none;' (change)=\\\"onFileChange($event)\\\" \\r\\n                        type=\\\"file\\\">\\r\\n                </div>\\r\\n            </ng-container>\\r\\n        </div>\\r\\n        \\r\\n    </div>\\r\\n    <ng-container [ngSwitch]=\\\"prod.meta.inputMode\\\" >\\r\\n        <div class='div--slider' *ngSwitchCase=\\\"PortTypes.Slider\\\">\\r\\n            <div class = 'slider--container'>\\r\\n                <input class = 'slider-input' [(ngModel)]='prod.args[prod.argCount-1].default'\\r\\n                (focus)='emitClearSelect($event)'\\r\\n                [class.disablePointer]='disableInput'\\r\\n                [style.width.px]='inputSize(prod.args[prod.argCount-1].default,\\\"\\\")'>\\r\\n                <mat-slider\\r\\n                [(ngModel)]='prod.args[prod.argCount-1].default'\\r\\n                thumbLabel\\r\\n                step={{prod.args[prod.argCount-1].step||1}}\\r\\n                min={{prod.args[prod.argCount-1].min||0}}\\r\\n                max={{prod.args[prod.argCount-1].max||100}}></mat-slider>\\r\\n            </div>\\r\\n        </div> \\r\\n    </ng-container>\\r\\n    <div class = 'desc--container'>\\r\\n        <textarea id='{{prod.ID}}_desc' autogrow class='inp--desc' placeholder='Description' \\r\\n        (click)='emitClearSelect($event)'\\r\\n        [class.disablePointer]='disableInput'\\r\\n        [(ngModel)]='prod.meta.description'></textarea>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n<!-- <div class='container container--parameter' *ngIf='prod.meta?.module==\\\"Output\\\"'>\\r\\n    <input class='inp--desc' placeholder='Return Description' [(ngModel)]='prod.meta.description'\\r\\n    [style.width.px]='inputSize(prod.meta.description,\\\"Return Description\\\")'>\\r\\n</div> -->\"","module.exports = \".container {\\n  margin: 5px 0px; }\\n\\n.container--parameter {\\n  margin: 0px 0px 2px 0px;\\n  display: flex;\\n  flex-flow: column nowrap;\\n  color: #808080;\\n  vertical-align: bottom;\\n  border-bottom: 1px solid #808080;\\n  border-left: 1px solid #808080;\\n  overflow: hidden;\\n  width: 100%; }\\n\\n.container--parameter.inputDisabled {\\n    opacity: 0.4; }\\n\\n.container--parameter:hover .btns {\\n    display: inline-flex; }\\n\\n.container--parameter.error {\\n    border: 2px solid #E94858; }\\n\\n.container--parameter.selected {\\n    border-left: 2px solid #00006d;\\n    border-bottom: 2px solid #00006d; }\\n\\n.inline-div {\\n  box-sizing: border-box;\\n  display: inline-block;\\n  height: 18px;\\n  padding-bottom: 3px;\\n  white-space: nowrap; }\\n\\ninput, select {\\n  color: #373737;\\n  background-color: transparent;\\n  border: 2px solid #E6E6E6;\\n  margin: 0px 2px;\\n  height: 15px;\\n  max-width: 95%;\\n  vertical-align: bottom;\\n  padding: 0px 0px 0px 6px;\\n  font-family: sans-serif;\\n  font-size: 12px; }\\n\\ninput:hover, input:focus, select:hover, select:focus {\\n    background-color: white;\\n    color: #373737;\\n    border-color: #00006d; }\\n\\ninput.disabled-input, select.disabled-input {\\n    padding: 0px;\\n    border: none; }\\n\\ninput.disabled-input:hover, select.disabled-input:hover {\\n      background-color: transparent;\\n      color: #808080; }\\n\\ninput.error, select.error {\\n    border: 2px solid #E94858; }\\n\\ninput.disablePointer, select.disablePointer {\\n    pointer-events: none; }\\n\\nselect {\\n  height: 17px; }\\n\\n.btn-container {\\n  width: 100%;\\n  display: flex;\\n  flex-flow: row nowrap;\\n  justify-content: flex-end;\\n  position: relative; }\\n\\n.btns {\\n  display: none;\\n  flex-flow: row-reverse nowrap;\\n  justify-content: flex-end;\\n  padding-right: 8px;\\n  background-color: #fafafb;\\n  position: absolute; }\\n\\n.btns:hover {\\n    display: inline-flex; }\\n\\n.btn {\\n  height: 15px;\\n  width: 15px;\\n  padding: 0px;\\n  background-color: transparent;\\n  border: none;\\n  float: right;\\n  color: #808080; }\\n\\n.btn :hover {\\n    color: #00006d; }\\n\\n.icon {\\n  vertical-align: top;\\n  font-size: 15px;\\n  height: 15px;\\n  width: 15px; }\\n\\n.inp--type--container {\\n  display: flex;\\n  flex-flow: row nowrap;\\n  justify-content: flex-start;\\n  margin-top: 1px;\\n  box-sizing: border-box;\\n  line-height: 15px;\\n  min-width: -webkit-fit-content;\\n  min-width: -moz-fit-content;\\n  min-width: fit-content;\\n  margin-bottom: 2px; }\\n\\n.inp--type--container .input--type {\\n    color: #be8c1e;\\n    font-weight: 550;\\n    font-style: italic;\\n    width: 90px; }\\n\\n.inp--type--container .filebtn {\\n    width: 75px;\\n    height: 18px;\\n    border: none;\\n    margin-left: 2px; }\\n\\n.inp--type--container .filebtn.disablePointer {\\n      pointer-events: none; }\\n\\n.div--slider {\\n  display: flex;\\n  flex-flow: column nowrap; }\\n\\n.div--slider .input--container {\\n    display: inline-flex;\\n    width: 100%;\\n    vertical-align: middle; }\\n\\n.div--slider .input--container .min-max {\\n      white-space: nowrap; }\\n\\n.div--slider .input--container .min-max span {\\n        padding: 0px 2px; }\\n\\n.div--slider .slider--container {\\n    width: 100%;\\n    display: flex;\\n    flex-flow: row nowrap;\\n    padding-right: 50px;\\n    margin-left: 1px; }\\n\\n.div--slider .slider--container .slider-input {\\n      height: 15px;\\n      line-height: 15px;\\n      position: relative;\\n      top: 7px; }\\n\\n.div--slider .slider--container mat-slider {\\n      width: 100%;\\n      height: 30px;\\n      padding: 0px; }\\n\\n.desc--container {\\n  margin-top: 1px;\\n  padding-right: 15px;\\n  box-sizing: border-box;\\n  height: -webkit-fit-content;\\n  height: -moz-fit-content;\\n  height: fit-content; }\\n\\n.desc--container .inp--desc {\\n    margin-left: 3px;\\n    color: #373737;\\n    border: 2px solid #E6E6E6;\\n    background-color: transparent;\\n    padding-left: 5px;\\n    font-family: sans-serif;\\n    font-size: 12px;\\n    min-width: 100%;\\n    resize: none;\\n    height: 15px; }\\n\\n.desc--container .inp--desc:hover, .desc--container .inp--desc:focus {\\n      color: #373737;\\n      border-color: #00006d;\\n      background-color: white; }\\n\\n.desc--container .inp--desc.disablePointer {\\n      pointer-events: none; }\\n\\n.chkbox {\\n  display: none; }\\n\\n/*# sourceMappingURL=data:application/json;base64, */\"","import { Component, Input, Output, EventEmitter, AfterViewInit } from '@angular/core';\r\nimport { IProcedure } from '@models/procedure';\r\nimport { InputType } from '@models/port';\r\nimport { modifyVarArg } from '@shared/parser';\r\nconst keys = Object.keys(InputType);\r\nconst canvas = document.createElement('canvas');\r\nconst ctx = canvas.getContext('2d');\r\nctx.font = '13px Arial';\r\n\r\n@Component({\r\n  selector: 'procedure-input-editor',\r\n  templateUrl: './procedure-input-editor.component.html',\r\n  styleUrls: ['./procedure-input-editor.component.scss']\r\n})\r\nexport class ProcedureInputEditorComponent {\r\n\r\n    @Input() prod: IProcedure;\r\n    @Input() disableInput: boolean;\r\n    @Output() delete = new EventEmitter();\r\n    @Output() deleteC = new EventEmitter();\r\n    @Output() disableProds = new EventEmitter();\r\n    @Output() selectInp = new EventEmitter();\r\n    @Output() updateGlbs = new EventEmitter();\r\n\r\n    PortTypes = InputType;\r\n    PortTypesArr = keys.slice(keys.length / 2);\r\n\r\n    constructor() {\r\n    }\r\n\r\n    selectInput(event: MouseEvent) {\r\n        event.stopPropagation();\r\n        this.selectInp.emit({'ctrl': event.ctrlKey || event.metaKey, 'shift': event.shiftKey, 'prod': this.prod});\r\n    }\r\n\r\n    emitClearSelect(event: MouseEvent) {\r\n        event.stopPropagation();\r\n        this.selectInp.emit('clear');\r\n    }\r\n\r\n    editOptions(): void { }\r\n\r\n    openFileBrowse(id) {\r\n        document.getElementById(`file_${id}`).click();\r\n    }\r\n    onFileChange(event) {\r\n        this.prod.args[this.prod.argCount - 1].default = event.target.files[0];\r\n    }\r\n\r\n    inputSize(val, defaultVal) {\r\n        if (val === undefined || val === '') { return ctx.measureText(defaultVal).width + 8; }\r\n        return ctx.measureText(val).width + 7;\r\n    }\r\n\r\n    // delete this procedure\r\n    deleteProd(): void {\r\n        if (!this.prod.selected) {\r\n            this.deleteC.emit();\r\n        } else {\r\n            this.delete.emit();\r\n        }\r\n    }\r\n\r\n    markDisabled() {\r\n        if (!this.prod.selected) {\r\n            this.prod.enabled = ! this.prod.enabled;\r\n        } else {\r\n            this.disableProds.emit();\r\n        }\r\n    }\r\n\r\n    updateMin(args, event) {\r\n        if (event.type === 'keyup' && event.which !== 13) { return; }\r\n        const currentVal = Number(event.target.value);\r\n        if (currentVal !== 0 && !currentVal) { return; }\r\n        if (Number(args.max) && Number(args.max) < currentVal) {\r\n            args.min = args.max;\r\n            event.target.value = args.min;\r\n        } else {\r\n            args.min = event.target.value;\r\n        }\r\n        if (!args.default || args.default < Number(args.min)) {\r\n            args.default = Number(args.min);\r\n        }\r\n    }\r\n\r\n    updateMax(args, event) {\r\n        if (event.type === 'keyup' && event.which !== 13) { return; }\r\n        const currentVal = Number(event.target.value);\r\n        if (currentVal !== 0 && !currentVal) { return; }\r\n        if (Number(args.min) && Number(args.min) > currentVal) {\r\n            args.max = args.min;\r\n            event.target.value = args.max;\r\n        } else {\r\n            args.max = event.target.value;\r\n        }\r\n        if (!args.default || args.default > Number(args.max)) {\r\n            args.default = Number(args.max);\r\n        }\r\n    }\r\n\r\n    // modify variable input: replace space \" \" with underscore \"_\"\r\n    varMod() {\r\n        if (!this.prod.args[0].value) { return; }\r\n        this.updateGlbs.emit('');\r\n        // this.prod.args[0].value = modifyVarArg(this.prod.args[0]);\r\n    }\r\n\r\n    disableShift(event: MouseEvent) {\r\n        if ((<Element>event.target).tagName === 'INPUT') { return; }\r\n        if (event.shiftKey) {\r\n            event.preventDefault();\r\n        }\r\n    }\r\n\r\n}\r\n","module.exports = \"<div class='container--line' \\r\\n    [class.selected]=\\\"data.selected\\\"\\r\\n    [class.error]=\\\"data.hasError\\\"\\r\\n    [class.disabled]=\\\"!data.enabled\\\"\\r\\n    [class.printing]='data.print'\\r\\n    [class.selectGeom]='data.selectGeom'\\r\\n    [ngSwitch]=\\\"data.type\\\"\\r\\n    (click)='emitSelect($event, data)'\\r\\n    (mousedown)='disableShift($event)'\\r\\n    *ngIf= 'data.type != ProcedureTypes.Return && data.type != ProcedureTypes.Constant'>\\r\\n    <div class='container--item' >\\r\\n        <!-- Variable Assignment Template -->\\r\\n        <div class='line--item' *ngSwitchCase=\\\"ProcedureTypes.Variable\\\">\\r\\n            <input class='input--var'\\r\\n                id='argVar_{{data.ID}}'\\r\\n                [(ngModel)]='data.args[0].value'\\r\\n                [class.error]='data.args[0].invalidVar'\\r\\n                [class.linked]='data.args[0].linked'\\r\\n                [class.disabled]='disableInput'\\r\\n                (focus)='onInputFocus(0, true)'\\r\\n                (blur)='varMod()'\\r\\n                placeholder={{data.args[0].name}}\\r\\n                [style.width.px]='inputSize(data.args[0].value||data.args[0].name)'>  \\r\\n            = \\r\\n            <div style='position:relative; display:inline-block;'>\\r\\n                <input class='input--arg'\\r\\n                [(ngModel)]='data.args[1].value'\\r\\n                [class.error]='data.args[1].invalidVar'\\r\\n                [class.linked]='data.args[1].linked'\\r\\n                [class.disabled]='disableInput'\\r\\n                (focus)='onInputFocus(1)'\\r\\n                (blur)='argMod($event, 1)'\\r\\n                placeholder={{data.args[1].name}}\\r\\n                [style.width.px]='inputSize(data.args[1].value||data.args[1].name)'>\\r\\n                <!-- <p class='input--arg input--arg--p' [innerHTML]='argHighlight(data.args[1].value)'></p> -->\\r\\n            </div>\\r\\n            </div>\\r\\n\\r\\n        <!-- IF Template -->\\r\\n        <ng-container *ngSwitchCase=\\\"ProcedureTypes.If\\\">\\r\\n            <div class='line--item' >\\r\\n                <div class='basic-function-text'>\\r\\n                    If\\r\\n                </div>\\r\\n                <input class='input--arg'\\r\\n                        [(ngModel)]='data.args[0].value'\\r\\n                        [class.error]='data.args[0].invalidVar'\\r\\n                        [class.linked]='data.args[0].linked'\\r\\n                        [class.disabled]='disableInput'\\r\\n                        (focus)='onInputFocus(0)'\\r\\n                        (blur)='argMod($event, 0)'\\r\\n                        placeholder={{data.args[0].name}}\\r\\n                        [style.width.px]='inputSize(data.args[0].value||data.args[0].name)'\\r\\n                        >\\r\\n    \\r\\n            </div>\\r\\n            <div class='container--nested'>\\r\\n                <procedure-item \\r\\n                    *ngFor=\\\"let line of data?.children; let idx=index\\\" \\r\\n                    [data]=\\\"line\\\"\\r\\n                    [disableInput]=\\\"disableInput\\\"\\r\\n                    (select)='selectChild($event, line)'\\r\\n                    (delete)='emitDelete(true)'\\r\\n                    (deleteC)='deleteChild(idx)'\\r\\n                    (notifyError)='emitNotifyError($event)'\\r\\n                    (helpText)='emitHelpText($event)'></procedure-item>\\r\\n            </div>\\r\\n        </ng-container>\\r\\n\\r\\n        <!-- ELSEIF Template -->\\r\\n        <ng-container *ngSwitchCase=\\\"ProcedureTypes.Elseif\\\">\\r\\n            <div class='line--item'>\\r\\n                <div class='basic-function-text'>\\r\\n                    Else if\\r\\n                </div>\\r\\n                \\r\\n            \\r\\n            <input class='input--arg'\\r\\n                    [(ngModel)]='data.args[0].value'\\r\\n                    [class.error]='data.args[0].invalidVar'\\r\\n                    [class.linked]='data.args[0].linked'\\r\\n                    [class.disabled]='disableInput'\\r\\n                    (focus)='onInputFocus(0)'\\r\\n                    (blur)='argMod($event, 0)'\\r\\n                    placeholder={{data.args[0].name}}\\r\\n                    [style.width.px]='inputSize(data.args[0].value||data.args[0].name)'\\r\\n                    >  \\r\\n            </div>\\r\\n            <div class='container--nested'>\\r\\n                <procedure-item \\r\\n                    *ngFor=\\\"let line of data?.children; let idx=index\\\" \\r\\n                    [data]=\\\"line\\\"\\r\\n                    [disableInput]=\\\"disableInput\\\"\\r\\n                    (select)='selectChild($event, line)'\\r\\n                    (delete)='emitDelete(true)'\\r\\n                    (deleteC)='deleteChild(idx)'\\r\\n                    (notifyError)='emitNotifyError($event)'\\r\\n                    (helpText)='emitHelpText($event)'></procedure-item>\\r\\n            </div>\\r\\n        </ng-container>\\r\\n\\r\\n        <!-- ELSE Template -->\\r\\n        <ng-container *ngSwitchCase=\\\"ProcedureTypes.Else\\\">\\r\\n            <div class='line--item'>\\r\\n                <div class='basic-function-text'>\\r\\n                    Else\\r\\n                </div>\\r\\n            </div>\\r\\n                        \\r\\n            <div class='container--nested'>\\r\\n                <procedure-item \\r\\n                    *ngFor=\\\"let line of data?.children; let idx=index\\\" \\r\\n                    [data]=\\\"line\\\"\\r\\n                    [disableInput]=\\\"disableInput\\\"\\r\\n                    (select)='selectChild($event, line)'\\r\\n                    (delete)='emitDelete(true)'\\r\\n                    (deleteC)='deleteChild(idx)'\\r\\n                    (notifyError)='emitNotifyError($event)'\\r\\n                    (helpText)='emitHelpText($event)'></procedure-item>\\r\\n            </div>\\r\\n        </ng-container>\\r\\n    \\r\\n\\r\\n\\r\\n\\r\\n        <!-- BREAK Template -->\\r\\n        <div class='line--item' *ngSwitchCase=\\\"ProcedureTypes.Break\\\">\\r\\n            <div class='basic-function-text'>\\r\\n                Break\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <!-- CONTINUE Template -->\\r\\n        <div class='line--item' *ngSwitchCase=\\\"ProcedureTypes.Continue\\\">\\r\\n            <div class='basic-function-text'>\\r\\n                Continue\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n\\r\\n        <!-- FOREACH Template -->\\r\\n        <ng-container *ngSwitchCase=\\\"ProcedureTypes.Foreach\\\">\\r\\n            <div class='line--item'>\\r\\n                <div class='basic-function-text'>\\r\\n                    Foreach\\r\\n                </div>\\r\\n                <input class='input--arg'\\r\\n                    [(ngModel)]='data.args[0].value'\\r\\n                    [class.error]='data.args[0].invalidVar'\\r\\n                    [class.linked]='data.args[0].linked'\\r\\n                    [class.disabled]='disableInput'\\r\\n                    (focus)='onInputFocus(0, true)'\\r\\n                    (blur)='varMod()'\\r\\n                    placeholder={{data.args[0].name}}\\r\\n                    [style.width.px]='inputSize(data.args[0].value||data.args[0].name)'\\r\\n                    >  \\r\\n                <div class='basic-function-text'>\\r\\n                    in\\r\\n                </div>\\r\\n                <input class='input--arg'\\r\\n                    [(ngModel)]='data.args[1].value'\\r\\n                    [class.error]='data.args[1].invalidVar'\\r\\n                    [class.linked]='data.args[1].linked'\\r\\n                    [class.disabled]='disableInput'\\r\\n                    (focus)='onInputFocus(1)'\\r\\n                    (blur)='argMod($event, 1)'\\r\\n                    placeholder={{data.args[1].name}}\\r\\n                    [style.width.px]='inputSize(data.args[1].value||data.args[1].name)'\\r\\n                        >  \\r\\n                        \\r\\n            </div>\\r\\n                                \\r\\n            <div class='container--nested'>\\r\\n                <procedure-item \\r\\n                    *ngFor=\\\"let line of data?.children; let idx=index\\\" \\r\\n                    [data]=\\\"line\\\"\\r\\n                    [disableInput]=\\\"disableInput\\\"\\r\\n                    (select)='selectChild($event, line)'\\r\\n                    (delete)='emitDelete(true)'\\r\\n                    (deleteC)='deleteChild(idx)'\\r\\n                    (notifyError)='emitNotifyError($event)'\\r\\n                    (helpText)='emitHelpText($event)'></procedure-item>\\r\\n            </div>\\r\\n        </ng-container>\\r\\n    \\r\\n\\r\\n\\r\\n        <!-- WHILE Template -->\\r\\n        <ng-container *ngSwitchCase=\\\"ProcedureTypes.While\\\">\\r\\n            <div class='line--item'>\\r\\n                <div class='basic-function-text'>\\r\\n                    While\\r\\n                </div>\\r\\n                <input class='input--arg' \\r\\n                        [(ngModel)]='data.args[0].value'\\r\\n                        [class.error]='data.args[0].invalidVar'\\r\\n                        [class.linked]='data.args[0].linked'\\r\\n                        [class.disabled]='disableInput'\\r\\n                        (focus)='onInputFocus(0)'\\r\\n                        (blur)='argMod($event, 0)'\\r\\n                        placeholder={{data.args[0].name}}\\r\\n                        [style.width.px]='inputSize(data.args[0].value||data.args[0].name)'\\r\\n                        >  \\r\\n    \\r\\n            </div>\\r\\n                                    \\r\\n            <div class='container--nested'>\\r\\n                <procedure-item \\r\\n                    *ngFor=\\\"let line of data?.children; let idx=index\\\" \\r\\n                    [data]=\\\"line\\\"\\r\\n                    [disableInput]=\\\"disableInput\\\"\\r\\n                    (select)='selectChild($event, line)'\\r\\n                    (delete)='emitDelete(true)'\\r\\n                    (deleteC)='deleteChild(idx)'\\r\\n                    (notifyError)='emitNotifyError($event)'\\r\\n                    (helpText)='emitHelpText($event)'></procedure-item>\\r\\n            </div>\\r\\n        </ng-container>\\r\\n    \\r\\n\\r\\n\\r\\n        <!-- Constant (Not visible) Template -->\\r\\n        <div class='line--item' *ngSwitchCase=\\\"ProcedureTypes.Constant\\\">\\r\\n        </div>\\r\\n        \\r\\n        <!-- Return (Not visible) Template -->\\r\\n        <div class='line--item' *ngSwitchCase=\\\"ProcedureTypes.Return\\\">\\r\\n        </div>\\r\\n        \\r\\n        <!-- Blank (always the first procedure of if/else/else if/for/while) -->\\r\\n        <div class='line--blank' *ngSwitchCase=\\\"ProcedureTypes.Blank\\\">\\r\\n        </div>\\r\\n\\r\\n        <!-- Comment -->\\r\\n        <div class='line--item' *ngSwitchCase=\\\"ProcedureTypes.Comment\\\">\\r\\n            <input class='input--comment' \\r\\n            [(ngModel)]='data.args[0].value'\\r\\n            [class.disabled]='disableInput'\\r\\n            placeholder='Comment'\\r\\n            [style.width.px]='inputSize(data.args[0].value||\\\"Comment\\\")'\\r\\n            >\\r\\n        </div>\\r\\n\\r\\n        \\r\\n        <!-- Function Template -->\\r\\n        <div class='line--item' *ngSwitchCase=\\\"ProcedureTypes.Function\\\">\\r\\n            <ng-container *ngIf=\\\"data.args[0].name !=='__none__'\\\">\\r\\n                <input class='input--var'\\r\\n                [(ngModel)]='data.args[0].value'\\r\\n                [class.error]='data.args[0].invalidVar'\\r\\n                [class.linked]='data.args[0].linked'\\r\\n                [class.disabled]='disableInput'\\r\\n                (focus)='onInputFocus(0, true)'\\r\\n                (blur)='varMod()'\\r\\n                placeholder={{data.args[0].name}}\\r\\n                [style.width.px]='inputSize(data.args[0].value||data.args[0].name)'>  \\r\\n                = \\r\\n\\r\\n            </ng-container>\\r\\n            <div class='function-text'><span class='module-name'>{{data.meta.module}}.</span>{{data.meta.name}} </div>\\r\\n\\r\\n            <ng-container *ngFor='let p of data.args.slice(1);let i=index'>\\r\\n                <select class='input--arg' [(ngModel)]='p.value' *ngIf=\\\"checkEnum(p, i); else default_template\\\" >\\r\\n                    <option *ngFor='let opt of getEnum(i)' value=\\\"'{{opt}}'\\\">{{opt}}</option>\\r\\n                    <!--\\r\\n                        <option *ngFor='let opt of Modules[data.meta.module][ModuleDoc[data.meta.module][data.meta.name].parameters[i].type]' value={{opt}}>{{opt}}</option>\\r\\n                    -->\\r\\n                </select>    \\r\\n                \\r\\n                <ng-template #default_template>\\r\\n                    <input class='input--arg' \\r\\n                    *ngIf=\\\"p.name[0] !== '_'\\\" \\r\\n                    [(ngModel)]='p.value'\\r\\n                    [class.error]='p.invalidVar'\\r\\n                    [class.linked]='p.linked'\\r\\n                    [class.disabled]='disableInput'\\r\\n                    (focus)='onInputFocus(i+1)'\\r\\n                    (blur)='argMod($event, i+1)'\\r\\n                    placeholder={{p.name}}\\r\\n                    [style.width.px]='inputSize(p.value||p.name)'\\r\\n                    >\\r\\n                </ng-template>\\r\\n\\r\\n            </ng-container>\\r\\n\\r\\n        </div>\\r\\n\\r\\n        <!-- Imported Function Template -->\\r\\n        <div class='line--item' *ngSwitchCase=\\\"ProcedureTypes.Imported\\\">\\r\\n            <ng-container *ngIf=\\\"data.args[0].name !=='__none__'\\\">\\r\\n                <input class='input--var'\\r\\n                    [(ngModel)]='data.args[0].value'\\r\\n                    [class.error]='data.args[0].invalidVar'\\r\\n                    [class.linked]='data.args[0].linked'\\r\\n                    [class.disabled]='disableInput'\\r\\n                    (focus)='onInputFocus(0, true)'\\r\\n                    (blur)='varMod()'\\r\\n                    placeholder={{data.args[0].name}}\\r\\n                    [style.width.px]='inputSize(data.args[0].value||data.args[0].name)'>\\r\\n                = \\r\\n            </ng-container>\\r\\n            <div class='function-text'><span class='module-name'>user.</span>{{data.meta.name}} </div> \\r\\n            \\r\\n            <ng-container *ngFor='let p of data.args.slice(1);let i=index'>\\r\\n                <input class='input--arg' \\r\\n                    *ngIf='p.type !== 5'\\r\\n                    [(ngModel)]='p.value'\\r\\n                    [class.error]='p.invalidVar'\\r\\n                    [class.linked]='p.linked'\\r\\n                    [class.disabled]='disableInput'\\r\\n                    (focus)='onInputFocus(i+1)'\\r\\n                    (blur)='argMod($event, i+1)'\\r\\n                    placeholder={{p.name}}\\r\\n                    [style.width.px]='inputSize(p.value||p.name)'>    \\r\\n            </ng-container>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class = \\\"btn-container\\\">\\r\\n        <div class = \\\"btns\\\">\\r\\n            <!-- delete button-->\\r\\n            <!-- <button id = 'delete-btn' *ngIf='data.type != ProcedureTypes.Blank && data.type != ProcedureTypes.Return' class='btn' mat-icon-button title=\\\"Delete Procedure\\\" (click)=\\\"emitDelete()\\\" tabindex=\\\"-1\\\">\\r\\n                <mat-icon class='icon'>delete_outline</mat-icon>\\r\\n            </button> -->\\r\\n            <!-- Disable button-->\\r\\n            <button id = 'disable-btn' *ngIf='data.type != ProcedureTypes.Blank && data.type != ProcedureTypes.Comment' class='btn' mat-icon-button title=\\\"Disable Procedure\\\" (click)='markDisabled($event)' tabindex=\\\"-1\\\">\\r\\n                <mat-icon class='icon'>tv_off</mat-icon>\\r\\n            </button>\\r\\n            <!-- Select button -->\\r\\n            <button id = 'selectGeom-btn' *ngIf='canSelectGeom()' class='btn' mat-icon-button title=\\\"Select Geometry Result In Viewer\\\" (click)=\\\"markSelectGeom($event)\\\" tabindex=\\\"-1\\\">\\r\\n                <mat-icon class='icon'>near_me</mat-icon>\\r\\n            </button>\\r\\n            <!-- Print button-->\\r\\n            <button id = 'print-btn' *ngIf='canBePrinted()' class='btn' mat-icon-button title=\\\"Print Result In Console\\\" (click)='markPrint($event)' tabindex=\\\"-1\\\">\\r\\n                <mat-icon class='icon'>print</mat-icon>\\r\\n            </button>\\r\\n            <!-- help button-->\\r\\n            <button *ngIf='haveHelpText()' class='btn' mat-icon-button title=\\\"Help\\\" tabindex=\\\"-1\\\" (click)='emitHelpText(undefined)'>\\r\\n                <mat-icon class='icon'>help</mat-icon>\\r\\n            </button>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\"","module.exports = \".container--nested {\\n  padding-left: 0px; }\\n\\n.container--line {\\n  background-color: transparent;\\n  font-size: 12px;\\n  margin: 0px 5px 2px 8px;\\n  padding: 0px;\\n  padding-bottom: 1px;\\n  padding-left: 2px;\\n  border-bottom: 1px solid #999999;\\n  border-left: 1px solid #999999;\\n  color: #808080;\\n  opacity: 1;\\n  display: flex;\\n  flex-flow: column nowrap;\\n  justify-content: space-between;\\n  flex-grow: 0;\\n  flex-shrink: 0;\\n  overflow-x: hidden;\\n  width: calc(100% - 15px); }\\n\\n.container--line.disabled {\\n    opacity: 0.4; }\\n\\n.container--line.disabled .btns {\\n      display: inline-flex; }\\n\\n.container--line.disabled .btns #disable-btn {\\n        display: flex;\\n        justify-content: center; }\\n\\n.container--line.disabled .btns #disable-btn:hover {\\n          color: #00006d; }\\n\\n.container--line.disabled.selected {\\n      border-bottom: 2px solid #00006d; }\\n\\n.container--line.disabled:hover .btns #disable-btn {\\n      order: 0; }\\n\\n.container--line.disabled .input--var, .container--line.disabled .input--arg {\\n    border: 2px solid #E6E6E6 !important; }\\n\\n.container--line.selected {\\n    border-bottom: 2px solid #00006d;\\n    border-left: 2px solid #00006d;\\n    padding-bottom: 0px;\\n    padding-left: 1px; }\\n\\n.container--line.printing:not(.disabled) {\\n    border-bottom: 2px solid #82bf6e;\\n    border-left: 2px solid #82bf6e;\\n    padding-bottom: 0px;\\n    padding-left: 1px; }\\n\\n.container--line.printing:not(.disabled) #print-btn {\\n      color: #82bf6e;\\n      background-color: #fafafb; }\\n\\n.container--line.printing:not(.disabled):hover {\\n      background-color: #e6ffdd; }\\n\\n.container--line.printing:not(.disabled):hover #print-btn {\\n        background-color: transparent; }\\n\\n.container--line.printing:not(.disabled).selected {\\n      border-bottom: 2px solid #00006d;\\n      background-color: #e6ffdd; }\\n\\n.container--line.printing:not(.disabled).selected #print-btn {\\n        background-color: transparent; }\\n\\n.container--line.printing .btns {\\n    display: inline-flex; }\\n\\n.container--line.printing .btns .btn {\\n      background-color: inherit; }\\n\\n.container--line.printing .btns #print-btn {\\n      display: flex;\\n      justify-content: center; }\\n\\n.container--line.printing .btns #print-btn:hover {\\n        color: #00006d; }\\n\\n.container--line.printing.selected {\\n    border-bottom: 2px solid #00006d;\\n    background-color: #e6ffdd; }\\n\\n.container--line.printing:hover .btns #print-btn {\\n    order: 1; }\\n\\n.container--line.selectGeom:not(.disabled) {\\n    border-bottom: 2px solid #ffae00;\\n    padding-bottom: 0px;\\n    padding-left: 1px; }\\n\\n.container--line.selectGeom:not(.disabled) #selectGeom-btn {\\n      color: #ffae00;\\n      background-color: #fafafb; }\\n\\n.container--line.selectGeom:not(.disabled):hover {\\n      background-color: #ffe1a0; }\\n\\n.container--line.selectGeom:not(.disabled):hover #selectGeom-btn {\\n        background-color: transparent; }\\n\\n.container--line.selectGeom:not(.disabled).selected {\\n      border-bottom: 2px solid #00006d;\\n      background-color: #ffe1a0; }\\n\\n.container--line.selectGeom:not(.disabled).selected #selectGeom-btn {\\n        background-color: transparent; }\\n\\n.container--line.selectGeom .btns {\\n    display: inline-flex; }\\n\\n.container--line.selectGeom .btns .btn {\\n      background-color: inherit; }\\n\\n.container--line.selectGeom .btns #selectGeom-btn {\\n      display: flex;\\n      justify-content: center; }\\n\\n.container--line.selectGeom .btns #selectGeom-btn:hover {\\n        color: #00006d; }\\n\\n.container--line.selectGeom.selected {\\n    border-bottom: 2px solid #00006d;\\n    background-color: #ffe1a0; }\\n\\n.container--line.selectGeom:hover .btns #selectGeom-btn {\\n    order: 1; }\\n\\n.container--line.error:not(.disabled) {\\n    border-bottom: 2px solid #E94858;\\n    border-left: 2px solid #E94858;\\n    padding-bottom: 0px;\\n    padding-left: 1px; }\\n\\n.container--line.error:not(.disabled) .btn {\\n      background-color: inherit; }\\n\\n.container--line.error:not(.disabled).selected {\\n      border-bottom: 2px solid #00006d;\\n      background-color: #ffdce0; }\\n\\n.container--line.error:not(.disabled):hover {\\n      background-color: #ffdce0; }\\n\\n.container--line .input--var {\\n    font-size: 12px;\\n    min-width: 10px;\\n    background-color: #fafafb;\\n    margin-right: 5px;\\n    border: 2px solid #E6E6E6;\\n    padding-left: 6px; }\\n\\n.container--line .input--var.linked {\\n      border: 2px solid #ffae00; }\\n\\n.container--line .input--var.error {\\n      border: 2px solid #E94858; }\\n\\n.container--line .input--var:focus, .container--line .input--var:hover {\\n      border-color: #00006d;\\n      background-color: white; }\\n\\n.container--line .input--var.disabled {\\n      pointer-events: none; }\\n\\n.container--line .input--arg {\\n    font-size: 12px;\\n    resize: horizontal;\\n    min-width: 10px;\\n    background-color: #fafafb;\\n    margin-left: 5px;\\n    border: 2px solid #E6E6E6;\\n    padding-left: 6px; }\\n\\n.container--line .input--arg.linked {\\n      border: 2px solid #ffae00; }\\n\\n.container--line .input--arg.error {\\n      border: 2px solid #E94858; }\\n\\n.container--line .input--arg:focus, .container--line .input--arg:hover {\\n      border-color: #00006d;\\n      background-color: white; }\\n\\n.container--line .input--arg.disabled {\\n      pointer-events: none; }\\n\\n.container--line .input--comment {\\n    font-size: 12px;\\n    resize: horizontal;\\n    min-width: 200px;\\n    color: darkgreen;\\n    font-style: italic;\\n    background-color: transparent;\\n    margin: 2px;\\n    border: 0px;\\n    border-left: 2px solid darkgreen;\\n    padding-left: 3px; }\\n\\n.container--line .input--comment.disabled {\\n      pointer-events: none; }\\n\\n.container--line:hover {\\n    background-color: #E6E6E6; }\\n\\n.container--line:hover .btn {\\n      background-color: inherit; }\\n\\n.container--item {\\n  position: relative;\\n  padding-bottom: 2px;\\n  border: none;\\n  display: inline-block;\\n  width: 100%;\\n  white-space: nowrap;\\n  overflow-x: scroll; }\\n\\n.container--item::-webkit-scrollbar {\\n    height: 3px; }\\n\\n.container--item::-webkit-scrollbar-track {\\n    background: transparent; }\\n\\n.container--item::-webkit-scrollbar-thumb {\\n    background: transparent; }\\n\\n.container--item::-webkit-scrollbar-thumb:hover {\\n    background: #808080; }\\n\\n.container--item:hover::-webkit-scrollbar-thumb {\\n    background: #808080; }\\n\\n.container--item:hover + .btn-container .btns {\\n  display: inline-flex; }\\n\\n.container--item:hover + .btn-container .btns .btn {\\n    display: flex;\\n    justify-content: center;\\n    background-color: inherit; }\\n\\n.btn-container {\\n  position: relative;\\n  width: 100%;\\n  display: flex;\\n  flex-flow: row nowrap;\\n  background-color: inherit;\\n  justify-content: flex-end;\\n  order: -1;\\n  z-index: 2; }\\n\\n.btn-container:hover .btns {\\n    display: inline-flex; }\\n\\n.btn-container:hover .btns .btn {\\n      display: flex;\\n      justify-content: center;\\n      background-color: inherit; }\\n\\n.btns {\\n  position: absolute;\\n  display: none;\\n  flex-flow: row-reverse nowrap;\\n  justify-content: flex-end;\\n  background-color: inherit; }\\n\\n.btns:hover {\\n    display: inline-flex; }\\n\\n.btn {\\n  width: 15px;\\n  background-color: #fafafb;\\n  border: none;\\n  color: #808080;\\n  display: none;\\n  overflow: hidden;\\n  vertical-align: center;\\n  order: 4; }\\n\\n.btn:hover {\\n    color: #00006d; }\\n\\n.icon {\\n  vertical-align: center;\\n  width: 15px;\\n  height: 17px;\\n  margin: 1px;\\n  font-size: 12px; }\\n\\n.line--item {\\n  color: #808080;\\n  display: inline-block;\\n  padding-right: 60px; }\\n\\n.line--blank {\\n  height: 8px; }\\n\\n.line--blank:hover {\\n    background-color: white;\\n    border-color: #00006d; }\\n\\n/*\\r\\n.hasChildren::before{\\r\\n    content: '\\\\25B6';\\r\\n    position: absolute;\\r\\n    left: 3px;\\r\\n    font-size: 8px;\\r\\n}\\r\\n*/\\n\\n.function-text {\\n  display: inline-block;\\n  white-space: nowrap;\\n  font-style: italic;\\n  color: #be8c1e;\\n  font-weight: 550;\\n  text-align: center;\\n  min-height: 17px; }\\n\\n.function-text .module-name {\\n    color: #00006d; }\\n\\n.basic-function-text {\\n  display: inline-block;\\n  white-space: nowrap;\\n  font-style: italic;\\n  color: #c84696;\\n  font-weight: 550;\\n  text-align: center;\\n  min-height: 17px; }\\n\\n.basic-function-text .module-name {\\n    color: #00006d; }\\n\\r\\n/*# sourceMappingURL=data:application/json;base64, */\"","import { Component, Input, Output,  EventEmitter} from '@angular/core';\r\n\r\nimport { IProcedure, ProcedureTypes } from '@models/procedure';\r\nimport { ModuleDocList } from '@shared/decorators';\r\n\r\nimport { _parameterTypes} from '@modules';\r\n\r\nimport { inline_func } from '@assets/core/inline/inline';\r\nimport * as Modules from '@modules';\r\nimport { DataService } from '@services';\r\nimport { IArgument } from '@models/code';\r\n\r\nimport { parseArgument, parseVariable, checkValidVar, modifyVar, modifyArgument, checkNodeValidity} from '@shared/parser';\r\n\r\nconst canvas = document.createElement('canvas');\r\nconst ctx = canvas.getContext('2d');\r\nctx.font = '12px Arial';\r\n\r\n@Component({\r\n    selector: 'procedure-item',\r\n    templateUrl: './procedure-item.component.html',\r\n    styleUrls: ['procedure-item.component.scss']\r\n})\r\nexport class ProcedureItemComponent {\r\n    @Input() data: IProcedure;\r\n    @Input() disableInput: boolean;\r\n    @Output() delete = new EventEmitter();\r\n    @Output() deleteC = new EventEmitter();\r\n    @Output() select = new EventEmitter();\r\n    @Output() copied = new EventEmitter();\r\n    @Output() pasteOn = new EventEmitter();\r\n    @Output() helpText = new EventEmitter();\r\n    @Output() notifyError = new EventEmitter();\r\n\r\n    ProcedureTypes = ProcedureTypes;\r\n\r\n    private keys = Object.keys(ProcedureTypes);\r\n    ProcedureTypesArr = this.keys.slice(this.keys.length / 2);\r\n    ModuleDoc = ModuleDocList;\r\n\r\n    constructor(private dataService: DataService) {\r\n    }\r\n\r\n    // select this procedure\r\n    emitSelect(event: MouseEvent, procedure: IProcedure) {\r\n        event.stopPropagation();\r\n        this.select.emit({'ctrl': event.ctrlKey || event.metaKey, 'shift': event.shiftKey, 'prod': procedure});\r\n    }\r\n\r\n    disableShift(event: MouseEvent) {\r\n        if ((<Element>event.target).tagName === 'INPUT') { return; }\r\n        if (event.shiftKey) {\r\n            event.preventDefault();\r\n        }\r\n    }\r\n\r\n    // select child procedure (after receiving emitSelect from child procedure)\r\n    selectChild(event, procedure: IProcedure) {\r\n        this.select.emit(event);\r\n    }\r\n\r\n    markSelectGeom(event: MouseEvent) {\r\n        event.stopPropagation();\r\n        if (!this.data.selectGeom) {\r\n            this.unselectGeomRecursive(this.dataService.node.procedure);\r\n        }\r\n        this.data.selectGeom = !this.data.selectGeom;\r\n    }\r\n\r\n    unselectGeomRecursive(prodList: IProcedure[]): boolean {\r\n        for (const prod of prodList) {\r\n            if (prod.selectGeom) {\r\n                prod.selectGeom = false;\r\n                return true;\r\n            }\r\n            if (prod.children) {\r\n                if (this.unselectGeomRecursive(prod.children)) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n\r\n    markPrint(event: MouseEvent) {\r\n        event.stopPropagation();\r\n        if (!this.data.selected) {\r\n            this.data.print = !this.data.print;\r\n            return;\r\n        }\r\n        const prodList = this.dataService.node.state.procedure;\r\n        let newPrint;\r\n        let i = prodList.length - 1;\r\n        while (i >= 0 && !(prodList[i].argCount > 0 && prodList[i].args[0].name === 'var_name')) {\r\n            i--;\r\n        }\r\n        if (i === -1) { return; }\r\n        newPrint = ! prodList[i].print;\r\n        for (const prod of prodList) {\r\n            if (prod.argCount > 0 && prod.args[0].name === 'var_name') {\r\n                prod.print = newPrint;\r\n            }\r\n        }\r\n        // this.data.print = !this.data.print;\r\n    }\r\n\r\n    markDisabled(event: MouseEvent) {\r\n        event.stopPropagation();\r\n        if (!this.data.selected) {\r\n            this.data.enabled = !this.data.enabled;\r\n            return;\r\n        }\r\n        const prodList = this.dataService.node.state.procedure;\r\n        const newEnabled = ! prodList[prodList.length - 1].enabled;\r\n        for (const prod of prodList) {\r\n            if (prod.type === ProcedureTypes.Blank || prod.type === ProcedureTypes.Comment) { continue; }\r\n            prod.enabled = newEnabled;\r\n        }\r\n        // this.data.enabled = !this.data.enabled;\r\n    }\r\n\r\n    // delete child procedure (after receiving emitDelete from child procedure)\r\n    deleteChild(index: number): void {\r\n        this.dataService.registerEdtAction([{'type': 'del', 'parent': this.data, 'index': index, 'prod': this.data.children[index]}]);\r\n        this.data.children.splice(index, 1);\r\n    }\r\n\r\n\r\n    // delete this procedure\r\n    emitDelete(check?: boolean): void {\r\n        if (check) {\r\n            this.delete.emit();\r\n        } else if (! this.data.selected) {\r\n            this.deleteC.emit();\r\n        } else {\r\n            this.delete.emit();\r\n        }\r\n    }\r\n\r\n    canBePrinted() {\r\n        return this.data.argCount > 0 && this.data.args[0].name === 'var_name';\r\n    }\r\n\r\n    canSelectGeom() {\r\n        const check = this.data.argCount > 0 && this.data.args[0].name === 'var_name';\r\n        if (!check) { return false; }\r\n        if (this.data.type !== ProcedureTypes.Function) { return true; }\r\n        const returns = this.ModuleDoc[this.data.meta.module][this.data.meta.name].returns;\r\n        if (returns.length < 5) { return false; }\r\n        if (returns.slice(0, 5).toLowerCase() === 'entit') {return true; }\r\n        return false;\r\n    }\r\n\r\n    haveHelpText() {\r\n        return (this.data.type === 8 || this.data.type ===  9);\r\n    }\r\n\r\n    emitHelpText($event) {\r\n        if ($event) {\r\n            this.helpText.emit($event);\r\n            return;\r\n        }\r\n        try {\r\n            if (this.data.type === ProcedureTypes.Imported) {\r\n                this.helpText.emit(this.data.meta.name);\r\n                // this.helpText.emit(this.ModuleDoc[this.data.meta.module][this.data.meta.name]);\r\n\r\n            } else {\r\n            this.helpText.emit(this.ModuleDoc[this.data.meta.module][this.data.meta.name]);\r\n            }\r\n        } catch (ex) {\r\n            this.helpText.emit('error');\r\n        }\r\n\r\n    }\r\n\r\n    // modify variable input: replace space \" \" with underscore \"_\"\r\n    varMod() {\r\n        modifyVar(this.data, this.dataService.node.procedure);\r\n        checkNodeValidity(this.dataService.node);\r\n    }\r\n\r\n\r\n    // modify argument input: check if input is valid\r\n    argMod(event: Event, argIndex: number) {\r\n        // this.dataService.focusedInput = [event.target, (<HTMLInputElement>event.target).selectionStart];\r\n        this.dataService.focusedInput = event.target;\r\n        if (!this.data.args[argIndex].value) { return; }\r\n        modifyArgument(this.data, argIndex, this.dataService.node.procedure);\r\n        this.clearLinkedArgs(this.dataService.node.procedure);\r\n    }\r\n\r\n    clearLinkedArgs(prodList: IProcedure[]) {\r\n        for (const prod of prodList) {\r\n            if (prod.children) {\r\n                this.clearLinkedArgs(prod.children);\r\n            }\r\n            for (const arg of prod.args) {\r\n                arg.linked = false;\r\n            }\r\n        }\r\n    }\r\n\r\n    // argHighlight(value: any) {\r\n    //     return value.replace(\r\n    //         inline_fn_regEx, '<span class = \"inline-function\">' + value.match(inline_fn_regEx) + '</span>'\r\n    //     );\r\n    // }\r\n\r\n    inputSize(val) {\r\n        return ctx.measureText(val).width + 7;\r\n    }\r\n\r\n\r\n    onInputFocus(index: number, isVar?: boolean) {\r\n        for (const prod of this.dataService.node.state.procedure) {\r\n            prod.selected = false;\r\n        }\r\n        this.dataService.node.state.procedure = [];\r\n        if (this.data.args[index].invalidVar && typeof this.data.args[index].invalidVar === 'string') {\r\n            this.emitNotifyError(this.data.args[index].invalidVar);\r\n        } else if (isVar) {\r\n            if (this.data.variable) {\r\n                this.markLinkedArguments(this.data.variable, this.dataService.node.procedure);\r\n            } else if (this.data.args[index].usedVars && this.data.args[index].usedVars[0]) {\r\n                this.markLinkedArguments(this.data.args[index].usedVars[0], this.dataService.node.procedure);\r\n            }\r\n        } else if (this.data.args[index].usedVars) {\r\n            for (const varName of this.data.args[index].usedVars) {\r\n                this.markLinkedArguments(varName, this.dataService.node.procedure);\r\n            }\r\n        }\r\n    }\r\n\r\n    markLinkedArguments(varName: string, nodeList: IProcedure[]) {\r\n        for (const prod of nodeList) {\r\n            if (prod.children) {\r\n                this.markLinkedArguments(varName, prod.children);\r\n            }\r\n            if (prod === this.data) {continue; }\r\n            for (const arg of prod.args) {\r\n                if (arg.name === '__none__' || !arg.usedVars || arg.usedVars.length === 0) {continue; }\r\n                if (arg.usedVars.indexOf(varName) !== -1) {\r\n                    arg.linked = true;\r\n                }\r\n            }\r\n            if (prod.variable === varName) {\r\n                prod.args[0].linked = true;\r\n            }\r\n        }\r\n    }\r\n\r\n    emitNotifyError(message) {\r\n        this.notifyError.emit(message);\r\n    }\r\n\r\n    checkEnum(param, index: number): boolean {\r\n        try {\r\n            if (param.name[0] === '_') {\r\n                return false;\r\n            }\r\n            // @ts-ignore\r\n            const arg = this.ModuleDoc[this.data.meta.module][this.data.meta.name].parameters[index];\r\n            if (arg.description.toLowerCase().indexOf('enum') === -1 || !Modules[this.data.meta.module][arg.type]) {\r\n                return false;\r\n            }\r\n            return true;\r\n        } catch (ex) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    getEnum(index: number) {\r\n        // @ts-ignore\r\n        const enm = Modules[this.data.meta.module][this.ModuleDoc[this.data.meta.module][this.data.meta.name].parameters[index].type];\r\n        const enumList = [];\r\n        for (const i in enm) {\r\n            if (! enm.hasOwnProperty(i)) {\r\n                continue;\r\n            }\r\n            enumList.push(enm[i]);\r\n        }\r\n        return enumList;\r\n    }\r\n}\r\n","module.exports = \"<!--Divider-->\\r\\n\\r\\n<div class = \\\"toolset--body\\\" (mouseover)='setCurrent($event)'>\\r\\n    <div [hidden]=\\\"getNode().type == 'start' && !getViewOutput()\\\">\\r\\n        <ng-container>\\r\\n            <!-- basic functions: variable, if, else, else if, for, while, continue, break -->\\r\\n        \\r\\n            <button id='basic-funcs' class=\\\"accordion\\\" \\r\\n            (click)='toggleAccordion(\\\"basic-funcs\\\")' >Basic</button>\\r\\n            <div class=\\\"panel\\\">\\r\\n                <ul class='toolset__functions--subset'>\\r\\n                    <ng-container *ngFor=\\\"let type of ProcedureTypesArr\\\">\\r\\n                        <li *ngIf=\\\"8 > ProcedureTypes[type] || ProcedureTypes[type] == 14\\\"\\r\\n                        class='tooltip-basic'\\r\\n                        [class.invalid]='checkInvalid(type)'\\r\\n                        [class.basic]='true'\\r\\n                        (click)='add(ProcedureTypes[type])'> \\r\\n                            {{type}}\\r\\n                        </li>\\r\\n                    </ng-container>\\r\\n                </ul>\\r\\n            </div>\\r\\n            \\r\\n            <!--Divider-->\\r\\n            <div class = \\\"divider\\\"></div>\\r\\n            <button id='Functions' class=\\\"accordion\\\"  (click)='toggleAccordionHead(\\\"Functions\\\")'>Functions\\r\\n            </button>\\r\\n            <!--Search Bar-->\\r\\n            <div class = 'searchbar--container'>\\r\\n                <input id='searchbarFunction' class='searchBar' placeholder='Search' (keyup)='searchFunction($event)'/>\\r\\n                <div class=\\\"panel\\\" [class.opened] = 'true' *ngIf='searchedFunctions.length > 0'>\\r\\n                    <ul class='toolset__functions--subset'>\\r\\n                        <ng-container *ngFor='let fn of searchedFunctions'>\\r\\n                            <li *ngIf='fn.type==\\\"function\\\"'\\r\\n                            (click)='add_function(fn.data)'>\\r\\n                                <span class='module-name'>{{fn.module}}.</span>{{fn.name}}\\r\\n                            </li>\\r\\n                            <li *ngIf='fn.type==\\\"imported\\\"'\\r\\n                            (click)='add_imported_function(fn.data)'>\\r\\n                                <span class='module-name'>user.</span>{{fn.name}}\\r\\n                            </li>\\r\\n                        </ng-container>\\r\\n                    </ul>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"panel\\\">\\r\\n                                        \\r\\n                <!-- functions from core.modules -->\\r\\n                <ng-container *ngFor='let mod of Modules' >\\r\\n                    <button id='{{mod.module}}' class=\\\"accordion\\\" \\r\\n                    (click)='toggleAccordion(mod.module)' >{{ mod.module }}</button>\\r\\n                    <div class=\\\"panel\\\">\\r\\n                        <ul class='toolset__functions--subset'>\\r\\n                            <ng-container *ngFor='let fn of mod.functions'>\\r\\n                                <div class='tooltip'\\r\\n                                (mouseenter)='popupTooltip($event, fn.doc)'\\r\\n                                (mouseleave)='turnoffTooltip()'>\\r\\n                                    <li (click)='add_function(fn)'> \\r\\n                                        {{fn.name}} \\r\\n                                    </li>\\r\\n                                    <!-- <span class=\\\"tooltiptext\\\" [innerHTML]='fn.doc'></span> -->\\r\\n                                </div>\\r\\n                            </ng-container>\\r\\n                            <!--Divider-->\\r\\n                            <div class = \\\"divider--in\\\"></div>\\r\\n                        </ul>\\r\\n                    </div>\\r\\n                </ng-container>\\r\\n                <!-- imported functions -->\\r\\n                <ng-container>\\r\\n                    <button id='imported' class=\\\"accordion\\\" \\r\\n                    (click)='toggleAccordion(\\\"imported\\\")' >user</button>\\r\\n                    <div class=\\\"panel\\\">\\r\\n                        <ul class='toolset__functions--subset'>\\r\\n                            <li class = 'user--add'>\\r\\n                                <button class = 'add-btn' onclick=\\\"document.getElementById('selectedFile').click();\\\" title=\\\"Import Function from File\\\">\\r\\n                                        Import\\r\\n                                        <!--<mat-icon class='add-icon'>open_in_browser</mat-icon>-->\\r\\n                                </button>\\r\\n                            </li>\\r\\n                            <div class='tooltip user--def' *ngFor='let fn of getFlowchart().functions'>\\r\\n                                <div class = 'user--def-lnContainer'\\r\\n                                (mouseenter)='popupTooltip($event, assembleImportedTooltip(fn.doc))'\\r\\n                                (mouseleave)='turnoffTooltip()'>\\r\\n                                    <li (click)='add_imported_function(fn)'> {{fn.name}} \\r\\n                                    </li>\\r\\n                                    <div class = 'btn--container'>\\r\\n                                        <button class='importedFunc-btn' (click)='delete_imported_function(fn)'>\\r\\n                                            <mat-icon class='importedFunc-btn-icon'>close</mat-icon>\\r\\n                                        </button>\\r\\n                                        <button class='importedFunc-btn' (click)='downloadImported($event, fn)'>\\r\\n                                            <mat-icon class='importedFunc-btn-icon'>get_app</mat-icon>\\r\\n                                        </button>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            \\r\\n                        </ul>\\r\\n    \\r\\n                        <input type=\\\"file\\\" id=\\\"selectedFile\\\" (change)=\\\"import_function($event)\\\" style=\\\"display: none;\\\" />  \\r\\n                    </div>\\r\\n                </ng-container>\\r\\n            </div>\\r\\n            \\r\\n            <!--Divider-->\\r\\n            <div class = \\\"divider\\\"></div>\\r\\n            \\r\\n            <button id='Inline' class=\\\"accordion\\\"  (click)='toggleAccordionHead(\\\"Inline\\\")'>Inline\\r\\n            </button>\\r\\n            <!--Search Bar-->\\r\\n            <div class = 'searchbar--container'>\\r\\n                <input id='searchbarInline' class='searchBar' placeholder='Search' (keyup)='searchInline($event)'/>\\r\\n                <div class=\\\"panel\\\" [class.opened] = 'true' *ngIf='searchedInlines.length > 0'>\\r\\n                    <ul class='toolset__functions--subset inline_set'>\\r\\n                        <ng-container *ngFor='let fnString of searchedInlines'>\\r\\n                            <li (click)='add_inline(fnString)'>\\r\\n                                {{fnString}}\\r\\n                            </li>\\r\\n                        </ng-container>\\r\\n                    </ul>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"panel\\\">\\r\\n                <button id='globals' class=\\\"accordion inline--cat\\\"  (click)='toggleAccordion(\\\"globals\\\", true)'>Globals</button>\\r\\n                <div class=\\\"panel\\\">\\r\\n                    <ul class='toolset__functions--subset inline_set'>\\r\\n                        <ng-container *ngFor='let cnst of getFlowchart().nodes[0].procedure'>\\r\\n                            <li *ngIf='cnst.type === 10' (click)='add_inline(cnst.args[cnst.argCount-2].value)'>\\r\\n                                {{cnst.args[cnst.argCount-2].value}}\\r\\n                            </li>\\r\\n                        </ng-container>\\r\\n                    </ul>\\r\\n                    <!--Divider-->\\r\\n                    <div class = \\\"divider--in\\\"></div>\\r\\n                </div>\\r\\n    \\r\\n                <button id='inlineExpr' class=\\\"accordion inline--cat\\\"  (click)='toggleAccordion(\\\"inlineExpr\\\", true)'>Expressions</button>\\r\\n                <div class=\\\"panel\\\">\\r\\n                    <button id='inlineQueryExpr' class=\\\"accordion\\\" (click)='toggleAccordion(\\\"inlineQueryExpr\\\", true)'>Inline Query Expr</button>\\r\\n                    <div class=\\\"panel\\\">\\r\\n                        <ul class='toolset__functions--subset inline_set'>\\r\\n                            <li *ngFor='let expr of inlineQueryExpr' (click)='add_inline(expr[0])' title='{{expr[1]}}'>\\r\\n                                {{expr[0]}}\\r\\n                            </li>\\r\\n                            <!-- <li *ngFor='let expr of inlineQueryExpr' (click)='add_inline(expr)' title='{{expr}}'>\\r\\n                                {{expr}}\\r\\n                            </li> -->\\r\\n                        </ul>\\r\\n                        <!--Divider-->\\r\\n                        <div class = \\\"divider--in\\\"></div>\\r\\n                    </div>\\r\\n                    <button id='inlineSortExpr' class=\\\"accordion\\\" (click)='toggleAccordion(\\\"inlineSortExpr\\\", true)'>Inline Sort Expr</button>\\r\\n                    <div class=\\\"panel\\\">\\r\\n                        <ul class='toolset__functions--subset inline_set'>\\r\\n                            <li *ngFor='let expr of inlineSortExpr' (click)='add_inline(expr[0])' title='{{expr[1]}}'>\\r\\n                                {{expr[0]}}\\r\\n                            </li>\\r\\n                            <!-- <li *ngFor='let expr of inlineSortExpr' (click)='add_inline(expr)' title='{{expr}}'>\\r\\n                                {{expr}}\\r\\n                            </li> -->\\r\\n                        </ul>\\r\\n                        <!--Divider-->\\r\\n                        <div class = \\\"divider--in\\\"></div>\\r\\n                    </div>\\r\\n                </div>\\r\\n    \\r\\n    \\r\\n                <button id='inlineFunc' class=\\\"accordion inline--cat\\\" (click)='toggleAccordion(\\\"inlineFunc\\\", true)'>Functions</button>\\r\\n                <div class=\\\"panel\\\">\\r\\n                    <ng-container *ngFor='let category of inlineFunc'>\\r\\n                        <button id='inlineFunc_{{category[0]}}' class=\\\"accordion\\\" (click)='toggleAccordion(\\\"inlineFunc_\\\"+category[0], true)'>{{category[0]}}</button>\\r\\n                        <div class=\\\"panel\\\">\\r\\n                            <ul class='toolset__functions--subset inline_set'>\\r\\n                                <li *ngFor='let funcString of category[1]' (click)='add_inline(funcString[0])' title='{{funcString[1]}}'>\\r\\n                                    {{funcString[0]}}\\r\\n                                </li>\\r\\n                                <!-- <li *ngFor='let funcString of category[1]' (click)='add_inline(funcString)' title='{{funcString}}'>\\r\\n                                    {{funcString}}\\r\\n                                </li> -->\\r\\n                            </ul>\\r\\n                            <!--Divider-->\\r\\n                            <div class = \\\"divider--in\\\"></div>\\r\\n                        </div>\\r\\n                    </ng-container>\\r\\n                </div>\\r\\n            </div>\\r\\n        </ng-container>\\r\\n        <div class = \\\"divider\\\"></div>\\r\\n    </div>\\r\\n    \\r\\n    <!-- functions for input nodes -->\\r\\n    <div id='toolset_inp' class = 'toolset' *ngIf=\\\"getNode().type == 'start'\\\">\\r\\n        <button id='startFuncs' class=\\\"accordion inline--cat\\\" (click)='toggleAccordion(\\\"startFuncs\\\")'>Parameters</button>\\r\\n        <div class=\\\"panel\\\">\\r\\n        <!-- <div class='toolset__functions'> -->\\r\\n            <section *ngFor='let type of ProcedureTypesArr' >\\r\\n                <div *ngIf='type.toUpperCase() == \\\"CONSTANT\\\"'>\\r\\n                    <ul class='toolset__functions--subset'>\\r\\n                        <li (click)='add(ProcedureTypes[type], 5)'> Constant </li>\\r\\n                        <li (click)='add(ProcedureTypes[type], 0)'> Simple Input </li>\\r\\n                        <li (click)='add(ProcedureTypes[type], 1)'> Slider </li>\\r\\n                        <li (click)='add(ProcedureTypes[type], 2)'> Checkbox </li>\\r\\n                        <li (click)='add(ProcedureTypes[type], 3)'> URL </li>\\r\\n                        <li (click)='add(ProcedureTypes[type], 4)'> File </li>\\r\\n                    </ul>\\r\\n                </div>\\r\\n                <!-- <div *ngIf='type.toUpperCase() == \\\"ADDDATA\\\"'>\\r\\n                    <ul class='toolset__functions--subset'>\\r\\n                        <li (click)='add(ProcedureTypes[type])'> Add Model </li>\\r\\n                    </ul>\\r\\n                </div> -->\\r\\n            </section>\\r\\n        </div>\\r\\n    </div>\\r\\n    \\r\\n</div>\\r\\n<span id=\\\"tooltiptext\\\"></span>\\r\\n\"","module.exports = \":host {\\n  overflow: hidden auto;\\n  width: 100%;\\n  background-color: transparent;\\n  border: 1px; }\\n\\n.toolset--body {\\n  max-height: calc(100vh - 41px);\\n  overflow: hidden; }\\n\\n.toolset--body:hover {\\n    overflow-y: auto; }\\n\\n.toolset--body::-webkit-scrollbar {\\n    width: 8px; }\\n\\n.toolset--body::-webkit-scrollbar-track {\\n    background: #E6E6E6; }\\n\\n.toolset--body::-webkit-scrollbar-thumb {\\n    background: #CCCCCC;\\n    border-left: 2px solid #E6E6E6; }\\n\\n.toolset--body::-webkit-scrollbar-thumb:hover {\\n    background: #999999; }\\n\\n.searchbar--container {\\n  padding: 0px; }\\n\\n.searchBar {\\n  width: 100%;\\n  font-size: 12px;\\n  padding: 0px 8px;\\n  border: 0px;\\n  height: 15px;\\n  border-bottom: 5px solid white; }\\n\\n.toolset__functions--subset {\\n  list-style-type: none;\\n  margin: 0px;\\n  padding: 0px;\\n  background-color: #E6E6E6;\\n  overflow: hidden;\\n  text-overflow: ellipsis; }\\n\\n.toolset__functions--subset li {\\n    -webkit-user-select: none;\\n       -moz-user-select: none;\\n        -ms-user-select: none;\\n            user-select: none;\\n    margin: 0px;\\n    padding: 0px;\\n    padding-left: 8px;\\n    font-style: italic;\\n    font-weight: 550;\\n    font-size: 12px;\\n    height: 18px;\\n    line-height: 18px;\\n    width: 100%;\\n    box-sizing: border-box;\\n    white-space: nowrap;\\n    overflow: hidden;\\n    text-overflow: ellipsis; }\\n\\n.toolset__functions--subset .user--add {\\n    margin-bottom: 8px; }\\n\\n.toolset__functions--subset :hover {\\n    background-color: #CCCCCC;\\n    transition: 0.4s; }\\n\\n.user--def .user--def-lnContainer {\\n  width: 100%;\\n  display: flex;\\n  flex-flow: row nowrap;\\n  justify-content: space-between; }\\n\\n.user--def .user--def-lnContainer .btn--container {\\n    display: flex;\\n    flex-flow: row nowrap; }\\n\\n.importedFunc-btn {\\n  background-color: transparent;\\n  border: none;\\n  width: 13px;\\n  height: 13px;\\n  height: 100%;\\n  padding: 0px; }\\n\\n.importedFunc-btn .importedFunc-btn-icon {\\n    font-size: 12px;\\n    color: #373737;\\n    width: 13px;\\n    height: 13px;\\n    line-height: 13px; }\\n\\n.importedFunc-btn:hover .importedFunc-btn-icon {\\n    color: #00006d; }\\n\\n.accordion {\\n  background-color: #CCCCCC;\\n  color: #373737;\\n  cursor: pointer;\\n  width: 100%;\\n  height: 24px;\\n  padding: 2px 8px 2px 8px;\\n  border: none;\\n  display: block;\\n  text-align: left;\\n  outline: none;\\n  font-size: 12px;\\n  transition: 0.4s;\\n  font-weight: 550;\\n  overflow: hidden;\\n  text-overflow: ellipsis; }\\n\\n.active, .accordion:hover {\\n  background-color: #B3B3B3; }\\n\\n.panel {\\n  width: inherit;\\n  padding: 0px;\\n  display: none;\\n  background-color: #E6E6E6;\\n  overflow: hidden; }\\n\\n.panel button:not(.inline--cat) {\\n    font-weight: 550;\\n    color: #00006d;\\n    font-style: italic;\\n    white-space: nowrap; }\\n\\n.panel.opened {\\n    display: block; }\\n\\n.tooltip-basic {\\n  display: block;\\n  color: #c84696; }\\n\\n.tooltip-basic.invalid {\\n    opacity: 0.4;\\n    pointer-events: none; }\\n\\n.tooltip {\\n  display: block;\\n  color: #be8c1e; }\\n\\n#tooltiptext {\\n  width: 250px;\\n  background-color: whitesmoke;\\n  border: 2px solid #E6E6E6;\\n  color: #373737;\\n  pointer-events: none;\\n  padding: 0px 10px 0px 10px;\\n  opacity: 0;\\n  position: fixed;\\n  top: 100px;\\n  left: 125px;\\n  float: left;\\n  z-index: 1; }\\n\\n#tooltiptext p {\\n    font-family: sans-serif;\\n    display: flex;\\n    flex-flow: row nowrap; }\\n\\n#tooltiptext p.funcDesc {\\n      font-weight: 600;\\n      padding-bottom: 5px; }\\n\\n#tooltiptext p.paramP {\\n      padding-left: 5px; }\\n\\n#tooltiptext p.paramP ::before {\\n        display: inline-block;\\n        content: '';\\n        border-radius: 0.25rem;\\n        height: 0.25rem;\\n        width: 0.25rem;\\n        margin: 0rem 0.3rem 0.15rem 0rem;\\n        background-color: #808080; }\\n\\n#tooltiptext p span {\\n      font-style: italic;\\n      line-height: 15px;\\n      white-space: nowrap;\\n      margin-right: 2px; }\\n\\n.add-btn {\\n  height: 20px;\\n  margin: 0px;\\n  padding: 0px;\\n  border: 0px;\\n  background-color: #E6E6E6;\\n  color: #373737 !important;\\n  font-style: normal !important;\\n  font-weight: normal !important;\\n  height: 18px;\\n  width: 100%;\\n  line-height: 18px;\\n  text-align: left;\\n  text-decoration: none;\\n  font-size: 12px; }\\n\\n.divider, .divider--in {\\n  background-color: #fafafb;\\n  height: 8px; }\\n\\n.divider:hover, .divider--in:hover {\\n    background-color: transparent !important; }\\n\\n.divider--in {\\n  background-color: #E6E6E6; }\\n\\n.module-name {\\n  color: #00006d; }\\n\\n.inline_set li {\\n  color: #127e88; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdmlld3Mvdmlldy1lZGl0b3IvdG9vbHNldC9DOlxcRHJvcGJveFxcRmlsZXNcXFNvZnR3YXJlXFxHaXRIdWJcXGRlc2lnbi1hdXRvbWF0aW9uXFxtb2JpdXMtcGFyYW1ldHJpYy1tb2RlbGxlci9zcmNcXGFwcFxcdmlld3NcXHZpZXctZWRpdG9yXFx0b29sc2V0XFx0b29sc2V0LmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC92aWV3cy92aWV3LWVkaXRvci90b29sc2V0L0M6XFxEcm9wYm94XFxGaWxlc1xcU29mdHdhcmVcXEdpdEh1YlxcZGVzaWduLWF1dG9tYXRpb25cXG1vYml1cy1wYXJhbWV0cmljLW1vZGVsbGVyL3NyY1xcc2Nzc1xcY29sb3JzLnNjc3MiLCJzcmMvYXBwL3ZpZXdzL3ZpZXctZWRpdG9yL3Rvb2xzZXQvQzpcXERyb3Bib3hcXEZpbGVzXFxTb2Z0d2FyZVxcR2l0SHViXFxkZXNpZ24tYXV0b21hdGlvblxcbW9iaXVzLXBhcmFtZXRyaWMtbW9kZWxsZXIvc3JjXFxzY3NzXFx2YXJpYWJsZXMuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFPQTtFQUNJLHFCQUFxQjtFQUNyQixXQUFXO0VBQ1gsNkJBQTZCO0VBQzdCLFdBQVcsRUFBQTs7QUFJZjtFQUNJLDhCQUE4QjtFQUM5QixnQkFBZSxFQUFBOztBQUZuQjtJQUlRLGdCQUFnQixFQUFBOztBQUp4QjtJQU9RLFVBQVUsRUFBQTs7QUFQbEI7SUFXUSxtQkNyQlEsRUFBQTs7QURVaEI7SUFlUSxtQkMxQlE7SUQyQlIsOEJDMUJRLEVBQUE7O0FEVWhCO0lBb0JRLG1CQ2pDUSxFQUFBOztBRHFDaEI7RUFDSSxZQUFZLEVBQUE7O0FBR2hCO0VBQ0ksV0FBVztFQUNYLGVBQWU7RUFDZixnQkFBZ0I7RUFDaEIsV0FBVztFQUNYLFlFNUNTO0VGNkNULDhCQ3hDVSxFQUFBOztBRDJDZDtFQUNJLHFCQUFxQjtFQUNyQixXQUFXO0VBQ1gsWUFBWTtFQUNaLHlCQ25EWTtFRG9E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ZGl0b3IvdG9vbHNldC90b29sc2V0LmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiQGltcG9ydCAnfnNjc3MvY29sb3JzJztcclxuQGltcG9ydCAnfnNjc3MvdmFyaWFibGVzJztcclxuXHJcbi8vIC5maXhlZC0taGVhZHtcclxuLy8gICAgIHBvc2l0aW9uOiBmaXhlZDtcclxuLy8gfVxyXG5cclxuOmhvc3R7XHJcbiAgICBvdmVyZmxvdzogaGlkZGVuIGF1dG87XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xyXG4gICAgYm9yZGVyOiAxcHg7XHJcbn1cclxuXHJcblxyXG4udG9vbHNldC0tYm9keXtcclxuICAgIG1heC1oZWlnaHQ6IGNhbGMoMTAwdmggLSA0MXB4KTtcclxuICAgIG92ZXJmbG93OmhpZGRlbjtcclxuICAgICY6aG92ZXJ7XHJcbiAgICAgICAgb3ZlcmZsb3cteTogYXV0bztcclxuICAgIH1cclxuICAgICY6Oi13ZWJraXQtc2Nyb2xsYmFyIHtcclxuICAgICAgICB3aWR0aDogOHB4O1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICAmOjotd2Via2l0LXNjcm9sbGJhci10cmFjayB7XHJcbiAgICAgICAgYmFja2dyb3VuZDogJGNvbG9yNTtcclxuICAgIH1cclxuICAgIFxyXG4gICAgJjo6LXdlYmtpdC1zY3JvbGxiYXItdGh1bWIge1xyXG4gICAgICAgIGJhY2tncm91bmQ6ICRjb2xvcjQ7IFxyXG4gICAgICAgIGJvcmRlci1sZWZ0OiAycHggc29saWQgJGNvbG9yNTtcclxuICAgIH1cclxuICAgIFxyXG4gICAgJjo6LXdlYmtpdC1zY3JvbGxiYXItdGh1bWI6aG92ZXIge1xyXG4gICAgICAgIGJhY2tncm91bmQ6ICRjb2xvcjI7IFxyXG4gICAgfVxyXG59XHJcblxyXG4uc2VhcmNoYmFyLS1jb250YWluZXJ7XHJcbiAgICBwYWRkaW5nOiAwcHg7XHJcbn1cclxuXHJcbi5zZWFyY2hCYXJ7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGZvbnQtc2l6ZTogMTJweDtcclxuICAgIHBhZGRpbmc6IDBweCA4cHg7XHJcbiAgICBib3JkZXI6IDBweDtcclxuICAgIGhlaWdodDogJGZzaXplMTtcclxuICAgIGJvcmRlci1ib3R0b206IDVweCBzb2xpZCAkY29sb3I3O1xyXG59XHJcblxyXG4udG9vbHNldF9fZnVuY3Rpb25zLS1zdWJzZXR7XHJcbiAgICBsaXN0LXN0eWxlLXR5cGU6IG5vbmU7XHJcbiAgICBtYXJnaW46IDBweDtcclxuICAgIHBhZGRpbmc6IDBweDtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICRjb2xvcjU7XHJcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xyXG4gICAgdGV4dC1vdmVyZmxvdzogZWxsaXBzaXM7XHJcbiAgICAvL3BhZGRpbmctdG9wOiAycHg7XHJcbiAgICAvL3BhZGRpbmctYm90dG9tOiAycHg7XHJcblxyXG4gICAgbGl7XHJcbiAgICAgICAgdXNlci1zZWxlY3Q6IG5vbmU7XHJcbiAgICAgICAgbWFyZ2luOiAwcHg7XHJcbiAgICAgICAgcGFkZGluZzogMHB4O1xyXG4gICAgICAgIHBhZGRpbmctbGVmdDogOHB4O1xyXG4gICAgICAgIGZvbnQtc3R5bGU6IGl0YWxpYztcclxuICAgICAgICBmb250LXdlaWdodDogNTUwO1xyXG4gICAgICAgIC8vIGNvbG9yOiAkZnVuY3Rpb24tdGV4dC1jb2xvcjtcclxuICAgICAgICBmb250LXNpemU6ICRmc2l6ZTI7XHJcbiAgICAgICAgaGVpZ2h0OiAxOHB4O1xyXG4gICAgICAgIGxpbmUtaGVpZ2h0OiAxOHB4O1xyXG4gICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XHJcbiAgICAgICAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcclxuICAgICAgICBvdmVyZmxvdzogaGlkZGVuO1xyXG4gICAgICAgIHRleHQtb3ZlcmZsb3c6IGVsbGlwc2lzO1xyXG4gICAgfVxyXG4gICAgLnVzZXItLWFkZHtcclxuICAgICAgICBtYXJnaW4tYm90dG9tOiA4cHg7XHJcbiAgICB9XHJcbiAgICA6aG92ZXJ7XHJcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJGNvbG9yNDtcclxuICAgICAgICB0cmFuc2l0aW9uOiAwLjRzO1xyXG4gICAgfVxyXG5cclxufVxyXG4udXNlci0tZGVme1xyXG4gICAgLnVzZXItLWRlZi1sbkNvbnRhaW5lcntcclxuICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgIGZsZXgtZmxvdzogcm93IG5vd3JhcDtcclxuICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XHJcbiAgICAgICAgLmJ0bi0tY29udGFpbmVye1xyXG4gICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgICAgICBmbGV4LWZsb3c6IHJvdyBub3dyYXA7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59XHJcbi5pbXBvcnRlZEZ1bmMtYnRue1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XHJcbiAgICBib3JkZXI6IG5vbmU7XHJcbiAgICB3aWR0aDogMTNweDtcclxuICAgIGhlaWdodCA6IDEzcHg7XHJcbiAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgICBwYWRkaW5nOiAwcHg7XHJcblxyXG4gICAgLmltcG9ydGVkRnVuYy1idG4taWNvbntcclxuICAgICAgICBmb250LXNpemU6ICRmc2l6ZTI7XHJcbiAgICAgICAgY29sb3I6ICRjb2xvcjg7XHJcbiAgICAgICAgd2lkdGg6IDEzcHg7XHJcbiAgICAgICAgaGVpZ2h0OiAxM3B4O1xyXG4gICAgICAgIGxpbmUtaGVpZ2h0OiAxM3B4O1xyXG4gICAgfVxyXG5cclxuICAgICY6aG92ZXIgLmltcG9ydGVkRnVuYy1idG4taWNvbntcclxuICAgICAgICBjb2xvcjogJHNlbGVjdGVkLWNvbG9yO1xyXG4gICAgfVxyXG59XHJcblxyXG5cclxuLmFjY29yZGlvbiB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkY29sb3I0O1xyXG4gICAgY29sb3I6ICRjb2xvcjg7XHJcbiAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGhlaWdodDogMjRweDtcclxuICAgIHBhZGRpbmc6IDJweCA4cHggMnB4IDhweDtcclxuICAgIGJvcmRlcjogbm9uZTtcclxuICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgdGV4dC1hbGlnbjogbGVmdDtcclxuICAgIG91dGxpbmU6IG5vbmU7XHJcbiAgICBmb250LXNpemU6ICRmc2l6ZTI7XHJcbiAgICB0cmFuc2l0aW9uOiAwLjRzO1xyXG4gICAgZm9udC13ZWlnaHQ6IDU1MDtcclxuICAgIG92ZXJmbG93OiBoaWRkZW47XHJcbiAgICB0ZXh0LW92ZXJmbG93OiBlbGxpcHNpcztcclxufVxyXG5cclxuLmFjdGl2ZSwgLmFjY29yZGlvbjpob3ZlciB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkY29sb3IzOyBcclxufVxyXG5cclxuLnBhbmVsIHtcclxuICAgIHdpZHRoOiBpbmhlcml0O1xyXG4gICAgcGFkZGluZzogMHB4O1xyXG4gICAgZGlzcGxheTogbm9uZTtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICRjb2xvcjU7XHJcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xyXG4gICAgYnV0dG9uOm5vdCguaW5saW5lLS1jYXQpe1xyXG4gICAgICAgIGZvbnQtd2VpZ2h0OiA1NTA7XHJcbiAgICAgICAgY29sb3I6ICRzZWxlY3RlZC1jb2xvcjtcclxuICAgICAgICBmb250LXN0eWxlOiBpdGFsaWM7XHJcbiAgICAgICAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcclxuICAgIH1cclxuXHJcbiAgICAmLm9wZW5lZHtcclxuICAgICAgICBkaXNwbGF5OiBibG9jaztcclxuICAgIH1cclxufVxyXG5cclxuLnRvb2x0aXAtYmFzaWN7XHJcbiAgICBkaXNwbGF5OiBibG9jaztcclxuICAgIGNvbG9yOiAkYmFzaWMtZnVuY3Rpb24tdGV4dC1jb2xvcjtcclxuXHJcbiAgICAmLmludmFsaWR7XHJcbiAgICAgICAgb3BhY2l0eTogJGRpc2FibGVkLW9wYWNpdHk7XHJcbiAgICAgICAgcG9pbnRlci1ldmVudHM6IG5vbmU7XHJcbiAgICB9XHJcbn1cclxuXHJcbi50b29sdGlwe1xyXG4gICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICBjb2xvcjogJGZ1bmN0aW9uLXRleHQtY29sb3I7XHJcbn1cclxuXHJcbi8vIC8qIFRvb2x0aXAgdGV4dCAqL1xyXG4vLyAudG9vbHRpcCAudG9vbHRpcHRleHQxIHtcclxuLy8gICAgIC8vIHZpc2liaWxpdHk6IGhpZGRlbjtcclxuLy8gICAgIHdpZHRoOiAyNTBweDtcclxuLy8gICAgIC8vIG1pbi13aWR0aDogNTBweDtcclxuLy8gICAgIC8vIG1heC13aWR0aDogMjUwcHg7XHJcblxyXG4vLyAgICAgYmFja2dyb3VuZC1jb2xvcjogJGNvbG9yNS01Oy8vICRjb2xvcjQ7XHJcbi8vICAgICBib3JkZXI6IDJweCBzb2xpZCAkY29sb3I1O1xyXG4vLyAgICAgY29sb3I6ICRjb2xvcjg7XHJcbi8vICAgICBwb2ludGVyLWV2ZW50czogbm9uZTtcclxuLy8gICAgIC8vdGV4dC1hbGlnbjogbGVmdDtcclxuLy8gICAgIHBhZGRpbmc6IDBweCAxMHB4IDBweCAxMHB4O1xyXG4vLyAgICAgLy9ib3JkZXItcmFkaXVzOiA2cHg7XHJcbi8vICAgICBvcGFjaXR5OjA7XHJcblxyXG4vLyAgICAgcG9zaXRpb246IGZpeGVkOyAvL2Fic29sdXRlXHJcbi8vICAgICBib3R0b206NTBweDtcclxuLy8gICAgIGxlZnQ6MTI1cHg7XHJcblxyXG4vLyAgICAgZmxvYXQ6bGVmdDtcclxuLy8gICAgIHotaW5kZXg6IDE7XHJcblxyXG4vLyAgICAgcHtcclxuLy8gICAgICAgICBmb250LWZhbWlseTogc2Fucy1zZXJpZjtcclxuLy8gICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4vLyAgICAgICAgIGZsZXgtZmxvdzogcm93IG5vd3JhcDtcclxuXHJcbi8vICAgICAgICAgJi5mdW5jRGVzY3tcclxuLy8gICAgICAgICAgICAgZm9udC13ZWlnaHQ6IDYwMDtcclxuLy8gICAgICAgICB9XHJcblxyXG4vLyAgICAgICAgICYucGFyYW1Qe1xyXG4vLyAgICAgICAgICAgICBwYWRkaW5nLWxlZnQ6IDVweDtcclxuXHJcbi8vICAgICAgICAgOjpiZWZvcmV7XHJcbi8vICAgICAgICAgICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbi8vICAgICAgICAgICAgICAgICBjb250ZW50OiAnJztcclxuLy8gICAgICAgICAgICAgICAgIC13ZWJraXQtYm9yZGVyLXJhZGl1czogMC4yNXJlbTtcclxuLy8gICAgICAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDAuMjVyZW07XHJcbi8vICAgICAgICAgICAgICAgICBoZWlnaHQ6IDAuMjVyZW07XHJcbi8vICAgICAgICAgICAgICAgICB3aWR0aDogMC4yNXJlbTtcclxuLy8gICAgICAgICAgICAgICAgIG1hcmdpbjogMHJlbSAwLjNyZW0gMC4xNXJlbSAwcmVtO1xyXG4vLyAgICAgICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJGNvbG9yMTtcclxuLy8gICAgICAgICAgICAgfVxyXG4vLyAgICAgICAgIH1cclxuLy8gICAgICAgICBzcGFue1xyXG4vLyAgICAgICAgICAgICBmb250LXN0eWxlOiBpdGFsaWM7XHJcbi8vICAgICAgICAgICAgIGxpbmUtaGVpZ2h0OiAkZnNpemUxO1xyXG4vLyAgICAgICAgICAgICB3aGl0ZS1zcGFjZTogbm93cmFwO1xyXG4vLyAgICAgICAgICAgICBtYXJnaW4tcmlnaHQ6IDJweDtcclxuLy8gICAgICAgICB9XHJcbi8vICAgICB9XHJcbi8vIH1cclxuLy8gLyogU2hvdyB0aGUgdG9vbHRpcCB0ZXh0IHdoZW4geW91IG1vdXNlIG92ZXIgdGhlIHRvb2x0aXAgY29udGFpbmVyICovXHJcbi8vIC50b29sdGlwOmhvdmVyIC50b29sdGlwdGV4dDEge1xyXG4vLyAgICAgdHJhbnNpdGlvbi1kZWxheTogMC41cztcclxuLy8gICAgIHRyYW5zaXRpb24tZHVyYXRpb246IDAuM3M7XHJcbi8vICAgICBvcGFjaXR5OiAxO1xyXG4vLyB9XHJcblxyXG4jdG9vbHRpcHRleHQge1xyXG4gICAgLy8gdmlzaWJpbGl0eTogaGlkZGVuO1xyXG4gICAgd2lkdGg6IDI1MHB4O1xyXG4gICAgLy8gbWluLXdpZHRoOiA1MHB4O1xyXG4gICAgLy8gbWF4LXdpZHRoOiAyNTBweDtcclxuXHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkY29sb3I1LTU7Ly8gJGNvbG9yNDtcclxuICAgIGJvcmRlcjogMnB4IHNvbGlkICRjb2xvcjU7XHJcbiAgICBjb2xvcjogJGNvbG9yODtcclxuICAgIHBvaW50ZXItZXZlbnRzOiBub25lO1xyXG4gICAgLy90ZXh0LWFsaWduOiBsZWZ0O1xyXG4gICAgcGFkZGluZzogMHB4IDEwcHggMHB4IDEwcHg7XHJcbiAgICAvL2JvcmRlci1yYWRpdXM6IDZweDtcclxuICAgIG9wYWNpdHk6IDA7XHJcblxyXG4gICAgcG9zaXRpb246IGZpeGVkOyAvL2Fic29sdXRlXHJcbiAgICB0b3A6MTAwcHg7XHJcbiAgICBsZWZ0OjEyNXB4O1xyXG5cclxuICAgIGZsb2F0OmxlZnQ7XHJcbiAgICB6LWluZGV4OiAxO1xyXG5cclxuXHJcbiAgICBwe1xyXG4gICAgICAgIGZvbnQtZmFtaWx5OiBzYW5zLXNlcmlmO1xyXG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAgZmxleC1mbG93OiByb3cgbm93cmFwO1xyXG5cclxuICAgICAgICAmLmZ1bmNEZXNje1xyXG4gICAgICAgICAgICBmb250LXdlaWdodDogNjAwO1xyXG4gICAgICAgICAgICBwYWRkaW5nLWJvdHRvbTogNXB4O1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgJi5wYXJhbVB7XHJcbiAgICAgICAgICAgIHBhZGRpbmctbGVmdDogNXB4O1xyXG5cclxuICAgICAgICA6OmJlZm9yZXtcclxuICAgICAgICAgICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICAgICAgICAgICAgICAgIGNvbnRlbnQ6ICcnO1xyXG4gICAgICAgICAgICAgICAgLXdlYmtpdC1ib3JkZXItcmFkaXVzOiAwLjI1cmVtO1xyXG4gICAgICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogMC4yNXJlbTtcclxuICAgICAgICAgICAgICAgIGhlaWdodDogMC4yNXJlbTtcclxuICAgICAgICAgICAgICAgIHdpZHRoOiAwLjI1cmVtO1xyXG4gICAgICAgICAgICAgICAgbWFyZ2luOiAwcmVtIDAuM3JlbSAwLjE1cmVtIDByZW07XHJcbiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkY29sb3IxO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHNwYW57XHJcbiAgICAgICAgICAgIGZvbnQtc3R5bGU6IGl0YWxpYztcclxuICAgICAgICAgICAgbGluZS1oZWlnaHQ6ICRmc2l6ZTE7XHJcbiAgICAgICAgICAgIHdoaXRlLXNwYWNlOiBub3dyYXA7XHJcbiAgICAgICAgICAgIG1hcmdpbi1yaWdodDogMnB4O1xyXG4gICAgICAgIH1cclxuICAgIH1cclxufVxyXG5cclxuLy8gdXNlciBmdW5jdGlvbnNcclxuLmFkZC1idG57XHJcbiAgICBoZWlnaHQ6IDIwcHg7XHJcblxyXG4gICAgbWFyZ2luOiAwcHg7XHJcbiAgICBwYWRkaW5nOiAwcHg7XHJcbiAgICBib3JkZXI6IDBweDtcclxuXHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkY29sb3I1O1xyXG4gICAgY29sb3I6ICRjb2xvcjggIWltcG9ydGFudDtcclxuICAgIGZvbnQtc3R5bGU6IG5vcm1hbCAhaW1wb3J0YW50O1xyXG4gICAgZm9udC13ZWlnaHQ6IG5vcm1hbCAhaW1wb3J0YW50O1xyXG5cclxuICAgIGhlaWdodDogMThweDtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgbGluZS1oZWlnaHQ6IDE4cHg7XHJcbiAgICB0ZXh0LWFsaWduOiBsZWZ0O1xyXG4gICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xyXG5cclxuICAgIGZvbnQtc2l6ZTogJGZzaXplMjtcclxuICAgIC8vIHRyYW5zaXRpb246IDAuNHM7XHJcbiAgICAvLyAmOmhvdmVye1xyXG4gICAgLy8gICAgIGJhY2tncm91bmQtY29sb3I6ICRjb2xvcjQ7XHJcbiAgICAvLyB9XHJcbiAgICAvLyAuYWRkLWljb257XHJcbiAgICAvLyAgICAgZmxvYXQ6bGVmdDtcclxuICAgIC8vICAgICBjb2xvcjogJGNvbG9yODtcclxuICAgIC8vIH1cclxufVxyXG5cclxuLmRpdmlkZXIsIC5kaXZpZGVyLS1pbntcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICRjb2xvcjY7XHJcbiAgICBoZWlnaHQ6IDhweDtcclxuICAgICY6aG92ZXJ7XHJcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQgIWltcG9ydGFudDtcclxuICAgIH1cclxufVxyXG5cclxuLmRpdmlkZXItLWlue1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogJGNvbG9yNTtcclxufVxyXG5cclxuLm1vZHVsZS1uYW1le1xyXG4gICAgY29sb3I6ICRzZWxlY3RlZC1jb2xvcjtcclxufVxyXG5cclxuLy8gZ2xvYmFsIHZhcmlhYmxlc1xyXG5cclxuLy8gI2dsb2JhbHN7XHJcbi8vICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkY29sb3IzO1xyXG4vLyAgICAgZm9udC1zdHlsZTogaXRhbGljO1xyXG4vLyB9XHJcblxyXG4uaW5saW5lX3NldHtcclxuICAgIGxpe1xyXG4gICAgICAgIGNvbG9yOiAkZnVuY3Rpb24tdGV4dC1jb2xvcjI7XHJcbiAgICB9XHJcbn0iLCJcclxuJGNvbG9yMTogIzgwODA4MDtcclxuJGNvbG9yMjogIzk5OTk5OTtcclxuJGNvbG9yMzogI0IzQjNCMzsgXHJcbiRjb2xvcjQ6ICNDQ0NDQ0M7XHJcbiRjb2xvcjU6ICNFNkU2RTY7XHJcbiRjb2xvcjUtNTogcmdiKDI0NSwgMjQ1LCAyNDUpO1xyXG4kY29sb3I2OiByZ2IoMjUwLCAyNTAsIDI1MSk7XHJcblxyXG4kY29sb3I3OiB3aGl0ZTtcclxuJGNvbG9yODogIzM3MzczNztcclxuXHJcbiRzZWxlY3RlZC1jb2xvcjogcmdiKDAsIDAsIDEwOSk7XHJcbiRob3Zlci1jb2xvcjogJGNvbG9yMjtcclxuXHJcbiRlcnJvci1jb2xvcjogI0U5NDg1ODsgLy9waW5rLXJlZFxyXG4kZXJyb3ItY29sb3ItbHQ6IHJnYigyNTUsIDIyMCwgMjI0KTtcclxuJHBjb2xvcjI6ICNGM0EzMkE7IC8vb3JhbmdlLXllbGxvd1xyXG4kcHJpbnQtY29sb3I6IHJnYigxMzAsIDE5MSwgMTEwKTsgLy9saWdodGdyZWVuXHJcbiRwcmludC1jb2xvci1sdDogcmdiKDIzMCwgMjU1LCAyMjEpO1xyXG4kc2VsZWN0R2VvbS1jb2xvcjogcmdiKDI1NSwgMTc0LCAwKTsgLy8gbGlnaHQgb3JhbmdlXHJcbiRzZWxlY3RHZW9tLWNvbG9yLWx0OiByZ2IoMjU1LCAyMjUsIDE2MCk7XHJcblxyXG4vLyAkcHJvZC1iYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMjUwLDI1MCwyNTApO1xyXG4vLyAkYmFja2dyb3VuZC1jb2xvcjogcmdiKDIyMCwyMjAsMjIwKTtcclxuJGZ1bmN0aW9uLXRleHQtY29sb3I6IHJnYigxOTAsIDE0MCwgMzApO1xyXG4kZnVuY3Rpb24tdGV4dC1jb2xvcjI6IHJnYigxOCwgMTI2LCAxMzYpO1xyXG4kYmFzaWMtZnVuY3Rpb24tdGV4dC1jb2xvcjogcmdiKDIwMCwgNzAsIDE1MCk7XHJcbiRjb21tZW50LWNvbG9yOiBkYXJrZ3JlZW47XHJcbiIsIiRwYWRkaW5nOiA0MHB4OyAvLyA/IG5vdCB1c2VkXHJcbiRzbWFsbC1wYWRkaW5nOiAxNXB4O1xyXG4kaGVhZGVyLWhlaWdodDogNDBweDtcclxuXHJcbiRmc2l6ZTE6IDE1cHg7XHJcbiRmc2l6ZTI6IDEycHg7XHJcbiRmc2l6ZTM6IDMwcHg7XHJcblxyXG4kcG9ydC1zaXplOiAxNXB4O1xyXG4kZGVmYXVsdC1zaWRlLXBhZGRpbmc6IDE1cHg7XHJcblxyXG4kZGlzYWJsZWQtb3BhY2l0eTogMC40OyJdfQ== */\"","import { Component, Output, EventEmitter, Input, OnInit, ViewEncapsulation} from '@angular/core';\r\n\r\nimport { ProcedureTypes, IFunction, IProcedure } from '@models/procedure';\r\nimport { IFlowchart } from '@models/flowchart';\r\nimport * as CircularJSON from 'circular-json';\r\nimport { IArgument } from '@models/code';\r\nimport { ModuleList, ModuleDocList } from '@shared/decorators';\r\nimport { INode } from '@models/node';\r\n\r\nimport { DownloadUtils } from '@shared/components/file/download.utils';\r\nimport { inline_query_expr, inline_func, inline_sort_expr} from '@assets/core/inline/inline';\r\nimport { DataService } from '@services';\r\nimport { _parameterTypes } from '@modules';\r\nimport { InputType } from '@models/port';\r\n\r\nconst keys = Object.keys(ProcedureTypes);\r\nconst inputEvent = new Event('input', {\r\n    'bubbles': true,\r\n    'cancelable': true\r\n});\r\n\r\n@Component({\r\n  selector: 'toolset',\r\n  templateUrl: './toolset.component.html',\r\n  styleUrls: ['./toolset.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class ToolsetComponent implements OnInit {\r\n\r\n    @Output() selected = new EventEmitter();\r\n    @Output() delete = new EventEmitter();\r\n    @Output() imported = new EventEmitter();\r\n    // @Input() functions: IFunction[];\r\n\r\n    ProcedureTypes = ProcedureTypes;\r\n    ProcedureTypesArr = keys.slice(keys.length / 2);\r\n    searchedFunctions = [];\r\n    searchedInlines = [];\r\n\r\n    inlineQueryExpr = inline_query_expr;\r\n    inlineSortExpr = inline_sort_expr;\r\n    inlineFunc = inline_func;\r\n\r\n    Modules = [];\r\n    ModuleDoc = ModuleDocList;\r\n\r\n    private timeOut;\r\n\r\n    constructor(private dataService: DataService) {}\r\n\r\n\r\n    ngOnInit() {\r\n        for (const mod of ModuleList) {\r\n            if (mod.module[0] === '_') { continue; }\r\n            const nMod = {'module': mod.module, 'functions': []};\r\n            for (const fn of mod.functions) {\r\n                if (fn.name[0] === '_') { continue; }\r\n                if (ModuleDocList[mod.module] && ModuleDocList[mod.module][fn.name]) {\r\n                    fn['doc'] = ModuleDocList[mod.module][fn.name];\r\n                    let fnDocHtml;\r\n                    if (fn.doc.summary) {\r\n                        fnDocHtml = `<p class=\"funcDesc\">${fn.doc.summary}</p>`;\r\n                    } else {\r\n                        fnDocHtml = `<p class=\"funcDesc\">${fn.doc.description.split('~')[0]}</p>`;\r\n                        // const splittedDesc = fn.doc.description.split('~');\r\n                        // fnDocHtml = ``;\r\n                        // for (const txt of splittedDesc) {\r\n                        //     fnDocHtml += `<p class=\"funcDesc\">${txt}</p>`;\r\n                        // }\r\n                    }\r\n                    if (fn.doc.parameters && fn.doc.parameters.length > 0) {\r\n                        fnDocHtml += `<p><span>Parameters: </span></p>`;\r\n                        for (const param of fn.doc.parameters) {\r\n                            if (!param) {continue; }\r\n                            fnDocHtml += `<p class=\"paramP\"><span>${param.name} - </span> ${param.description}</p>`;\r\n                        }\r\n                    }\r\n                    if (fn.doc.returns) {\r\n                        fnDocHtml += `<p><span>Returns: </span> ${fn.doc.returns}</p>`;\r\n                    }\r\n                    fn['doc'] = fnDocHtml;\r\n                } else {\r\n                    fn['doc'] = '<br>';\r\n                }\r\n                nMod.functions.push(fn);\r\n            }\r\n            this.Modules.push(nMod);\r\n        }\r\n    }\r\n\r\n    // add selected basic function as a new procedure\r\n    add(type: ProcedureTypes, data?): void {\r\n        this.selected.emit( { type: type, data: data } );\r\n    }\r\n\r\n    // add selected function from core.modules as a new procedure\r\n    add_function(fnData) {\r\n        // create a fresh copy of the params to avoid linked objects\r\n        // todo: figure out\r\n        fnData.args = fnData.args.map( (arg) => {\r\n            return {name: arg.name, value: arg.value, default: arg.default};\r\n            });\r\n\r\n        this.selected.emit( { type: ProcedureTypes.Function, data: fnData } );\r\n    }\r\n\r\n    // add selected imported function as a new procedure\r\n    add_imported_function(fnData) {\r\n        fnData.args = fnData.args.map( (arg) => {\r\n            if (arg.type === InputType.Constant) {\r\n                return {name: arg.name, value: arg.default, type: arg.type};\r\n            }\r\n            return {name: arg.name, value: arg.value, type: arg.type};\r\n            });\r\n        this.selected.emit( { type: ProcedureTypes.Imported, data: fnData } );\r\n    }\r\n\r\n    setCurrent(event) {\r\n        if (document.activeElement.tagName === 'INPUT' && document.activeElement.className !== 'searchBar') {\r\n            // this.dataService.focusedInput = [document.activeElement, (<HTMLInputElement>document.activeElement).selectionStart];\r\n            this.dataService.focusedInput = document.activeElement;\r\n        } else {\r\n            // this.dataService.focusedInput = undefined;\r\n        }\r\n    }\r\n\r\n    add_inline(string) {\r\n        if (!this.dataService.focusedInput) {\r\n            return;\r\n        }\r\n        this.dataService.focusedInput.focus();\r\n        const index = this.dataService.focusedInput.selectionDirection === 'backward' ?\r\n            this.dataService.focusedInput.selectionStart : this.dataService.focusedInput.selectionEnd;\r\n        this.dataService.focusedInput.value =\r\n            this.dataService.focusedInput.value.slice(0, index) +\r\n            string +\r\n            this.dataService.focusedInput.value.slice(index);\r\n\r\n        this.dataService.focusedInput.dispatchEvent(inputEvent);\r\n        this.dataService.focusedInput.selectionStart = index + string.length;\r\n        // this.dataService.focusedInput.trigger('input');\r\n    }\r\n\r\n    // delete imported function\r\n    delete_imported_function(fnData) {\r\n        this.delete.emit(fnData);\r\n        this.turnoffTooltip();\r\n    }\r\n\r\n\r\n    // import a flowchart as function\r\n    async import_function(event) {\r\n        // read the file and create the function based on the flowchart\r\n        const p = new Promise((resolve) => {\r\n            const reader = new FileReader();\r\n            reader.onload = function() {\r\n                // parse the flowchart\r\n                const fl = CircularJSON.parse(reader.result.toString()).flowchart;\r\n\r\n                // create function and documentation of the function\r\n                const funcs = [];\r\n                let funcName = fl.name.replace(/[^A-Za-z0-9_]/g, '_');\r\n                if (funcName.match(/^[\\d_]/)) {\r\n                    funcName = 'func' + funcName;\r\n                }\r\n                const documentation = {\r\n                    name: funcName,\r\n                    module: 'Imported',\r\n                    description: fl.description,\r\n                    summary: fl.description,\r\n                    parameters: [],\r\n                    returns: fl.returnDescription\r\n                };\r\n                const func: IFunction = <IFunction>{\r\n                    flowchart: <IFlowchart>{\r\n                        name: fl.name,\r\n                        nodes: fl.nodes,\r\n                        edges: fl.edges\r\n                    },\r\n                    name: funcName,\r\n                    module: 'Imported',\r\n                    doc: documentation,\r\n                    importedFile: reader.result.toString()\r\n                };\r\n\r\n                func.args = [];\r\n                for (const prod of fl.nodes[0].procedure) {\r\n                    if (!prod.enabled || prod.type !== ProcedureTypes.Constant) { continue; }\r\n                    let v: string = prod.args[prod.argCount - 2].value || 'undefined';\r\n                    if (v[0] === '\"' || v[0] === '\\'') { v = v.substring(1, v.length - 1); }\r\n                    if (prod.meta.inputMode !== InputType.Constant) {\r\n                        documentation.parameters.push({\r\n                            name: v,\r\n                            description: prod.meta.description\r\n                        });\r\n                    }\r\n                    func.args.push(<IArgument>{\r\n                        name: v,\r\n                        default: prod.args[prod.argCount - 1].default,\r\n                        value: undefined,\r\n                        type: prod.meta.inputMode,\r\n                    });\r\n                }\r\n                func.argCount = func.args.length;\r\n\r\n                const end = fl.nodes[fl.nodes.length - 1];\r\n                const returnProd = end.procedure[end.procedure.length - 1];\r\n                if (returnProd.args[1].value) {\r\n                    func.hasReturn = true;\r\n                } else {\r\n                    func.hasReturn = false;\r\n                }\r\n\r\n                // add func and all the imported functions of the imported flowchart to funcs\r\n                funcs.push(func);\r\n                for (const i of fl.functions) {\r\n                    funcs.push(i);\r\n                }\r\n                resolve(funcs);\r\n            };\r\n            reader.onerror = function() {\r\n                resolve('error');\r\n            };\r\n            reader.readAsText(event.target.files[0]);\r\n        });\r\n        const fnc = await p;\r\n        (<HTMLInputElement>document.getElementById('selectedFile')).value = '';\r\n        if (fnc === 'error') {\r\n            console.warn('Error reading file');\r\n            return;\r\n        }\r\n        this.imported.emit(fnc);\r\n    }\r\n\r\n    downloadImported(event: MouseEvent, fnData) {\r\n        event.stopPropagation();\r\n        const fileString = fnData.importedFile;\r\n        const fname = `${fnData.name}.mob`;\r\n        const blob = new Blob([fileString], {type: 'application/json'});\r\n        DownloadUtils.downloadFile(fname, blob);\r\n        this.turnoffTooltip();\r\n    }\r\n\r\n    toggleAccordion(id: string, inline?: boolean) {\r\n        if (inline && this.dataService.focusedInput) {\r\n            this.dataService.focusedInput.focus();\r\n        }\r\n        const acc = document.getElementById(id);\r\n        // acc = document.getElementsByClassName(\"accordion\");\r\n        acc.classList.toggle('active');\r\n        const panel = <HTMLElement>acc.nextElementSibling;\r\n        if (panel.style.display === 'block') {\r\n            panel.style.display = 'none';\r\n        } else {\r\n            panel.style.display = 'block';\r\n        }\r\n    }\r\n\r\n    toggleAccordionHead(id: string) {\r\n        const acc = document.getElementById(id);\r\n        // acc = document.getElementsByClassName(\"accordion\");\r\n        acc.classList.toggle('active');\r\n        let panel = <HTMLElement>acc.nextElementSibling;\r\n        if (panel.className !== 'panel') {\r\n            panel = <HTMLElement>panel.nextElementSibling;\r\n        }\r\n        if (panel.style.display === 'block') {\r\n            panel.style.display = 'none';\r\n        } else {\r\n            panel.style.display = 'block';\r\n        }\r\n    }\r\n\r\n\r\n    checkInvalid(type) {\r\n        const node = this.dataService.node;\r\n        const tp = type.toUpperCase();\r\n        if (tp === 'ELSE') {\r\n            if (node.state.procedure.length === 0) { return true; }\r\n            const checkNode = node.state.procedure[node.state.procedure.length - 1];\r\n            if (checkNode.type.toString() !== ProcedureTypes.If.toString()\r\n            && checkNode.type.toString() !== ProcedureTypes.Elseif.toString()) {\r\n                return true;\r\n            }\r\n            let prods: IProcedure[];\r\n\r\n            if (checkNode.parent) { prods = checkNode.parent.children;\r\n            } else { prods = node.procedure; }\r\n\r\n            for (let i = 0 ; i < prods.length - 1; i++) {\r\n                if (prods[i].ID === checkNode.ID) {\r\n                    if (prods[i + 1].type.toString() === ProcedureTypes.Elseif.toString() ||\r\n                    prods[i + 1].type.toString() === ProcedureTypes.Else.toString()) {\r\n                        return true;\r\n                    }\r\n                    return false;\r\n                }\r\n            }\r\n            return false;\r\n        } else if (tp === 'ELSEIF') {\r\n            if (node.state.procedure.length === 0) { return true; }\r\n            const checkNode = node.state.procedure[node.state.procedure.length - 1];\r\n            return (checkNode.type.toString() !== ProcedureTypes.If.toString()\r\n            && checkNode.type.toString() !== ProcedureTypes.Elseif.toString());\r\n        } else {\r\n            let checkNode = node.state.procedure[node.state.procedure.length - 1];\r\n            if (tp === 'BREAK' || tp === 'CONTINUE') {\r\n                if (!checkNode) {return true; }\r\n                while (checkNode.parent) {\r\n                    if (checkNode.parent.type.toString() === ProcedureTypes.Foreach.toString() ||\r\n                    checkNode.parent.type.toString() === ProcedureTypes.While.toString()) {\r\n                        return false;\r\n                    }\r\n                    checkNode = checkNode.parent;\r\n                }\r\n                return true;\r\n            }\r\n\r\n            if (checkNode) {\r\n                let prods: IProcedure[];\r\n\r\n                if (checkNode.parent) { prods = checkNode.parent.children;\r\n                } else { prods = node.procedure; }\r\n\r\n                if (checkNode.type.toString() === ProcedureTypes.If.toString()\r\n                || checkNode.type.toString() === ProcedureTypes.Elseif.toString()) {\r\n                    for (let i = 0 ; i < prods.length - 1; i++) {\r\n                        if (prods[i].ID === checkNode.ID) {\r\n                            if (prods[i + 1].type.toString() === ProcedureTypes.Else.toString()\r\n                            || prods[i + 1].type.toString() === ProcedureTypes.Elseif.toString()) {\r\n                                return true;\r\n                            }\r\n                            return false;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n\r\n        }\r\n        return false;\r\n    }\r\n\r\n    searchFunction(event) {\r\n        const str = event.target.value.toLowerCase().replace(/ /g, '_');\r\n        this.searchedFunctions = [];\r\n        if (str.length === 0) {\r\n            return;\r\n        }\r\n        for (let i = 0; i < 8; i++) {\r\n            if (this.searchedFunctions.length >= 10) { break; }\r\n            if (this.ProcedureTypesArr[i].toLowerCase().indexOf(str) !== -1) {\r\n                this.searchedFunctions.push({\r\n                    'type': 'basic',\r\n                    'name': this.ProcedureTypesArr[i],\r\n                });\r\n            }\r\n        }\r\n\r\n        // @ts-ignore\r\n        for (const mod of this.Modules) {\r\n            if (this.searchedFunctions.length >= 10) { break; }\r\n            if (mod.module[0] === '_' || mod.module === 'Input' || mod.module === 'Output') {continue; }\r\n            for (const func of mod.functions) {\r\n                if (this.searchedFunctions.length >= 10) { break; }\r\n                if (func.name[0] === '_') {continue; }\r\n                if (func.name.toLowerCase().indexOf(str) !== -1) {\r\n                    this.searchedFunctions.push({\r\n                        'type': 'function',\r\n                        'name': func.name,\r\n                        'module': mod.module,\r\n                        'data': func\r\n                    });\r\n                }\r\n            }\r\n        }\r\n        for (const func of this.dataService.flowchart.functions) {\r\n            if (this.searchedFunctions.length >= 10) { break; }\r\n            if (func.name.toLowerCase().indexOf(str) !== -1) {\r\n                this.searchedFunctions.push({\r\n                    'type': 'imported',\r\n                    'name': func.name,\r\n                    'data': func\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    searchInline(event) {\r\n        const str = event.target.value.toLowerCase();\r\n        this.searchedInlines = [];\r\n        if (str.length === 0) {\r\n            return;\r\n        }\r\n        for (const cnst of this.dataService.flowchart.nodes[0].procedure) {\r\n            if (this.searchedInlines.length >= 10) { break; }\r\n            if (cnst.type !== ProcedureTypes.Constant) { continue; }\r\n            const cnstString = cnst.args[cnst.argCount - 2].value;\r\n            if (cnstString.toLowerCase().indexOf(str) !== -1) {\r\n                this.searchedInlines.push(cnstString);\r\n            }\r\n        }\r\n        for (const expr of this.inlineQueryExpr) {\r\n            if (this.searchedInlines.length >= 10) { break; }\r\n            if (expr[0].toLowerCase().indexOf(str) !== -1) {\r\n                this.searchedInlines.push(expr);\r\n            }\r\n        }\r\n        for (const category of this.inlineFunc) {\r\n            for (const funcString of category[1]) {\r\n                if (this.searchedInlines.length >= 10) { break; }\r\n                if (funcString[0].toLowerCase().indexOf(str) !== -1) {\r\n                    this.searchedInlines.push(funcString[0]);\r\n                }\r\n            }\r\n            if (this.searchedInlines.length >= 10) { break; }\r\n        }\r\n    }\r\n\r\n    assembleImportedTooltip(funcDoc): string {\r\n        // <span class=\"tooltiptext1\">\r\n        //     <p class='funcDesc'>{{fn.doc.description}}</p>\r\n        //     <p *ngIf='fn.doc.parameters?.length > 0'><span>Parameters: </span></p>\r\n        //     <p class='paramP' *ngFor='let param of fn.doc.parameters'><span>{{param.name}} - </span> {{param.description}}</p>\r\n        //     <p *ngIf='fn.doc.returns'><span>Returns: </span>{{fn.doc.returns}}</p>\r\n        // </span>\r\n        let htmlDesc = `<p class=\"funcDesc\">${funcDoc.description}</p>`;\r\n        if (funcDoc.parameters && funcDoc.parameters.length > 0) {\r\n            htmlDesc += `<p><span>Parameters: </span></p>`;\r\n            for (const param of funcDoc.parameters) {\r\n                htmlDesc += `<p class='paramP'><span>${param.name} - </span> ${param.description}</p>`;\r\n            }\r\n        }\r\n        if (funcDoc.returns) {\r\n            htmlDesc += `<p><span>Returns: </span>${funcDoc.returns}</p>`;\r\n        }\r\n        return htmlDesc;\r\n    }\r\n\r\n    popupTooltip(event, funcText: string) {\r\n        const tooltip = document.getElementById('tooltiptext');\r\n        tooltip.innerHTML = funcText;\r\n        tooltip.style.top = event.target.getBoundingClientRect().top + 'px';\r\n        this.timeOut = setTimeout(() => {\r\n            tooltip.style.transitionDuration = '0.3s';\r\n            tooltip.style.opacity = '1';\r\n        }, 700);\r\n    }\r\n\r\n    turnoffTooltip() {\r\n        clearTimeout(this.timeOut);\r\n        const tooltip = document.getElementById('tooltiptext');\r\n        tooltip.style.transitionDuration = '0s';\r\n        tooltip.style.opacity = '0';\r\n    }\r\n\r\n    getViewOutput() {\r\n        return this.dataService.getModelOutputView(this.dataService.node.id);\r\n    }\r\n\r\n    getFlowchart() { return this.dataService.flowchart; }\r\n    getNode() { return this.dataService.node; }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { ViewEditorComponent } from './view-editor.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: ViewEditorComponent,\r\n    children: [\r\n      // {\r\n      //   path: '',\r\n      //   loadChildren: '../../mobius-viewer/mobius-viewer.module#MobiusViewerModule',\r\n      // }\r\n    ]\r\n  }\r\n];\r\n\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class ViewEditorRoutingModule { }\r\n","module.exports = \"<div class='container'>\\r\\n    <as-split direction=\\\"horizontal\\\" (dragEnd)='setSplit($event)'>\\r\\n        <as-split-area [size]=\\\"100 - getSplit()\\\">\\r\\n            <panel-header [flowchart]='getFlowchart()'></panel-header>\\r\\n            <!-- viewchild content -->\\r\\n            <div class='content__panel' (mouseenter)='activateCopyPaste()'  (mouseleave)='deactivateCopyPaste()'>\\r\\n\\r\\n                <div class='container--editor'\\r\\n                (copy)='copyProd()' (cut)='cutProd()' (paste)='pasteProd()'>\\r\\n                \\r\\n                    <div class='container__content'>\\r\\n                        <!-- toolset on the left side -->\\r\\n                        <div class=\\\"container--toolset\\\">\\r\\n                            <toolset \\r\\n                            (delete)='deleteFunction($event)' \\r\\n                            (selected)='add($event)' \\r\\n                            (imported)='importFunction($event)'></toolset>\\r\\n                        </div>\\r\\n                        <!-- procedure editor on the right side -->\\r\\n                        <div id='procedure' class=\\\"container--procedure\\\" (click)='unselectAll($event)'>\\r\\n                            <!-- parameter-editor only for start/end node -->\\r\\n                            <parameter-editor *ngIf=\\\"getNode().type == 'start'\\\" \\r\\n                            [flowchart]='getFlowchart()' \\r\\n                            [node]='getNode()'\\r\\n                            [prodCheck]='false'\\r\\n                            [disableInput]='disableInput'></parameter-editor>\\r\\n                            <ng-container *ngIf='getNode().enabled; else disabled_node'>\\r\\n                                <div id='modelViewButton--container' *ngIf=\\\"getNode().type !== 'start'\\\">\\r\\n                                    <button (click)='setViewOutput()'>Viewing \\r\\n                                        <span *ngIf='!getViewOutput()'>Input Model</span>\\r\\n                                        <span *ngIf='getViewOutput()'>Output Model</span></button>\\r\\n                                </div>\\r\\n\\r\\n                                <div id='modelViewButton--container' *ngIf=\\\"getNode().type == 'start'\\\">\\r\\n                                    <button (click)='setViewOutput()'>\\r\\n                                        <span *ngIf='getViewOutput()'>Viewing</span>\\r\\n                                        <span *ngIf='!getViewOutput()'>Hiding</span>\\r\\n                                    Test Model</button>\\r\\n                                </div>\\r\\n                            </ng-container>\\r\\n                            <ng-template #disabled_node>\\r\\n                                <div id='modelViewButton--container' *ngIf=\\\"getNode().type !== 'start'\\\">\\r\\n                                    <button disabled> Node Disabled </button>\\r\\n                                </div>\\r\\n                            </ng-template>\\r\\n                            \\r\\n                            <div class = 'procedureln--container' [ngClass]=\\\"{'procedureln--container-start': getNode().type == 'start'}\\\">\\r\\n                                <!-- list of procedure items for all nodes -->\\r\\n                                <div class = 'pro-container' [hidden]=\\\"getNode().type == 'start' && !getViewOutput()\\\">\\r\\n                                    <procedure-item \\r\\n                                    *ngFor=\\\"let line of getNode()?.procedure; let idx=index\\\" \\r\\n                                    [data]=\\\"line\\\"\\r\\n                                    [disableInput]='disableInput'\\r\\n                                    (select)=\\\"selectProcedure($event)\\\"\\r\\n                                    (delete)=\\\"deleteSelectedProds()\\\"\\r\\n                                    (deleteC)='deleteChild(idx)'\\r\\n                                    (notifyError)='notifyError($event)'\\r\\n                                    (helpText)='updateHelpView($event)'\\r\\n                                    ></procedure-item>\\r\\n                                </div>\\r\\n                                <div class = 'divider--container' *ngIf=\\\"getNode().type !== ''\\\">\\r\\n                                    <div class = 'divider' *ngIf=\\\"getNode().type == 'start'\\\"><span>Parameters</span></div>\\r\\n                                    <div class = 'divider' *ngIf=\\\"getNode().type == 'end'\\\"><span>Return</span></div>\\r\\n                                </div>\\r\\n                                <parameter-editor *ngIf=\\\"getNode().type !== ''\\\" \\r\\n                                [flowchart]='getFlowchart()' \\r\\n                                [node]='getNode()'\\r\\n                                [prodCheck]='true'\\r\\n                                [disableInput]='disableInput'\\r\\n                                (regAction)='regAction($event)'\\r\\n                                (selectInp)='selectProcedure($event)'\\r\\n                                (disableProds) = 'disableSelectedProds()'\\r\\n                                (delete)='deleteSelectedProds()'></parameter-editor>\\r\\n                                <div id = 'spacer'></div>\\r\\n                                \\r\\n                            </div>\\r\\n                            <!-- <button class='modelViewButton' (click)='setViewOutput(true)'>View Output</button> -->\\r\\n\\r\\n                            <br>\\r\\n\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </as-split-area>\\r\\n\\r\\n        <as-split-area [size]=\\\"getSplit()\\\">\\r\\n            <!-- data viewers panel -->\\r\\n            <div class='content__viewer' >\\r\\n                <model-viewers-container [data]='viewerData(getNode(), getViewOutput())'></model-viewers-container>\\r\\n            </div>\\r\\n        </as-split-area>\\r\\n        \\r\\n    </as-split>\\r\\n\\r\\n<notification [message]='notificationMessage' [dummyTrigger]='notificationTrigger'></notification>\\r\\n\\r\\n</div>\\r\\n<spinner></spinner>\\r\\n<chrome></chrome>\\r\\n\\r\\n\"","module.exports = \".content__panel {\\n  margin-top: 40px;\\n  overflow: hidden; }\\n\\n.container--editor {\\n  display: block;\\n  height: 100%;\\n  width: 100%; }\\n\\n.container__heading {\\n  display: block;\\n  text-align: center;\\n  width: 100%; }\\n\\n.container__content {\\n  display: inline-flex;\\n  width: 100%;\\n  min-height: 100%; }\\n\\n.container--toolset {\\n  display: block;\\n  width: 125px;\\n  min-width: 125px;\\n  max-width: 125px;\\n  background-color: transparent;\\n  height: calc(100vh - 40px);\\n  overflow: hidden; }\\n\\n.container--toolset toolset {\\n    display: flex;\\n    flex-flow: column nowrap;\\n    overflow: hidden;\\n    width: 100%; }\\n\\n.pro-container {\\n  height: auto; }\\n\\n.container--procedure {\\n  width: calc(100% - 125px);\\n  max-height: calc(100vh - 40px);\\n  background-color: transparent;\\n  padding: 0px;\\n  overflow: auto; }\\n\\n.procedureln--container {\\n  padding: 0px;\\n  padding-bottom: 10px;\\n  overflow: hidden;\\n  margin: 0px 0px 5px 0px;\\n  height: -webkit-fit-content;\\n  height: -moz-fit-content;\\n  height: fit-content; }\\n\\n.procedureln--container #spacer {\\n    height: 10px; }\\n\\n.procedureln--container-start {\\n  height: -webkit-fit-content;\\n  height: -moz-fit-content;\\n  height: fit-content; }\\n\\nh2 {\\n  min-height: 30px;\\n  color: #373737;\\n  padding-left: 8px;\\n  font-family: sans-serif;\\n  line-height: 30px;\\n  font-size: 12px;\\n  font-weight: 550;\\n  width: 100%;\\n  display: flex;\\n  flex-flow: row nowrap;\\n  cursor: pointer; }\\n\\nh2 #node--name {\\n    width: 80%;\\n    text-overflow: ellipsis;\\n    overflow: hidden;\\n    white-space: nowrap; }\\n\\nh2 #node--arr {\\n    width: 20%; }\\n\\n#nodeMenu {\\n  display: none;\\n  position: fixed;\\n  transition: display 0.4s;\\n  left: 3px;\\n  top: 70px;\\n  width: 125px;\\n  z-index: 1;\\n  background-color: #fafafb;\\n  border: 1px solid #999999;\\n  cursor: pointer; }\\n\\n#nodeMenu button {\\n    display: block;\\n    background-color: #fafafb;\\n    border: 0px;\\n    margin: 0px;\\n    padding: 0px;\\n    line-height: 30px;\\n    height: 30px;\\n    font-size: 12px; }\\n\\n#nodeMenu li {\\n    display: block;\\n    overflow: hidden;\\n    text-overflow: ellipsis;\\n    white-space: nowrap;\\n    line-height: 20px;\\n    background-color: #fafafb;\\n    font-weight: 550;\\n    border: 0px;\\n    margin: 0px;\\n    padding: 0px 10px 0px 10px;\\n    line-height: 30px;\\n    height: 30px;\\n    font-size: 12px;\\n    color: #373737; }\\n\\n#nodeMenu li:hover {\\n      color: #00006d;\\n      background-color: #E6E6E6; }\\n\\nhr {\\n  border-top: 2px solid #E6E6E6;\\n  width: 100%; }\\n\\nprocedure-item.ng-star-inserted {\\n  max-height: 100%; }\\n\\n.divider--container {\\n  height: 20px;\\n  display: flex;\\n  flex-flow: column nowrap;\\n  padding-left: 8px;\\n  padding-right: 5px;\\n  width: 100%;\\n  box-sizing: border-box;\\n  margin: 10px 0px 2px 0px; }\\n\\n.divider--container .divider {\\n    height: 100%;\\n    padding-left: 2px;\\n    padding-bottom: 2px;\\n    border-bottom: 3px solid #999999; }\\n\\n.divider--container .divider span {\\n      font-size: 12px;\\n      font-weight: 550;\\n      color: #00006d; }\\n\\n#modelViewButton--container {\\n  padding: 0px 13px 0px 0px;\\n  margin-bottom: 5px; }\\n\\n#modelViewButton--container button {\\n    width: 100%;\\n    margin: 0px 5px 2px 8px;\\n    background-color: #E6E6E6;\\n    color: #808080;\\n    text-align: center;\\n    text-decoration: none;\\n    font-size: 12px;\\n    transition: 0.4s;\\n    border: 2px solid transparent; }\\n\\n#modelViewButton--container button span {\\n      color: #00006d;\\n      font-weight: 550; }\\n\\n#modelViewButton--container button:hover, #modelViewButton--container button:active {\\n      background-color: #CCCCCC;\\n      color: #373737; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdmlld3Mvdmlldy1lZGl0b3IvQzpcXERyb3Bib3hcXEZpbGVzXFxTb2Z0d2FyZVxcR2l0SHViXFxkZXNpZ24tYXV0b21hdGlvblxcbW9iaXVzLXBhcmFtZXRyaWMtbW9kZWxsZXIvc3JjXFxhcHBcXHZpZXdzXFx2aWV3LWVkaXRvclxcdmlldy1lZGl0b3IuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL3ZpZXdzL3ZpZXctZWRpdG9yL0M6XFxEcm9wYm94XFxGaWxlc1xcU29mdHdhcmVcXEdpdEh1YlxcZGVzaWduLWF1dG9tYXRpb25cXG1vYml1cy1wYXJhbWV0cmljLW1vZGVsbGVyL3NyY1xcc2Nzc1xcdmFyaWFibGVzLnNjc3MiLCJzcmMvYXBwL3ZpZXdzL3ZpZXctZWRpdG9yL0M6XFxEcm9wYm94XFxGaWxlc1xcU29mdHdhcmVcXEdpdEh1YlxcZGVzaWduLWF1dG9tYXRpb25cXG1vYml1cy1wYXJhbWV0cmljLW1vZGVsbGVyL3NyY1xcc2Nzc1xcY29sb3JzLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBR0E7RUFDSSxnQkNGZ0I7RURHaEIsZ0JBQWdCLEVBQUE7O0FBSXBCO0VBQ0ksY0FBYztFQUNkLFlBQVk7RUFDWixXQUFXLEVBQUE7O0FBR2Y7RUFDSSxjQUFjO0VBQ2Qsa0JBQWtCO0VBQ2xCLFdBQVcsRUFBQTs7QUFJZjtFQUNJLG9CQUFvQjtFQUNwQixXQUFXO0VBQ1gsZ0JBQWdCLEVBQUE7O0FBR3BCO0VBQ0ksY0FBYztFQUNkLFlBQVk7RUFDWixnQkFBZ0I7RUFDaEIsZ0JBQWdCO0VBRWhCLDZCQUE2QjtFQUM3QiwwQkFBMEI7RUFDMUIsZ0JBQWdCLEVBQUE7O0FBUnBCO0lBVVEsYUFBYTtJQUNiLHdCQUF3QjtJQUV4QixnQkFBZTtJQUNmLFdBQVcsRUFBQTs7QUFzQm5CO0VBQ0ksWUFBWSxFQUFBOztBQUdoQjtFQUNJLHlCQUF5QjtFQUN6Qiw4QkFBOEI7RUFDOUIsNkJBQTZCO0VBQzdCLFlBQVk7RUFDWixjQUFjLEVBQUE7O0FBUWxCO0VBQ0ksWUFBWTtFQUNaLG9CQUFvQjtFQUNwQixnQkFBZ0I7RUFDaEIsdUJBQXVCO0VBQ3ZCLDJCQUFtQjtFQUFuQix3QkFBbUI7RUFBbkIsbUJBQW1CLEVBQUE7O0FBTHZCO0lBUVEsWUFBWSxFQUFBOztBQUlwQjtFQUNJLDJCQUFtQjtFQUFuQix3QkFBbUI7RUFBbkIsbUJBQW1CLEVBQUE7O0FBR3ZCO0VBQ0ksZ0JDNUZTO0VENkZULGNFekZZO0VGMEZaLGlCQUFpQjtFQUNqQix1QkFBdUI7RUFDdkIsaUJDaEdTO0VEaUdULGVDbEdTO0VEbUdULGdCQUFnQjtFQUNoQixXQUFXO0VBQ1gsYUFBYTtFQUNiLHFCQUFxQjtFQUNyQixlQUFlLEVBQUE7O0FBWG5CO0lBYVEsVUFBVTtJQUNWLHVCQUF1QjtJQUN2QixnQkFBZ0I7SUFDaEIsbUJBQW1CLEVBQUE7O0FBaEIzQjtJQW1CUSxVQUFVLEVBQUE7O0FBSWxCO0VBQ0ksYUFBYTtFQUNiLGVBQWU7RUFDZix3QkFBd0I7RUFDeEIsU0FBUztFQUNULFNBQVM7RUFDVCxZQUFZO0VBQ1osVUFBVTtFQUNWLHlCRXpIdUI7RUYwSHZCLHlCRS9IWTtFRm1JWixlQUFlLEVBQUE7O0FBYm5CO0lBZ0JRLGNBQWM7SUFDZCx5QkVsSW1CO0lGbUluQixXQUFXO0lBQ1gsV0FBVztJQUNYLFlBQVk7SUFDWixpQkN2SUs7SUR3SUwsWUN4SUs7SUR5SUwsZUMxSUssRUFBQTs7QURtSGI7SUEyQlEsY0FBYztJQUNkLGdCQUFnQjtJQUNoQix1QkFBdUI7SUFDdkIsbUJBQW1CO0lBQ25CLGlCQUFpQjtJQUNqQix5QkVqSm1CO0lGa0puQixnQkFBZ0I7SUFDaEIsV0FBVztJQUNYLFdBQVc7SUFDWCwwQkFBMEI7SUFDMUIsaUJDdkpLO0lEd0pMLFlDeEpLO0lEeUpMLGVDMUpLO0lENEpMLGNFdkpRLEVBQUE7O0FGOEdoQjtNQTJDWSxjRXZKbUI7TUZ3Sm5CLHlCRS9KSSxFQUFBOztBRnFLaEI7RUFDSSw2QkV0S1k7RUZ1S1osV0FBVSxFQUFBOztBQUlkO0VBQ0ksZ0JBQWdCLEVBQUE7O0FBSXBCO0VBQ0ksWUFBWTtFQUNaLGFBQWE7RUFDYix3QkFBd0I7RUFDeEIsaUJBQWlCO0VBQ2pCLGtCQUFrQjtFQUNsQixXQUFXO0VBQ1gsc0JBQXNCO0VBQ3RCLHdCQUF3QixFQUFBOztBQVI1QjtJQVVRLFlBQVk7SUFDWixpQkFBaUI7SUFDakIsbUJBQW1CO0lBQ25CLGdDRWhNUSxFQUFBOztBRm1MaEI7TUFlWSxlQy9MQztNRGdNRCxnQkFBZ0I7TUFDaEIsY0UxTG1CLEVBQUE7O0FGK0wvQjtFQUNJLHlCQUF5QjtFQUN6QixrQkFBa0IsRUFBQTs7QUFGdEI7SUFJUSxXQUFXO0lBQ1gsdUJBQXVCO0lBRXZCLHlCRTdNUTtJRjhNUixjRWxOUTtJRm9OUixrQkFBa0I7SUFDbEIscUJBQXFCO0lBRXJCLGVDbk5LO0lEb05MLGdCQUFnQjtJQUNoQiw2QkFBNkIsRUFBQTs7QUFmckM7TUFrQlksY0VqTm1CO01Ga05uQixnQkFBZ0IsRUFBQTs7QUFuQjVCO01BdUJZLHlCRTlOSTtNRitOSixjRXpOSSxFQUFBIiwiZmlsZSI6InNyYy9hcHAvdmlld3Mvdmlldy1lZGl0b3Ivdmlldy1lZGl0b3IuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJAaW1wb3J0ICd+c2Nzcy9jb2xvcnMnO1xyXG5AaW1wb3J0ICd+c2Nzcy92YXJpYWJsZXMnO1xyXG5cclxuLmNvbnRlbnRfX3BhbmVse1xyXG4gICAgbWFyZ2luLXRvcDogJGhlYWRlci1oZWlnaHQ7XHJcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xyXG5cclxufVxyXG5cclxuLmNvbnRhaW5lci0tZWRpdG9ye1xyXG4gICAgZGlzcGxheTogYmxvY2s7IFxyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbn1cclxuXHJcbi5jb250YWluZXJfX2hlYWRpbmd7XHJcbiAgICBkaXNwbGF5OiBibG9jaztcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG5cclxufVxyXG5cclxuLmNvbnRhaW5lcl9fY29udGVudHtcclxuICAgIGRpc3BsYXk6IGlubGluZS1mbGV4O1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBtaW4taGVpZ2h0OiAxMDAlO1xyXG59XHJcblxyXG4uY29udGFpbmVyLS10b29sc2V0e1xyXG4gICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICB3aWR0aDogMTI1cHg7XHJcbiAgICBtaW4td2lkdGg6IDEyNXB4O1xyXG4gICAgbWF4LXdpZHRoOiAxMjVweDtcclxuICAgIFxyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XHJcbiAgICBoZWlnaHQ6IGNhbGMoMTAwdmggLSA0MHB4KTsgLy8gNDBweCA9PT0gJGhlYWRlci1oZWlnaHRcclxuICAgIG92ZXJmbG93OiBoaWRkZW47XHJcbiAgICB0b29sc2V0e1xyXG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAgZmxleC1mbG93OiBjb2x1bW4gbm93cmFwO1xyXG4gICAgICAgIFxyXG4gICAgICAgIG92ZXJmbG93OmhpZGRlbjtcclxuICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICAvLyAmOmhvdmVye1xyXG4gICAgICAgIC8vICAgICBvdmVyZmxvdy15OiBhdXRvO1xyXG4gICAgICAgIC8vIH1cclxuICAgIH1cclxuICAgIC8vIHRvb2xzZXQ6Oi13ZWJraXQtc2Nyb2xsYmFyIHtcclxuICAgIC8vICAgICB3aWR0aDogOHB4O1xyXG4gICAgLy8gfVxyXG4gICAgXHJcbiAgICAvLyB0b29sc2V0Ojotd2Via2l0LXNjcm9sbGJhci10cmFjayB7XHJcbiAgICAvLyAgICAgYmFja2dyb3VuZDogJGNvbG9yNTtcclxuICAgIC8vIH1cclxuICAgIFxyXG4gICAgLy8gdG9vbHNldDo6LXdlYmtpdC1zY3JvbGxiYXItdGh1bWIge1xyXG4gICAgLy8gICAgIGJhY2tncm91bmQ6ICRjb2xvcjQ7IFxyXG4gICAgLy8gICAgIGJvcmRlci1sZWZ0OiAycHggc29saWQgJGNvbG9yNTtcclxuICAgIC8vIH1cclxuICAgIFxyXG4gICAgLy8gdG9vbHNldDo6LXdlYmtpdC1zY3JvbGxiYXItdGh1bWI6aG92ZXIge1xyXG4gICAgLy8gICAgIGJhY2tncm91bmQ6ICRjb2xvcjI7IFxyXG4gICAgLy8gfVxyXG59XHJcbi5wcm8tY29udGFpbmVye1xyXG4gICAgaGVpZ2h0OiBhdXRvO1xyXG59XHJcblxyXG4uY29udGFpbmVyLS1wcm9jZWR1cmV7XHJcbiAgICB3aWR0aDogY2FsYygxMDAlIC0gMTI1cHgpOyAvL21pbi13aWR0aCB0b29sc2V0XHJcbiAgICBtYXgtaGVpZ2h0OiBjYWxjKDEwMHZoIC0gNDBweCk7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcclxuICAgIHBhZGRpbmc6IDBweDsgICBcclxuICAgIG92ZXJmbG93OiBhdXRvO1xyXG5cclxuICAgIC8vIG92ZXJmbG93OiBoaWRkZW47XHJcbiAgICAvLyA6aG92ZXJ7XHJcbiAgICAvLyAgICAgb3ZlcmZsb3c6IGF1dG87XHJcbiAgICAvLyB9XHJcbn1cclxuXHJcbi5wcm9jZWR1cmVsbi0tY29udGFpbmVye1xyXG4gICAgcGFkZGluZzogMHB4O1xyXG4gICAgcGFkZGluZy1ib3R0b206IDEwcHg7XHJcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xyXG4gICAgbWFyZ2luOiAwcHggMHB4IDVweCAwcHg7XHJcbiAgICBoZWlnaHQ6IGZpdC1jb250ZW50O1xyXG4gICAgLy8gaGVpZ2h0OiBjYWxjKDEwMHZoIC0gNDBweCAtIDI1cHgpOyAvLyA0MHB4ID09PSAkaGVhZGVyLWhlaWdodCAyNXB4IHRvcCBtYXJnaW4gJiBidG4gaGVpZ2h0XHJcbiAgICAjc3BhY2Vye1xyXG4gICAgICAgIGhlaWdodDogMTBweDtcclxuICAgIH1cclxufVxyXG5cclxuLnByb2NlZHVyZWxuLS1jb250YWluZXItc3RhcnR7XHJcbiAgICBoZWlnaHQ6IGZpdC1jb250ZW50OyAvLyA0MHB4ID09PSAkaGVhZGVyLWhlaWdodCAyNXB4IHRvcCBtYXJnaW4gJiBidG4gaGVpZ2h0IDU2cHggZmxvd2NoYXJ0IGluZm9cclxufVxyXG5cclxuaDJ7XHJcbiAgICBtaW4taGVpZ2h0OiAkZnNpemUzO1xyXG4gICAgY29sb3I6ICRjb2xvcjg7XHJcbiAgICBwYWRkaW5nLWxlZnQ6IDhweDtcclxuICAgIGZvbnQtZmFtaWx5OiBzYW5zLXNlcmlmO1xyXG4gICAgbGluZS1oZWlnaHQ6ICRmc2l6ZTM7XHJcbiAgICBmb250LXNpemU6ICRmc2l6ZTI7XHJcbiAgICBmb250LXdlaWdodDogNTUwO1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgZmxleC1mbG93OiByb3cgbm93cmFwO1xyXG4gICAgY3Vyc29yOiBwb2ludGVyO1xyXG4gICAgI25vZGUtLW5hbWV7XHJcbiAgICAgICAgd2lkdGg6IDgwJTtcclxuICAgICAgICB0ZXh0LW92ZXJmbG93OiBlbGxpcHNpcztcclxuICAgICAgICBvdmVyZmxvdzogaGlkZGVuO1xyXG4gICAgICAgIHdoaXRlLXNwYWNlOiBub3dyYXA7XHJcbiAgICB9XHJcbiAgICAjbm9kZS0tYXJye1xyXG4gICAgICAgIHdpZHRoOiAyMCU7XHJcbiAgICB9XHJcbn1cclxuXHJcbiNub2RlTWVudSB7XHJcbiAgICBkaXNwbGF5OiBub25lO1xyXG4gICAgcG9zaXRpb246IGZpeGVkO1xyXG4gICAgdHJhbnNpdGlvbjogZGlzcGxheSAwLjRzO1xyXG4gICAgbGVmdDogM3B4O1xyXG4gICAgdG9wOiA3MHB4O1xyXG4gICAgd2lkdGg6IDEyNXB4O1xyXG4gICAgei1pbmRleDogMTtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICRjb2xvcjY7XHJcbiAgICBib3JkZXI6IDFweCBzb2xpZCAkY29sb3IyO1xyXG4gICAgLy8gYm9yZGVyLXJpZ2h0OiAxcHggc29saWQgJGNvbG9yMjtcclxuICAgIC8vIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAkY29sb3IyO1xyXG4gICAgLy8gYm9yZGVyLXRvcDogMXB4IHNvbGlkICRjb2xvcjI7XHJcbiAgICBjdXJzb3I6IHBvaW50ZXI7XHJcblxyXG4gICAgYnV0dG9ue1xyXG4gICAgICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICRjb2xvcjY7XHJcbiAgICAgICAgYm9yZGVyOiAwcHg7XHJcbiAgICAgICAgbWFyZ2luOiAwcHg7XHJcbiAgICAgICAgcGFkZGluZzogMHB4O1xyXG4gICAgICAgIGxpbmUtaGVpZ2h0OiAkZnNpemUzO1xyXG4gICAgICAgIGhlaWdodDogJGZzaXplMztcclxuICAgICAgICBmb250LXNpemU6ICRmc2l6ZTI7XHJcbiAgICB9XHJcblxyXG4gICAgbGl7XHJcbiAgICAgICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICAgICAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICAgICAgICB0ZXh0LW92ZXJmbG93OiBlbGxpcHNpcztcclxuICAgICAgICB3aGl0ZS1zcGFjZTogbm93cmFwO1xyXG4gICAgICAgIGxpbmUtaGVpZ2h0OiAyMHB4O1xyXG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICRjb2xvcjY7XHJcbiAgICAgICAgZm9udC13ZWlnaHQ6IDU1MDtcclxuICAgICAgICBib3JkZXI6IDBweDtcclxuICAgICAgICBtYXJnaW46IDBweDtcclxuICAgICAgICBwYWRkaW5nOiAwcHggMTBweCAwcHggMTBweDtcclxuICAgICAgICBsaW5lLWhlaWdodDogJGZzaXplMztcclxuICAgICAgICBoZWlnaHQ6ICRmc2l6ZTM7XHJcbiAgICAgICAgZm9udC1zaXplOiAkZnNpemUyO1xyXG4gICAgICAgIFxyXG4gICAgICAgIGNvbG9yOiAkY29sb3I4O1xyXG4gICAgICAgICY6aG92ZXJ7XHJcbiAgICAgICAgICAgIGNvbG9yOiAkc2VsZWN0ZWQtY29sb3I7XHJcbiAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICRjb2xvcjU7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxufVxyXG5cclxuaHJ7XHJcbiAgICBib3JkZXItdG9wOiAycHggc29saWQgJGNvbG9yNTtcclxuICAgIHdpZHRoOjEwMCU7XHJcblxyXG59XHJcblxyXG5wcm9jZWR1cmUtaXRlbS5uZy1zdGFyLWluc2VydGVke1xyXG4gICAgbWF4LWhlaWdodDogMTAwJTtcclxufVxyXG5cclxuXHJcbi5kaXZpZGVyLS1jb250YWluZXJ7XHJcbiAgICBoZWlnaHQ6IDIwcHg7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgZmxleC1mbG93OiBjb2x1bW4gbm93cmFwO1xyXG4gICAgcGFkZGluZy1sZWZ0OiA4cHg7XHJcbiAgICBwYWRkaW5nLXJpZ2h0OiA1cHg7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XHJcbiAgICBtYXJnaW46IDEwcHggMHB4IDJweCAwcHg7XHJcbiAgICAuZGl2aWRlcntcclxuICAgICAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgICAgICAgcGFkZGluZy1sZWZ0OiAycHg7XHJcbiAgICAgICAgcGFkZGluZy1ib3R0b206IDJweDtcclxuICAgICAgICBib3JkZXItYm90dG9tOiAzcHggc29saWQgJGNvbG9yMjtcclxuICAgICAgICBzcGFue1xyXG4gICAgICAgICAgICBmb250LXNpemU6ICRmc2l6ZTI7XHJcbiAgICAgICAgICAgIGZvbnQtd2VpZ2h0OiA1NTA7XHJcbiAgICAgICAgICAgIGNvbG9yOiAkc2VsZWN0ZWQtY29sb3I7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59XHJcblxyXG4jbW9kZWxWaWV3QnV0dG9uLS1jb250YWluZXJ7XHJcbiAgICBwYWRkaW5nOiAwcHggMTNweCAwcHggMHB4O1xyXG4gICAgbWFyZ2luLWJvdHRvbTogNXB4O1xyXG4gICAgYnV0dG9ue1xyXG4gICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgIG1hcmdpbjogMHB4IDVweCAycHggOHB4O1xyXG4gICAgXHJcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJGNvbG9yNTtcclxuICAgICAgICBjb2xvcjogJGNvbG9yMTtcclxuICAgIFxyXG4gICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgICAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XHJcbiAgICBcclxuICAgICAgICBmb250LXNpemU6ICRmc2l6ZTI7XHJcbiAgICAgICAgdHJhbnNpdGlvbjogMC40cztcclxuICAgICAgICBib3JkZXI6IDJweCBzb2xpZCB0cmFuc3BhcmVudDtcclxuICAgIFxyXG4gICAgICAgIHNwYW57XHJcbiAgICAgICAgICAgIGNvbG9yOiAkc2VsZWN0ZWQtY29sb3I7XHJcbiAgICAgICAgICAgIGZvbnQtd2VpZ2h0OiA1NTA7XHJcbiAgICAgICAgfVxyXG4gICAgICAgICY6aG92ZXIsICY6YWN0aXZlIHtcclxuICAgICAgICAgICAgLy8gYm9yZGVyLWNvbG9yOiAkc2VsZWN0ZWQtY29sb3I7XHJcbiAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICRjb2xvcjQ7XHJcbiAgICAgICAgICAgIGNvbG9yOiAkY29sb3I4O1xyXG4gICAgICAgIH1cclxuICAgIH1cclxufSIsIiRwYWRkaW5nOiA0MHB4OyAvLyA/IG5vdCB1c2VkXHJcbiRzbWFsbC1wYWRkaW5nOiAxNXB4O1xyXG4kaGVhZGVyLWhlaWdodDogNDBweDtcclxuXHJcbiRmc2l6ZTE6IDE1cHg7XHJcbiRmc2l6ZTI6IDEycHg7XHJcbiRmc2l6ZTM6IDMwcHg7XHJcblxyXG4kcG9ydC1zaXplOiAxNXB4O1xyXG4kZGVmYXVsdC1zaWRlLXBhZGRpbmc6IDE1cHg7XHJcblxyXG4kZGlzYWJsZWQtb3BhY2l0eTogMC40OyIsIlxyXG4kY29sb3IxOiAjODA4MDgwO1xyXG4kY29sb3IyOiAjOTk5OTk5O1xyXG4kY29sb3IzOiAjQjNCM0IzOyBcclxuJGNvbG9yNDogI0NDQ0NDQztcclxuJGNvbG9yNTogI0U2RTZFNjtcclxuJGNvbG9yNS01OiByZ2IoMjQ1LCAyNDUsIDI0NSk7XHJcbiRjb2xvcjY6IHJnYigyNTAsIDI1MCwgMjUxKTtcclxuXHJcbiRjb2xvcjc6IHdoaXRlO1xyXG4kY29sb3I4OiAjMzczNzM3O1xyXG5cclxuJHNlbGVjdGVkLWNvbG9yOiByZ2IoMCwgMCwgMTA5KTtcclxuJGhvdmVyLWNvbG9yOiAkY29sb3IyO1xyXG5cclxuJGVycm9yLWNvbG9yOiAjRTk0ODU4OyAvL3BpbmstcmVkXHJcbiRlcnJvci1jb2xvci1sdDogcmdiKDI1NSwgMjIwLCAyMjQpO1xyXG4kcGNvbG9yMjogI0YzQTMyQTsgLy9vcmFuZ2UteWVsbG93XHJcbiRwcmludC1jb2xvcjogcmdiKDEzMCwgMTkxLCAxMTApOyAvL2xpZ2h0Z3JlZW5cclxuJHByaW50LWNvbG9yLWx0OiByZ2IoMjMwLCAyNTUsIDIyMSk7XHJcbiRzZWxlY3RHZW9tLWNvbG9yOiByZ2IoMjU1LCAxNzQsIDApOyAvLyBsaWdodCBvcmFuZ2VcclxuJHNlbGVjdEdlb20tY29sb3ItbHQ6IHJnYigyNTUsIDIyNSwgMTYwKTtcclxuXHJcbi8vICRwcm9kLWJhY2tncm91bmQtY29sb3I6IHJnYigyNTAsMjUwLDI1MCk7XHJcbi8vICRiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMjIwLDIyMCwyMjApO1xyXG4kZnVuY3Rpb24tdGV4dC1jb2xvcjogcmdiKDE5MCwgMTQwLCAzMCk7XHJcbiRmdW5jdGlvbi10ZXh0LWNvbG9yMjogcmdiKDE4LCAxMjYsIDEzNik7XHJcbiRiYXNpYy1mdW5jdGlvbi10ZXh0LWNvbG9yOiByZ2IoMjAwLCA3MCwgMTUwKTtcclxuJGNvbW1lbnQtY29sb3I6IGRhcmtncmVlbjtcclxuIl19 */\"","import { Component, Input, EventEmitter, Output, AfterViewInit, HostListener} from '@angular/core';\r\nimport { IFlowchart } from '@models/flowchart';\r\nimport { NodeUtils, INode } from '@models/node';\r\nimport { ProcedureTypes, IFunction, IProcedure } from '@models/procedure';\r\nimport { DataService } from '@services';\r\nimport { Router } from '@angular/router';\r\nimport * as circularJSON from 'circular-json';\r\nimport { LoadUrlComponent } from '@shared/components/file/loadurl.component';\r\nimport { getViewerData } from '@shared/getViewerData';\r\nimport { nodeChildrenAsMap } from '@angular/router/src/utils/tree';\r\nimport { checkNodeValidity } from '@shared/parser';\r\n\r\nconst canvas = document.createElement('canvas');\r\nconst ctx = canvas.getContext('2d');\r\nctx.font = '12px sans-serif';\r\n\r\n@Component({\r\n  selector: 'view-editor',\r\n  templateUrl: './view-editor.component.html',\r\n  styleUrls: ['./view-editor.component.scss']\r\n})\r\nexport class ViewEditorComponent implements AfterViewInit {\r\n    /*\r\n    @Input() flowchart: IFlowchart;\r\n    @Input() node: INode;\r\n    */\r\n    viewerData = getViewerData;\r\n\r\n    @Output() imported = new EventEmitter();\r\n    @Output() delete_Function = new EventEmitter();\r\n    notificationMessage = '';\r\n    notificationTrigger = true;\r\n\r\n    disableInput = false;\r\n\r\n    private copyCheck = true;\r\n\r\n    constructor(private dataService: DataService, private router: Router) {\r\n        new LoadUrlComponent(this.dataService, this.router).loadStartUpURL(this.router.url);\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        setTimeout(() => {\r\n            this.adjustTextArea();\r\n        }, 50);\r\n    }\r\n\r\n    // .............. ON INPUT FOCUS ................\r\n    onfocus(event: Event) {\r\n        if ((<HTMLElement>event.target).nodeName === 'INPUT') {\r\n            for (const prod of this.dataService.node.state.procedure) {\r\n                prod.selected = false;\r\n            }\r\n            this.dataService.node.state.procedure = [];\r\n        }\r\n    }\r\n\r\n    adjustTextArea() {\r\n        let textarea = document.getElementById('flowchart-desc');\r\n        if (textarea) {\r\n            const desc = this.dataService.flowchart.description.split('\\n');\r\n            const textareaWidth = textarea.getBoundingClientRect().width - 30;\r\n            let lineCount = 0;\r\n            for (const line of desc) {\r\n                lineCount += Math.floor(ctx.measureText(line).width / textareaWidth) + 1;\r\n            }\r\n            textarea.style.height = lineCount * 14 + 4 + 'px';\r\n\r\n            for (const prod of this.dataService.node.procedure) {\r\n                if (prod.type !== ProcedureTypes.Constant) { continue; }\r\n                textarea = document.getElementById(prod.ID + '_desc');\r\n                if (textarea && prod.meta.description) {\r\n                    const prodDesc = prod.meta.description.split('\\n');\r\n                    const prodTextareaWidth = textarea.getBoundingClientRect().width - 30;\r\n                    let prodLineCount = 0;\r\n                    for (const line of prodDesc) {\r\n                        prodLineCount += Math.floor(ctx.measureText(line).width / prodTextareaWidth) + 1;\r\n                    }\r\n                    textarea.style.height = prodLineCount * 14 + 4 + 'px';\r\n                }\r\n            }\r\n        }\r\n        textarea = document.getElementById('flowchart-return');\r\n        if (textarea) {\r\n            const desc = (this.dataService.flowchart.returnDescription || '').split('\\n');\r\n            const textareaWidth = textarea.getBoundingClientRect().width - 30;\r\n            let lineCount = 0;\r\n            for (const line of desc) {\r\n                lineCount += Math.floor(ctx.measureText(line).width / textareaWidth) + 1;\r\n            }\r\n            textarea.style.height = lineCount * 14 + 4 + 'px';\r\n        }\r\n    }\r\n\r\n\r\n    // add a procedure\r\n    add(data: {type: ProcedureTypes, data: IFunction}): void {\r\n        NodeUtils.add_procedure(this.dataService.node, data.type, data.data);\r\n        let prod = this.dataService.node.state.procedure[0];\r\n        if (prod.type === ProcedureTypes.Blank) {\r\n            prod = prod.parent;\r\n        }\r\n        this.dataService.registerEdtAction([{'type': 'add',\r\n            'parent': prod.parent, 'prod': prod}]);\r\n    }\r\n\r\n    // delete a procedure\r\n    deleteChild(index: number): void {\r\n        this.dataService.registerEdtAction([{'type': 'del',\r\n            'parent': undefined, 'index': index, 'prod': this.dataService.node.procedure[index]}]);\r\n        this.dataService.node.procedure.splice(index, 1);\r\n        NodeUtils.deselect_procedure(this.dataService.node);\r\n    }\r\n\r\n    // select a procedure\r\n    selectProcedure(event): void {\r\n        if (event === 'clear') {\r\n            NodeUtils.deselect_procedure(this.dataService.node);\r\n            return;\r\n        }\r\n        if (!event.ctrl && document.activeElement.tagName === 'INPUT') {\r\n            return;\r\n        }\r\n        NodeUtils.select_procedure(this.dataService.node, event.prod, event.ctrl || false, event.shift || false);\r\n    }\r\n\r\n    // copy selected procedures\r\n    copyProd() {\r\n        const node = this.dataService.node;\r\n        let i = 0;\r\n        while (i < node.state.procedure.length) {\r\n            if (node.state.procedure[i].type === ProcedureTypes.Blank || node.state.procedure[i].type === ProcedureTypes.Return) {\r\n                node.state.procedure[i].selected = false;\r\n                node.state.procedure.splice(i, 1);\r\n            } else {\r\n                i += 1;\r\n            }\r\n        }\r\n        if (!this.copyCheck || document.activeElement.nodeName === 'INPUT' || node.state.procedure.length === 0) { return; }\r\n\r\n        const temp = node.state.procedure.slice();\r\n        this.dataService.copiedProd = [];\r\n        NodeUtils.rearrangeProcedures(this.dataService.copiedProd, temp, node.procedure);\r\n\r\n        this.notificationMessage = `Copied ${this.dataService.copiedProd.length} Procedures`;\r\n        this.notificationTrigger = !this.notificationTrigger;\r\n    }\r\n\r\n    // cut selected procedures\r\n    cutProd() {\r\n        const node = this.dataService.node;\r\n        let i = 0;\r\n        while (i < node.state.procedure.length) {\r\n            if (node.state.procedure[i].type === ProcedureTypes.Blank || node.state.procedure[i].type === ProcedureTypes.Return) {\r\n                node.state.procedure[i].selected = false;\r\n                node.state.procedure.splice(i, 1);\r\n            } else {\r\n                i += 1;\r\n            }\r\n        }\r\n        if (!this.copyCheck || document.activeElement.nodeName === 'INPUT' || node.state.procedure.length === 0) { return; }\r\n\r\n        const temp = node.state.procedure.slice();\r\n        this.dataService.copiedProd = [];\r\n        NodeUtils.rearrangeProcedures(this.dataService.copiedProd, temp, node.procedure);\r\n\r\n        let parentArray: IProcedure[];\r\n        const redoActions = [];\r\n        for (const prod of this.dataService.copiedProd) {\r\n            if (prod.type === ProcedureTypes.Blank) { continue; }\r\n            if (prod.parent) {\r\n                parentArray = prod.parent.children;\r\n            } else { parentArray = node.procedure; }\r\n\r\n            for (let j = 0; j < parentArray.length; j++ ) {\r\n                if (parentArray[j] === prod) {\r\n                    redoActions.unshift({'type': 'del', 'parent': parentArray[j].parent, 'index': j, 'prod': parentArray[j]});\r\n                    parentArray.splice(j, 1);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        this.dataService.registerEdtAction(redoActions);\r\n        checkNodeValidity(this.dataService.node);\r\n\r\n        NodeUtils.deselect_procedure(node);\r\n\r\n        this.notificationMessage = `Cut ${this.dataService.copiedProd.length} Procedures`;\r\n        this.notificationTrigger = !this.notificationTrigger;\r\n    }\r\n\r\n    // paste copied procedures\r\n    pasteProd() {\r\n        const node = this.dataService.node;\r\n        if (this.copyCheck\r\n        && this.dataService.copiedProd\r\n        && document.activeElement.nodeName !== 'INPUT'\r\n        && document.activeElement.nodeName !== 'TEXTAREA') {\r\n            const pastingPlace = node.state.procedure[node.state.procedure.length - 1];\r\n            const toBePasted = this.dataService.copiedProd;\r\n            const redoActions = [];\r\n            if (pastingPlace === undefined) {\r\n                for (let i = 0; i < toBePasted.length; i++) {\r\n                    if (toBePasted[i].type === ProcedureTypes.Blank ||\r\n                        toBePasted[i].type === ProcedureTypes.Return) { continue; }\r\n                    NodeUtils.paste_procedure(node, toBePasted[i]);\r\n                    redoActions.unshift({'type': 'add',\r\n                        'parent': this.dataService.node.state.procedure[0].parent, 'prod': this.dataService.node.state.procedure[0]});\r\n                    node.state.procedure[0].selected = false;\r\n                    node.state.procedure = [];\r\n                }\r\n            } else {\r\n                for (let i = toBePasted.length - 1; i >= 0; i --) {\r\n                    if (toBePasted[i].type === ProcedureTypes.Blank ||\r\n                        toBePasted[i].type === ProcedureTypes.Return) { continue; }\r\n                    NodeUtils.paste_procedure(node, toBePasted[i]);\r\n                    redoActions.unshift({'type': 'add',\r\n                        'parent': this.dataService.node.state.procedure[0].parent, 'prod': this.dataService.node.state.procedure[0]});\r\n\r\n                    // CHECK IF THE BELOW CAN BE CHANGED TO: node.state.procedure[0]\r\n                    node.state.procedure[node.state.procedure.length - 1].selected = false;\r\n                    pastingPlace.selected = true;\r\n                    node.state.procedure = [pastingPlace];\r\n                }\r\n            }\r\n            this.dataService.registerEdtAction(redoActions);\r\n            checkNodeValidity(this.dataService.node);\r\n            // toBePasted = undefined;\r\n            this.notificationMessage = `Pasted ${toBePasted.length} Procedures`;\r\n            this.notificationTrigger = !this.notificationTrigger;\r\n        }\r\n    }\r\n    @HostListener('window:keydown', ['$event'])\r\n    onKeyDown(event: KeyboardEvent) {\r\n        if (event.key === 'Control' || event.key === 'Shift' || event.key === 'Meta') {\r\n            this.disableInput = true;\r\n        } else if (event.key === 'z' && (event.ctrlKey || event.metaKey)) {\r\n            event.preventDefault();\r\n        }\r\n    }\r\n\r\n    regAction(act) {\r\n        this.dataService.registerEdtAction(act);\r\n    }\r\n\r\n    disableSelectedProds() {\r\n        event.stopPropagation();\r\n        const prodList = this.dataService.node.state.procedure;\r\n        const newEnabled = ! prodList[prodList.length - 1].enabled;\r\n        for (const prod of prodList) {\r\n            if (prod.type === ProcedureTypes.Blank || prod.type === ProcedureTypes.Comment) { continue; }\r\n            prod.enabled = newEnabled;\r\n        }\r\n        // this.data.enabled = !this.data.enabled;\r\n    }\r\n\r\n\r\n    deleteSelectedProds() {\r\n        const node = this.dataService.node;\r\n        const redoActions = [];\r\n        for (const prod of node.state.procedure) {\r\n            let prodList: IProcedure[];\r\n            if (prod.parent) {\r\n                prodList = prod.parent.children;\r\n            } else {\r\n                prodList = node.procedure;\r\n            }\r\n            prod.selected = false;\r\n            for (let i = 1; i < prodList.length; i++) {\r\n                if (prodList[i].ID === prod.ID) {\r\n                    redoActions.unshift({'type': 'del', 'parent': prodList[i].parent, 'index': i, 'prod': prodList[i]});\r\n                    prodList.splice(i, 1);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        this.dataService.registerEdtAction(redoActions);\r\n        checkNodeValidity(this.dataService.node);\r\n        this.dataService.node.state.procedure = [];\r\n    }\r\n\r\n    @HostListener('window:keyup', ['$event'])\r\n    onKeyUp(event: KeyboardEvent) {\r\n        if (!(event.ctrlKey && event.metaKey && event.shiftKey)) { this.disableInput = false; }\r\n        if (!this.copyCheck) { return; }\r\n        if (event.key === 'Delete') {\r\n            this.deleteSelectedProds();\r\n        } else if (event.key.toLowerCase() === 'z' && (event.ctrlKey === true || event.metaKey === true)) {\r\n            let actions: any;\r\n            // if ((<HTMLElement>event.target).nodeName === 'INPUT') {return; }\r\n            if (event.shiftKey) {\r\n                actions = this.dataService.redoEdt();\r\n                if (!actions) { return; }\r\n                for (const act of actions) {\r\n                    if (act.type === 'del') {\r\n                        let prodList: IProcedure[];\r\n                        if (!act.parent) { prodList = this.dataService.node.procedure;\r\n                        } else { prodList = act.parent.children; }\r\n                        prodList.splice(act.index, 1);\r\n                    } else {\r\n                        let prodList: IProcedure[];\r\n                        if (!act.parent) { prodList = this.dataService.node.procedure;\r\n                        } else { prodList = act.parent.children; }\r\n                        prodList.splice(act.index, 0, act.prod);\r\n                    }\r\n                }\r\n            } else {\r\n                actions = this.dataService.undoEdt();\r\n                if (!actions) { return; }\r\n                for (const act of actions) {\r\n                    if (act.type === 'add') {\r\n                        let prodList: IProcedure[];\r\n                        if (!act.parent) { prodList = this.dataService.node.procedure;\r\n                        } else { prodList = act.parent.children; }\r\n                        if (act.index) {\r\n                            prodList.splice(act.index, 1);\r\n                        } else {\r\n                            for (let i = 0; i < prodList.length; i++) {\r\n                                if (prodList[i].ID === act.prod.ID) {\r\n                                    act.index = i;\r\n                                    prodList.splice(i, 1);\r\n                                    break;\r\n                                }\r\n                            }\r\n                        }\r\n                    } else {\r\n                        let prodList: IProcedure[];\r\n                        if (!act.parent) { prodList = this.dataService.node.procedure;\r\n                        } else { prodList = act.parent.children; }\r\n                        prodList.splice(act.index, 0, act.prod);\r\n                    }\r\n                }\r\n            }\r\n            NodeUtils.deselect_procedure(this.dataService.node);\r\n            checkNodeValidity(this.dataService.node);\r\n        }\r\n    }\r\n\r\n    notifyError(message) {\r\n        this.notificationMessage = message;\r\n        this.notificationTrigger = !this.notificationTrigger;\r\n    }\r\n\r\n    // activate copying/cutting/pasting when the mouse hovers over the procedure list\r\n    activateCopyPaste(): void {\r\n        this.copyCheck = true;\r\n    }\r\n\r\n    // deactivate copying/cutting/pasting when the mouse exit the procedure list\r\n    deactivateCopyPaste(): void {\r\n        this.copyCheck = false;\r\n    }\r\n\r\n\r\n\r\n    // import a flowchart as function\r\n    importFunction(event) {\r\n        for (const func of event) {\r\n            this.dataService.flowchart.functions.push(func);\r\n        }\r\n    }\r\n\r\n    // delete an imported function\r\n    deleteFunction(event) {\r\n        for (let i = 0; i < this.dataService.flowchart.functions.length; i++) {\r\n            if (this.dataService.flowchart.functions[i] === event) {\r\n                this.dataService.flowchart.functions.splice(i, 1);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    updateHelpView(event) {\r\n        if (typeof(event) === 'string') {\r\n            for (const func of this.dataService.flowchart.functions) {\r\n                if (func.name === event) {\r\n                    this.dataService.helpView = func.doc;\r\n                }\r\n            }\r\n        } else {\r\n            this.dataService.helpView = event;\r\n        }\r\n        this.dataService.toggleHelp(true);\r\n    }\r\n\r\n    setViewOutput() {\r\n        this.dataService.setModelOutputView(this.dataService.node.id, !this.getViewOutput());\r\n        // this.dataService.modelOutputView = !this.dataService.modelOutputView;\r\n    }\r\n\r\n    getViewOutput() {\r\n        return this.dataService.getModelOutputView(this.dataService.node.id);\r\n    }\r\n\r\n    // setTestModel() {\r\n    //     this.dataService.testModel = !this.dataService.testModel;\r\n    //     this.dataService.modelOutputView = this.dataService.testModel;\r\n    // }\r\n\r\n    // viewerData(): any {\r\n    //     const node = this.dataService.flowchart.nodes[this.dataService.flowchart.meta.selected_nodes[0]];\r\n    //     if (!node || !node.enabled) { return ''; }\r\n    //     // if (node.type === 'output') { return node.input.value; }\r\n    //     if (this.getViewOutput()) {\r\n    //         return node.model;\r\n    //     }\r\n    //     return node.input.value;\r\n    // }\r\n\r\n    setSplit(event) {\r\n        this.dataService.splitUpdate = true;\r\n        this.dataService.splitVal = event.sizes[1];\r\n        this.adjustTextArea();\r\n    }\r\n\r\n    unselectAll(event) {\r\n        if (event.ctrlKey || event.metaKey) { return; }\r\n        NodeUtils.deselect_procedure(this.dataService.node);\r\n    }\r\n    getSplit() { return this.dataService.splitVal; }\r\n    getFlowchart() { return this.dataService.flowchart; }\r\n    getNode() { return this.dataService.node; }\r\n    getFlowchartName() { return this.dataService.file.name; }\r\n\r\n}\r\n","import { NgModule, ModuleWithProviders } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { SharedModule } from '@shared/shared.module';\r\n\r\nimport { ViewEditorComponent } from './view-editor.component';\r\nimport { ProcedureItemComponent } from './procedure-item/procedure-item.component';\r\nimport { ToolsetComponent } from './toolset/toolset.component';\r\nimport { ParameterEditorComponent } from './parameter-editor/parameter-editor.component';\r\nimport { ProcedureInputEditorComponent } from './parameter-editor/procedure-input-editor/procedure-input-editor.component';\r\nimport { _parameterTypes} from '@modules';\r\nimport { ViewEditorRoutingModule } from './view-editor-routing.module';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ViewEditorComponent,\r\n    ProcedureItemComponent,\r\n    ToolsetComponent,\r\n    ParameterEditorComponent,\r\n    ProcedureInputEditorComponent,\r\n  ],\r\n  entryComponents: [\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    SharedModule,\r\n    ViewEditorRoutingModule\r\n  ],\r\n  exports: [\r\n    ViewEditorComponent,\r\n  ],\r\n  providers: []\r\n})\r\n\r\nexport class ViewEditorModule {\r\n  constructor () { }\r\n\r\n}\r\n","module.exports = \"<!--the main line-->\\r\\n<svg:polyline \\r\\nid=\\\"main-edge\\\" \\r\\nclass = \\\"edge\\\" \\r\\n[class.selected] = \\\"edge.selected\\\"\\r\\n[class.disabled] = \\\"!edge.source.parentNode.enabled\\\"\\r\\n[attr.points] = \\\"   (edge.source.parentNode.position.x + 50) + ',' +\\r\\n                    (edge.source.parentNode.position.y + 40) + ' ' +\\r\\n\\r\\n                    ((edge.target.parentNode.position.x + edge.source.parentNode.position.x) / 2 + 50) + ',' +\\r\\n                    ((edge.target.parentNode.position.y + edge.source.parentNode.position.y) / 2 + 40) + ' ' +\\r\\n\\r\\n                    (edge.target.parentNode.position.x + 50) + ',' +\\r\\n                    (edge.target.parentNode.position.y + 40)\\\" \\r\\n/>\\r\\n\\r\\n<!--a wider invisible line to make the wire easier to click-->\\r\\n<svg:polyline \\r\\nid=\\\"invisible-edge\\\" \\r\\nclass = \\\"inviEdge\\\" \\r\\n[attr.points] = \\\"   (edge.source.parentNode.position.x + 50) + ',' +\\r\\n                    (edge.source.parentNode.position.y + 40) + ' ' +\\r\\n\\r\\n                    ((edge.target.parentNode.position.x + edge.source.parentNode.position.x) / 2 + 50) + ',' +\\r\\n                    ((edge.target.parentNode.position.y + edge.source.parentNode.position.y) / 2 + 40) + ' ' +\\r\\n\\r\\n                    (edge.target.parentNode.position.x + 50) + ',' +\\r\\n                    (edge.target.parentNode.position.y + 40)\\\" \\r\\n(click)='select($event)'/>\\r\\n    \\r\\n\\r\\n\"","module.exports = \".edge {\\n  fill: none;\\n  stroke: #373737;\\n  stroke-linecap: round;\\n  stroke-linejoin: round;\\n  stroke-width: 2px;\\n  opacity: 1;\\n  pointer-events: stroke;\\n  marker-mid: url(#arrow); }\\n  .edge.selected {\\n    stroke: #00006d;\\n    opacity: 1;\\n    marker-mid: url(#arrow_selected); }\\n  .edge.disabled {\\n    opacity: 0.4; }\\n  .inviEdge {\\n  fill: none;\\n  stroke: #999999;\\n  stroke-width: 30px;\\n  opacity: 0;\\n  pointer-events: stroke; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdmlld3Mvdmlldy1mbG93Y2hhcnQvZWRnZS9DOlxcRHJvcGJveFxcRmlsZXNcXFNvZnR3YXJlXFxHaXRIdWJcXGRlc2lnbi1hdXRvbWF0aW9uXFxtb2JpdXMtcGFyYW1ldHJpYy1tb2RlbGxlci9zcmNcXGFwcFxcdmlld3NcXHZpZXctZmxvd2NoYXJ0XFxlZGdlXFxlZGdlLmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC92aWV3cy92aWV3LWZsb3djaGFydC9lZGdlL0M6XFxEcm9wYm94XFxGaWxlc1xcU29mdHdhcmVcXEdpdEh1YlxcZGVzaWduLWF1dG9tYXRpb25cXG1vYml1cy1wYXJhbWV0cmljLW1vZGVsbGVyL3NyY1xcc2Nzc1xcY29sb3JzLnNjc3MiLCJzcmMvYXBwL3ZpZXdzL3ZpZXctZmxvd2NoYXJ0L2VkZ2UvQzpcXERyb3Bib3hcXEZpbGVzXFxTb2Z0d2FyZVxcR2l0SHViXFxkZXNpZ24tYXV0b21hdGlvblxcbW9iaXVzLXBhcmFtZXRyaWMtbW9kZWxsZXIvc3JjXFxzY3NzXFx2YXJpYWJsZXMuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFHQTtFQUNJLFVBQVU7RUFDVixlQ0tZO0VESloscUJBQXFCO0VBQ3JCLHNCQUFzQjtFQUN0QixpQkFBaUI7RUFDakIsVUFBVTtFQUNWLHNCQUFzQjtFQUN0Qix1QkFBdUIsRUFBQTtFQVIzQjtJQVVRLGVDRHVCO0lERXZCLFVBQVU7SUFDVixnQ0FBZ0MsRUFBQTtFQVp4QztJQWVRLFlFUGMsRUFBQTtFRlV0QjtFQUNJLFVBQVU7RUFDVixlQ3JCWTtFRHNCWixrQkFBa0I7RUFDbEIsVUFBVTtFQUNWLHNCQUFzQixFQUFBIiwiZmlsZSI6InNyYy9hcHAvdmlld3Mvdmlldy1mbG93Y2hhcnQvZWRnZS9lZGdlLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiQGltcG9ydCAnfnNjc3MvY29sb3JzJztcclxuQGltcG9ydCAnfnNjc3MvdmFyaWFibGVzJztcclxuXHJcbi5lZGdle1xyXG4gICAgZmlsbDogbm9uZTtcclxuICAgIHN0cm9rZTogJGNvbG9yODtcclxuICAgIHN0cm9rZS1saW5lY2FwOiByb3VuZDtcclxuICAgIHN0cm9rZS1saW5lam9pbjogcm91bmQ7XHJcbiAgICBzdHJva2Utd2lkdGg6IDJweDtcclxuICAgIG9wYWNpdHk6IDE7XHJcbiAgICBwb2ludGVyLWV2ZW50czogc3Ryb2tlO1xyXG4gICAgbWFya2VyLW1pZDogdXJsKCNhcnJvdyk7XHJcbiAgICAmLnNlbGVjdGVke1xyXG4gICAgICAgIHN0cm9rZTogJHNlbGVjdGVkLWNvbG9yO1xyXG4gICAgICAgIG9wYWNpdHk6IDE7XHJcbiAgICAgICAgbWFya2VyLW1pZDogdXJsKCNhcnJvd19zZWxlY3RlZCk7XHJcbiAgICB9XHJcbiAgICAmLmRpc2FibGVke1xyXG4gICAgICAgIG9wYWNpdHk6ICRkaXNhYmxlZC1vcGFjaXR5O1xyXG4gICAgfVxyXG59XHJcbi5pbnZpRWRnZXtcclxuICAgIGZpbGw6IG5vbmU7XHJcbiAgICBzdHJva2U6ICRjb2xvcjI7XHJcbiAgICBzdHJva2Utd2lkdGg6IDMwcHg7XHJcbiAgICBvcGFjaXR5OiAwO1xyXG4gICAgcG9pbnRlci1ldmVudHM6IHN0cm9rZTtcclxufVxyXG4iLCJcclxuJGNvbG9yMTogIzgwODA4MDtcclxuJGNvbG9yMjogIzk5OTk5OTtcclxuJGNvbG9yMzogI0IzQjNCMzsgXHJcbiRjb2xvcjQ6ICNDQ0NDQ0M7XHJcbiRjb2xvcjU6ICNFNkU2RTY7XHJcbiRjb2xvcjUtNTogcmdiKDI0NSwgMjQ1LCAyNDUpO1xyXG4kY29sb3I2OiByZ2IoMjUwLCAyNTAsIDI1MSk7XHJcblxyXG4kY29sb3I3OiB3aGl0ZTtcclxuJGNvbG9yODogIzM3MzczNztcclxuXHJcbiRzZWxlY3RlZC1jb2xvcjogcmdiKDAsIDAsIDEwOSk7XHJcbiRob3Zlci1jb2xvcjogJGNvbG9yMjtcclxuXHJcbiRlcnJvci1jb2xvcjogI0U5NDg1ODsgLy9waW5rLXJlZFxyXG4kZXJyb3ItY29sb3ItbHQ6IHJnYigyNTUsIDIyMCwgMjI0KTtcclxuJHBjb2xvcjI6ICNGM0EzMkE7IC8vb3JhbmdlLXllbGxvd1xyXG4kcHJpbnQtY29sb3I6IHJnYigxMzAsIDE5MSwgMTEwKTsgLy9saWdodGdyZWVuXHJcbiRwcmludC1jb2xvci1sdDogcmdiKDIzMCwgMjU1LCAyMjEpO1xyXG4kc2VsZWN0R2VvbS1jb2xvcjogcmdiKDI1NSwgMTc0LCAwKTsgLy8gbGlnaHQgb3JhbmdlXHJcbiRzZWxlY3RHZW9tLWNvbG9yLWx0OiByZ2IoMjU1LCAyMjUsIDE2MCk7XHJcblxyXG4vLyAkcHJvZC1iYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMjUwLDI1MCwyNTApO1xyXG4vLyAkYmFja2dyb3VuZC1jb2xvcjogcmdiKDIyMCwyMjAsMjIwKTtcclxuJGZ1bmN0aW9uLXRleHQtY29sb3I6IHJnYigxOTAsIDE0MCwgMzApO1xyXG4kZnVuY3Rpb24tdGV4dC1jb2xvcjI6IHJnYigxOCwgMTI2LCAxMzYpO1xyXG4kYmFzaWMtZnVuY3Rpb24tdGV4dC1jb2xvcjogcmdiKDIwMCwgNzAsIDE1MCk7XHJcbiRjb21tZW50LWNvbG9yOiBkYXJrZ3JlZW47XHJcbiIsIiRwYWRkaW5nOiA0MHB4OyAvLyA/IG5vdCB1c2VkXHJcbiRzbWFsbC1wYWRkaW5nOiAxNXB4O1xyXG4kaGVhZGVyLWhlaWdodDogNDBweDtcclxuXHJcbiRmc2l6ZTE6IDE1cHg7XHJcbiRmc2l6ZTI6IDEycHg7XHJcbiRmc2l6ZTM6IDMwcHg7XHJcblxyXG4kcG9ydC1zaXplOiAxNXB4O1xyXG4kZGVmYXVsdC1zaWRlLXBhZGRpbmc6IDE1cHg7XHJcblxyXG4kZGlzYWJsZWQtb3BhY2l0eTogMC40OyJdfQ== */\"","import {Component, OnInit, Input, ViewChild, ElementRef, DoCheck, Output, EventEmitter } from '@angular/core';\r\nimport { IEdge } from '@models/edge';\r\n\r\n@Component({\r\n  selector: '[edge]',\r\n  templateUrl: './edge.component.html',\r\n  styleUrls: ['./edge.component.scss']\r\n})\r\nexport class EdgeComponent {\r\n\r\n    @ViewChild('canvas') canvas: ElementRef;\r\n    @Input() edge: IEdge;\r\n    @Input() inputOffset;\r\n    @Input() outputOffset;\r\n\r\n    @Output() delete = new EventEmitter();\r\n    @Output() selected = new EventEmitter();\r\n\r\n    // select a wire\r\n    select(event) {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n        if (this.edge.selected) {\r\n            this.selected.emit(event.ctrlKey || event.metaKey);\r\n        } else {\r\n            if (event.ctrlKey || event.metaKey) { this.selected.emit('ctrl'); } else { this.selected.emit('single'); }\r\n        }\r\n    }\r\n\r\n    // delete a wire\r\n    deleteEdge() {\r\n        this.delete.emit();\r\n    }\r\n\r\n}\r\n","export enum ACTIONS {\r\n    SELECT,\r\n    DELETE,\r\n    COPY,\r\n    CONNECT,\r\n    DRAGNODE,\r\n    DROPPORT,\r\n    DRAGPORT,\r\n    PROCEDURE,\r\n}\r\n","module.exports = \"\\r\\n<!-- svg group for the selectable and draggable area of normal node -->\\r\\n<svg:g (click)='nodeSelect($event)' draggable=\\\"true\\\" \\r\\n(mousedown)='startDragNode($event)' \\r\\n(dblclick)='switchToProcedure($event)'\\r\\n*ngIf='node.type==\\\"\\\"'>\\r\\n\\r\\n    <rect\\r\\n    width=\\\"110\\\" height=\\\"90\\\"\\r\\n    class='outputPort'\\r\\n    id = 'node.output.id'\\r\\n    (mousedown)='startDragPort($event, \\\"output\\\")'\\r\\n    [attr.x]=\\\"node.position.x - 5\\\" \\r\\n    [attr.y]=\\\"node.position.y - 5\\\"\\r\\n    />\\r\\n\\r\\n    <!-- rectangular box with border -->\\r\\n    <rect class=\\\"node\\\" \\r\\n    width=\\\"100\\\" height=\\\"80\\\"\\r\\n    [class.node--selected]='selected'\\r\\n    [class.node--editing]='editing'\\r\\n    [class.node--error]=\\\"node.hasError\\\"\\r\\n    [class.node--disabled]='!node.enabled'\\r\\n    [attr.x]=\\\"node.position.x\\\" \\r\\n    [attr.y]=\\\"node.position.y\\\"\\r\\n    />\\r\\n\\r\\n    <!-- node description inside the rectangular box -->\\r\\n    <svg:foreignObject [attr.x]=\\\"node.position.x\\\" [attr.y]=\\\"node.position.y + 3\\\" \\r\\n    width=\\\"100\\\" height = \\\"80\\\"\\r\\n    >\\r\\n        <xhtml:div class='textdiv'>\\r\\n            <xhtml:textarea \\r\\n                id={{node.id}}\\r\\n                autocomplete=off \\r\\n                [(ngModel)]='node.name'\\r\\n                [class.selected]='selected'\\r\\n                [class.disabled]='!node.enabled'\\r\\n                (focus)='editing = true'\\r\\n                (blur)='editing = false'\\r\\n                title={{node.name}}\\r\\n                style=\\\"font-weight: 600;\\\"\\r\\n                placeholder='Description of Node'/>  \\r\\n        </xhtml:div>\\r\\n    </svg:foreignObject>\\r\\n</svg:g>\\r\\n\\r\\n<!-- svg group for the selectable and draggable area of start node -->\\r\\n<svg:g (click)='nodeSelect($event)' draggable=\\\"true\\\" \\r\\n(mousedown)='startDragNode($event)' \\r\\n(dblclick)='switchToProcedure($event)'\\r\\n*ngIf='node.type==\\\"start\\\"'>\\r\\n\\r\\n    <path\\r\\n    class='outputPort'\\r\\n    id = 'node.output.id'\\r\\n    (mousedown)='startDragPort($event, \\\"output\\\")'\\r\\n    [attr.d]=\\\"'M' + (node.position.x - 5) +' '+ (node.position.y + 5) +\\r\\n             ' L' + (node.position.x - 5) +' '+ (node.position.y + 43) +\\r\\n             ' L' + (node.position.x + 50) +' '+ (node.position.y + 65) +\\r\\n             ' L' + (node.position.x + 105) +' '+ (node.position.y + 43) +\\r\\n             ' L' + (node.position.x + 105) +' '+ (node.position.y + 5) + ' Z'\\\" \\r\\n    />\\r\\n\\r\\n\\r\\n    <!-- Triangle with border -->\\r\\n    <path class=\\\"node\\\" \\r\\n        [class.node--selected]='selected'\\r\\n        [class.node--error]=\\\"node.hasError\\\"\\r\\n        [attr.d]=\\\"'M'+node.position.x +' '+ (node.position.y + 10) +\\r\\n                 ' L'+ node.position.x +' '+ (node.position.y + 40) +\\r\\n                 ' L'+ (node.position.x + 50) +' '+ (node.position.y + 60) +\\r\\n                 ' L'+ (node.position.x + 100) +' '+ (node.position.y + 40) +\\r\\n                 ' L'+ (node.position.x + 100) +' '+ (node.position.y + 10) + ' Z'\\\" \\r\\n        />\\r\\n\\r\\n    <!-- circles as inputs of the node -->\\r\\n    <!-- <svg:circle\\r\\n    *ngFor=\\\"let prod of node.procedure; let i=index\\\"\\r\\n    r=3\\r\\n    [attr.cx]=\\\"node.position.x + (100 * (i+1) / (node.procedure.length + 1))\\\" \\r\\n    [attr.cy]=\\\"node.position.y + 22\\\"\\r\\n    class='inputPort'/> -->\\r\\n\\r\\n\\r\\n\\r\\n    <!-- node description inside start node -->\\r\\n    <svg:foreignObject \\r\\n    [attr.x]=\\\"node.position.x\\\" [attr.y]=\\\"node.position.y + 18\\\" \\r\\n    width=\\\"100\\\" height = \\\"20\\\">\\r\\n        <xhtml:div class='textdiv'>\\r\\n            <xhtml:textarea \\r\\n                id={{node.id}}\\r\\n                class='textarea_startend'\\r\\n                autocomplete=off \\r\\n                [class.selected]='selected'\\r\\n                [(ngModel)]='node.name'/>  \\r\\n        </xhtml:div>\\r\\n    </svg:foreignObject>\\r\\n</svg:g>\\r\\n\\r\\n<!-- svg group for the selectable and draggable area of end node -->\\r\\n<svg:g (click)='nodeSelect($event)' draggable=\\\"true\\\" \\r\\n(mousedown)='startDragNode($event)' \\r\\n(dblclick)='switchToProcedure($event)'\\r\\n*ngIf='node.type==\\\"end\\\"'>\\r\\n\\r\\n    <path\\r\\n    class='outputPort'\\r\\n    id = 'node.output.id'\\r\\n    [attr.d]=\\\"'M'+ (node.position.x - 5)   +' '+ (node.position.y + 75) +\\r\\n            ' L' + (node.position.x - 5)   +' '+ (node.position.y + 37) +\\r\\n            ' L' + (node.position.x + 50)  +' '+ (node.position.y + 15) +\\r\\n            ' L' + (node.position.x + 105) +' '+ (node.position.y + 37) +\\r\\n            ' L' + (node.position.x + 105) +' '+ (node.position.y + 75) + ' Z'\\\" \\r\\n    />\\r\\n\\r\\n    <!-- Triangle with border -->\\r\\n    <path class=\\\"node\\\" \\r\\n        [class.node--selected]='selected'\\r\\n        [class.node--error]=\\\"node.hasError\\\"\\r\\n        [class.node--disabled]='!node.enabled'\\r\\n        [attr.d]=\\\"'M'+node.position.x +' '+ (node.position.y + 70) +\\r\\n                 ' L' + node.position.x +' '+ (node.position.y + 40) +\\r\\n                 ' L'+ (node.position.x + 50) +' '+ (node.position.y + 20) +\\r\\n                 ' L'+ (node.position.x + 100) +' '+ (node.position.y + 40) +\\r\\n                 ' L'+ (node.position.x + 100) +' '+ (node.position.y + 70) + ' Z'\\\" \\r\\n        />\\r\\n\\r\\n    <!-- <svg:circle\\r\\n    *ngIf=\\\"node.procedure.length > 0\\\"\\r\\n    r=3\\r\\n    [attr.cx]=\\\"node.position.x + 50\\\" \\r\\n    [attr.cy]=\\\"node.position.y + 58\\\"\\r\\n    class='inputPort'/> -->\\r\\n    \\r\\n\\r\\n    <!-- node description inside end node -->\\r\\n    <svg:foreignObject [attr.x]=\\\"node.position.x\\\" [attr.y]=\\\"node.position.y + 38\\\" \\r\\n    width=\\\"100\\\" height = \\\"20\\\">\\r\\n        <xhtml:div class='textdiv'>\\r\\n            <xhtml:textarea \\r\\n                id={{node.id}}\\r\\n                class='textarea_startend'\\r\\n                autocomplete=off \\r\\n                [class.selected]='selected'\\r\\n                [class.disabled]='!node.enabled'\\r\\n                [(ngModel)]='node.name'/>  \\r\\n        </xhtml:div>\\r\\n    </svg:foreignObject>\\r\\n</svg:g>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n<!-- <svg:circle\\r\\nr=3\\r\\n[attr.cx]=\\\"node.position.x + inputOffset[0]\\\" \\r\\n[attr.cy]=\\\"node.position.y + inputOffset[1]\\\"\\r\\n[class.disabled]='!node.enabled'\\r\\n*ngIf=\\\"inputDraggable()\\\" \\r\\nclass='inputPort'\\r\\nid = 'node.input.id'\\r\\n(mousedown)='startDragPort($event, \\\"input\\\")'/> -->\\r\\n\\r\\n<!-- <svg:circle *ngIf=\\\"outputDraggable()\\\" \\r\\nclass='outputPort'\\r\\nid = 'node.output.id'\\r\\n(mousedown)='startDragPort($event, \\\"output\\\")' \\r\\n[attr.cx]=\\\"node.position.x + outputOffset[0]\\\" \\r\\n[attr.cy]=\\\"node.position.y + outputOffset[1]\\\" \\r\\n[class.disabled]='!node.enabled'\\r\\npointer-events=\\\"all\\\"\\r\\nr=3\\r\\nfill=\\\"black\\\"/> -->\\r\\n\\r\\n\"","module.exports = \".node {\\n  fill: white;\\n  stroke-width: 2px;\\n  stroke: #373737;\\n  stroke-opacity: 1;\\n  stroke-linecap: round;\\n  stroke-linejoin: round; }\\n  .node.node--disabled {\\n    stroke-opacity: 0.4; }\\n  .node.node--selected {\\n    fill: #E6E6E6;\\n    stroke: #00006d; }\\n  .node.node--editing {\\n    fill: white; }\\n  .node.node--error {\\n    stroke: red; }\\n  .textdiv {\\n  text-align: center;\\n  width: 94px; }\\n  .foreignObject {\\n  width: 100;\\n  height: 80; }\\n  textarea {\\n  cursor: pointer;\\n  font-family: sans-serif;\\n  background: transparent;\\n  display: inline-block;\\n  border: none;\\n  font-size: 15px;\\n  width: 100%;\\n  height: 70px;\\n  font-weight: 600;\\n  text-align: center;\\n  vertical-align: middle;\\n  resize: none;\\n  overflow: hidden;\\n  color: #373737; }\\n  textarea.selected {\\n    color: #00006d; }\\n  textarea.disabled {\\n    opacity: 0.4; }\\n  .textarea_startend {\\n  font-size: 15px;\\n  font-weight: 600;\\n  color: #373737;\\n  height: 20px;\\n  pointer-events: none; }\\n  .inputPort {\\n  stroke: transparent;\\n  stroke-width: 20px;\\n  pointer-events: stroke;\\n  fill: #373737; }\\n  .inputPort.disabled {\\n    opacity: 0.4; }\\n  .outputPort {\\n  stroke: transparent;\\n  stroke-width: 11px;\\n  pointer-events: stroke;\\n  fill: transparent; }\\n  .outputPort.disabled {\\n    opacity: 0.4; }\\n  .outputPort:hover {\\n    stroke: #E6E6E6; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdmlld3Mvdmlldy1mbG93Y2hhcnQvbm9kZS9DOlxcRHJvcGJveFxcRmlsZXNcXFNvZnR3YXJlXFxHaXRIdWJcXGRlc2lnbi1hdXRvbWF0aW9uXFxtb2JpdXMtcGFyYW1ldHJpYy1tb2RlbGxlci9zcmNcXGFwcFxcdmlld3NcXHZpZXctZmxvd2NoYXJ0XFxub2RlXFxub2RlLmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC92aWV3cy92aWV3LWZsb3djaGFydC9ub2RlL0M6XFxEcm9wYm94XFxGaWxlc1xcU29mdHdhcmVcXEdpdEh1YlxcZGVzaWduLWF1dG9tYXRpb25cXG1vYml1cy1wYXJhbWV0cmljLW1vZGVsbGVyL3NyY1xcc2Nzc1xcY29sb3JzLnNjc3MiLCJzcmMvYXBwL3ZpZXdzL3ZpZXctZmxvd2NoYXJ0L25vZGUvQzpcXERyb3Bib3hcXEZpbGVzXFxTb2Z0d2FyZVxcR2l0SHViXFxkZXNpZ24tYXV0b21hdGlvblxcbW9iaXVzLXBhcmFtZXRyaWMtbW9kZWxsZXIvc3JjXFxzY3NzXFx2YXJpYWJsZXMuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFNQTtFQUNJLFdDRVU7RUREVixpQkFMYztFQU1kLGVDQ1k7RURBWixpQkFBaUI7RUFDakIscUJBQXFCO0VBQ3JCLHNCQUFzQixFQUFBO0VBTjFCO0lBU1EsbUJFSmMsRUFBQTtFRkx0QjtJQWNRLGFDZlE7SURnQlIsZUNUdUIsRUFBQTtFRE4vQjtJQW1CUSxXQ2hCTSxFQUFBO0VESGQ7SUF1QlEsV0F6QlMsRUFBQTtFQThCakI7RUFDSSxrQkFBa0I7RUFDbEIsV0FBVyxFQUFBO0VBR2Y7RUFDSSxVQUFVO0VBQ1YsVUFBVSxFQUFBO0VBR2Q7RUFDSSxlQUFlO0VBQ2YsdUJBQXVCO0VBQ3ZCLHVCQUF1QjtFQUN2QixxQkFBb0I7RUFDcEIsWUFBVztFQUNYLGVFOUNTO0VGK0NULFdBQVc7RUFDWCxZQUFZO0VBQ1osZ0JBQWdCO0VBQ2hCLGtCQUFrQjtFQUNsQixzQkFBc0I7RUFDdEIsWUFBWTtFQUNaLGdCQUFnQjtFQUNoQixjQ2hEWSxFQUFBO0VEa0NoQjtJQWlCUSxjQ2pEdUIsRUFBQTtFRGdDL0I7SUFxQlEsWUV0RGMsRUFBQTtFRjBEdEI7RUFDSSxlRWxFUztFRm1FVCxnQkFBZ0I7RUFDaEIsY0M5RFk7RUQrRFosWUFBWTtFQUNaLG9CQUFvQixFQUFBO0VBR3hCO0VBQ0ksbUJBQW1CO0VBQ25CLGtCQUFrQjtFQUNsQixzQkFBc0I7RUFDdEIsYUN2RVksRUFBQTtFRG1FaEI7SUFPUSxZRXpFYyxFQUFBO0VGNkV0QjtFQUNJLG1CQUFtQjtFQUNuQixrQkFBa0I7RUFDbEIsc0JBQXNCO0VBQ3RCLGlCQUFpQixFQUFBO0VBSnJCO0lBT1EsWUVwRmMsRUFBQTtFRjZFdEI7SUFVUSxlQzdGUSxFQUFBIiwiZmlsZSI6InNyYy9hcHAvdmlld3Mvdmlldy1mbG93Y2hhcnQvbm9kZS9ub2RlLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiQGltcG9ydCAnfnNjc3MvY29sb3JzJztcclxuQGltcG9ydCAnfnNjc3MvdmFyaWFibGVzJztcclxuXHJcbiRzdHJva2Utd2lkdGg6IDJweDtcclxuJGVycm9yLWNvbG9yOiByZWQ7XHJcblxyXG4ubm9kZXtcclxuICAgIGZpbGw6JGNvbG9yNztcclxuICAgIHN0cm9rZS13aWR0aDokc3Ryb2tlLXdpZHRoO1xyXG4gICAgc3Ryb2tlOiAkY29sb3I4O1xyXG4gICAgc3Ryb2tlLW9wYWNpdHk6IDE7XHJcbiAgICBzdHJva2UtbGluZWNhcDogcm91bmQ7XHJcbiAgICBzdHJva2UtbGluZWpvaW46IHJvdW5kO1xyXG5cclxuICAgICYubm9kZS0tZGlzYWJsZWR7XHJcbiAgICAgICAgc3Ryb2tlLW9wYWNpdHk6ICRkaXNhYmxlZC1vcGFjaXR5O1xyXG4gICAgICAgIC8vIGZpbGwtb3BhY2l0eTogJGRpc2FibGVkLW9wYWNpdHk7XHJcbiAgICB9XHJcblxyXG4gICAgJi5ub2RlLS1zZWxlY3RlZHtcclxuICAgICAgICBmaWxsOiRjb2xvcjU7XHJcbiAgICAgICAgc3Ryb2tlOiAkc2VsZWN0ZWQtY29sb3I7XHJcbiAgICB9XHJcblxyXG4gICAgJi5ub2RlLS1lZGl0aW5ne1xyXG4gICAgICAgIGZpbGw6JGNvbG9yNztcclxuICAgIH1cclxuXHJcbiAgICAmLm5vZGUtLWVycm9ye1xyXG4gICAgICAgIHN0cm9rZTogJGVycm9yLWNvbG9yO1xyXG4gICAgfVxyXG5cclxufVxyXG5cclxuLnRleHRkaXZ7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7IFxyXG4gICAgd2lkdGg6IDk0cHg7XHJcbn1cclxuXHJcbi5mb3JlaWduT2JqZWN0e1xyXG4gICAgd2lkdGg6IDEwMDsgXHJcbiAgICBoZWlnaHQ6IDgwO1xyXG59XHJcblxyXG50ZXh0YXJlYXtcclxuICAgIGN1cnNvcjogcG9pbnRlcjtcclxuICAgIGZvbnQtZmFtaWx5OiBzYW5zLXNlcmlmOyBcclxuICAgIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50OyBcclxuICAgIGRpc3BsYXk6aW5saW5lLWJsb2NrO1xyXG4gICAgYm9yZGVyOm5vbmU7IFxyXG4gICAgZm9udC1zaXplOiAkZnNpemUxOyBcclxuICAgIHdpZHRoOiAxMDAlOyBcclxuICAgIGhlaWdodDogNzBweDtcclxuICAgIGZvbnQtd2VpZ2h0OiA2MDA7IFxyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyOyBcclxuICAgIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XHJcbiAgICByZXNpemU6IG5vbmU7IFxyXG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICAgIGNvbG9yOiAkY29sb3I4O1xyXG5cclxuICAgICYuc2VsZWN0ZWR7XHJcbiAgICAgICAgY29sb3I6ICRzZWxlY3RlZC1jb2xvcjtcclxuICAgIH1cclxuXHJcbiAgICAmLmRpc2FibGVke1xyXG4gICAgICAgIG9wYWNpdHk6ICRkaXNhYmxlZC1vcGFjaXR5O1xyXG4gICAgfVxyXG59XHJcblxyXG4udGV4dGFyZWFfc3RhcnRlbmR7XHJcbiAgICBmb250LXNpemU6ICRmc2l6ZTE7IFxyXG4gICAgZm9udC13ZWlnaHQ6IDYwMDsgXHJcbiAgICBjb2xvcjogJGNvbG9yODtcclxuICAgIGhlaWdodDogMjBweDtcclxuICAgIHBvaW50ZXItZXZlbnRzOiBub25lO1xyXG59XHJcblxyXG4uaW5wdXRQb3J0e1xyXG4gICAgc3Ryb2tlOiB0cmFuc3BhcmVudDtcclxuICAgIHN0cm9rZS13aWR0aDogMjBweDtcclxuICAgIHBvaW50ZXItZXZlbnRzOiBzdHJva2U7XHJcbiAgICBmaWxsOiRjb2xvcjg7XHJcbiAgICAvL2ZpbGw6bWlkbmlnaHRibHVlO1xyXG4gICAgJi5kaXNhYmxlZHtcclxuICAgICAgICBvcGFjaXR5OiAkZGlzYWJsZWQtb3BhY2l0eTtcclxuICAgIH1cclxuXHJcbn1cclxuLm91dHB1dFBvcnR7XHJcbiAgICBzdHJva2U6IHRyYW5zcGFyZW50O1xyXG4gICAgc3Ryb2tlLXdpZHRoOiAxMXB4O1xyXG4gICAgcG9pbnRlci1ldmVudHM6IHN0cm9rZTtcclxuICAgIGZpbGw6IHRyYW5zcGFyZW50O1xyXG4gICAgLy9maWxsOiBtaWRuaWdodGJsdWU7XHJcbiAgICAmLmRpc2FibGVke1xyXG4gICAgICAgIG9wYWNpdHk6ICRkaXNhYmxlZC1vcGFjaXR5O1xyXG4gICAgfVxyXG4gICAgJjpob3ZlciB7XHJcbiAgICAgICAgc3Ryb2tlOiAkY29sb3I1O1xyXG4gICAgfVxyXG59XHJcbiIsIlxyXG4kY29sb3IxOiAjODA4MDgwO1xyXG4kY29sb3IyOiAjOTk5OTk5O1xyXG4kY29sb3IzOiAjQjNCM0IzOyBcclxuJGNvbG9yNDogI0NDQ0NDQztcclxuJGNvbG9yNTogI0U2RTZFNjtcclxuJGNvbG9yNS01OiByZ2IoMjQ1LCAyNDUsIDI0NSk7XHJcbiRjb2xvcjY6IHJnYigyNTAsIDI1MCwgMjUxKTtcclxuXHJcbiRjb2xvcjc6IHdoaXRlO1xyXG4kY29sb3I4OiAjMzczNzM3O1xyXG5cclxuJHNlbGVjdGVkLWNvbG9yOiByZ2IoMCwgMCwgMTA5KTtcclxuJGhvdmVyLWNvbG9yOiAkY29sb3IyO1xyXG5cclxuJGVycm9yLWNvbG9yOiAjRTk0ODU4OyAvL3BpbmstcmVkXHJcbiRlcnJvci1jb2xvci1sdDogcmdiKDI1NSwgMjIwLCAyMjQpO1xyXG4kcGNvbG9yMjogI0YzQTMyQTsgLy9vcmFuZ2UteWVsbG93XHJcbiRwcmludC1jb2xvcjogcmdiKDEzMCwgMTkxLCAxMTApOyAvL2xpZ2h0Z3JlZW5cclxuJHByaW50LWNvbG9yLWx0OiByZ2IoMjMwLCAyNTUsIDIyMSk7XHJcbiRzZWxlY3RHZW9tLWNvbG9yOiByZ2IoMjU1LCAxNzQsIDApOyAvLyBsaWdodCBvcmFuZ2VcclxuJHNlbGVjdEdlb20tY29sb3ItbHQ6IHJnYigyNTUsIDIyNSwgMTYwKTtcclxuXHJcbi8vICRwcm9kLWJhY2tncm91bmQtY29sb3I6IHJnYigyNTAsMjUwLDI1MCk7XHJcbi8vICRiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMjIwLDIyMCwyMjApO1xyXG4kZnVuY3Rpb24tdGV4dC1jb2xvcjogcmdiKDE5MCwgMTQwLCAzMCk7XHJcbiRmdW5jdGlvbi10ZXh0LWNvbG9yMjogcmdiKDE4LCAxMjYsIDEzNik7XHJcbiRiYXNpYy1mdW5jdGlvbi10ZXh0LWNvbG9yOiByZ2IoMjAwLCA3MCwgMTUwKTtcclxuJGNvbW1lbnQtY29sb3I6IGRhcmtncmVlbjtcclxuIiwiJHBhZGRpbmc6IDQwcHg7IC8vID8gbm90IHVzZWRcclxuJHNtYWxsLXBhZGRpbmc6IDE1cHg7XHJcbiRoZWFkZXItaGVpZ2h0OiA0MHB4O1xyXG5cclxuJGZzaXplMTogMTVweDtcclxuJGZzaXplMjogMTJweDtcclxuJGZzaXplMzogMzBweDtcclxuXHJcbiRwb3J0LXNpemU6IDE1cHg7XHJcbiRkZWZhdWx0LXNpZGUtcGFkZGluZzogMTVweDtcclxuXHJcbiRkaXNhYmxlZC1vcGFjaXR5OiAwLjQ7Il19 */\"","import { Component, Input, Output, EventEmitter, HostListener } from '@angular/core';\r\nimport { INode } from '@models/node';\r\nimport { ACTIONS } from './node.actions';\r\n\r\n\r\n\r\n@Component({\r\n  selector: '[node]',\r\n  templateUrl: './node.component.html',\r\n  styleUrls: ['./node.component.scss']\r\n})\r\nexport class NodeComponent {\r\n\r\n    @Input() node: INode;\r\n    @Input() selected: boolean;\r\n    @Input() inputOffset; // position offset of the input port as compared to the position of the node in svg\r\n    @Input() outputOffset; // position offset of the output port as compared to the position of the node in svg\r\n    editing: boolean;\r\n\r\n    @Output() action = new EventEmitter();\r\n    startType: string;\r\n    last = [0, 0];\r\n    isDown = false;\r\n\r\n    /*\r\n    update the position of the node\r\n    */\r\n    updatePosition(position) {\r\n        this.node.position = position;\r\n    }\r\n\r\n    /*\r\n    select a node\r\n    */\r\n    nodeSelect(event) {\r\n        event.stopPropagation();\r\n        this.action.emit({ action: ACTIONS.SELECT, ctrlKey: event.ctrlKey  || event.metaKey });\r\n    }\r\n\r\n\r\n    /*\r\n    check if the input port of the node is draggable --> false only for start node, true otherwise\r\n    */\r\n    inputDraggable(): boolean {\r\n        return !(this.node.type === 'start');\r\n    }\r\n\r\n    /*\r\n    check if the output port of the node is draggable --> false only for end node, true otherwise\r\n    */\r\n    outputDraggable(): boolean {\r\n        return !(this.node.type === 'end');\r\n    }\r\n\r\n    /*\r\n    initiate dragging node when mousedown inside the node group\r\n    */\r\n    startDragNode(event: MouseEvent) {\r\n        event.stopPropagation();\r\n        // if (document.activeElement.tagName === 'TEXTAREA') { return; }\r\n        event.preventDefault();\r\n        this.action.emit({ action: ACTIONS.DRAGNODE, data: event});\r\n    }\r\n\r\n    /*\r\n    initiate dragging port when mousedown inside the port (inside the invisible stroke of the port)\r\n    */\r\n    startDragPort(event: MouseEvent, portType) {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n        let pos = this.node.position;\r\n        let data: any;\r\n        if (portType === 'input') {\r\n            data = this.node.input;\r\n            pos = [pos.x + this.inputOffset[0], pos.y + this.inputOffset[1]];\r\n        } else {\r\n            data = this.node.output;\r\n            pos = [pos.x + this.outputOffset[0], pos.y + this.outputOffset[1]];\r\n        }\r\n        this.action.emit({ action: ACTIONS.DRAGPORT, data: data, position: pos, type: portType});\r\n    }\r\n\r\n    /*\r\n    switch the viewchild of the appModule to the node's procedure view when double-click on the node\r\n    */\r\n    switchToProcedure(event: Event) {\r\n        event.stopPropagation();\r\n        this.action.emit({action: ACTIONS.PROCEDURE});\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { ViewFlowchartComponent } from './view-flowchart.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: ViewFlowchartComponent,\r\n    children: [\r\n      // {\r\n      //   path: '',\r\n      //   loadChildren: '../../mobius-viewer/mobius-viewer.module#MobiusViewerModule',\r\n      // }\r\n    ]\r\n  }\r\n];\r\n\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class ViewFlowchartRoutingModule { }\r\n","module.exports = \"<div class='container'>\\r\\n    <as-split #flowchartSplit\\r\\n    direction=\\\"horizontal\\\" \\r\\n    (dragStart)='dragSplitStart($event)'\\r\\n    (dragEnd)='dragSplitEnd($event)'>\\r\\n        <as-split-area [size]=\\\"100 - getSplit()\\\">\\r\\n            <panel-header [flowchart]='getFlowchart()'></panel-header>\\r\\n            <!-- viewchild content -->\\r\\n            <div id = 'flowchart-main-container' class='flowchart-container'>\\r\\n                <!--\\r\\n                -->\\r\\n            \\r\\n                <!-- svg component -->\\r\\n                <!--\\r\\n                (panstart)='panStart($event)'\\r\\n                (panmove)='handleMouseMove($event)'\\r\\n                (panend)='handleMouseUp($event)'\\r\\n                -->\\r\\n                <svg id=\\\"svg-canvas\\\" class = \\\"svgCanvas\\\" \\r\\n                xmlns=\\\"http://www.w3.org/2000/svg\\\"\\r\\n\\r\\n                [attr.viewBox]=\\\"viewbox\\\"\\r\\n                (mouseenter)='activateKeyEvent()'\\r\\n                (mouseleave)='deactivateKeyEvent($event)'\\r\\n                (mousedown)='panStart($event)'\\r\\n                (mousemove)='handleMouseMove($event)'\\r\\n                (mouseup)='handleMouseUp($event)'\\r\\n                (click)='deselectAll($event)'\\r\\n                (wheel)='scale($event)'\\r\\n                (dblclick)='addNode($event)'\\r\\n                >\\r\\n                    <!-- definitions for svg: grid patterns, arrow head for connecting wire-->\\r\\n                    <defs>\\r\\n                        <!-- grid pattern -->\\r\\n                        <!-- <pattern id=\\\"smallGrid\\\" width=\\\"20\\\" height=\\\"20\\\" patternUnits=\\\"userSpaceOnUse\\\">\\r\\n                            <path d=\\\"M 20 0 L 0 0 0 20\\\" fill=\\\"none\\\" stroke=\\\"gray\\\" stroke-width=\\\"0.5\\\"/>\\r\\n                        </pattern>\\r\\n                        <pattern id=\\\"grid\\\" width=\\\"100\\\" height=\\\"100\\\" patternUnits=\\\"userSpaceOnUse\\\">\\r\\n                            <rect width=\\\"100\\\" height=\\\"100\\\" fill=\\\"url(#smallGrid)\\\"/>\\r\\n                            <path d=\\\"M 100 0 L 0 0 0 100\\\" fill=\\\"none\\\" stroke=\\\"gray\\\" stroke-width=\\\"1\\\"/>\\r\\n                        </pattern> -->\\r\\n            \\r\\n                        <!-- arrow head -->\\r\\n                        <marker id=\\\"arrow\\\" markerWidth=\\\"30\\\" markerHeight=\\\"30\\\" refX=\\\"0\\\" refY=\\\"4\\\" orient=\\\"auto\\\" markerUnits=\\\"strokeWidth\\\" viewBox=\\\"0 0 40 40\\\">\\r\\n                            <path d=\\\"M0,0 L9,4 L0,8\\\"/>\\r\\n                        </marker>\\r\\n                        <marker id=\\\"arrow_selected\\\" markerWidth=\\\"30\\\" markerHeight=\\\"30\\\" refX=\\\"0\\\" refY=\\\"4\\\" orient=\\\"auto\\\" markerUnits=\\\"strokeWidth\\\" viewBox=\\\"0 0 40 40\\\">\\r\\n                            <path d=\\\"M0,0 L0,8 L9,4 z\\\"/>\\r\\n                        </marker>\\r\\n                    </defs>\\r\\n            \\r\\n                    <!-- svg frame-->\\r\\n                    <rect width=\\\"100%\\\" height=\\\"100%\\\" fill=\\\"url(#grid)\\\" />\\r\\n                                \\r\\n            \\r\\n                    <!-- wires => edge.component -->\\r\\n                    <g edge *ngFor=\\\"let edge of getFlowchart().edges; let edge_index = index\\\" \\r\\n                    [edge]='edge'\\r\\n                    [inputOffset]='inputOffset'\\r\\n                    [outputOffset]='outputOffset'\\r\\n                    (selected)='selectEdge($event, edge_index)'\\r\\n                    />\\r\\n            \\r\\n                    <!-- temporary wire while dragging port, default position to <(0,0),(0,0)>, modified when a port is being dragged -->\\r\\n                    <line id=\\\"temporary-wire\\\" class=\\\"temp-wire\\\" x1=\\\"0\\\" y1='0' x2='0' y2='0'></line>\\r\\n            \\r\\n                    <!-- nodes => node.component -->\\r\\n                    <g node *ngFor=\\\"let node of getFlowchart().nodes; let node_index = index\\\" \\r\\n                    id='flw_node_{{node_index}}'\\r\\n                    [node]='node' \\r\\n                    [selected]='isSelected(node_index)'\\r\\n                    [inputOffset]='inputOffset'\\r\\n                    [outputOffset]='outputOffset'\\r\\n                    (action)='nodeAction($event, node_index)'\\r\\n                    />\\r\\n                </svg>\\r\\n            \\r\\n                <!-- focus on flowchart button on the top right of the svg -->\\r\\n                <button id='zoomToFit' class='btn resetViewer-button' mat-icon-button disableRipple='true' (click)='focusFlowchart()' title=\\\"Zoom to Fit\\\">\\r\\n                    <mat-icon svgIcon=\\\"cZoom\\\"></mat-icon>\\r\\n                </button>\\r\\n                \\r\\n            \\r\\n            </div>\\r\\n                        \\r\\n        </as-split-area>\\r\\n\\r\\n        <as-split-area [size]=\\\"getSplit()\\\">\\r\\n            <!-- data viewers panel -->\\r\\n            <div class='content__viewer' >\\r\\n                <model-viewers-container [data]='viewerData(getNode(), true)'></model-viewers-container>\\r\\n            </div>\\r\\n        </as-split-area>\\r\\n        \\r\\n    </as-split>\\r\\n    <notification [message]='notificationMessage' [dummyTrigger]='notificationTrigger'></notification>\\r\\n\\r\\n</div>\\r\\n<spinner></spinner>\\r\\n<chrome></chrome>\\r\\n\\r\\n\"","module.exports = \".flowchart-container {\\n  position: relative;\\n  width: 100%;\\n  height: 100%;\\n  overflow: visible;\\n  background: transparent; }\\n  .flowchart-container .svgCanvas {\\n    -webkit-transform-origin: top left 0px;\\n            transform-origin: top left 0px; }\\n  .flowchart-container .svgCanvas .temp-wire {\\n      stroke: #808080;\\n      stroke-width: 2px;\\n      stroke-dasharray: 10 15;\\n      opacity: 0.4; }\\n  .button-row {\\n  position: absolute;\\n  bottom: 50px;\\n  left: 10px; }\\n  .button-row button {\\n    color: #808080;\\n    background-color: transparent;\\n    border: none;\\n    height: 24px;\\n    width: 24px;\\n    text-align: center;\\n    font-size: 24px;\\n    padding: 0px; }\\n  .resetViewer-button {\\n  cursor: pointer;\\n  z-index: 2;\\n  background-color: transparent;\\n  border: none;\\n  position: absolute;\\n  top: 34px;\\n  right: 2px;\\n  color: #808080;\\n  padding: 0px;\\n  width: 30px;\\n  height: 34px;\\n  outline: none; }\\n  #arrow {\\n  stroke: #373737;\\n  fill: transparent; }\\n  #arrow_selected {\\n  stroke: #00006d;\\n  fill: #00006d; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdmlld3Mvdmlldy1mbG93Y2hhcnQvQzpcXERyb3Bib3hcXEZpbGVzXFxTb2Z0d2FyZVxcR2l0SHViXFxkZXNpZ24tYXV0b21hdGlvblxcbW9iaXVzLXBhcmFtZXRyaWMtbW9kZWxsZXIvc3JjXFxhcHBcXHZpZXdzXFx2aWV3LWZsb3djaGFydFxcdmlldy1mbG93Y2hhcnQuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL3ZpZXdzL3ZpZXctZmxvd2NoYXJ0L0M6XFxEcm9wYm94XFxGaWxlc1xcU29mdHdhcmVcXEdpdEh1YlxcZGVzaWduLWF1dG9tYXRpb25cXG1vYml1cy1wYXJhbWV0cmljLW1vZGVsbGVyL3NyY1xcc2Nzc1xcY29sb3JzLnNjc3MiLCJzcmMvYXBwL3ZpZXdzL3ZpZXctZmxvd2NoYXJ0L0M6XFxEcm9wYm94XFxGaWxlc1xcU29mdHdhcmVcXEdpdEh1YlxcZGVzaWduLWF1dG9tYXRpb25cXG1vYml1cy1wYXJhbWV0cmljLW1vZGVsbGVyL3NyY1xcc2Nzc1xcdmFyaWFibGVzLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBSUE7RUFDSSxrQkFBa0I7RUFDbEIsV0FBVztFQUNYLFlBQVk7RUFDWixpQkFBaUI7RUFDakIsdUJBQXVCLEVBQUE7RUFMM0I7SUFVUSxzQ0FBOEI7WUFBOUIsOEJBQThCLEVBQUE7RUFWdEM7TUFhWSxlQ2hCSTtNRGlCSixpQkFBaUI7TUFDakIsdUJBQXVCO01BQ3ZCLFlFVFUsRUFBQTtFRmV0QjtFQUNJLGtCQUFrQjtFQUNsQixZQUFZO0VBQ1osVUFBVSxFQUFBO0VBSGQ7SUFNUSxjQy9CUTtJRGdDUiw2QkFBNkI7SUFDN0IsWUFBWTtJQUNaLFlBQVk7SUFDWixXQUFXO0lBQ1gsa0JBQWtCO0lBQ2xCLGVBQWU7SUFDZixZQUFZLEVBQUE7RUFJcEI7RUFDSSxlQUFlO0VBQ2YsVUFBVTtFQUNWLDZCQUE2QjtFQUM3QixZQUFZO0VBQ1osa0JBQWtCO0VBQ2xCLFNBQVU7RUFDVixVQUFVO0VBQ1YsY0NsRFk7RURtRFosWUFBWTtFQUNaLFdBQVc7RUFDWCxZQUFZO0VBQ1osYUFBYSxFQUFBO0VBR2pCO0VBQ0ksZUNqRFk7RURrRFosaUJBQWlCLEVBQUE7RUFFckI7RUFDSSxlQ25EMkI7RURvRDNCLGFDcEQyQixFQUFBIiwiZmlsZSI6InNyYy9hcHAvdmlld3Mvdmlldy1mbG93Y2hhcnQvdmlldy1mbG93Y2hhcnQuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJAaW1wb3J0ICd+c2Nzcy9jb2xvcnMnO1xyXG5AaW1wb3J0ICd+c2Nzcy92YXJpYWJsZXMnO1xyXG5cclxuXHJcbi5mbG93Y2hhcnQtY29udGFpbmVye1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgICBvdmVyZmxvdzogdmlzaWJsZTtcclxuICAgIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50O1xyXG5cclxuICAgIC5zdmdDYW52YXN7XHJcbiAgICAgICAgLy8gd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgLy8gaGVpZ2h0OiAxMDAlO1xyXG4gICAgICAgIHRyYW5zZm9ybS1vcmlnaW46IHRvcCBsZWZ0IDBweDtcclxuICAgIFxyXG4gICAgICAgIC50ZW1wLXdpcmV7XHJcbiAgICAgICAgICAgIHN0cm9rZTogJGNvbG9yMTtcclxuICAgICAgICAgICAgc3Ryb2tlLXdpZHRoOiAycHg7XHJcbiAgICAgICAgICAgIHN0cm9rZS1kYXNoYXJyYXk6IDEwIDE1O1xyXG4gICAgICAgICAgICBvcGFjaXR5OiAkZGlzYWJsZWQtb3BhY2l0eTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICBcclxufVxyXG5cclxuLmJ1dHRvbi1yb3cge1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlOyBcclxuICAgIGJvdHRvbTogNTBweDsgXHJcbiAgICBsZWZ0OiAxMHB4O1xyXG5cclxuICAgIGJ1dHRvbntcclxuICAgICAgICBjb2xvcjogJGNvbG9yMTtcclxuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcclxuICAgICAgICBib3JkZXI6IG5vbmU7XHJcbiAgICAgICAgaGVpZ2h0OiAyNHB4O1xyXG4gICAgICAgIHdpZHRoOiAyNHB4O1xyXG4gICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgICAgICBmb250LXNpemU6IDI0cHg7XHJcbiAgICAgICAgcGFkZGluZzogMHB4O1xyXG4gICAgfVxyXG59XHJcblxyXG4ucmVzZXRWaWV3ZXItYnV0dG9ue1xyXG4gICAgY3Vyc29yOiBwb2ludGVyO1xyXG4gICAgei1pbmRleDogMjtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xyXG4gICAgYm9yZGVyOiBub25lO1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlOyBcclxuICAgIHRvcDogIDM0cHg7IFxyXG4gICAgcmlnaHQ6IDJweDtcclxuICAgIGNvbG9yOiAkY29sb3IxO1xyXG4gICAgcGFkZGluZzogMHB4O1xyXG4gICAgd2lkdGg6IDMwcHg7XHJcbiAgICBoZWlnaHQ6IDM0cHg7XHJcbiAgICBvdXRsaW5lOiBub25lO1xyXG59XHJcblxyXG4jYXJyb3d7XHJcbiAgICBzdHJva2U6ICRjb2xvcjg7XHJcbiAgICBmaWxsOiB0cmFuc3BhcmVudDtcclxufVxyXG4jYXJyb3dfc2VsZWN0ZWR7XHJcbiAgICBzdHJva2U6ICRzZWxlY3RlZC1jb2xvcjtcclxuICAgIGZpbGw6ICRzZWxlY3RlZC1jb2xvcjtcclxufVxyXG4iLCJcclxuJGNvbG9yMTogIzgwODA4MDtcclxuJGNvbG9yMjogIzk5OTk5OTtcclxuJGNvbG9yMzogI0IzQjNCMzsgXHJcbiRjb2xvcjQ6ICNDQ0NDQ0M7XHJcbiRjb2xvcjU6ICNFNkU2RTY7XHJcbiRjb2xvcjUtNTogcmdiKDI0NSwgMjQ1LCAyNDUpO1xyXG4kY29sb3I2OiByZ2IoMjUwLCAyNTAsIDI1MSk7XHJcblxyXG4kY29sb3I3OiB3aGl0ZTtcclxuJGNvbG9yODogIzM3MzczNztcclxuXHJcbiRzZWxlY3RlZC1jb2xvcjogcmdiKDAsIDAsIDEwOSk7XHJcbiRob3Zlci1jb2xvcjogJGNvbG9yMjtcclxuXHJcbiRlcnJvci1jb2xvcjogI0U5NDg1ODsgLy9waW5rLXJlZFxyXG4kZXJyb3ItY29sb3ItbHQ6IHJnYigyNTUsIDIyMCwgMjI0KTtcclxuJHBjb2xvcjI6ICNGM0EzMkE7IC8vb3JhbmdlLXllbGxvd1xyXG4kcHJpbnQtY29sb3I6IHJnYigxMzAsIDE5MSwgMTEwKTsgLy9saWdodGdyZWVuXHJcbiRwcmludC1jb2xvci1sdDogcmdiKDIzMCwgMjU1LCAyMjEpO1xyXG4kc2VsZWN0R2VvbS1jb2xvcjogcmdiKDI1NSwgMTc0LCAwKTsgLy8gbGlnaHQgb3JhbmdlXHJcbiRzZWxlY3RHZW9tLWNvbG9yLWx0OiByZ2IoMjU1LCAyMjUsIDE2MCk7XHJcblxyXG4vLyAkcHJvZC1iYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMjUwLDI1MCwyNTApO1xyXG4vLyAkYmFja2dyb3VuZC1jb2xvcjogcmdiKDIyMCwyMjAsMjIwKTtcclxuJGZ1bmN0aW9uLXRleHQtY29sb3I6IHJnYigxOTAsIDE0MCwgMzApO1xyXG4kZnVuY3Rpb24tdGV4dC1jb2xvcjI6IHJnYigxOCwgMTI2LCAxMzYpO1xyXG4kYmFzaWMtZnVuY3Rpb24tdGV4dC1jb2xvcjogcmdiKDIwMCwgNzAsIDE1MCk7XHJcbiRjb21tZW50LWNvbG9yOiBkYXJrZ3JlZW47XHJcbiIsIiRwYWRkaW5nOiA0MHB4OyAvLyA/IG5vdCB1c2VkXHJcbiRzbWFsbC1wYWRkaW5nOiAxNXB4O1xyXG4kaGVhZGVyLWhlaWdodDogNDBweDtcclxuXHJcbiRmc2l6ZTE6IDE1cHg7XHJcbiRmc2l6ZTI6IDEycHg7XHJcbiRmc2l6ZTM6IDMwcHg7XHJcblxyXG4kcG9ydC1zaXplOiAxNXB4O1xyXG4kZGVmYXVsdC1zaWRlLXBhZGRpbmc6IDE1cHg7XHJcblxyXG4kZGlzYWJsZWQtb3BhY2l0eTogMC40OyJdfQ== */\"","import { Component, Input, Output, EventEmitter, OnInit, AfterViewInit, ViewChild } from '@angular/core';\r\n\r\nimport { NodeUtils, INode } from '@models/node';\r\nimport { IEdge } from '@models/edge';\r\n\r\nimport { ACTIONS } from './node/node.actions';\r\nimport * as circularJSON from 'circular-json';\r\nimport { fromEvent } from 'rxjs';\r\nimport { DataService } from '@services';\r\n\r\n// import size of the canvas\r\nimport { canvasSize } from '@models/flowchart';\r\nimport { Router } from '@angular/router';\r\nimport { SplitComponent } from 'angular-split';\r\nimport { LoadUrlComponent } from '@shared/components/file/loadurl.component';\r\nimport { getViewerData } from '@shared/getViewerData';\r\n\r\ndeclare const InstallTrigger: any;\r\n\r\n\r\n@Component({\r\n    selector: 'view-flowchart',\r\n    templateUrl: './view-flowchart.component.html',\r\n    styleUrls: ['./view-flowchart.component.scss']\r\n})\r\nexport class ViewFlowchartComponent implements OnInit, AfterViewInit {\r\n\r\n    viewerData = getViewerData;\r\n    @Output() switch = new EventEmitter();\r\n    @ViewChild('flowchartSplit') flowchartSplit: SplitComponent;\r\n\r\n    constructor(private dataService: DataService, private router: Router) {\r\n        new LoadUrlComponent(this.dataService, this.router).loadStartUpURL(this.router.url);\r\n    }\r\n\r\n    viewbox = `0 0 ${canvasSize} ${canvasSize}`;\r\n\r\n    // general variable for mouse events\r\n    private isDown: number;\r\n    private starTxyzs = [];\r\n    private canvas: any;\r\n    private element: any;\r\n\r\n    // variable for flowchart zooming\r\n    private mousePos = [0, 0];\r\n    private zoom = 10;\r\n    private minZoom = 5;\r\n    private maxZoom = 25;\r\n    private zoomFactor = 1;\r\n\r\n    // variable for edge\r\n    private edge: IEdge = { source: undefined, target: undefined, selected: false };\r\n    private selectedEdge = [];\r\n    private startType: string;\r\n\r\n    // variable for copied node\r\n    private copied: string;\r\n    private copySub: any;\r\n    private pasteSub: any;\r\n    private keydownSub: any;\r\n    private splitDragSub: any;\r\n\r\n    // listener for events, only activated when the mouse is hovering over the svg component\r\n    private keydownListener = fromEvent(document, 'keydown');\r\n    private copyListener = fromEvent(document, 'copy');\r\n    private pasteListener = fromEvent(document, 'paste');\r\n    private listenerActive = false;\r\n\r\n    notificationMessage = '';\r\n    notificationTrigger = true;\r\n\r\n\r\n    // position of the current canvas view relative to the top left of the page\r\n    private offset: number[];\r\n\r\n    // constants for offset positions of input/output port relative to the node's position\r\n    inputOffset = [50, 40];\r\n    outputOffset = [50, 40];\r\n\r\n\r\n    static disableNode(node: INode) {\r\n        for (const edge of node.input.edges) {\r\n            if (edge.source.parentNode.enabled) { return; }\r\n        }\r\n        node.enabled = false;\r\n        for (const edge of node.output.edges) {\r\n            ViewFlowchartComponent.disableNode(edge.target.parentNode);\r\n        }\r\n    }\r\n\r\n\r\n    static enableNode(node: INode) {\r\n        node.enabled = true;\r\n        for (const edge of node.output.edges) {\r\n            ViewFlowchartComponent.enableNode(edge.target.parentNode);\r\n        }\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.canvas = <HTMLElement>document.getElementById('svg-canvas');\r\n        // const panZoom = svgPanZoom(this.canvas);\r\n        const bRect = <DOMRect>this.canvas.getBoundingClientRect();\r\n        const boundingDiv = <DOMRect>document.getElementById('flowchart-main-container').getBoundingClientRect();\r\n        this.offset = [bRect.left, bRect.top];\r\n\r\n        /*\r\n        */\r\n        // transform\r\n        if (!this.dataService.flowchartPos) {\r\n            this.dataService.flowchartPos = 'matrix(' + this.zoom + ', 0, 0,' + this.zoom + ', -' +\r\n            boundingDiv.width * this.zoom / 2 + ', -' + boundingDiv.width * this.zoom / 2 + ')';\r\n        } else {\r\n            this.zoom = Number(this.dataService.flowchartPos.split(',')[3]);\r\n        }\r\n\r\n        this.canvas.style.transform = this.dataService.flowchartPos;\r\n\r\n        // copy: copy node\r\n        this.copySub = this.copyListener.subscribe(val => {\r\n            // || document.activeElement.tagName === 'TEXTAREA'\r\n            if (!this.listenerActive) { return; }\r\n            const node = this.dataService.node;\r\n            if (node.type === '') {\r\n                const saved = {\r\n                    'input': node.input,\r\n                    'output': node.output,\r\n                    'model': node.model\r\n                };\r\n                node.input = undefined;\r\n                node.output = undefined;\r\n                node.model = undefined;\r\n                this.copied = circularJSON.stringify(node);\r\n\r\n                node.input = saved.input;\r\n                node.output = saved.output;\r\n                node.model = saved.model;\r\n\r\n                this.notificationMessage = `Copied Last Selected Node`;\r\n                this.notificationTrigger = !this.notificationTrigger;\r\n            }\r\n        });\r\n\r\n        // paste: paste copied node\r\n        this.pasteSub = this.pasteListener.subscribe((val: ClipboardEvent) => {\r\n            //\r\n            if (!this.listenerActive || document.activeElement.tagName === 'TEXTAREA') { return; }\r\n            if (this.copied) {\r\n                event.preventDefault();\r\n                const newNode = <INode>circularJSON.parse(this.copied);\r\n                const pt = this.canvas.createSVGPoint();\r\n                pt.x = 20;\r\n                pt.y = 100;\r\n\r\n                const svgP = this.convertCoord(pt);\r\n\r\n                NodeUtils.updateNode(newNode, svgP);\r\n                newNode.enabled = false;\r\n                this.dataService.flowchart.nodes.push(newNode);\r\n                this.notificationMessage = `Pasted Node`;\r\n                this.notificationTrigger = !this.notificationTrigger;\r\n\r\n                this.dataService.registerFlwAction({'type': 'add', 'nodes': [newNode]});\r\n            }\r\n        });\r\n\r\n        // delete: delete selected edge(s)\r\n        this.keydownSub = this.keydownListener.subscribe((event: KeyboardEvent) => {\r\n            if (!this.listenerActive) { return; }\r\n            if (event.key === 'Delete') {\r\n                if (this.selectedEdge.length > 0) {\r\n                    this.deleteSelectedEdges();\r\n                } else {\r\n                    if (document.activeElement.id !== this.dataService.node.id) {\r\n                        this.deleteSelectedNodes();\r\n                    }\r\n                }\r\n            } else if (event.key.toLowerCase() === 'z' && (event.ctrlKey === true || event.metaKey === true)) {\r\n                let act: any;\r\n                if (event.shiftKey) {\r\n                    act = this.dataService.redoFlw();\r\n                } else {\r\n                    act = this.dataService.undoFlw();\r\n                }\r\n                if (!act) { return; }\r\n                if ( (act.type === 'add') !== event.shiftKey ) {\r\n                    if (act.edges) {\r\n                        for (const tbrEdge of act.edges) {\r\n                            for (let i = 0; i < this.dataService.flowchart.edges.length; i++) {\r\n                                if (this.dataService.flowchart.edges[i] === tbrEdge) {\r\n                                    this.deleteEdge(i);\r\n                                    break;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    if (!act.nodes) { return; }\r\n                    for (const tbrNode of act.nodes) {\r\n                        let nodeIndex: number;\r\n                        for (let i = 0; i < this.dataService.flowchart.nodes.length; i++) {\r\n                            const node = this.dataService.flowchart.nodes[i];\r\n                            if (tbrNode.id === node.id) {\r\n                                nodeIndex = i;\r\n                                this.dataService.flowchart.nodes.splice(i, 1);\r\n                                break;\r\n                            }\r\n                        }\r\n                        let tbrSel: number;\r\n                        for (let j = 0; j < this.dataService.flowchart.meta.selected_nodes.length; j++) {\r\n                            if (tbrSel) {\r\n                                this.dataService.flowchart.meta.selected_nodes[j] -= 1;\r\n                            }\r\n                            if (this.dataService.flowchart.meta.selected_nodes[j] === nodeIndex) {\r\n                                tbrSel = nodeIndex;\r\n                            }\r\n                        }\r\n                        this.dataService.flowchart.meta.selected_nodes.splice(tbrSel, 1);\r\n                    }\r\n                } else {\r\n                    if (act.nodes) {\r\n                        for (const tbaNode of act.nodes) {\r\n                            this.dataService.flowchart.nodes.push(tbaNode);\r\n                        }\r\n                    }\r\n                    if (!act.edges) { return; }\r\n                    for (const tbaEdge of act.edges) {\r\n                        this.dataService.flowchart.edges.push(tbaEdge);\r\n                        tbaEdge.target.edges.push(tbaEdge);\r\n                        tbaEdge.source.edges.push(tbaEdge);\r\n                        tbaEdge.selected = false;\r\n                        if (tbaEdge.source.parentNode.enabled) {\r\n                            tbaEdge.target.parentNode.enabled = true;\r\n                        }\r\n                    }\r\n                    while (true) {\r\n                        let check = false;\r\n                        for (const node of this.dataService.flowchart.nodes) {\r\n                            if (node.enabled) { continue; }\r\n                            for (const inp of node.input.edges) {\r\n                                if (inp.source.parentNode.enabled) {\r\n                                    node.enabled = true;\r\n                                    check = true;\r\n                                    break;\r\n                                }\r\n                            }\r\n                        }\r\n                        if (!check) {\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n    }\r\n    convertCoord(pt) {\r\n        const isFirefox = typeof InstallTrigger !== 'undefined';\r\n        if (isFirefox) {\r\n            const ctm = this.canvas.getScreenCTM();\r\n            const bRect = this.canvas.getBoundingClientRect();\r\n            ctm.a = ctm.a * this.zoom;\r\n            ctm.d = ctm.d * this.zoom;\r\n            ctm.e = bRect.x;\r\n            ctm.f = bRect.y;\r\n            return pt.matrixTransform(ctm.inverse());\r\n        } else {\r\n            return pt.matrixTransform(this.canvas.getScreenCTM().inverse());\r\n        }\r\n\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        if (this.dataService.newFlowchart) {\r\n            this.focusFlowchart();\r\n            this.dataService.newFlowchart = false;\r\n        } else if (this.dataService.splitUpdate) {\r\n            this.focusFlowchart();\r\n            this.dataService.splitUpdate = false;\r\n        }\r\n\r\n    }\r\n\r\n    /*\r\n    handle event received from node component\r\n    */\r\n    nodeAction(event, node_index): void {\r\n\r\n        switch (event.action) {\r\n\r\n            // switch the viewchild of the appModule to the node's procedure view when double-click on the node\r\n            case ACTIONS.PROCEDURE:\r\n                this.router.navigate(['/editor']);\r\n                // this.switch.emit('editor');\r\n                this.deactivateKeyEvent();\r\n                break;\r\n\r\n            // select a node\r\n            case ACTIONS.SELECT:\r\n                const selectedNode = this.dataService.flowchart.nodes[node_index];\r\n                if (event.ctrlKey || event.metaKey) {\r\n                    document.getElementById('executeButton').focus();\r\n                    const index = this.dataService.flowchart.meta.selected_nodes.indexOf(node_index);\r\n                    if (index === -1) {\r\n                        this.dataService.flowchart.meta.selected_nodes = [node_index].concat(\r\n                            this.dataService.flowchart.meta.selected_nodes);\r\n                    } else {\r\n                        if (this.dataService.flowchart.meta.selected_nodes.length > 1) {\r\n                            this.dataService.flowchart.meta.selected_nodes.splice(index, 1);\r\n                        }\r\n                    }\r\n                } else {\r\n                    if (selectedNode.type === ''\r\n                    && this.dataService.flowchart.meta.selected_nodes.length === 1\r\n                    && this.dataService.flowchart.meta.selected_nodes[0] === node_index) {\r\n                        if (document.activeElement.id !== selectedNode.id) {\r\n                            const textarea = <HTMLTextAreaElement>document.getElementById(selectedNode.id);\r\n                            textarea.focus();\r\n                            textarea.select();\r\n                        }\r\n                    } else {\r\n                        document.getElementById('executeButton').focus();\r\n                    }\r\n                    this.dataService.flowchart.meta.selected_nodes = [ node_index ];\r\n                }\r\n                break;\r\n\r\n            // initiate dragging node\r\n            case ACTIONS.DRAGNODE:\r\n                this.element = this.dataService.flowchart.nodes[node_index];\r\n                const pt = this.canvas.createSVGPoint();\r\n\r\n                // get current mouse position in the page\r\n                pt.x = event.data.pageX;\r\n                pt.y = event.data.pageY;\r\n\r\n                // convert mouse position to svg position (special procedure for firefox)\r\n                const svgP = this.convertCoord(pt);\r\n\r\n                // save the svg position as starTxyzs\r\n                this.starTxyzs = [\r\n                    svgP.x,\r\n                    svgP.y\r\n                ];\r\n                if (this.starTxyzs[0] === NaN) {\r\n                    this.starTxyzs = [0, 0];\r\n                }\r\n                // mark the dragging mode as dragNode\r\n                this.isDown = 2;\r\n                break;\r\n\r\n            // initiate dragging input/output port\r\n            case ACTIONS.DRAGPORT:\r\n                // create a new edge\r\n                this.edge = <IEdge>{source: undefined, target: undefined, selected: false};\r\n\r\n                // assign the port to the edge's input/output accordingly\r\n                if (event.type === 'input') {\r\n                    this.edge.target = event.data;\r\n                } else {\r\n                    this.edge.source = event.data;\r\n                }\r\n                this.startType = event.type;\r\n\r\n                // modify the temporary-edge's coordinate\r\n                this.element = <HTMLElement>document.getElementById('temporary-wire');\r\n                this.element.setAttribute('x1', event.position[0]);\r\n                this.element.setAttribute('y1', event.position[1]);\r\n                this.element.setAttribute('x2', event.position[0]);\r\n                this.element.setAttribute('y2', event.position[1]);\r\n                this.isDown = 3;\r\n                break;\r\n        }\r\n    }\r\n\r\n    // check if the node at node_index is selected\r\n    isSelected(node_index: number): boolean {\r\n        return this.dataService.flowchart.meta.selected_nodes.indexOf(node_index) > -1;\r\n    }\r\n\r\n    // add a new node\r\n    addNode(event?): void {\r\n        // create a new node\r\n        const newNode = NodeUtils.getNewNode();\r\n\r\n        // the new node's position would be (20,100) relative to the current view\r\n        const pt = this.canvas.createSVGPoint();\r\n\r\n        pt.x = event.pageX - 40;\r\n        pt.y = event.pageY - 35;\r\n\r\n\r\n        // convert the position to svg position\r\n        const svgP = this.convertCoord(pt);\r\n\r\n        // assign the position to the new node and add it to the flowchart\r\n        newNode.position.x = svgP.x;\r\n        newNode.position.y = svgP.y;\r\n        this.dataService.flowchart.nodes.splice(this.dataService.flowchart.nodes.length - 1, 0, newNode);\r\n        this.dataService.registerFlwAction({'type': 'add', 'nodes': [newNode]});\r\n    }\r\n\r\n    // activate event listener for copy (ctrl+c), paste (ctrl+v), delete (Delete) when mouse hover over the svg component\r\n    activateKeyEvent(): void {\r\n        this.listenerActive = true;\r\n    }\r\n\r\n    // deactivate the event listeners when the mouse exit the svg component\r\n    deactivateKeyEvent(event?: MouseEvent): void {\r\n        this.listenerActive = false;\r\n        if (this.isDown) {\r\n            this.handleMouseUp(event);\r\n        }\r\n    }\r\n\r\n    // delete selected node\r\n    deleteSelectedNodes() {\r\n\r\n        const deletedNodes = [];\r\n        const deletedEdges = [];\r\n        this.dataService.flowchart.meta.selected_nodes = this.dataService.flowchart.meta.selected_nodes.sort();\r\n        // for each of the selected node\r\n        while (this.dataService.flowchart.meta.selected_nodes.length > 0) {\r\n            const node_index = this.dataService.flowchart.meta.selected_nodes.pop();\r\n            const node = this.dataService.flowchart.nodes[node_index];\r\n            // continue if the node is a start/end node\r\n            if (node.type !== '') { continue; }\r\n\r\n            deletedNodes.push(node);\r\n\r\n            let edge_index = 0;\r\n\r\n            // delete all the edges connected to the node\r\n            while (edge_index < this.dataService.flowchart.edges.length) {\r\n                const tbrEdge = this.dataService.flowchart.edges[edge_index];\r\n\r\n\r\n                if (tbrEdge.target.parentNode === node || tbrEdge.source.parentNode === node) {\r\n                    deletedEdges.push(tbrEdge);\r\n                    this.deleteEdge(edge_index);\r\n                    continue;\r\n                }\r\n                edge_index += 1;\r\n            }\r\n\r\n            // remove the node from the flowchart\r\n            this.dataService.flowchart.nodes.splice(Number(node_index), 1);\r\n        }\r\n        const nodes = this.dataService.flowchart.nodes;\r\n        for ( let i = 0; i < nodes.length; i ++ ) {\r\n            if (nodes[i].type === 'end') {\r\n                this.dataService.flowchart.meta.selected_nodes = [i];\r\n                break;\r\n            }\r\n        }\r\n        this.dataService.registerFlwAction({'type': 'del', 'nodes': deletedNodes, 'edges': deletedEdges});\r\n\r\n\r\n    }\r\n\r\n    // delete an edge with a known index\r\n    deleteEdge(edge_index) {\r\n        const tbrEdge = this.dataService.flowchart.edges[edge_index];\r\n\r\n        // remove the edge from the target node's list of edges\r\n        for (const i in this.dataService.flowchart.edges) {\r\n            if (tbrEdge.target.edges[i] === tbrEdge) {\r\n                tbrEdge.target.edges.splice(Number(i), 1);\r\n                break;\r\n            }\r\n        }\r\n\r\n        // remove the edge from the source node's list of edges\r\n        for (const i in tbrEdge.source.edges) {\r\n            if (tbrEdge.source.edges[i] === tbrEdge) {\r\n                tbrEdge.source.edges.splice(Number(i), 1);\r\n                break;\r\n            }\r\n        }\r\n\r\n        ViewFlowchartComponent.disableNode(tbrEdge.target.parentNode);\r\n\r\n        // remove the edge from the general list of edges\r\n        this.dataService.flowchart.edges.splice(edge_index, 1);\r\n        this.dataService.flowchart.ordered = false;\r\n    }\r\n\r\n\r\n    // delete all the selected edges\r\n    deleteSelectedEdges() {\r\n        this.selectedEdge.sort().reverse();\r\n        const deletedEdges = [];\r\n        for (const edge_index of this.selectedEdge) {\r\n            deletedEdges.push(this.dataService.flowchart.edges[edge_index]);\r\n            this.deleteEdge(edge_index);\r\n        }\r\n        this.dataService.registerFlwAction({'type': 'del', 'edges': deletedEdges});\r\n        this.selectedEdge = [];\r\n    }\r\n\r\n    // select an edge\r\n    selectEdge(event, edge_index) {\r\n\r\n        // if ctrl is pressed, add the edge into the list of selected edges\r\n        if (event === 'ctrl') {\r\n            this.selectedEdge.push(edge_index);\r\n            this.dataService.flowchart.edges[edge_index].selected = true;\r\n        } else if (event === 'single' || (event === false && this.selectedEdge.length > 1)) {\r\n            if (this.selectedEdge.length > 0) {\r\n                for (const e of this.selectedEdge) { this.dataService.flowchart.edges[e].selected = false; }\r\n            }\r\n            this.selectedEdge = [edge_index];\r\n            this.dataService.flowchart.edges[edge_index].selected = true;\r\n        } else {\r\n            this.dataService.flowchart.edges[edge_index].selected = false;\r\n            for (let i = 0; i < this.selectedEdge.length; i ++) { if (this.selectedEdge[i] === edge_index) {\r\n                this.selectedEdge.splice(i, 1);\r\n                break;\r\n            }\r\n            }\r\n        }\r\n    }\r\n\r\n    // focus view onto the flowchart\r\n    focusFlowchart(): void {\r\n        // find the frame of the flowchart: frame = [minX, minY, maxX, maxY]\r\n        const frame = [this.dataService.flowchart.nodes[0].position.x, this.dataService.flowchart.nodes[0].position.y,\r\n                                this.dataService.flowchart.nodes[0].position.x, this.dataService.flowchart.nodes[0].position.y];\r\n        for (const node of this.dataService.flowchart.nodes) {\r\n            if (node.position.x < frame[0]) {\r\n                frame[0] = node.position.x;\r\n            } else if (node.position.x > frame[2]) {\r\n                frame[2] = node.position.x;\r\n            }\r\n            if (node.position.y < frame[1]) {\r\n                frame[1] = node.position.y;\r\n            } else if (node.position.y > frame[3]) {\r\n                frame[3] = node.position.y;\r\n            }\r\n        }\r\n        frame[2] += 100;\r\n        frame[3] += 100;\r\n\r\n        // calculate the zoom to fit the whole flowchart\r\n        const bRect = <DOMRect>this.canvas.getBoundingClientRect();\r\n        let zoom = canvasSize  / (frame[2] - frame[0]);\r\n        const heightZoom = canvasSize / (frame[3] - frame[1]);\r\n\r\n        zoom = Math.min(zoom, heightZoom, this.maxZoom);\r\n\r\n        let nX;\r\n        let nY;\r\n\r\n        if (zoom > this.minZoom) {\r\n            const boundingDiv = <DOMRect>document.getElementById('flowchart-main-container').getBoundingClientRect();\r\n            // const ctm = this.zoom * boundingDiv.width / canvasSize;\r\n            const ctm = bRect.width / canvasSize;\r\n\r\n            nX = (boundingDiv.width  - (frame[2] + frame[0]) * ctm * zoom / this.zoom) / 2;\r\n            nY = (boundingDiv.height - (frame[3] + frame[1]) * ctm * zoom / this.zoom) / 2;\r\n\r\n            // if the minX or minY goes below 0 (outside of svg frame), change them back to 0\r\n            if (nX > 0) { nX = 0; }\r\n            if (nY > 0) { nY = 0; }\r\n\r\n        } else {\r\n            zoom = this.minZoom;\r\n            const ctm = bRect.width / canvasSize;\r\n            nX = - frame[0] * ctm * zoom / this.zoom;\r\n            nY = - frame[1] * ctm * zoom / this.zoom;\r\n        }\r\n\r\n        // transform\r\n        this.dataService.flowchartPos = `matrix(${zoom},0,0,${zoom},${nX},${nY})`;\r\n        this.canvas.style.transform = this.dataService.flowchartPos;\r\n\r\n        this.zoom = zoom;\r\n    }\r\n\r\n\r\n    // scale view on mouse wheel\r\n    scale(event: WheelEvent): void {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n\r\n        // calculate new zoom value\r\n        let value: number = this.zoom - (Math.sign(event.deltaY)) * this.zoomFactor;\r\n\r\n        // limit the zoom value to be between 1 and 2.5\r\n        if (value >= this.minZoom && value <= this.maxZoom) {\r\n            value = Number( (value).toPrecision(5) );\r\n        } else {\r\n            return;\r\n        }\r\n\r\n\r\n        /*\r\n        // VER 1: translate before and after re-scaling\r\n        this.mousePos = [event.pageX - this.offset[0], event.pageY - this.offset[1]];\r\n\r\n        const bRect = <DOMRect>this.canvas.getBoundingClientRect();\r\n        const beforeX = this.mousePos[0] - bRect.x + this.offset[0];\r\n        const beforeY = this.mousePos[1] - bRect.y + this.offset[1];\r\n\r\n        const afterX = beforeX / value + this.mousePos[0] * (value - this.zoom);\r\n        const afterY = beforeY / value + this.mousePos[1] * (value - this.zoom);\r\n\r\n        // find transformation matrix\r\n        const m = this.canvas.createSVGMatrix()\r\n        .translate(beforeX / this.zoom, beforeY / this.zoom)\r\n        .scale(value)\r\n        .translate(-afterX, -afterY);\r\n\r\n        this.dataService.flowchartPos = 'matrix(' + m.a + ',' + m.b + ',' + m.c + ',' + m.d + ',' + m.e + ',' + m.f + ')';\r\n        */\r\n\r\n        /*\r\n        // VER 2 : transform relative to the top-left of the bounding box of the canvas and adjust based on mouse position\r\n\r\n        this.mousePos = [event.pageX - this.offset[0], event.pageY - this.offset[1]];\r\n\r\n        const bRect = <DOMRect>this.canvas.getBoundingClientRect();\r\n        let newX = (bRect.left - this.offset[0] - this.mousePos[0] * (value - this.zoom)) / this.zoom;\r\n        let newY = (bRect.top - this.offset[1]  - this.mousePos[1] * (value - this.zoom)) / this.zoom;\r\n        const boundingDiv = <DOMRect>document.getElementById('flowchart-main-container').getBoundingClientRect();\r\n\r\n        const m = this.canvas.createSVGMatrix()\r\n        .scale(value)\r\n        .translate(newX, newY);\r\n\r\n        newX = m.e;\r\n        newY = m.f;\r\n\r\n        if (newX > 0) {\r\n            newX = 0;\r\n        } else if (boundingDiv.width - newX > bRect.width * value / this.zoom) {\r\n            newX = boundingDiv.width - bRect.width * value / this.zoom;\r\n        }\r\n        if (newY > 0) {\r\n            newY = 0;\r\n        } else if (boundingDiv.height - newY > bRect.height * value / this.zoom) {\r\n            newY = boundingDiv.height - bRect.height * value / this.zoom;\r\n        }\r\n        if (newY > 0) { newY = 0; }\r\n\r\n\r\n        this.dataService.flowchartPos = 'matrix(' + value + ', 0, 0,' + value + ',' + newX + ',' + newY + ')';\r\n        */\r\n\r\n        /*\r\n        // VER 3: transform relative to the center of the canvas\r\n\r\n        const bRect = <DOMRect>this.canvas.getBoundingClientRect();\r\n        const boundingDiv = <DOMRect>document.getElementById('flowchart-main-container').getBoundingClientRect();\r\n\r\n        let newX = (bRect.left - this.offset[0]) / this.zoom;\r\n        let newY = (bRect.top - this.offset[1] ) / this.zoom;\r\n\r\n\r\n        const m = this.canvas.createSVGMatrix()\r\n        .scale(value)\r\n        .translate(newX, newY);\r\n\r\n        newX = m.e - boundingDiv.width * (value - this.zoom) / (2 * this.zoom);\r\n        newY = m.f - boundingDiv.width * (value - this.zoom) / (2 * this.zoom);\r\n\r\n        if (newX > 0) {\r\n            newX = 0;\r\n        } else if (boundingDiv.width - newX > bRect.width * value / this.zoom) {\r\n            newX = boundingDiv.width - bRect.width * value / this.zoom;\r\n        }\r\n        if (newY > 0) {\r\n            newY = 0;\r\n        } else if (boundingDiv.height - newY > bRect.height * value / this.zoom) {\r\n            newY = boundingDiv.height - bRect.height * value / this.zoom;\r\n        }\r\n        if (newY > 0) { newY = 0; }\r\n        */\r\n\r\n        // VER 4: transform relative to the mouse position\r\n        this.mousePos = [event.pageX - this.offset[0], event.pageY - this.offset[1]];\r\n\r\n        const bRect = <DOMRect>this.canvas.getBoundingClientRect();\r\n        const boundingDiv = <DOMRect>document.getElementById('flowchart-main-container').getBoundingClientRect();\r\n\r\n        let newX = ((bRect.left - this.offset[0]) * value - this.mousePos[0] * (value - this.zoom)) / this.zoom;\r\n        let newY = ((bRect.top  - this.offset[1]) * value - this.mousePos[1] * (value - this.zoom)) / this.zoom;\r\n\r\n        // snapping back the x and y coordinates if the zoom goes out of the bounding box\r\n        if (newX > 0) {\r\n            newX = 0;\r\n        } else if (boundingDiv.width - newX > bRect.width * value / this.zoom) {\r\n            newX = boundingDiv.width - bRect.width * value / this.zoom;\r\n        }\r\n        if (newY > 0) {\r\n            newY = 0;\r\n        } else if (boundingDiv.height - newY > bRect.height * value / this.zoom) {\r\n            newY = boundingDiv.height - bRect.height * value / this.zoom;\r\n        }\r\n        if (newY > 0) { newY = 0; }\r\n\r\n        this.dataService.flowchartPos = 'matrix(' + value + ', 0, 0,' + value + ',' + newX + ',' + newY + ')';\r\n\r\n        // transform\r\n        this.canvas.style.transform = this.dataService.flowchartPos;\r\n\r\n        this.zoom = value;\r\n    }\r\n\r\n\r\n    // initiate dragging the view window\r\n    panStart(event: any) {\r\n        event.preventDefault();\r\n        const bRect = <DOMRect>this.canvas.getBoundingClientRect();\r\n        // set start coords to current view window position\r\n        this.starTxyzs = [\r\n            event.clientX - (bRect.left - this.offset[0]),\r\n            event.clientY - (bRect.top - this.offset[1])\r\n            // event.deltaX - (bRect.left - this.offset[0]),\r\n            // event.deltaY - (bRect.top - this.offset[1])\r\n        ];\r\n        // set drag mode to drag view\r\n        this.isDown = 1;\r\n    }\r\n\r\n    // handle mouse move for dragging view/node/port\r\n    handleMouseMove(event: any) {\r\n        // return if no dragging initiated\r\n        if (!this.isDown) {\r\n            return;\r\n\r\n        // if drag view\r\n        } else if (this.isDown === 1) {\r\n            event.preventDefault();\r\n            const bRect = <DOMRect>this.canvas.getBoundingClientRect();\r\n            let x = Number(event.clientX - this.starTxyzs[0]);\r\n            let y = Number(event.clientY - this.starTxyzs[1]);\r\n            // let x = Number(event.deltaX - this.starTxyzs[0]);\r\n            // let y = Number(event.deltaY - this.starTxyzs[1]);\r\n            const boundingDiv = <DOMRect>document.getElementById('flowchart-main-container').getBoundingClientRect();\r\n            if (x > 0 || bRect.width < boundingDiv.width) {\r\n                x = 0;\r\n            } else if (boundingDiv.width - x > bRect.width) {\r\n                x = boundingDiv.width - bRect.width;\r\n            }\r\n            if (y > 0 || bRect.height < boundingDiv.height) {\r\n                y = 0;\r\n            } else if (boundingDiv.height - y > bRect.height) {\r\n                y = boundingDiv.height - bRect.height;\r\n            }\r\n            this.dataService.flowchartPos = 'matrix(' + this.zoom + ',0,0,' + this.zoom + ',' + x + ',' + y + ')';\r\n            this.canvas.style.transform = this.dataService.flowchartPos;\r\n\r\n\r\n        // if drag node\r\n        } else if (this.isDown === 2) {\r\n\r\n            const pt = this.canvas.createSVGPoint();\r\n\r\n            pt.x = event.pageX;\r\n            pt.y = event.pageY;\r\n\r\n            const svgP = this.convertCoord(pt);\r\n\r\n            const xDiff = this.starTxyzs[0] - svgP.x;\r\n            const yDiff = this.starTxyzs[1] - svgP.y;\r\n            this.starTxyzs[0] = svgP.x;\r\n            this.starTxyzs[1] = svgP.y;\r\n\r\n            let check: number;\r\n            for ( const nodeIndex of this.dataService.flowchart.meta.selected_nodes) {\r\n                if (this.dataService.flowchart.nodes[nodeIndex].id === this.element.id) {\r\n                    check = nodeIndex;\r\n                    break;\r\n                }\r\n            }\r\n            if (check === undefined) {\r\n                this.element.position.x -= xDiff;\r\n                this.element.position.y -= yDiff;\r\n\r\n                if (!event.shiftKey) {\r\n                    const offsetx = this.element.position.x % 20;\r\n                    const offsety = this.element.position.y % 20;\r\n\r\n                    this.element.position.x = this.element.position.x - offsetx;\r\n                    this.element.position.y = this.element.position.y - offsety;\r\n\r\n                    this.starTxyzs[0] -= offsetx;\r\n                    this.starTxyzs[1] -= offsety;\r\n                }\r\n\r\n            } else {\r\n                for ( const nodeIndex of this.dataService.flowchart.meta.selected_nodes) {\r\n                    const node =  this.dataService.flowchart.nodes[nodeIndex];\r\n                    node.position.x -= xDiff;\r\n                    node.position.y -= yDiff;\r\n                    if (!event.shiftKey) {\r\n                        const offsetx = node.position.x % 20;\r\n                        const offsety = node.position.y % 20;\r\n\r\n                        node.position.x = node.position.x - offsetx;\r\n                        node.position.y = node.position.y - offsety;\r\n                        if (nodeIndex === check) {\r\n                            this.starTxyzs[0] -= offsetx;\r\n                            this.starTxyzs[1] -= offsety;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n    // if drag port\r\n    } else if (this.isDown === 3) {\r\n            event.preventDefault();\r\n            const pt = this.canvas.createSVGPoint();\r\n\r\n            pt.x = event.pageX;\r\n            pt.y = event.pageY;\r\n\r\n            const svgP = this.convertCoord(pt);\r\n            this.element.setAttribute('x2', svgP.x);\r\n            this.element.setAttribute('y2', svgP.y);\r\n\r\n\r\n        }\r\n\r\n    }\r\n\r\n    handleMouseUp(event) {\r\n        this.element = undefined;\r\n        if (this.isDown === 3) {\r\n            const pt = this.canvas.createSVGPoint();\r\n\r\n            pt.x = event.pageX;\r\n            pt.y = event.pageY;\r\n            const svgP = this.convertCoord(pt);\r\n\r\n\r\n            // reset temporary edge position to <(0,0),(0,0)>\r\n            const tempLine = <HTMLElement>document.getElementById('temporary-wire');\r\n            tempLine.setAttribute('x1', '0');\r\n            tempLine.setAttribute('y1', '0');\r\n            tempLine.setAttribute('x2', '0');\r\n            tempLine.setAttribute('y2', '0');\r\n\r\n            // go through all of the nodes' input/output ports\r\n            for (const n of this.dataService.flowchart.nodes) {\r\n                let pPos;\r\n\r\n                // find the node's corresponding port and its position\r\n                if (this.startType === 'input') {\r\n                    if (this.edge.target.parentNode === n || n.type === 'end') { continue; }\r\n                    this.edge.source = n.output;\r\n\r\n                    pPos = [n.position.x + this.outputOffset[0], n.position.y + this.outputOffset[1]];\r\n                } else {\r\n                    if (this.edge.source.parentNode === n || n.type === 'start') { continue; }\r\n                    this.edge.target = n.input;\r\n\r\n                    pPos = [n.position.x + this.inputOffset[0], n.position.y + this.inputOffset[1]];\r\n                }\r\n                // if the distance between the port's position and the dropped position is bigger than 15px, continue\r\n                if (Math.abs(pPos[0] - svgP.x) > 60 || Math.abs(pPos[1] - svgP.y) > 50 ) { continue; }\r\n\r\n                // if there is already an existing edge with the same source and target as the new edge, return\r\n                for (const edge of this.dataService.flowchart.edges) {\r\n                    if (edge.target === this.edge.target && edge.source === this.edge.source) {\r\n                        this.isDown = 0;\r\n                        return;\r\n                    }\r\n                }\r\n                this.edge.target.edges.push(this.edge);\r\n                this.edge.source.edges.push(this.edge);\r\n                this.dataService.flowchart.edges.push(this.edge);\r\n                this.dataService.flowchart.ordered = false;\r\n\r\n                if (this.edge.source.parentNode.enabled) {\r\n                    ViewFlowchartComponent.enableNode(this.edge.target.parentNode);\r\n                }\r\n                break;\r\n            }\r\n            this.dataService.registerFlwAction({'type': 'add', 'edges': [this.edge]});\r\n\r\n        }\r\n        this.isDown = 0;\r\n    }\r\n\r\n    newfile() {\r\n        document.getElementById('newfile').click();\r\n        this.focusFlowchart();\r\n    }\r\n\r\n    // viewerData(): any {\r\n    //     const node = this.dataService.flowchart.nodes[this.dataService.flowchart.meta.selected_nodes[0]];\r\n    //     if (!node || !node.enabled) { return ''; }\r\n    //     // if (node.type === 'output') { return node.input.value; }\r\n    //     return node.model;\r\n    // }\r\n\r\n    dragSplitStart(e) {\r\n        const currentTransf: any = this.dataService.flowchartPos.split(',');\r\n        currentTransf[5] = currentTransf[5].split(')')[0];\r\n        // this.canvas.style.transition = 'transform 0ms linear';\r\n\r\n        // @ts-ignore\r\n        const dragProcess = this.flowchartSplit.dragProgress$ || this.flowchartSplit.dragProgress;\r\n        const bW = (<DOMRect>this.canvas.getBoundingClientRect()).width;\r\n        this.splitDragSub = dragProcess.subscribe(() => {\r\n            const nBW = (<DOMRect>this.canvas.getBoundingClientRect()).width / bW;\r\n            const nX = currentTransf[4] * nBW;\r\n            const nY = currentTransf[5] * nBW;\r\n            this.dataService.flowchartPos = currentTransf[0] + ', 0, 0,' + currentTransf[3] + ',' + nX + ',' + nY + ')';\r\n            this.canvas.style.transform = this.dataService.flowchartPos;\r\n        });\r\n    }\r\n\r\n    dragSplitEnd(e) {\r\n        this.splitDragSub.unsubscribe();\r\n        // this.canvas.style.transition = 'transform 0ms ease-in';\r\n        this.dataService.splitVal = e.sizes[1];\r\n    }\r\n\r\n    deselectAll(e) {\r\n        if (e.ctrlKey || e.metaKey) {return; }\r\n\r\n        document.getElementById('executeButton').focus();\r\n        this.dataService.flowchart.meta.selected_nodes.splice(1, this.dataService.flowchart.meta.selected_nodes.length - 1);\r\n        for (const edgeIndex of this.selectedEdge) {\r\n            this.dataService.flowchart.edges[edgeIndex].selected = false;\r\n        }\r\n        this.selectedEdge = [];\r\n    }\r\n    getSplit() { return this.dataService.splitVal; }\r\n    getFlowchart() { return this.dataService.flowchart; }\r\n    getNode() { return this.dataService.node; }\r\n    getFlowchartName() { return this.dataService.file.name; }\r\n\r\n}\r\n\r\n","// import @angular stuff\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n// import app components\r\nimport { ViewFlowchartComponent } from './view-flowchart.component';\r\nimport { NodeComponent } from './node/node.component';\r\nimport { EdgeComponent } from './edge/edge.component';\r\nimport { SharedModule } from '@shared/shared.module';\r\nimport { ViewFlowchartRoutingModule } from './view-flowchart-routing.module';\r\n\r\n/**\r\n * ViewFlowchartModule\r\n */\r\n@NgModule({\r\n  declarations: [\r\n    ViewFlowchartComponent,\r\n    NodeComponent,\r\n    EdgeComponent,\r\n  ],\r\n  exports: [ ViewFlowchartComponent ],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    SharedModule,\r\n    ViewFlowchartRoutingModule\r\n    ],\r\n  entryComponents: [ ],\r\n  providers: [ ]\r\n})\r\nexport class ViewFlowchartModule {\r\n    constructor () { }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n/*\r\n * Shortens a name to a certain length and appends \"...\" infront of it\r\n * Usage:\r\n *   value | length:number\r\n * Example:\r\n *   {{ \"some_very_long_string\" | length:7 }}\r\n *   formats to: some_ve...\r\n*/\r\n@Pipe({name: 'simplename'})\r\nexport class SimpleNamePipe implements PipeTransform {\r\n  transform(value: string): string {\r\n    return value.split('.mob')[0].replace(/_|-/g, ' ');\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { ViewGalleryComponent } from './view-gallery.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: ViewGalleryComponent,\r\n    children: []\r\n  }\r\n];\r\n\r\n\r\n@NgModule({\r\n  imports: [ RouterModule.forChild(routes) ],\r\n  exports: [ RouterModule ]\r\n})\r\nexport class ViewGalleryRoutingModule { }\r\n","module.exports = \"<div class='container'>\\r\\n    <as-split direction=\\\"horizontal\\\" (dragEnd)='setSplit($event)'>\\r\\n        <as-split-area [size]=\\\"100 - getSplit()\\\">\\r\\n            <panel-header [flowchart]='getFlowchart()'></panel-header>\\r\\n            <!-- viewchild content -->\\r\\n            <div class='content__panel'>\\r\\n                <h3 id = 'gallery-tab' (click)='openGalleryMenu($event)'>{{getActiveGallery().name}}<span>▾</span></h3>\\r\\n                <div id=\\\"galleryMenu\\\">\\r\\n                    <div *ngFor='let galleryName of allGalleries;'>\\r\\n                        <li (click)=\\\"switchGallery(galleryName)\\\">\\r\\n                            {{galleryName}}\\r\\n                        </li>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class = 'content--container'>\\r\\n                    <div class=\\\"container__element container__element--project-container\\\">\\r\\n                        <div class=\\\"project-container__project\\\" *ngFor=\\\"let f of getActiveGallery().files\\\">\\r\\n                            <div class=\\\"tile--contents\\\" (click)='loadFile(getActiveGallery().link + f)'>\\r\\n                                <img src ='{{getActiveGallery().link+\\\"imgs/\\\"+f.split(\\\".mob\\\")[0]+\\\".JPG\\\"}}' alt = 'project image'>\\r\\n                            </div>\\r\\n                            <span class = 'project__title'>{{ f | simplename }}</span>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </as-split-area>\\r\\n\\r\\n        <as-split-area [size]=\\\"getSplit()\\\">\\r\\n            <!-- data viewers panel -->\\r\\n            <div class='content__viewer' >\\r\\n                <model-viewers-container [data]='viewerData(getNode(), true)'></model-viewers-container>\\r\\n            </div>\\r\\n        </as-split-area>\\r\\n        \\r\\n    </as-split>\\r\\n\\r\\n</div>\\r\\n<spinner></spinner>\\r\\n<chrome></chrome>\\r\\n\"","module.exports = \".content__panel {\\n  margin-top: 40px;\\n  margin-left: 11px;\\n  height: calc(100vh - 40px);\\n  overflow: hidden;\\n  overflow-y: hidden; }\\n\\n.content--container {\\n  display: inline-block;\\n  box-sizing: border-box;\\n  width: 100%;\\n  margin-left: -11px;\\n  height: calc(100vh - 70px);\\n  overflow: hidden;\\n  overflow-y: auto; }\\n\\n.container__element--project-container {\\n  display: flex;\\n  flex-flow: row wrap;\\n  padding: 15px 19px 15px 30px;\\n  font-size: 30px;\\n  line-height: 32px;\\n  font-weight: 300;\\n  width: -webkit-fit-content;\\n  width: -moz-fit-content;\\n  width: fit-content;\\n  box-sizing: border-box; }\\n\\n.project-container__project {\\n  position: relative;\\n  margin: 10px;\\n  width: 200px;\\n  display: flex;\\n  flex-flow: column nowrap; }\\n\\n.project-container__project .tile--contents {\\n    height: 150px;\\n    width: inherit;\\n    box-sizing: border-box;\\n    display: flex;\\n    flex-flow: column nowrap;\\n    justify-content: center;\\n    border: 1px solid #808080;\\n    padding: 1px; }\\n\\n.project-container__project .tile--contents img {\\n      height: 100%;\\n      width: 100%;\\n      transition: 0.4s; }\\n\\n.project-container__project .tile--contents:hover {\\n      border: 2px solid #00006d;\\n      opacity: 1;\\n      padding: 0px; }\\n\\n.project-container__project .project__title {\\n    width: 100%;\\n    font-size: 12px;\\n    line-height: 15px;\\n    overflow: hidden; }\\n\\nh2 {\\n  color: #CCCCCC;\\n  background-color: #999999;\\n  text-align: left;\\n  padding-left: 15px;\\n  font-size: 12px;\\n  line-height: 19px; }\\n\\nh4 {\\n  color: #808080;\\n  text-align: left;\\n  padding-left: 15px;\\n  font-size: 12px;\\n  line-height: 16px; }\\n\\np {\\n  color: #808080;\\n  text-align: left;\\n  padding-left: 15px;\\n  font-size: 12px;\\n  line-height: 14px; }\\n\\nhr {\\n  border-top: 2px solid #E6E6E6;\\n  margin: 0px; }\\n\\nh3 {\\n  cursor: pointer; }\\n\\n#gallery-tab {\\n  line-height: 30px;\\n  height: 30px;\\n  color: #373737; }\\n\\n#galleryMenu {\\n  display: none;\\n  position: absolute;\\n  width: -webkit-fit-content;\\n  width: -moz-fit-content;\\n  width: fit-content;\\n  left: 10px;\\n  transition: display 0.4s;\\n  z-index: 1;\\n  background-color: #fafafb;\\n  border: 1px solid #808080; }\\n\\n#galleryMenu button {\\n    cursor: pointer;\\n    display: block;\\n    min-width: 100px;\\n    max-width: 200px;\\n    background-color: #fafafb;\\n    border: 0px;\\n    margin: 0px;\\n    padding: 0px;\\n    line-height: 30px;\\n    height: 30px;\\n    font-size: 12px; }\\n\\n#galleryMenu li {\\n    cursor: pointer;\\n    display: block;\\n    min-width: 100px;\\n    max-width: 300px;\\n    overflow: hidden;\\n    line-height: 20px;\\n    background-color: #fafafb;\\n    border: 0px;\\n    margin: 0px;\\n    padding: 0px 10px 0px 10px;\\n    line-height: 30px;\\n    height: 30px;\\n    font-size: 12px;\\n    color: #373737; }\\n\\n#galleryMenu li:hover {\\n      color: #00006d;\\n      background-color: #E6E6E6; }\\n\\n/*# sourceMappingURL=data:application/json;base64, */\"","import { Component, Output, EventEmitter, OnInit } from '@angular/core';\r\nimport { LoadUrlComponent } from '@shared/components/file/loadurl.component';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Constants } from './view-gallery.config';\r\nimport { Observable } from 'rxjs';\r\nimport { IMobius } from '@models/mobius';\r\n// import {Router} from '@angular/router';\r\n\r\nimport { DataService } from '@services';\r\nimport * as circularJSON from 'circular-json';\r\nimport { Router } from '@angular/router';\r\n\r\nimport * as galleryUrls from '@assets/gallery/__config__.json';\r\nimport { getViewerData } from '@shared/getViewerData';\r\n\r\n@Component({\r\n  selector: 'view-gallery',\r\n  templateUrl: './view-gallery.component.html',\r\n  styleUrls: ['./view-gallery.component.scss']\r\n})\r\nexport class ViewGalleryComponent {\r\n\r\n    viewerData = getViewerData;\r\n    // private allFiles: Observable<any>;\r\n    allGalleries = [];\r\n    @Output() switch = new EventEmitter();\r\n\r\n    /*\r\n    constructor(private http: HttpClient, private dataService: DataService, private router: Router) {\r\n        this.allFiles = this.getFilesFromURL();\r\n    }\r\n\r\n    */\r\n\r\n    constructor(private http: HttpClient, private dataService: DataService, private router: Router) {\r\n        this.allGalleries = galleryUrls.data.map(gallery => gallery.name);\r\n        if (!this.dataService.activeGallery || !this.switchGallery(this.dataService.activeGallery.name)) {\r\n            this.dataService.activeGallery = galleryUrls.data[0];\r\n        }\r\n        /*\r\n        if (!this.dataService.galleryFiles) {\r\n            this.dataService.galleryFiles = this.getFilesFromURL();\r\n        }\r\n        */\r\n        new LoadUrlComponent(this.dataService, this.router).loadStartUpURL(this.router.url);\r\n   }\r\n\r\n    getFilesFromURL(): Observable<any> {\r\n        return this.http.get(Constants.GALLERY_URL, {responseType: 'json'});\r\n    }\r\n\r\n    openGalleryMenu(e: MouseEvent) {\r\n        const stl = document.getElementById('galleryMenu').style;\r\n        if (!stl.display || stl.display === 'none') {\r\n            stl.display = 'block';\r\n        } else {\r\n            stl.display = 'none';\r\n        }\r\n        e.stopPropagation();\r\n\r\n    }\r\n\r\n\r\n    switchGallery(galleryName: string): boolean {\r\n        for (const gallery of galleryUrls.data) {\r\n            if (gallery.name === galleryName) {\r\n                this.dataService.activeGallery = gallery;\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    loadFile(fileLink) {\r\n        const linkSplit = fileLink.split(/\\s*&*\\s*node\\s*=/);\r\n        linkSplit[0] = linkSplit[0].trim();\r\n        // if (!linkSplit[0].endsWith('.mob')) {\r\n        //     linkSplit[0] = linkSplit[0].concat('.mob');\r\n        // }\r\n        if (linkSplit.length > 1) {\r\n            new LoadUrlComponent(this.dataService, this.router).loadURL(linkSplit[0], linkSplit[1].split('&')[0].trim());\r\n        } else {\r\n            new LoadUrlComponent(this.dataService, this.router).loadURL(linkSplit[0]);\r\n        }\r\n        this.router.navigate(['/dashboard']);\r\n\r\n        // const stream = Observable.create(observer => {\r\n        //     const request = new XMLHttpRequest();\r\n\r\n        //     request.open('GET', fileLink + '.mob');\r\n        //     request.onload = () => {\r\n        //         if (request.status === 200) {\r\n        //             const f = circularJSON.parse(request.responseText);\r\n        //             const file: IMobius = {\r\n        //                 name: f.name,\r\n        //                 author: f.author,\r\n        //                 flowchart: f.flowchart,\r\n        //                 last_updated: f.last_updated,\r\n        //                 version: f.version,\r\n        //                 settings: f.settings || {}\r\n        //             };\r\n        //             observer.next(file);\r\n        //             observer.complete();\r\n        //         } else {\r\n        //             observer.error('error happened');\r\n        //         }\r\n        //     };\r\n\r\n        //     request.onerror = () => {\r\n        //     observer.error('error happened');\r\n        //     };\r\n        //     request.send();\r\n        // });\r\n        // stream.subscribe(loadeddata => {\r\n        //     this.dataService.file = loadeddata;\r\n        //     this.dataService.newFlowchart = true;\r\n        //     if (this.dataService.node.type !== 'end') {\r\n        //         for (let i = 0; i < loadeddata.flowchart.nodes.length; i++) {\r\n        //             if (loadeddata.flowchart.nodes[i].type === 'end') {\r\n        //                 loadeddata.flowchart.meta.selected_nodes = [i];\r\n        //                 break;\r\n        //             }\r\n        //         }\r\n        //     }\r\n        //     this.router.navigate(['/dashboard']);\r\n        //     document.getElementById('executeButton').click();\r\n        // });\r\n    }\r\n\r\n    // viewerData(): any {\r\n    //     const node = this.dataService.flowchart.nodes[this.dataService.flowchart.meta.selected_nodes[0]];\r\n    //     if (!node || !node.enabled) { return ''; }\r\n    //     // if (node.type === 'output') { return node.input.value; }\r\n    //     return node.model;\r\n    // }\r\n\r\n    setSplit(event) {\r\n        this.dataService.splitUpdate = true;\r\n        this.dataService.splitVal = event.sizes[1];\r\n    }\r\n\r\n    getSplit() { return this.dataService.splitVal; }\r\n    getFlowchart() { return this.dataService.flowchart; }\r\n    getNode() { return this.dataService.node; }\r\n    getActiveGallery() { return this.dataService.activeGallery; }\r\n    getFlowchartName() { return this.dataService.file.name; }\r\n}\r\n","export class Constants {\r\n    public static get GALLERY_URL(): string {\r\n        return 'https://api.github.com/repos/design-automation/mobius-parametric-modeller/contents/src/assets/gallery?ref=master';\r\n    }\r\n\r\n    public static get FILE_URL(): string {\r\n        return 'https://raw.githubusercontent.com/design-automation/mobius-gallery/master/examples/';\r\n    }\r\n}\r\n","\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { SharedModule } from '@shared/shared.module';\r\n\r\nimport { ViewGalleryRoutingModule } from './view-gallery-routing.module';\r\nimport { ViewGalleryComponent } from './view-gallery.component';\r\nimport { SimpleNamePipe } from './simple-name.pipe';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ViewGalleryComponent,\r\n    SimpleNamePipe\r\n  ],\r\n  exports: [],\r\n  imports: [\r\n    CommonModule,\r\n    ViewGalleryRoutingModule,\r\n    SharedModule\r\n  ],\r\n  entryComponents: [ ],\r\n  providers: [ ]\r\n})\r\nexport class ViewGalleryModule {\r\n    constructor () { }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { ViewPublishComponent } from './view-publish.component';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        component: ViewPublishComponent,\r\n        children: [ ]\r\n    }\r\n];\r\n\r\n\r\n@NgModule({\r\n    imports: [ RouterModule.forChild(routes) ],\r\n    exports: [ RouterModule ]\r\n})\r\nexport class ViewPublishRoutingModule { }\r\n","module.exports = \"<div class='container'>\\r\\n    <as-split direction=\\\"horizontal\\\" (dragEnd)='setSplit($event)'>\\r\\n        \\r\\n        <as-split-area [size]=\\\"100 - getSplit()\\\">\\r\\n            <publish-header [title]='getFlowchart().name'></publish-header>\\r\\n            <!-- viewchild content -->\\r\\n            <div class='content__panel'>\\r\\n                <parameter-viewer [flowchart]='getFlowchart()' [startNode]='getFlowchart().nodes[0]' [endNode]='getEndNode()'></parameter-viewer>\\r\\n            </div>\\r\\n            <div class='footer'>\\r\\n                <p><img  src=\\\"assets/logo/logo-16high.png\\\" alt=\\\"Möbius Modeller\\\">\\r\\n                Powered by <a href='https://mobius.design-automation.net'>Möbius Modeller</a></p>\\r\\n            </div>\\r\\n        </as-split-area>\\r\\n\\r\\n        <as-split-area [size]=\\\"getSplit()\\\">\\r\\n            <!-- data viewers panel -->\\r\\n            <div class='content__viewer' >\\r\\n                <model-viewers-container [data]='viewerData(getNode(), true)'></model-viewers-container>\\r\\n            </div>\\r\\n        </as-split-area>\\r\\n        \\r\\n    </as-split>\\r\\n</div>\\r\\n<spinner></spinner>\\r\\n<chrome></chrome>\"","module.exports = \".content__panel {\\n  margin-top: 40px;\\n  padding-left: 11px;\\n  height: calc(100% - 70px);\\n  overflow-y: auto; }\\n\\nh3 {\\n  line-height: 30px;\\n  height: 30px;\\n  color: #373737; }\\n\\n.footer {\\n  border-top: 3px solid #E6E6E6;\\n  padding-top: 5px;\\n  color: #808080; }\\n\\n.footer a:link, .footer a:visited {\\n    color: #808080;\\n    text-decoration: underline; }\\n\\n.footer a:link:active, .footer a:visited:active {\\n    color: #808080; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdmlld3Mvdmlldy1wdWJsaXNoL0M6XFxEcm9wYm94XFxGaWxlc1xcU29mdHdhcmVcXEdpdEh1YlxcZGVzaWduLWF1dG9tYXRpb25cXG1vYml1cy1wYXJhbWV0cmljLW1vZGVsbGVyL3NyY1xcYXBwXFx2aWV3c1xcdmlldy1wdWJsaXNoXFx2aWV3LXB1Ymxpc2guY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL3ZpZXdzL3ZpZXctcHVibGlzaC9DOlxcRHJvcGJveFxcRmlsZXNcXFNvZnR3YXJlXFxHaXRIdWJcXGRlc2lnbi1hdXRvbWF0aW9uXFxtb2JpdXMtcGFyYW1ldHJpYy1tb2RlbGxlci9zcmNcXHNjc3NcXHZhcmlhYmxlcy5zY3NzIiwic3JjL2FwcC92aWV3cy92aWV3LXB1Ymxpc2gvQzpcXERyb3Bib3hcXEZpbGVzXFxTb2Z0d2FyZVxcR2l0SHViXFxkZXNpZ24tYXV0b21hdGlvblxcbW9iaXVzLXBhcmFtZXRyaWMtbW9kZWxsZXIvc3JjXFxzY3NzXFxjb2xvcnMuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFHQTtFQUNJLGdCQ0ZnQjtFREdoQixrQkFBa0I7RUFFbEIseUJBQXlCO0VBQ3pCLGdCQUFnQixFQUFBOztBQUdwQjtFQUNJLGlCQUFpQjtFQUNqQixZQUFZO0VBQ1osY0VKWSxFQUFBOztBRk9oQjtFQUNJLDZCRWJZO0VGY1osZ0JBQWdCO0VBQ2hCLGNFbkJZLEVBQUE7O0FGZ0JoQjtJQU1RLGNFdEJRO0lGdUJSLDBCQUEwQixFQUFBOztBQVBsQztJQVdRLGNFM0JRLEVBQUEiLCJmaWxlIjoic3JjL2FwcC92aWV3cy92aWV3LXB1Ymxpc2gvdmlldy1wdWJsaXNoLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiQGltcG9ydCAnfnNjc3MvY29sb3JzJztcclxuQGltcG9ydCAnfnNjc3MvdmFyaWFibGVzJztcclxuXHJcbi5jb250ZW50X19wYW5lbHtcclxuICAgIG1hcmdpbi10b3A6ICRoZWFkZXItaGVpZ2h0O1xyXG4gICAgcGFkZGluZy1sZWZ0OiAxMXB4OyAvL3NwbGl0IGJhciB3aWR0aFxyXG5cclxuICAgIGhlaWdodDogY2FsYygxMDAlIC0gNzBweCk7IC8vaGVhZGVyIGhlaWdodDtcclxuICAgIG92ZXJmbG93LXk6IGF1dG87XHJcbn1cclxuXHJcbmgzIHtcclxuICAgIGxpbmUtaGVpZ2h0OiAzMHB4O1xyXG4gICAgaGVpZ2h0OiAzMHB4O1xyXG4gICAgY29sb3I6ICRjb2xvcjg7XHJcbn1cclxuXHJcbi5mb290ZXJ7XHJcbiAgICBib3JkZXItdG9wOiAzcHggc29saWQgJGNvbG9yNTtcclxuICAgIHBhZGRpbmctdG9wOiA1cHg7XHJcbiAgICBjb2xvcjogJGNvbG9yMTtcclxuXHJcbiAgICBhOmxpbmssIGE6dmlzaXRlZCB7IFxyXG4gICAgICAgIGNvbG9yOiAkY29sb3IxO1xyXG4gICAgICAgIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICBhOmxpbms6YWN0aXZlLCBhOnZpc2l0ZWQ6YWN0aXZlIHsgXHJcbiAgICAgICAgY29sb3I6ICRjb2xvcjE7XHJcbiAgICB9XHJcbn0iLCIkcGFkZGluZzogNDBweDsgLy8gPyBub3QgdXNlZFxyXG4kc21hbGwtcGFkZGluZzogMTVweDtcclxuJGhlYWRlci1oZWlnaHQ6IDQwcHg7XHJcblxyXG4kZnNpemUxOiAxNXB4O1xyXG4kZnNpemUyOiAxMnB4O1xyXG4kZnNpemUzOiAzMHB4O1xyXG5cclxuJHBvcnQtc2l6ZTogMTVweDtcclxuJGRlZmF1bHQtc2lkZS1wYWRkaW5nOiAxNXB4O1xyXG5cclxuJGRpc2FibGVkLW9wYWNpdHk6IDAuNDsiLCJcclxuJGNvbG9yMTogIzgwODA4MDtcclxuJGNvbG9yMjogIzk5OTk5OTtcclxuJGNvbG9yMzogI0IzQjNCMzsgXHJcbiRjb2xvcjQ6ICNDQ0NDQ0M7XHJcbiRjb2xvcjU6ICNFNkU2RTY7XHJcbiRjb2xvcjUtNTogcmdiKDI0NSwgMjQ1LCAyNDUpO1xyXG4kY29sb3I2OiByZ2IoMjUwLCAyNTAsIDI1MSk7XHJcblxyXG4kY29sb3I3OiB3aGl0ZTtcclxuJGNvbG9yODogIzM3MzczNztcclxuXHJcbiRzZWxlY3RlZC1jb2xvcjogcmdiKDAsIDAsIDEwOSk7XHJcbiRob3Zlci1jb2xvcjogJGNvbG9yMjtcclxuXHJcbiRlcnJvci1jb2xvcjogI0U5NDg1ODsgLy9waW5rLXJlZFxyXG4kZXJyb3ItY29sb3ItbHQ6IHJnYigyNTUsIDIyMCwgMjI0KTtcclxuJHBjb2xvcjI6ICNGM0EzMkE7IC8vb3JhbmdlLXllbGxvd1xyXG4kcHJpbnQtY29sb3I6IHJnYigxMzAsIDE5MSwgMTEwKTsgLy9saWdodGdyZWVuXHJcbiRwcmludC1jb2xvci1sdDogcmdiKDIzMCwgMjU1LCAyMjEpO1xyXG4kc2VsZWN0R2VvbS1jb2xvcjogcmdiKDI1NSwgMTc0LCAwKTsgLy8gbGlnaHQgb3JhbmdlXHJcbiRzZWxlY3RHZW9tLWNvbG9yLWx0OiByZ2IoMjU1LCAyMjUsIDE2MCk7XHJcblxyXG4vLyAkcHJvZC1iYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMjUwLDI1MCwyNTApO1xyXG4vLyAkYmFja2dyb3VuZC1jb2xvcjogcmdiKDIyMCwyMjAsMjIwKTtcclxuJGZ1bmN0aW9uLXRleHQtY29sb3I6IHJnYigxOTAsIDE0MCwgMzApO1xyXG4kZnVuY3Rpb24tdGV4dC1jb2xvcjI6IHJnYigxOCwgMTI2LCAxMzYpO1xyXG4kYmFzaWMtZnVuY3Rpb24tdGV4dC1jb2xvcjogcmdiKDIwMCwgNzAsIDE1MCk7XHJcbiRjb21tZW50LWNvbG9yOiBkYXJrZ3JlZW47XHJcbiJdfQ== */\"","import { Component, Input, AfterViewInit } from '@angular/core';\r\nimport { IFlowchart } from '@models/flowchart';\r\nimport { INode } from '@models/node';\r\nimport { DataService } from '@services';\r\nimport { Router } from '@angular/router';\r\nimport { LoadUrlComponent } from '@shared/components/file/loadurl.component';\r\nimport { getViewerData } from '@shared/getViewerData';\r\n\r\nconst canvas = document.createElement('canvas');\r\nconst ctx = canvas.getContext('2d');\r\nctx.font = '12px sans-serif';\r\n\r\n@Component({\r\n  selector: 'view-publish',\r\n  templateUrl: './view-publish.component.html',\r\n  styleUrls: ['./view-publish.component.scss']\r\n})\r\nexport class ViewPublishComponent implements AfterViewInit {\r\n\r\n    viewerData = getViewerData;\r\n\r\n    constructor(private dataService: DataService, private router: Router) {\r\n        new LoadUrlComponent(this.dataService, this.router).loadStartUpURL(this.router.url.split(/\\s*&*\\s*node\\s*=/)[0]);\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        setTimeout(() => {\r\n            this.adjustTextArea();\r\n        }, 50);\r\n    }\r\n\r\n    adjustTextArea() {\r\n        let textarea = document.getElementById('display-flowchart-desc');\r\n        if (textarea) {\r\n            const desc = this.dataService.flowchart.description.split('\\n');\r\n            const textareaWidth = textarea.getBoundingClientRect().width - 30;\r\n            let lineCount = 0;\r\n            for (const line of desc) {\r\n                lineCount += Math.floor(ctx.measureText(line).width / textareaWidth) + 1;\r\n            }\r\n            textarea.style.height = lineCount * 14 + 4 + 'px';\r\n        }\r\n        for (const prod of this.dataService.flowchart.nodes[0].procedure) {\r\n            if (!prod.enabled || prod.type !== 10 || prod.meta.inputMode === 5) { continue; }\r\n            textarea = document.getElementById(prod.ID + '_desc');\r\n            if (textarea) {\r\n                const desc = prod.meta.description.split('\\n');\r\n                const textareaWidth = textarea.getBoundingClientRect().width - 30;\r\n                let lineCount = 0;\r\n                for (const line of desc) {\r\n                    lineCount += Math.floor(ctx.measureText(line).width / textareaWidth) + 1;\r\n                }\r\n                textarea.style.height = lineCount * 14 + 4 + 'px';\r\n            }\r\n        }\r\n    }\r\n\r\n    getEndNode(): INode {\r\n      for (const node of this.dataService.flowchart.nodes) {\r\n        if (node.type === 'end') { return node; }\r\n      }\r\n    }\r\n\r\n    setSplit(event) {\r\n        this.dataService.splitUpdate = true;\r\n        this.dataService.splitVal = event.sizes[1];\r\n        this.adjustTextArea();\r\n    }\r\n\r\n    getSplit() { return this.dataService.splitVal; }\r\n    getFlowchart() { return this.dataService.flowchart; }\r\n    getNode() { return this.dataService.node; }\r\n}\r\n\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { SharedModule } from '@shared/shared.module';\r\nimport { ViewPublishRoutingModule } from './view-publish-routing.module';\r\nimport { ViewPublishComponent } from './view-publish.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ViewPublishComponent,\r\n  ],\r\n  exports: [\r\n    ViewPublishComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    SharedModule,\r\n    ViewPublishRoutingModule\r\n  ],\r\n  entryComponents: [ ],\r\n  providers: [ ]\r\n})\r\nexport class ViewPublishModule {\r\n    constructor () { }\r\n}\r\n","\r\nexport const inline_query_expr = [\r\n    ['#@name == value', 'Search for entities with attributes equal to a given value'],\r\n    ['#@name[i] == value', 'Search for entities with attributes with index equal to a given value'],\r\n    ['#@name != value', 'Search for entities with attributes not equal to a given value'],\r\n    ['#@name[i] != value', 'Search for entities with attributes with index not equal to a given value'],\r\n    ['#@name > value', 'Search for entities with attributes greater than a given value'],\r\n    ['#@name[i] > value', 'Search for entities with attributes with index greater than a given value'],\r\n    ['#@name >= value', 'Search for entities with attributes greater than or equal to a given value'],\r\n    ['#@name[i] >= value', 'Search for entities with attributes with index greater than or equal to a given value'],\r\n    ['#@name < value', 'Search for entities with attributes less than a given value'],\r\n    ['#@name[i] < value', 'Search for entities with attributes with index less than a given value'],\r\n    ['#@name <= value', 'Search for entities with attributes less than or equal to a given value'],\r\n    ['#@name[i] <= value', 'Search for entities with attributes with index less than or equal to a given value']\r\n];\r\n\r\nexport const inline_sort_expr = [\r\n    ['#@name', 'Sort based on attribute value'],\r\n    ['#@name[i]', 'Sort based on attribute index value']\r\n];\r\n\r\nconst constants = [\r\n    ['PI', 'The mathematical constant PI, 3.141... '],\r\n    ['XY', 'A plane at the origin, aligned with the XY plane'],\r\n    ['YZ', 'A plane at the origin, aligned with the YZ plane'],\r\n    ['ZX', 'A plane at the origin, aligned with the ZX plane'],\r\n    ['YX', 'A plane at the origin, aligned with the YX plane'],\r\n    ['ZY', 'A plane at the origin, aligned with the ZY plane'],\r\n    ['XZ', 'A plane at the origin, aligned with the XZ plane']\r\n ];\r\n\r\nconst lists = [\r\n    ['range(start, end)', 'Generates a list of integers, from start to end, with a step size of 1'],\r\n    ['range(start, end, step?)', 'Generates a list of integers, from start to end, with a specified step size'],\r\n    ['isList(list)', 'Returns true if this is a list, false otherwise.'],\r\n    ['listLen(list)', 'Returns the number of items in the list'],\r\n    ['listLast(list)', 'Returns the last item in a list'],\r\n    ['listGet(list, index)', 'Returns the item in the list specified by index, either a positive or negative integer'],\r\n    ['listFind(list, val)', 'Returns the index of the first occurence of the value in the list, or -1 if not found'],\r\n    ['listHas(list, val)', 'Returns true if the list contains the value, false otherwise'],\r\n    ['listCount(list, val)', 'Returns the number of times the value is in the list'],\r\n    ['listCopy(list)', 'Returns a copy of the list'],\r\n    ['listJoin(list1, list2)', 'Joins two lists into a single list'],\r\n    ['listFlat(list)', 'Returns a copy of the nested list, flattened to a depth of 1'],\r\n    ['listFlat(list, depth?)', 'Returns a copy of the nested list, flattened to the specified depth'],\r\n    ['listSlice(list, start, end?)', 'Return a sub-list from the list'],\r\n    ['listZip(lists)', 'Converts a set of lists from rows into columns, based on the shortest list'],\r\n    ['lisZip2(lists)', 'Converts a set of lists from rows into columns, based on the longest list']\r\n ];\r\n\r\n const vectors = [\r\n    ['vecAdd(v1, v2)', 'Adds two vectors'],\r\n    ['vecSub(v1, v2)', 'Subtracts vec2 from vec1'],\r\n    ['vecDiv(v, num)', 'Divides a vector by a number'],\r\n    ['vecMult(v, num)', 'Multiplies a vector by a number'],\r\n    ['vecLen(v)', 'Calculates the magnitude of a vector'],\r\n    ['vecSetLen(v, num)', 'Sets the magnitude of a vector'],\r\n    ['vecNorm(v)', 'Sets the magnitude of a vector to 1'],\r\n    ['vecRev(v)', 'Reverses the direction of a vector'],\r\n    ['vecFromTo(pt1, pt2)', 'Creates a vector between two points'],\r\n    ['vecAng(v1, v2)', 'Calculate the angle (0 to PI) between two vectors'],\r\n    ['vecAng2(v1, v2, n)', 'Calculate the angle (0 to 2PI) between two vectors, relative to the plane normal'],\r\n    ['vecDot(v1, v2)', 'Calculates the cross product of thre vectors'],\r\n    ['vecCross(v1, v2)', 'Calculates the dot product of two vectors'],\r\n    ['vecEqual(v1, v2, tol)', 'Returns true if the difference between two vectors is smaler than a specified tolerance']\r\n];\r\n\r\nconst conversion = [\r\n    ['boolean(val)', 'Converts the value to a boolean'],\r\n    ['number(val)', 'Converts the value to a number'],\r\n    ['string(val)', 'Converts the value to a string'],\r\n    ['radToDeg(rad)', 'Converts radians to degrees'],\r\n    ['degToRad(deg)', 'Converts degrees to radians']\r\n];\r\n\r\nconst random = [\r\n    ['rand(min, max)', 'Returns a random number in the specified range'],\r\n    ['randInt(min, max)', 'Returns a random integer in the specified range'],\r\n    ['randPick(list, num)', 'Returns a random set of items from the list']\r\n];\r\n\r\nconst arithmetic = [\r\n    ['abs(num)', 'Returns the absolute value of the number'],\r\n    ['square(num)', 'Returns the square of the number'],\r\n    ['cube(num)', 'Returns the cube of the number'],\r\n    ['pow(numb, pow)', 'Returns the number to the specified power'],\r\n    ['sqrt(num)', 'Returns the square root of the number'],\r\n    ['exp(num)', 'Returns the value of E to the power of the number'],\r\n    ['log(num)', 'Returns the natural logarithm (base E) of the number'],\r\n    ['round(num)', 'Returns the value of the number rounded to its nearest integer'],\r\n    ['ceil(num)', 'Returns the value of the number rounded up to its nearest integer'],\r\n    ['floor(num)', 'Returns the value of the number rounded down to its nearest integer'],\r\n    ['mod(num, num)', 'Converts the value to a boolean'],\r\n    ['sum(list)', 'Returns the sum of all values in a list'],\r\n    ['prod(list)', 'Returns the product of all values in a list'],\r\n    ['hypot(list)', 'Returns the hypothenuse of all values in a list'],\r\n    ['norm(list)', 'Returns the norm of a vector'],\r\n    ['distance(list, list)', 'Returns the Eucledian distance between two locations (each as a list of xyz coordinates)']\r\n];\r\n\r\nconst statistics = [\r\n    ['min(list)', 'Returns the number with the lowest value'],\r\n    ['max(list)', 'Returns the number with the highest value'],\r\n    ['mad(list)', 'Returns the median absolute deviation of the list'],\r\n    ['mean(list)', 'Returns the mean value of the list'],\r\n    ['median(list)', 'Returns the median of the list'],\r\n    ['mode(list)', 'Returns the mode of the list'],\r\n    ['std(list)', 'Returns the standard deviation of the list'],\r\n    ['vari(list)', 'Returns the variance of the list']\r\n];\r\n\r\nconst trigonometry = [\r\n    ['sin(rad)', 'Returns the sine of a value (in radians)'],\r\n    ['asin(num)', 'Returns the inverse sine of a value (in radians)'],\r\n    ['sinh(rad)', 'Returns the hyperbolic sine of a value (in radians)'],\r\n    ['asinh(num)', 'Returns the hyperbolic arcsine of a value (in radians)'],\r\n    ['cos(rad)', 'Returns the cosine of a value (in radians)'],\r\n    ['acos(num)', 'Returns the inverse cosine of a value (in radians)'],\r\n    ['cosh(rad)', 'Returns the hyperbolic cosine of a value (in radians)'],\r\n    ['acosh(num)', 'Returns the hyperbolic arccos of a value (in radians)'],\r\n    ['tan(rad)', 'Returns the tangent of a value (in radians)'],\r\n    ['atan(num)', 'Returns the inverse tangent of a value (in radians)'],\r\n    ['tanh(rad)', 'Returns the hyperbolic tangent of a value (in radians)'],\r\n    ['atanh(num)', 'Returns the hyperbolic arctangent of a value (in radians)'],\r\n    ['atan2(number1, number2)', 'Returns the inverse tangent function with two arguments, number1/number2']\r\n];\r\n\r\nconst str = [\r\n    ['replace(string,search_str,new_str)', 'Replace all instances of specified search with a new string']\r\n];\r\n\r\nexport const inline_func = [\r\n    ['constants', constants],\r\n    ['random', random],\r\n    ['lists', lists],\r\n    ['conversion', conversion],\r\n    ['vectors', vectors],\r\n    ['arithmetic', arithmetic],\r\n    ['statistics', statistics],\r\n    ['trigonometry', trigonometry]\r\n];\r\n\r\n// const inline_func_lst: string[][][] = inline_func.map(x => x[1]);\r\n// const inline_func_lst = [\r\n//     lists,\r\n//     conversion,\r\n//     arithmetic,\r\n//     statistics,\r\n//     trigonometry\r\n// ];\r\n\r\n// const inline_fn_names = [];\r\n// for (let i = 0; i < inline_func_lst.length; i++) {\r\n//     inline_func_lst[i].forEach((arr) => {\r\n//         const mtch = arr[0].match(/^\\w*(?=\\()/);\r\n//         let ret;\r\n//         if (mtch !== null) {\r\n//             ret = mtch[0];\r\n//         } else {\r\n//             ret = arr[0];\r\n//         }\r\n//         inline_fn_names.push(ret);\r\n//     });\r\n// }\r\n// export const inline_fn_regEx = RegExp(inline_fn_names.join('|'), 'g');\r\n","import { EEntType, EAttribNames, TEntTypeIdx } from '@libs/geo-info/common';\r\n// import { isDim0, isDim1, isDim2 } from '@libs/geo-info/id';\r\nimport { idsBreak } from '@libs/geo-info/id';\r\n\r\n// =========================================================================================================================================\r\n// Attribute Checks\r\n// =========================================================================================================================================\r\nfunction isValidName(fn_name: string, arg_name: string, arg: string): void {\r\n    TypeCheckObj.isString(fn_name, arg_name, arg); // check arg is string\r\n    if (arg.length === 0) {\r\n        throw new Error (fn_name + ': ' + arg_name + ' not specified');\r\n    }\r\n    if (arg.search(/\\W/) !== -1) {\r\n        throw new Error (fn_name + ': ' + arg_name + ' contains restricted characters');\r\n    }\r\n    if (arg[0].search(/[0-9]/) !== -1) {\r\n        throw new Error (fn_name + ': ' + arg_name + ' should not start with numbers');\r\n    }\r\n    return;\r\n}\r\nexport function checkAttribNameValue(fn_name: string, attrib_name: string, attrib_value: any, attrib_index?: number): void {\r\n    isValidName(fn_name, 'attrib_name', attrib_name);\r\n    // blocks writing to id\r\n    if (attrib_name === 'id') {\r\n        throw new Error(fn_name + ': id is not modifiable!');\r\n    }\r\n    // -- check defined index\r\n    let ind = false;\r\n    if (attrib_index !== null && attrib_index !== undefined) {\r\n        ind = true;\r\n        // check if index is number\r\n        TypeCheckObj.isNumber(fn_name, 'attrib_index', attrib_index);\r\n    }\r\n    // -- check blocked name\r\n    const blk_att_nm_lst = Object.values(EAttribNames);\r\n    let blocked = false;\r\n    let isTexture = false;\r\n    let isName = false;\r\n    for (let i = 0; i < blk_att_nm_lst.length; i++) {\r\n        if (attrib_name === 'texture') {\r\n            isTexture = true;\r\n            blocked = true;\r\n            break;\r\n        }\r\n        if (attrib_name === 'name') {\r\n            isName = true;\r\n            blocked = true;\r\n            break;\r\n        }\r\n        if (attrib_name === blk_att_nm_lst[i]) {\r\n            blocked = true;\r\n            break;\r\n        }\r\n    }\r\n    let check_fns = [];\r\n    if (attrib_value !== null && attrib_value !== undefined) {\r\n        if (blocked === true) {\r\n            let pass = false;\r\n            const err_arr = [fn_name + ': ' + 'attrib_name is one of the reserved attribute names - '\r\n                            + Object.values(EAttribNames).toString() + '\\n'];\r\n            if (isName) {\r\n                try {\r\n                    isValidName(fn_name, 'attrib_value', attrib_value);\r\n                    pass = true;\r\n                } catch (err) {\r\n                    err_arr.push(err);\r\n                }\r\n            } else {\r\n                if (ind === false) {\r\n                    try {\r\n                        isListArg(fn_name, 'attrib_value', attrib_value, 'numbers');\r\n                        let chkLstLen;\r\n                        if (isTexture) {\r\n                            chkLstLen = 2;\r\n                        } else {\r\n                            chkLstLen = 3;\r\n                        }\r\n                        isListLenArg(fn_name, 'attrib_value', attrib_value, chkLstLen);\r\n                    } catch (err) {\r\n                        err_arr.push(err.message);\r\n                        throw new Error(err_arr.join(''));\r\n                    }\r\n                    check_fns = [TypeCheckObj.isNumberList];\r\n                    for (let i = 0; i < check_fns.length; i++) {\r\n                        try {\r\n                            check_fns[i](fn_name + '.' + check_fns[i], 'attrib_value', attrib_value);\r\n                        } catch (err) {\r\n                            err_arr.push(err.message + '\\n');\r\n                            continue;\r\n                        }\r\n                        pass = true;\r\n                        break; // passed\r\n                    }\r\n                } else {\r\n                    if (isTexture) {\r\n                        if (attrib_index > 1 || attrib_index < 0) {\r\n                            err_arr.push(fn_name + '.validIndex: attrib_index is not between 0 and 1 (inclusive)');\r\n                            throw new Error(err_arr.join(''));\r\n                        }\r\n                    } else {\r\n                        if (attrib_index > 2 || attrib_index < 0) {\r\n                            err_arr.push(fn_name + '.validIndex: attrib_index is not between 0 and 2 (inclusive)');\r\n                            throw new Error(err_arr.join(''));\r\n                        }\r\n                    }\r\n                    check_fns = [TypeCheckObj.isNumber];\r\n                    for (let i = 0; i < check_fns.length; i++) {\r\n                        try {\r\n                            check_fns[i](fn_name + '[' + attrib_index + ']' + '.' + check_fns[i],\r\n                                                      'attrib_value', attrib_value);\r\n                        } catch (err) {\r\n                            err_arr.push(err.message + '\\n');\r\n                            continue;\r\n                        }\r\n                        pass = true;\r\n                        break; // passed\r\n                    }\r\n                }\r\n            }\r\n            if (pass === false) {\r\n                throw new Error(err_arr.join(''));\r\n            }\r\n        } else {\r\n            if (ind === false) {\r\n                checkCommTypes(fn_name, 'attrib_value', attrib_value,\r\n                    [TypeCheckObj.isString, TypeCheckObj.isNumber, TypeCheckObj.isStringList, TypeCheckObj.isNumberList]);\r\n            } else { // no nested lists\r\n                checkCommTypes(fn_name  + '[' + attrib_index + ']', 'attrib_value', attrib_value,\r\n                    [TypeCheckObj.isString, TypeCheckObj.isNumber]);\r\n            }\r\n        }\r\n    }\r\n    return;\r\n}\r\n\r\n// =========================================================================================================================================\r\n// Function Dictionaries\r\n// =========================================================================================================================================\r\nexport class TypeCheckObj {\r\n    // entities: Check if string\r\n    static isEntity(fn_name: string, arg_name: string, arg: string): void {\r\n        isStringArg(fn_name, arg_name, arg, 'entity');\r\n        if (arg.slice(2).length === 0) {\r\n            throw new Error(fn_name + ': ' + arg_name + ' needs to have an index specified');\r\n        }\r\n        return;\r\n    }\r\n    static isEntityList(fn_name: string, arg_name: string, arg_list: string[]): void {\r\n        isListArg(fn_name, arg_name, arg_list, 'entity');\r\n        for (let i = 0; i < arg_list.length; i++) {\r\n            TypeCheckObj.isEntity(fn_name, arg_name + '[' + i + ']', arg_list[i]);\r\n        }\r\n        return;\r\n    }\r\n    // any: to catch undefined\r\n    static isAny(fn_name: string, arg_name: string, arg: string): void {\r\n        isAnyArg(fn_name, arg_name, arg);\r\n        return;\r\n    }\r\n    // null: allow Null input\r\n    static isNull(fn_name: string, arg_name: string, arg: string): void {\r\n        isNullArg(fn_name, arg_name, arg);\r\n        return;\r\n    }\r\n    // list\r\n    static isList(fn_name: string, arg_name: string, arg: string): void {\r\n        isListArg(fn_name, arg_name, arg, 'any');\r\n        return;\r\n    }\r\n    // strings\r\n    static isString(fn_name: string, arg_name: string, arg: string): void {\r\n        isStringArg(fn_name, arg_name, arg, 'string');\r\n        return;\r\n    }\r\n    static isStringList(fn_name: string, arg_name: string, arg_list: string[]): void {\r\n        isStringListArg(fn_name, arg_name, arg_list, 'string');\r\n        return;\r\n    }\r\n    // numbers and special numbers\r\n    static isNumber(fn_name: string, arg_name: string, arg: number): void {\r\n        isNumberArg(fn_name, arg_name, arg);\r\n        return;\r\n    }\r\n    static isNumberList(fn_name: string, arg_name: string, arg_list: number[]): void {\r\n        isNumberListArg(fn_name, arg_name, arg_list);\r\n        return;\r\n    }\r\n    static isInt(fn_name: string, arg_name: string, arg: number): void {\r\n        isIntArg(fn_name, arg_name, arg);\r\n        return;\r\n    }\r\n    static isXYlist(fn_name: string, arg_name: string, arg_list: [number, number]): void {\r\n        isListArg(fn_name, arg_name, arg_list, 'numbers');\r\n        isListLenArg(fn_name, arg_name, arg_list, 2);\r\n        isNumberListArg(fn_name, arg_name, arg_list);\r\n        return;\r\n    }\r\n    static isXYlistInt(fn_name: string, arg_name: string, arg_list: [number, number]): void {\r\n        isListArg(fn_name, arg_name, arg_list, 'integers');\r\n        isListLenArg(fn_name, arg_name, arg_list, 2);\r\n        isIntListArg(fn_name, arg_name, arg_list);\r\n        return;\r\n    }\r\n    static isXYZlist(fn_name: string, arg_name: string, arg_list: [number, number, number]): void {\r\n        TypeCheckObj.isCoord(fn_name, arg_name, arg_list);\r\n        return;\r\n    }\r\n    // Other Geometry\r\n    static isCoord(fn_name: string, arg_name: string, arg: [number, number, number]): void { // Txyz = [number, number, number]\r\n        isListArg(fn_name, arg_name, arg, 'numbers');\r\n        isListLenArg(fn_name, arg_name, arg, 3);\r\n        isNumberListArg(fn_name, arg_name, arg);\r\n        return;\r\n    }\r\n    static isCoordList(fn_name: string, arg_name: string, arg_list: [number, number, number][]): void {\r\n        isListArg(fn_name, arg_name, arg_list, 'coordinates');\r\n        for (let i = 0; i < arg_list.length; i++) {\r\n            isListLenArg(fn_name, arg_name + '[' + i + ']', arg_list[i], 3);\r\n            isNumberListArg(fn_name, arg_name + '[' + i + ']', arg_list[i]);\r\n        }\r\n        return;\r\n    }\r\n    static isCoordList_List(fn_name: string, arg_name: string, arg_list: [number, number, number][][]): void {\r\n        isListArg(fn_name, arg_name, arg_list, 'lists of coordinates');\r\n        for (let i = 0; i < arg_list.length; i++) {\r\n            for (let j = 0; j < arg_list[i].length; j++) {\r\n                isListLenArg(fn_name, arg_name + '[' + i + ']' + '[' + j + ']', arg_list[i][j], 3);\r\n                isNumberListArg(fn_name, arg_name + '[' + i + ']' + '[' + j + ']', arg_list[i][j]);\r\n            }\r\n        }\r\n        return;\r\n    }\r\n    static isVector(fn_name: string, arg_name: string, arg_list: [number, number, number]): void { // same checks as coord\r\n        TypeCheckObj.isCoord(fn_name, arg_name, arg_list);\r\n        return;\r\n    }\r\n    static isVectorList(fn_name: string, arg_name: string, arg_list: [number, number, number][]): void {\r\n        isListArg(fn_name, arg_name, arg_list, 'vectors');\r\n        for (let i = 0; i < arg_list.length; i++) {\r\n            TypeCheckObj.isVector(fn_name, arg_name + '[' + i + ']', arg_list[i]);\r\n        }\r\n        return;\r\n    }\r\n    static isOrigin(fn_name: string, arg_name: string, arg: number[]): TEntTypeIdx {\r\n        return checkIDnTypes(fn_name, arg_name, arg,\r\n                            [IDcheckObj.isID, TypeCheckObj.isCoord],\r\n                            [EEntType.POSI, EEntType.VERT, EEntType.POINT]) as TEntTypeIdx;\r\n    }\r\n    static isPlane(fn_name: string, arg_name: string, arg_list: [number, number, number][]): void { // TPlane = [Txyz, Txyz, Txyz]\r\n        // one origin: point, posi, vert, coord + 2 vectors\r\n        isListArg(fn_name, arg_name, arg_list, 'origin and vectors');\r\n        isListLenArg(fn_name, arg_name, arg_list, 3);\r\n        TypeCheckObj.isCoord(fn_name, arg_name  + '[0]', arg_list[0]);\r\n        [1, 2].forEach((i) => {\r\n            TypeCheckObj.isVector(fn_name, arg_name + '[' + i + ']', arg_list[i]);\r\n        });\r\n        return;\r\n    }\r\n    static isPlaneList(fn_name: string, arg_name: string, arg_list: [number, number, number][][]): void {\r\n        isListArg(fn_name, arg_name, arg_list, 'planes');\r\n        for (let i = 0; i < arg_list.length; i++) {\r\n            TypeCheckObj.isPlane(fn_name, arg_name + '[' + i + ']', arg_list[i]);\r\n        }\r\n        return;\r\n    }\r\n    static isBBox(fn_name: string, arg_name: string, arg_list: [number, number, number][]): void { // TBbox = [Txyz, Txyz, Txyz, Txyz]\r\n        // four coords\r\n        isListArg(fn_name, arg_name, arg_list, 'origin, min corner, max corner, size');\r\n        isListLenArg(fn_name, arg_name, arg_list, 4);\r\n        TypeCheckObj.isCoord(fn_name, arg_name  + '[0]', arg_list[0]);\r\n        [0, 1, 2, 3].forEach((i) => {\r\n            TypeCheckObj.isVector(fn_name, arg_name + '[' + i + ']', arg_list[i]);\r\n        });\r\n        return;\r\n    }\r\n    static isBBoxList(fn_name: string, arg_name: string, arg_list: [number, number, number][][]): void {\r\n        isListArg(fn_name, arg_name, arg_list, 'BBoxes');\r\n        for (let i = 0; i < arg_list.length; i++) {\r\n            TypeCheckObj.isBBox(fn_name, arg_name + '[' + i + ']', arg_list[i]);\r\n        }\r\n        return;\r\n    }\r\n    static isRay(fn_name: string, arg_name: string, arg_list: [number, number, number][]): void { // TRay = [Txyz, Txyz]\r\n        isListArg(fn_name, arg_name, arg_list, 'origin and vector');\r\n        isListLenArg(fn_name, arg_name, arg_list, 2);\r\n        TypeCheckObj.isCoord(fn_name, arg_name  + '[0]', arg_list[0]);\r\n        TypeCheckObj.isVector(fn_name, arg_name + '[1]', arg_list[1]);\r\n        return;\r\n    }\r\n    static isRayList(fn_name: string, arg_name: string, arg_list: [number, number, number][][]): void {\r\n        isListArg(fn_name, arg_name, arg_list, 'Rays');\r\n        for (let i = 0; i < arg_list.length; i++) {\r\n            TypeCheckObj.isBBox(fn_name, arg_name + '[' + i + ']', arg_list[i]);\r\n        }\r\n        return;\r\n    }\r\n}\r\nexport class IDcheckObj {\r\n    // static default_ent_type_strs = ['POSI', 'TRI', 'VERT', 'EDGE', 'WIRE', 'FACE', 'POINT', 'PLINE', 'PGON', 'COLL'];\r\n    static default_ent_type_strs = [EEntType.POSI,\r\n                                    EEntType.TRI,\r\n                                    EEntType.VERT,\r\n                                    EEntType.EDGE,\r\n                                    EEntType.WIRE,\r\n                                    EEntType.FACE,\r\n                                    EEntType.POINT,\r\n                                    EEntType.PLINE,\r\n                                    EEntType.PGON,\r\n                                    EEntType.COLL];\r\n    // IDs\r\n    // entity types\r\n    // POSI, TRI, VERT, EDGE, WIRE, FACE, POINT, PLINE, PGON, COLL\r\n    static isID(fn_name: string, arg_name: string, arg: any, ent_type_strs: EEntType[]|null): TEntTypeIdx {\r\n        TypeCheckObj.isEntity(fn_name, arg_name, arg); // check is valid id\r\n        const ent_arr = idsBreak(arg) as TEntTypeIdx; // split\r\n\r\n        if (ent_type_strs === null) {\r\n            ent_type_strs = IDcheckObj.default_ent_type_strs;\r\n        }\r\n        let pass = false;\r\n        for (let i = 0; i < ent_type_strs.length; i++) {\r\n            if (ent_arr[0] === ent_type_strs[i]) {\r\n                pass = true;\r\n                break;\r\n            }\r\n        }\r\n        if (pass === false) {\r\n            throw new Error(fn_name + ': ' + arg_name + ' is not one of the following valid types - ' +\r\n                            ent_type_strs.map((test_ent) => EEntType[test_ent]).toString());\r\n        }\r\n        return ent_arr;\r\n    }\r\n    static isIDList(fn_name: string, arg_name: string, arg_list: any[], ent_type_strs: EEntType[]|null): TEntTypeIdx[] {\r\n        TypeCheckObj.isEntityList(fn_name, arg_name, arg_list); // check is valid id list\r\n        const ent_arr_lst = idsBreak(arg_list) as TEntTypeIdx[]; // split\r\n\r\n        if (ent_type_strs === null) {\r\n            ent_type_strs = IDcheckObj.default_ent_type_strs;\r\n        }\r\n        for (let i = 0; i < ent_arr_lst.length; i++) {\r\n            let pass = false;\r\n            for (let j = 0; j < ent_type_strs.length; j++) {\r\n                if (ent_arr_lst[i][0] === ent_type_strs[j]) {\r\n                    pass = true;\r\n                    break;\r\n                }\r\n            }\r\n            if (pass === false) {\r\n                const ret_str_arr = [];\r\n                ent_type_strs.forEach((test_ent) => {\r\n                    ret_str_arr.push(EEntType[test_ent] + '_list');\r\n                });\r\n                throw new Error(fn_name + ': ' + arg_name + '[' + i + ']' + ' is not one of the following valid types - '\r\n                                + ent_type_strs.map((test_ent) => EEntType[test_ent] + '_list').toString());\r\n            }\r\n        }\r\n        return ent_arr_lst;\r\n    }\r\n    static isIDList_list(fn_name: string, arg_name: string, arg_list: any, ent_type_strs: EEntType[]|null): TEntTypeIdx[][] {\r\n        const ret_arr = [];\r\n        for (let i = 0; i < arg_list.length; i++) {\r\n            ret_arr.push(IDcheckObj.isIDList(fn_name, arg_name + '[' + i + ']', arg_list[i], ent_type_strs));\r\n        }\r\n        return ret_arr as TEntTypeIdx[][];\r\n    }\r\n}\r\n// =========================================================================================================================================\r\n// Specific Checks\r\n// =========================================================================================================================================\r\nexport function checkCommTypes(fn_name: string, arg_name: string, arg: any, check_fns: Function[]): void|TEntTypeIdx|\r\n                               TEntTypeIdx[]|TEntTypeIdx[][] {\r\n    let pass = false;\r\n    const err_arr = [];\r\n    let ret;\r\n    for (let i = 0; i < check_fns.length; i++) {\r\n        try {\r\n           ret = check_fns[i](fn_name, arg_name, arg);\r\n        } catch (err) {\r\n            err_arr.push(err.message + '\\n');\r\n            continue;\r\n        }\r\n        pass = true;\r\n        break; // passed\r\n    }\r\n    if (pass === false) { // Failed all tests: argument does not fall into any valid types\r\n        const ret_msg = fn_name + ': ' + arg_name + ' failed the following tests:\\n';\r\n        throw new Error(ret_msg + err_arr.join(''));\r\n    }\r\n    return ret;\r\n}\r\n\r\nexport function checkIDs(fn_name: string, arg_name: string, arg: any, check_fns: Function[],\r\n                         IDchecks: EEntType[]|null): TEntTypeIdx|TEntTypeIdx[]|TEntTypeIdx[][] {\r\n    let pass = false;\r\n    const err_arr = [];\r\n    let ret: TEntTypeIdx|TEntTypeIdx[];\r\n    for (let i = 0; i < check_fns.length; i++) {\r\n        try {\r\n           ret =  check_fns[i](fn_name, arg_name, arg, IDchecks);\r\n        } catch (err) {\r\n            err_arr.push(err.message + '\\n');\r\n            continue;\r\n        }\r\n        pass = true;\r\n        break; // passed\r\n    }\r\n    if (pass === false) { // Failed all tests: argument does not fall into any valid types\r\n        const ret_msg = fn_name + ': ' + arg_name + ' failed the following tests:\\n';\r\n        throw new Error(ret_msg + err_arr.join(''));\r\n    }\r\n    return ret; // returns TEntTypeIdx|TEntTypeIdx[]|TEntTypeIdx[][]; depends on which passes\r\n}\r\n// =========================================================================================================================================\r\n// Most General Check\r\n// =========================================================================================================================================\r\nexport function checkIDnTypes(fn_name: string, arg_name: string, arg: any, check_fns: Function[],\r\n                              IDchecks?: EEntType[]|null): TEntTypeIdx|TEntTypeIdx[]|TEntTypeIdx[][] {\r\n    let pass = false;\r\n    const err_arr = [];\r\n    let ret: TEntTypeIdx|TEntTypeIdx[];\r\n    for (let i = 0; i < check_fns.length; i++) {\r\n        try {\r\n            ret = check_fns[i](fn_name, arg_name, arg, IDchecks);\r\n        } catch (err) {\r\n            err_arr.push(err.message + '\\n');\r\n            continue;\r\n        }\r\n        pass = true;\r\n        break; // passed\r\n\r\n        // if (Object.keys(IDcheckObj).includes(check_fns[i])) {\r\n        //     // checking for ID\r\n        //     try {\r\n        //         ret = IDcheckObj[check_fns[i]](fn_name + '.' + check_fns[i], arg_name, arg, IDchecks);\r\n        //     } catch (err) {\r\n        //         err_arr.push(err.message + '\\n');\r\n        //         continue;\r\n        //     }\r\n        //     pass = true;\r\n        //     break; // passed\r\n        // } else {\r\n        //     // checking common types\r\n        //     try {\r\n        //         TypeCheckObj[check_fns[i]](fn_name + '.' + check_fns[i], arg_name, arg);\r\n        //     } catch (err) {\r\n        //         err_arr.push(err.message + '\\n');\r\n        //         continue;\r\n        //     }\r\n        //     pass = true;\r\n        //     break; // passed\r\n        // }\r\n    }\r\n    if (pass === false) { // Failed all tests: argument does not fall into any valid types\r\n        const ret_msg = fn_name + ': ' + arg_name + ' failed the following tests:\\n';\r\n        throw new Error(ret_msg + err_arr.join(''));\r\n    }\r\n    return ret; // returns void|TEntTypeIdx|TEntTypeIdx[]|TEntTypeIdx[][]; depends on which passes\r\n}\r\n\r\n// =====================================================================================================================\r\n// util\r\n// =====================================================================================================================\r\n// List\r\nfunction isListArg(fn_name: string, arg_name: string, arg: any, typ: string): void {\r\n    if (!Array.isArray(arg)) {\r\n        throw new Error (fn_name + ': ' + arg_name + ' is not a list of ' + typ);\r\n    }\r\n    return;\r\n}\r\nfunction isListLenArg(fn_name: string, arg_name: string, arg_list: any[], len: number): void {\r\n    if (arg_list.length !== len) {\r\n        throw new Error (fn_name + ': ' + arg_name + ' is not a list of length ' + len);\r\n    }\r\n    return;\r\n}\r\n// Any\r\nfunction isAnyArg(fn_name: string, arg_name: string, arg: any): void {\r\n    if (arg === undefined) {\r\n        throw new Error(fn_name + ': ' + arg_name + ' must be defined');\r\n    }\r\n    return;\r\n}\r\n// Null\r\nfunction isNullArg(fn_name: string, arg_name: string, arg: any): void {\r\n    if (arg !== null) {\r\n        throw new Error(fn_name + ': ' + arg_name + ' is not null');\r\n    }\r\n    return;\r\n}\r\n// String\r\nfunction isStringArg(fn_name: string, arg_name: string, arg: any, typ: string): void {\r\n    if (typeof arg !== 'string') {\r\n        throw new Error(fn_name + ': ' + arg_name + ' is not a ' + typ);\r\n    }\r\n    return;\r\n}\r\nfunction isStringListArg(fn_name: string, arg_name: string, arg_list: any[], typ: string): void {\r\n    isListArg(fn_name, arg_name, arg_list, typ);\r\n    for (let i = 0; i < arg_list.length; i++) {\r\n        isStringArg(fn_name, arg_name + '[' + i + ']', arg_list[i], typ);\r\n    }\r\n    return;\r\n}\r\n// Numbers\r\nfunction isNumberArg(fn_name: string, arg_name: string, arg: any): void {\r\n    if (typeof arg !== 'number') {\r\n        throw new Error(fn_name + ': ' + arg_name + ' is not a number');\r\n    }\r\n    return;\r\n}\r\nfunction isNumberListArg(fn_name: string, arg_name: string, arg_list: any): void {\r\n    isListArg(fn_name, arg_name, arg_list, 'numbers');\r\n    for (let i = 0; i < arg_list.length; i++) {\r\n        if (typeof arg_list[i] !== 'number') {\r\n            throw new Error(fn_name + ': ' + arg_name + '[' + i + ']' + ' is not a number');\r\n        }\r\n    }\r\n    return;\r\n}\r\nfunction isIntArg(fn_name: string, arg_name: string, arg: any): void {\r\n    if (!Number.isInteger(arg)) {\r\n        throw new Error(fn_name + ': ' + arg_name + ' is not an integer');\r\n    }\r\n    return;\r\n}\r\nfunction isIntListArg(fn_name: string, arg_name: string, arg_list: any[]): void {\r\n    isListArg(fn_name, arg_name, arg_list, 'integers');\r\n    for (let i = 0; i < arg_list.length; i++) {\r\n        if (!Number.isInteger(arg_list[i])) {\r\n            throw new Error(fn_name + ': ' + arg_name + '[' + i + ']' + ' is not an integer');\r\n        }\r\n    }\r\n    return;\r\n}\r\n","import {XYPLANE, YZPLANE, ZXPLANE, YXPLANE, ZYPLANE, XZPLANE } from '@libs/geo-info/common';\r\n\r\nexport const XY = XYPLANE;\r\nexport const YZ = YZPLANE;\r\nexport const ZX = ZXPLANE;\r\n\r\nexport const YX = YXPLANE;\r\nexport const ZY = ZYPLANE;\r\nexport const XZ = XZPLANE;\r\n","export function radToDeg(rad: number): number {\r\n    return rad * (180 / Math.PI);\r\n}\r\nexport function degToRad(deg: number): number {\r\n    return deg * (Math.PI / 180);\r\n}\r\n","/**\r\n * list functions that obtain and return information from an input list. Does not modify input list.\r\n */\r\n\r\nexport function range(start: number, end: number, step?: number): number[] {\r\n    if (start === undefined) { throw new Error('Invalid inline arg: min must be defined.'); }\r\n    if (end === undefined) { throw new Error('Invalid inline arg: max must be defined.'); }\r\n    const len: number = end - start;\r\n    if (len <= 0) {return []; }\r\n    if (step === undefined) { step = 1; }\r\n    const list: number[] = [];\r\n    let current: number = start;\r\n    while (current < end) {\r\n        list.push(current);\r\n        current += step;\r\n    }\r\n    return list;\r\n}\r\n\r\nexport function isList(list: any): boolean {\r\n    return Array.isArray(list);\r\n}\r\n\r\nexport function listLen(list: any[]): number {\r\n    return list.length;\r\n}\r\n\r\nexport function listCount(list: any[], val: any): number {\r\n    let count = 0;\r\n    for (let i = 0; i < list.length; i++) {\r\n        if (list[i] === val) {\r\n            count += 1;\r\n        }\r\n    }\r\n    return count;\r\n}\r\n\r\nexport function listCopy(list: any[]): any[] {\r\n    return list.slice();\r\n}\r\n\r\nexport function listLast(list: any[]): number {\r\n    return list[list.length - 1];\r\n}\r\n\r\nexport function listGet(list: any[], index: number|number[]): any|any[] {\r\n    if (Array.isArray(index)) { return index.map( i => listGet(list, i)) as any[]; }\r\n    if (index < 0) { index = list.length + index; }\r\n    return list[index] as any;\r\n}\r\n\r\nexport function listFind(list: any[], val: any): number {\r\n    return list.indexOf(val);\r\n}\r\n\r\nexport function listHas(list: any[], val: any): boolean {\r\n    for (let i = list.length - 1; i >= 0; i--) {\r\n        if (list[i] === val) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\n\r\nexport function listJoin(list1: any[], list2: any[]): any[] {\r\n    if (!Array.isArray(list1)) { list1 = [list1]; }\r\n    if (!Array.isArray(list2)) { list2 = [list2]; }\r\n    return list1.concat(list2);\r\n}\r\n\r\nexport function listFlat(list: any[], depth?: number): any[] {\r\n    const list_copy = list.slice();\r\n    // @ts-ignore\r\n    return list_copy.flat(depth);\r\n}\r\n\r\nexport function listSlice(list: any[], start: number, end?: number): any[] {\r\n    return list.slice(start, end);\r\n}\r\n\r\nexport function listZip(lists: any[][]): any[] {\r\n    const shortest = lists.length === 0 ? [] : lists.reduce((a, b) => {\r\n        return a.length < b.length ? a : b;\r\n    });\r\n    return shortest.map((_, i) => lists.map(array => array[i] ));\r\n}\r\n\r\nexport function listZip2(lists: any[][]): any[] {\r\n    const longest = lists.length === 0 ? [] : lists.reduce((a, b) => {\r\n        return a.length > b.length ? a : b;\r\n    });\r\n    return longest.map((_, i) => lists.map(array => array[i] ));\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// =============================== DEPRECATED\r\n\r\nexport function shuffle(list: any[]): any[] {\r\n    console.log('WARNING: This function has been deprecated. Please use the list.Sort() function, and select random.');\r\n    const new_list: any[] = list.slice();\r\n    new_list.sort(() => .5 - Math.random());\r\n    return new_list;\r\n}\r\n\r\nexport function zip(lists: any[][]): any[] {\r\n    console.log('WARNING: This function has been deprecated. Please use the inline listZip() function.');\r\n    return listZip(lists);\r\n}\r\n\r\nexport function zip2(lists: any[][]): any[] {\r\n    console.log('WARNING: This function has been deprecated. Please use the inline listZip2() function.');\r\n    return listZip2(lists);\r\n}\r\n\r\nexport function length(list: any[]): number {\r\n    if (list === undefined) { throw new Error('Invalid inline arg: list must be defined.'); }\r\n    return list.length;\r\n}\r\n","import * as Mathjs from 'mathjs';\r\n\r\nexport const boolean = Mathjs.boolean;\r\nexport const number = Mathjs.number;\r\nexport const string = Mathjs.string;\r\nexport const mad = Mathjs.mad;\r\nexport const mean = Mathjs.mean;\r\nexport const median = Mathjs.median;\r\nexport const mode = Mathjs.mode;\r\nexport const prod = Mathjs.prod;\r\nexport const std = Mathjs.std;\r\nexport const vari = Mathjs.var;\r\nexport const sum = Mathjs.sum;\r\nexport const hypot = Mathjs.hypot;\r\nexport const norm = Mathjs.norm;\r\nexport const mod = Mathjs.mod;\r\nexport const square = Mathjs.square;\r\nexport const cube = Mathjs.cube;\r\nexport const distance = Mathjs.distance;\r\nexport const random = Mathjs.random;\r\nexport const randomInt = Mathjs.randomInt;\r\nexport const pickRandom = Mathjs.pickRandom;\r\n","import { GIModel } from '@libs/geo-info/GIModel';\r\nimport { EAttribDataTypeStrs, TAttribDataTypes, EAttribNames, EEntType, TId, TEntTypeIdx, EEntTypeStr } from '@libs/geo-info/common';\r\nimport { getArrDepth, idsBreak } from '@libs/geo-info/id';\r\nimport { checkIDs, checkCommTypes, checkAttribNameValue, TypeCheckObj, IDcheckObj } from './_check_args';\r\n\r\n//  ===============================================================================================\r\n//  Functions used by Mobius\r\n//  ===============================================================================================\r\n/**\r\n * Creates a new empty model.\r\n *\r\n * @returns New model empty.\r\n */\r\nexport function __new__(): GIModel {\r\n    const model: GIModel = new GIModel();\r\n    model.attribs.add.addAttrib(EEntType.POSI, EAttribNames.COORDS, EAttribDataTypeStrs.FLOAT, 3);\r\n    return model;\r\n}\r\n//  ===============================================================================================\r\n/**\r\n * A function to preprocess the model, before it enters the node.\r\n * In cases where there is more than one model connected to a node,\r\n * the preprocess function will be called before the merge function.\r\n *\r\n * @param model The model to preprocess.\r\n */\r\nexport function __preprocess__(__model__: GIModel): void {\r\n    // TODO\r\n}\r\n//  ===============================================================================================\r\n/**\r\n * A function to postprocess the model, after it enters the node.\r\n *\r\n * @param model The model to postprocess.\r\n */\r\nexport function __postprocess__(__model__: GIModel): void {\r\n    // TODO\r\n    // Remove all undefined values for the arrays\r\n}\r\n//  ===============================================================================================\r\n/**\r\n * Merges the second model into the first model. The geometry, attribues, and groups are all merged.\r\n * If the models contain contain groups with the same names, then the groups will be merged.\r\n *\r\n * @param model1 The model to merge into.\r\n * @param model2 The model to merge from    .\r\n */\r\nexport function __merge__(model1: GIModel, model2: GIModel): void {\r\n    model1.merge(model2);\r\n}\r\n//  ===============================================================================================\r\n/**\r\n * Returns a string representation of this model.\r\n * @param __model__\r\n */\r\nexport function __stringify__(__model__: GIModel): string {\r\n    return JSON.stringify(__model__.getData());\r\n}\r\n//  ===============================================================================================\r\nfunction _setAttrib(__model__: GIModel, ents_arr: TEntTypeIdx|TEntTypeIdx[],\r\n        attrib_name: string, attrib_values: TAttribDataTypes|TAttribDataTypes[], attrib_index?: number): void {\r\n    // check the ents_arr\r\n    if (ents_arr === null) {\r\n        const model_attrib_value: TAttribDataTypes = attrib_values as TAttribDataTypes;\r\n        if (attrib_index !== null && attrib_index !== undefined) {\r\n            __model__.attribs.add.setModelAttribIndexedValue(attrib_name, attrib_index, model_attrib_value as number|string);\r\n        } else {\r\n            __model__.attribs.add.setModelAttribValue(attrib_name, model_attrib_value);\r\n        }\r\n        return;\r\n    } else if (ents_arr.length === 0) {\r\n        return;\r\n    } else if (getArrDepth(ents_arr) === 1) {\r\n        ents_arr = [ents_arr] as TEntTypeIdx[];\r\n    }\r\n    // check attrib_values\r\n    const attrib_values_depth: number = getArrDepth(attrib_values);\r\n    if (attrib_values_depth === 2) {\r\n        // attrib values is a list of lists\r\n        const attrib_values_arrs: TAttribDataTypes[] = attrib_values as TAttribDataTypes[];\r\n        if (ents_arr.length !== attrib_values_arrs.length) {\r\n            throw new Error('If multiple values are given, then the number of values must be equal to the number of entities.');\r\n        }\r\n        for (let i = 0; i < ents_arr.length; i++) {\r\n            _setAttrib(__model__, ents_arr[i] as TEntTypeIdx, attrib_name, attrib_values_arrs[i], attrib_index);\r\n        }\r\n        return;\r\n    } else if (attrib_values_depth === 1) {\r\n        // check if ents_arr.length equals attrib_values.length\r\n        // if true, then maybe we are trying to set each ent to each value\r\n        const attrib_values_arr: number[]|string[] = attrib_values as number[]|string[];\r\n        if (ents_arr.length === attrib_values_arr.length) {\r\n            const first_ent_type: number = ents_arr[0][0];\r\n            if (__model__.attribs.query.hasAttrib(first_ent_type, attrib_name)) {\r\n                // if (__model__.attribs.query.getAttribDataSize(first_ent_type, attrib_name) === 1) {\r\n                    // we can assume that we are trying to set each ent to each value\r\n                    // we could also check that all ents are of same type but that seems unecessary\r\n                    for (let i = 0; i < ents_arr.length; i++) {\r\n                        _setAttrib(__model__, ents_arr[i] as TEntTypeIdx, attrib_name, attrib_values_arr[i], attrib_index);\r\n                    }\r\n                    return;\r\n                //  }\r\n            }\r\n        }\r\n    }\r\n    // set the attribute value\r\n    const attrib_value: TAttribDataTypes = attrib_values as TAttribDataTypes;\r\n    // --- Error Check ---\r\n    const fn_name = ents_arr + '.Inline.__setAttrib__' + '[\\'' + attrib_name + '\\']';\r\n    checkAttribNameValue(fn_name , attrib_name, attrib_value, attrib_index);\r\n    // --- Error Check ---\r\n    for (const ent_arr of ents_arr) {\r\n        const [ent_type, ent_i]: TEntTypeIdx = ent_arr as TEntTypeIdx;\r\n        if (attrib_index !== null && attrib_index !== undefined) {\r\n            __model__.attribs.add.setAttribIndexedValue(ent_type, ent_i, attrib_name, attrib_index, attrib_value as number|string);\r\n        } else {\r\n            __model__.attribs.add.setAttribValue(ent_type, ent_i, attrib_name, attrib_value);\r\n        }\r\n    }\r\n    // console.log(__model__);\r\n}\r\n/**\r\n * Sets an attribute value in the model.\r\n * @param __model__\r\n */\r\nexport function __setAttrib__(__model__: GIModel, entities: TId|TId[],\r\n                              attrib_name: string, attrib_values: TAttribDataTypes|TAttribDataTypes[], attrib_index?: number): void {\r\n    // --- Error Check ---\r\n    const fn_name = entities + '.Inline.__setAttrib__' + '[\\'' + attrib_name + '\\']';\r\n    let ents_arr: TEntTypeIdx|TEntTypeIdx[] = null;\r\n    if (entities !== null && entities !== undefined) {\r\n        ents_arr = checkIDs(fn_name, 'entities', entities, [IDcheckObj.isID, IDcheckObj.isIDList], null) as TEntTypeIdx|TEntTypeIdx[];\r\n    }\r\n    // checkAttribNameValue(fn_name , attrib_name, attrib_value, attrib_index);\r\n    // --- Error Check ---\r\n    _setAttrib(__model__, ents_arr, attrib_name, attrib_values, attrib_index);\r\n}\r\n//  ===============================================================================================\r\nfunction _getAttrib(__model__: GIModel, ents_arr: TEntTypeIdx|TEntTypeIdx[],\r\n        attrib_name: string, attrib_index?: number): TAttribDataTypes|TAttribDataTypes[] {\r\n    const has_index: boolean = attrib_index !== null && attrib_index !== undefined;\r\n    if (ents_arr === null) {\r\n        if (has_index) {\r\n            return __model__.attribs.query.getModelAttribIndexedValue(attrib_name, attrib_index);\r\n        } else {\r\n            return __model__.attribs.query.getModelAttribValue(attrib_name);\r\n        }\r\n    } else if (ents_arr.length === 0) {\r\n        return;\r\n    } else if (getArrDepth(ents_arr) === 1) {\r\n        const [ent_type, ent_i]: TEntTypeIdx = ents_arr as TEntTypeIdx;\r\n        if (attrib_name === 'id') {\r\n            if (has_index) { throw new Error('The \"id\" attribute does have an index.'); }\r\n            return EEntTypeStr[ent_type] + ent_i as TAttribDataTypes;\r\n        } else if (has_index) {\r\n            return __model__.attribs.query.getAttribIndexedValue(ent_type, attrib_name, ent_i, attrib_index);\r\n        } else {\r\n            return __model__.attribs.query.getAttribValue(ent_type, attrib_name, ent_i);\r\n        }\r\n    } else {\r\n        return (ents_arr as TEntTypeIdx[]).map( ent_arr =>\r\n            _getAttrib(__model__, ent_arr, attrib_name, attrib_index) ) as TAttribDataTypes[];\r\n    }\r\n}\r\n/**\r\n * Gets an attribute value from the model.\r\n * @param __model__\r\n */\r\nexport function __getAttrib__(__model__: GIModel, entities: TId|TId[],\r\n        attrib_name: string, attrib_index?: number): TAttribDataTypes|TAttribDataTypes[] {\r\n    // --- Error Check ---\r\n    const fn_name = 'Inline.__getAttrib__';\r\n    let ents_arr: TEntTypeIdx|TEntTypeIdx[] = null;\r\n    if (entities !== null && entities !== undefined) {\r\n        ents_arr = checkIDs(fn_name, 'entities', entities, [IDcheckObj.isID, IDcheckObj.isIDList], null) as TEntTypeIdx|TEntTypeIdx[];\r\n    }\r\n    checkCommTypes(fn_name, 'attrib_name', attrib_name, [TypeCheckObj.isString]);\r\n    if (attrib_index !== null && attrib_index !== undefined) {\r\n        checkCommTypes(fn_name, 'attrib_index', attrib_index, [TypeCheckObj.isNumber]);\r\n    }\r\n    // --- Error Check ---\r\n    return _getAttrib(__model__, ents_arr, attrib_name, attrib_index);\r\n}\r\n//  ===============================================================================================\r\nfunction _flatten(arrs: string|string[]|string[][]): [string[], number[][]] {\r\n    const arr_flat: string[] = [];\r\n    const arr_indices: number[][] = [];\r\n    let count = 0;\r\n    for (const item of arrs) {\r\n        if (Array.isArray(item)) {\r\n            const [arr_flat2, arr_indices2] = _flatten(item);\r\n            for (let i = 0; i < arr_flat2.length; i++) {\r\n                arr_flat.push(arr_flat2[i]);\r\n                arr_indices2[i].unshift(count);\r\n                arr_indices.push(arr_indices2[i]);\r\n            }\r\n        } else {\r\n            arr_flat.push(item);\r\n            arr_indices.push([count]);\r\n        }\r\n        count += 1;\r\n    }\r\n    return [arr_flat, arr_indices];\r\n}\r\n/**\r\n * Select entities in the model.\r\n * @param __model__\r\n */\r\nexport function __select__(__model__: GIModel, ents_id: string|string[]|string[][], var_name: string): void {\r\n    __model__.geom.selected = [];\r\n    ents_id = ((Array.isArray(ents_id)) ? ents_id : [ents_id]) as string[];\r\n    const [ents_id_flat, ents_indices] = _flatten(ents_id);\r\n    const ents_arr: TEntTypeIdx[] = idsBreak(ents_id_flat) as TEntTypeIdx[];\r\n    for (let i = 0; i < ents_arr.length; i++) {\r\n        const ent_arr: TEntTypeIdx = ents_arr[i];\r\n        const ent_indices: number[] = ents_indices[i];\r\n        const attrib_name: string = '_' + var_name;\r\n        const attrib_value: string = var_name + '[' + ent_indices.join('][') + ']';\r\n        __model__.geom.selected.push(ent_arr);\r\n        if (!__model__.attribs.query.hasAttrib(ent_arr[0], attrib_name)) {\r\n            __model__.attribs.add.addAttrib(ent_arr[0], attrib_name, EAttribDataTypeStrs.STRING, 1);\r\n        }\r\n        __model__.attribs.add.setAttribValue(ent_arr[0], ent_arr[1], attrib_name, attrib_value);\r\n    }\r\n}\r\n//  ===============================================================================================\r\n/**\r\n * Checks the model for internal consistency.\r\n * @param __model__\r\n */\r\nexport function __checkModel__(__model__: GIModel): string[] {\r\n    return __model__.check();\r\n}\r\n","import { GIModel } from '@libs/geo-info/GIModel';\r\n\r\n/**\r\n* Return certain value from the model for the flowchart's end node\r\n * @summary Return a specific value\r\n * @param {any[]} __model__  Model of the node.\r\n * @param {number} value  Index of the value to be returned.\r\n * @returns {any} Value\r\n */\r\nexport function Return(__model__: GIModel, value: any): any {\r\n    return value;\r\n}\r\n","import {__new__, __merge__} from './_model';\r\n\r\nexport const _parameterTypes = {\r\n    constList: '__constList__',\r\n    model: '__model__',\r\n    input: '__input__',\r\n\r\n    new: '_model.__new__',\r\n    newFn: __new__,\r\n\r\n    merge: '_model.__merge__',\r\n    mergeFn: __merge__,\r\n\r\n    addData: '_model.addGiData',\r\n\r\n    preprocess: '_model.__preprocess__',\r\n    postprocess: '_model.__postprocess__',\r\n\r\n    setattrib: '_model.__setAttrib__',\r\n    getattrib: '_model.__getAttrib__',\r\n\r\n    select: '_model.__select__',\r\n\r\n    return: '_Output.Return'\r\n};\r\n\r\nexport const _varString = `\r\nPI = Math.PI;\r\nXY = __modules__._constants.XY;\r\nYZ = __modules__._constants.YZ;\r\nZX = __modules__._constants.ZX;\r\nYX = __modules__._constants.YX;\r\nZY = __modules__._constants.ZY;\r\nXZ = __modules__._constants.XZ;\r\nmin = Math.min;\r\nmax = Math.max;\r\npow = Math.pow;\r\nsqrt = Math.sqrt;\r\nexp = Math.exp;\r\nlog = Math.log;\r\nround = Math.round;\r\nceil = Math.ceil;\r\nfloor = Math.floor;\r\nabs = Math.abs;\r\nsin = Math.sin;\r\nasin = Math.asin;\r\nsinh = Math.sinh;\r\nasinh = Math.asinh;\r\ncos = Math.cos;\r\nacos = Math.acos;\r\ncosh = Math.cosh;\r\nacosh = Math.acosh;\r\ntan = Math.tan;\r\natan = Math.atan;\r\ntanh = Math.tanh;\r\natanh = Math.atanh;\r\natan2 = Math.atan2;\r\nboolean = __modules__._mathjs.boolean;\r\nnumber = __modules__._mathjs.number;\r\nstring = __modules__._mathjs.string;\r\nmad = __modules__._mathjs.mad;\r\nmean = __modules__._mathjs.mean;\r\nmedian = __modules__._mathjs.median;\r\nmode = __modules__._mathjs.mode;\r\nprod = __modules__._mathjs.prod;\r\nstd = __modules__._mathjs.std;\r\nvari = __modules__._mathjs.var;\r\nsum = __modules__._mathjs.sum;\r\nhypot = __modules__._mathjs.hypot;\r\nnorm = __modules__._mathjs.norm;\r\nmod = __modules__._mathjs.mod;\r\nsquare = __modules__._mathjs.square;\r\ncube = __modules__._mathjs.cube;\r\ndistance = __modules__._mathjs.distance;\r\nrange = __modules__._list.range;\r\nisList = __modules__._list.isList;\r\nlistLen = __modules__._list.listLen;\r\nlistCount = __modules__._list.listCount;\r\nlistCopy = __modules__._list.listCopy;\r\nlistLast = __modules__._list.listLast;\r\nlistGet = __modules__._list.listGet;\r\nlistFind = __modules__._list.listFind;\r\nlistHas = __modules__._list.listHas;\r\nlistJoin = __modules__._list.listJoin;\r\nlistFlat = __modules__._list.listFlat;\r\nlistSlice = __modules__._list.listSlice;\r\nlistZip = __modules__._list.listZip;\r\nlistZip2 = __modules__._list.listZip2;\r\nsetMake = __modules__._set.setMake;\r\nsetUni = __modules__._set.setUni;\r\nsetInt = __modules__._set.setInt;\r\nsetDif = __modules__._set.setDif;\r\nlength = __modules__._list.length;\r\nshuffle = __modules__._list.shuffle;\r\nconcat = __modules__._list.concat;\r\nzip = __modules__._list.zip;\r\nzip2 = __modules__._list.zip2;\r\nvecAdd = __modules__._vec.vecAdd;\r\nvecSub = __modules__._vec.vecSub;\r\nvecDiv = __modules__._vec.vecDiv;\r\nvecMult = __modules__._vec.vecMult;\r\nvecLen = __modules__._vec.vecLen;\r\nvecSetLen = __modules__._vec.vecSetLen;\r\nvecNorm = __modules__._vec.vecNorm;\r\nvecRev = __modules__._vec.vecRev;\r\nvecFromTo = __modules__._vec.vecFromTo;\r\nvecAng = __modules__._vec.vecAng;\r\nvecAng2 = __modules__._vec.vecAng2;\r\nvecDot = __modules__._vec.vecDot;\r\nvecCross = __modules__._vec.vecCross;\r\nvecEqual = __modules__._vec.vecEqual;\r\nradToDeg = __modules__._conversion.radToDeg;\r\ndegToRad = __modules__._conversion.degToRad;\r\nrand = __modules__._rand.rand;\r\nrandInt = __modules__._rand.randInt;\r\nrandPick = __modules__._rand.randPick;\r\n`;\r\n","import * as mathjs from 'mathjs';\r\n\r\nexport function rand(min: number, max: number): number {\r\n    return mathjs.random(min, max);\r\n}\r\nexport function randInt(min: number, max: number): number {\r\n    return mathjs.randomInt(min, max);\r\n}\r\nexport function randPick(list: any[], num: number): number {\r\n    return mathjs.pickRandom(list, num);\r\n}\r\n","/**\r\n * list functions that obtain and return information from an input list. Does not modify input list.\r\n */\r\n\r\nimport * as Mathjs from 'mathjs';\r\n\r\nexport function setMake(list: any[]): any[] {\r\n    return Array.from(new Set(list));\r\n}\r\n\r\nexport function setUni(list1: any[], list2: any[]): any[] {\r\n    return Mathjs.setUnion(list1, list2);\r\n}\r\n\r\nexport function setInt(list1: any[], list2: any[]): any[] {\r\n    return Mathjs.setIntersect(list1, list2);\r\n}\r\n\r\nexport function setDif(list1: any[], list2: any[]): any[] {\r\n    return Mathjs.setDifference(list1, list2);\r\n}\r\n","import * as vec from '@libs/geom/vectors';\r\n\r\nexport const vecAdd = vec.vecAdd;\r\nexport const vecSub = vec.vecSub;\r\nexport const vecDiv = vec.vecDiv;\r\nexport const vecMult = vec.vecMult;\r\nexport const vecLen = vec.vecLen;\r\nexport const vecSetLen = vec.vecSetLen;\r\nexport const vecNorm = vec.vecNorm;\r\nexport const vecRev = vec.vecRev;\r\nexport const vecFromTo = vec.vecFromTo;\r\nexport const vecAng = vec.vecAng;\r\nexport const vecAng2 = vec.vecAng2;\r\nexport const vecDot = vec.vecDot;\r\nexport const vecCross = vec.vecCross;\r\nexport const vecEqual = vec.vecEqual;\r\n","/**\r\n * The `calc` module has functions for performing various types of calculations with entities in the model.\r\n * These functions neither make nor modify anything in the model.\r\n * These functions all return either numbers or lists of numbers.\r\n */\r\n\r\n/**\r\n *\r\n */\r\n\r\nimport { GIModel } from '@libs/geo-info/GIModel';\r\nimport { TId, Txyz, EEntType, TEntTypeIdx } from '@libs/geo-info/common';\r\nimport { isPline, isWire, isEdge, isPgon, isFace, idsBreak, getArrDepth, isVert, isPosi, isPoint } from '@libs/geo-info/id';\r\nimport { distance } from '@libs/geom/distance';\r\nimport { _MatMenuItemMixinBase } from '@angular/material/menu/typings/menu-item';\r\nimport { vecSum, vecDiv, vecAdd, vecSub, vecCross, vecMult, vecFromTo, vecLen } from '@libs/geom/vectors';\r\nimport { triangulate } from '@libs/triangulate/triangulate';\r\nimport { normal, area } from '@libs/geom/triangle';\r\nimport { checkIDs, checkCommTypes, checkIDnTypes, IDcheckObj, TypeCheckObj} from './_check_args';\r\n\r\n// ================================================================================================\r\nexport enum _EDistanceMethod {\r\n    P_P_DISTANCE = 'p_to_p_distance',\r\n    MIN_DISTANCE = 'min_distance'\r\n}\r\nfunction _distanceMin(__model__: GIModel, ent_arr1: TEntTypeIdx, ents_arr2: TEntTypeIdx|TEntTypeIdx[]): number|number[] {\r\n    const depth2: number = getArrDepth(ents_arr2);\r\n    if (depth2 === 1) {\r\n        throw Error('Not implemented');\r\n    } else if (depth2 === 2) {\r\n        return (ents_arr2 as TEntTypeIdx[]).map( ent_arr2 => _distanceMin(__model__, ent_arr1, ent_arr2) ) as number[];\r\n    }\r\n}\r\nfunction _distancePtoP(__model__: GIModel, ent_arr1: TEntTypeIdx, ents_arr2: TEntTypeIdx|TEntTypeIdx[]): number|number[] {\r\n    const depth2: number = getArrDepth(ents_arr2);\r\n    if (depth2 === 1) {\r\n        const ent_arr2: TEntTypeIdx = ents_arr2 as TEntTypeIdx;\r\n        const ps1_xyz: Txyz = __model__.attribs.query.getPosiCoords(ent_arr1[1]);\r\n        const ps2_xyz: Txyz = __model__.attribs.query.getPosiCoords(ent_arr2[1]);\r\n        return distance(ps1_xyz, ps2_xyz) as number;\r\n    } else if (depth2 === 2) {\r\n        return (ents_arr2 as TEntTypeIdx[]).map( ent_arr2 => _distancePtoP(__model__, ent_arr1, ent_arr2) ) as number[];\r\n    }\r\n}\r\n/**\r\n * Calculates the distance between two positions.\r\n * @param __model__\r\n * @param position1 First position.\r\n * @param position2 Second position, or list of positions.\r\n * @param method Enum; distance or min_distance.\r\n * @returns Distance, or list of distances (if position2 is a list).\r\n * @example distance1 = calc.Distance (position1, position2, p_to_p_distance)\r\n * @example_info position1 = [0,0,0], position2 = [[0,0,10],[0,0,20]], Expected value of distance is [10,20].\r\n */\r\nexport function Distance(__model__: GIModel, position1: TId, position2: TId|TId[], method: _EDistanceMethod): number|number[] {\r\n    // --- Error Check ---\r\n    const fn_name = 'calc.Distance';\r\n    const ents_arr1 = checkIDs(fn_name, 'position1', position1, [IDcheckObj.isID], [EEntType.POSI])  as TEntTypeIdx;\r\n    const ents_arr2 = checkIDs(fn_name, 'position2', position2, [IDcheckObj.isID], [EEntType.POSI]) as TEntTypeIdx|TEntTypeIdx[]; // TODO\r\n    // --- Error Check ---\r\n    if (method === _EDistanceMethod.P_P_DISTANCE) {\r\n        return _distancePtoP(__model__, ents_arr1, ents_arr2);\r\n    } else if (method === _EDistanceMethod.MIN_DISTANCE) {\r\n        return _distanceMin(__model__, ents_arr1, ents_arr2);\r\n    }\r\n}\r\n// ================================================================================================\r\n\r\n\r\n/**\r\n * Calculates the length of a line or a list of lines.\r\n * @param __model__\r\n * @param lines Edge, wire or polyline.\r\n * @returns Length.\r\n * @example length1 = calc.Length (line1)\r\n */\r\nexport function Length(__model__: GIModel, lines: TId|TId[]): number {\r\n    // --- Error Check ---\r\n    checkIDs('calc.Length', 'lines', lines, [IDcheckObj.isID, IDcheckObj.isIDList], [EEntType.EDGE, EEntType.WIRE, EEntType.PLINE]);\r\n    // --- Error Check ---\r\n    if (!Array.isArray(lines)) {\r\n        lines = [lines] as TId[];\r\n    }\r\n    const edges_i: number[] = [];\r\n    let dist = 0;\r\n    for (const line of lines) {\r\n        const [ent_type, index]: [EEntType, number] = idsBreak(line) as TEntTypeIdx;\r\n        if (isEdge(ent_type)) {\r\n            edges_i.push(index);\r\n        } else if (isWire(ent_type)) {\r\n            edges_i.push(...__model__.geom.query.navWireToEdge(index));\r\n        } else if (isPline(ent_type)) {\r\n            const wire_i: number = __model__.geom.query.navPlineToWire(index);\r\n            edges_i.push(...__model__.geom.query.navWireToEdge(wire_i));\r\n        } else {\r\n            throw new Error('Entity is of wrong type. Must be a an edge, a wire or a polyline');\r\n        }\r\n    }\r\n    for (const edge_i of edges_i) {\r\n        const posis_i: number[] = __model__.geom.query.navAnyToPosi(EEntType.EDGE, edge_i);\r\n        const xyz_0: Txyz = __model__.attribs.query.getPosiCoords(posis_i[0]);\r\n        const xyz_1: Txyz = __model__.attribs.query.getPosiCoords(posis_i[1]);\r\n        dist += distance(xyz_0, xyz_1);\r\n    }\r\n    return dist;\r\n}\r\n// ================================================================================================\r\nfunction _area(__model__: GIModel, ents_arrs: TEntTypeIdx|TEntTypeIdx[]): number|number[] {\r\n    if (getArrDepth(ents_arrs) === 1) {\r\n        const [ent_type, index]: [EEntType, number] = ents_arrs as TEntTypeIdx;\r\n        if (isPgon(ent_type) || isFace(ent_type)) {\r\n            // faces, these are already triangulated\r\n            let face_i: number = index;\r\n            if (isPgon(ent_type)) {\r\n                face_i = __model__.geom.query.navPgonToFace(index);\r\n            }\r\n            const tris_i: number[] = __model__.geom.query.navFaceToTri(face_i);\r\n            let total_area = 0;\r\n            for (const tri_i of tris_i) {\r\n                const corners_i: number[] = __model__.geom.query.navAnyToPosi(EEntType.TRI, tri_i);\r\n                const corners_xyzs: Txyz[] = corners_i.map(corner_i => __model__.attribs.query.getPosiCoords(corner_i));\r\n                const tri_area: number = area( corners_xyzs[0], corners_xyzs[1], corners_xyzs[2]);\r\n                total_area += tri_area;\r\n            }\r\n            return total_area;\r\n        } else if (isPline(ent_type) || isWire(ent_type)) {\r\n            // wires, these need to be triangulated\r\n            let wire_i: number = index;\r\n            if (isPline(ent_type)) {\r\n                wire_i = __model__.geom.query.navPlineToWire(index);\r\n            }\r\n            if (__model__.geom.query.istWireClosed(wire_i)) {\r\n                throw new Error('To calculate area, wire must be closed');\r\n            }\r\n            const posis_i: number[] = __model__.geom.query.navAnyToPosi(EEntType.WIRE, index);\r\n            const xyzs:  Txyz[] = posis_i.map( posi_i => __model__.attribs.query.getPosiCoords(posi_i) );\r\n            const tris: number[][] = triangulate(xyzs);\r\n            let total_area = 0;\r\n            for (const tri of tris) {\r\n                const corners_xyzs: Txyz[] = tri.map(corner_i => xyzs[corner_i]);\r\n                const tri_area: number = area( corners_xyzs[0], corners_xyzs[1], corners_xyzs[2] );\r\n                total_area += tri_area;\r\n            }\r\n            return total_area;\r\n        } else {\r\n            return 0;\r\n        }\r\n    } else {\r\n        return (ents_arrs as TEntTypeIdx[]).map( ents_arr => _area(__model__, ents_arr) ) as number[];\r\n    }\r\n}\r\n/**\r\n * Calculates the area of a surface or a list of surfaces.\r\n * @param __model__\r\n * @param entities A polygon, a face, a closed polyline, or a closed wire.\r\n * @returns Area.\r\n * @example area1 = calc.Area (surface1)\r\n */\r\nexport function Area(__model__: GIModel, entities: TId): number|number[] {\r\n    // --- Error Check ---\r\n    const fn_name = 'calc.Area';\r\n    const ents_arr = checkIDs(fn_name, 'entities', entities,\r\n        [IDcheckObj.isID, IDcheckObj.isIDList], [EEntType.PGON, EEntType.FACE, EEntType.PLINE, EEntType.WIRE]) as TEntTypeIdx|TEntTypeIdx[];\r\n    // --- Error Check ---\r\n    return _area(__model__, ents_arr);\r\n}\r\n// ================================================================================================\r\n/**\r\n * Returns a vector along an edge.\r\n * @param __model__\r\n * @param edge An edge\r\n * @returns The vector [x, y, z] from the start point of an edge to the end point of an edge.\r\n */\r\nexport function Vector(__model__: GIModel, edge: TId): Txyz {\r\n    // --- Error Check ---\r\n    checkIDs('calc.Vector', 'edge', edge, [IDcheckObj.isID], [EEntType.EDGE]);\r\n    // --- Error Check ---\r\n    const [ent_type, index]: [EEntType, number] = idsBreak(edge) as TEntTypeIdx;\r\n    const posis_i: number[] = __model__.geom.query.navAnyToPosi(ent_type, index);\r\n    const start: Txyz = __model__.attribs.query.getPosiCoords(posis_i[0]);\r\n    const end: Txyz = __model__.attribs.query.getPosiCoords(posis_i[1]);\r\n    return vecSub(end, start);\r\n}\r\n// ================================================================================================\r\nfunction _centroid(__model__: GIModel, ents_arr: TEntTypeIdx[]): Txyz {\r\n    // TODO optimise this, like bounding box code\r\n    const posis_i: number[] = [];\r\n    for (const ent_arr of ents_arr) {\r\n        posis_i.push(...__model__.geom.query.navAnyToPosi(ent_arr[0], ent_arr[1]));\r\n    }\r\n    const unique_posis_i = Array.from(new Set(posis_i));\r\n    const unique_xyzs: Txyz[] = unique_posis_i.map( posi_i => __model__.attribs.query.getPosiCoords(posi_i));\r\n    return vecDiv(vecSum(unique_xyzs), unique_xyzs.length);\r\n}\r\n/**\r\n * Calculates the centroid of a list of any entity.\r\n * @param __model__\r\n * @param entities List of positions, vertices, points, edges, wires, polylines, faces, polygons, or collections.\r\n * @returns The centroid [x, y, z] of the entities. (No position is created in the model.)\r\n * @example centroid1 = calc.Centroid (polygon1)\r\n */\r\nexport function Centroid(__model__: GIModel, entities: TId|TId[]): Txyz {\r\n    if (!Array.isArray(entities)) { entities = [entities]; }\r\n    const ents_arr: TEntTypeIdx[] = idsBreak(entities) as TEntTypeIdx[];\r\n    // --- Error Check ---\r\n    checkIDs('calc.Centroid', 'geometry', entities, [IDcheckObj.isID, IDcheckObj.isIDList],\r\n            [EEntType.POSI, EEntType.VERT, EEntType.POINT, EEntType.EDGE, EEntType.WIRE,\r\n            EEntType.PLINE, EEntType.FACE, EEntType.PGON, EEntType.COLL]);\r\n    // --- Error Check ---\r\n    return _centroid(__model__, ents_arr);\r\n}\r\n// ================================================================================================\r\nfunction _vertNormal(__model__: GIModel, index: number) {\r\n    let norm_vec: Txyz;\r\n    const edges_i: number[] = __model__.geom.query.navVertToEdge(index);\r\n    if (edges_i.length === 1) {\r\n        const posis0_i: number[] = __model__.geom.query.navAnyToPosi(EEntType.EDGE, edges_i[0]);\r\n        const posis1_i: number[] = __model__.geom.query.navAnyToPosi(EEntType.EDGE, edges_i[1]);\r\n        const p_mid: Txyz = __model__.attribs.query.getPosiCoords(posis0_i[1]); // same as posis1_i[0]\r\n        const p_a: Txyz = __model__.attribs.query.getPosiCoords(posis0_i[0]);\r\n        const p_b: Txyz = __model__.attribs.query.getPosiCoords(posis1_i[1]);\r\n        norm_vec = vecCross( vecFromTo(p_mid, p_a), vecFromTo(p_mid, p_b), true);\r\n        if (vecLen(norm_vec) > 0) { return norm_vec; }\r\n    }\r\n    const wire_i: number = __model__.geom.query.navEdgeToWire(edges_i[0]);\r\n    norm_vec = __model__.geom.query.getWireNormal(wire_i);\r\n    return norm_vec;\r\n}\r\nexport function _normal(__model__: GIModel, ents_arr: TEntTypeIdx|TEntTypeIdx[], scale: number): Txyz|Txyz[] {\r\n    if (getArrDepth(ents_arr) === 1) {\r\n        const ent_type: EEntType = (ents_arr as TEntTypeIdx)[0];\r\n        const index: number = (ents_arr as TEntTypeIdx)[1];\r\n        if (isPgon(ent_type)) {\r\n            const norm_vec: Txyz = __model__.geom.query.getFaceNormal(__model__.geom.query.navPgonToFace(index));\r\n            return vecMult(norm_vec, scale);\r\n        } else if (isFace(ent_type)) {\r\n            const norm_vec: Txyz = __model__.geom.query.getFaceNormal(index);\r\n            return vecMult(norm_vec, scale);\r\n        } else if (isPline(ent_type)) {\r\n            const norm_vec: Txyz = __model__.geom.query.getWireNormal(__model__.geom.query.navPlineToWire(index));\r\n            return vecMult(norm_vec, scale);\r\n        } else if (isWire(ent_type)) {\r\n            const norm_vec: Txyz = __model__.geom.query.getWireNormal(index);\r\n            return vecMult(norm_vec, scale);\r\n        } else if (isEdge(ent_type)) {\r\n            const verts_i: number[] = __model__.geom.query.navEdgeToVert(index);\r\n            const norm_vecs: Txyz[] = verts_i.map( vert_i => _vertNormal(__model__, vert_i) );\r\n            const norm_vec: Txyz = vecDiv( vecSum(norm_vecs), norm_vecs.length);\r\n            return vecMult(norm_vec, scale);\r\n        } else if (isVert(ent_type)) {\r\n            const norm_vec: Txyz = _vertNormal(__model__, index);\r\n            return vecMult(norm_vec, scale);\r\n        } else if (isPosi(ent_type)) {\r\n            const verts_i: number[] = __model__.geom.query.navPosiToVert(index);\r\n            if (verts_i.length > 0) {\r\n                const norm_vecs: Txyz[] = verts_i.map( vert_i => _vertNormal(__model__, vert_i) );\r\n                const norm_vec: Txyz = vecDiv( vecSum(norm_vecs), norm_vecs.length);\r\n                return vecMult(norm_vec, scale);\r\n            }\r\n            return [0, 0, 0];\r\n        }  else if (isPoint(ent_type)) {\r\n            return [0, 0, 0];\r\n        }\r\n\r\n        // if (isPgon(ent_type) || isFace(ent_type)) {\r\n        //     // faces, these are already triangulated\r\n        //     let face_i: number = index;\r\n        //     if (isPgon(ent_type)) {\r\n        //         face_i = __model__.geom.query.navPgonToFace(index);\r\n        //     }\r\n        //     const tris_i: number[] = __model__.geom.query.navFaceToTri(face_i);\r\n        //     let normal_vec: Txyz = [0, 0, 0];\r\n        //     for (const tri_i of tris_i) {\r\n        //         const corners_i: number[] = __model__.geom.query.navAnyToPosi(EEntType.TRI, tri_i);\r\n        //         const corners_xyzs: Txyz[] = corners_i.map(corner_i => __model__.attribs.query.getPosiCoords(corner_i));\r\n        //         const tri_normal: Txyz = normal( corners_xyzs[2], corners_xyzs[1], corners_xyzs[0], true); // CCW\r\n        //         normal_vec = vecAdd(normal_vec, tri_normal);\r\n        //     }\r\n        //     return vecNorm(vecDiv(normal_vec, tris_i.length)); // TODO should this be area weighted?\r\n        // } else if (isPline(ent_type) || isWire(ent_type)) {\r\n        //     // wires, these need to be triangulated\r\n        //     let wire_i: number = index;\r\n        //     if (isPline(ent_type)) {\r\n        //         wire_i = __model__.geom.query.navPlineToWire(index);\r\n        //     }\r\n        //     if (!__model__.geom.query.istWireClosed(wire_i)) {\r\n        //         throw new Error('To calculate normals, wire must be closed');\r\n        //     }\r\n        //     const posis_i: number[] = __model__.geom.query.navAnyToPosi(EEntType.WIRE, index);\r\n        //     const xyzs:  Txyz[] = posis_i.map( posi_i => __model__.attribs.query.getPosiCoords(posi_i) );\r\n        //     const tris: number[][] = triangulate(xyzs);\r\n        //     let normal_vec: Txyz = [0, 0, 0];\r\n        //     for (const tri of tris) {\r\n        //         const corners_xyzs: Txyz[] = tri.map(corner_i => xyzs[corner_i]);\r\n        //         const tri_normal: Txyz = normal( corners_xyzs[2], corners_xyzs[1], corners_xyzs[0], true ); // CCW\r\n        //         normal_vec = vecAdd(normal_vec, tri_normal);\r\n        //     }\r\n        //     return vecNorm(vecDiv(normal_vec, tris.length)); // TODO should this be area weighted?\r\n        // }\r\n\r\n    } else {\r\n        return (ents_arr as TEntTypeIdx[]).map(ent_arr => _normal(__model__, ent_arr, scale)) as Txyz[];\r\n    }\r\n}\r\n// function _newell_normal(__model__: GIModel, ents_arr: TEntTypeIdx[]): Txyz {\r\n//     const posis_i: number[] = [];\r\n//     for (const ent_arr of ents_arr) {\r\n//         posis_i.push(...__model__.geom.query.navAnyToPosi(ent_arr[0], ent_arr[1]));\r\n//     }\r\n//     const unique_posis_i = Array.from(new Set(posis_i));\r\n//     const unique_xyzs: Txyz[] = unique_posis_i.map( posi_i => __model__.attribs.query.getPosiCoords(posi_i));\r\n//     return newellNorm(unique_xyzs);\r\n// }\r\n/**\r\n * Calculates the normal vector of an entity or list of entities.\r\n * ~\r\n * For polygons, faces, and face wires the normal is calculated by taking the average of all the normals of the face triangles.\r\n * For polylines and polyline wires, the normal is calculated by triangulating the positions, and then\r\n * taking the average of all the normals of the triangles.\r\n * For edges, the normal is calculated by takingthe avery of teh normals of the two vertices.\r\n * For vertices, the normal is calculated by creating a triangle out of the two adjacent edges,\r\n * and then calculating the normal of the triangle.\r\n * (If there is only one edge, or if the two adjacent edges are colinear, the the normal of the wire is returned.)\r\n * For positions, the normal is calculated by taking the average of the normals of all the vertices linked to the position.\r\n * For points and positions with no vertices, the normal is [0, 0, 0].\r\n *\r\n * @param __model__\r\n * @param entities An entity, or list of entities.\r\n * @param scale The scale factor for the normal vector. (This is equivalent to the length of the normal vector.)\r\n * @returns The normal vector [x, y, z].\r\n * @example normal1 = calc.Normal (polygon1, 1)\r\n * @example_info If the input is non-planar, the output vector will be an average of all normals vector of the polygon triangles.\r\n */\r\nexport function Normal(__model__: GIModel, entities: TId|TId[], scale: number): Txyz|Txyz[] {\r\n    const ents_arr = idsBreak(entities) as TEntTypeIdx|TEntTypeIdx[];\r\n    // --- Error Check ---\r\n    const fn_name = 'calc.Normal';\r\n    checkIDs(fn_name, 'entities', entities, [IDcheckObj.isID, IDcheckObj.isIDList], null);\r\n    // --- Error Check ---\r\n    return _normal(__model__, ents_arr, scale);\r\n}\r\n// ================================================================================================\r\n/**\r\n * Calculates the location on a linear entity, given a t parameter.\r\n * @param __model__\r\n * @param line Edge, wire, or polyline.\r\n * @param t_param A value between 0 to 1.\r\n * @returns The coordinates of the location, [x, y, z]. (No position is created in the model.)\r\n * @example coord1 = calc.ParamTToXyz (polyline1, 0.23)\r\n */\r\nexport function ParamTToXyz(__model__: GIModel, line: TId, t_param: number): Txyz|Txyz[] {\r\n    // --- Error Check ---\r\n    const fn_name = 'calc.ParamTToXyz';\r\n    checkIDs(fn_name, 'line', line, [IDcheckObj.isID], [EEntType.EDGE, EEntType.WIRE, EEntType.PLINE]);\r\n    checkCommTypes(fn_name, 't_param', t_param, [TypeCheckObj.isNumber]);\r\n    if (t_param < 0 || t_param > 1) {throw new Error(fn_name + ': ' + 't_param is not between 0 and 1'); }\r\n    // --- Error Check ---\r\n    const edges_i: number[] = [];\r\n    const [ent_type, index]: [EEntType, number] = idsBreak(line) as TEntTypeIdx;\r\n    if (isEdge(ent_type)) {\r\n        edges_i.push(index);\r\n    } else if (isWire(ent_type)) {\r\n        edges_i.push(...__model__.geom.query.navWireToEdge(index));\r\n    } else if (isPline(ent_type)) {\r\n        const wire_i: number = __model__.geom.query.navPlineToWire(index);\r\n        edges_i.push(...__model__.geom.query.navWireToEdge(wire_i));\r\n    }\r\n    // } else {\r\n    //     throw new Error('Entity is of wrong type. Must be a an edge, a wire or a polyline');\r\n    // }\r\n    const num_edges: number = edges_i.length;\r\n    // get all the edge lengths\r\n    let total_dist = 0;\r\n    const dists: number[] = [];\r\n    const xyz_pairs: Txyz[][] = [];\r\n    for (const edge_i of edges_i) {\r\n        const posis_i: number[] = __model__.geom.query.navAnyToPosi(EEntType.EDGE, edge_i);\r\n        const xyz_0: Txyz = __model__.attribs.query.getPosiCoords(posis_i[0]);\r\n        const xyz_1: Txyz = __model__.attribs.query.getPosiCoords(posis_i[1]);\r\n        const dist: number = distance(xyz_0, xyz_1);\r\n        total_dist += dist;\r\n        dists.push(total_dist);\r\n        xyz_pairs.push([xyz_0, xyz_1]);\r\n    }\r\n    // map the t_param\r\n    const t_param_mapped: number = t_param * total_dist;\r\n    // loop through and find the point\r\n    for (let i = 0; i < num_edges; i++) {\r\n        if (t_param_mapped < dists[i]) {\r\n            const xyz_pair: Txyz[] = xyz_pairs[i];\r\n            let dist_a = 0;\r\n            if (i > 0) { dist_a = dists[i - 1]; }\r\n            const dist_b = dists[i];\r\n            const edge_length = dist_b - dist_a;\r\n            const to_t = t_param_mapped - dist_a;\r\n            const vec_len = to_t / edge_length;\r\n            return vecAdd( xyz_pair[0], vecMult(vecSub(xyz_pair[1], xyz_pair[0]), vec_len) );\r\n        }\r\n    }\r\n    // t param must be 1 (or greater)\r\n    return xyz_pairs[num_edges - 1][1];\r\n}\r\n// ================================================================================================\r\n/**\r\n * Calculates the 't' parameter along a linear entity, given a location.\r\n * The 't' parameter varies between 0 and 1, where 0 indicates the start and 1 indicates the end.\r\n *\r\n * @param __model__\r\n * @param lines List of edges, wires, or polylines.\r\n * @param locations List of positions, vertices, points, or coordinates.\r\n * @return The 't' parameter vale, between 0 and 1.\r\n * @example coord1 = calc.ParamXyzToT (polyline1, [1,2,3])\r\n */\r\nexport function _ParamXyzToT(__model__: GIModel, lines: TId|TId[], locations: TId|TId[]|Txyz|Txyz[]): number|number[] {\r\n    // --- Error Check ---\r\n    // const fn_name = 'calc.ParamXyzToT';\r\n    // checkIDs(fn_name, 'lines', lines, [IDcheckObj.isID, IDcheckObj.isIDList], [EEntType.EDGE, EEntType.WIRE, EEntType.PLINE]);\r\n    // checkIDnTypes(fn_name, 'locations', locations,\r\n    //               [IDcheckObj.isID, IDcheckObj.isIDList, TypeCheckObj.isNumberList], [EEntType.POSI, EEntType.VERT, EEntType.POINT]);\r\n    // --- Error Check ---\r\n    throw new Error('Not implemented.'); return null;\r\n}\r\n// ================================================================================================\r\n","// functions used by mobius\r\n\r\n// import * as Model from './Model';\r\n// export {Model};\r\n\r\nimport * as _model from './_model';\r\nexport {_model};\r\n\r\n// import * as _model from './Model';\r\n// export {_model};\r\n\r\n// functions for end users\r\n\r\n\r\nimport * as query from './query';\r\nexport {query};\r\n\r\nimport * as make from './make';\r\nexport {make};\r\n\r\nimport * as modify from './modify';\r\nexport {modify};\r\n\r\n// import * as isect from './isect';\r\n// export {isect};\r\n\r\nimport * as calc from './calc';\r\nexport {calc};\r\n\r\nimport * as pattern from './pattern';\r\nexport {pattern};\r\n\r\nimport * as virtual from './virtual';\r\nexport {virtual};\r\n\r\nimport * as util from './util';\r\nexport {util};\r\n\r\nimport * as render from './render';\r\nexport {render};\r\n\r\nimport * as list from './list';\r\nexport {list};\r\n\r\n// helpers\r\n\r\nimport * as _mathjs from './_mathjs';\r\nexport {_mathjs};\r\n\r\nimport * as _rand from './_rand';\r\nexport {_rand};\r\n\r\nimport * as _vec from './_vec';\r\nexport {_vec};\r\n\r\nimport * as _list from './_list';\r\nexport {_list};\r\n\r\nimport * as _set from './_set';\r\nexport {_set};\r\n\r\nimport * as _conversion from './_conversion';\r\nexport {_conversion};\r\n\r\nimport * as _constants from './_constants';\r\nexport {_constants};\r\n\r\n// input, output ports\r\n\r\nimport * as _Output from './_output';\r\nexport {_Output};\r\n\r\nexport * from './_parameterTypes';\r\n","/**\r\n * The `list` module has functions for working with lists of items.\r\n * These functions have no direct link with the model, the are generic functions for manipulating lists.\r\n * The functions are often used when manipulating lists of IDs of entities in the model.\r\n * These functions neither make nor modify anything in the model.\r\n * In addition to these functions, there are also various inline functions available for working with lists.\r\n */\r\n\r\n/**\r\n *\r\n */\r\n\r\nimport { checkCommTypes, TypeCheckObj } from './_check_args';\r\nimport { idsBreak } from '@libs/geo-info/id';\r\nimport { TEntTypeIdx } from '@libs/geo-info/common';\r\n\r\n\r\n// ================================================================================================\r\nexport enum _EAddMethod {\r\n    TO_START = 'to_start',\r\n    TO_END = 'to_end',\r\n    SORTED_ALPHA = 'alpha_descending',\r\n    SORTED_REV_ALPHA = 'alpha_ascending',\r\n    SORTED_NUM = 'numeric_descending',\r\n    SORTED_REV_NUM = 'numeric_ascending',\r\n    SORTED_ID = 'ID_descending',\r\n    SORTED_REV_ID = 'ID_ascending'\r\n}\r\n/**\r\n * Adds an item to a list.\r\n * If item is a list, the entire list will be added as a single item.\r\n *\r\n * @param list List to add the item to.\r\n * @param item Item to add.\r\n * @param method Enum, select the method.\r\n * @returns void\r\n * @example append = list.Add(list, 4, 'at_end')\r\n * @example_info where list = [1,2,3]\r\n * Expected value of list is [1,2,3,4].\r\n */\r\nexport function Add(list: any[], item: any, method: _EAddMethod): void {\r\n    // --- Error Check ---\r\n    const fn_name = 'list.Add';\r\n    checkCommTypes(fn_name, 'list', list, [TypeCheckObj.isList]);\r\n    checkCommTypes(fn_name, 'value', item, [TypeCheckObj.isAny]);\r\n    // --- Error Check ---\r\n    let str_value: string;\r\n    switch (method) {\r\n        case _EAddMethod.TO_START:\r\n            list.unshift(item);\r\n            break;\r\n        case _EAddMethod.TO_END:\r\n            list.push(item);\r\n            break;\r\n        case _EAddMethod.SORTED_ALPHA:\r\n            str_value = item + '';\r\n            for (let i = 0; i < list.length + 1; i++) {\r\n                if (str_value < list[i] + '' || i === list.length) {\r\n                    list.splice(i, 0, item);\r\n                    break;\r\n                }\r\n            }\r\n            break;\r\n        case _EAddMethod.SORTED_REV_ALPHA:\r\n            str_value = item + '';\r\n            for (let i = 0; i < list.length + 1; i++) {\r\n                if (str_value > list[i] + '' || i === list.length) {\r\n                    list.splice(i, 0, item);\r\n                    break;\r\n                }\r\n            }\r\n            break;\r\n        case _EAddMethod.SORTED_NUM:\r\n            for (let i = 0; i < list.length + 1; i++) {\r\n                if (item - list[i] > 0 || i === list.length) {\r\n                    list.splice(i, 0, item);\r\n                    break;\r\n                }\r\n            }\r\n            break;\r\n        case _EAddMethod.SORTED_REV_NUM:\r\n            for (let i = 0; i < list.length + 1; i++) {\r\n                if (item - list[i] < 0 || i === list.length) {\r\n                    list.splice(i, 0, item);\r\n                    break;\r\n                }\r\n            }\r\n            break;\r\n        case _EAddMethod.SORTED_ID:\r\n            for (let i = 0; i < list.length + 1; i++) {\r\n                if (_compareID(item, list[i]) > 0 || i === list.length) {\r\n                    list.splice(i, 0, item);\r\n                    break;\r\n                }\r\n            }\r\n            break;\r\n        case _EAddMethod.SORTED_REV_ID:\r\n            for (let i = 0; i < list.length + 1; i++) {\r\n                if (_compareID(item, list[i]) < 0 || i === list.length) {\r\n                    list.splice(i, 0, item);\r\n                    break;\r\n                }\r\n            }\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n}\r\n// ================================================================================================\r\nexport enum _ERemoveMethod {\r\n    REMOVE_INDEX = 'remove_index',\r\n    REMOVE_FIRST_VALUE = 'remove_first_value',\r\n    REMOVE_LAST_VALUE = 'remove_last_value',\r\n    REMOVE_ALL_VALUES = 'remove_all_values'\r\n}\r\n/**\r\n * Removes items in a list.\r\n *\r\n * @param list The list in which to remove items\r\n * @param item The item to remove, either the index of the item or the value. Negative indexes are allowed.\r\n * @param method Enum, select the method for removing items from the list.\r\n * @returns void\r\n */\r\nexport function Remove(list: any[], item: any, method: _ERemoveMethod): void {\r\n    // --- Error Check ---\r\n    const fn_name = 'list.Remove';\r\n    checkCommTypes(fn_name, 'list', list, [TypeCheckObj.isList]);\r\n    checkCommTypes(fn_name, 'item', item, [TypeCheckObj.isAny]);\r\n    // --- Error Check ---\r\n    let index: number;\r\n    switch (method) {\r\n        case _ERemoveMethod.REMOVE_INDEX:\r\n            index = item;\r\n            if (! isNaN(index) ) {\r\n                if (index < 0) { index = list.length + index; }\r\n                list.splice(index, 1);\r\n            }\r\n            break;\r\n        case _ERemoveMethod.REMOVE_FIRST_VALUE:\r\n            index = list.indexOf(item);\r\n            if (index !== -1) { list.splice(index, 1); }\r\n            break;\r\n        case _ERemoveMethod.REMOVE_LAST_VALUE:\r\n            index = list.lastIndexOf(item);\r\n            if (index !== -1) { list.splice(index, 1); }\r\n            break;\r\n        case _ERemoveMethod.REMOVE_ALL_VALUES:\r\n            for (index = 0; index < list.length; index++) {\r\n                if (list[index] === item) {\r\n                    list.splice(index, 1);\r\n                    index -= 1;\r\n                }\r\n            }\r\n            break;\r\n        default:\r\n            throw new Error('list.Remove: Remove method not recognised.');\r\n    }\r\n}\r\n// ================================================================================================\r\nexport enum _EReplaceMethod {\r\n    REPLACE_INDEX = 'index',\r\n    REPLACE_FIRST_VALUE = 'first_value',\r\n    REPLACE_LAST_VALUE = 'last_value',\r\n    REPLACE_ALL_VALUES = 'all_values'\r\n}\r\n/**\r\n * Replaces items in a list.\r\n *\r\n * @param list The list in which to replace items\r\n * @param item The item to replace, either the index of the item or the value. Negative indexes are allowed.\r\n * @param new_value The new value.\r\n * @param method Enum, select the method for replacing items in the list.\r\n * @returns void\r\n */\r\nexport function Replace(list: any[], item: any, new_value: any, method: _EReplaceMethod): void {\r\n    // --- Error Check ---\r\n    const fn_name = 'list.Replace';\r\n    checkCommTypes(fn_name, 'list', list, [TypeCheckObj.isList]);\r\n    checkCommTypes(fn_name, 'item', item, [TypeCheckObj.isAny]);\r\n    checkCommTypes(fn_name, 'new_value', new_value, [TypeCheckObj.isAny]);\r\n    // --- Error Check ---\r\n    let index: number;\r\n    switch (method) {\r\n        case _EReplaceMethod.REPLACE_INDEX:\r\n            index = item;\r\n            if (! isNaN(index) ) {\r\n                if (index < 0) { index = list.length + index; }\r\n                list[index] = new_value;\r\n            }\r\n            break;\r\n        case _EReplaceMethod.REPLACE_FIRST_VALUE:\r\n            index = list.indexOf(item);\r\n            if (index !== -1) { list[index] = new_value; }\r\n            break;\r\n        case _EReplaceMethod.REPLACE_LAST_VALUE:\r\n            index = list.lastIndexOf(item);\r\n            if (index !== -1) { list[index] = new_value; }\r\n            break;\r\n        case _EReplaceMethod.REPLACE_ALL_VALUES:\r\n            for (index = 0; index < list.length; index++) {\r\n                if (list[index] === item) {\r\n                    list[index] = new_value;\r\n                }\r\n            }\r\n            break;\r\n        default:\r\n            throw new Error('list.Replace: Replace method not recognised.');\r\n    }\r\n}\r\n// ================================================================================================\r\nexport enum _ESortMethod {\r\n    REV = 'reverse',\r\n    ALPHA = 'alpha_descending',\r\n    REV_ALPHA = 'alpha_ascending',\r\n    NUM = 'numeric_descending',\r\n    REV_NUM = 'numeric_ascending',\r\n    ID = 'ID_descending',\r\n    REV_ID = 'ID_ascending',\r\n    SHIFT = 'shift_1',\r\n    REV_SHIFT = 'reverse_shift_1',\r\n    RANDOM = 'random'\r\n}\r\nfunction _compareID(id1: string, id2: string): number {\r\n    const [ent_type1, index1]: TEntTypeIdx = idsBreak(id1) as TEntTypeIdx;\r\n    const [ent_type2, index2]: TEntTypeIdx = idsBreak(id2) as TEntTypeIdx;\r\n    if (ent_type1 !== ent_type2) { return ent_type1 -  ent_type2; }\r\n    if (index1 !== index2) { return index1 -  index2; }\r\n    return 0;\r\n}\r\nfunction _sort(list: any[], method: _ESortMethod): void {\r\n    switch (method) {\r\n        case _ESortMethod.REV:\r\n            list.reverse();\r\n            break;\r\n        case _ESortMethod.ALPHA:\r\n            list.sort();\r\n            break;\r\n        case _ESortMethod.REV_ALPHA:\r\n            list.sort().reverse();\r\n            break;\r\n        case _ESortMethod.NUM:\r\n            list.sort((a, b) => a - b);\r\n            break;\r\n        case _ESortMethod.REV_NUM:\r\n            list.sort((a, b) => a - b).reverse();\r\n            break;\r\n        case _ESortMethod.ID:\r\n            list.sort(_compareID);\r\n            break;\r\n        case _ESortMethod.REV_ID:\r\n            list.sort(_compareID).reverse();\r\n            break;\r\n        case _ESortMethod.SHIFT:\r\n            const first: any = list.shift();\r\n            list.push(first);\r\n            break;\r\n        case _ESortMethod.REV_SHIFT:\r\n            const last: any = list.pop();\r\n            list.unshift(last);\r\n            break;\r\n        case _ESortMethod.RANDOM:\r\n            list.sort(() => .5 - Math.random());\r\n            break;\r\n        default:\r\n            throw new Error('list.Sort: Sort method not recognised.');\r\n    }\r\n}\r\n/**\r\n * Sorts an list, based on the values of the items in the list.\r\n * ~\r\n * For alphabetical sort, values are sorted character by character,\r\n * numbers before upper case alphabets, upper case alphabets before lower case alphabets.\r\n *\r\n * @param list List to sort.\r\n * @param method Enum; specifies the sort method to use.\r\n * @returns void\r\n * @example list.Sort(list, 'alpha')\r\n * @example_info where list = [\"1\",\"2\",\"10\",\"Orange\",\"apple\"]\r\n * Expected value of list is [\"1\",\"10\",\"2\",\"Orange\",\"apple\"].\r\n * @example list.Sort(list, 'numeric')\r\n * @example_info where list = [56,6,48]\r\n * Expected value of list is [6,48,56].\r\n */\r\nexport function Sort(list: any[], method: _ESortMethod): void {\r\n    // --- Error Check ---\r\n    checkCommTypes('list.Sort', 'list', list, [TypeCheckObj.isList]);\r\n    // --- Error Check ---\r\n    _sort(list, method);\r\n}\r\n// ================================================================================================\r\n/**\r\n * Removes and inserts items in a list.\r\n * ~\r\n * If no items_to_add are specified, then items are only removed.\r\n * If num_to_remove is 0, then values are only inserted.\r\n *\r\n * @param list List to splice.\r\n * @param index Zero-based index after which to starting removing or inserting items.\r\n * @param num_to_remove Number of items to remove.\r\n * @param items_to_insert List of items to add, or null.\r\n * @returns void\r\n * @example result = list.Splice(list1, 1, 3, [2.2, 3.3])\r\n * @example_info where list1 = [10, 20, 30, 40, 50]\r\n * Expected value of result is [10, 2.2, 3.3, 50]. New items were added where the items were removed.\r\n */\r\nexport function Splice(list: any[], index: number, num_to_remove: number, items_to_insert: any[]): void {\r\n    // --- Error Check ---\r\n    const fn_name = 'list.Splice';\r\n    checkCommTypes(fn_name, 'list', list, [TypeCheckObj.isList]);\r\n    checkCommTypes(fn_name, 'index', index, [TypeCheckObj.isInt]);\r\n    checkCommTypes(fn_name, 'num_to_remove', num_to_remove, [TypeCheckObj.isInt]);\r\n    checkCommTypes(fn_name, 'values_to_add', items_to_insert, [TypeCheckObj.isList]);\r\n    // --- Error Check ---\r\n\r\n    // avoid the spread operator\r\n    list.splice(index, num_to_remove);\r\n    if (items_to_insert !== null && items_to_insert.length) {\r\n        for (let i = 0; i < items_to_insert.length; i++) {\r\n            list.splice(index + i, 0, items_to_insert[i]);\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// ================================================================================================\r\n// ================================================================================================\r\n// ================================================================================================\r\n// DEPRECATED\r\n// ================================================================================================\r\n// ================================================================================================\r\n// ================================================================================================\r\n/**\r\n * ================================================================================================\r\n * list functions that obtain and return information from an input list. Does not modify input list.\r\n */\r\nexport enum _EAppendMethod {\r\n    TO_START = 'to_start',\r\n    TO_END = 'to_end'\r\n}\r\n/**\r\n * Adds an item to a list.\r\n * If item is a list, the entire list will be appended as a single item.\r\n *\r\n * @param list List to append the item to.\r\n * @param value Item to append.\r\n * @param method Enum, select the method.\r\n * @returns void\r\n * @example append = list.Append(list, 4, 'at_end')\r\n * @example_info where list = [1,2,3]\r\n * Expected value of list is [1,2,3,4].\r\n */\r\nexport function _Append(list: any[], value: any, method: _EAppendMethod): void {\r\n    // --- Error Check ---\r\n    const fn_name = 'list.Append';\r\n    checkCommTypes(fn_name, 'list', list, [TypeCheckObj.isList]);\r\n    checkCommTypes(fn_name, 'value', value, [TypeCheckObj.isAny]);\r\n    // --- Error Check ---\r\n    switch (method) {\r\n        case _EAppendMethod.TO_START:\r\n            list.unshift(value);\r\n            break;\r\n        case _EAppendMethod.TO_END:\r\n            list.push(value);\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n}\r\n// ================================================================================================\r\n/**\r\n * Removes the value at the specified index from a list.\r\n * ~\r\n * WARNING: This function has been deprecated. Please use the list.Modify() function.\r\n *\r\n * @param list List to remove value from.\r\n * @param index Zero-based index number of value to remove.\r\n * @example remove = list.RemoveIndex(list,1)\r\n * @example_info where list = [1,2,3]\r\n * Expected value of remove is [1,3].\r\n */\r\nexport function _RemoveIndex(list: any[], index: number): void {\r\n    // --- Error Check ---\r\n    const fn_name = 'list.RemoveIndex';\r\n    checkCommTypes(fn_name, 'list', list, [TypeCheckObj.isList]);\r\n    checkCommTypes(fn_name, 'index', index, [TypeCheckObj.isInt]);\r\n    // --- Error Check ---\r\n    list.splice(index, 1);\r\n}\r\n// ================================================================================================\r\nexport enum _ERemoveValueMethod {\r\n    REMOVE_ALL = 'remove_all',\r\n    REMOVE_FIRST = 'remove_first'\r\n}\r\n/**\r\n * Removes values that matches specified value from a list.\r\n * Items must match both the value and type of specified value.\r\n * ~\r\n * Returns original list if no values in list match specified value.\r\n * ~\r\n * WARNING: This function has been deprecated. Please use the list.Modify() function.\r\n *\r\n * @param list List to remove value from.\r\n * @param value Value to search for.\r\n * @param method Enum; specifies whether to remove all occurances or only the first.\r\n * @example remove = list.RemoveValue(list,2,'remove_all')\r\n * @example_info where list = [1,2,2,3]\r\n * Expected value of remove is [1,3].\r\n */\r\nexport function _RemoveValue(list: any[], value: any, method: _ERemoveValueMethod): void {\r\n    // --- Error Check ---\r\n    const fn_name = 'list.RemoveValue';\r\n    checkCommTypes(fn_name, 'list', list, [TypeCheckObj.isList]);\r\n    checkCommTypes(fn_name, 'value', value, [TypeCheckObj.isAny]);\r\n    // --- Error Check ---\r\n    for (let i = list.length - 1; i >= 0; i--) {\r\n        if (list[i] === value) {\r\n            list.splice(i, 1);\r\n            if (method === _ERemoveValueMethod.REMOVE_FIRST) {break; }\r\n        }\r\n    }\r\n}\r\n// ================================================================================================\r\nexport enum _EReplaceValueMethod {\r\n    REPLACE_ALL = 'replace_all',\r\n    REPLACE_FIRST = 'replace_first'\r\n}\r\n/**\r\n * Replaces values that matches specified value from an list with a new value\r\n * Items must match both the value and type of specified value\r\n * ~\r\n * Returns original list if no value in list matches specified value.\r\n * ~\r\n * WARNING: This function has been deprecated. Please use the list.Modify() function.\r\n *\r\n * @param list List to remove value from.\r\n * @param value1 Value to search for.\r\n * @param value2 Value to replace existing value with.\r\n * @param method Enum; specifies whether to replace all occurances or only the first.\r\n * @example replace = list.ReplaceValue(list,2,9,'replace_all')\r\n * @example_info where list = [1,2,2,3]\r\n * Expected value of replace is [1,9,9,3].\r\n */\r\nexport function _ReplaceValue(list: any[], value1: any, value2: any, method: _EReplaceValueMethod): void {\r\n    // --- Error Check ---\r\n    const fn_name = 'list.ReplaceValue';\r\n    checkCommTypes(fn_name, 'list', list, [TypeCheckObj.isList]);\r\n    checkCommTypes(fn_name, 'value1', value1, [TypeCheckObj.isAny]);\r\n    checkCommTypes(fn_name, 'value2', value2, [TypeCheckObj.isAny]);\r\n    // --- Error Check ---\r\n    for (let i = 0 ; i < list.length ; i++) {\r\n        if (list[i] === value1) {\r\n            list[i] = value2;\r\n            if (method === _EReplaceValueMethod.REPLACE_FIRST) {break; }\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport enum _EIndexOfMethod {\r\n    SEARCH_ALL = 'search_all',\r\n    SEARCH_FIRST = 'search_first'\r\n}\r\n/**\r\n * Searches for a value in a list and returns the index position if found.\r\n * Items must match both the value and type of specified value.\r\n * ~\r\n * Returns -1 if no values in list match specified value.\r\n * ~\r\n * WARNING: This function has been deprecated. Please use the inline listFind() function.\r\n *\r\n * @param list List.\r\n * @param value Value to search for.\r\n * @param method Enum, specifies whether to search all occurances or only the first.\r\n * @returns Index position or list of index positions containing specified value.\r\n * @example positions = list.IndexOf(list,2,true)\r\n * @example_info where list = [6,2,2,7]\r\n * Expected value of positions is [1,2].\r\n */\r\nexport function _IndexOf(list: any[], value: any, method: _EIndexOfMethod): number|number[] {\r\n    // --- Error Check ---\r\n    const fn_name = 'list.IndexOf';\r\n    checkCommTypes(fn_name, 'list', list, [TypeCheckObj.isList]);\r\n    checkCommTypes(fn_name, 'value', value, [TypeCheckObj.isAny]);\r\n    // --- Error Check ---\r\n    console.log('WARNING: This function has been deprecated. Please use the inline listFind() function.');\r\n    const positions = [];\r\n    for (let i = 0 ; i < list.length; i++) {\r\n        if (list[i] === value) {\r\n            positions.push(i);\r\n            if (method === _EIndexOfMethod.SEARCH_FIRST) {\r\n                return i;\r\n            }\r\n        }\r\n    }\r\n    if (positions.length > 0) {\r\n        return positions;\r\n    } else {\r\n        return -1;\r\n    }\r\n}\r\n// ================================================================================================\r\n/**\r\n * Searches for a value in an list and returns true if found.\r\n * Items must match both the value and type of specified value.\r\n * ~\r\n * Returns false if no values in list match specified value.\r\n * ~\r\n * WARNING: This function has been deprecated. Please use the inline listHas() function.\r\n *\r\n * @param list List.\r\n * @param value Value to search for.\r\n * @returns Returns true if value can be found in list, false if value cannot be found.\r\n * @example exists = list.Includes(list,2)\r\n * @example_info where list = [6,2,2,7]\r\n * Expected value of exists is true.\r\n */\r\nexport function _Includes(list: any[], value: any): boolean {\r\n    // --- Error Check ---\r\n    const fn_name = 'list.Includes';\r\n    checkCommTypes(fn_name, 'list', list, [TypeCheckObj.isList]);\r\n    checkCommTypes(fn_name, 'value', value, [TypeCheckObj.isAny]);\r\n    // --- Error Check ---\r\n    console.log('WARNING: This function has been deprecated. Please use the inline listHas() function.');\r\n    for (let i = list.length - 1; i >= 0; i--) {\r\n        if (list[i] === value) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\n// ================================================================================================\r\n/**\r\n * Creates a new list by creating a new list by making a copy of an existing list.\r\n * ~\r\n * WARNING: This function has been deprecated. Please use the inline listCopy() function.\r\n *\r\n * @param entities List to copy.\r\n * @returns New duplicated list.\r\n * @example copy1 = list.Copy(list)\r\n * @example_info where list = [1,2,3]\r\n * Expected value of copy is [1,2,3].\r\n */\r\nexport function _Copy(entities: any[]): any[] {\r\n    // --- Error Check ---\r\n    checkCommTypes('list.Copy', 'list', entities, [TypeCheckObj.isList]);\r\n    // --- Error Check ---\r\n    console.log('WARNING: This function has been deprecated. Please use the inline listCopy() function.');\r\n    return entities.slice();\r\n}\r\n// ================================================================================================\r\n/**\r\n * Creates a new list by combining two lists into a new list.\r\n * ~\r\n * WARNING: This function has been deprecated. Please use the inline listJoin() function.\r\n *\r\n * @param list1 First list.\r\n * @param list2 Second list.\r\n * @returns Combined list (list1 first, followed by list2).\r\n * @example newlist = list.Concat(list1,list2)\r\n * @example_info where list1 = [1,2,3]\r\n * and list2 = [9,0]\r\n * Expected value of newlist is [1,2,3,9,0].\r\n */\r\nexport function _Concat(list1: any[], list2: any[]): any[] {\r\n    // --- Error Check ---\r\n    const fn_name = 'list.Concat';\r\n    checkCommTypes(fn_name, 'list1', list1, [TypeCheckObj.isList]);\r\n    checkCommTypes(fn_name, 'list2', list2, [TypeCheckObj.isList]);\r\n    // --- Error Check ---\r\n    console.log('WARNING: This function has been deprecated. Please use the inline listJoin() function.');\r\n    return list1.concat(list2);\r\n}\r\n// ================================================================================================\r\n/**\r\n * Creates a new list by flattening an n-dimensional list into a one-dimensional list.\r\n * ~\r\n * WARNING: This function has been deprecated. Please use the inline listFlat() function.\r\n *\r\n * @param list List to flatten.\r\n * @returns Flattened list.\r\n * @example flatten = list.Flatten(list)\r\n * @example_info where list = [1,2,3,[4,5]]\r\n * Expected value of flatten is [1,2,3,4,5].\r\n */\r\nexport function _Flatten(list: any[]): any[] {\r\n    // --- Error Check ---\r\n    checkCommTypes('list.Flatten', 'list', list, [TypeCheckObj.isList]);\r\n    // --- Error Check ---\r\n    console.log('WARNING: This function has been deprecated. Please use the inline listFlat() function.');\r\n    return _flattenDeep(list);\r\n}\r\nfunction _flattenDeep(list: any[]): any[] {\r\n    return list.reduce((acc, val) => Array.isArray(val) ? acc.concat(_flattenDeep(val)) : acc.concat(val), []);\r\n}\r\n// ================================================================================================\r\n/**\r\n * Creates a new list by copying a portion of an existing list, from start index to end index (end not included).\r\n * ~\r\n * WARNING: This function has been deprecated. Please use the inline listSlice() function.\r\n *\r\n * @param list List to slice.\r\n * @param start Zero-based index at which to begin slicing.\r\n *      A negative index can be used, indicating an offset from the end of the sequence.\r\n *      If start is undefined, slice begins from index 0.\r\n * @param end Zero-based index before which to end slicing. Slice extracts up to but not including end.\r\n *      A negative index can be used, indicating an offset from the end of the sequence.\r\n *      If end is undefined, slice extracts through the end of the sequence.\r\n * @returns A new list.\r\n * @example result = list.Slice(list,1,3)\r\n * @example_info where list = [1,2,3,4,5]\r\n * Expected value of result is [2,3].\r\n */\r\nexport function _Slice(list: any[], start: number, end: number): any[] {\r\n    // --- Error Check ---\r\n    const fn_name = 'list.Slice';\r\n    checkCommTypes(fn_name, 'list', list, [TypeCheckObj.isList]);\r\n    checkCommTypes(fn_name, 'start', start, [TypeCheckObj.isInt]);\r\n    checkCommTypes(fn_name, 'end', end, [TypeCheckObj.isInt]);\r\n    // --- Error Check ---\r\n    console.log('WARNING: This function has been deprecated. Please use the inline listSlice() function.');\r\n    return list.slice(start, end);\r\n}\r\n// ================================================================================================\r\n/**\r\n * Reverses the order of values in a list and returns a new list.\r\n * ~\r\n * WARNING: This function has been deprecated. Please use the list.Sort() function.\r\n *\r\n * @param entities List to reverse.\r\n * @returns New reversed list.\r\n * @example result = list.Reverse(list1)\r\n * @example_info where list1 = [1,2,3]\r\n * Expected value of result is [3,2,1].\r\n */\r\nexport function _Reverse(entities: any[]): void {\r\n    // --- Error Check ---\r\n    checkCommTypes('list.Reverse', 'entities', entities, [TypeCheckObj.isList]);\r\n    // --- Error Check ---\r\n    console.log('WARNING: This function has been deprecated. Please use the list.Sort() function.');\r\n    entities.reverse();\r\n}\r\n// ================================================================================================\r\n","/**\r\n * The `make` module has functions for making new entities in the model.\r\n * All these functions all return the IDs of the entities that are created.\r\n */\r\n\r\n/**\r\n *\r\n */\r\n\r\nimport { GIModel } from '@libs/geo-info/GIModel';\r\nimport { EAttribNames, TId, EEntType, Txyz, TEntTypeIdx } from '@libs/geo-info/common';\r\nimport { isPoint, isPline, isPgon, isDim0, isDim2, isColl, isPosi,\r\n    isEdge, idsMake, idIndicies, getArrDepth, isFace } from '@libs/geo-info/id';\r\nimport { __merge__ } from './_model';\r\nimport { vecDiv, vecMult, interpByNum, interpByLen, vecAdd, vecFromTo } from '@libs/geom/vectors';\r\nimport { _model } from '@modules';\r\nimport { checkCommTypes, checkIDs, IDcheckObj, TypeCheckObj } from './_check_args';\r\nimport { distance } from '@assets/libs/geom/distance';\r\n\r\n// ================================================================================================\r\nfunction _position(__model__: GIModel, coords: Txyz|Txyz[]|Txyz[][]): TEntTypeIdx|TEntTypeIdx[]|TEntTypeIdx[][] {\r\n    const depth: number = getArrDepth(coords);\r\n    if (depth === 1) {\r\n        const coord1: Txyz = coords as Txyz;\r\n        const posi_i: number = __model__.geom.add.addPosi();\r\n        __model__.attribs.add.setAttribValue(EEntType.POSI, posi_i, EAttribNames.COORDS, coord1);\r\n        return [EEntType.POSI, posi_i] as TEntTypeIdx;\r\n    } else if (depth === 2) {\r\n        const coords2: Txyz[] = coords as Txyz[];\r\n        return coords2.map(coord => _position(__model__, coord)) as TEntTypeIdx[];\r\n    } else {\r\n        const coords3: Txyz[][] = coords as Txyz[][];\r\n        return coords3.map(coord2 => _position(__model__, coord2)) as TEntTypeIdx[][];\r\n    }\r\n}\r\n/**\r\n * Adds a new position to the model.\r\n *\r\n * @param __model__\r\n * @param coords XYZ coordinates as a list of three numbers.\r\n * @returns Entities, new position, or a list of new positions, or a list of lists of new positions .\r\n * @example position1 = make.Position([1,2,3])\r\n * @example_info Creates a position with coordinates x=1, y=2, z=3.\r\n * @example_link make.Position.mob&node=1\r\n */\r\nexport function Position(__model__: GIModel, coords: Txyz|Txyz[]|Txyz[][]): TId|TId[]|TId[][] {\r\n    // --- Error Check ---\r\n    checkCommTypes('make.Position', 'coords', coords, [TypeCheckObj.isCoord, TypeCheckObj.isCoordList, TypeCheckObj.isCoordList_List]);\r\n    // TODO allow to Txyz[][]\r\n    // --- Error Check ---\r\n    const new_ents_arr: TEntTypeIdx|TEntTypeIdx[]|TEntTypeIdx[][] = _position(__model__, coords);\r\n    return idsMake(new_ents_arr);\r\n}\r\n// ================================================================================================\r\nfunction _point(__model__: GIModel, ents_arr: TEntTypeIdx|TEntTypeIdx[]|TEntTypeIdx[][]): TEntTypeIdx|TEntTypeIdx[] {\r\n    const depth: number = getArrDepth(ents_arr);\r\n    if (depth === 1) {\r\n        const [ent_type, index]: TEntTypeIdx = ents_arr as TEntTypeIdx; // either a posi or something else\r\n        if (ent_type === EEntType.POSI) {\r\n            const point_i: number = __model__.geom.add.addPoint(index);\r\n            return [EEntType.POINT, point_i] as TEntTypeIdx;\r\n        } else {\r\n            const posis_i: number[] = __model__.geom.query.navAnyToPosi(ent_type, index);\r\n            return posis_i.map(posi_i => _point(__model__, [EEntType.POSI, posi_i])) as TEntTypeIdx[];\r\n        }\r\n    } else { // depth === 2 or 3\r\n        return (ents_arr as TEntTypeIdx[]).map(_ents_arr => _point(__model__, _ents_arr)) as TEntTypeIdx[];\r\n    }\r\n}\r\n/**\r\n * Adds a new point to the model. If a list of positions is provided as the input, then a list of points is generated.\r\n *\r\n * @param __model__\r\n * @param positions Position of point, or other entities from which positions will be extracted.\r\n * @returns Entities, new point or a list of new points.\r\n * @example_info Creates a point at position1.\r\n * @example point1 = make.Point(position1)\r\n * @example_info Creates a point at position1.\r\n * @example_link make.Point.mob&node=1\r\n */\r\nexport function Point(__model__: GIModel, positions: TId|TId[]): TId|TId[] {\r\n    // --- Error Check ---\r\n    const ents_arr = checkIDs('make.Point', 'positions', positions,\r\n        [IDcheckObj.isID, IDcheckObj.isIDList, IDcheckObj.isIDList_list], \r\n        [EEntType.POSI, EEntType.VERT, EEntType.EDGE, EEntType.WIRE,\r\n        EEntType.FACE, EEntType.POINT, EEntType.PLINE, EEntType.PGON])  as TEntTypeIdx|TEntTypeIdx[];\r\n    // --- Error Check ---\r\n    const new_ents_arr: TEntTypeIdx|TEntTypeIdx[] =  _point(__model__, ents_arr);\r\n    return idsMake(new_ents_arr) as TId|TId[];\r\n}\r\n// ================================================================================================\r\n// Enums for Polyline()\r\nexport enum _EClose {\r\n    OPEN = 'open',\r\n    CLOSE = 'close'\r\n}\r\nfunction _polyline(__model__: GIModel, ents_arr: TEntTypeIdx[]|TEntTypeIdx[][], close: _EClose): TEntTypeIdx|TEntTypeIdx[] {\r\n    if (getArrDepth(ents_arr) === 2) {\r\n        const bool_close: boolean = (close === _EClose.CLOSE);\r\n        const posis_i: number[] = idIndicies(ents_arr as TEntTypeIdx[]);\r\n        const pline_i: number = __model__.geom.add.addPline(posis_i, bool_close);\r\n        return [EEntType.PLINE, pline_i] as TEntTypeIdx;\r\n    } else {\r\n        return (ents_arr as TEntTypeIdx[][]).map(ent_arr => _polyline(__model__, ent_arr, close)) as TEntTypeIdx[];\r\n    }\r\n}\r\nfunction _getPlinePosisFromEnts(__model__: GIModel, ents_arr: TEntTypeIdx|TEntTypeIdx[]|TEntTypeIdx[][]): TEntTypeIdx[][] {\r\n    // check if this is a single object ID\r\n    if (getArrDepth(ents_arr) === 1) {\r\n        ents_arr =  [ents_arr] as TEntTypeIdx[];\r\n    }\r\n    // check if this is a list of posis, verts, or points\r\n    if (getArrDepth(ents_arr) === 2 && isDim0(ents_arr[0][0])) {\r\n        const ents_arr2: TEntTypeIdx[] = [];\r\n        for (const ent_arr of ents_arr) {\r\n            const [ent_type, index]: TEntTypeIdx = ent_arr as TEntTypeIdx;\r\n            if (ent_type === EEntType.POSI) {\r\n                ents_arr2.push(ent_arr as TEntTypeIdx);\r\n            } else {\r\n                const posis_i: number[] =__model__.geom.query.navAnyToPosi(ent_type, index);\r\n                for (const posi_i of posis_i) {\r\n                    ents_arr2.push([EEntType.POSI, posi_i]);\r\n                }\r\n            }\r\n        }\r\n        ents_arr = [ents_arr2] as TEntTypeIdx[][];\r\n    }\r\n    // now process the ents\r\n    const posis_arrs: TEntTypeIdx[][] = [];\r\n    for (const ent_arr of ents_arr) {\r\n        if (getArrDepth(ent_arr) === 2) { // this must be a list of posis\r\n            posis_arrs.push(ent_arr as TEntTypeIdx[]);\r\n            continue;\r\n        }\r\n        const [ent_type, index]: TEntTypeIdx = ent_arr as TEntTypeIdx;\r\n        switch (ent_type) {\r\n            case EEntType.EDGE:\r\n            case EEntType.WIRE:\r\n            case EEntType.PLINE:\r\n                const posis_i: number[] = __model__.geom.query.navAnyToPosi(ent_type, index);\r\n                const posis_arr: TEntTypeIdx[] = posis_i.map( posi_i => [EEntType.POSI, posi_i]) as TEntTypeIdx[];\r\n                posis_arrs.push( posis_arr );\r\n                break;\r\n            case EEntType.FACE:\r\n            case EEntType.PGON:\r\n                const wires_i: number[] = __model__.geom.query.navAnyToWire(ent_type, index);\r\n                for (let j = 0; j < wires_i.length; j++) {\r\n                    const wire_i: number = wires_i[j];\r\n                    const wire_posis_i: number[] = __model__.geom.query.navAnyToPosi(EEntType.WIRE, wire_i);\r\n                    const wire_posis_arr: TEntTypeIdx[] = wire_posis_i.map( posi_i => [EEntType.POSI, posi_i]) as TEntTypeIdx[];\r\n                    posis_arrs.push( wire_posis_arr );\r\n                }\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    return posis_arrs;\r\n}\r\n/**\r\n * Adds one or more new polylines to the model.\r\n *\r\n * @param __model__\r\n * @param entities List of positions, or list of lists of positions, or entities from which positions can be extracted.\r\n * @param close Enum, 'open' or 'close'.\r\n * @returns Entities, new polyline, or a list of new polylines.\r\n * @example polyline1 = make.Polyline([position1,position2,position3], close)\r\n * @example_info Creates a closed polyline with vertices position1, position2, position3 in sequence.\r\n * @example_link make.Polyline.mob&node=1\r\n */\r\nexport function Polyline(__model__: GIModel, entities: TId|TId[]|TId[][], close: _EClose): TId|TId[] {\r\n    // --- Error Check ---\r\n    const ents_arr = checkIDs('make.Polyline', 'positions', entities,\r\n        [IDcheckObj.isID, IDcheckObj.isIDList, IDcheckObj.isIDList_list],\r\n        [EEntType.POSI, EEntType.VERT, EEntType.EDGE, EEntType.WIRE,\r\n        EEntType.FACE, EEntType.PLINE, EEntType.PGON]) as TEntTypeIdx|TEntTypeIdx[]|TEntTypeIdx[][];\r\n    // --- Error Check ---\r\n    const posis_arrs: TEntTypeIdx[][] = _getPlinePosisFromEnts(__model__, ents_arr);\r\n    const new_ents_arr: TEntTypeIdx[] = _polyline(__model__, posis_arrs, close) as  TEntTypeIdx[];\r\n    const depth: number = getArrDepth(ents_arr);\r\n    if (depth === 1 || (depth === 2 && ents_arr[0][0] === EEntType.POSI)) {\r\n        const first_ent: TEntTypeIdx = new_ents_arr[0] as TEntTypeIdx;\r\n        return idsMake(first_ent) as TId;\r\n    } else {\r\n        return idsMake(new_ents_arr) as TId|TId[];\r\n    }\r\n}\r\n// ================================================================================================\r\nfunction _polygon(__model__: GIModel, ents_arr: TEntTypeIdx[]|TEntTypeIdx[][]): TEntTypeIdx|TEntTypeIdx[] {\r\n    if (getArrDepth(ents_arr) === 2) {\r\n        const posis_i: number[] = idIndicies(ents_arr as TEntTypeIdx[]);\r\n        const pgon_i: number = __model__.geom.add.addPgon(posis_i);\r\n        return [EEntType.PGON, pgon_i] as TEntTypeIdx;\r\n    } else {\r\n        return (ents_arr as TEntTypeIdx[][]).map(_ents_arr => _polygon(__model__, _ents_arr)) as TEntTypeIdx[];\r\n    }\r\n}\r\nfunction _getPgonPosisFromEnts(__model__: GIModel, ents_arr: TEntTypeIdx|TEntTypeIdx[]|TEntTypeIdx[][]): TEntTypeIdx[][] {\r\n    // check if this is a single object ID\r\n    if (getArrDepth(ents_arr) === 1) {\r\n        ents_arr = [ents_arr] as TEntTypeIdx[];\r\n    }\r\n    // check if this is a list of posis\r\n    if (getArrDepth(ents_arr) === 2 && ents_arr[0][0] === EEntType.POSI) {\r\n        // ents_arr =  [ents_arr] as TEntTypeIdx[][];\r\n        const ents_arr2: TEntTypeIdx[] = [];\r\n        for (const ent_arr of ents_arr) {\r\n            const [ent_type, index]: TEntTypeIdx = ent_arr as TEntTypeIdx;\r\n            if (ent_type === EEntType.POSI) {\r\n                ents_arr2.push(ent_arr as TEntTypeIdx);\r\n            } else {\r\n                const posis_i: number[] =__model__.geom.query.navAnyToPosi(ent_type, index);\r\n                for (const posi_i of posis_i) {\r\n                    ents_arr2.push([EEntType.POSI, posi_i]);\r\n                }\r\n            }\r\n        }\r\n        ents_arr = [ents_arr2] as TEntTypeIdx[][];\r\n    }\r\n    // now process the ents\r\n    const posis_arrs: TEntTypeIdx[][] = [];\r\n    for (const ent_arr of ents_arr) {\r\n        if (getArrDepth(ent_arr) === 2) { // this must be a list of posis\r\n            posis_arrs.push(ent_arr as TEntTypeIdx[]);\r\n            continue;\r\n        }\r\n        const [ent_type, index]: TEntTypeIdx = ent_arr as TEntTypeIdx;\r\n        switch (ent_type) {\r\n            case EEntType.WIRE:\r\n            case EEntType.PLINE:\r\n                const posis_i: number[] = __model__.geom.query.navAnyToPosi(ent_type, index);\r\n                const posis_arr: TEntTypeIdx[] = posis_i.map( posi_i => [EEntType.POSI, posi_i]) as TEntTypeIdx[];\r\n                posis_arrs.push(posis_arr);\r\n                break;\r\n            case EEntType.FACE:\r\n            case EEntType.PGON:\r\n                const wires_i: number[] = __model__.geom.query.navAnyToWire(ent_type, index);\r\n                for (let j = 0; j < wires_i.length; j++) {\r\n                    const wire_i: number = wires_i[j];\r\n                    const wire_posis_i: number[] = __model__.geom.query.navAnyToPosi(EEntType.WIRE, wire_i);\r\n                    const wire_posis_arr: TEntTypeIdx[] = wire_posis_i.map( posi_i => [EEntType.POSI, posi_i]) as TEntTypeIdx[];\r\n                    posis_arrs.push(wire_posis_arr);\r\n                }\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    return posis_arrs;\r\n}\r\n/**\r\n * Adds one or more new polygons to the model.\r\n *\r\n * @param __model__\r\n * @param entities List of positions, or list of lists of positions, or entities from which positions can be extracted.\r\n * @returns Entities, new polygon, or a list of new polygons.\r\n * @example polygon1 = make.Polygon([position1,position2,position3])\r\n * @example_info Creates a polygon with vertices position1, position2, position3 in sequence.\r\n * @example_link make.Polygon.mob&node=1\r\n */\r\nexport function Polygon(__model__: GIModel, entities: TId|TId[]|TId[][]): TId|TId[] {\r\n    // --- Error Check ---\r\n    const ents_arr = checkIDs('make.Polygon', 'positions', entities,\r\n        [IDcheckObj.isID, IDcheckObj.isIDList, IDcheckObj.isIDList_list],\r\n        [EEntType.POSI, EEntType.WIRE, EEntType.FACE, EEntType.PLINE, EEntType.PGON]) as TEntTypeIdx[]|TEntTypeIdx[][];\r\n    // --- Error Check ---\r\n    const posis_arrs: TEntTypeIdx[][] = _getPgonPosisFromEnts(__model__, ents_arr);\r\n    const new_ents_arr: TEntTypeIdx[] = _polygon(__model__, posis_arrs) as TEntTypeIdx[];\r\n    const depth: number = getArrDepth(ents_arr);\r\n    if (depth === 1 || (depth === 2 && ents_arr[0][0] === EEntType.POSI)) {\r\n        const first_ent: TEntTypeIdx = new_ents_arr[0] as TEntTypeIdx;\r\n        return idsMake(first_ent) as TId;\r\n    } else {\r\n        return idsMake(new_ents_arr) as TId|TId[];\r\n    }\r\n}\r\n// ================================================================================================\r\nexport function _collection(__model__: GIModel, parent_index: number, ents_arr: TEntTypeIdx|TEntTypeIdx[]): TEntTypeIdx {\r\n    if (getArrDepth(ents_arr) === 1) {\r\n        ents_arr = [ents_arr] as TEntTypeIdx[];\r\n    }\r\n    const points: number[] = [];\r\n    const plines: number[] = [];\r\n    const pgons: number[] = [];\r\n    for (const ent_arr of ents_arr) {\r\n        if (isPoint(ent_arr[0])) { points.push(ent_arr[1]); }\r\n        if (isPline(ent_arr[0])) { plines.push(ent_arr[1]); }\r\n        if (isPgon(ent_arr[0])) { pgons.push(ent_arr[1]); }\r\n    }\r\n    const coll_i: number = __model__.geom.add.addColl(parent_index, points, plines, pgons);\r\n    return [EEntType.COLL, coll_i];\r\n}\r\n/**\r\n * Adds a new collection to the model.\r\n *\r\n * @param __model__\r\n * @param parent_coll Collection\r\n * @param geometry List of points, polylines, polygons.\r\n * @returns Entities, new collection, or a list of new collections.\r\n * @example collection1 = make.Collection([point1,polyine1,polygon1])\r\n * @example_info Creates a collection containing point1, polyline1, polygon1.\r\n * @example_link make.Collection.mob&node=1\r\n */\r\nexport function Collection(__model__: GIModel, parent_coll: TId, geometry: TId|TId[]): TId {\r\n    // --- Error Check ---\r\n    const fn_name = 'make.Collection';\r\n    let parent_index: number;\r\n    if (parent_coll !== null && parent_coll !== undefined) {\r\n        const parent_ent_arr = checkIDs(fn_name, 'parent_coll', parent_coll, [IDcheckObj.isID], [EEntType.COLL]) as TEntTypeIdx;\r\n        parent_index = parent_ent_arr[1];\r\n    } else {\r\n        parent_index = -1;\r\n    }\r\n    const ents_arr = checkIDs(fn_name, 'geometry', geometry,\r\n        [IDcheckObj.isID, IDcheckObj.isIDList], [EEntType.POINT, EEntType.PLINE, EEntType.PGON]) as TEntTypeIdx|TEntTypeIdx[];\r\n    // --- Error Check ---\r\n    const new_ent_arr: TEntTypeIdx = _collection(__model__, parent_index, ents_arr);\r\n    return idsMake(new_ent_arr) as TId;\r\n}\r\n// ================================================================================================\r\nfunction _copyGeom(__model__: GIModel, ents_arr: TEntTypeIdx|TEntTypeIdx[], copy_attributes: boolean): TEntTypeIdx|TEntTypeIdx[] {\r\n    if (getArrDepth(ents_arr) === 1) {\r\n        const [ent_type, index]: TEntTypeIdx = ents_arr as TEntTypeIdx;\r\n        if (isColl(ent_type)) {\r\n            const coll_i: number = __model__.geom.add.copyColls(index, copy_attributes) as number;\r\n            return [ent_type, coll_i];\r\n        } else if (isPgon(ent_type)) {\r\n            const obj_i: number = __model__.geom.add.copyPgons(index, copy_attributes) as number;\r\n            return [ent_type, obj_i];\r\n        } else if (isPline(ent_type)) {\r\n            const obj_i: number = __model__.geom.add.copyPlines(index, copy_attributes) as number;\r\n            return [ent_type, obj_i];\r\n        } else if (isPoint(ent_type)) {\r\n            const obj_i: number = __model__.geom.add.copyPoints(index, copy_attributes) as number;\r\n            return [ent_type, obj_i];\r\n        } else if (isPosi(ent_type)) {\r\n            const posi_i: number = __model__.geom.add.copyPosis(index, copy_attributes) as number;\r\n            return [ent_type, posi_i];\r\n        }\r\n    } else {\r\n        return (ents_arr as TEntTypeIdx[]).map(one_ent => _copyGeom(__model__, one_ent, copy_attributes)) as TEntTypeIdx[];\r\n    }\r\n}\r\nfunction _copyGeomPosis(__model__: GIModel, ents_arr: TEntTypeIdx|TEntTypeIdx[], copy_attributes: boolean): TEntTypeIdx[] {\r\n    if (getArrDepth(ents_arr) === 1) {\r\n        ents_arr = [ents_arr] as TEntTypeIdx[];\r\n    }\r\n    // create the new positions\r\n    const old_to_new_posis_i_map: Map<number, number> = new Map(); // count number of posis\r\n    for (const ent_arr of ents_arr) {\r\n        const [ent_type, index]: TEntTypeIdx = ent_arr as TEntTypeIdx;\r\n        if (!isPosi(ent_type)) { // obj or coll\r\n            const old_posis_i: number[] = __model__.geom.query.navAnyToPosi(ent_type, index);\r\n            const ent_new_posis_i: number[] = [];\r\n            for (const old_posi_i of old_posis_i) {\r\n                let new_posi_i: number;\r\n                if (old_to_new_posis_i_map.has(old_posi_i)) {\r\n                    new_posi_i = old_to_new_posis_i_map.get(old_posi_i);\r\n                } else {\r\n                    new_posi_i = __model__.geom.add.copyPosis(old_posi_i, copy_attributes) as number;\r\n                    old_to_new_posis_i_map.set(old_posi_i, new_posi_i);\r\n                }\r\n                ent_new_posis_i.push(new_posi_i);\r\n            }\r\n            __model__.geom.modify.replacePosis(ent_type, index, ent_new_posis_i);\r\n        }\r\n    }\r\n    // return all the new points\r\n    const all_new_posis_i: number[] = Array.from(old_to_new_posis_i_map.values());\r\n    return all_new_posis_i.map( posi_i => [EEntType.POSI, posi_i] ) as TEntTypeIdx[];\r\n}\r\nexport enum _ECopyAttribues {\r\n    COPY_ATTRIBUTES = 'copy_attributes',\r\n    NO_ATTRIBUTES = 'no_attributes'\r\n}\r\n/**\r\n * Adds a new copy of specified entities to the model.\r\n *\r\n * @param __model__\r\n * @param entities Position, point, polyline, polygon, collection to be copied.\r\n * @param copy_positions Enum to create a copy of the existing positions or to reuse the existing positions.\r\n * @param copy_attributes Enum to copy attributes or to have no attributes copied.\r\n * @returns Entities, the copied entity or a list of copied entities.\r\n * @example copy1 = make.Copy([position1,polyine1,polygon1], copy_positions, copy_attributes)\r\n * @example_info Creates a list containing a copy of the entities in sequence of input.\r\n */\r\nexport function Copy(__model__: GIModel, entities: TId|TId[], copy_attributes: _ECopyAttribues): TId|TId[] {\r\n    // --- Error Check ---\r\n    const ents_arr = checkIDs('make.Copy', 'entities', entities,\r\n        [IDcheckObj.isID, IDcheckObj.isIDList],\r\n        [EEntType.POSI, EEntType.POINT, EEntType.PLINE, EEntType.PGON, EEntType.COLL]) as TEntTypeIdx|TEntTypeIdx[];\r\n    // --- Error Check ---\r\n    const bool_copy_attribs: boolean = (copy_attributes === _ECopyAttribues.COPY_ATTRIBUTES);\r\n    // copy the list of entities\r\n    const new_ents_arr: TEntTypeIdx|TEntTypeIdx[] = _copyGeom(__model__, ents_arr, bool_copy_attribs);\r\n    // copy the positions that belong to the list of entities\r\n    _copyGeomPosis(__model__, new_ents_arr, bool_copy_attribs);\r\n    // return only the new entities\r\n    return idsMake(new_ents_arr) as TId|TId[];\r\n}\r\n// ================================================================================================\r\n// Hole modelling operation\r\nfunction _hole(__model__: GIModel, face_ent_arr: TEntTypeIdx, holes_ents_arr: TEntTypeIdx[]|TEntTypeIdx[][]): TEntTypeIdx[] {\r\n    if (getArrDepth(holes_ents_arr) === 2) {\r\n        holes_ents_arr = [holes_ents_arr] as TEntTypeIdx[][];\r\n    }\r\n    // convert the holes to lists of posis_i\r\n    const holes_posis_i: number[][] = [];\r\n    for (const hole_ents_arr of holes_ents_arr as TEntTypeIdx[][]) {\r\n        holes_posis_i.push( hole_ents_arr.map( ent_arr => ent_arr[1] ) );\r\n    }\r\n    // create the hole\r\n    const wires_i: number[] = __model__.geom.modify.cutFaceHoles(face_ent_arr[1], holes_posis_i);\r\n    return wires_i.map(wire_i => [EEntType.WIRE, wire_i]) as TEntTypeIdx[];\r\n}\r\nfunction _getHolePosisFromEnts(__model__: GIModel, ents_arr: TEntTypeIdx[]|TEntTypeIdx[][]): void {\r\n    for (let i = 0; i < ents_arr.length; i++) {\r\n        const depth: number = getArrDepth(ents_arr[i]);\r\n        if (depth === 1) {\r\n            const [ent_type, index]: TEntTypeIdx = ents_arr[i] as TEntTypeIdx;\r\n            switch (ent_type) {\r\n                case EEntType.WIRE:\r\n                case EEntType.PLINE:\r\n                    const posis_i: number[] = __model__.geom.query.navAnyToPosi(ent_type, index);\r\n                    const posis_arr: TEntTypeIdx[] = posis_i.map( posi_i => [EEntType.POSI, posi_i]) as TEntTypeIdx[];\r\n                    Array.prototype.splice.apply(ents_arr, [i, 1, posis_arr]); // TODO\r\n                    break;\r\n                case EEntType.FACE:\r\n                case EEntType.PGON:\r\n                    // ignore holes, so only take the first wire\r\n                    const wires_i: number[] = __model__.geom.query.navAnyToWire(ent_type, index);\r\n                    const wire_i: number = wires_i[0];\r\n                    const wire_posis_i: number[] = __model__.geom.query.navAnyToPosi(EEntType.WIRE, wire_i);\r\n                    const wire_posis_arr: TEntTypeIdx[] = wire_posis_i.map( posi_i => [EEntType.POSI, posi_i]) as TEntTypeIdx[];\r\n                    Array.prototype.splice.apply(ents_arr, [i, 1, wire_posis_arr]); // TODO\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n}\r\n/**\r\n * Makes one or more holes in a polygon.\r\n * Each hole is defined by a list of positions.\r\n * The positions must be on the polygon, i.e. they must be co-planar with the polygon and\r\n * they must be within the boundary of the polygon.\r\n * If the list of positions consists of a single list, then one hole will be generated.\r\n * If the list of positions consists of a list of lists, then multiple holes will be generated.\r\n * ~\r\n * The hole positions should lie within the polygon surface.\r\n *\r\n * @param __model__\r\n * @param face A polygon or a face to make holes in.\r\n * @param positions List of positions, or list of lists of positions, or entities from which positions can be extracted.\r\n * @returns Entities, a list of wires resulting from the hole(s).\r\n */\r\nexport function Hole(__model__: GIModel, face: TId, positions: TId|TId[]|TId[][]): TId[] {\r\n    if (!Array.isArray(positions)) { positions = [positions]; }\r\n    // --- Error Check ---\r\n    const face_ent_arr = checkIDs('make.Hole', 'face', face, [IDcheckObj.isID], [EEntType.FACE, EEntType.PGON]) as TEntTypeIdx;\r\n    const holes_ents_arr = checkIDs('make.Hole', 'positions', positions,\r\n        [IDcheckObj.isID, IDcheckObj.isIDList, IDcheckObj.isIDList_list],\r\n        [EEntType.POSI, EEntType.WIRE, EEntType.FACE, EEntType.PLINE, EEntType.PGON]) as TEntTypeIdx[]|TEntTypeIdx[][];\r\n    // --- Error Check ---\r\n    _getHolePosisFromEnts(__model__, holes_ents_arr);\r\n    const new_ents_arr: TEntTypeIdx[] = _hole(__model__, face_ent_arr, holes_ents_arr);\r\n    return idsMake(new_ents_arr) as TId[];\r\n}\r\n// ================================================================================================\r\n// export enum _ELoftMethod {\r\n//     OPEN =  'open',\r\n//     CLOSED  =  'closed'\r\n// }\r\nexport enum _ELoftMethod {\r\n    OPEN_QUADS =  'open_quads',\r\n    CLOSED_QUADS  =  'closed_quads',\r\n    OPEN_STRINGERS =  'open_stringers',\r\n    CLOSED_STRINGERS  =  'closed_stringers',\r\n    OPEN_RIBS = 'open_ribs',\r\n    CLOSED_RIBS = 'closed_ribs'\r\n}\r\nfunction _loftQuads(__model__: GIModel, ents_arr: TEntTypeIdx[], divisions: number, method: _ELoftMethod): TEntTypeIdx[] {\r\n    const edges_arrs_i: number[][] = [];\r\n    let num_edges = 0;\r\n    for (const ents of ents_arr) {\r\n        const [ent_type, index]: TEntTypeIdx = ents as TEntTypeIdx;\r\n        const edges_i: number[] = __model__.geom.query.navAnyToEdge(ent_type, index);\r\n        if (edges_arrs_i.length === 0) { num_edges = edges_i.length; }\r\n        if (edges_i.length !== num_edges) {\r\n            throw new Error('make.Loft: Number of edges is not consistent.');\r\n        }\r\n        edges_arrs_i.push(edges_i);\r\n    }\r\n    if (method === _ELoftMethod.CLOSED_QUADS) {\r\n        edges_arrs_i.push(edges_arrs_i[0]);\r\n    }\r\n    const new_pgons_i: number[] = [];\r\n    for (let i = 0; i < edges_arrs_i.length - 1; i++) {\r\n        const edges_i_a: number[] = edges_arrs_i[i];\r\n        const edges_i_b: number[] = edges_arrs_i[i + 1];\r\n        if (divisions > 0) {\r\n            const strip_posis_map: Map<number, number[]> = new Map();\r\n            for (let j = 0; j < num_edges; j++) {\r\n                const edge_i_a: number = edges_i_a[j];\r\n                const edge_i_b: number = edges_i_b[j];\r\n                // get exist two posis_i\r\n                const exist_posis_a_i: number[] = __model__.geom.query.navAnyToPosi(EEntType.EDGE, edge_i_a);\r\n                const exist_posis_b_i: number[] = __model__.geom.query.navAnyToPosi(EEntType.EDGE, edge_i_b);\r\n                // create the new posis strip if necessary\r\n                for (const k of [0, 1]) {\r\n                    if (strip_posis_map.get(exist_posis_a_i[k]) === undefined) {\r\n                        const xyz_a: Txyz = __model__.attribs.query.getPosiCoords(exist_posis_a_i[k]);\r\n                        const xyz_b: Txyz = __model__.attribs.query.getPosiCoords(exist_posis_b_i[k]);\r\n                        const extrude_vec_div: Txyz = vecDiv(vecFromTo(xyz_a, xyz_b), divisions);\r\n                        const strip_posis_i: number[] = [exist_posis_a_i[k]];\r\n                        for (let d = 1; d < divisions; d++) {\r\n                            const strip_posi_i: number = __model__.geom.add.addPosi();\r\n                            const move_xyz = vecMult(extrude_vec_div, d);\r\n                            __model__.attribs.add.setPosiCoords(strip_posi_i, vecAdd(xyz_a, move_xyz));\r\n                            strip_posis_i.push(strip_posi_i);\r\n                        }\r\n                        strip_posis_i.push(exist_posis_b_i[k]);\r\n                        strip_posis_map.set(exist_posis_a_i[k], strip_posis_i);\r\n                    }\r\n                }\r\n                // get the two strips and make polygons\r\n                const strip1_posis_i: number[] = strip_posis_map.get(exist_posis_a_i[0]);\r\n                const strip2_posis_i: number[] = strip_posis_map.get(exist_posis_a_i[1]);\r\n                for (let k = 0; k < strip1_posis_i.length - 1; k++) {\r\n                    const c1: number = strip1_posis_i[k];\r\n                    const c2: number = strip2_posis_i[k];\r\n                    const c3: number = strip2_posis_i[k + 1];\r\n                    const c4: number = strip1_posis_i[k + 1];\r\n                    const pgon_i: number = __model__.geom.add.addPgon([c1, c2, c3, c4]);\r\n                    new_pgons_i.push(pgon_i);\r\n                }\r\n            }\r\n        } else {\r\n            for (let j = 0; j < num_edges; j++) {\r\n                const posis_i_a: number[] = __model__.geom.query.navAnyToPosi(EEntType.EDGE, edges_i_a[j]);\r\n                const posis_i_b: number[] = __model__.geom.query.navAnyToPosi(EEntType.EDGE, edges_i_b[j]);\r\n                const pgon_i: number = __model__.geom.add.addPgon([posis_i_a[0], posis_i_a[1], posis_i_b[1], posis_i_b[0]]);\r\n                new_pgons_i.push(pgon_i);\r\n            }\r\n        }\r\n    }\r\n    return new_pgons_i.map( pgon_i => [EEntType.PGON, pgon_i]) as TEntTypeIdx[];\r\n}\r\nfunction _loftStringers(__model__: GIModel, ents_arr: TEntTypeIdx[], divisions: number, method: _ELoftMethod): TEntTypeIdx[] {\r\n    const posis_arrs_i: number[][] = [];\r\n    let num_posis = 0;\r\n    for (const ents of ents_arr) {\r\n        const [ent_type, index]: TEntTypeIdx = ents as TEntTypeIdx;\r\n        const posis_i: number[] = __model__.geom.query.navAnyToPosi(ent_type, index);\r\n        if (posis_arrs_i.length === 0) { num_posis = posis_i.length; }\r\n        if (posis_i.length !== num_posis) {\r\n            throw new Error('make.Loft: Number of positions is not consistent.');\r\n        }\r\n        posis_arrs_i.push(posis_i);\r\n    }\r\n    const is_closed: boolean = method === _ELoftMethod.CLOSED_STRINGERS;\r\n    if (is_closed) {\r\n        posis_arrs_i.push(posis_arrs_i[0]);\r\n    }\r\n    const stringer_plines_i: number[] = [];\r\n    for (let i = 0; i < num_posis; i++) {\r\n        const stringer_posis_i: number[] = [];\r\n        for (let j = 0; j < posis_arrs_i.length - 1; j++) {\r\n            stringer_posis_i.push(posis_arrs_i[j][i]);\r\n            if (divisions > 0) {\r\n                const xyz1: Txyz = __model__.attribs.query.getPosiCoords(posis_arrs_i[j][i]);\r\n                const xyz2: Txyz = __model__.attribs.query.getPosiCoords(posis_arrs_i[j + 1][i]);\r\n                const vec: Txyz = vecDiv(vecFromTo(xyz1, xyz2), divisions);\r\n                for (let k = 1; k < divisions; k++) {\r\n                    const new_xyz: Txyz = vecAdd(xyz1, vecMult(vec, k));\r\n                    const new_posi_i: number = __model__.geom.add.addPosi();\r\n                    __model__.attribs.add.setPosiCoords(new_posi_i, new_xyz);\r\n                    stringer_posis_i.push(new_posi_i);\r\n                }\r\n            }\r\n        }\r\n        if (!is_closed) {\r\n            stringer_posis_i.push(posis_arrs_i[posis_arrs_i.length - 1][i]);\r\n        }\r\n        const pline_i: number = __model__.geom.add.addPline(stringer_posis_i, is_closed);\r\n        stringer_plines_i.push(pline_i);\r\n    }\r\n    return stringer_plines_i.map( pline_i => [EEntType.PLINE, pline_i]) as TEntTypeIdx[];\r\n}\r\nfunction _loftRibs(__model__: GIModel, ents_arr: TEntTypeIdx[], divisions: number, method: _ELoftMethod): TEntTypeIdx[] {\r\n    const posis_arrs_i: number[][] = [];\r\n    let num_posis = 0;\r\n    for (const ents of ents_arr) {\r\n        const [ent_type, index]: TEntTypeIdx = ents as TEntTypeIdx;\r\n        const posis_i: number[] = __model__.geom.query.navAnyToPosi(ent_type, index);\r\n        if (posis_arrs_i.length === 0) { num_posis = posis_i.length; }\r\n        if (posis_i.length !== num_posis) {\r\n            throw new Error('make.Loft: Number of positions is not consistent.');\r\n        }\r\n        posis_arrs_i.push(posis_i);\r\n    }\r\n    const is_closed: boolean = method === _ELoftMethod.CLOSED_RIBS;\r\n    if (is_closed) {\r\n        posis_arrs_i.push(posis_arrs_i[0]);\r\n    }\r\n    let ribs_is_closed = false;\r\n    switch (ents_arr[0][0]) { // check if the first entity is closed\r\n        case EEntType.PGON:\r\n        case EEntType.FACE:\r\n            ribs_is_closed = true;\r\n            break;\r\n        case EEntType.PLINE:\r\n            const wire_i: number = __model__.geom.query.navPlineToWire(ents_arr[0][1]);\r\n            ribs_is_closed = __model__.geom.query.istWireClosed(wire_i);\r\n            break;\r\n        case EEntType.WIRE:\r\n            ribs_is_closed = __model__.geom.query.istWireClosed(ents_arr[0][1]);\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n    const rib_plines_i: number[] = [];\r\n    for (let i = 0; i < posis_arrs_i.length - 1; i++) {\r\n        const pline_i: number = __model__.geom.add.addPline(posis_arrs_i[i], ribs_is_closed);\r\n        rib_plines_i.push(pline_i);\r\n        if (divisions > 0) {\r\n            const xyzs1: Txyz[] = posis_arrs_i[i].map(posi_i => __model__.attribs.query.getPosiCoords(posi_i));\r\n            const xyzs2: Txyz[] = posis_arrs_i[i + 1].map(posi_i => __model__.attribs.query.getPosiCoords(posi_i));\r\n            const vecs: Txyz[] = [];\r\n            for (let k = 0; k < num_posis; k++) {\r\n                const vec: Txyz = vecDiv(vecFromTo(xyzs1[k], xyzs2[k]), divisions);\r\n                vecs.push(vec);\r\n            }\r\n            for (let j = 1; j < divisions; j++) {\r\n                const rib_posis_i: number[] = [];\r\n                for (let k = 0; k < num_posis; k++) {\r\n                    const new_xyz: Txyz = vecAdd(xyzs1[k], vecMult(vecs[k], j));\r\n                    const new_posi_i: number = __model__.geom.add.addPosi();\r\n                    __model__.attribs.add.setPosiCoords(new_posi_i, new_xyz);\r\n                    rib_posis_i.push(new_posi_i);\r\n                }\r\n                const new_rib_pline_i: number = __model__.geom.add.addPline(rib_posis_i, ribs_is_closed);\r\n                rib_plines_i.push(new_rib_pline_i);\r\n            }\r\n        }\r\n    }\r\n    if (!is_closed) {\r\n        const pline_i: number = __model__.geom.add.addPline(posis_arrs_i[posis_arrs_i.length - 1], ribs_is_closed);\r\n        rib_plines_i.push(pline_i);\r\n    }\r\n    return rib_plines_i.map( pline_i => [EEntType.PLINE, pline_i]) as TEntTypeIdx[];\r\n}\r\nfunction _loft(__model__: GIModel, ents_arrs: TEntTypeIdx[]|TEntTypeIdx[][], divisions: number, method: _ELoftMethod): TEntTypeIdx[] {\r\n    const depth: number = getArrDepth(ents_arrs);\r\n    if (depth === 2) {\r\n        const ents_arr: TEntTypeIdx[] = ents_arrs as TEntTypeIdx[];\r\n        switch (method) {\r\n            case _ELoftMethod.OPEN_QUADS:\r\n            case _ELoftMethod.CLOSED_QUADS:\r\n                return _loftQuads(__model__, ents_arr, divisions, method);\r\n            case _ELoftMethod.OPEN_STRINGERS:\r\n            case _ELoftMethod.CLOSED_STRINGERS:\r\n                return _loftStringers(__model__, ents_arr, divisions, method);\r\n            case _ELoftMethod.OPEN_RIBS:\r\n            case _ELoftMethod.CLOSED_RIBS:\r\n                return _loftRibs(__model__, ents_arr, divisions, method);\r\n            default:\r\n                break;\r\n        }\r\n    } else if (depth === 3) {\r\n        const all_loft_ents: TEntTypeIdx[] = [];\r\n        for (const ents_arr of ents_arrs  as TEntTypeIdx[][]) {\r\n            const loft_ents: TEntTypeIdx[] = _loft(__model__, ents_arr, divisions, method);\r\n            loft_ents.forEach( loft_ent => all_loft_ents.push(loft_ent) );\r\n        }\r\n        return all_loft_ents;\r\n    }\r\n}\r\n/**\r\n * Lofts between entities.\r\n * ~\r\n * The geometry that is generated depends on the method that is selected.\r\n * The 'loft_quads' methods will generate polygons.\r\n * The 'loft_stringers' and 'loft_ribs' methods will generate polylines.\r\n *\r\n * @param __model__\r\n * @param entities List of entities, or list of lists of entities.\r\n * @param method Enum, if 'closed', then close the loft back to the first entity in the list.\r\n * @returns Entities, a list of new polygons or polylines resulting from the loft.\r\n * @example quads = make.Loft([polyline1,polyline2,polyline3], 1, 'open_quads')\r\n * @example_info Creates quad polygons lofting between polyline1, polyline2, polyline3.\r\n * @example quads = make.Loft([polyline1,polyline2,polyline3], 1, 'closed_quads')\r\n * @example_info Creates quad polygons lofting between polyline1, polyline2, polyline3, and back to polyline1.\r\n * @example quads = make.Loft([ [polyline1,polyline2], [polyline3,polyline4] ] , 1, 'open_quads')\r\n * @example_info Creates quad polygons lofting first between polyline1 and polyline2, and then between polyline3 and polyline4.\r\n */\r\nexport function Loft(__model__: GIModel, entities: TId[]|TId[][], divisions: number, method: _ELoftMethod): TId[] {\r\n    // --- Error Check ---\r\n    const ents_arr = checkIDs('make.Loft', 'entities', entities,\r\n        [IDcheckObj.isIDList, IDcheckObj.isIDList_list],\r\n        [EEntType.EDGE, EEntType.WIRE, EEntType.FACE, EEntType.PLINE, EEntType.PGON]) as TEntTypeIdx[]|TEntTypeIdx[][];\r\n    // --- Error Check ---\r\n    const new_ents_arr: TEntTypeIdx[] = _loft(__model__, ents_arr, divisions, method);\r\n    return idsMake(new_ents_arr) as TId[];\r\n}\r\n// The old loft\r\n// export function _Loft(__model__: GIModel, edges: TId[], method: _ELoftMethod): TId[] {\r\n//     // --- Error Check ---\r\n//     const ents_arr = checkIDs('make.Loft', 'edges', edges,\r\n//         [IDcheckObj.isIDList], [EEntType.EDGE, EEntType.WIRE, EEntType.FACE, EEntType.PLINE, EEntType.PGON]) as TEntTypeIdx[];\r\n//     // --- Error Check ---\r\n//     const new_ents_arr: TEntTypeIdx[] = _loft(__model__, ents_arr, method);\r\n//     return idsMake(new_ents_arr) as TId[];\r\n// }\r\n// ================================================================================================\r\nexport enum _EExtrudeMethod {\r\n    QUADS =  'quads',\r\n    STRINGERS = 'stringers',\r\n    RIBS = 'ribs'\r\n}\r\nfunction _extrudeColl(__model__: GIModel, index: number,\r\n        extrude_vec: Txyz, divisions: number, method: _EExtrudeMethod): TEntTypeIdx[] {\r\n    const points_i: number[] = __model__.geom.query.navCollToPoint(index);\r\n    const res1 = points_i.map( point_i => _extrude(__model__, [EEntType.POINT, point_i], extrude_vec, divisions, method));\r\n    const plines_i: number[] = __model__.geom.query.navCollToPline(index);\r\n    const res2 = plines_i.map( pline_i => _extrude(__model__, [EEntType.PLINE, pline_i], extrude_vec, divisions, method));\r\n    const pgons_i: number[] = __model__.geom.query.navCollToPgon(index);\r\n    const res3 = pgons_i.map( pgon_i => _extrude(__model__, [EEntType.PGON, pgon_i], extrude_vec, divisions, method));\r\n    return [].concat(res1, res2, res3);\r\n}\r\nfunction _extrudeDim0(__model__: GIModel, ent_type: number, index: number, extrude_vec: Txyz, divisions: number): TEntTypeIdx[] {\r\n    const extrude_vec_div: Txyz = vecDiv(extrude_vec, divisions);\r\n    const exist_posi_i: number = __model__.geom.query.navAnyToPosi(ent_type, index)[0];\r\n    const xyz: Txyz = __model__.attribs.query.getPosiCoords(exist_posi_i);\r\n    const strip_posis_i: number[] = [exist_posi_i];\r\n    for (let i = 1; i < divisions + 1; i++) {\r\n        const strip_posi_i: number = __model__.geom.add.addPosi();\r\n        const move_xyz = vecMult(extrude_vec_div, i);\r\n        __model__.attribs.add.setPosiCoords(strip_posi_i, vecAdd(xyz, move_xyz));\r\n        strip_posis_i.push(strip_posi_i);\r\n    }\r\n    // loft between the positions and create a single polyline\r\n    const pline_i: number = __model__.geom.add.addPline(strip_posis_i);\r\n    return [[EEntType.PLINE, pline_i]];\r\n}\r\nfunction _extrudeQuads(__model__: GIModel, ent_type: number, index: number, extrude_vec: Txyz, divisions: number): TEntTypeIdx[] {\r\n    const new_pgons_i: number[] = [];\r\n    const extrude_vec_div: Txyz = vecDiv(extrude_vec, divisions);\r\n    const edges_i: number[] = __model__.geom.query.navAnyToEdge(ent_type, index);\r\n    const strip_posis_map: Map<number, number[]> = new Map();\r\n    for (const edge_i of edges_i) {\r\n        // get exist posis_i\r\n        const exist_posis_i: number[] = __model__.geom.query.navAnyToPosi(EEntType.EDGE, edge_i);\r\n        // create the new posis strip if necessary\r\n        for (const exist_posi_i of exist_posis_i) {\r\n            if (strip_posis_map.get(exist_posi_i) === undefined) {\r\n                const xyz: Txyz = __model__.attribs.query.getPosiCoords(exist_posi_i);\r\n                const strip_posis_i: number[] = [exist_posi_i];\r\n                for (let i = 1; i < divisions + 1; i++) {\r\n                    const strip_posi_i: number = __model__.geom.add.addPosi();\r\n                    const move_xyz = vecMult(extrude_vec_div, i);\r\n                    __model__.attribs.add.setPosiCoords(strip_posi_i, vecAdd(xyz, move_xyz));\r\n                    strip_posis_i.push(strip_posi_i);\r\n                }\r\n                strip_posis_map.set(exist_posi_i, strip_posis_i);\r\n            }\r\n        }\r\n        // get the two strips and make polygons\r\n        const strip1_posis_i: number[] = strip_posis_map.get(exist_posis_i[0]);\r\n        const strip2_posis_i: number[] = strip_posis_map.get(exist_posis_i[1]);\r\n        for (let i = 0; i < strip1_posis_i.length - 1; i++) {\r\n            const c1: number = strip1_posis_i[i];\r\n            const c2: number = strip2_posis_i[i];\r\n            const c3: number = strip2_posis_i[i + 1];\r\n            const c4: number = strip1_posis_i[i + 1];\r\n            const pgon_i: number = __model__.geom.add.addPgon([c1, c2, c3, c4]);\r\n            new_pgons_i.push(pgon_i);\r\n        }\r\n    }\r\n    // cap the top\r\n    if (isDim2(ent_type)) { // create a top -> polygon\r\n        const face_i: number = isFace(ent_type) ? index : __model__.geom.query.navPgonToFace(index);\r\n        const cap_pgon_i: number = _extrudeCap(__model__, face_i, strip_posis_map, divisions);\r\n        new_pgons_i.push(cap_pgon_i);\r\n    }\r\n    return new_pgons_i.map(pgon_i => [EEntType.PGON, pgon_i] as TEntTypeIdx);\r\n}\r\nfunction _extrudeStringers(__model__: GIModel, ent_type: number, index: number, extrude_vec: Txyz, divisions: number): TEntTypeIdx[] {\r\n    const new_plines_i: number[] = [];\r\n    const extrude_vec_div: Txyz = vecDiv(extrude_vec, divisions);\r\n    const edges_i: number[] = __model__.geom.query.navAnyToEdge(ent_type, index);\r\n    const strip_posis_map: Map<number, number[]> = new Map();\r\n    for (const edge_i of edges_i) {\r\n        // get exist posis_i\r\n        const exist_posis_i: number[] = __model__.geom.query.navAnyToPosi(EEntType.EDGE, edge_i);\r\n        // create the new posis strip if necessary\r\n        for (const exist_posi_i of exist_posis_i) {\r\n            if (strip_posis_map.get(exist_posi_i) === undefined) {\r\n                const xyz: Txyz = __model__.attribs.query.getPosiCoords(exist_posi_i);\r\n                const strip_posis_i: number[] = [exist_posi_i];\r\n                for (let i = 1; i < divisions + 1; i++) {\r\n                    const strip_posi_i: number = __model__.geom.add.addPosi();\r\n                    const move_xyz = vecMult(extrude_vec_div, i);\r\n                    __model__.attribs.add.setPosiCoords(strip_posi_i, vecAdd(xyz, move_xyz));\r\n                    strip_posis_i.push(strip_posi_i);\r\n                }\r\n                strip_posis_map.set(exist_posi_i, strip_posis_i);\r\n            }\r\n        }\r\n    }\r\n    // make the stringers\r\n    strip_posis_map.forEach(strip_posis_i => {\r\n        const pline_i: number = __model__.geom.add.addPline(strip_posis_i);\r\n        new_plines_i.push(pline_i);\r\n    });\r\n    // return the stringers\r\n    return new_plines_i.map(pline_i => [EEntType.PLINE, pline_i] as TEntTypeIdx);\r\n}\r\nfunction _extrudeRibs(__model__: GIModel, ent_type: number, index: number, extrude_vec: Txyz, divisions: number): TEntTypeIdx[] {\r\n    const new_plines_i: number[] = [];\r\n    const extrude_vec_div: Txyz = vecDiv(extrude_vec, divisions);\r\n    const edges_i: number[] = __model__.geom.query.navAnyToEdge(ent_type, index);\r\n    const strip_posis_map: Map<number, number[]> = new Map();\r\n    for (const edge_i of edges_i) {\r\n        // get exist posis_i\r\n        const exist_posis_i: number[] = __model__.geom.query.navAnyToPosi(EEntType.EDGE, edge_i);\r\n        // create the new posis strip if necessary\r\n        for (const exist_posi_i of exist_posis_i) {\r\n            if (strip_posis_map.get(exist_posi_i) === undefined) {\r\n                const xyz: Txyz = __model__.attribs.query.getPosiCoords(exist_posi_i);\r\n                const strip_posis_i: number[] = [exist_posi_i];\r\n                for (let i = 1; i < divisions + 1; i++) {\r\n                    const strip_posi_i: number = __model__.geom.add.addPosi();\r\n                    const move_xyz = vecMult(extrude_vec_div, i);\r\n                    __model__.attribs.add.setPosiCoords(strip_posi_i, vecAdd(xyz, move_xyz));\r\n                    strip_posis_i.push(strip_posi_i);\r\n                }\r\n                strip_posis_map.set(exist_posi_i, strip_posis_i);\r\n            }\r\n        }\r\n    }\r\n    // make an array of ents to process as ribs\r\n    let ribs_is_closed = false;\r\n    const ribs_posis_i: number[][] = [];\r\n    switch (ent_type) { // check if the entity is closed\r\n        case EEntType.PGON:\r\n        case EEntType.FACE:\r\n            ribs_is_closed = true;\r\n            const face_wires_i: number[] = __model__.geom.query.navAnyToWire(ent_type, index);\r\n            for (const face_wire_i of face_wires_i) {\r\n                const face_wire_posis_i: number[] = __model__.geom.query.navAnyToPosi(EEntType.WIRE, face_wire_i);\r\n                ribs_posis_i.push(face_wire_posis_i);\r\n            }\r\n            break;\r\n        case EEntType.PLINE:\r\n            const pline_wire_i: number = __model__.geom.query.navPlineToWire(index);\r\n            const pline_wire_posis_i: number[] = __model__.geom.query.navAnyToPosi(EEntType.WIRE, pline_wire_i);\r\n            ribs_posis_i.push(pline_wire_posis_i);\r\n            ribs_is_closed = __model__.geom.query.istWireClosed(pline_wire_i);\r\n            break;\r\n        case EEntType.WIRE:\r\n            const wire_posis_i: number[] = __model__.geom.query.navAnyToPosi(EEntType.WIRE, index);\r\n            ribs_posis_i.push(wire_posis_i);\r\n            ribs_is_closed = __model__.geom.query.istWireClosed(index);\r\n            break;\r\n        default:\r\n            const posis_i: number[] = __model__.geom.query.navAnyToPosi(ent_type, index);\r\n            ribs_posis_i.push(posis_i);\r\n            break;\r\n    }\r\n    // make the ribs\r\n    for (let i = 0; i < divisions + 1; i++) {\r\n        for (const rib_posis_i of ribs_posis_i) {\r\n            const mapped_rib_posis_i: number[] = rib_posis_i.map( rib_posi_i => strip_posis_map.get(rib_posi_i)[i] );\r\n            const pline_i: number = __model__.geom.add.addPline(mapped_rib_posis_i, ribs_is_closed);\r\n            new_plines_i.push(pline_i);\r\n        }\r\n    }\r\n    // return the ribs\r\n    return new_plines_i.map(pline_i => [EEntType.PLINE, pline_i] as TEntTypeIdx);\r\n}\r\nfunction _extrudeCap(__model__: GIModel, index: number, strip_posis_map: Map<number, number[]>, divisions: number): number {\r\n    const face_i: number = __model__.geom.query.navPgonToFace(index);\r\n    // get positions on boundary\r\n    const old_wire_i: number = __model__.geom.query.getFaceBoundary(face_i);\r\n    const old_posis_i: number[] = __model__.geom.query.navAnyToPosi(EEntType.WIRE, old_wire_i);\r\n    const new_posis_i: number[] = old_posis_i.map(old_posi_i => strip_posis_map.get(old_posi_i)[divisions]);\r\n    // get positions for holes\r\n    const old_holes_wires_i: number[] = __model__.geom.query.getFaceHoles(face_i);\r\n    const new_holes_posis_i: number[][] = [];\r\n    for (const old_hole_wire_i of old_holes_wires_i) {\r\n        const old_hole_posis_i: number[] = __model__.geom.query.navAnyToPosi(EEntType.WIRE, old_hole_wire_i);\r\n        const new_hole_posis_i: number[] = old_hole_posis_i.map(old_posi_i => strip_posis_map.get(old_posi_i)[divisions]);\r\n        new_holes_posis_i.push(new_hole_posis_i);\r\n    }\r\n    // make new polygon\r\n    const pgon_i: number = __model__.geom.add.addPgon( new_posis_i, new_holes_posis_i );\r\n    return pgon_i;\r\n}\r\nfunction _extrude(__model__: GIModel, ents_arr: TEntTypeIdx|TEntTypeIdx[],\r\n        dist: number|Txyz, divisions: number, method: _EExtrudeMethod): TEntTypeIdx[] {\r\n    const extrude_vec: Txyz = (Array.isArray(dist) ? dist : [0, 0, dist]) as Txyz;\r\n    if (getArrDepth(ents_arr) === 1) {\r\n        const [ent_type, index]: TEntTypeIdx = ents_arr as TEntTypeIdx;\r\n        // check if this is a collection, call this function again\r\n        if (isColl(ent_type)) {\r\n            return _extrudeColl(__model__, index, extrude_vec, divisions, method);\r\n        }\r\n        // check if this is a position, a vertex, or a point -> pline\r\n        if (isDim0(ent_type)) {\r\n            return _extrudeDim0(__model__, ent_type, index, extrude_vec, divisions);\r\n        }\r\n        // extrude edges -> polygons\r\n        switch (method) {\r\n            case _EExtrudeMethod.QUADS:\r\n                return _extrudeQuads(__model__, ent_type, index, extrude_vec, divisions);\r\n            case _EExtrudeMethod.STRINGERS:\r\n                return _extrudeStringers(__model__, ent_type, index, extrude_vec, divisions);\r\n            case _EExtrudeMethod.RIBS:\r\n                return _extrudeRibs(__model__, ent_type, index, extrude_vec, divisions);\r\n            default:\r\n                throw new Error('Extrude method not recognised.');\r\n        }\r\n    } else {\r\n        const new_ents_arr: TEntTypeIdx[] = [];\r\n        (ents_arr as TEntTypeIdx[]).forEach(ent_arr => {\r\n            const result = _extrude(__model__, ent_arr, extrude_vec, divisions, method);\r\n            result.forEach( new_ent_arr => new_ents_arr.push(new_ent_arr));\r\n        });\r\n        return new_ents_arr;\r\n    }\r\n}\r\n/**\r\n * Extrudes geometry by distance or by vector.\r\n * - Extrusion of a position, vertex, or point produces polylines;\r\n * - Extrusion of an edge, wire, or polyline produces polygons;\r\n * - Extrusion of a face or polygon produces polygons, capped at the top.\r\n *\r\n * @param __model__\r\n * @param entities Vertex, edge, wire, face, position, point, polyline, polygon, collection.\r\n * @param distance Number or vector. If number, assumed to be [0,0,value] (i.e. extrusion distance in z-direction).\r\n * @param divisions Number of divisions to divide extrusion by. Minimum is 1.\r\n * @param method Enum, when extruding edges, select quads, stringers, or ribs\r\n * @returns Entities, a list of new polygons or polylines resulting from the extrude.\r\n * @example extrusion1 = make.Extrude(point1, 10, 2, 'quads')\r\n * @example_info Creates a polyline of total length 10 (with two edges of length 5 each) in the z-direction.\r\n * In this case, the 'quads' setting is ignored.\r\n * @example extrusion2 = make.Extrude(polygon1, [0,5,0], 1, 'quads')\r\n * @example_info Extrudes polygon1 by 5 in the y-direction, creating a list of quad surfaces.\r\n */\r\nexport function Extrude(__model__: GIModel, entities: TId|TId[],\r\n        distance: number|Txyz, divisions: number, method: _EExtrudeMethod): TId|TId[] {\r\n    // --- Error Check ---\r\n    const fn_name = 'make.Extrude';\r\n    const ents_arr =  checkIDs(fn_name, 'entities', entities,\r\n        [IDcheckObj.isID, IDcheckObj.isIDList],\r\n        [EEntType.VERT, EEntType.EDGE, EEntType.WIRE, EEntType.FACE,\r\n         EEntType.POSI, EEntType.POINT, EEntType.PLINE, EEntType.PGON, EEntType.COLL]) as TEntTypeIdx|TEntTypeIdx[];\r\n    checkCommTypes(fn_name, 'dist', distance, [TypeCheckObj.isNumber, TypeCheckObj.isVector]);\r\n    checkCommTypes(fn_name, 'divisions', divisions, [TypeCheckObj.isInt]);\r\n    // --- Error Check ---\r\n    const new_ents_arr: TEntTypeIdx[] = _extrude(__model__, ents_arr, distance, divisions, method);\r\n    if (!Array.isArray(entities) && new_ents_arr.length === 1) {\r\n        return idsMake(new_ents_arr[0]) as TId;\r\n    } else {\r\n        return idsMake(new_ents_arr) as TId|TId[];\r\n    }\r\n}\r\n// the old extrude\r\n// export function _Extrude(__model__: GIModel, entities: TId|TId[], dist: number|Txyz, divisions: number): TId|TId[] {\r\n//     // --- Error Check ---\r\n//     const fn_name = 'make.Extrude';\r\n//     const ents_arr =  checkIDs(fn_name, 'entities', entities,\r\n//         [IDcheckObj.isID, IDcheckObj.isIDList],\r\n//         [EEntType.VERT, EEntType.EDGE, EEntType.WIRE, EEntType.FACE, EEntType.POSI,\r\n//          EEntType.POINT, EEntType.PLINE, EEntType.PGON, EEntType.COLL]) as TEntTypeIdx|TEntTypeIdx[];\r\n//     checkCommTypes(fn_name, 'dist', dist, [TypeCheckObj.isNumber, TypeCheckObj.isVector]);\r\n//     checkCommTypes(fn_name, 'divisions', divisions, [TypeCheckObj.isInt]);\r\n//     // --- Error Check ---\r\n//     const new_ents_arr: TEntTypeIdx[] = _extrude(__model__, ents_arr, dist, divisions);\r\n//     if (!Array.isArray(entities) && new_ents_arr.length === 1) {\r\n//         return idsMake(new_ents_arr[0]) as TId;\r\n//     } else {\r\n//         return idsMake(new_ents_arr) as TId|TId[];\r\n//     }\r\n// }\r\n// ================================================================================================\r\n/**\r\n * Joins polylines to polylines or polygons to polygons.\r\n * ~\r\n * New polylins or polygons are created. The original polyline or polygons are not affected.\r\n *\r\n * @param __model__\r\n * @param geometry Polylines or polygons.\r\n * @returns Entities, a list of new joined polylines or polygons.\r\n * @example joined1 = make.Join([polyline1,polyline2])\r\n * @example_info Creates a new polyline by joining polyline1 and polyline2. Geometries must be of the same type.\r\n */\r\nexport function _Join(__model__: GIModel, geometry: TId[]): TId {\r\n    // --- Error Check ---\r\n    // const ents_arr =  checkIDs('make.Join', 'geometry', geometry, [IDcheckObj.isIDList], [EEntType.PLINE, EEntType.PGON]);\r\n    // --- Error Check ---\r\n    throw new Error('Not implemented.'); return null;\r\n}\r\n// ================================================================================================\r\n// Divide edge modelling operation\r\nexport enum _EDivideMethod {\r\n    BY_NUMBER =  'by_number',\r\n    BY_LENGTH  =  'by_length',\r\n    BY_MIN_LENGTH  =  'by_min_length'\r\n}\r\nfunction _divideEdge(__model__: GIModel, edge_i: number, divisor: number, method: _EDivideMethod): number[] {\r\n    const posis_i: number[] = __model__.geom.query.navAnyToPosi(EEntType.EDGE, edge_i);\r\n    const start = __model__.attribs.query.getPosiCoords(posis_i[0]);\r\n    const end = __model__.attribs.query.getPosiCoords(posis_i[1]);\r\n    let new_xyzs: Txyz[];\r\n    if (method === _EDivideMethod.BY_NUMBER) {\r\n        new_xyzs = interpByNum(start, end, divisor - 1);\r\n    } else if (method === _EDivideMethod.BY_LENGTH) {\r\n        new_xyzs = interpByLen(start, end, divisor);\r\n    } else { // BY_MIN_LENGTH\r\n        const len: number = distance(start, end);\r\n        const num_div: number = Math.ceil(len / divisor);\r\n        new_xyzs = interpByNum(start, end, num_div - 1);\r\n    }\r\n    const new_edges_i: number[] = [];\r\n    let old_edge_i: number = edge_i;\r\n    for (const new_xyz of new_xyzs) {\r\n        const posi_i = __model__.geom.add.addPosi();\r\n        __model__.attribs.add.setPosiCoords(posi_i, new_xyz);\r\n        const new_edge_i: number = __model__.geom.modify.insertVertIntoWire(old_edge_i, posi_i);\r\n        new_edges_i.push(old_edge_i);\r\n        old_edge_i = new_edge_i;\r\n    }\r\n    new_edges_i.push(old_edge_i);\r\n    return new_edges_i;\r\n}\r\nfunction _divide(__model__: GIModel, ents_arr: TEntTypeIdx|TEntTypeIdx[], divisor: number, method: _EDivideMethod): TEntTypeIdx[] {\r\n    if (getArrDepth(ents_arr) === 1) {\r\n        const [ent_type, index]: TEntTypeIdx = ents_arr as TEntTypeIdx;\r\n        let exist_edges_i: number[];\r\n        if (!isEdge(ent_type)) {\r\n            exist_edges_i = __model__.geom.query.navAnyToEdge(ent_type, index).slice();\r\n        } else {\r\n            exist_edges_i = [index];\r\n        }\r\n        const all_new_edges_i: number[] = [];\r\n        for (const exist_edge_i of exist_edges_i) {\r\n            const new_edges_i: number[] = _divideEdge(__model__, exist_edge_i, divisor, method);\r\n            all_new_edges_i.push(...new_edges_i);\r\n        }\r\n        return all_new_edges_i.map(one_edge_i => [EEntType.EDGE, one_edge_i] as TEntTypeIdx);\r\n    } else {\r\n        return [].concat(...(ents_arr as TEntTypeIdx[]).map(one_edge => _divide(__model__, one_edge, divisor, method)));\r\n    }\r\n}\r\n/**\r\n * Divides edges in a set of shorter edges.\r\n * ~\r\n * If the 'by_number' method is selected, then each edge is divided into a fixed number of equal length shorter edges.\r\n * If the 'by length' method is selected, then each edge is divided into shorter edges of the specified length.\r\n * The length of the last segment will be the remainder.\r\n * If the 'by_min_length' method is selected,\r\n * then the edge is divided into the maximum number of shorter edges\r\n * that have a new length that is equal to or greater than the minimum.\r\n * ~\r\n * @param __model__\r\n * @param edges Edges, or entities from which edges can be extracted.\r\n * @param divisor Segment length or number of segments.\r\n * @param method Enum, select the method for dividing edges.\r\n * @returns Entities, a list of new edges resulting from the divide.\r\n * @example segments1 = make.Divide(edge1, 5, by_number)\r\n * @example_info Creates a list of 5 equal segments from edge1.\r\n * @example segments2 = make.Divide(edge1, 5, by_length)\r\n * @example_info If edge1 has length 13, creates from edge a list of two segments of length 5 and one segment of length 3.\r\n */\r\nexport function Divide(__model__: GIModel, edges: TId|TId[], divisor: number, method: _EDivideMethod): TId[] {\r\n    // --- Error Check ---\r\n    const fn_name = 'make.Divide';\r\n    const ents_arr = checkIDs('make.Copy', 'edges', edges,\r\n        [IDcheckObj.isID, IDcheckObj.isIDList], [EEntType.EDGE, EEntType.WIRE, EEntType.PLINE, EEntType.PGON]) as TEntTypeIdx|TEntTypeIdx[];\r\n    checkCommTypes(fn_name, 'divisor', divisor, [TypeCheckObj.isNumber]);\r\n    // --- Error Check ---\r\n    const new_ents_arr: TEntTypeIdx[] = _divide(__model__, ents_arr, divisor, method);\r\n    return idsMake(new_ents_arr) as TId[];\r\n}\r\n// ================================================================================================\r\n/**\r\n * Unweld vertices so that they do not share positions.\r\n * For the vertices of the specified entities, if they share positions with other entities in the model,\r\n * then those positions will be replaced with new positions.\r\n * This function performs a simple unweld.\r\n * That is, the vertices within the set of specified entities are not unwelded.\r\n * @param __model__\r\n * @param entities Vertex, edge, wire, face, point, polyline, polygon, collection.\r\n * @param method Enum; the method to use for unweld.\r\n * @returns Entities, a list of new positions resulting from the unweld.\r\n * @example mod.Unweld(polyline1)\r\n * @example_info Unwelds polyline1 from all ther entities that shares the same position.\r\n */\r\nexport function Unweld(__model__: GIModel, entities: TId|TId[]): TId[] {\r\n    // --- Error Check ---\r\n    let ents_arr = checkIDs('modify.Unweld', 'entities', entities, [IDcheckObj.isID, IDcheckObj.isIDList],\r\n                            [EEntType.VERT, EEntType.EDGE, EEntType.WIRE, EEntType.FACE,\r\n                            EEntType.POINT, EEntType.PLINE, EEntType.PGON, EEntType.COLL]);\r\n    // --- Error Check ---\r\n    if (!Array.isArray(ents_arr[0])) {\r\n        ents_arr = [ents_arr] as TEntTypeIdx[];\r\n    }\r\n    // get verts_i\r\n    const all_verts_i: number[] = []; // count number of posis\r\n    for (const ents of ents_arr) {\r\n        const verts_i: number[] = __model__.geom.query.navAnyToVert(ents[0], ents[1]);\r\n        for (const vert_i of verts_i) { all_verts_i.push(vert_i); }\r\n    }\r\n    const new_posis_i: number [] = __model__.geom.modify.unweldVerts(all_verts_i);\r\n    return new_posis_i.map( posi_i => idsMake([EEntType.POSI, posi_i]) ) as TId[];\r\n}\r\n// ================================================================================================\r\n// Explode\r\n\r\n// Pipe\r\n\r\n// Offset\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// ================================================================================================\r\nfunction _polygonHoles(__model__: GIModel, ents_arr: TEntTypeIdx[],\r\n    holes_ents_arr: TEntTypeIdx[]|TEntTypeIdx[][]): TEntTypeIdx {\r\nif (getArrDepth(holes_ents_arr) === 2) {\r\n    holes_ents_arr = [holes_ents_arr] as TEntTypeIdx[][];\r\n}\r\nconst posis_i: number[] = ents_arr.map(ent_arr => ent_arr[1]);\r\nconst holes_posis_i: number[][] = [];\r\nfor (const hole_ents_arr of holes_ents_arr as TEntTypeIdx[][]) {\r\n    holes_posis_i.push( hole_ents_arr.map(ent_arr => ent_arr[1]) );\r\n}\r\nconst pgon_i: number = __model__.geom.add.addPgon(posis_i, holes_posis_i);\r\nreturn [EEntType.PGON, pgon_i];\r\n}\r\n/**\r\n* Adds a single new polygon to the model with one or more holes.\r\n* @param __model__\r\n* @param positions List of positions.\r\n* @param hole_positions List of positions for the holes. For multiple holes, a list of list can provided.\r\n* @returns Entities, a list of new polygons.\r\n* @example polygon1 = make.Polygon([position1,position2,position3], [position4,position5,position6])\r\n* @example_info Creates a polygon with  a hole, with vertices in sequence from position1 to position6.\r\n*/\r\nfunction _PolygonHoles(__model__: GIModel, positions: TId[], hole_positions: TId[]|TId[][]): TId {\r\n// --- Error Check ---\r\nconst pgon_ents_arr = checkIDs('make.Polygon', 'positions', positions, [IDcheckObj.isIDList], [EEntType.POSI]) as TEntTypeIdx[];\r\nconst holes_ents_arr = checkIDs('make.Polygon', 'positions', hole_positions,\r\n    [IDcheckObj.isIDList, IDcheckObj.isIDList_list], [EEntType.POSI]) as TEntTypeIdx[]|TEntTypeIdx[][];\r\n// --- Error Check ---\r\nconst new_ent_arr: TEntTypeIdx = _polygonHoles(__model__, pgon_ents_arr, holes_ents_arr);\r\nconsole.log(__model__);\r\nreturn idsMake(new_ent_arr) as TId;\r\n}\r\n","/**\r\n * The `modify` module has functions for modifying existing entities in the model.\r\n * These functions do not make any new entities, but they may change attribute values.\r\n * All these functions all return void.\r\n */\r\n\r\n/**\r\n *\r\n */\r\n\r\nimport { GIModel } from '@libs/geo-info/GIModel';\r\nimport { TId, TPlane, Txyz, EEntType, TEntTypeIdx, EAttribPromote} from '@libs/geo-info/common';\r\nimport { getArrDepth, isColl, isPgon, isPline, isPoint, isPosi } from '@libs/geo-info/id';\r\nimport { vecAdd, vecSum, vecDiv } from '@libs/geom/vectors';\r\nimport { checkCommTypes, checkIDs, IDcheckObj, TypeCheckObj} from './_check_args';\r\nimport { rotateMatrix, multMatrix, scaleMatrix, mirrorMatrix, xfromSourceTargetMatrix } from '@libs/geom/matrix';\r\nimport { Matrix4 } from 'three';\r\n\r\n// ================================================================================================\r\n/**\r\n * Moves entities. The directio and distance if movement is specified as a vector.\r\n * ~\r\n * If only one vector is given, then all entities are moved by the same vector.\r\n * If a list of vectors is given, the each entity will be moved by a different vector.\r\n * In this case, the number of vectors should be equal to the number of entities.\r\n * ~\r\n * If a position is shared between entites that are being moved by different vectors,\r\n * then the position will be moved by the average of the vectors.\r\n *\r\n * @param __model__\r\n * @param entities An entity or list of entities.\r\n * @param vector A vector or a list of vectors.\r\n * @returns void\r\n * @example modify.Move(pline1, [1,2,3])\r\n * @example_info Moves pline1 by [1,2,3].\r\n * @example modify.Move([pos1, pos2, pos3], [[0,0,1], [0,0,1], [0,1,0]] )\r\n * @example_info Moves pos1 by [0,0,1], pos2 by [0,0,1], and pos3 by [0,1,0].\r\n * @example modify.Move([pgon1, pgon2], [1,2,3] )\r\n * @example_info Moves both pgon1 and pgon2 by [1,2,3].\r\n */\r\nexport function Move(__model__: GIModel, entities: TId|TId[], vectors: Txyz|Txyz[]): void {\r\n    // --- Error Check ---\r\n    const fn_name = 'modify.Move';\r\n    let ents_arr = checkIDs(fn_name, 'entities', entities, [IDcheckObj.isID, IDcheckObj.isIDList],\r\n                            [EEntType.POSI, EEntType.VERT, EEntType.EDGE, EEntType.WIRE,\r\n                            EEntType.FACE, EEntType.POINT, EEntType.PLINE, EEntType.PGON, EEntType.COLL]);\r\n    checkCommTypes(fn_name, 'vectors', vectors, [TypeCheckObj.isVector, TypeCheckObj.isVectorList]);\r\n    // --- Error Check ---\r\n    if (!Array.isArray(ents_arr[0])) {\r\n        ents_arr = [ents_arr] as TEntTypeIdx[];\r\n    }\r\n    if (getArrDepth(vectors) === 1) {\r\n        const posis_i: number[] = [];\r\n        const vec: Txyz = vectors as Txyz;\r\n        for (const ents of ents_arr) {\r\n            __model__.geom.query.navAnyToPosi(ents[0], ents[1]).forEach(posi_i => posis_i.push(posi_i));\r\n        }\r\n        const unique_posis_i: number[] = Array.from(new Set(posis_i));\r\n        for (const unique_posi_i of unique_posis_i) {\r\n            const old_xyz: Txyz = __model__.attribs.query.getPosiCoords(unique_posi_i);\r\n            const new_xyz: Txyz = vecAdd(old_xyz, vec);\r\n            __model__.attribs.add.setPosiCoords(unique_posi_i, new_xyz);\r\n        }\r\n    } else {\r\n        if (ents_arr.length !== vectors.length) {\r\n            throw new Error('If multiple vectors are given, then the number of vectors must be equal to the number of entities.');\r\n        }\r\n        const posis_i: number[] = [];\r\n        const vecs_map: Map<number, Txyz[]> = new Map();\r\n        for (let i = 0; i < ents_arr.length; i++) {\r\n            const [ent_type, index]: [EEntType, number] = ents_arr[i] as TEntTypeIdx;\r\n            const vec: Txyz = vectors[i] as Txyz;\r\n            const ent_posis_i: number [] = __model__.geom.query.navAnyToPosi(ent_type, index);\r\n            for (const ent_posi_i of ent_posis_i) {\r\n                posis_i.push(ent_posi_i);\r\n                if (! vecs_map.has(ent_posi_i)) {\r\n                    vecs_map.set(ent_posi_i, []);\r\n                }\r\n                vecs_map.get(ent_posi_i).push(vec);\r\n            }\r\n        }\r\n        for (const posi_i of posis_i) {\r\n            const old_xyz: Txyz = __model__.attribs.query.getPosiCoords(posi_i);\r\n            const vecs: Txyz[] = vecs_map.get(posi_i);\r\n            const vec: Txyz = vecDiv( vecSum( vecs ), vecs.length);\r\n            const new_xyz: Txyz = vecAdd(old_xyz, vec);\r\n            __model__.attribs.add.setPosiCoords(posi_i, new_xyz);\r\n        }\r\n    }\r\n    return; // specifies that nothing is returned\r\n}\r\n// ================================================================================================\r\n/**\r\n * Rotates entities on plane by angle.\r\n * @param __model__\r\n * @param entities Vertex, edge, wire, face, plane, position, point, polyline, polygon, collection.\r\n * @param origin A list of three numbers (or a position, point, or vertex).\r\n * @param axis A list of three numbers.\r\n * @param angle Angle (in radians).\r\n * @returns void\r\n * @example modify.Rotate(polyline1, plane1, PI)\r\n * @example_info Rotates polyline1 on plane1 by PI (i.e. 180 degrees).\r\n */\r\nexport function Rotate(__model__: GIModel, entities: TId|TId[], origin: Txyz|TId|TPlane, axis: Txyz, angle: number): void {\r\n    // --- Error Check ---\r\n    const fn_name = 'modify.Rotate';\r\n    let ents_arr = checkIDs(fn_name, 'entities', entities, [IDcheckObj.isID, IDcheckObj.isIDList],\r\n                            [EEntType.POSI, EEntType.VERT, EEntType.EDGE, EEntType.WIRE,\r\n                            EEntType.FACE, EEntType.POINT, EEntType.PLINE, EEntType.PGON, EEntType.COLL]);\r\n    const ori_ents_arr = checkCommTypes(fn_name, 'origin', origin, [TypeCheckObj.isOrigin, TypeCheckObj.isPlane]);\r\n    checkCommTypes(fn_name, 'axis', axis, [TypeCheckObj.isXYZlist]);\r\n    checkCommTypes(fn_name, 'angle', angle, [TypeCheckObj.isNumber]);\r\n    // --- Error Check ---\r\n    // handle geometry type\r\n    if (!Array.isArray(ents_arr[0])) {\r\n        ents_arr = [ents_arr] as TEntTypeIdx[];\r\n    }\r\n    // handle origin type\r\n    if (!Array.isArray(origin)) {\r\n        const origin_posi = __model__.geom.query.navAnyToPosi(ori_ents_arr[0], ori_ents_arr[1]);\r\n        origin = __model__.attribs.query.getPosiCoords(origin_posi[0]);\r\n    }\r\n    if (Array.isArray(origin) && Array.isArray(origin[0])) { // handles plane type\r\n        origin = origin[0];\r\n    }\r\n    // rotate all positions\r\n    const posis_i: number[] = [];\r\n    for (const ents of ents_arr) {\r\n        posis_i.push(...__model__.geom.query.navAnyToPosi(ents[0], ents[1]));\r\n    }\r\n    const unique_posis_i: number[] = Array.from(new Set(posis_i));\r\n    const matrix: Matrix4 = rotateMatrix(origin as [number, number, number], axis, angle);\r\n    for (const unique_posi_i of unique_posis_i) {\r\n        const old_xyz: Txyz = __model__.attribs.query.getPosiCoords(unique_posi_i);\r\n        const new_xyz: Txyz = multMatrix(old_xyz, matrix);\r\n        __model__.attribs.add.setPosiCoords(unique_posi_i, new_xyz);\r\n    }\r\n    return; // specifies that nothing is returned\r\n}\r\n// ================================================================================================\r\n/**\r\n * Scales entities on plane by factor.\r\n * @param __model__\r\n * @param entities Vertex, edge, wire, face, plane, position, point, polyline, polygon, collection.\r\n * @param origin Position, point, vertex, list of three numbers, plane.\r\n * @param scale Scale factor.\r\n * @returns void\r\n * @example modify.Scale(entities, plane1, 0.5)\r\n * @example_info Scales entities by 0.5 on plane1.\r\n */\r\nexport function Scale(__model__: GIModel, entities: TId|TId[], origin: TId|Txyz|TPlane, scale: number|Txyz): void {\r\n    // --- Error Check ---\r\n    const fn_name = 'modify.Scale';\r\n    let ents_arr = checkIDs(fn_name, 'entities', entities, [IDcheckObj.isID, IDcheckObj.isIDList],\r\n                            [EEntType.POSI, EEntType.VERT, EEntType.EDGE, EEntType.WIRE,\r\n                            EEntType.FACE, EEntType.POINT, EEntType.PLINE, EEntType.PGON, EEntType.COLL]);\r\n    const ori_ents_arr = checkCommTypes(fn_name, 'origin', origin, [TypeCheckObj.isOrigin, TypeCheckObj.isPlane]);\r\n    checkCommTypes(fn_name, 'scale', scale, [TypeCheckObj.isNumber, TypeCheckObj.isXYZlist]);\r\n    // --- Error Check ---\r\n    // handle geometry type\r\n    if (!Array.isArray(ents_arr[0])) {\r\n        ents_arr = [ents_arr] as TEntTypeIdx[];\r\n    }\r\n    // handle origin type\r\n    if (!Array.isArray(origin)) {\r\n        const origin_posi = __model__.geom.query.navAnyToPosi(ori_ents_arr[0], ori_ents_arr[1]);\r\n        origin = __model__.attribs.query.getPosiCoords(origin_posi[0]);\r\n    }\r\n    // handle scale type\r\n    if (!Array.isArray(scale)) {\r\n        scale = [scale, scale, scale];\r\n    }\r\n    // scale all positions\r\n    const posis_i: number[] = [];\r\n    for (const ents of ents_arr) {\r\n        posis_i.push(...__model__.geom.query.navAnyToPosi(ents[0], ents[1]));\r\n    }\r\n    const unique_posis_i: number[] = Array.from(new Set(posis_i));\r\n    const matrix: Matrix4 = scaleMatrix(origin, scale);\r\n    for (const unique_posi_i of unique_posis_i) {\r\n        const old_xyz: Txyz = __model__.attribs.query.getPosiCoords(unique_posi_i);\r\n        const new_xyz: Txyz = multMatrix(old_xyz, matrix);\r\n        __model__.attribs.add.setPosiCoords(unique_posi_i, new_xyz);\r\n    }\r\n    return; // specifies that nothing is returned\r\n}\r\n// ================================================================================================\r\n/**\r\n * Mirrors entities across plane.\r\n * @param __model__\r\n * @param entities Vertex, edge, wire, face, plane, position, point, polyline, polygon, collection.\r\n * @param origin Position, vertex, point, list of three numbers.\r\n * @param direction Vector or a list of three numbers.\r\n * @returns void\r\n * @example modify.Mirror(polygon1, plane1)\r\n * @example_info Mirrors polygon1 across plane1.\r\n */\r\nexport function Mirror(__model__: GIModel, entities: TId|TId[], origin: Txyz|TId, direction: Txyz): void {\r\n    // --- Error Check ---\r\n    const fn_name = 'modify.Mirror';\r\n    let ents_arr = checkIDs(fn_name, 'entities', entities, [IDcheckObj.isID, IDcheckObj.isIDList],\r\n                            [EEntType.POSI, EEntType.VERT, EEntType.EDGE, EEntType.WIRE,\r\n                            EEntType.FACE, EEntType.POINT, EEntType.PLINE, EEntType.PGON, EEntType.COLL]);\r\n    const ori_ents_arr = checkCommTypes(fn_name, 'origin', origin, [TypeCheckObj.isOrigin]);\r\n    checkCommTypes(fn_name, 'direction', direction, [TypeCheckObj.isVector]);\r\n    // --- Error Check ---\r\n\r\n    // handle geometry type\r\n    if (!Array.isArray(ents_arr[0])) {\r\n        ents_arr = [ents_arr] as TEntTypeIdx[];\r\n    }\r\n    // handle origin type\r\n    if (!Array.isArray(origin)) {\r\n        const [origin_ent_type, origin_index]: TEntTypeIdx = ori_ents_arr as TEntTypeIdx;\r\n        const origin_posi = __model__.geom.query.navAnyToPosi(origin_ent_type, origin_index);\r\n        origin = __model__.attribs.query.getPosiCoords(origin_posi[0]);\r\n    }\r\n    // mirror all positions\r\n    const posis_i: number[] = [];\r\n    for (const ents of ents_arr) {\r\n        const [ent_type, index]: TEntTypeIdx = ents as TEntTypeIdx;\r\n        posis_i.push(...__model__.geom.query.navAnyToPosi(ent_type, index));\r\n    }\r\n    const unique_posis_i: number[] = Array.from(new Set(posis_i));\r\n    const matrix: Matrix4 = mirrorMatrix(origin, direction);\r\n    for (const unique_posi_i of unique_posis_i) {\r\n        const old_xyz: Txyz = __model__.attribs.query.getPosiCoords(unique_posi_i);\r\n        const new_xyz: Txyz = multMatrix(old_xyz, matrix);\r\n        __model__.attribs.add.setPosiCoords(unique_posi_i, new_xyz);\r\n    }\r\n}\r\n// ================================================================================================\r\n/**\r\n * Transforms entities from one construction plane to another.\r\n * @param __model__\r\n * @param entities Vertex, edge, wire, face, position, point, polyline, polygon, collection.\r\n * @param from Plane defining target construction plane.\r\n * @param to Plane defining destination construction plane.\r\n * @returns void\r\n * @example modify.XForm(polygon1, plane1, plane2)\r\n * @example_info Transforms polygon1 from plane1 to plane2.\r\n */\r\nexport function XForm(__model__: GIModel, entities: TId|TId[], from: TPlane, to: TPlane): void {\r\n    // --- Error Check ---\r\n    const fn_name = 'modify.XForm';\r\n    let ents_arr = checkIDs(fn_name, 'entities', entities, [IDcheckObj.isID, IDcheckObj.isIDList],\r\n                            [EEntType.POSI, EEntType.VERT, EEntType.EDGE, EEntType.WIRE,\r\n                            EEntType.FACE, EEntType.POINT, EEntType.PLINE, EEntType.PGON, EEntType.COLL]);\r\n    checkCommTypes(fn_name, 'from', from, [TypeCheckObj.isPlane]);\r\n    checkCommTypes(fn_name, 'to', to, [TypeCheckObj.isPlane]);\r\n    // --- Error Check ---\r\n    // handle geometry type\r\n    if (!Array.isArray(ents_arr[0])) {\r\n        ents_arr = [ents_arr] as TEntTypeIdx[];\r\n    }\r\n\r\n    // xform all positions\r\n    const posis_i: number[] = [];\r\n    for (const ents of ents_arr) {\r\n        const [ent_type, index]: [EEntType, number] = ents as TEntTypeIdx;\r\n        posis_i.push(...__model__.geom.query.navAnyToPosi(ent_type, index));\r\n    }\r\n    const unique_posis_i: number[] = Array.from(new Set(posis_i));\r\n    const matrix: Matrix4 = xfromSourceTargetMatrix(from, to);\r\n    for (const unique_posi_i of unique_posis_i) {\r\n        const old_xyz: Txyz = __model__.attribs.query.getPosiCoords(unique_posi_i);\r\n        const new_xyz: Txyz = multMatrix(old_xyz, matrix);\r\n        __model__.attribs.add.setPosiCoords(unique_posi_i, new_xyz);\r\n    }\r\n}\r\n// ================================================================================================\r\nexport enum _EModifyCollectionMethod {\r\n    SET_PARENT_ENTITY = 'set_parent',\r\n    ADD_ENTITIES = 'add_entities',\r\n    REMOVE_ENTITIES = 'remove_entities'\r\n}\r\nfunction _collection(__model__: GIModel, coll_arr: TEntTypeIdx, ents_arr: TEntTypeIdx|TEntTypeIdx[], \r\n        method: _EModifyCollectionMethod): void {\r\n    const [_, coll_i]: TEntTypeIdx = coll_arr;\r\n    if (getArrDepth(ents_arr) === 1 && ents_arr.length) {\r\n        ents_arr = [ents_arr as TEntTypeIdx];\r\n    }\r\n    ents_arr = ents_arr as TEntTypeIdx[];\r\n    if (method === _EModifyCollectionMethod.SET_PARENT_ENTITY) {\r\n        if (ents_arr.length !== 1) {\r\n            throw new Error('Error setting collection parent. A collection can only have one parent.');\r\n        }\r\n        const [parent_ent_type, parent_coll_i]: TEntTypeIdx = ents_arr[0];\r\n        if (parent_ent_type !== EEntType.COLL) {\r\n            throw new Error('Error setting collection parent. The parent must be another collection.');\r\n        }\r\n        __model__.geom.modify.setCollParent(coll_i, parent_coll_i);\r\n        return;\r\n    }\r\n    const points_i: number[] = [];\r\n    const plines_i: number[] = [];\r\n    const pgons_i: number[] = [];\r\n    for (const [ent_type, ent_i] of ents_arr) {\r\n        switch (ent_type) {\r\n            case EEntType.POINT:\r\n                points_i.push(ent_i);\r\n                break;\r\n            case EEntType.PLINE:\r\n                plines_i.push(ent_i);\r\n                break;\r\n            case EEntType.PGON:\r\n                pgons_i.push(ent_i);\r\n                break;\r\n            default:\r\n                throw new Error('Error modifying collection. A collection can only contain points, polylines, and polygons.');\r\n        }\r\n    }\r\n    if (method === _EModifyCollectionMethod.ADD_ENTITIES) {\r\n        __model__.geom.modify.collAddEnts(coll_i, points_i, plines_i, pgons_i);\r\n    } else { // Remove entities\r\n        __model__.geom.modify.collRemoveEnts(coll_i, points_i, plines_i, pgons_i);\r\n    }\r\n}\r\n/**\r\n * Modifies a collection.\r\n * ~\r\n * If the method is 'set_parent', then the parent can be updated by specifying a parent collection.\r\n * If the method is 'add_entities', then entities are added to the collection.\r\n * If the method is 'remove_entities', then entities are removed from the collection.\r\n * If adding or removing entities, then the entities must be points, polylines, or polygons.\r\n * \r\n * @param __model__\r\n * @param coll The collection to be updated.\r\n * @param entities Points, polylines, and polygons, or a single collection.\r\n * @param method Enum, the method to use when modifying the collection.\r\n * @returns void\r\n */\r\nexport function Collection(__model__: GIModel, coll: TId, entities: TId|TId[], method: _EModifyCollectionMethod): void {\r\n    // --- Error Check ---\r\n    const coll_arr = checkIDs('modify.Collection', 'coll', coll, [IDcheckObj.isID], [EEntType.COLL]) as TEntTypeIdx;\r\n    const ents_arr = checkIDs('modify.Collection', 'entities', entities,\r\n        [IDcheckObj.isID, IDcheckObj.isIDList],\r\n        [EEntType.POINT, EEntType.PLINE, EEntType.PGON, EEntType.COLL]) as TEntTypeIdx|TEntTypeIdx[];\r\n    // --- Error Check ---\r\n    _collection(__model__, coll_arr, ents_arr, method);\r\n}\r\n// ================================================================================================\r\nfunction _reverse(__model__: GIModel, ents_arr: TEntTypeIdx|TEntTypeIdx[]): void {\r\n    if (getArrDepth(ents_arr) === 1 && ents_arr.length) {\r\n        const [ent_type, index]: TEntTypeIdx = ents_arr as TEntTypeIdx;\r\n        const wires_i: number[] = __model__.geom.query.navAnyToWire(ent_type, index);\r\n        wires_i.forEach( wire_i => __model__.geom.modify.reverse(wire_i) );\r\n    } else {\r\n        (ents_arr as TEntTypeIdx[]).forEach( ent_arr => _reverse(__model__, ent_arr) );\r\n    }\r\n}\r\n/**\r\n * Reverses direction of entities.\r\n * @param __model__\r\n * @param entities Wire, face, polyline, polygon.\r\n * @returns void\r\n * @example modify.Reverse(face1)\r\n * @example_info Flips face1 and reverses its normal.\r\n * @example modify.Reverse(polyline1)\r\n * @example_info Reverses the order of vertices to reverse the direction of the polyline.\r\n */\r\nexport function Reverse(__model__: GIModel, entities: TId|TId[]): void {\r\n    // --- Error Check ---\r\n    const ents_arr = checkIDs('modify.Reverse', 'entities', entities,\r\n        [IDcheckObj.isID, IDcheckObj.isIDList],\r\n        [EEntType.WIRE, EEntType.PLINE, EEntType.FACE, EEntType.PGON])  as TEntTypeIdx|TEntTypeIdx[];\r\n    // --- Error Check ---\r\n    _reverse(__model__, ents_arr);\r\n}\r\n// ================================================================================================\r\nfunction _shift(__model__: GIModel, ents_arr: TEntTypeIdx|TEntTypeIdx[], offset: number): void {\r\n    if (getArrDepth(ents_arr) === 1 && ents_arr.length) {\r\n        const [ent_type, index]: TEntTypeIdx = ents_arr as TEntTypeIdx;\r\n        const wires_i: number[] = __model__.geom.query.navAnyToWire(ent_type, index);\r\n        wires_i.forEach( wire_i => __model__.geom.modify.shift(wire_i, offset) );\r\n    } else {\r\n        (ents_arr as TEntTypeIdx[]).forEach( ent_arr => _shift(__model__, ent_arr, offset) );\r\n    }\r\n}\r\n/**\r\n * Shifts the order of the edges in a closed wire.\r\n * ~\r\n * In a closed wire, any edge (or vertex) could be the first edge of the ring.\r\n * In some cases, it is useful to have an edge in a particular position in a ring.\r\n * This function allows the edges to be shifted either forwards or backwards around the ring.\r\n * The order of the edges in the ring will remain unchanged.\r\n *\r\n * @param __model__\r\n * @param entities Wire, face, polyline, polygon.\r\n * @returns void\r\n * @example modify.Shift(face1, 1)\r\n * @example_info Shifts the edges in the face wire, so that the every edge moves up by one position\r\n * in the ring. The last edge will become the first edge .\r\n * @example modify.Shift(polyline1, -1)\r\n * @example_info Shifts the edges in the closed polyline wire, so that every edge moves back by one position\r\n * in the ring. The first edge will become the last edge.\r\n */\r\nexport function Shift(__model__: GIModel, entities: TId|TId[], offset: number): void {\r\n    // --- Error Check ---\r\n    const ents_arr = checkIDs('modify.Reverse', 'entities', entities,\r\n        [IDcheckObj.isID, IDcheckObj.isIDList],\r\n        [EEntType.WIRE, EEntType.PLINE, EEntType.FACE, EEntType.PGON])  as TEntTypeIdx|TEntTypeIdx[];\r\n    // --- Error Check ---\r\n    _shift(__model__, ents_arr, offset);\r\n}\r\n// ================================================================================================\r\nfunction _close(__model__: GIModel, ents_arr: TEntTypeIdx|TEntTypeIdx[]): void {\r\n    if (getArrDepth(ents_arr) === 1 && ents_arr.length) {\r\n        const [ent_type, index]: TEntTypeIdx = ents_arr as TEntTypeIdx;\r\n        let wire_i: number = index;\r\n        if (ent_type === EEntType.PLINE) {\r\n            wire_i = __model__.geom.query.navPlineToWire(index);\r\n        } else if (ent_type !== EEntType.WIRE) {\r\n            throw new Error('modify.Close: Entity is of wrong type. It must be either a polyline or a wire.');\r\n        }\r\n        __model__.geom.modify.closeWire(wire_i);\r\n    } else {\r\n        for (const ents of ents_arr) {\r\n            _close(__model__, ents as TEntTypeIdx);\r\n        }\r\n    }\r\n}\r\n/**\r\n * Closes polyline(s) if open.\r\n * @param __model__\r\n * @param lines Polyline(s).\r\n * @returns void\r\n * @example modify.Close([polyline1,polyline2,...])\r\n * @example_info If open, polylines are changed to closed; if already closed, nothing happens.\r\n */\r\nexport function Close(__model__: GIModel, lines: TId|TId[]): void {\r\n    // --- Error Check ---\r\n    const ents_arr = checkIDs('modify.Close', 'lines', lines, [IDcheckObj.isID, IDcheckObj.isIDList], [EEntType.PLINE]);\r\n    // --- Error Check ---\r\n    _close(__model__, ents_arr as TEntTypeIdx|TEntTypeIdx[]);\r\n}\r\n// ================================================================================================\r\n// AttribPush modelling operation\r\nexport enum _EPromoteMethod {\r\n    FIRST = 'first',\r\n    LAST = 'last',\r\n    AVERAGE = 'average',\r\n    MEDIAN = 'median',\r\n    SUM = 'sum',\r\n    MIN = 'min',\r\n    MAX = 'max'\r\n}\r\n// Promote modelling operation\r\nexport enum _EPromoteTarget {\r\n    POSI = 'positions',\r\n    VERT = 'vertices',\r\n    EDGE = 'edges',\r\n    WIRE = 'wires',\r\n    FACE = 'faces',\r\n    POINT = 'points',\r\n    PLINE = 'plines',\r\n    PGON = 'pgons',\r\n    COLL = 'collections',\r\n    MOD = 'model'\r\n}\r\nfunction _convertPromoteMethod(selection: _EPromoteMethod): EAttribPromote {\r\n    switch (selection) {\r\n        case _EPromoteMethod.AVERAGE:\r\n            return EAttribPromote.AVERAGE;\r\n        case _EPromoteMethod.MEDIAN:\r\n            return EAttribPromote.MEDIAN;\r\n        case _EPromoteMethod.SUM:\r\n            return EAttribPromote.SUM;\r\n        case _EPromoteMethod.MIN:\r\n            return EAttribPromote.MIN;\r\n        case _EPromoteMethod.MAX:\r\n            return EAttribPromote.MAX;\r\n        case _EPromoteMethod.FIRST:\r\n            return EAttribPromote.FIRST;\r\n        case _EPromoteMethod.LAST:\r\n            return EAttribPromote.LAST;\r\n        default:\r\n            break;\r\n    }\r\n}\r\nfunction _convertPromoteTarget(selection: _EPromoteTarget): EEntType {\r\n    switch (selection) {\r\n        case _EPromoteTarget.POSI:\r\n            return EEntType.POSI;\r\n        case _EPromoteTarget.VERT:\r\n            return EEntType.VERT;\r\n        case _EPromoteTarget.EDGE:\r\n            return EEntType.EDGE;\r\n        case _EPromoteTarget.WIRE:\r\n            return EEntType.WIRE;\r\n        case _EPromoteTarget.FACE:\r\n            return EEntType.FACE;\r\n        case _EPromoteTarget.POINT:\r\n            return EEntType.POINT;\r\n        case _EPromoteTarget.PLINE:\r\n            return EEntType.PLINE;\r\n        case _EPromoteTarget.PGON:\r\n            return EEntType.PGON;\r\n        case _EPromoteTarget.COLL:\r\n            return EEntType.COLL;\r\n        case _EPromoteTarget.MOD:\r\n            return EEntType.MOD;\r\n        default:\r\n            break;\r\n    }\r\n}\r\n/**\r\n * Pushes existing attribute values onto other entities.\r\n * Attribute values can be promoted up the hierarchy, demoted down the hierarchy, or transferred across the hierarchy.\r\n * ~\r\n * In certain cases, when attributes are pushed, they may be aggregated. For example, if you are pushing attributes\r\n * from vertices to polygons, then there will be multiple vertex attributes that can be combined in\r\n * different ways.\r\n * The 'method' specifies how the attributes should be aggregated. Note that if no aggregation is required\r\n * then the aggregation method is ignored.\r\n * ~\r\n * The aggregation methods consist of numerical functions such as average, median, sum, max, and min. These will\r\n * only work if the attribute values are numbers or lists of numbers. If the attribute values are string, then\r\n * the numerical functions are ignored.\r\n * ~\r\n * If the attribute values are lists of numbers, then these aggregation methods work on the individual items in the list.\r\n * For example, lets say you have an attribute consisting of normal vectors on vertices. If you push these attributes\r\n * down to the positions, then aggregation may be required, since multiple vertices can share the same position.\r\n * In this case, if you choose the `average` aggregation method, then resulting vectors on the positions will be the\r\n * average of vertex vectors.\r\n *\r\n * @param __model__\r\n * @param entities The entities that currently contain the attribute values.\r\n * @param attrib_name The name of the attribute to be promoted, demoted, or transferred.\r\n * @param to_level Enum; The level to which to promote, demote, or transfer the attribute values.\r\n * @param method Enum; The method to use when attribute values need to be aggregated.\r\n * @returns void\r\n * @example promote1 = modify.PushAttribs([pgon1, pgon2], 'area', collections, sum)\r\n * @example_info For the two polygons (pgon1 and pgon2), it gets the attribute values from the attribute called `area`,\r\n * and pushes them up to the collection level. The `sum` method specifies that the two areas should be added up.\r\n * Note that in order to create an attribute at the collection level, the two polygons should be part of a\r\n * collection. If they are not part of the collection, then no attribute values will be push.\r\n */\r\nexport function PushAttribs(__model__: GIModel, entities: TId|TId[], attrib_name: string,\r\n        to_level: _EPromoteTarget, method: _EPromoteMethod): void {\r\n    // --- Error Check ---\r\n    let ents_arr: TEntTypeIdx|TEntTypeIdx[];\r\n    if (entities !== null) {\r\n        ents_arr = checkIDs('modify.Attribute', 'entities', entities,\r\n                            [IDcheckObj.isID, IDcheckObj.isIDList], null) as TEntTypeIdx|TEntTypeIdx[];\r\n    } else {\r\n        ents_arr = null;\r\n    }\r\n    // --- Error Check ---\r\n    let from_ent_type: EEntType;\r\n    const indices: number[] = [];\r\n    if (ents_arr !== null) {\r\n        const ents_arrs: TEntTypeIdx[] = ((getArrDepth(ents_arr) === 1) ? [ents_arr] : ents_arr) as TEntTypeIdx[];\r\n        from_ent_type = ents_arrs[0][0];\r\n        for (const [ent_type, index] of ents_arrs) {\r\n            if (ent_type !== from_ent_type) {\r\n                throw new Error('All entities must be of the same type.');\r\n            }\r\n            indices.push(index);\r\n        }\r\n    } else {\r\n        from_ent_type = EEntType.MOD;\r\n    }\r\n    const to_ent_type: EEntType = _convertPromoteTarget(to_level);\r\n    const promote_method: EAttribPromote = _convertPromoteMethod(method);\r\n    if (from_ent_type === to_ent_type) {\r\n        __model__.attribs.add.transferAttribValues(from_ent_type, attrib_name, indices, promote_method);\r\n    } else {\r\n        __model__.attribs.add.promoteAttribValues(from_ent_type, attrib_name, indices, to_ent_type, promote_method);\r\n    }\r\n}\r\n// ================================================================================================\r\n/**\r\n * Welds entities together.\r\n * @param __model__\r\n * @param entities Vertex, edge, wire, face, position, point, polyline, polygon, collection.\r\n * @returns void\r\n * @example modify.Weld([polyline1,polyline2])\r\n * @example_info Welds both polyline1 and polyline2 together. Entities must be of the same type.\r\n */\r\nexport function _Weld(__model__: GIModel, entities: TId[]): void {\r\n    // --- Error Check ---\r\n    // const ents_arr = checkIDs('modify.Weld', 'entities', entities, [IDcheckObj.isIDList],\r\n    //                          [EEntType.POSI, EEntType.VERT, EEntType.EDGE, EEntType.WIRE,\r\n    //                           EEntType.FACE, EEntType.POINT, EEntType.PLINE, EEntType.PGON, EEntType.COLL]);\r\n    // --- Error Check ---\r\n    throw new Error('Not implemented.');\r\n}\r\n// ================================================================================================\r\n// Stuff for Delete()\r\nexport enum _EDeleteMethod {\r\n    DEL_UNUSED_POINTS =  'del_unused_posis',\r\n    KEEP_UNUSED_POINTS  =  'keep_unused_posis'\r\n}\r\nfunction _delete(__model__: GIModel, ents_arr: TEntTypeIdx|TEntTypeIdx[], del_unused_posis: boolean): void {\r\n    ents_arr = ((getArrDepth(ents_arr) === 1) ? [ents_arr] : ents_arr) as TEntTypeIdx[];\r\n    const colls_i: number[] = [];\r\n    const pgons_i: number[] = [];\r\n    const plines_i: number[] = [];\r\n    const points_i: number[] = [];\r\n    const posis_i: number[] = [];\r\n    for (const ent_arr of ents_arr) {\r\n        const [ent_type, index]: TEntTypeIdx = ent_arr as TEntTypeIdx;\r\n        if (isColl(ent_type)) {\r\n            colls_i.push(index);\r\n        } else if (isPgon(ent_type)) {\r\n            pgons_i.push(index);\r\n        } else if (isPline(ent_type)) {\r\n            plines_i.push(index);\r\n        } else if (isPoint(ent_type)) {\r\n            points_i.push(index);\r\n        } else if (isPosi(ent_type)) {\r\n            posis_i.push(index);\r\n        }\r\n    }\r\n    __model__.geom.modify.delColls(colls_i, del_unused_posis);\r\n    __model__.geom.modify.delPgons(pgons_i, del_unused_posis);\r\n    __model__.geom.modify.delPlines(plines_i, del_unused_posis);\r\n    __model__.geom.modify.delPoints(points_i, del_unused_posis);\r\n    __model__.geom.modify.delPosis(posis_i);\r\n}\r\n/**\r\n * Deletes geometric entities: positions, points, polylines, polygons, and collections.\r\n * When deleting positions, any topology that requires those positions will also be deleted.\r\n * (For example, any vertices linked to the deleted position will also be deleted,\r\n * which may in turn result in some edges being deleted, and so forth.)\r\n * For positions, the selection to delete or keep unused positions is ignored.\r\n * When deleting objects (point, polyline, and polygons), topology is also deleted.\r\n * When deleting collections, none of the objects in the collection are deleted.\r\n * @param __model__\r\n * @param entities Position, point, polyline, polygon, collection.\r\n * @param del_unused_posis Enum, delete or keep unused positions.\r\n * @returns void\r\n * @example modify.Delete(polygon1)\r\n * @example_info Deletes polygon1 from the model.\r\n */\r\nexport function Delete(__model__: GIModel, entities: TId|TId[], del_unused_posis: _EDeleteMethod  ): void {\r\n    // @ts-ignore\r\n    if (Array.isArray(entities)) { entities = entities.flat(); }\r\n    // --- Error Check ---\r\n    const ents_arr = checkIDs('modify.Delete', 'entities', entities,\r\n        [IDcheckObj.isID, IDcheckObj.isIDList],\r\n        [EEntType.POSI, EEntType.POINT, EEntType.PLINE, EEntType.PGON, EEntType.COLL]) as TEntTypeIdx|TEntTypeIdx[];\r\n    // --- Error Check ---\r\n    const bool_del_unused_posis: boolean = (del_unused_posis === _EDeleteMethod.DEL_UNUSED_POINTS);\r\n    _delete(__model__, ents_arr, bool_del_unused_posis);\r\n}\r\n// ================================================================================================\r\nfunction _keep(__model__: GIModel, ents_arr: TEntTypeIdx|TEntTypeIdx[]): void {\r\n    ents_arr = ((getArrDepth(ents_arr) === 1) ? [ents_arr] : ents_arr) as TEntTypeIdx[];\r\n    const colls_i: Set<number> = new Set();\r\n    const pgons_i: Set<number> = new Set();\r\n    const plines_i: Set<number> = new Set();\r\n    const points_i: Set<number> = new Set();\r\n    const posis_i: Set<number> = new Set();\r\n    for (const ent_arr of ents_arr) {\r\n        const [ent_type, index]: TEntTypeIdx = ent_arr as TEntTypeIdx;\r\n        if (isColl(ent_type)) {\r\n            colls_i.add(index);\r\n            for (const pgon_i of __model__.geom.query.navCollToPgon(index)) {\r\n                pgons_i.add(pgon_i);\r\n            }\r\n            for (const pline_i of __model__.geom.query.navCollToPline(index)) {\r\n                plines_i.add(pline_i);\r\n            }\r\n            for (const point_i of __model__.geom.query.navCollToPoint(index)) {\r\n                points_i.add(point_i);\r\n            }\r\n        } else if (isPgon(ent_type)) {\r\n            pgons_i.add(index);\r\n        } else if (isPline(ent_type)) {\r\n            plines_i.add(index);\r\n        } else if (isPoint(ent_type)) {\r\n            points_i.add(index);\r\n        } else if (isPosi(ent_type)) {\r\n            posis_i.add(index);\r\n        }\r\n    }\r\n    const all_colls_i: number[] = __model__.geom.query.getEnts(EEntType.COLL, false);\r\n    const del_colls_i: number[] = all_colls_i.filter( coll_i => !colls_i.has(coll_i) );\r\n    __model__.geom.modify.delColls(del_colls_i, false);\r\n    const all_pgons_i: number[] = __model__.geom.query.getEnts(EEntType.PGON, false);\r\n    const del_pgons_i: number[] = all_pgons_i.filter( pgon_i => !pgons_i.has(pgon_i) );\r\n    __model__.geom.modify.delPgons(del_pgons_i, false);\r\n    const all_plines_i: number[] = __model__.geom.query.getEnts(EEntType.PLINE, false);\r\n    const del_plines_i: number[] = all_plines_i.filter( pline_i => !plines_i.has(pline_i) );\r\n    __model__.geom.modify.delPlines(del_plines_i, false);\r\n    const all_points_i: number[] = __model__.geom.query.getEnts(EEntType.POINT, false);\r\n    const del_points_i: number[] = all_points_i.filter( point_i => !points_i.has(point_i) );\r\n    __model__.geom.modify.delPoints(del_points_i, false);\r\n    // finally, only del posis that are unused and that are not in the keep list\r\n    const all_unused_posis_i: number[] = __model__.geom.query.getUnusedPosis(false);\r\n    const del_posis_i: number[] = all_unused_posis_i.filter( posi_i => !posis_i.has(posi_i) );\r\n    __model__.geom.modify.delPosis(del_posis_i);\r\n}\r\n/**\r\n * Keeps the specified geometric entities: positions, points, polylines, polygons, and collections.\r\n * Everything else in the model is deleted.\r\n * When a collection is kept, all objects inside the collection are also kept.\r\n * When an object is kept, all positions used by the object are also kept.\r\n *\r\n * @param __model__\r\n * @param entities Position, point, polyline, polygon, collection.\r\n * @returns void\r\n * @example modify.Delete(polygon1)\r\n * @example_info Deletes polygon1 from the model.\r\n */\r\nexport function Keep(__model__: GIModel, entities: TId|TId[] ): void {\r\n    // @ts-ignore\r\n    if (Array.isArray(entities)) { entities = entities.flat(); }\r\n    // --- Error Check ---\r\n    const ents_arr = checkIDs('modify.Delete', 'entities', entities,\r\n        [IDcheckObj.isID, IDcheckObj.isIDList],\r\n        [EEntType.POSI, EEntType.POINT, EEntType.PLINE, EEntType.PGON, EEntType.COLL]) as TEntTypeIdx|TEntTypeIdx[];\r\n    // --- Error Check ---\r\n    _keep(__model__, ents_arr);\r\n}\r\n\r\n\r\n\r\n\r\n\r\n// ExtendPline\r\n\r\n// ProjectPosition\r\n\r\n// Move position along vector (normals)\r\n","/**\r\n * The `pattern` module has functions for creating patters of positions in the model.\r\n * All these functions all return lists of position IDs.\r\n * The list may be nested, depending on which function is selected.\r\n */\r\n\r\n/**\r\n *\r\n */\r\n\r\n import { checkCommTypes, TypeCheckObj } from './_check_args';\r\nimport { Txyz, TPlane, XYPLANE, TId, EEntType } from '@libs/geo-info/common';\r\nimport { getArrDepth, idsMakeFromIndicies } from '@libs/geo-info/id';\r\nimport { vecAdd } from '@libs/geom/vectors';\r\nimport { xfromSourceTargetMatrix, multMatrix } from '@libs/geom/matrix';\r\nimport { Matrix4 } from 'three';\r\nimport { __merge__ } from './_model';\r\nimport { GIModel } from '@libs/geo-info/GIModel';\r\n// ================================================================================================\r\n/**\r\n * Creates positions in an arc pattern, and returns the list of new positions.\r\n * If the angle of the arc is set to null, then circular patterns will be created.\r\n * For circular patterns, duplicates at start and end are automatically removed.\r\n *\r\n * @param __model__\r\n * @param origin XYZ coordinates as a list of three numbers.\r\n * @param radius Radius of circle as a number.\r\n * @param num_positions Number of positions distributed equally along the arc.\r\n * @param arc_angle Angle of arc (in radians).\r\n * @returns Entities, a list of positions.\r\n * @example coordinates1 = pattern.Arc([0,0,0], 10, 12, PI)\r\n * @example_info Creates a list of 12 XYZ coordinates distributed equally along a semicircle of radius 10.\r\n */\r\nexport function Arc(__model__: GIModel, origin: Txyz|TPlane, radius: number, num_positions: number, arc_angle: number): TId[] {\r\n    // --- Error Check ---\r\n    const fn_name = 'pattern.Arc';\r\n    checkCommTypes(fn_name, 'origin', origin, [TypeCheckObj.isCoord, TypeCheckObj.isPlane]);\r\n    checkCommTypes(fn_name, 'radius', radius, [TypeCheckObj.isNumber]);\r\n    checkCommTypes(fn_name, 'num_positions', num_positions, [TypeCheckObj.isInt]);\r\n    checkCommTypes(fn_name, 'arc_angle', arc_angle, [TypeCheckObj.isNumber, TypeCheckObj.isNull]);\r\n    // --- Error Check ---\r\n    // create the matrix one time\r\n    let matrix: Matrix4;\r\n    const origin_is_plane = getArrDepth(origin) === 2;\r\n    if (origin_is_plane) {\r\n        matrix = xfromSourceTargetMatrix(XYPLANE, origin as  TPlane);\r\n    }\r\n    // calc the rot angle per position\r\n    const rot: number = (arc_angle === null) ? (2 * Math.PI) / num_positions : arc_angle / (num_positions - 1);\r\n    // create positions\r\n    const posis_i: number[] = [];\r\n    for (let i = 0; i < num_positions; i++) {\r\n        const angle: number = rot * i; // CCW\r\n        const x: number = (Math.cos(angle) * radius);\r\n        const y: number = (Math.sin(angle) * radius);\r\n        let xyz: Txyz = [x, y, 0];\r\n        if (origin_is_plane) {\r\n            xyz = multMatrix(xyz, matrix);\r\n        } else { // we have a plane\r\n            xyz = vecAdd(xyz, origin as Txyz);\r\n        }\r\n        const posi_i: number = __model__.geom.add.addPosi();\r\n        __model__.attribs.add.setPosiCoords(posi_i, xyz);\r\n        posis_i.push(posi_i);\r\n    }\r\n    // return the list of posis\r\n    return idsMakeFromIndicies(EEntType.POSI, posis_i) as TId[];\r\n}\r\n// ================================================================================================\r\nexport enum _EGridMethod {\r\n    FLAT = 'flat',\r\n    COLUMNS = 'columns',\r\n    ROWS = 'rows',\r\n    SQUARES = 'squares'\r\n}\r\n/**\r\n* Creates positions in a grid pattern, and returns the list (or list of lists) of new positions.\r\n* @param __model__\r\n* @param origin XYZ coordinates as a list of three numbers.\r\n* @param size Size of grid. If number, assume square grid of that length; if list of two numbers, x and y lengths respectively.\r\n* @param num_positions Number of positions.\r\n* @param method Enum, define the way the coords will be return as lists.\r\n* If integer, same number for x and y; if list of two numbers, number for x and y respectively.\r\n* @returns Entities, a list of positions, or a list of lists of positions (depending on the 'method' setting).\r\n* @example coordinates1 = pattern.Grid([0,0,0], 10, 3)\r\n* @example_info Creates a list of 9 XYZ coordinates on a 3x3 square grid of length 10.\r\n* @example coordinates1 = pattern.Grid([0,0,0], [10,20], [2,4])\r\n* @example_info Creates a list of 8 XYZ coordinates on a 2x4 grid of length 10 by 20.\r\n*/\r\nexport function Grid(__model__: GIModel, origin: Txyz|TPlane, size: number|[number, number],\r\n        num_positions: number|[number, number], method: _EGridMethod): TId[]|TId[][] {\r\n    // --- Error Check ---\r\n    const fn_name = 'pattern.Grid';\r\n    checkCommTypes(fn_name, 'origin', origin, [TypeCheckObj.isCoord, TypeCheckObj.isPlane]);\r\n    checkCommTypes(fn_name, 'size', size, [TypeCheckObj.isNumber, TypeCheckObj.isXYlist]);\r\n    checkCommTypes(fn_name, 'num_positions', num_positions, [TypeCheckObj.isInt, TypeCheckObj.isXYlistInt]);\r\n    // --- Error Check ---\r\n    // create the matrix one time\r\n    let matrix: Matrix4;\r\n    const origin_is_plane = getArrDepth(origin) === 2;\r\n    if (origin_is_plane) {\r\n        matrix = xfromSourceTargetMatrix(XYPLANE, origin as  TPlane);\r\n    }\r\n    // create the positions\r\n    const posis_i: number[] = [];\r\n    const xy_size: [number, number] = (Array.isArray(size) ? size : [size, size]) as [number, number];\r\n    const xy_num_positions: [number, number] =\r\n        (Array.isArray(num_positions) ? num_positions : [num_positions, num_positions]) as [number, number];\r\n    const x_offset: number = xy_size[0] / (xy_num_positions[0] - 1);\r\n    const y_offset: number = xy_size[1] / (xy_num_positions[1] - 1);\r\n    for (let i = 0; i < xy_num_positions[1]; i++) {\r\n        const y: number = (i * y_offset) - (xy_size[1] / 2);\r\n        for (let j = 0; j < xy_num_positions[0]; j++) {\r\n            const x: number = (j * x_offset) - (xy_size[0] / 2);\r\n            let xyz: Txyz = [x, y, 0];\r\n            if (origin_is_plane) {\r\n                xyz = multMatrix(xyz, matrix);\r\n            } else { // we have a plane\r\n                xyz = vecAdd(xyz, origin as Txyz);\r\n            }\r\n            const posi_i: number = __model__.geom.add.addPosi();\r\n            __model__.attribs.add.setPosiCoords(posi_i, xyz);\r\n            posis_i.push(posi_i);\r\n        }\r\n    }\r\n    // structure the grid of posis, and return\r\n    const posis_i2: number[][] = [];\r\n    if (method === _EGridMethod.FLAT) {\r\n        return idsMakeFromIndicies(EEntType.POSI, posis_i) as TId[];\r\n    } else if (method === _EGridMethod.ROWS) {\r\n        for (let i = 0; i < xy_num_positions[1]; i++) {\r\n            const row: number[] = [];\r\n            for (let j = 0; j < xy_num_positions[0]; j++) {\r\n                const index: number = (i * xy_num_positions[0]) + j;\r\n                row.push( posis_i[index] );\r\n            }\r\n            posis_i2.push(row);\r\n        }\r\n    } else if (method === _EGridMethod.COLUMNS) {\r\n        for (let i = 0; i < xy_num_positions[0]; i++) {\r\n            const col: number[] = [];\r\n            for (let j = 0; j < xy_num_positions[1]; j++) {\r\n                const index: number = (j * xy_num_positions[0]) + i;\r\n                col.push( posis_i[index] );\r\n            }\r\n            posis_i2.push(col);\r\n        }\r\n    } else if (method === _EGridMethod.SQUARES) {\r\n        for (let i = 0; i < xy_num_positions[1] - 1; i++) {\r\n            for (let j = 0; j < xy_num_positions[0] - 1; j++) {\r\n                const index: number = (i * xy_num_positions[0]) + j;\r\n                const square: number[] = [\r\n                    posis_i[index],\r\n                    posis_i[index + 1],\r\n                    posis_i[index + xy_num_positions[0] + 1],\r\n                    posis_i[index + xy_num_positions[0]]\r\n                ];\r\n                posis_i2.push( square );\r\n            }\r\n        }\r\n    }\r\n    return idsMakeFromIndicies(EEntType.POSI, posis_i2) as TId[][];\r\n}\r\n// ================================================================================================\r\n/**\r\n * Creates four positions in a rectangle pattern, and returns the list of new positions.\r\n * @param __model__\r\n * @param origin XYZ coordinates as a list of three numbers.\r\n * @param size Size of rectangle. If number, assume square of that length; if list of two numbers, x and y lengths respectively.\r\n * @returns Entities, a list of four positions.\r\n * @example coordinates1 = pattern.Rectangle([0,0,0], 10)\r\n * @example_info Creates a list of 4 coords, being the vertices of a 10 by 10 square.\r\n * @example coordinates1 = pattern.Rectangle([0,0,0], [10,20])\r\n * @example_info Creates a list of 4 coords, being the vertices of a 10 by 20 rectangle.\r\n */\r\nexport function Rectangle(__model__: GIModel, origin: Txyz|TPlane, size: number|[number, number]): TId[] {\r\n    // --- Error Check ---\r\n    const fn_name = 'pattern.Rectangle';\r\n    checkCommTypes(fn_name, 'origin', origin, [TypeCheckObj.isCoord, TypeCheckObj.isPlane]);\r\n    checkCommTypes(fn_name, 'size', size, [TypeCheckObj.isNumber, TypeCheckObj.isXYlist]);\r\n    // --- Error Check ---\r\n    // create the matrix one time\r\n    let matrix: Matrix4;\r\n    const origin_is_plane = getArrDepth(origin) === 2;\r\n    if (origin_is_plane) {\r\n        matrix = xfromSourceTargetMatrix(XYPLANE, origin as  TPlane);\r\n    }\r\n    // create the positions\r\n    const posis_i: number[] = [];\r\n    const xy_size: [number, number] = (Array.isArray(size) ? size : [size, size]) as [number, number];\r\n    const coords: Txyz[] = [\r\n        [-(xy_size[0] / 2), -(xy_size[1] / 2), 0],\r\n        [ (xy_size[0] / 2), -(xy_size[1] / 2), 0],\r\n        [ (xy_size[0] / 2),  (xy_size[1] / 2), 0],\r\n        [-(xy_size[0] / 2),  (xy_size[1] / 2), 0]\r\n    ];\r\n    for (const coord of coords) {\r\n        let xyz: Txyz = coord;\r\n        if (origin_is_plane) {\r\n            xyz = multMatrix(xyz, matrix);\r\n        } else { // we have a plane\r\n            xyz = vecAdd(xyz, origin as Txyz);\r\n        }\r\n        const posi_i: number = __model__.geom.add.addPosi();\r\n        __model__.attribs.add.setPosiCoords(posi_i, xyz);\r\n        posis_i.push(posi_i);\r\n    }\r\n    // return\r\n    return idsMakeFromIndicies(EEntType.POSI, posis_i) as TId[];\r\n}\r\n// ================================================================================================\r\n","/**\r\n * The `query` module has functions for querying entities in the the model.\r\n * Most of these functions all return a list of IDs of entities in the model.\r\n * The Count function returns the number of entities, rather than the list of entities.\r\n *\r\n * The Get() function is an important function, and is used in many modelling workflows.\r\n */\r\n\r\n/**\r\n *\r\n */\r\n\r\nimport { GIModel } from '@libs/geo-info/GIModel';\r\nimport { TId, TQuery, EEntType, ESort, TEntTypeIdx } from '@libs/geo-info/common';\r\nimport { idsMake, getArrDepth } from '@libs/geo-info/id';\r\nimport { checkIDs, IDcheckObj } from './_check_args';\r\n\r\n// TQuery should be something like this:\r\n//\r\n// #@name != value\r\n// #@name1 > 10 || #@name2 < 5 && #@name3 == 'red'\r\n// #@xyz[2] > 5\r\n//\r\n// ================================================================================================\r\n// These are used by Get(), Count(), and Neighbours()\r\nexport enum _EQuerySelect {\r\n    POSI =   'positions',\r\n    VERT =   'vertices',\r\n    EDGE =   'edges',\r\n    WIRE =   'wires',\r\n    FACE =   'faces',\r\n    POINT =  'points',\r\n    PLINE =  'polylines',\r\n    PGON =   'polygons',\r\n    COLL =   'collections',\r\n    OBJS =   'objects',\r\n    TOPOS =  'topologies',\r\n    ALL =    'all'\r\n}\r\nfunction _convertSelectToEEntTypeStr(select: _EQuerySelect): EEntType|EEntType[] {\r\n    switch (select) {\r\n        case _EQuerySelect.POSI:\r\n            return EEntType.POSI;\r\n        case _EQuerySelect.VERT:\r\n            return EEntType.VERT;\r\n        case _EQuerySelect.EDGE:\r\n            return EEntType.EDGE;\r\n        case _EQuerySelect.WIRE:\r\n            return EEntType.WIRE;\r\n        case _EQuerySelect.FACE:\r\n            return EEntType.FACE;\r\n        case _EQuerySelect.POINT:\r\n            return EEntType.POINT;\r\n        case _EQuerySelect.PLINE:\r\n            return EEntType.PLINE;\r\n        case _EQuerySelect.PGON:\r\n            return EEntType.PGON;\r\n        case _EQuerySelect.COLL:\r\n            return EEntType.COLL;\r\n        case _EQuerySelect.OBJS:\r\n            return [\r\n                EEntType.POINT,\r\n                EEntType.PLINE,\r\n                EEntType.PGON\r\n            ];\r\n        case _EQuerySelect.TOPOS:\r\n            return [\r\n                EEntType.VERT,\r\n                EEntType.EDGE,\r\n                EEntType.WIRE,\r\n                EEntType.FACE\r\n            ];\r\n        case _EQuerySelect.ALL:\r\n            return [\r\n                EEntType.POSI,\r\n                EEntType.VERT,\r\n                EEntType.EDGE,\r\n                EEntType.WIRE,\r\n                EEntType.FACE,\r\n                EEntType.POINT,\r\n                EEntType.PLINE,\r\n                EEntType.PGON,\r\n                EEntType.COLL\r\n            ];\r\n        default:\r\n            throw new Error('Query select parameter not recognised.');\r\n    }\r\n}\r\n// ================================================================================================\r\nfunction _get(__model__: GIModel, select_ent_types: EEntType|EEntType[],\r\n              ents_arr: TEntTypeIdx|TEntTypeIdx[], query_expr: TQuery): TEntTypeIdx[] {\r\n    if (!Array.isArray(select_ent_types)) {\r\n        const select_ent_type: EEntType = select_ent_types as EEntType;\r\n        // get the list of entities\r\n        const found_entities_i: number[] = [];\r\n        if (ents_arr === null || ents_arr === undefined) {\r\n            found_entities_i.push(...__model__.geom.query.getEnts(select_ent_type, false));\r\n        } else {\r\n            if (ents_arr.length === 0) {\r\n                return [];\r\n            } else if (getArrDepth(ents_arr) === 1) {\r\n                ents_arr = [ents_arr] as TEntTypeIdx[];\r\n            }\r\n            for (const ents of ents_arr) {\r\n                found_entities_i.push(...__model__.geom.query.navAnyToAny(ents[0], select_ent_type, ents[1]));\r\n            }\r\n        }\r\n        // check if the query is null\r\n        if (query_expr === null || query_expr === undefined) {\r\n            // sort\r\n            return found_entities_i.map( entity_i => [select_ent_type, entity_i]) as TEntTypeIdx[];\r\n        }\r\n        // do the query on the list of entities\r\n        const query_result: number[] = __model__.attribs.query.queryAttribs(select_ent_type, query_expr, found_entities_i);\r\n        if (query_result.length === 0) { return []; }\r\n        return query_result.map( entity_i => [select_ent_type, entity_i]) as TEntTypeIdx[];\r\n    } else {\r\n        const query_results_arr: TEntTypeIdx[] = [];\r\n        for (const select_ent_type of select_ent_types) {\r\n            const ent_type_query_results: TEntTypeIdx[] = _get(__model__, select_ent_type, ents_arr, query_expr);\r\n            for (const query_result of ent_type_query_results) {\r\n                query_results_arr.push(query_result);\r\n            }\r\n        }\r\n        // sort\r\n        return query_results_arr;\r\n    }\r\n}\r\nfunction _compareID(ent_arr1: TEntTypeIdx, ent_arr2: TEntTypeIdx): number {\r\n    const [ent_type1, index1]: TEntTypeIdx = ent_arr1;\r\n    const [ent_type2, index2]: TEntTypeIdx = ent_arr2;\r\n    if (ent_type1 !== ent_type2) { return ent_type1 -  ent_type2; }\r\n    if (index1 !== index2) { return index1 -  index2; }\r\n    return 0;\r\n}\r\n/**\r\n * Returns a list of entities based on a query expression. The list will be ordered by entity ID, in descending order\r\n * The result will always be a list of entities, even if there is only one entity.\r\n * In a case where you expect only one entity, remember to get the first item in the list.\r\n * ~\r\n * The query expression should use the following format: #@name == value,\r\n * where 'name' is the attribute name, and 'value' is the attribute value that you are searching for.\r\n * ~\r\n * If the attribute value is a string, then in must be in quotes, as follows: #@name == 'str_value'.\r\n * The '==' is the comparison operator. The other comparison operators are: !=, >, >=, <, =<.\r\n * ~\r\n * Entities can be search using multiple query expressions, as follows:  #@name1 == value1 &&  #@name2 == value2.\r\n * Query expressions can be combined with either && (and) and || (or), where\r\n * && takes precedence over ||.\r\n * \r\n * @param __model__\r\n * @param select Enum, specifies what type of entities will be returned.\r\n * @param entities List of entities to be searched. If 'null' (without quotes), all entities in the model will be searched.\r\n * @param query_expr Attribute condition. If 'null' (without quotes), no condition is set; all found entities are returned.\r\n * @returns Entities, a list of entities that match the type specified in 'select' and the conditions specified in 'query_expr'.\r\n * @example positions = query.Get(positions, polyline1, #@xyz[2]>10)\r\n * @example_info Returns a list of positions that are part of polyline1 where the z-coordinate is more than 10.\r\n * @example positions = query.Get(positions, null, #@xyz[2]>10)\r\n * @example_info Returns a list of positions in the model where the z-coordinate is more than 10.\r\n * @example positions = query.Get(positions, polyline1, null)\r\n * @example_info Returns a list of all of the positions that are part of polyline1.\r\n * @example polylines = query.Get(polylines, position1, null)\r\n * @example_info Returns a list of all of the polylines that use position1.\r\n * @example collections = query.Get(collections, null, #@type==\"floors\")\r\n * @example_info Returns a list of all the collections that have an attribute called \"type\" with a value \"floors\".\r\n */\r\nexport function Get(__model__: GIModel, select: _EQuerySelect, entities: TId|TId[], query_expr: TQuery): TId[] {\r\n    // --- Error Check ---\r\n    let ents_arr: TEntTypeIdx|TEntTypeIdx[] = null;\r\n    if (entities !== null && entities !== undefined) {\r\n        ents_arr = checkIDs('query.Get', 'entities', entities, [IDcheckObj.isID, IDcheckObj.isIDList], null) as TEntTypeIdx|TEntTypeIdx[];\r\n    }\r\n    // TODO add a condition called isNull for entities\r\n    // TODO check the query string\r\n    // --- Error Check ---\r\n    const select_ent_types: EEntType|EEntType[] = _convertSelectToEEntTypeStr(select);\r\n    const found_ents_arr: TEntTypeIdx[] = _get(__model__, select_ent_types, ents_arr, query_expr);\r\n    if (found_ents_arr.length === 0) { return []; }\r\n    // sort entities\r\n    found_ents_arr.sort(_compareID);\r\n    // remove duplicates\r\n    const found_ents_arr_no_dups: TEntTypeIdx[] = [found_ents_arr[0]];\r\n    for (let i = 1; i < found_ents_arr.length; i++) {\r\n        const current: TEntTypeIdx = found_ents_arr[i];\r\n        const previous: TEntTypeIdx = found_ents_arr[i - 1];\r\n        if (!(current[0] === previous[0] && current[1] === previous[1])) {\r\n            found_ents_arr_no_dups.push(found_ents_arr[i]);\r\n        }\r\n    }\r\n    return idsMake(found_ents_arr_no_dups) as TId[];\r\n}\r\n// ================================================================================================\r\n// ================================================================================================\r\nfunction _invert(__model__: GIModel, select_ent_types: EEntType|EEntType[], ents_arr: TEntTypeIdx|TEntTypeIdx[]): TEntTypeIdx[] {\r\n    if (!Array.isArray(select_ent_types)) {\r\n        const select_ent_type: EEntType = select_ent_types as EEntType;\r\n        // get the ents to exclude\r\n        if (!Array.isArray(ents_arr[0])) { ents_arr = [ents_arr] as TEntTypeIdx[]; }\r\n        const excl_ents_i: number[] = (ents_arr as TEntTypeIdx[])\r\n            .filter(ent_arr => ent_arr[0] === select_ent_type).map(ent_arr => ent_arr[1]);\r\n        // get the list of entities\r\n        const found_entities_i: number[] = [];\r\n        const ents_i: number[] = __model__.geom.query.getEnts(select_ent_type, false);\r\n        for (const ent_i of ents_i) {\r\n            if (excl_ents_i.indexOf(ent_i) === -1) { found_entities_i.push(ent_i); }\r\n        }\r\n        return found_entities_i.map( entity_i => [select_ent_type, entity_i]) as TEntTypeIdx[];\r\n    } else {\r\n        const query_results_arr: TEntTypeIdx[] = [];\r\n        for (const select_ent_type of select_ent_types) {\r\n            const ent_type_query_results: TEntTypeIdx[] = _invert(__model__, select_ent_type, ents_arr);\r\n            for (const query_result of ent_type_query_results) {\r\n                query_results_arr.push(query_result);\r\n            }\r\n        }\r\n        return query_results_arr;\r\n    }\r\n}\r\n/**\r\n * Returns a list of entities excluding the specified entities.\r\n * @param __model__\r\n * @param select Enum, specifies what type of entities will be returned.\r\n * @param entities List of entities to be excluded.\r\n * @returns Entities, a list of entities that match the type specified in 'select'.\r\n * @example objects = query.Get(objects, polyline1, null)\r\n * @example_info Returns a list of all the objects in the model except polyline1.\r\n */\r\nexport function Invert(__model__: GIModel, select: _EQuerySelect, entities: TId|TId[]): TId[] {\r\n    // --- Error Check ---\r\n    let ents_arr: TEntTypeIdx|TEntTypeIdx[] = null;\r\n    if (entities !== null && entities !== undefined) {\r\n        ents_arr = checkIDs('query.Get', 'entities', entities, [IDcheckObj.isID, IDcheckObj.isIDList], null) as TEntTypeIdx|TEntTypeIdx[];\r\n    }\r\n    // --- Error Check ---\r\n    const select_ent_types: EEntType|EEntType[] = _convertSelectToEEntTypeStr(select);\r\n    const found_ents_arr: TEntTypeIdx[] = _invert(__model__, select_ent_types, ents_arr);\r\n    return idsMake(found_ents_arr) as TId[];\r\n}\r\n// ================================================================================================\r\n/**\r\n * Returns the number of entities based on a query expression.\r\n * The query expression should use the following format: #@name == value,\r\n * where 'name' is the attribute name, and 'value' is the attribute value.\r\n * If the attribute value is a string, then in must be in qoutes, as follows: #@name == 'str_value'.\r\n * The '==' is the comparison operator. The other comparison operators are: !=, >, >=, <, =<.\r\n * Entities can be search using multiple query expressions, as follows:  #@name1 == value1 &&  #@name2 == value2.\r\n * Query expressions can be combine with either && (and) and || (or), where\r\n * && takes precedence over ||.\r\n *\r\n * @param __model__\r\n * @param select Enum, specifies what type of entities are to be counted.\r\n * @param entities List of entities to be searched. If 'null' (without quotes), list of all entities in the model.\r\n * @param query_expr Attribute condition. If 'null' (without quotes), no condition is set; list of all search entities is returned.\r\n * @returns Number of entities.\r\n * @example num_ents = query.Count(positions, polyline1, #@xyz[2]>10)\r\n * @example_info Returns the number of positions defined by polyline1 where the z-coordinate is more than 10.\r\n */\r\nexport function Count(__model__: GIModel, select: _EQuerySelect, entities: TId|TId[], query_expr: TQuery): number {\r\n    // --- Error Check ---\r\n    // if (entities !== null && entities !== undefined) {\r\n    //     checkIDs('query.Count', 'entities', entities, [IDcheckObj.isID, IDcheckObj.isIDList], null);\r\n    // }\r\n    // --- Error Check ---\r\n    return Get(__model__, select, entities, query_expr).length; // Check done in Get\r\n}\r\n// ================================================================================================\r\nexport function _neighbours(__model__: GIModel,  select_ent_types: EEntType|EEntType[],\r\n    ents_arr: TEntTypeIdx|TEntTypeIdx[]): TEntTypeIdx[] {\r\n    if (!Array.isArray(select_ent_types)) {\r\n        const select_ent_type: EEntType = select_ent_types as EEntType;\r\n        if (!Array.isArray(ents_arr[0])) {\r\n            ents_arr = [ents_arr] as TEntTypeIdx[];\r\n        }\r\n        const all_nbor_ents_i: Set<number> = new Set();\r\n        for (const ents of ents_arr) {\r\n            const [ent_type, index]: TEntTypeIdx = ents as TEntTypeIdx ;\r\n            const nbor_ents_i: number[] = __model__.geom.query.neighbours(ent_type, select_ent_type, index);\r\n            nbor_ents_i.forEach(nbor_ent_i => all_nbor_ents_i.add(nbor_ent_i));\r\n        }\r\n        return Array.from(all_nbor_ents_i).map(nbor_ent_i => [select_ent_type, nbor_ent_i]) as TEntTypeIdx[];\r\n    } else {\r\n        const query_results: TEntTypeIdx[] = [];\r\n        for (const select_ent_type of select_ent_types) {\r\n            query_results.push(..._neighbours(__model__, select_ent_type, ents_arr));\r\n        }\r\n        return query_results;\r\n    }\r\n}\r\n/**\r\n* Returns a list of welded neighbours of any entity\r\n* @param __model__\r\n* @param select Enum, select the types of neighbours to return\r\n* @param entities List of entities.\r\n* @returns Entities, a list of welded neighbours\r\n* @example mod.Neighbours([polyline1,polyline2,polyline3])\r\n* @example_info Returns list of entities that are welded to polyline1 and polyline2.\r\n*/\r\nexport function Neighbours(__model__: GIModel, select: _EQuerySelect, entities: TId|TId[]): TId[] {\r\n    // --- Error Check ---\r\n    let ents_arr: TEntTypeIdx|TEntTypeIdx[] = null;\r\n    if (entities !== null && entities !== undefined) {\r\n        ents_arr = checkIDs('query.Get', 'entities', entities, [IDcheckObj.isID, IDcheckObj.isIDList], null) as TEntTypeIdx|TEntTypeIdx[];\r\n    }\r\n    // --- Error Check ---\r\n    const select_ent_types: EEntType|EEntType[] = _convertSelectToEEntTypeStr(select);\r\n    const found_ents_arr: TEntTypeIdx[] = _neighbours(__model__, select_ent_types, ents_arr);\r\n    return idsMake(found_ents_arr) as TId[];\r\n}\r\n// ================================================================================================\r\nfunction _sort(__model__: GIModel, ents_arr: TEntTypeIdx[], sort_expr: TQuery, method: ESort): TEntTypeIdx[] {\r\n    // get the list of ents_i\r\n    const ent_type: EEntType = ents_arr[0][0];\r\n    const ents_i: number[] = ents_arr.filter( ent_arr => ent_arr[0] === ent_type ).map( ent_arr => ent_arr[1] );\r\n    // check if the sort expression is null\r\n    if (sort_expr === null || sort_expr === undefined) {\r\n        ents_i.sort();\r\n        if (method === ESort.ASCENDING) {\r\n            ents_i.reverse();\r\n        }\r\n        return ents_i.map( entity_i => [ent_type, entity_i]) as TEntTypeIdx[];\r\n    }\r\n    // do the sort on the list of entities\r\n    const sort_result: number[] = __model__.attribs.query.sortByAttribs(ent_type, ents_i, sort_expr, method);\r\n    return sort_result.map( entity_i => [ent_type, entity_i]) as TEntTypeIdx[];\r\n}\r\nexport enum _ESortMethod {\r\n    'DESCENDING' = 'descending',\r\n    'ASCENDING' = 'ascending'\r\n}\r\n/**\r\n * Sorts entities based on a sort expression.\r\n * The sort expression should use the following format: #@name, where 'name' is the attribute name.\r\n * Entities can be sorted using multiple sort expresssions as follows: #@name1 && #@name2.\r\n * If the attribute is a list, and index can also be specified as follows: #@name1[index].\r\n * @param __model__\r\n * @param entities List of two or more entities to be sorted, all of the same entity type.\r\n * @param sort_expr Attribute condition. If 'null' (without quotes), entities will be sorted based on their ID.\r\n * @param method Enum, sort descending or ascending.\r\n * @returns Entities, a list of sorted entities.\r\n * @example sorted_list = query.Sort( [pos1, pos2, pos3], #@xyz[2], descending)\r\n * @example_info Returns a list of three positions, sorted according to the descending z value.\r\n */\r\nexport function Sort(__model__: GIModel, entities: TId[], sort_expr: TQuery, method: _ESortMethod): TId[] {\r\n    // --- Error Check ---\r\n    const ents_arr = checkIDs('query.Sort', 'entities', entities, [IDcheckObj.isIDList], null) as TEntTypeIdx[];\r\n    // TODO check the sort expression\r\n    // --- Error Check ---\r\n    const sort_method: ESort = (method === _ESortMethod.DESCENDING) ? ESort.DESCENDING : ESort.ASCENDING;\r\n    const sorted_ents_arr: TEntTypeIdx[] = _sort(__model__, ents_arr, sort_expr, sort_method);\r\n    return idsMake(sorted_ents_arr) as TId[];\r\n}\r\n// ================================================================================================\r\nfunction _isClosed(__model__: GIModel, ents_arr: TEntTypeIdx|TEntTypeIdx[]): boolean|boolean[] {\r\n    if (!Array.isArray(ents_arr[0])) {\r\n        const [ent_type, index]: TEntTypeIdx = ents_arr as TEntTypeIdx;\r\n        if (ent_type === EEntType.PGON) {\r\n            return true;\r\n        } else if (ent_type !== EEntType.WIRE && ent_type !== EEntType.PLINE) {\r\n            return false;\r\n        }\r\n        let wire_i: number = index;\r\n        if (ent_type === EEntType.PLINE) {\r\n            wire_i = __model__.geom.query.navPlineToWire(index);\r\n        }\r\n        return __model__.geom.query.istWireClosed(wire_i) as boolean;\r\n    } else {\r\n        return (ents_arr as TEntTypeIdx[]).map(ents => _isClosed(__model__, ents)) as boolean[];\r\n    }\r\n}\r\n\r\nexport enum _EQueryEntType {\r\n    IS_POSI =   'is_position',\r\n    IS_USED_POSI = 'is_used_posi',\r\n    IS_UNUSED_POSI = 'is_unused_posi',\r\n    IS_VERT =   'is_vertex',\r\n    IS_EDGE =   'is_edge',\r\n    IS_WIRE =   'is_wire',\r\n    IS_FACE =   'is_face',\r\n    IS_POINT =  'is_point',\r\n    IS_PLINE =  'is_polyline',\r\n    IS_PGON =   'is_polygon',\r\n    IS_COLL =   'is_collection',\r\n    IS_OBJ =    'is_object',\r\n    IS_TOPO =   'is_topology',\r\n    IS_POINT_TOPO =   'is_point_topology',\r\n    IS_PLINE_TOPO =   'is_polyline_topology',\r\n    IS_PGON_TOPO =   'is_polygon_topology',\r\n    IS_OPEN =      'is_open',\r\n    IS_CLOSED =    'is_closed',\r\n    IS_HOLE =      'is_hole',\r\n    HAS_HOLES =    'has_holes',\r\n    HAS_NO_HOLES = 'has_no_holes'\r\n}\r\nfunction _isUsedPosi(__model__: GIModel, ent_arr: TEntTypeIdx): boolean {\r\n    const [ent_type, index]: TEntTypeIdx = ent_arr;\r\n    if (ent_type !== EEntType.POSI) {\r\n        return false;\r\n    }\r\n    const verts_i: number[] = __model__.geom.query.navPosiToVert(index);\r\n    if (verts_i === undefined || verts_i === null) {\r\n        return false;\r\n    }\r\n    return verts_i.length > 0;\r\n}\r\nfunction _isObj(__model__: GIModel, ent_arr: TEntTypeIdx): boolean {\r\n    const [ent_type, index]: TEntTypeIdx = ent_arr;\r\n    if (ent_type === EEntType.POINT || ent_type === EEntType.PLINE || ent_type === EEntType.PGON) {\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\nfunction _isTopo(__model__: GIModel, ent_arr: TEntTypeIdx): boolean {\r\n    const [ent_type, index]: TEntTypeIdx = ent_arr;\r\n    if (ent_type === EEntType.VERT || ent_type === EEntType.EDGE || ent_type === EEntType.WIRE || ent_type === EEntType.FACE) {\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\nfunction _isPointTopo(__model__: GIModel, ent_arr: TEntTypeIdx): boolean {\r\n    const [ent_type, index]: TEntTypeIdx = ent_arr;\r\n    if (ent_type === EEntType.VERT || ent_type === EEntType.EDGE || ent_type === EEntType.WIRE || ent_type === EEntType.FACE) {\r\n        const points_i: number[] = __model__.geom.query.navAnyToPoint(ent_type, index);\r\n        if (points_i !== undefined && points_i !== null && points_i.length) { return true; }\r\n    }\r\n    return false;\r\n}\r\nfunction _isPlineTopo(__model__: GIModel, ent_arr: TEntTypeIdx): boolean {\r\n    const [ent_type, index]: TEntTypeIdx = ent_arr;\r\n    if (ent_type === EEntType.VERT || ent_type === EEntType.EDGE || ent_type === EEntType.WIRE || ent_type === EEntType.FACE) {\r\n        const plines_i: number[] = __model__.geom.query.navAnyToPline(ent_type, index);\r\n        if (plines_i !== undefined && plines_i !== null && plines_i.length) { return true; }\r\n    }\r\n    return false;\r\n}\r\nfunction _isPgonTopo(__model__: GIModel, ent_arr: TEntTypeIdx): boolean {\r\n    const [ent_type, index]: TEntTypeIdx = ent_arr;\r\n    if (ent_type === EEntType.VERT || ent_type === EEntType.EDGE || ent_type === EEntType.WIRE || ent_type === EEntType.FACE) {\r\n        const pgons_i: number[] = __model__.geom.query.navAnyToPgon(ent_type, index);\r\n        if (pgons_i !== undefined && pgons_i !== null && pgons_i.length) { return true; }\r\n    }\r\n    return false;\r\n}\r\nfunction _isClosed2(__model__: GIModel, ent_arr: TEntTypeIdx): boolean {\r\n    const [ent_type, index]: TEntTypeIdx = ent_arr;\r\n    if (ent_type === EEntType.PGON) {\r\n        return true;\r\n    } else if (ent_type !== EEntType.WIRE && ent_type !== EEntType.PLINE) {\r\n        return false;\r\n    }\r\n    let wire_i: number = index;\r\n    if (ent_type === EEntType.PLINE) {\r\n        wire_i = __model__.geom.query.navPlineToWire(index);\r\n    }\r\n    return __model__.geom.query.istWireClosed(wire_i) as boolean;\r\n}\r\nfunction _isHole(__model__: GIModel, ent_arr: TEntTypeIdx): boolean {\r\n    const [ent_type, index]: TEntTypeIdx = ent_arr;\r\n    if (ent_type !== EEntType.WIRE) {\r\n        return false;\r\n    }\r\n    const face_i: number = __model__.geom.query.navWireToFace(index);\r\n    if (face_i === undefined || face_i === null) {\r\n        return false;\r\n    }\r\n    const wires_i: number[] = __model__.geom.query.navFaceToWire(face_i);\r\n    return wires_i.indexOf(index) > 0;\r\n}\r\nfunction _hasNoHoles(__model__: GIModel, ent_arr: TEntTypeIdx): boolean {\r\n    const [ent_type, index]: TEntTypeIdx = ent_arr;\r\n    if (ent_type !== EEntType.FACE && ent_type !== EEntType.PGON) {\r\n        return false;\r\n    }\r\n    let face_i: number = index;\r\n    if (ent_type === EEntType.PGON) {\r\n        face_i = __model__.geom.query.navPgonToFace(index);\r\n    }\r\n    const wires_i: number[] = __model__.geom.query.navFaceToWire(face_i);\r\n    return wires_i.length === 1;\r\n}\r\nfunction _type(__model__: GIModel, ents_arr: TEntTypeIdx|TEntTypeIdx[], query_ent_type: _EQueryEntType): boolean|boolean[] {\r\n    if (getArrDepth(ents_arr) === 1) {\r\n        const ent_arr: TEntTypeIdx = ents_arr as TEntTypeIdx;\r\n        const [ent_type, _]: TEntTypeIdx = ent_arr;\r\n        switch (query_ent_type) {\r\n            case _EQueryEntType.IS_POSI:\r\n                return ent_type === EEntType.POSI;\r\n            case _EQueryEntType.IS_USED_POSI:\r\n                return _isUsedPosi(__model__, ent_arr);\r\n            case _EQueryEntType.IS_UNUSED_POSI:\r\n                return !_isUsedPosi(__model__, ent_arr);\r\n            case _EQueryEntType.IS_VERT:\r\n                return ent_type === EEntType.VERT;\r\n            case _EQueryEntType.IS_EDGE:\r\n                return ent_type === EEntType.EDGE;\r\n            case _EQueryEntType.IS_WIRE:\r\n                return ent_type === EEntType.WIRE;\r\n            case _EQueryEntType.IS_FACE:\r\n                return ent_type === EEntType.FACE;\r\n            case _EQueryEntType.IS_POINT:\r\n                return ent_type === EEntType.POINT;\r\n            case _EQueryEntType.IS_PLINE:\r\n                return ent_type === EEntType.PLINE;\r\n            case _EQueryEntType.IS_PGON:\r\n                return ent_type === EEntType.PGON;\r\n            case _EQueryEntType.IS_COLL:\r\n                return ent_type === EEntType.COLL;\r\n            case _EQueryEntType.IS_OBJ:\r\n                return _isObj(__model__, ent_arr);\r\n            case _EQueryEntType.IS_TOPO:\r\n                return _isTopo(__model__, ent_arr);\r\n            case _EQueryEntType.IS_POINT_TOPO:\r\n                return _isPointTopo(__model__, ent_arr);\r\n            case _EQueryEntType.IS_PLINE_TOPO:\r\n                return _isPlineTopo(__model__, ent_arr);\r\n            case _EQueryEntType.IS_PGON_TOPO:\r\n                return _isPgonTopo(__model__, ent_arr);\r\n            case _EQueryEntType.IS_OPEN:\r\n                return !_isClosed2(__model__, ent_arr);\r\n            case _EQueryEntType.IS_CLOSED:\r\n                return _isClosed2(__model__, ent_arr);\r\n            case _EQueryEntType.IS_HOLE:\r\n                return _isHole(__model__, ent_arr);\r\n            case _EQueryEntType.HAS_HOLES:\r\n                return !_hasNoHoles(__model__, ent_arr);\r\n            case _EQueryEntType.HAS_NO_HOLES:\r\n                return _hasNoHoles(__model__, ent_arr);\r\n            default:\r\n                break;\r\n        }\r\n    } else {\r\n        return (ents_arr as TEntTypeIdx[]).map(ent_arr => _type(__model__, ent_arr, query_ent_type)) as boolean[];\r\n    }\r\n\r\n}\r\n/**\r\n * Checks the type of an entity.\r\n * ~\r\n * For is_used_posi, returns true if the entity is a posi, and it is used by at least one vertex.\r\n * For is_unused_posi, it returns the opposite of is_used_posi.\r\n * For is_object, returns true if the entity is a point, a polyline, or a polygon.\r\n * For is_topology, returns true if the entity is a vertex, an edge, a wire, or a face.\r\n * For is_point_topology, is_polyline_topology, and is_polygon_topology, returns true\r\n * if the entity is a topological entity, and it is part of an object of the specified type.\r\n * ~\r\n * For is_open, returns true if the entity is a wire or polyline and is open. For is_closed, it returns the opposite of is_open.\r\n * For is_hole, returns ture if the entity is a wire, and it defines a hole in a face.\r\n * For has_holes, returns true if the entity is a face or polygon, and it has holes.\r\n * For has_no_holes, it returns the opposite of has_holes.\r\n *\r\n * @param __model__\r\n * @param entities An entity, or a list of entities.\r\n * @param query_ent_type Enum, select the conditions to test agains.\r\n * @returns Boolean or list of boolean in input sequence.\r\n * @example query.Type([polyline1, polyline2, polygon1], is_polyline )\r\n * @example_info Returns a list [true, true, false] if polyline1 and polyline2 are polylines but polygon1 is not a polyline.\r\n */\r\nexport function Type(__model__: GIModel, entities: TId|TId[], query_ent_type: _EQueryEntType): boolean|boolean[] {\r\n    // --- Error Check ---\r\n    const fn_name = 'query.Type';\r\n    const ents_arr = checkIDs(fn_name, 'entities', entities, [IDcheckObj.isID, IDcheckObj.isIDList], null) as TEntTypeIdx|TEntTypeIdx[];\r\n    // --- Error Check ---\r\n    return _type(__model__, ents_arr, query_ent_type);\r\n}\r\n// TODO IS_PLANAR\r\n// TODO IS_QUAD\r\n\r\n// ================================================================================================\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n * Checks if polyline(s) or wire(s) are closed.\r\n * ~\r\n * WARNING: This function has been deprecated. Plese use the query.Type() function instead.\r\n *\r\n * @param __model__\r\n * @param lines Wires, polylines, or polygons.\r\n * @returns Boolean or list of boolean in input sequence of lines.\r\n * @example mod.IsClosed([polyline1,polyline2,polyline3])\r\n * @example_info Returns list [true,true,false] if polyline1 and polyline2 are closed but polyline3 is open.\r\n */\r\nexport function _IsClosed(__model__: GIModel, lines: TId|TId[]): boolean|boolean[] {\r\n    // --- Error Check ---\r\n    const ents_arr = checkIDs('query.isClosed', 'lines', lines, [IDcheckObj.isID, IDcheckObj.isIDList],\r\n                                [EEntType.PLINE, EEntType.WIRE, EEntType.PGON]);\r\n    // --- Error Check ---\r\n    return _isClosed(__model__, ents_arr as TEntTypeIdx|TEntTypeIdx[]);\r\n}\r\n","/**\r\n * The `render` module has functions for defining various settings for the 3D viewer.\r\n * These settings are saved as attributes at the model level.\r\n * These include things like creating more advanced materials.\r\n * For more informtion, see the threejs docs: https://threejs.org/\r\n */\r\n\r\n/**\r\n *\r\n */\r\n\r\nimport { GIModel } from '@libs/geo-info/GIModel';\r\nimport { Txyz } from '@assets/libs/geo-info/common';\r\nimport * as THREE from 'three';\r\n\r\nexport enum _ESide {\r\n    FRONT =   'front',\r\n    BACK =   'back',\r\n    BOTH =   'both'\r\n}\r\nfunction _convertSelectESideToNum(select: _ESide): number {\r\n    switch (select) {\r\n        case _ESide.FRONT:\r\n            return THREE.FrontSide;\r\n        case _ESide.BACK:\r\n            return THREE.BackSide;\r\n        default:\r\n            return THREE.DoubleSide;\r\n    }\r\n}\r\nexport enum _EColours {\r\n    NO_VERT_COLOURS =   'none',\r\n    VERT_COLOURS =   'apply_rgb'\r\n}\r\nfunction _convertSelectEColoursToNum(select: _EColours): number {\r\n    switch (select) {\r\n        case _EColours.NO_VERT_COLOURS:\r\n            return THREE.NoColors;\r\n        default:\r\n            return THREE.VertexColors;\r\n    }\r\n}\r\n\r\nenum _EMaterialType {\r\n    BASIC = 'MeshBasicMaterial',\r\n    LAMBERT = 'MeshLambertMaterial',\r\n    PHONG = 'MeshPhongMaterial',\r\n    STANDARD = 'MeshStandardMaterial',\r\n    PHYSICAL = 'MeshPhysicalMaterial'\r\n}\r\n// ================================================================================================\r\n/**\r\n * Creates a glass material with an opacity setting. The material will default to a Phong material.\r\n * ~\r\n * In order to assign a material to polygons in the model, a polygon attribute called 'material'\r\n * needs to be created. The value for each polygon must either be null, or must be a material name.\r\n *\r\n * @param name The name of the material.\r\n * @param opacity The opacity of the glass, between 0 (totally transparent) and 1 (totally opaque).\r\n * @returns void\r\n */\r\nexport function GlassMaterial(__model__: GIModel, name: string, opacity: number): void {\r\n    opacity = _clamp01(opacity);\r\n    const transparent: boolean = opacity < 1;\r\n    const settings_obj = {\r\n        type: _EMaterialType.PHONG,\r\n        opacity: opacity,\r\n        transparent: transparent,\r\n        shininess: 90,\r\n        color: new THREE.Color(1, 1, 1),\r\n        emissive: new THREE.Color(0, 0, 0),\r\n        side: THREE.DoubleSide\r\n    };\r\n    _setMaterialModelAttrib(__model__, name, settings_obj);\r\n}\r\n\r\n// ================================================================================================\r\n/**\r\n * Creates a Basic material and saves it in the model attributes.\r\n * ~\r\n * [See the threejs docs](https://threejs.org/docs/#api/en/materials/MeshBasicMaterial)\r\n * ~\r\n * The colour pf teh material can either ignore or apply the vertex rgb colours.\r\n * If 'apply' id selected, then the actual colour will be a combination of the material colour\r\n * and the vertex colours, as specified by the a vertex attribute called 'rgb'.\r\n * In such a case, if material colour is set to white, then it will\r\n * have no effect, and the colour will be defined by the vertex [r,g,b] values.\r\n * ~\r\n * Additional material properties can be set by calling the functions for the more advanced materials.\r\n * These include LambertMaterial, PhongMaterial, StandardMaterial, and Physical Material.\r\n * Each of these more advanced materials allows you to specify certain additional settings.\r\n * ~\r\n * In order to assign a material to polygons in the model, a polygon attribute called 'material'.\r\n * needs to be created. The value for each polygon must either be null, or must be a material name.\r\n *\r\n * @param name The name of the material.\r\n * @param colour The diffuse colour, as [r, g, b] values between 0 and 1. White is [1, 1, 1].\r\n * @param opacity The opacity of the glass, between 0 (totally transparent) and 1 (totally opaque).\r\n * @param select_side Enum, select front, back, or both.\r\n * @param select_vert_colours Enum, select whether to use vertex colours if they exist.\r\n * @returns void\r\n */\r\nexport function BasicMaterial(__model__: GIModel, name: string,\r\n            colour: Txyz,\r\n            opacity: number,\r\n            select_side: _ESide,\r\n            select_vert_colours: _EColours\r\n        ): void {\r\n    const side: number = _convertSelectESideToNum(select_side);\r\n    const vert_colours: number = _convertSelectEColoursToNum(select_vert_colours);\r\n    opacity = _clamp01(opacity);\r\n    const transparent: boolean = opacity < 1;\r\n    _clampArr01(colour);\r\n\r\n    const settings_obj = {\r\n        type: _EMaterialType.BASIC,\r\n        side: side,\r\n        vertexColors: vert_colours,\r\n        opacity: opacity,\r\n        transparent: transparent,\r\n        color: _colour(colour)\r\n    };\r\n    _setMaterialModelAttrib(__model__, name, settings_obj);\r\n}\r\n// ================================================================================================\r\n/**\r\n * Creates a Lambert material and saves it in the model attributes.\r\n * If a Basic material with the same name already exits, these settings will be added to the basic material.\r\n * ~\r\n * [See the threejs docs](https://threejs.org/docs/#api/en/materials/MeshLambertMaterial)\r\n * ~\r\n * In order to assign a material to polygons in the model, a polygon attribute called 'material'\r\n * needs to be created. The value for each polygon must either be null, or must be a material name.\r\n *\r\n * @param name The name of the material.\r\n * @param emissive The emissive colour, as [r, g, b] values between 0 and 1. White is [1, 1, 1].\r\n * @returns void\r\n */\r\nexport function LambertMaterial(__model__: GIModel, name: string,\r\n            emissive: Txyz\r\n        ): void {\r\n    _clampArr01(emissive);\r\n\r\n    const settings_obj = {\r\n        type: _EMaterialType.LAMBERT,\r\n        emissive: _colour(emissive)\r\n    };\r\n    _setMaterialModelAttrib(__model__, name, settings_obj);\r\n}\r\n// ================================================================================================\r\n/**\r\n * Creates a Phong material and saves it in the model attributes.\r\n * If a Basic material with the same name already exits, these settings will be added to the basic material.\r\n * ~\r\n * [See the threejs docs](https://threejs.org/docs/#api/en/materials/MeshPhongMaterial)\r\n * ~\r\n * In order to assign a material to polygons in the model, a polygon attribute called 'material'\r\n * needs to be created. The value for each polygon must either be null, or must be a material name.\r\n *\r\n * @param name The name of the material.\r\n * @param emissive The emissive colour, as [r, g, b] values between 0 and 1. White is [1, 1, 1].\r\n * @param specular The specular colour, as [r, g, b] values between 0 and 1. White is [1, 1, 1].\r\n * @param shininess The shininess, between 0 and 100.\r\n * @returns void\r\n */\r\nexport function PhongMaterial(__model__: GIModel, name: string,\r\n            emissive: Txyz,\r\n            specular: Txyz,\r\n            shininess: number\r\n        ): void {\r\n    _clampArr01(emissive);\r\n    _clampArr01(specular);\r\n    shininess = Math.floor(_clamp0100(shininess));\r\n\r\n    const settings_obj = {\r\n        type: _EMaterialType.PHONG,\r\n        emissive: _colour(emissive),\r\n        specular: _colour(specular),\r\n        shininess: shininess\r\n    };\r\n    _setMaterialModelAttrib(__model__, name, settings_obj);\r\n}\r\n// ================================================================================================\r\n/**\r\n * Creates a Standard material and saves it in the model attributes.\r\n * If a Basic material with the same name already exits, these settings will be added to the basic material.\r\n * ~\r\n * [See the threejs docs](https://threejs.org/docs/#api/en/materials/MeshStandardMaterial)\r\n * ~\r\n * In order to assign a material to polygons in the model, a polygon attribute called 'material'\r\n * needs to be created. The value for each polygon must either be null, or must be a material name.\r\n *\r\n * @param name The name of the material.\r\n * @param emissive The emissive colour, as [r, g, b] values between 0 and 1. White is [1, 1, 1].\r\n * @param roughness The roughness, between 0 (smooth) and 1 (rough).\r\n * @param metalness The metalness, between 0 (non-metalic) and 1 (metalic).\r\n * @param reflectivity The reflectivity, between 0 (non-reflective) and 1 (reflective).\r\n * @returns void\r\n */\r\nexport function StandardlMaterial(__model__: GIModel, name: string,\r\n            emissive: Txyz,\r\n            roughness: number,\r\n            metalness: number\r\n        ): void {\r\n    _clampArr01(emissive);\r\n    roughness = _clamp01(roughness);\r\n    metalness = _clamp01(metalness);\r\n\r\n    const settings_obj = {\r\n        type: _EMaterialType.STANDARD,\r\n        emissive: _colour(emissive),\r\n        roughness: roughness,\r\n        metalness: metalness\r\n    };\r\n    _setMaterialModelAttrib(__model__, name, settings_obj);\r\n}\r\n// ================================================================================================\r\n/**\r\n * Creates a Physical material and saves it in the model attributes.\r\n * If a Basic material with the same name already exits, these settings will be added to the basic material.\r\n * ~\r\n * [See the threejs docs](https://threejs.org/docs/#api/en/materials/MeshPhysicalMaterial)\r\n * ~\r\n * In order to assign a material to polygons in the model, a polygon attribute called 'material'\r\n * needs to be created. The value for each polygon must either be null, or must be a material name.\r\n *\r\n * @param name The name of the material.\r\n * @param emissive The emissive colour, as [r, g, b] values between 0 and 1. White is [1, 1, 1].\r\n * @param roughness The roughness, between 0 (smooth) and 1 (rough).\r\n * @param metalness The metalness, between 0 (non-metalic) and 1 (metalic).\r\n * @param reflectivity The reflectivity, between 0 (non-reflective) and 1 (reflective).\r\n * @returns void\r\n */\r\nexport function PhysicalMaterial(__model__: GIModel, name: string,\r\n            emissive: Txyz,\r\n            roughness: number,\r\n            metalness: number,\r\n            reflectivity: number\r\n        ): void {\r\n    _clampArr01(emissive);\r\n    roughness = _clamp01(roughness);\r\n    metalness = _clamp01(metalness);\r\n    reflectivity = _clamp01(reflectivity);\r\n\r\n    const settings_obj = {\r\n        type: _EMaterialType.PHYSICAL,\r\n        emissive: _colour(emissive),\r\n        roughness: roughness,\r\n        metalness: metalness,\r\n        reflectivity: reflectivity\r\n    };\r\n    _setMaterialModelAttrib(__model__, name, settings_obj);\r\n}\r\n// ================================================================================================\r\nfunction _clamp01(val: number): number {\r\n    val = (val > 1) ? 1 : val;\r\n    val = (val < 0) ? 0 : val;\r\n    return val;\r\n}\r\nfunction _clamp0100(val: number): number {\r\n    val = (val > 100) ? 100 : val;\r\n    val = (val < 0) ? 0 : val;\r\n    return val;\r\n}\r\nfunction _clampArr01(vals: number[]): void {\r\n    for (let i = 0; i < vals.length; i++) {\r\n        vals[i] = _clamp01(vals[i]);\r\n    }\r\n}\r\nfunction _colour(col: Txyz): THREE.Color {\r\n    return new THREE.Color(col[0], col[1], col[2]);\r\n}\r\nfunction _setMaterialModelAttrib(__model__: GIModel, name: string, settings_obj: object) {\r\n    // if the material already exists, then existing settings will be added\r\n    // but new settings will take precedence\r\n    if (__model__.attribs.query.hasModelAttrib(name)) {\r\n        const exist_settings_str: string = __model__.attribs.query.getModelAttribValue(name) as string;\r\n        const exist_settings_obj: object = JSON.parse(exist_settings_str);\r\n        // check that the existing material is a Basic one\r\n        if (exist_settings_obj['type'] !== _EMaterialType.BASIC) {\r\n            if (settings_obj['type'] !== exist_settings_obj['type']) {\r\n                throw new Error('Error creating material: non-basic material with this name already exists.');\r\n            }\r\n        }\r\n        // copy the settings from the existing material to the new material\r\n        for (const key of Object.keys(exist_settings_obj)) {\r\n            if (settings_obj[key] === undefined) {\r\n                settings_obj[key] = exist_settings_obj[key];\r\n            }\r\n        }\r\n    }\r\n    const settings_str: string = JSON.stringify(settings_obj);\r\n    __model__.attribs.add.setModelAttribValue(name, settings_str);\r\n}\r\n","/**\r\n * The `util` module has functions for importing data into the model and\r\n * exporting data out of the model.\r\n */\r\n\r\n/**\r\n *\r\n */\r\n\r\nimport { GIModel } from '@libs/geo-info/GIModel';\r\nimport { exportObj } from '@libs/geo-info/export';\r\nimport { importObj } from '@libs/geo-info/import';\r\nimport { download } from '@libs/filesys/download';\r\nimport { TId, EEntType, Txyz, TPlane, TRay, IGeomPack, IModelData } from '@libs/geo-info/common';\r\nimport { __merge__ } from './_model';\r\nimport { _model } from '@modules';\r\nimport { idsMake } from '@libs/geo-info/id';\r\n\r\n// ================================================================================================\r\n// Import / Export data types\r\nexport enum _EIODataFormat {\r\n    GI = 'gi',\r\n    OBJ = 'obj'\r\n}\r\n/**\r\n * Imports data into the model.\r\n * In order to get the model data from a file, you need to define the File or URL parameter\r\n * in the Start node of the flowchart.\r\n *\r\n * @param model_data The model data\r\n * @param data_format Enum, the file format.\r\n * @returns A list of the positions, points, polylines, polygons and collections added to the model.\r\n * @example util.ImportData (file1_data, obj)\r\n * @example_info Imports the data from file1 (defining the .obj file uploaded in 'Start' node).\r\n */\r\nexport function ImportData(__model__: GIModel, model_data: string, data_format: _EIODataFormat): TId[] {\r\n    let geom_pack: IGeomPack;\r\n    switch (data_format) {\r\n        case _EIODataFormat.GI:\r\n            const gi_json: IModelData = JSON.parse(model_data) as IModelData;\r\n            geom_pack = __model__.setData(gi_json);\r\n            break;\r\n        case _EIODataFormat.OBJ:\r\n            throw new Error('Not implemented');\r\n            // const obj_model: GIModel = importObj(model_data);\r\n            // geom_pack = __merge__(__model__, obj_model);\r\n            break;\r\n        default:\r\n            throw new Error('Data type not recognised');\r\n            break;\r\n    }\r\n    const posis_id: TId[] =  geom_pack.posis_i.map(  posi_i =>  idsMake([EEntType.POSI,  posi_i])) as TId[];\r\n    const points_id: TId[] = geom_pack.points_i.map( point_i => idsMake([EEntType.POINT, point_i])) as TId[];\r\n    const plines_id: TId[] = geom_pack.plines_i.map( pline_i => idsMake([EEntType.PLINE, pline_i])) as TId[];\r\n    const pgons_id: TId[] =  geom_pack.pgons_i.map(  pgon_i =>  idsMake([EEntType.PGON,  pgon_i])) as TId[];\r\n    const colls_id: TId[] =  geom_pack.colls_i.map(  coll_i =>  idsMake([EEntType.COLL,  coll_i])) as TId[];\r\n    return [...posis_id, ...points_id, ...plines_id, ...pgons_id, ...colls_id];\r\n}\r\n// ================================================================================================\r\n/**\r\n * Export data from the model as a file.\r\n * This will result in a popup in your browser, asking you to save the filel.\r\n * @param __model__\r\n * @param filename Name of the file as a string.\r\n * @param data_format Enum, the file format.\r\n * @returns Boolean.\r\n * @example util.ExportData ('my_model.obj', obj)\r\n * @example_info Exports all the data in the model as an OBJ.\r\n */\r\nexport function ExportData(__model__: GIModel, filename: string, data_format: _EIODataFormat): boolean {\r\n    switch (data_format) {\r\n        case _EIODataFormat.GI:\r\n            let gi_data: string = JSON.stringify(__model__.getData());\r\n            gi_data = gi_data.replace(/\\\\\\\"/g, '\\\\\\\\\\\\\"'); // TODO temporary fix\r\n            return download(gi_data , filename);\r\n            break;\r\n        case _EIODataFormat.OBJ:\r\n            const obj_data: string = exportObj(__model__);\r\n            return download(obj_data, filename);\r\n            break;\r\n        default:\r\n            throw new Error('Data type not recognised');\r\n            break;\r\n    }\r\n}\r\n// ================================================================================================\r\n/**\r\n * Returns a text summary of the contents of this model\r\n *\r\n * @param __model__\r\n * @returns Text that summarises what is in the model, click print to see this text.\r\n */\r\nexport function ModelInfo(__model__: GIModel): string {\r\n    return JSON.stringify(\r\n        {\r\n            'geometry': {\r\n                'num_positions': __model__.geom.query.numEnts(EEntType.POSI, false),\r\n                'num_vertices': __model__.geom.query.numEnts(EEntType.VERT, false),\r\n                'num_edges': __model__.geom.query.numEnts(EEntType.EDGE, false),\r\n                'num_wires': __model__.geom.query.numEnts(EEntType.WIRE, false),\r\n                'num_faces': __model__.geom.query.numEnts(EEntType.FACE, false),\r\n                'num_points': __model__.geom.query.numEnts(EEntType.POINT, false),\r\n                'num_polylines': __model__.geom.query.numEnts(EEntType.PLINE, false),\r\n                'num_polygons': __model__.geom.query.numEnts(EEntType.PGON, false),\r\n                'num_collections': __model__.geom.query.numEnts(EEntType.COLL, false)\r\n            },\r\n            'attributes': {\r\n                'position_attribs': __model__.attribs.query.getAttribNames(EEntType.POSI),\r\n                'vertex_attribs': __model__.attribs.query.getAttribNames(EEntType.VERT),\r\n                'edge_attribs': __model__.attribs.query.getAttribNames(EEntType.EDGE),\r\n                'wire_attribs': __model__.attribs.query.getAttribNames(EEntType.WIRE),\r\n                'face_attribs': __model__.attribs.query.getAttribNames(EEntType.FACE),\r\n                'point_attribs': __model__.attribs.query.getAttribNames(EEntType.POINT),\r\n                'polyline_attribs': __model__.attribs.query.getAttribNames(EEntType.PLINE),\r\n                'polygon_attribs': __model__.attribs.query.getAttribNames(EEntType.PGON),\r\n                'collection_attribs': __model__.attribs.query.getAttribNames(EEntType.COLL),\r\n                'model_attribs': __model__.attribs.query.getAttribNames(EEntType.MOD)\r\n            }\r\n        },\r\n    );\r\n}\r\n// ================================================================================================\r\n/**\r\n * Check tje internal consistency of the model.\r\n *\r\n * @param __model__\r\n * @returns Text that summarises what is in the model, click print to see this text.\r\n */\r\nexport function ModelCheck(__model__: GIModel): string {\r\n    const check: string[] = __model__.check();\r\n    if (check.length > 0) {\r\n        console.log(__model__);\r\n        return String(check);\r\n    }\r\n    return 'No internal inconsistencies have been found.';\r\n}\r\n","/**\r\n * The `virtual` module has functions for creating virtual geometric constructs.\r\n * They are called 'virtual' due to the fact that they are not saved in the model.\r\n * Currently there are two types of virtual constructs: planes and rays.\r\n * Most of these functions neither make nor modify anything in the model.\r\n * The exception is the `Vis` functions, that generate some polylines and polygons in the model\r\n * to aid with visualizing these virtual constructs.\r\n */\r\n\r\n/**\r\n *\r\n */\r\n\r\nimport { TId, Txyz, EEntType, TPlane, TRay, TEntTypeIdx, TBBox } from '@libs/geo-info/common';\r\nimport { checkCommTypes, checkIDs, TypeCheckObj, IDcheckObj } from './_check_args';\r\nimport { GIModel } from '@libs/geo-info/GIModel';\r\nimport { idsMake, idsBreak, getArrDepth } from '@libs/geo-info/id';\r\nimport { vecSub, vecMakeOrtho, vecNorm, vecCross, vecAdd, vecMult, vecFromTo, vecDiv, newellNorm, vecSum } from '@libs/geom/vectors';\r\nimport { _normal } from './calc';\r\n\r\n// ================================================================================================\r\n/**\r\n * Creates a ray, centered at the origin.\r\n * A ray is defined by a list of two lists, as follows: [origin, direction_vector].\r\n *\r\n * @param __model__\r\n * @param origin Origin of ray: Position, Vertex, Point, or a list of three numbers\r\n * @param dir_vec Direction of Ray: Vector, or list of three numbers\r\n * @returns A list consisting of an origin and a vector, [origin, vector].\r\n * @example virtual.Ray([1,2,3],[4,3,2])\r\n * @example_info Creates a ray from [1,2,3] with the vector [4,3,2].\r\n *\r\n */\r\n\r\nexport function Ray(__model__: GIModel, origin: TId|Txyz, dir_vec: Txyz): TRay {\r\n    // --- Error Check ---\r\n    const fn_name = 'virtual.Ray';\r\n    const ents_arr = checkCommTypes(fn_name, 'origin', origin, [TypeCheckObj.isOrigin]);\r\n    checkCommTypes(fn_name, 'dir_vec', dir_vec, [TypeCheckObj.isVector]);\r\n    // --- Error Check ---\r\n    if (!Array.isArray(origin)) {\r\n        const [ent_type, index]: [EEntType, number] = ents_arr as [EEntType, number];\r\n        const posi_i: number = __model__.geom.query.navAnyToPosi(ent_type, index)[0];\r\n        origin = __model__.attribs.query.getPosiCoords(posi_i);\r\n    }\r\n    return [\r\n        origin,\r\n        vecNorm(dir_vec)\r\n    ];\r\n}\r\n// ================================================================================================\r\n/**\r\n * Creates a plane, centered at the origin.\r\n * A plane is define by a list of three lists, as folows: [origin, x_vector, y_vector].\r\n *\r\n * @param __model__\r\n * @param origin Origin of plane: Position, Vertex, Point, or a list of three numbers\r\n * @param x_vec X vector of the plane: List of three numbers\r\n * @param xy_vec A vector in the xy plane (parallel to teh x vector): List of three numbers\r\n * @returns A list consisting of an origin and two vectors, [origin, vector, vector].\r\n * @example virtual.Plane ([1,2,3],[4,3,2],[3,3,9])\r\n * @example_info Creates a plane with its origin positioned at [1,2,3] and two vectors [4,3,2] and [3,3,9] lie on it.\r\n */\r\n\r\nexport function Plane(__model__: GIModel, origin: TId|Txyz, x_vec: Txyz, xy_vec: Txyz): TPlane {\r\n    // --- Error Check ---\r\n    const fn_name = 'virtual.Plane';\r\n    const ents_arr = checkCommTypes(fn_name, 'origin', origin, [TypeCheckObj.isOrigin]);\r\n    checkCommTypes(fn_name, 'x_vec', x_vec, [TypeCheckObj.isVector]);\r\n    checkCommTypes(fn_name, 'xy_vec', xy_vec, [TypeCheckObj.isVector]);\r\n    // --- Error Check ---\r\n    if (!Array.isArray(origin)) {\r\n        const [ent_type, index]: [EEntType, number] = ents_arr as [EEntType, number];\r\n        const posi_i: number = __model__.geom.query.navAnyToPosi(ent_type, index)[0];\r\n        origin = __model__.attribs.query.getPosiCoords(posi_i);\r\n    }\r\n    return [\r\n        origin,\r\n        vecNorm(x_vec),\r\n        vecNorm(vecMakeOrtho(xy_vec, x_vec))\r\n    ];\r\n}\r\n// ================================================================================================\r\nfunction _rayFromPlane(planes: TPlane|TPlane[]): TRay|TRay[] {\r\n    if (getArrDepth(planes) === 2) {\r\n        const plane: TPlane = planes as TPlane;\r\n        return [plane[0], vecCross(plane[1], plane[2])];\r\n    } else {\r\n        return (planes as TPlane[]).map( plane => _rayFromPlane(plane)) as TRay[];\r\n    }\r\n}\r\n/**\r\n * Create a ray, from a plane.\r\n * The direction will be along the z axis.\r\n * A plane is define by a list of three lists, as folows: [origin, x_vector, y_vector].\r\n * A ray is defined by a list of two lists, as follows: [origin, direction_vector].\r\n *\r\n * @param __model__\r\n * @param plane Plane or list of planes.\r\n * @returns Ray or list of rays.\r\n */\r\nexport function RayFromPlane(planes: TPlane|TPlane[]): TRay|TRay[] {\r\n    // --- Error Check ---\r\n    // checkCommTypes('virtual.RayFromPlane', 'origin', planes, [TypeCheckObj.isPlane]); //TODO accept a list of planes\r\n    // TODO allow list of planes\r\n    // --- Error Check ---\r\n    return _rayFromPlane(planes);\r\n}\r\n// ================================================================================================\r\nfunction _getRayFromEdge(__model__: GIModel, ent_arr: TEntTypeIdx): TRay {\r\n    const posis_i: number[] = __model__.geom.query.navAnyToPosi(ent_arr[0], ent_arr[1]);\r\n    const xyzs: Txyz[] = posis_i.map( posi_i => __model__.attribs.query.getPosiCoords(posi_i));\r\n    return [xyzs[0], vecSub(xyzs[1], xyzs[0])];\r\n}\r\nfunction _getRayFromFace(__model__: GIModel, ent_arr: TEntTypeIdx): TRay {\r\n    const plane: TPlane = _getPlane(__model__, ent_arr) as TPlane;\r\n    return _rayFromPlane(plane) as TRay;\r\n}\r\nfunction _getRay(__model__: GIModel, ents_arr: TEntTypeIdx|TEntTypeIdx[]): TRay|TRay[] {\r\n    if (getArrDepth(ents_arr) === 1) {\r\n        const ent_arr: TEntTypeIdx = ents_arr as TEntTypeIdx;\r\n        if (ent_arr[0] === EEntType.EDGE) {\r\n            return _getRayFromEdge(__model__, ent_arr);\r\n        } else if (ent_arr[0] === EEntType.FACE) {\r\n            return _getRayFromFace(__model__, ent_arr);\r\n        } else { // must be a polygon\r\n            const face_i: number = __model__.geom.query.navPgonToFace(ent_arr[1]);\r\n            return _getRayFromFace(__model__, [EEntType.FACE, face_i]);\r\n        }\r\n    } else {\r\n        return (ents_arr as TEntTypeIdx[]).map( ent_arr => _getRay(__model__, ent_arr)) as TRay[];\r\n    }\r\n}\r\n/**\r\n * Returns a ray for an edge, a face, or a polygons. For edges, it returns a ray along the edge, from teh start vertex to the end vertex\r\n * For a face or polygon, it returns the ray that is the z-axis of the plane.\r\n * ~\r\n * For an edge, the ray vector is not normalised. For a face or polygon, the ray vector is normalised.\r\n *\r\n * @param __model__\r\n * @param entities An edge, a face, or a polygon, or a list.\r\n * @returns The ray.\r\n */\r\nexport function GetRay(__model__: GIModel, entities: TId|TId[]): TRay|TRay[] {\r\n    // --- Error Check ---\r\n    const ents_arr = checkIDs('virtual.GetRay', 'entities', entities,\r\n        [IDcheckObj.isID, IDcheckObj.isIDList], [EEntType.EDGE, EEntType.FACE, EEntType.PGON]) as TEntTypeIdx|TEntTypeIdx[];\r\n    // --- Error Check ---\r\n    return _getRay(__model__, ents_arr);\r\n}\r\n// ================================================================================================\r\nfunction _getPlane(__model__: GIModel, ents_arr: TEntTypeIdx|TEntTypeIdx[]): TPlane|TPlane[] {\r\n    if (getArrDepth(ents_arr) === 1) {\r\n        const ent_arr = ents_arr as TEntTypeIdx;\r\n        const posis_i: number[] = __model__.geom.query.navAnyToPosi(ent_arr[0], ent_arr[1]);\r\n        const unique_posis_i = Array.from(new Set(posis_i));\r\n        if (unique_posis_i.length < 3) { throw new Error('Too few points to calculate plane.'); }\r\n        const unique_xyzs: Txyz[] = unique_posis_i.map( posi_i => __model__.attribs.query.getPosiCoords(posi_i));\r\n        const origin: Txyz = vecDiv(vecSum(unique_xyzs), unique_xyzs.length);\r\n        // const normal: Txyz = newellNorm(unique_xyzs);\r\n        const normal: Txyz = _normal(__model__, ent_arr, 1) as Txyz;\r\n        const x_vec: Txyz = vecNorm(vecFromTo(unique_xyzs[0], unique_xyzs[1]));\r\n        const y_vec: Txyz = vecCross(normal, x_vec); // must be z-axis, x-axis\r\n        return [origin, x_vec, y_vec] as TPlane;\r\n    } else {\r\n        return (ents_arr as TEntTypeIdx[]).map(ent_arr => _getPlane(__model__, ent_arr)) as TPlane[];\r\n    }\r\n}\r\n/**\r\n * Returns a plane from a polygon, a face, a polyline, or a wire.\r\n * For polylines or wires, there must be at least three non-colinear vertices.\r\n * ~\r\n * The winding order is counter-clockwise.\r\n * This means that if the vertices are ordered counter-clockwise relative to your point of view,\r\n * then the z axis of the plane will be pointing towards you.\r\n *\r\n * @param entities Any entities\r\n * @returns The plane.\r\n */\r\nexport function GetPlane(__model__: GIModel, entities: TId|TId[]): TPlane|TPlane[] {\r\n    // --- Error Check ---\r\n    const ents_arr =  checkIDs('virtual.GetPlane', 'entities', entities, [IDcheckObj.isID, IDcheckObj.isIDList], null); // takes in any\r\n    // TODO [EEntType.PGON, EEntType.FACE, EEntType.PLINE, EEntType.WIRE]);\r\n    // --- Error Check ---\r\n    return _getPlane(__model__, ents_arr as TEntTypeIdx|TEntTypeIdx[]);\r\n}\r\n// ================================================================================================\r\nfunction _getBoundingBox(__model__: GIModel, ents_arr: TEntTypeIdx[]): TBBox {\r\n    const posis_set_i: Set<number> = new Set();\r\n    for (const ent_arr of ents_arr) {\r\n        const ent_posis_i: number[] = __model__.geom.query.navAnyToPosi(ent_arr[0], ent_arr[1]);\r\n        for (const ent_posi_i of ent_posis_i) {\r\n            posis_set_i.add(ent_posi_i);\r\n        }\r\n    }\r\n    const unique_posis_i = Array.from(posis_set_i);\r\n    const unique_xyzs: Txyz[] = unique_posis_i.map( posi_i => __model__.attribs.query.getPosiCoords(posi_i));\r\n    const corner_min: Txyz = [Infinity, Infinity, Infinity];\r\n    const corner_max: Txyz = [-Infinity, -Infinity, -Infinity];\r\n    for (const unique_xyz of unique_xyzs) {\r\n        if (unique_xyz[0] < corner_min[0]) { corner_min[0] = unique_xyz[0]; }\r\n        if (unique_xyz[1] < corner_min[1]) { corner_min[1] = unique_xyz[1]; }\r\n        if (unique_xyz[2] < corner_min[2]) { corner_min[2] = unique_xyz[2]; }\r\n        if (unique_xyz[0] > corner_max[0]) { corner_max[0] = unique_xyz[0]; }\r\n        if (unique_xyz[1] > corner_max[1]) { corner_max[1] = unique_xyz[1]; }\r\n        if (unique_xyz[2] > corner_max[2]) { corner_max[2] = unique_xyz[2]; }\r\n    }\r\n    return [\r\n        [(corner_min[0] + corner_max[0]) / 2, (corner_min[1] + corner_max[1]) / 2, (corner_min[2] + corner_max[2]) / 2],\r\n        corner_min,\r\n        corner_max,\r\n        [corner_max[0] - corner_min[0], corner_max[1] + corner_min[1], corner_max[2] + corner_min[2]]\r\n    ];\r\n}\r\n/**\r\n * Returns the bounding box of the entities.\r\n * The bounding box is an imaginary box that completley contains all the geometry.\r\n * The box is always aligned with the global x, y, and z axes.\r\n * The bounding box consists of a list of lists, as follows [[x, y, z], [x, y, z], [x, y, z], [x, y, z]].\r\n * - The first [x, y, z] is the coordinates of the centre of the bounding box.\r\n * - The second [x, y, z] is the corner of the bounding box with the lowest x, y, z values.\r\n * - The third [x, y, z] is the corner of the bounding box with the highest x, y, z values.\r\n * - The fourth [x, y, z] is the dimensions of the bounding box.\r\n * @param __model__\r\n * @param entities The etities for which to calculate the bounding box.\r\n * @returns The bounding box consisting of a list of four lists.\r\n */\r\nexport function GetBBox(__model__: GIModel, entities: TId|TId[]): TBBox {\r\n    if (!Array.isArray(entities)) { entities = [entities]; }\r\n    // --- Error Check ---\r\n    const ents_arr: TEntTypeIdx[] = checkIDs('virtual.BBox', 'entities', entities, [IDcheckObj.isIDList], null) as TEntTypeIdx[]; // all\r\n    // --- Error Check ---\r\n    return _getBoundingBox(__model__, ents_arr);\r\n}\r\n// ================================================================================================\r\nfunction _visRay(__model__: GIModel, rays: TRay|TRay[], scale: number): TEntTypeIdx[] {\r\n    if (getArrDepth(rays) === 2) {\r\n        const ray: TRay = rays as TRay;\r\n        const origin: Txyz = ray[0];\r\n        const vec: Txyz = vecMult(ray[1], scale);\r\n        const end: Txyz = vecAdd(origin, vec);\r\n        // create orign point\r\n        const origin_posi_i: number = __model__.geom.add.addPosi();\r\n        __model__.attribs.add.setPosiCoords(origin_posi_i, origin);\r\n        const point_i = __model__.geom.add.addPoint(origin_posi_i);\r\n        // create pline\r\n        const end_posi_i: number = __model__.geom.add.addPosi();\r\n        __model__.attribs.add.setPosiCoords(end_posi_i, end);\r\n        const pline_i = __model__.geom.add.addPline([origin_posi_i, end_posi_i]);\r\n        // return the geometry IDs\r\n        return [\r\n            [EEntType.POINT, point_i],\r\n            [EEntType.PLINE, pline_i]\r\n        ];\r\n    } else {\r\n        const ents_arr: TEntTypeIdx[] = [];\r\n        for (const ray of rays) {\r\n            const ray_ents: TEntTypeIdx[] = _visRay(__model__, ray as TRay, scale);\r\n            for (const ray_ent of ray_ents) {\r\n                ents_arr.push(ray_ent);\r\n            }\r\n        }\r\n        return ents_arr;\r\n    }\r\n}\r\n/**\r\n * Visualises a ray by creating a line.\r\n *\r\n * @param __model__\r\n * @param ray A list of two list of three coordinates [origin, vector]: [[x,y,z],[x',y',z']]\r\n * @returns entities, a line representing the ray.\r\n * @example ray1 = virtual.visRay([[1,2,3],[0,0,1]])\r\n */\r\nexport function VisRay(__model__: GIModel, ray: TRay|TRay[], scale: number): TId[] {\r\n    // --- Error Check ---\r\n    const fn_name = 'virtual.visRay';\r\n    checkCommTypes(fn_name, 'ray', ray, [TypeCheckObj.isRay]); // TODO rays can be a list // add isRayList to enable check\r\n    checkCommTypes(fn_name, 'scale', scale, [TypeCheckObj.isNumber]);\r\n    // --- Error Check ---\r\n   return idsMake(_visRay(__model__, ray, scale)) as TId[];\r\n}\r\n// ================================================================================================\r\nfunction _visPlane(__model__: GIModel, planes: TPlane|TPlane[], scale: number): TEntTypeIdx[] {\r\n    if (getArrDepth(planes) === 2) {\r\n        const plane: TPlane = planes as TPlane;\r\n        const origin: Txyz = plane[0];\r\n        const x_vec: Txyz = vecMult(plane[1], scale);\r\n        const y_vec: Txyz = vecMult(plane[2], scale);\r\n        let x_end: Txyz = vecAdd(origin, x_vec);\r\n        let y_end: Txyz = vecAdd(origin, y_vec);\r\n        const z_end: Txyz = vecAdd(origin, vecMult(vecCross(x_vec, y_vec), 0.1));\r\n        const plane_corners: Txyz[] = [\r\n            vecAdd(x_end, y_vec),\r\n            vecSub(y_end, x_vec),\r\n            vecSub(vecSub(origin, x_vec), y_vec),\r\n            vecSub(x_end, y_vec),\r\n        ];\r\n        x_end = vecAdd(x_end, vecMult(x_vec, 0.1));\r\n        y_end = vecSub(y_end, vecMult(y_vec, 0.1));\r\n        // create the point\r\n        const origin_posi_i: number = __model__.geom.add.addPosi();\r\n        __model__.attribs.add.setPosiCoords(origin_posi_i, origin);\r\n        const point_i = __model__.geom.add.addPoint(origin_posi_i);\r\n        // create the x axis\r\n        const x_end_posi_i: number = __model__.geom.add.addPosi();\r\n        __model__.attribs.add.setPosiCoords(x_end_posi_i, x_end);\r\n        const x_pline_i = __model__.geom.add.addPline([origin_posi_i, x_end_posi_i]);\r\n        // create the y axis\r\n        const y_end_posi_i: number = __model__.geom.add.addPosi();\r\n        __model__.attribs.add.setPosiCoords(y_end_posi_i, y_end);\r\n        const y_pline_i = __model__.geom.add.addPline([origin_posi_i, y_end_posi_i]);\r\n        // create the z axis\r\n        const z_end_posi_i: number = __model__.geom.add.addPosi();\r\n        __model__.attribs.add.setPosiCoords(z_end_posi_i, z_end);\r\n        const z_pline_i = __model__.geom.add.addPline([origin_posi_i, z_end_posi_i]);\r\n        // create pline for plane\r\n        const corner_posis_i: number[] = [];\r\n        for (const corner of plane_corners) {\r\n            const posi_i: number = __model__.geom.add.addPosi();\r\n            __model__.attribs.add.setPosiCoords(posi_i, corner);\r\n            corner_posis_i.push(posi_i);\r\n        }\r\n        const plane_i = __model__.geom.add.addPline(corner_posis_i, true);\r\n        // return the geometry IDs\r\n        return [\r\n            [EEntType.POINT, point_i],\r\n            [EEntType.PLINE, x_pline_i],\r\n            [EEntType.PLINE, y_pline_i],\r\n            [EEntType.PLINE, z_pline_i],\r\n            [EEntType.PLINE, plane_i]\r\n        ];\r\n    } else {\r\n        const ents_arr: TEntTypeIdx[] = [];\r\n        for (const plane of planes) {\r\n            const plane_ents: TEntTypeIdx[] = _visPlane(__model__, plane as TPlane, scale);\r\n            for (const plane_ent of plane_ents) {\r\n                ents_arr.push(plane_ent);\r\n            }\r\n        }\r\n        return ents_arr;\r\n    }\r\n}\r\n/**\r\n * Visualises a plane by creating a polygon and axis lines.\r\n *\r\n * @param __model__\r\n * @param plane A list of lists\r\n * @returns Entities, a polygon and two polyline representing the plane.\r\n * @example plane1 = virtual.visPlane(position1, vector1, [0,1,0])\r\n * @example_info Creates a plane with position1 on it and normal = cross product of vector1 with y-axis.\r\n */\r\nexport function VisPlane(__model__: GIModel, planes: TPlane|TPlane[], scale: number): TId[] {\r\n    // --- Error Check ---\r\n    const fn_name = 'virtual.visPlane';\r\n    checkCommTypes(fn_name, 'planes', planes, [TypeCheckObj.isPlane]); // TODO planes can be a list // add isPlaneList to enable check\r\n    checkCommTypes(fn_name, 'scale', scale, [TypeCheckObj.isNumber]);\r\n    // --- Error Check ---\r\n    return idsMake(_visPlane(__model__, planes, scale)) as TId[];\r\n}\r\n// ================================================================================================\r\nfunction _visBBox(__model__: GIModel, bboxs: TBBox|TBBox[]): TEntTypeIdx[] {\r\n    if (getArrDepth(bboxs) === 2) {\r\n        const bbox: TBBox = bboxs as TBBox;\r\n        const min: Txyz = bbox[1];\r\n        const max: Txyz = bbox[2];\r\n        // bottom\r\n        const ps0: number = __model__.geom.add.addPosi();\r\n        __model__.attribs.add.setPosiCoords(ps0, min);\r\n        const ps1: number = __model__.geom.add.addPosi();\r\n        __model__.attribs.add.setPosiCoords(ps1, [max[0], min[1], min[2]]);\r\n        const ps2: number = __model__.geom.add.addPosi();\r\n        __model__.attribs.add.setPosiCoords(ps2, [max[0], max[1], min[2]]);\r\n        const ps3: number = __model__.geom.add.addPosi();\r\n        __model__.attribs.add.setPosiCoords(ps3, [min[0], max[1], min[2]]);\r\n        // top\r\n        const ps4: number = __model__.geom.add.addPosi();\r\n        __model__.attribs.add.setPosiCoords(ps4, [min[0], min[1], max[2]]);\r\n        const ps5: number = __model__.geom.add.addPosi();\r\n        __model__.attribs.add.setPosiCoords(ps5, [max[0], min[1], max[2]]);\r\n        const ps6: number = __model__.geom.add.addPosi();\r\n        __model__.attribs.add.setPosiCoords(ps6, max);\r\n        const ps7: number = __model__.geom.add.addPosi();\r\n        __model__.attribs.add.setPosiCoords(ps7, [min[0], max[1], max[2]]);\r\n        // plines bottom\r\n        const pl0 = __model__.geom.add.addPline([ps0, ps1]);\r\n        const pl1 = __model__.geom.add.addPline([ps1, ps2]);\r\n        const pl2 = __model__.geom.add.addPline([ps2, ps3]);\r\n        const pl3 = __model__.geom.add.addPline([ps3, ps0]);\r\n        // plines top\r\n        const pl4 = __model__.geom.add.addPline([ps4, ps5]);\r\n        const pl5 = __model__.geom.add.addPline([ps5, ps6]);\r\n        const pl6 = __model__.geom.add.addPline([ps6, ps7]);\r\n        const pl7 = __model__.geom.add.addPline([ps7, ps4]);\r\n        // plines vertical\r\n        const pl8 = __model__.geom.add.addPline([ps0, ps4]);\r\n        const pl9 = __model__.geom.add.addPline([ps1, ps5]);\r\n        const pl10 = __model__.geom.add.addPline([ps2, ps6]);\r\n        const pl11 = __model__.geom.add.addPline([ps3, ps7]);\r\n        // return\r\n        return [pl0, pl1, pl2, pl3, pl4, pl5, pl6, pl7, pl8, pl9, pl10, pl11].map(pl => [EEntType.PLINE, pl]) as TEntTypeIdx[];\r\n    } else {\r\n        const ents_arr: TEntTypeIdx[] = [];\r\n        for (const bbox of bboxs) {\r\n            const bbox_ents: TEntTypeIdx[] = _visBBox(__model__, bbox as TBBox);\r\n            for (const bbox_ent of bbox_ents) {\r\n                ents_arr.push(bbox_ent);\r\n            }\r\n        }\r\n        return ents_arr;\r\n    }\r\n}\r\n/**\r\n * Visualises a bounding box by adding geometry to the model.\r\n *\r\n * @param __model__\r\n * @param bbox A list of lists.\r\n * @returns Entities, twelve polylines representing the box.\r\n * @example bbox1 = virtual.viBBox(position1, vector1, [0,1,0])\r\n * @example_info Creates a plane with position1 on it and normal = cross product of vector1 with y-axis.\r\n */\r\nexport function VisBBox(__model__: GIModel, bbox: TBBox|TBBox): TId[] {\r\n    // --- Error Check ---\r\n    const fn_name = 'virtual.visBBox';\r\n    checkCommTypes(fn_name, 'bbox', bbox, [TypeCheckObj.isBBox]); // TODO bboxs can be a list // add isBBoxList to enable check\r\n    // --- Error Check ---\r\n    return  idsMake(_visBBox(__model__, bbox)) as TId[];\r\n}\r\n// ================================================================================================\r\n","/**\r\n * Download a file.\r\n * @param data\r\n * @param filename\r\n */\r\nexport function download(data: string, filename: string): boolean {\r\n      const data_type = 'text/plain;charset=utf-8';\r\n      const data_bom = decodeURIComponent('%ef%bb%bf');\r\n      if (window.navigator.msSaveBlob) {\r\n          const blob = new Blob([data_bom + data], { type: data_type } );\r\n          window.navigator.msSaveBlob(blob, data);\r\n      } else {\r\n          const link = document.createElement('a');\r\n          const content = data_bom + data;\r\n          const uriScheme = ['data:', data_type, ','].join('');\r\n          link.href = uriScheme + content;\r\n          link.download = filename;\r\n          // FF requires the link in actual DOM\r\n          document.body.appendChild(link);\r\n          link.click();\r\n          document.body.removeChild(link);\r\n      }\r\n      return true;\r\n}\r\n","import { EQueryOperatorTypes, EAttribDataTypeStrs, TAttribDataTypes, IAttribData, RE_SPACES } from './common';\r\nimport { arrRem } from '../util/arrays';\r\n\r\n/**\r\n * Geo-info attribute class for one attribute.\r\n * The attributs stores key-value pairs.\r\n * Multiple keys point to the same value.\r\n * So for example, [[1,3], \"a\"],[[0,4], \"b\"] can be converted into sequential arrays.\r\n * The values would be [\"a\", \"b\"]\r\n * The keys would be [1,0,,0,1] (Note the undefined value in the middle.)\r\n *\r\n */\r\nexport class GIAttribMap {\r\n    private _name: string;\r\n    private _data_type: EAttribDataTypeStrs;\r\n    private _data_size: number;\r\n    // the _num_vals is used as an arbitrary index for the unique values\r\n    // the index will keep growing, even when data gets deleted\r\n    // it counts of the number of unique values (including any deleted values)\r\n    // this should never be decremented, even when values get deleted\r\n    private _num_vals: number;\r\n    // the four data maps that store everything\r\n    private _map_val_k_to_val_i: Map<string|number, number>; // unique, no duplicates\r\n    private _map_val_i_to_val: Map<number, TAttribDataTypes>; // unique, no duplicates\r\n    private _map_val_i_to_ents_i: Map<number, number[]>;\r\n    private _map_ent_i_to_val_i: Map<number, number>;\r\n    /**\r\n     * Creates an attribute.\r\n     * @param attrib_data\r\n     */\r\n    constructor(name: string, data_type: EAttribDataTypeStrs, data_size: number) {\r\n        this._name = name;\r\n        this._data_type = data_type;\r\n        this._data_size = data_size;\r\n        // the maps\r\n        this._num_vals = 0;\r\n        this._map_val_k_to_val_i = new Map();\r\n        this._map_val_i_to_val = new Map();\r\n        this._map_val_i_to_ents_i = new Map();\r\n        this._map_ent_i_to_val_i = new Map();\r\n    }\r\n    /**\r\n     * Returns the JSON data for this attribute.\r\n     */\r\n    public getData(): IAttribData {\r\n        const _data: Array<[number[], TAttribDataTypes]> = [];\r\n        this._map_val_i_to_ents_i.forEach((ents_i: number[], val_i: number) => {\r\n            const val: TAttribDataTypes = this._map_val_i_to_val.get(val_i);\r\n            _data.push([ents_i, val]);\r\n        });\r\n        return {\r\n            name: this._name,\r\n            data_type: this._data_type,\r\n            data_size: this._data_size,\r\n            data: _data\r\n        };\r\n    }\r\n    // /**\r\n    //  * Adds ent_ities to this attribute from JSON data.\r\n    //  * The existing attribute data in the model is not deleted.\r\n    //  * @param attrib_data The JSON data for the new ent_ities.\r\n    //  */\r\n    // public addData(attrib_data: IAttribData, ent_i_offset: number): void {\r\n    //     if (this._name !== attrib_data.name ||\r\n    //         this._data_type !== attrib_data.data_type ||\r\n    //         this._data_size !== attrib_data.data_size) {\r\n    //         throw Error('Attributes do not match.');\r\n    //     }\r\n    //     // increment all the keys by the number of ent_ities in the existing data\r\n    //     attrib_data.data.forEach( keys_value => {\r\n    //         const new_keys: number[] = keys_value[0].map(key => key + ent_i_offset);\r\n    //         const value: TAttribDataTypes = keys_value[1];\r\n    //         this.setEntVal(new_keys, value);\r\n    //     });\r\n    // }\r\n    /**\r\n     * Returns the name of this attribute.\r\n     */\r\n    public getName(): string {\r\n        return this._name;\r\n    }\r\n    /**\r\n     * Returns the data type of this attribute.\r\n     */\r\n    public getDataType(): EAttribDataTypeStrs {\r\n        return this._data_type;\r\n    }\r\n    /**\r\n     * Returns the data size of this attribute.\r\n     */\r\n    public getDataSize(): number {\r\n        return this._data_size;\r\n    }\r\n    /**\r\n     * Returns true if this value exists in the attributes.\r\n     */\r\n    public hasVal(val: TAttribDataTypes): boolean {\r\n        return this._map_val_k_to_val_i.has(this._valToValkey(val));\r\n    }\r\n    /**\r\n     * Returns true if thereis an entity that has a value (i.e. the value is not undefined).\r\n     */\r\n    public hasEnt(ent_i: number): boolean {\r\n        return this._map_ent_i_to_val_i.has(ent_i);\r\n    }\r\n    /**\r\n     * Delete the entities from this attribute map.\r\n     */\r\n    public delEnt(ents_i: number|number[]): void {\r\n        ents_i = (Array.isArray(ents_i)) ? ents_i : [ents_i];\r\n        ents_i.forEach(ent_i => {\r\n            // _map_ent_i_to_val_i: Map<number, number>\r\n            const val_i: number = this._map_ent_i_to_val_i.get(ent_i);\r\n            if (val_i !== undefined) {\r\n                // del the entity from _map_ent_i_to_val_i\r\n                this._map_ent_i_to_val_i.delete(ent_i);\r\n                // del the entity from _map_val_i_to_ents_i\r\n                const other_ents_i: number[] = this._map_val_i_to_ents_i.get(val_i);\r\n                other_ents_i.splice(other_ents_i.indexOf(ent_i), 1);\r\n                // now clean up just in case that was the last entity with this value\r\n                this._cleanUp(val_i);\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Returns a nested array of entities and values, like this:\r\n     * [ [[2,4,6,8], 'hello'], [[9,10], 'world']]\r\n     * This is the same format as used in gi-json\r\n     * This matches the method setEntsVals()\r\n     */\r\n    public getEntsVals(): [number[], TAttribDataTypes][] {\r\n        const ents_i_values: [number[], TAttribDataTypes][] = [];\r\n        this._map_val_i_to_ents_i.forEach( (ents_i, val_i) => {\r\n            const value: TAttribDataTypes = this._map_val_i_to_val.get(val_i);\r\n            ents_i_values.push([ents_i, value]);\r\n        });\r\n        return ents_i_values;\r\n    }\r\n    /**\r\n     * Sets the value for multiple entity-value pairs at the same time.\r\n     * @param ent_i\r\n     * @param val\r\n     */\r\n    public setEntsVals(ents_i_values: [number[], TAttribDataTypes][]): void {\r\n        for (let i = 0; i < ents_i_values.length; i++) {\r\n            this.setEntVal(ents_i_values[i][0], ents_i_values[i][1]);\r\n        }\r\n    }\r\n    /**\r\n     * Sets the value for a given entity or entities.\r\n     * @param ent_i\r\n     * @param val\r\n     */\r\n    public setEntVal(ents_i: number|number[], val: TAttribDataTypes): void {\r\n        const val_k: string | number = this._valToValkey(val);\r\n        // check if this val already exists, if not create it\r\n        if (!this._map_val_k_to_val_i.has(val_k)) {\r\n            this._map_val_k_to_val_i.set(val_k, this._num_vals);\r\n            this._map_val_i_to_val.set(this._num_vals, val);\r\n            this._map_val_i_to_ents_i.set(this._num_vals, []);\r\n            this._num_vals += 1;\r\n        }\r\n        // get the new val_i\r\n        const new_val_i: number = this._map_val_k_to_val_i.get(val_k);\r\n        ents_i = (Array.isArray(ents_i)) ? ents_i : [ents_i];\r\n        // loop through all the unique ents, and set _map_ent_i_to_val_i\r\n        const unique_ents_i: number[] = Array.from(new Set(ents_i));\r\n        unique_ents_i.forEach( ent_i => {\r\n            // keep the old value for later\r\n            const old_val_i: number = this._map_ent_i_to_val_i.get(ent_i);\r\n            // for each ent_i, set the new val_i\r\n            this._map_ent_i_to_val_i.set(ent_i, new_val_i);\r\n            // clean up the old val_i\r\n            if (old_val_i !== undefined && old_val_i !== new_val_i) {\r\n                arrRem(this._map_val_i_to_ents_i.get(old_val_i), ent_i);\r\n            this._cleanUp(old_val_i);\r\n            }\r\n        });\r\n        // for the new val_i, set it ot point to all the ents that have this value\r\n        const exist_ents_i: number[] = this._map_val_i_to_ents_i.get(new_val_i);\r\n        const exist_new_ents_i: number[] = Array.from(new Set(exist_ents_i.concat(ents_i)));\r\n        this._map_val_i_to_ents_i.set(new_val_i, exist_new_ents_i);\r\n    }\r\n    /**\r\n     * Sets the indexed value for a given entity or entities.\r\n     * This assumes that this attribute has a data_size > 1.\r\n     * @param ent_i\r\n     * @param val\r\n     */\r\n    public setEntIdxVal(ent_i: number|number[], val_index: number, val: number|string): void {\r\n        const exist_value_arr: number[]|string[] = this.getEntVal(ent_i) as number[]|string[];\r\n        const new_value_arr: number[]|string[] = exist_value_arr.slice(); // IMPORTANT clone the array\r\n        new_value_arr[val_index] = val;\r\n        this.setEntVal(ent_i, new_value_arr);\r\n        // check that none of the old values need to be cleaned up\r\n        // TODO\r\n    }\r\n    /**\r\n     * Gets the value for a given entity, or an array of values given an array of entities.\r\n     * Returns undefined if the entity does not exist\r\n     * @param ent_i\r\n     */\r\n    public getEntVal(ents_i: number|number[]): TAttribDataTypes|TAttribDataTypes[] {\r\n        if (!Array.isArray(ents_i)) {\r\n            const ent_i: number = ents_i as number;\r\n            const val_i: number = this._map_ent_i_to_val_i.get(ent_i);\r\n            if (val_i === undefined) { return undefined; }\r\n            return this._map_val_i_to_val.get(val_i) as TAttribDataTypes;\r\n        } else {\r\n            return ents_i.map(ent_i => this.getEntVal(ent_i)) as TAttribDataTypes[];\r\n        }\r\n    }\r\n    /**\r\n     * Gets the indexed value for a given entity.\r\n     * Returns undefined if the entity does not exist\r\n     * This assumes that this attribute has a data_size > 1.\r\n     * @param ent_i\r\n     */\r\n    public getEntIdxVal(ents_i: number|number[], val_index: number): number|string|number[]|string[] {\r\n        if (!Array.isArray(ents_i)) {\r\n            const ent_i: number = ents_i as number;\r\n            const exist_value_arr: number[]|string[] = this.getEntVal(ent_i) as number[]|string[];\r\n            return exist_value_arr[val_index] as number|string;\r\n        } else {\r\n            return ents_i.map(ent_i => this.getEntVal(ent_i)) as number[]|string[];\r\n        }\r\n    }\r\n    /**\r\n     * Gets all the keys that have a given value\r\n     * If the value does not exist an empty array is returned\r\n     * @param val\r\n     */\r\n    public getEntsFromVal(val: TAttribDataTypes): number[] {\r\n        const val_i: number = this._map_val_k_to_val_i.get(this._valToValkey(val));\r\n        if (val_i === undefined) { return []; }\r\n        return this._map_val_i_to_ents_i.get(val_i);\r\n    }\r\n    /**\r\n     * Returns an array of entity indices which do not have a value (undefined)\r\n     */\r\n    public getEntsWithoutVal(ents_i: number[]): number[] {\r\n        return ents_i.filter(ent_i => !this._map_ent_i_to_val_i.has(ent_i));\r\n    }\r\n    /**\r\n     * Returns an array of entity indices which have a value (not undefined)\r\n     */\r\n    public getEntsWithVal(ents_i: number[]): number[] {\r\n        return ents_i.filter(ent_i => this._map_ent_i_to_val_i.has(ent_i));\r\n    }\r\n    /**\r\n     * Executes a query\r\n     * @param ents_i\r\n     * @param val_arr_index The index of the value in the array\r\n     * @param operator The relational operator, ==, !=, <=, >=, etc\r\n     * @param val_k The string version of the value.\r\n     */\r\n    public queryVal(ents_i: number[], val_arr_index: number, operator: EQueryOperatorTypes, val_k: string): number[] {\r\n        // check the validity of the arguments\r\n        const indexed = (val_arr_index !== null && val_arr_index !== undefined);\r\n        if (indexed) {\r\n            if (!Number.isInteger(val_arr_index)) {\r\n                throw new Error('Query index \"' + val_arr_index + '\" cannot be converted to an integer: ' + val_arr_index);\r\n            }\r\n            if (!(this._data_size > 0))  {\r\n                throw new Error('Query attribute ' + this._name + ' is not a list.');\r\n            }\r\n        }\r\n        if (this._data_type === EAttribDataTypeStrs.STRING) {\r\n            if (operator !== EQueryOperatorTypes.IS_EQUAL && operator !== EQueryOperatorTypes.IS_NOT_EQUAL) {\r\n                { throw new Error('Query operator \"' + operator + '\" and query \"' + val_k + '\" value are incompatible.'); }\r\n            }\r\n        }\r\n        if (val_k === 'null') {\r\n            if (operator !== EQueryOperatorTypes.IS_EQUAL && operator !== EQueryOperatorTypes.IS_NOT_EQUAL) {\r\n                { throw new Error('Query operator ' + operator + ' and query \"null\" value are incompatible.'); }\r\n            }\r\n        }\r\n        // search, no index\r\n        if (indexed) {\r\n            if (this._data_type === EAttribDataTypeStrs.FLOAT) {\r\n                return this._searchIndexedNumValue(ents_i, val_arr_index, operator, val_k);\r\n            } else {\r\n                return this._searchIndexedStrValue(ents_i, val_arr_index, operator, val_k);\r\n            }\r\n        } else {\r\n            if (this._data_type === EAttribDataTypeStrs.FLOAT) {\r\n                return this._searchNumValue(ents_i, operator, val_k);\r\n            } else {\r\n                return this._searchStrValue(ents_i, operator, val_k);\r\n            }\r\n        }\r\n    }\r\n    //  ===============================================================================================================\r\n    //  Private methods\r\n    //  ===============================================================================================================\r\n    /**\r\n     * Convert a value into a map key\r\n     */\r\n    private _valToValkey(val: TAttribDataTypes): string|number {\r\n        if (this._data_size === 1 && this._data_type === EAttribDataTypeStrs.STRING) {\r\n            if (typeof val === 'string') {\r\n                return val as string;\r\n            } else {\r\n                return String(val);\r\n            }\r\n        }\r\n        if (this._data_size === 1 && this._data_type === EAttribDataTypeStrs.FLOAT) {\r\n            if (typeof val === 'string') {\r\n                return parseFloat(val);\r\n            } else {\r\n                return val as number;\r\n            }\r\n        }\r\n        return JSON.stringify(val);\r\n    }\r\n    /**\r\n     * Checks if anything still points to this value\r\n     * If not, cleans up the arrays\r\n     * _map_val_i_to_ents_i\r\n     * _map_val_i_to_val\r\n     * _map_val_k_to_val_i\r\n     */\r\n    private _cleanUp(val_i: number): void {\r\n        if (val_i !== undefined) {\r\n            // _map_val_i_to_ents_i: Map<number, number[]>\r\n            const ents_i: number[] = this._map_val_i_to_ents_i.get(val_i);\r\n            if (ents_i.length === 0) {\r\n                this._map_val_i_to_ents_i.delete(val_i);\r\n                // _map_val_i_to_val: Map<number, TAttribDataTypes>\r\n                const val: TAttribDataTypes = this._map_val_i_to_val.get(val_i);\r\n                this._map_val_i_to_val.delete(val_i);\r\n                // _map_val_k_to_val_i: Map<string|number, number>\r\n                this._map_val_k_to_val_i.delete(this._valToValkey(val));\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Compare two values\r\n     * @param operator\r\n     * @param val1\r\n     * @param val2\r\n     */\r\n    private _compare(operator: EQueryOperatorTypes, val1: any, val2: any): boolean {\r\n        if (val1 === undefined) { val1 = null; }\r\n        if (val2 === undefined) { val2 = null; }\r\n        switch (operator) {\r\n            // ==\r\n            case EQueryOperatorTypes.IS_EQUAL:\r\n                return val1 === val2;\r\n            // !=\r\n            case EQueryOperatorTypes.IS_NOT_EQUAL:\r\n                return val1 !== val2;\r\n            // >\r\n            case EQueryOperatorTypes.IS_GREATER:\r\n                return val1 > val2;\r\n            // >=\r\n            case EQueryOperatorTypes.IS_GREATER_OR_EQUAL:\r\n                return val1 >= val2;\r\n            // <\r\n            case EQueryOperatorTypes.IS_LESS:\r\n                return val1 < val2;\r\n            // <=\r\n            case EQueryOperatorTypes.IS_LESS_OR_EQUAL:\r\n                return val1 <= val2;\r\n            default:\r\n                throw new Error('Query operator not found: ' + operator);\r\n        }\r\n    }\r\n    /**\r\n     * Searches for the value using the operator\r\n     */\r\n    private _searchNumValue(ents_i: number[], operator: EQueryOperatorTypes, val_k: string): number[] {\r\n        // clean up\r\n        val_k = val_k.replace(RE_SPACES, '');\r\n        // first deal with null cases\r\n        if (val_k === 'null' && operator === EQueryOperatorTypes.IS_EQUAL ) {\r\n            return this.getEntsWithoutVal(ents_i);\r\n        } else if (val_k === 'null' && operator === EQueryOperatorTypes.IS_NOT_EQUAL ) {\r\n            return this.getEntsWithVal(ents_i);\r\n        }\r\n        // get the values to search for\r\n        const search_val: number = Number(val_k);\r\n        if (isNaN(search_val)) {\r\n            throw new Error('Query error: the search value is not a number.');\r\n        }\r\n        // search\r\n        let found_keys: number[];\r\n        switch (operator) {\r\n            case EQueryOperatorTypes.IS_EQUAL:\r\n                found_keys = this.getEntsFromVal(search_val);\r\n                if (found_keys === undefined) { return []; }\r\n                return ents_i.filter(ent_i => found_keys.indexOf(ent_i) !== -1);\r\n            case EQueryOperatorTypes.IS_NOT_EQUAL:\r\n                found_keys = this.getEntsFromVal(search_val);\r\n                if (found_keys === undefined) { return []; }\r\n                return ents_i.filter(ent_i => found_keys.indexOf(ent_i) === -1);\r\n            case EQueryOperatorTypes.IS_GREATER:\r\n            case EQueryOperatorTypes.IS_GREATER_OR_EQUAL:\r\n            case EQueryOperatorTypes.IS_LESS:\r\n            case EQueryOperatorTypes.IS_LESS_OR_EQUAL:\r\n                found_keys = [];\r\n                for (const ent_i of ents_i) {\r\n                    const val: TAttribDataTypes = this.getEntVal(ent_i) as TAttribDataTypes;\r\n                    if ((val !== null && val !== undefined) && this._compare(operator, val, search_val) ) {\r\n                        found_keys.push(ent_i);\r\n                    }\r\n                }\r\n                return found_keys;\r\n            default:\r\n                throw new Error('Query error: Operator not found.');\r\n        }\r\n    }\r\n    /**\r\n     * Searches for the value using the operator\r\n     */\r\n    private _searchStrValue(ents_i: number[], operator: EQueryOperatorTypes, val_k: string): number[] {\r\n        // first deal with null cases\r\n        if (val_k === 'null' && operator === EQueryOperatorTypes.IS_EQUAL ) {\r\n            return this.getEntsWithoutVal(ents_i);\r\n        } else if (val_k === 'null' && operator === EQueryOperatorTypes.IS_NOT_EQUAL ) {\r\n            return this.getEntsWithVal(ents_i);\r\n        }\r\n        // get the values to search for\r\n        const search_val: string = val_k;\r\n        // search\r\n        let found_keys: number[];\r\n        switch (operator) {\r\n            case EQueryOperatorTypes.IS_EQUAL:\r\n                found_keys = this.getEntsFromVal(search_val);\r\n                if (found_keys === undefined) { return []; }\r\n                return ents_i.filter(ent_i => found_keys.indexOf(ent_i) !== -1);\r\n            case EQueryOperatorTypes.IS_NOT_EQUAL:\r\n                found_keys = this.getEntsFromVal(search_val);\r\n                if (found_keys === undefined) { return []; }\r\n                return ents_i.filter(ent_i => found_keys.indexOf(ent_i) === -1);\r\n            case EQueryOperatorTypes.IS_GREATER:\r\n            case EQueryOperatorTypes.IS_GREATER_OR_EQUAL:\r\n            case EQueryOperatorTypes.IS_LESS:\r\n            case EQueryOperatorTypes.IS_LESS_OR_EQUAL:\r\n                throw new Error('Query error: Operator not allowed with string values.');\r\n            default:\r\n                throw new Error('Query error: Operator not found.');\r\n        }\r\n    }\r\n    /**\r\n     * Searches for the value using the operator\r\n     */\r\n    private _searchIndexedNumValue(ents_i: number[], val_arr_index: number, operator: EQueryOperatorTypes, val_k: string): number[] {\r\n        // clean up\r\n        val_k = val_k.replace(RE_SPACES, '');\r\n        // get the search value, null or a number\r\n        let search_val: number;\r\n        if (val_k === 'null') {\r\n            search_val = null;\r\n        } else { // value_str must be a number\r\n            search_val = Number.parseFloat(val_k);\r\n            if (isNaN(search_val)) {\r\n                throw new Error('Query value \"' + val_k + '\" cannot be converted to a number: ' + val_k);\r\n            }\r\n        }\r\n        // do the search\r\n        const found_keys: number[] = [];\r\n        for (const ent_i of ents_i) {\r\n            const search_value_arr: TAttribDataTypes = this.getEntVal(ent_i) as TAttribDataTypes;\r\n            if ((search_value_arr !== undefined) &&\r\n                this._compare(operator, search_value_arr[val_arr_index], search_val) ) {\r\n                found_keys.push(ent_i);\r\n            }\r\n        }\r\n        return found_keys;\r\n    }\r\n    /**\r\n     * Searches for the value using the operator\r\n     */\r\n    private _searchIndexedStrValue(ents_i: number[], val_arr_index: number, operator: EQueryOperatorTypes, val_k: string): number[] {\r\n        // clean up\r\n        val_k = val_k.replace(RE_SPACES, '');\r\n        // get the search value, null or a string\r\n        let search_val: string;\r\n        if (val_k === 'null') {\r\n            search_val = null;\r\n        } else { // value_str must be a number\r\n            search_val = val_k;\r\n        }\r\n        // do the search\r\n        const found_keys: number[] = [];\r\n        for (const ent_i of ents_i) {\r\n            const search_value_arr: TAttribDataTypes = this.getEntVal(ent_i) as TAttribDataTypes;\r\n            if ( this._compare(operator, search_value_arr[val_arr_index], search_val) ) {\r\n                found_keys.push(ent_i);\r\n            }\r\n        }\r\n        return found_keys;\r\n    }\r\n}\r\n","import { GIAttribsAdd } from './GIAttribsAdd';\r\nimport { GIAttribsThreejs } from './GIAttribsThreejs';\r\nimport { GIAttribsQuery } from './GIAttribsQuery';\r\nimport { GIModel } from './GIModel';\r\nimport { EEntType, EAttribNames,  IAttribsData, EAttribDataTypeStrs, IAttribsMaps } from './common';\r\nimport { GIAttribsIO } from './GIAttribsIO';\r\n\r\n/**\r\n * Class for attributes.\r\n */\r\nexport class GIAttribs {\r\n    private _model: GIModel;\r\n    // maps, the key is the name, the value is the attrib map clas\r\n    public _attribs_maps: IAttribsMaps = { // TODO this should not be public\r\n        ps: new Map(),\r\n        _v: new Map(),\r\n        _e: new Map(),\r\n        _w: new Map(),\r\n        _f: new Map(),\r\n        pt: new Map(),\r\n        pl: new Map(),\r\n        pg: new Map(),\r\n        co: new Map(),\r\n        mo: new Map()\r\n    };\r\n    // sub classes with methods\r\n    public io: GIAttribsIO;\r\n    public add: GIAttribsAdd;\r\n    public query: GIAttribsQuery;\r\n    public threejs: GIAttribsThreejs;\r\n   /**\r\n     * Creates an object to store the attribute data.\r\n     * @param model The JSON data\r\n     */\r\n    constructor(model: GIModel) {\r\n        this._model = model;\r\n        this.io = new GIAttribsIO(model, this._attribs_maps);\r\n        this.add = new GIAttribsAdd(model, this._attribs_maps);\r\n        this.query = new GIAttribsQuery(model, this._attribs_maps);\r\n        this.threejs = new GIAttribsThreejs(model, this._attribs_maps);\r\n        this.add.addAttrib(EEntType.POSI, EAttribNames.COORDS, EAttribDataTypeStrs.FLOAT, 3);\r\n    }\r\n}\r\n","import { GIModel } from './GIModel';\r\nimport { IAttribsData, IModelData, IAttribData, TAttribDataTypes, EEntType,\r\n    EAttribDataTypeStrs, IGeomData, IAttribsMaps, EAttribNames, Txyz, EEntTypeStr, EAttribPromote } from './common';\r\nimport { GIAttribMap } from './GIAttribMap';\r\nimport { vecAdd, vecDiv, vecSum } from '@libs/geom/vectors';\r\nimport * as mathjs from 'mathjs';\r\n\r\n/**\r\n * Class for attributes.\r\n */\r\nexport class GIAttribsAdd {\r\n    private _model: GIModel;\r\n    private _attribs_maps: IAttribsMaps;\r\n   /**\r\n     * Creates an object to store the attribute data.\r\n     * @param model The JSON data\r\n     */\r\n    constructor(model: GIModel, attribs_maps: IAttribsMaps) {\r\n        this._model = model;\r\n        this._attribs_maps = attribs_maps;\r\n    }\r\n    /**\r\n     * Creates a new attribte.\r\n     * If the attribute already exists, then the existing attribute is returned.\r\n     *\r\n     * @param ent_type The level at which to create the attribute.\r\n     * @param name The name of the attribute.\r\n     * @param data_type The data type of the attribute.\r\n     * @param data_size The data size of the attribute. For example, an XYZ vector has size=3.\r\n     */\r\n    public addAttrib(ent_type: EEntType, name: string, data_type: EAttribDataTypeStrs, data_size: number): GIAttribMap {\r\n        const attribs_maps_key: string = EEntTypeStr[ent_type];\r\n        const attribs: Map<string, GIAttribMap> = this._attribs_maps[attribs_maps_key];\r\n        if (!attribs.has(name)) {\r\n            const attrib: GIAttribMap = new GIAttribMap(name, data_type, data_size);\r\n            attribs.set(name, attrib);\r\n        } else {\r\n            if (attribs.get(name).getDataType() !== data_type || attribs.get(name).getDataSize() !== data_size) {\r\n                throw new Error('Attribute could not be created do to conflict with existing attribute with same name.');\r\n            }\r\n        }\r\n        return attribs.get(name);\r\n    }\r\n    /**\r\n     * Set a model attrib value\r\n     * @param id\r\n     * @param name\r\n     * @param value\r\n     */\r\n    public setModelAttribValue(name: string, value: TAttribDataTypes): void {\r\n        const attribs_maps_key: string = EEntTypeStr[EEntType.MOD];\r\n        const attrib: Map<string, any> = this._attribs_maps[attribs_maps_key];\r\n        attrib.set(name, value);\r\n    }\r\n    /**\r\n     * Set a model attrib indexed value.\r\n     * If the attribute does not exist, it throws an error.\r\n     * @param id\r\n     * @param name\r\n     * @param value\r\n     */\r\n    public setModelAttribIndexedValue(name: string, value_index: number, value: number|string): void {\r\n        const attribs_maps_key: string = EEntTypeStr[EEntType.MOD];\r\n        const attrib: Map<string, any> = this._attribs_maps[attribs_maps_key];\r\n        const list_value: TAttribDataTypes = attrib.get(name);\r\n        if (list_value === undefined) { throw new Error('Attribute with this name does not exist.'); }\r\n        if (!Array.isArray(list_value)) { throw new Error('Attribute is not a list, so indexed values are not allowed.'); }\r\n        if (value_index >= list_value.length) { throw new Error('Value index is out of range for attribute list size.'); }\r\n        list_value[value_index] = value;\r\n    }\r\n    /**\r\n     * Set an entity attrib value\r\n     * If the attribute does not exist, then it is created.\r\n     * @param id\r\n     * @param name\r\n     * @param value\r\n     */\r\n    public setAttribValue(ent_type: EEntType, ents_i: number|number[], name: string, value: TAttribDataTypes): void {\r\n        const attribs_maps_key: string = EEntTypeStr[ent_type];\r\n        const attribs: Map<string, GIAttribMap> = this._attribs_maps[attribs_maps_key];\r\n        if (attribs.get(name) === undefined) {\r\n            const [new_data_type, new_data_size]: [EAttribDataTypeStrs, number] = this._checkDataTypeSize(value);\r\n            this.addAttrib(ent_type, name, new_data_type, new_data_size);\r\n        } \r\n        attribs.get(name).setEntVal(ents_i, value);\r\n    }\r\n    /**\r\n     * Set an entity attrib indexed value.\r\n     * If the attribute does not exist, it throws an error.\r\n     * @param id\r\n     * @param name\r\n     * @param value\r\n     */\r\n    public setAttribIndexedValue(ent_type: EEntType, ents_i: number|number[], name: string,\r\n            value_index: number, value: number|string): void {\r\n        const attribs_maps_key: string = EEntTypeStr[ent_type];\r\n        const attribs: Map<string, GIAttribMap> = this._attribs_maps[attribs_maps_key];\r\n        const attrib: GIAttribMap = attribs.get(name);\r\n        if (attrib === undefined) { throw new Error('Attribute does not exist.'); }\r\n        if (attrib.getDataSize() === 1) { throw new Error('Attribute is not a list, so indexed values are not allowed.'); }\r\n        if (value_index >= attrib.getDataSize()) { throw new Error('Value index is out of range for attribute list size.'); }\r\n        attrib.setEntIdxVal(ents_i, value_index, value);\r\n    }\r\n    /**\r\n     * Delete the entity from an attribute\r\n     * If there is no value for the entity, then this does nothing\r\n     * If there is a value, then both the entity index and the value are deleted\r\n     * @param ent_type\r\n     * @param name\r\n     */\r\n    public delEntFromAttribs(ent_type: EEntType, ents_i: number|number[]): void {\r\n        // get the attrib names\r\n        const attribs_maps_key: string = EEntTypeStr[ent_type];\r\n        const attribs: Map<string, GIAttribMap> = this._attribs_maps[attribs_maps_key];\r\n        attribs.forEach( attrib => attrib.delEnt(ents_i) );\r\n    }\r\n    /**\r\n     * Set the xyz position by index\r\n     * @param index\r\n     * @param value\r\n     */\r\n    public setPosiCoords(index: number, xyz: Txyz): void {\r\n        this._attribs_maps.ps.get(EAttribNames.COORDS).setEntVal(index, xyz);\r\n    }\r\n    /**\r\n     * Move the xyz position by index\r\n     * @param index\r\n     * @param value\r\n     */\r\n    public movePosiCoords(index: number, xyz: Txyz): void {\r\n        const old_xyz: Txyz = this._attribs_maps.ps.get(EAttribNames.COORDS).getEntVal(index) as Txyz;\r\n        const new_xyz: Txyz = vecAdd(old_xyz, xyz);\r\n        this._attribs_maps.ps.get(EAttribNames.COORDS).setEntVal(index, new_xyz);\r\n    }\r\n    /**\r\n     * Copy all attribs from one entity to another entity\r\n     * @param ent_type\r\n     * @param name\r\n     */\r\n    public copyAttribs(ent_type: EEntType, from_ent_i: number, to_ent_i: number): void {\r\n        // get the attrib names\r\n        const attribs_maps_key: string = EEntTypeStr[ent_type];\r\n        const attribs: Map<string, GIAttribMap> = this._attribs_maps[attribs_maps_key];\r\n        const attrib_names: string[] = Array.from(attribs.keys());\r\n        // copy each attrib\r\n        for (const attrib_name of attrib_names) {\r\n            const attrib: GIAttribMap = attribs.get(attrib_name);\r\n            const attrib_value: TAttribDataTypes =  attrib.getEntVal(from_ent_i) as TAttribDataTypes;\r\n            attrib.setEntVal(to_ent_i, attrib_value);\r\n        }\r\n    }\r\n    /**\r\n     * Promotes attrib values up and down the hierarchy.\r\n     */\r\n    public promoteAttribValues(ent_type: EEntType, attrib_name: string, indices: number[], to_ent_type: EEntType,\r\n            method: EAttribPromote): void {\r\n        if (ent_type === to_ent_type) { return; }\r\n        // check that the attribute exists\r\n        if (! this._model.attribs.query.hasAttrib(ent_type, attrib_name)) {\r\n            throw new Error('The attribute does not exist.');\r\n        }\r\n        // get the data type and data size of the existing attribute\r\n        const data_type: EAttribDataTypeStrs = this._model.attribs.query.getAttribDataType(ent_type, attrib_name);\r\n        const data_size: number = this._model.attribs.query.getAttribDataSize(ent_type, attrib_name);\r\n        // move attributes from entities up to the model, or form model down to entities\r\n        if (to_ent_type === EEntType.MOD) {\r\n            this.addAttrib(to_ent_type, attrib_name, data_type, data_size);\r\n            const attrib_values: TAttribDataTypes[] = [];\r\n            for (const index of indices) {\r\n                attrib_values.push(this._model.attribs.query.getAttribValue(ent_type, attrib_name, index) as TAttribDataTypes);\r\n            }\r\n            const value: TAttribDataTypes = this._aggregateValues(attrib_values, data_size, method);\r\n            this.setModelAttribValue(attrib_name, value);\r\n            return;\r\n        } else if (ent_type === EEntType.MOD) {\r\n            const value: TAttribDataTypes = this._model.attribs.query.getModelAttribValue(attrib_name);\r\n            this.addAttrib(to_ent_type, attrib_name, data_type, data_size);\r\n            const target_ents_i: number[] = this._model.geom.query.getEnts(to_ent_type, false);\r\n            for (const target_ent_i of target_ents_i) {\r\n                this.setAttribValue(to_ent_type, target_ent_i, attrib_name, value);\r\n            }\r\n            return;\r\n        }\r\n        // get all the values for each target\r\n        const attrib_values_map: Map<number, TAttribDataTypes[]> = new Map();\r\n        for (const index of indices) {\r\n            const attrib_value: TAttribDataTypes =\r\n                this._model.attribs.query.getAttribValue(ent_type, attrib_name, index) as TAttribDataTypes;\r\n            const target_ents_i: number[] = this._model.geom.query.navAnyToAny(ent_type, to_ent_type, index);\r\n            for (const target_ent_i of target_ents_i) {\r\n                if (! attrib_values_map.has(target_ent_i)) {\r\n                        attrib_values_map.set(target_ent_i, []);\r\n                }\r\n                attrib_values_map.get(target_ent_i).push(attrib_value);\r\n            }\r\n        }\r\n        // create the new target attribute if it does not already exist\r\n        this.addAttrib(to_ent_type, attrib_name, data_type, data_size);\r\n        // calculate the new value and set the attribute\r\n        attrib_values_map.forEach( (attrib_values, target_ent_i) => {\r\n            let value: TAttribDataTypes = attrib_values[0];\r\n            if (attrib_values.length > 1 && data_type === EAttribDataTypeStrs.FLOAT) {\r\n                value = this._aggregateValues(attrib_values, data_size, method);\r\n            }\r\n            this.setAttribValue(to_ent_type, target_ent_i, attrib_name, value);\r\n        });\r\n    }\r\n    /**\r\n     * Transfer attrib values to neighbouring entities of the same type.\r\n     * Neighbouring entities are those that share the same positions.\r\n     */\r\n    public transferAttribValues(ent_type: EEntType, attrib_name: string, indices: number[], method: number): void {\r\n        throw new Error('Attribute transfer is not yet implemented.');\r\n    }\r\n    // ============================================================================\r\n    // Private methods\r\n    // ============================================================================\r\n    private _aggregateValues(values: TAttribDataTypes[], data_size: number, method: EAttribPromote): TAttribDataTypes {\r\n        switch (method) {\r\n            case EAttribPromote.AVERAGE:\r\n                if (data_size > 1) {\r\n                    const result: number[] = [];\r\n                    for (let i = 0; i < data_size; i++) {\r\n                        result[i] = mathjs.mean(values.map(vec => vec[i]));\r\n                    }\r\n                    return result;\r\n                } else {\r\n                    return mathjs.mean(values);\r\n                }\r\n            case EAttribPromote.MEDIAN:\r\n                if (data_size > 1) {\r\n                    const result: number[] = [];\r\n                    for (let i = 0; i < data_size; i++) {\r\n                        result[i] = mathjs.median(values.map(vec => vec[i]));\r\n                    }\r\n                    return result;\r\n                } else {\r\n                    return mathjs.median(values);\r\n                }\r\n            case EAttribPromote.SUM:\r\n                if (data_size > 1) {\r\n                    const result: number[] = [];\r\n                    for (let i = 0; i < data_size; i++) {\r\n                        result[i] = mathjs.sum(values.map(vec => vec[i]));\r\n                    }\r\n                    return result;\r\n                } else {\r\n                    return mathjs.sum(values);\r\n                }\r\n            case EAttribPromote.MIN:\r\n                if (data_size > 1) {\r\n                    const result: number[] = [];\r\n                    for (let i = 0; i < data_size; i++) {\r\n                        result[i] = mathjs.min(values.map(vec => vec[i]));\r\n                    }\r\n                    return result;\r\n                } else {\r\n                    return mathjs.min(values);\r\n                }\r\n            case EAttribPromote.MAX:\r\n                if (data_size > 1) {\r\n                    const result: number[] = [];\r\n                    for (let i = 0; i < data_size; i++) {\r\n                        result[i] = mathjs.max(values.map(vec => vec[i]));\r\n                    }\r\n                    return result;\r\n                } else {\r\n                    return mathjs.max(values);\r\n                }\r\n            case EAttribPromote.LAST:\r\n                return values[values.length - 1];\r\n            default:\r\n                return values[0]; // EAttribPromote.FIRST\r\n        }\r\n    }\r\n    /**\r\n     * Utility method to check the data type and size of a value\r\n     * @param value\r\n     */\r\n    private _checkDataTypeSize(value: TAttribDataTypes): [EAttribDataTypeStrs, number] {\r\n        let data_size: number;\r\n        let first_value = null;\r\n        if (Array.isArray(value)) {\r\n            const values = value as number[] | string[];\r\n            if (values.length === 1) {\r\n                throw new Error('An array data type must have more than one value.');\r\n            }\r\n            first_value = values[0];\r\n            data_size = values.length;\r\n        } else {\r\n            first_value = value;\r\n            data_size = 1;\r\n        }\r\n        let data_type: EAttribDataTypeStrs = null;\r\n        if (typeof first_value === 'number') {\r\n            data_type = EAttribDataTypeStrs.FLOAT;\r\n        } else if (typeof first_value === 'string') {\r\n            data_type = EAttribDataTypeStrs.STRING;\r\n        } else {\r\n            throw new Error('Data type for new attribute not recognised.');\r\n        }\r\n        return [data_type, data_size];\r\n    }\r\n}\r\n","import { GIModel } from './GIModel';\r\nimport { IAttribsData, IAttribData, TAttribDataTypes, EEntType, IAttribsMaps, EEntTypeStr, TModelAttribValuesArr } from './common';\r\nimport { GIAttribMap } from './GIAttribMap';\r\n\r\n/**\r\n * Class for attributes.\r\n */\r\nexport class GIAttribsIO {\r\n    private _model: GIModel;\r\n    private _attribs_maps: IAttribsMaps;\r\n   /**\r\n     * Creates an object to store the attribute data.\r\n     * @param model The JSON data\r\n     */\r\n    constructor(model: GIModel, attribs_maps: IAttribsMaps) {\r\n        this._model = model;\r\n        this._attribs_maps = attribs_maps;\r\n    }\r\n    /**\r\n     * Adds data to this model from JSON data.\r\n     * The existing data in the model is not deleted.\r\n     * @param model_data The JSON data for the model.\r\n     */\r\n    public merge(attribs_maps: IAttribsMaps): void {\r\n        // add the attribute data\r\n        if (attribs_maps.ps !== undefined) { this._mergeAttribs(attribs_maps, EEntType.POSI); }\r\n        if (attribs_maps._v !== undefined) { this._mergeAttribs(attribs_maps, EEntType.VERT); }\r\n        if (attribs_maps._e !== undefined) { this._mergeAttribs(attribs_maps, EEntType.EDGE); }\r\n        if (attribs_maps._w !== undefined) { this._mergeAttribs(attribs_maps, EEntType.WIRE); }\r\n        if (attribs_maps._f !== undefined) { this._mergeAttribs(attribs_maps, EEntType.FACE); }\r\n        if (attribs_maps.pt !== undefined) { this._mergeAttribs(attribs_maps, EEntType.POINT); }\r\n        if (attribs_maps.pl !== undefined) { this._mergeAttribs(attribs_maps, EEntType.PLINE); }\r\n        if (attribs_maps.pg !== undefined) { this._mergeAttribs(attribs_maps, EEntType.PGON); }\r\n        if (attribs_maps.co !== undefined) { this._mergeAttribs(attribs_maps, EEntType.COLL); }\r\n        if (attribs_maps.mo !== undefined) { this._mergeModelAttribs(attribs_maps); }\r\n    }\r\n    /**\r\n     * Adds data to this model from JSON data.\r\n     * The existing data in the model is not deleted.\r\n     * @param model_data The JSON data for the model.\r\n     */\r\n    public setData(attribs_data: IAttribsData): void {\r\n        // add the attribute data\r\n        if (attribs_data.positions !== undefined) {\r\n            this._setAttribs(attribs_data.positions, EEntType.POSI);\r\n        }\r\n        if (attribs_data.vertices !== undefined) {\r\n            this._setAttribs(attribs_data.vertices, EEntType.VERT);\r\n        }\r\n        if (attribs_data.edges !== undefined) {\r\n            this._setAttribs(attribs_data.edges, EEntType.EDGE);\r\n        }\r\n        if (attribs_data.wires !== undefined) {\r\n            this._setAttribs(attribs_data.wires, EEntType.WIRE);\r\n        }\r\n        if (attribs_data.faces !== undefined) {\r\n            this._setAttribs(attribs_data.faces, EEntType.FACE);\r\n        }\r\n        if (attribs_data.points !== undefined) {\r\n            this._setAttribs(attribs_data.points, EEntType.POINT);\r\n        }\r\n        if (attribs_data.polylines !== undefined) {\r\n            this._setAttribs(attribs_data.polylines, EEntType.PLINE);\r\n        }\r\n        if (attribs_data.polygons !== undefined) {\r\n            this._setAttribs(attribs_data.polygons, EEntType.PGON);\r\n        }\r\n        if (attribs_data.collections !== undefined) {\r\n            this._setAttribs(attribs_data.collections, EEntType.COLL);\r\n        }\r\n        if (attribs_data.model !== undefined) {\r\n            this._setModelAttribs(attribs_data.model);\r\n        }\r\n    }\r\n    /**\r\n     * Returns the JSON data for this model.\r\n     */\r\n    public getData(): IAttribsData {\r\n        return {\r\n            positions: Array.from(this._attribs_maps.ps.values()).map(attrib => attrib.getData()),\r\n            vertices: Array.from(this._attribs_maps._v.values()).map(attrib => attrib.getData()),\r\n            edges: Array.from(this._attribs_maps._e.values()).map(attrib => attrib.getData()),\r\n            wires: Array.from(this._attribs_maps._w.values()).map(attrib => attrib.getData()),\r\n            faces: Array.from(this._attribs_maps._f.values()).map(attrib => attrib.getData()),\r\n            points: Array.from(this._attribs_maps.pt.values()).map(attrib => attrib.getData()),\r\n            polylines: Array.from(this._attribs_maps.pl.values()).map(attrib => attrib.getData()),\r\n            polygons: Array.from(this._attribs_maps.pg.values()).map(attrib => attrib.getData()),\r\n            collections: Array.from(this._attribs_maps.co.values()).map(attrib => attrib.getData()),\r\n            model: Array.from(this._attribs_maps.mo)\r\n        };\r\n    }\r\n    // ============================================================================\r\n    // Private methods\r\n    // ============================================================================\r\n    /**\r\n     * From another model\r\n     * The existing attributes are not deleted\r\n     * @param attribs_maps\r\n     */\r\n    private _mergeModelAttribs(attribs_maps: IAttribsMaps) {\r\n        const from_attrib: Map<string, TAttribDataTypes> = attribs_maps[EEntTypeStr[ EEntType.MOD ]];\r\n        const to_attrib: Map<string, TAttribDataTypes> = this._attribs_maps[EEntTypeStr[ EEntType.MOD ]];\r\n        from_attrib.forEach( (value, name) => {\r\n            to_attrib.set(name, value);\r\n        });\r\n    }\r\n    /**\r\n     * From JSON data\r\n     * Existing attributes are deleted\r\n     * @param new_attribs_data\r\n     */\r\n    private _setModelAttribs(new_attribs_data: TModelAttribValuesArr) {\r\n        this._attribs_maps[EEntTypeStr[ EEntType.MOD ]] = new Map(new_attribs_data);\r\n    }\r\n    /**\r\n     * From another model\r\n     * The existing attributes are not deleted\r\n     * @param attribs_maps\r\n     */\r\n    private _mergeAttribs(attribs_maps: IAttribsMaps, ent_type: EEntType) {\r\n        const from_attribs: Map<string, GIAttribMap> = attribs_maps[EEntTypeStr[ ent_type ]];\r\n        const to_attribs: Map<string, GIAttribMap> = this._attribs_maps[EEntTypeStr[ ent_type ]];\r\n        const num_ents: number = this._model.geom.query.numEnts(ent_type, true); // incude deleted ents\r\n        from_attribs.forEach( from_attrib => {\r\n            const name: string = from_attrib.getName();\r\n            // get or create the existing attrib\r\n            if (!to_attribs.has(name)) {\r\n                to_attribs.set(name, new GIAttribMap( name, from_attrib.getDataType(), from_attrib.getDataSize()) );\r\n            }\r\n            const to_attrib: GIAttribMap = to_attribs.get(name);\r\n            // get the data and shift the ents_i indices\r\n            const ents_i_values: [number[], TAttribDataTypes][] = from_attrib.getEntsVals();\r\n\r\n            for (const ents_i_value of ents_i_values) {\r\n                ents_i_value[0] = ents_i_value[0].map( ent_i => ent_i + num_ents ); // shift\r\n            }\r\n            // set the data\r\n            to_attrib.setEntsVals(ents_i_values);\r\n        });\r\n    }\r\n    /**\r\n     * From JSON data\r\n     * Existing attributes are deleted\r\n     * @param new_attribs_data\r\n     */\r\n    private _setAttribs(new_attribs_data: IAttribData[], ent_type: EEntType) {\r\n        const to_attribs: Map<string, GIAttribMap> = new Map();\r\n        new_attribs_data.forEach( new_attrib_data => {\r\n            const name: string = new_attrib_data.name;\r\n            // create a new attrib\r\n            const to_attrib: GIAttribMap = new GIAttribMap( name, new_attrib_data.data_type, new_attrib_data.data_size );\r\n            to_attribs.set(name, to_attrib);\r\n            // set the data\r\n            to_attrib.setEntsVals(new_attrib_data.data);\r\n        });\r\n        this._attribs_maps[EEntTypeStr[ ent_type ]] = to_attribs;\r\n    }\r\n}\r\n","import { GIModel } from './GIModel';\r\nimport { TAttribDataTypes, IAttribsMaps, IQueryComponent,\r\n    Txyz, EAttribNames, EEntType, EQueryOperatorTypes, ISortComponent, ESort, EAttribDataTypeStrs, EEntTypeStr } from './common';\r\nimport { GIAttribMap } from './GIAttribMap';\r\nimport { string } from '@assets/core/modules/_mathjs';\r\n\r\n/**\r\n * Class for attributes.\r\n */\r\nexport class GIAttribsQuery {\r\n    private _model: GIModel;\r\n    private _attribs_maps: IAttribsMaps;\r\n   /**\r\n     * Creates an object to store the attribute data.\r\n     * @param model The JSON data\r\n     */\r\n    constructor(model: GIModel, attribs_maps: IAttribsMaps) {\r\n        this._model = model;\r\n        this._attribs_maps = attribs_maps;\r\n    }\r\n    /**\r\n     * Checks if an attribute with this name exists.\r\n     * @param name\r\n     */\r\n    public hasModelAttrib(name: string): boolean {\r\n        const attribs_maps_key: string = EEntTypeStr[EEntType.MOD];\r\n        const attrib: Map<string, TAttribDataTypes> = this._attribs_maps[attribs_maps_key];\r\n        return attrib.has(name);\r\n    }\r\n    /**\r\n     * Get attrib data type. Also works for MOD attribs.\r\n     *\r\n     * @param ent_type\r\n     * @param name\r\n     */\r\n    public getAttribDataType(ent_type: EEntType, name: string): EAttribDataTypeStrs {\r\n        const attribs_maps_key: string = EEntTypeStr[ent_type];\r\n        const attribs: Map<string, GIAttribMap>|Map<string, TAttribDataTypes> = this._attribs_maps[attribs_maps_key];\r\n        if (attribs.get(name) === undefined) { throw new Error('Attribute with this name does not exist.'); }\r\n        if (ent_type === EEntType.MOD) {\r\n            const mod_attribs: Map<string, TAttribDataTypes> = attribs as Map<string, TAttribDataTypes>;\r\n            const value: TAttribDataTypes = mod_attribs.get(name);\r\n            let first_value: number|string;\r\n            if (Array.isArray(value)) {\r\n                first_value = value[0];\r\n            } else {\r\n                first_value = value;\r\n            }\r\n            if (typeof first_value === 'string') { return EAttribDataTypeStrs.STRING; }\r\n            return EAttribDataTypeStrs.FLOAT;\r\n        } else {\r\n            const ent_attribs: Map<string, GIAttribMap> = attribs as Map<string, GIAttribMap>;\r\n            return ent_attribs.get(name).getDataType();\r\n        }\r\n    }\r\n    /**\r\n     * Get attrib data size. Also works for MOD attribs.\r\n     *\r\n     * @param ent_type\r\n     * @param name\r\n     */\r\n    public getAttribDataSize(ent_type: EEntType, name: string): number {\r\n        const attribs_maps_key: string = EEntTypeStr[ent_type];\r\n        const attribs: Map<string, GIAttribMap>|Map<string, TAttribDataTypes> = this._attribs_maps[attribs_maps_key];\r\n        if (attribs.get(name) === undefined) { throw new Error('Attribute with this name does not exist.'); }\r\n        if (ent_type === EEntType.MOD) {\r\n            const mod_attribs: Map<string, TAttribDataTypes> = attribs as Map<string, TAttribDataTypes>;\r\n            const value: TAttribDataTypes = mod_attribs.get(name);\r\n            if (Array.isArray(value)) {\r\n                return (value as number[]|string[]).length;\r\n            } else {\r\n                return 1;\r\n            }\r\n        } else {\r\n            const ent_attribs: Map<string, GIAttribMap> = attribs as Map<string, GIAttribMap>;\r\n            return ent_attribs.get(name).getDataSize();\r\n        }\r\n    }\r\n    /**\r\n     * Get a model attrib value\r\n     * @param name\r\n     */\r\n    public getModelAttribValue(name: string): TAttribDataTypes {\r\n        const attribs_maps_key: string = EEntTypeStr[EEntType.MOD];\r\n        const attrib: Map<string, TAttribDataTypes> = this._attribs_maps[attribs_maps_key];\r\n        if (attrib.get(name) === undefined) { throw new Error('Attribute with this name does not exist.'); }\r\n        return attrib.get(name);\r\n    }\r\n    /**\r\n     * Get a model attrib indexed value\r\n     * @param ent_type\r\n     * @param name\r\n     */\r\n    public getModelAttribIndexedValue(name: string, value_index: number): number|string {\r\n        const attribs_maps_key: string = EEntTypeStr[EEntType.MOD];\r\n        const attrib: Map<string, TAttribDataTypes> = this._attribs_maps[attribs_maps_key];\r\n        const list_value: TAttribDataTypes = attrib.get(name);\r\n        if (list_value === undefined) { throw new Error('Attribute with this name does not exist.'); }\r\n        if (!Array.isArray(list_value)) { throw new Error('Attribute is not a list, so indexed values are not allowed.'); }\r\n        if (value_index >= list_value.length) { throw new Error('Value index is out of range for attribute list size.'); }\r\n        return list_value[value_index];\r\n    }\r\n    /**\r\n     * Get an entity attrib value\r\n     * @param ent_type\r\n     * @param name\r\n     */\r\n    public getAttribValue(ent_type: EEntType, name: string, ents_i: number|number[]): TAttribDataTypes|TAttribDataTypes[] {\r\n        const attribs_maps_key: string = EEntTypeStr[ent_type];\r\n        const attribs: Map<string, GIAttribMap> = this._attribs_maps[attribs_maps_key];\r\n        if (attribs.get(name) === undefined) { throw new Error('Attribute with this name does not exist.'); }\r\n        return attribs.get(name).getEntVal(ents_i);\r\n    }\r\n    /**\r\n     * Get an entity attrib indexed value\r\n     * @param ent_type\r\n     * @param name\r\n     */\r\n    public getAttribIndexedValue(ent_type: EEntType, name: string, ents_i: number, value_index: number): number|string {\r\n        const attribs_maps_key: string = EEntTypeStr[ent_type];\r\n        const attribs: Map<string, GIAttribMap> = this._attribs_maps[attribs_maps_key];\r\n        const attrib: GIAttribMap = attribs.get(name);\r\n        if (attrib === undefined) { throw new Error('Attribute with this name does not exist.'); }\r\n        // if (attrib.getDataSize() === 1) { throw new Error('Attribute is not a list, so indexed values are not allowed.'); }\r\n        if (value_index >= attrib.getDataSize()) { throw new Error('Value index is out of range for attribute list size.'); }\r\n        return attrib.getEntIdxVal(ents_i, value_index) as number|string;\r\n    }\r\n    /**\r\n     * Check if attribute exists\r\n     * @param ent_type\r\n     * @param name\r\n     */\r\n    public hasAttrib(ent_type: EEntType, name: string): boolean {\r\n        const attribs_maps_key: string = EEntTypeStr[ent_type];\r\n        const attribs: Map<string, GIAttribMap> = this._attribs_maps[attribs_maps_key];\r\n        return attribs.has(name);\r\n    }\r\n    /**\r\n     * Get all the attribute names for an entity type\r\n     * @param ent_type\r\n     */\r\n    public getAttribNames(ent_type: EEntType): string[] {\r\n        const attribs_maps_key: string = EEntTypeStr[ent_type];\r\n        const attribs: Map<string, GIAttribMap> = this._attribs_maps[attribs_maps_key];\r\n        return Array.from(attribs.keys());\r\n    }\r\n    /**\r\n     * Get attrib\r\n     * @param ent_type\r\n     * @param name\r\n     */\r\n    public getAttrib(ent_type: EEntType, name: string): GIAttribMap {\r\n        const attribs_maps_key: string = EEntTypeStr[ent_type];\r\n        const attribs: Map<string, GIAttribMap> = this._attribs_maps[attribs_maps_key];\r\n        return attribs.get(name);\r\n    }\r\n    /**\r\n     * Query the model using a query strings.\r\n     * Returns a list of entities in the model.\r\n     * @param ent_type The type of the entities being search for\r\n     * @param query_str The query string, e.g. '#@name == value'\r\n     * @param indices The indices of entites in the model. These are assumed to be of type ent_type.\r\n     */\r\n    public queryAttribs(ent_type: EEntType, query_str: string, indices: number[]): number[] {\r\n        // get the map that contains all the ettributes for the ent_type\r\n        const attribs_maps_key: string = EEntTypeStr[ent_type];\r\n        const attribs: Map<string, GIAttribMap> = this._attribs_maps[attribs_maps_key];\r\n        // parse the query\r\n        const queries: IQueryComponent[][] = parseQuery(query_str);\r\n        if (!queries) { return []; }\r\n        // do the query, one by one\r\n        // [[query1 && query2] || [query3 && query4]]\r\n        let union_query_results: number[] = [];\r\n        for (const and_queries of queries)  {\r\n            // get the ents_i to start the '&&' query\r\n            let query_ents_i: number[] = null;\r\n            if (indices !== null && indices !== undefined) {\r\n                query_ents_i = indices;\r\n            } else {\r\n                query_ents_i = this._model.geom.query.getEnts(ent_type, false);\r\n            }\r\n            // do the '&&' queries\r\n            for (const and_query of and_queries) {\r\n                if (attribs && attribs.has(and_query.attrib_name)) {\r\n                    const attrib: GIAttribMap = attribs.get(and_query.attrib_name);\r\n                    query_ents_i = attrib.queryVal(\r\n                        query_ents_i,\r\n                        and_query.attrib_index,\r\n                        and_query.operator_type,\r\n                        and_query.attrib_value_str\r\n                    );\r\n                } else {\r\n                    throw new Error('Attribute \"' + and_query.attrib_name + '\" does not exist.');\r\n                    // query_ents_i = [];\r\n                }\r\n            }\r\n            // combine the results of the '&&' queries\r\n            if (query_ents_i !== null && query_ents_i.length > 0) {\r\n                union_query_results = Array.from(new Set([...union_query_results, ...query_ents_i]));\r\n            }\r\n        }\r\n        // return the result\r\n        return union_query_results;\r\n    }\r\n    /**\r\n     * Query the model using a sort strings.\r\n     * Returns a list of entities in the model.\r\n     * @param ent_type The type of the entities being search for\r\n     * @param sort_str The sort string, e.g. '#@name && #@name2[3]'\r\n     * @param indices The indices of entites in the model. These are assumed to be of type ent_type.\r\n     */\r\n    public sortByAttribs(ent_type: EEntType, indices: number[], sort_str: string, method: ESort): number[] {\r\n        // get the map that contains all the ettributes for the ent_type\r\n        const attribs_maps_key: string = EEntTypeStr[ent_type];\r\n        const attribs: Map<string, GIAttribMap> = this._attribs_maps[attribs_maps_key];\r\n        if (!attribs)  { throw new Error('Bad sort: Attribute does not exist.'); }\r\n        // parse the query\r\n        const sorts: ISortComponent[] = parseSort(sort_str);\r\n        if (!sorts) { return []; }\r\n        // create the sort copmapre function\r\n        function _sortCompare(ent1_i: number, ent2_i: number): number {\r\n            // do the '&&' sorts\r\n            for (const sort of sorts) {\r\n                if (!attribs.has(sort.attrib_name)) {\r\n                    throw new Error('Bad sort: Attribute does not exist.');\r\n                }\r\n                const attrib: GIAttribMap = attribs.get(sort.attrib_name);\r\n                const data_size: number = attrib.getDataSize();\r\n                if (sort.attrib_index !== undefined && data_size === 1) {\r\n                    throw new Error('Bad sort: Attribute with index must have a size greater than 1.');\r\n                }\r\n                let val1: TAttribDataTypes = attrib.getEntVal(ent1_i) as TAttribDataTypes;\r\n                let val2: TAttribDataTypes = attrib.getEntVal(ent2_i) as TAttribDataTypes;\r\n                if (sort.attrib_index !== undefined && sort.attrib_index !== null) {\r\n                    if (val1 !== undefined && val1 !== null) {\r\n                        val1 = val1[sort.attrib_index];\r\n                    }\r\n                    if (val2 !== undefined && val2 !== null) {\r\n                        val2 = val2[sort.attrib_index];\r\n                    }\r\n                }\r\n                if (method === ESort.DESCENDING) {\r\n                    if (val1 < val2) { return -1; }\r\n                    if (val1 > val2) { return 1; }\r\n                } else {\r\n                    if (val1 < val2) { return 1; }\r\n                    if (val1 > val2) { return -1; }\r\n                }\r\n            }\r\n            return 0;\r\n        }\r\n        // do the sort\r\n        indices.sort(_sortCompare);\r\n        return indices;\r\n    }\r\n    // ============================================================================\r\n    // Shortcuts for getting xyz\r\n    // ============================================================================\r\n    /**\r\n     * Shortcut for getting a coordinate from a numeric position index (i.e. this is not an ID)\r\n     * @param posi_i\r\n     */\r\n    public getPosiCoords(posi_i: number): Txyz {\r\n        const result = this._attribs_maps.ps.get(EAttribNames.COORDS).getEntVal(posi_i) as Txyz;\r\n        return result;\r\n    }\r\n    // /**\r\n    //  * Shortcut for getting all coordinates\r\n    //  * @param posi_i\r\n    //  */\r\n    // public getAllPosisCoords(): Txyz[] {\r\n    //     const posis_i: number[] = this._model.geom.query.getEnts(EEntType.POSI);\r\n    //     const coords_map: GIAttribMap = this._attribs_maps.ps.get(EAttribNames.COORDS);\r\n    //     return coords_map.getEntVal(posis_i) as Txyz[];\r\n    // }\r\n    /**\r\n     * Shortcut for getting a coordinate from a numeric vertex index (i.e. this is not an ID)\r\n     * @param vert_i\r\n     */\r\n    public getVertCoords(vert_i: number): Txyz {\r\n        const posi_i: number = this._model.geom.query.navVertToPosi(vert_i);\r\n        return this._attribs_maps.ps.get(EAttribNames.COORDS).getEntVal(posi_i) as Txyz;\r\n    }\r\n    // /**\r\n    //  * Shortcut for getting coords for all verts\r\n    //  * @param attrib_name\r\n    //  */\r\n    // public getAllVertsCoords(attrib_name: string): Txyz[] {\r\n    //     const verts_i: number[] = this._model.geom.query.getEnts(EEntType.VERT);\r\n    //     const posis_i: number[] = verts_i.map( vert_i => this._model.geom.query.navVertToPosi(vert_i));\r\n    //     const coords_map: GIAttribMap = this._attribs_maps.ps.get(EAttribNames.COORDS);\r\n    //     return coords_map.getEntVal(posis_i) as Txyz[];\r\n    // }\r\n}\r\n// ================================================================================================\r\n// Functions for parsing queries\r\n// ================================================================================================\r\n/**\r\n * Parse a query string.\r\n * && takes precedence over ||\r\n * [ [ query1 && query2 ] || [ query3 && query4 ] ]\r\n */\r\nfunction parseQuery(query_str: string): IQueryComponent[][] {\r\n    if (!query_str.startsWith('#')) {throw new Error('Bad query, query string must start with #.'); }\r\n    const or_query_strs: string[] = query_str.split('||');\r\n    const query_list: IQueryComponent[][] = [];\r\n    or_query_strs.forEach(or_query_str => {\r\n        const and_query_strs: string[] = or_query_str.split('&&');\r\n        query_list.push(and_query_strs.map( and_query_str => _parse_query_component(and_query_str) ) );\r\n    });\r\n    return query_list;\r\n}\r\n\r\n/**\r\n * Parse a query component string.\r\n */\r\nfunction _parse_query_component(query_component: string): IQueryComponent {\r\n    let attrib_name_str = '' ;\r\n    let attrib_value_str = '' ;\r\n    let operator_type: EQueryOperatorTypes = null;\r\n    // split the query at the @ sign\r\n    const [_, attrib_name_value_str]: string[] = query_component.split('@');\r\n    if (!attrib_name_value_str) { throw new Error('Bad query.'); }\r\n    // split the attrib_name_value_str based on operator, ==, !=, etc...\r\n    for (const key of Object.keys(EQueryOperatorTypes)) {\r\n        const split_query = attrib_name_value_str.split(EQueryOperatorTypes[key]);\r\n        if (split_query.length === 2) {\r\n            attrib_name_str =  split_query[0].trim();\r\n            attrib_value_str = split_query[1].trim();\r\n            operator_type = EQueryOperatorTypes[key];\r\n            break;\r\n        }\r\n    }\r\n    // check\r\n    if (!operator_type) {throw new Error('Bad operator in query.'); }\r\n    if (!attrib_name_str) {throw new Error('Bad attribute name in query.'); }\r\n    if (!attrib_value_str) {throw new Error('Bad attribute value in query.'); }\r\n    // parse the name\r\n    const attrib_name_index = _parse_name_str(attrib_name_str);\r\n    const attrib_name  = attrib_name_index[0];\r\n    const attrib_index  = attrib_name_index[1];\r\n    // parse the value\r\n    attrib_value_str = _parse_value_str(attrib_value_str);\r\n    // return the data for the query component as an object\r\n    return {\r\n        attrib_name: attrib_name,\r\n        attrib_index: attrib_index,\r\n        attrib_value_str: attrib_value_str,\r\n        operator_type: operator_type\r\n    };\r\n}\r\n/**\r\n * Parse a sort string. #@name1 && #@name2\r\n * Rerurns an array,[ query1, query2 ]\r\n */\r\nfunction parseSort(sort_str: string): ISortComponent[] {\r\n    if (!sort_str.startsWith('#')) { throw new Error('Bad sort, sort string must start with #.'); }\r\n    if (sort_str.indexOf('||') !== -1) { throw new Error('Bad sort, sort string cannot contain || conditions.'); }\r\n    const sort_str_clean: string = sort_str.replace(/\\s/g, '');\r\n    const component_strs: string[] = sort_str_clean.split('&&');\r\n    const sort_list: ISortComponent[] = [];\r\n    component_strs.forEach(component_str => {\r\n        sort_list.push(_parse_sort_component(component_str));\r\n    });\r\n    return sort_list;\r\n}\r\n\r\n/**\r\n * Parse a query component string.\r\n */\r\nfunction _parse_sort_component(sort_component: string): ISortComponent {\r\n    // split the query at the @ sign\r\n    const [_, attrib_name_str]: string[] = sort_component.split('@');\r\n    // check\r\n    if (!attrib_name_str) {throw new Error('Bad attribute name in query.'); }\r\n    // parse the name\r\n    const attrib_name_index = _parse_name_str(attrib_name_str);\r\n    const attrib_name  = attrib_name_index[0];\r\n    const attrib_index  = attrib_name_index[1];\r\n    // return the data for the query component as an object\r\n    return {\r\n        attrib_name: attrib_name,\r\n        attrib_index: attrib_index\r\n    };\r\n}\r\n\r\n/**\r\n * Parse the attribute value. Handles sting with quotes, e.g. 'this' and \"that\".\r\n * Remove quotes from value string\r\n */\r\nfunction _parse_value_str(value_str: string): string {\r\n    const first_char: string = value_str.slice(0, 1);\r\n    if (first_char ===  '\\'' || first_char === '\"') {return value_str.slice(1, -1); }\r\n    return value_str;\r\n}\r\n/**\r\n * Parese the attribute name. Handles names with indexes, e.g. 'name[2]'\r\n * Split the name into the string name and the numeric index\r\n */\r\nfunction _parse_name_str(value_str: string): [string, number?] {\r\n    const last_char: string = value_str.slice(-1);\r\n    if (last_char === ']') {\r\n        const [name_str, index_str]: [string, string] = value_str.slice(0, -1).split('[') as [string, string];\r\n        const index: number = Number(index_str);\r\n        if (isNaN(index)) {throw new Error('Bad query'); }\r\n        return [name_str, index];\r\n    }\r\n    return [value_str, null];\r\n}\r\n","import { GIModel } from './GIModel';\r\nimport { TAttribDataTypes, EEntType, IAttribsMaps, EAttribNames, EEntTypeStr } from './common';\r\nimport { GIAttribMap } from './GIAttribMap';\r\nimport { isString } from 'util';\r\nimport { sortByKey } from '../util/maps';\r\n\r\n/**\r\n * Class for attributes.\r\n */\r\nexport class GIAttribsThreejs {\r\n    private _model: GIModel;\r\n    private _attribs_maps: IAttribsMaps;\r\n   /**\r\n     * Creates an object to store the attribute data.\r\n     * @param model The JSON data\r\n     */\r\n    constructor(model: GIModel, attribs_maps: IAttribsMaps) {\r\n        this._model = model;\r\n        this._attribs_maps = attribs_maps;\r\n    }\r\n    // ============================================================================\r\n    // Threejs\r\n    // For methods to get the array of edges and triangles, see the geom class\r\n    // get3jsTris() and get3jsEdges()\r\n    // ============================================================================\r\n    /**\r\n     * Get a flat array of all the coordinates of all the vertices.\r\n     * Verts that have been deleted will not be included\r\n     * @param verts An array of vertex indices pointing to the positio.\r\n     */\r\n    public get3jsSeqPosisCoords(): [number[], Map<number, number>] {\r\n        const coords_attrib: GIAttribMap = this._attribs_maps.ps.get(EAttribNames.COORDS);\r\n        //\r\n        const coords: number[][] = [];\r\n        const posi_map: Map<number, number> = new Map();\r\n        const posis_i: number[] = this._model.geom.query.getEnts(EEntType.POSI, true);\r\n        posis_i.forEach( (posi_i, gi_index) => {\r\n            if (posi_i !== null) {\r\n                const tjs_index: number = coords.push( coords_attrib.getEntVal(posi_i) as number[] ) - 1;\r\n                posi_map.set(gi_index, tjs_index);\r\n            }\r\n        });\r\n        // @ts-ignore\r\n        return [coords.flat(1), posi_map];\r\n    }\r\n    /**\r\n     * Get a flat array of all the coordinates of all the vertices.\r\n     * Verts that have been deleted will not be included\r\n     * @param verts An array of vertex indices pointing to the positio.\r\n     */\r\n    public get3jsSeqVertsCoords(): [number[], Map<number, number>] {\r\n        const coords_attrib: GIAttribMap = this._attribs_maps.ps.get(EAttribNames.COORDS);\r\n        //\r\n        const coords: number[][] = [];\r\n        const vertex_map: Map<number, number> = new Map();\r\n        const verts_i: number[] = this._model.geom.query.getEnts(EEntType.VERT, true);\r\n        verts_i.forEach( (vert_i, gi_index) => {\r\n            if (vert_i !== null) {\r\n                const posi_i: number = this._model.geom.query.navVertToPosi(vert_i);\r\n                const tjs_index: number = coords.push( coords_attrib.getEntVal(posi_i) as number[] ) - 1;\r\n                vertex_map.set(gi_index, tjs_index);\r\n            }\r\n        });\r\n        // @ts-ignore\r\n        return [coords.flat(1), vertex_map];\r\n    }\r\n    /**\r\n     * Get a flat array of attribute values for all the vertices.\r\n     * Verts that have been deleted will not be included\r\n     * @param attrib_name The name of the vertex attribute. Either NORMAL or COLOR.\r\n     */\r\n    public get3jsSeqVertsAttrib(attrib_name: EAttribNames): number[] {\r\n        if (!this._attribs_maps._v.has(attrib_name)) { return null; }\r\n        const verts_attrib: GIAttribMap = this._attribs_maps._v.get(attrib_name);\r\n        //\r\n        const verts_attribs_values: TAttribDataTypes[] = [];\r\n        const verts_i: number[] = this._model.geom.query.getEnts(EEntType.VERT, true);\r\n        verts_i.forEach( (vert_i, gi_index) => {\r\n            if (vert_i !== null) {\r\n                const value = verts_attrib.getEntVal(vert_i) as TAttribDataTypes;\r\n                if (attrib_name === EAttribNames.COLOUR) {\r\n                    const _value = value === undefined ? [1, 1, 1] : value;\r\n                    verts_attribs_values.push(_value);\r\n                } else {\r\n                    verts_attribs_values.push(value);\r\n                }\r\n            }\r\n        });\r\n        // @ts-ignore\r\n        return verts_attribs_values.flat(1);\r\n    }\r\n    /**\r\n     *\r\n     */\r\n    public getModelAttribsForTable(): any[] {\r\n        const attribs_maps_key: string = EEntTypeStr[ EEntType.MOD ];\r\n        const attribs: Map<string, TAttribDataTypes> = this._attribs_maps[attribs_maps_key];\r\n        if (attribs === undefined) { return []; }\r\n        const arr = [];\r\n        attribs.forEach((value, key) => {\r\n            // const _value = isString(value) ? `'${value}'` : value;\r\n            const _value = value;\r\n            const obj = {Name: key, Value: _value};\r\n            arr.push(obj);\r\n        });\r\n        // console.log(arr);\r\n        return arr;\r\n    }\r\n    /**\r\n     *\r\n     * @param ent_type\r\n     */\r\n    public getAttribsForTable(ent_type: EEntType): any[] {\r\n        // get the attribs map for this ent type\r\n        const attribs_maps_key: string = EEntTypeStr[ent_type];\r\n        const attribs: Map<string, GIAttribMap> = this._attribs_maps[attribs_maps_key];\r\n        // create a map of objects to store the data\r\n        const data_obj_map: Map< number, { '#': number, _id: string} > = new Map();\r\n        // create the ID for each table row\r\n        const ents_i: number[] = this._model.geom.query.getEnts(ent_type, false);\r\n        let i = 0;\r\n        for (const ent_i of ents_i) {\r\n            data_obj_map.set(ent_i, { '#': i, _id: `${attribs_maps_key}${ent_i}`} );\r\n            i++;\r\n        }\r\n        // loop through all the attributes\r\n        attribs.forEach( (attrib, attrib_name) => {\r\n            const data_size: number = attrib.getDataSize();\r\n            for (const ent_i of ents_i) {\r\n                if (attrib_name.substr(0, 1) === '_') {\r\n                    const attrib_value = attrib.getEntVal(ent_i);\r\n                    data_obj_map.get(ent_i)[`${attrib_name}`] = attrib_value;\r\n                } else {\r\n                    const attrib_value = attrib.getEntVal(ent_i);\r\n                    if ( data_size > 1 ) {\r\n                        if (attrib_value !== undefined) {\r\n                            (attrib_value as any[]).forEach( (v, idx) => {\r\n                                const _v =  v;\r\n                                data_obj_map.get(ent_i)[`${attrib_name}[${idx}]`] = _v;\r\n                            });\r\n                        } else {\r\n                            for (let idx = 0; idx < data_size; idx++) {\r\n                                data_obj_map.get(ent_i)[`${attrib_name}[${idx}]`] = undefined;\r\n                            }\r\n                        }\r\n                    } else {\r\n                        const _attrib_value = isString(attrib_value) ? `'${attrib_value}'` : attrib_value;\r\n                        data_obj_map.get(ent_i)[`${attrib_name}`] = _attrib_value;\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        return Array.from(data_obj_map.values());\r\n    }\r\n\r\n    /**\r\n     * @param ent_type\r\n     * @param ents_i\r\n     */\r\n    public getEntsVals(selected_ents: Map<string, number>, ent_type: EEntType) {\r\n        const attribs_maps_key: string = EEntTypeStr[ent_type];\r\n        const attribs: Map<string, GIAttribMap> = this._attribs_maps[attribs_maps_key];\r\n        const data_obj_map: Map< number, { '#': number, _id: string} > = new Map();\r\n        if (!selected_ents || selected_ents === undefined) {\r\n            return [];\r\n        }\r\n        let i = 0;\r\n        const selected_ents_sorted = sortByKey(selected_ents);\r\n        selected_ents_sorted.forEach(ent => {\r\n            data_obj_map.set(ent, { '#': i, _id: `${attribs_maps_key}${ent}` } );\r\n            i++;\r\n        });\r\n\r\n        attribs.forEach( (attrib, attrib_name) => {\r\n            const data_size: number = attrib.getDataSize();\r\n            for (const ent_i of Array.from(selected_ents.values())) {\r\n                if (attrib_name.substr(0, 1) === '_') {\r\n                    const attrib_value = attrib.getEntVal(ent_i);\r\n                    data_obj_map.get(ent_i)[`${attrib_name}`] = attrib_value;\r\n                } else {\r\n                    const attrib_value = attrib.getEntVal(ent_i);\r\n                    if ( data_size > 1 ) {\r\n                        if (attrib_value !== undefined) {\r\n                            (attrib_value as any[]).forEach( (v, idx) => {\r\n                                data_obj_map.get(ent_i)[`${attrib_name}[${idx}]`] = v;\r\n                            });\r\n                        } else {\r\n                            for (let idx = 0; idx < data_size; idx++) {\r\n                                data_obj_map.get(ent_i)[`${attrib_name}[${idx}]`] = undefined;\r\n                            }\r\n                        }\r\n                    } else {\r\n                        const _attrib_value = isString(attrib_value) ? `'${attrib_value}'` : attrib_value;\r\n                        data_obj_map.get(ent_i)[`${attrib_name}`] = _attrib_value;\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        return Array.from(data_obj_map.values());\r\n    }\r\n\r\n    public getIdIndex(ent_type: EEntType, id: number) {\r\n        const ents_i = this._model.geom.query.getEnts(ent_type, false);\r\n        const index = ents_i.findIndex(ent_i => ent_i === id);\r\n        return index;\r\n    }\r\n}\r\n","import { GIModel } from './GIModel';\r\nimport { IGeomArrays, TVert, TWire, TColl, TPline, TEdge, TFace, TPgon, TEntTypeIdx } from './common';\r\nimport { GIGeomAdd } from './GIGeomAdd';\r\nimport { GIGeomModify } from './GIGeomModify';\r\nimport { GIGeomQuery } from './GIGeomQuery';\r\nimport { GIGeomThreejs } from './GIGeomThreejs';\r\nimport { GIGeomIO } from './GIGeomIO';\r\n\r\n/**\r\n * Class for geometry.\r\n */\r\nexport class GIGeom {\r\n    public model: GIModel;\r\n    public selected: TEntTypeIdx[]; // entities that should become selected\r\n    //  all arrays\r\n    public _geom_arrays: IGeomArrays = {  // TODO this should not be public\r\n        // num_posis: 0,\r\n        dn_verts_posis: [],\r\n        dn_tris_verts: [],\r\n        dn_edges_verts: [],\r\n        dn_wires_edges: [],\r\n        dn_faces_wirestris: [],\r\n        dn_points_verts: [],\r\n        dn_plines_wires: [],\r\n        dn_pgons_faces: [],\r\n        dn_colls_objs: [],\r\n        up_posis_verts: [],\r\n        up_tris_faces: [],\r\n        up_verts_edges: [],\r\n        up_verts_tris: [],\r\n        up_verts_points: [],\r\n        up_edges_wires: [],\r\n        up_wires_faces: [],\r\n        up_wires_plines: [],\r\n        up_faces_pgons: [],\r\n        up_points_colls: [],\r\n        up_plines_colls: [],\r\n        up_pgons_colls: []\r\n    };\r\n    // sub classes with methods\r\n    public io: GIGeomIO;\r\n    public add: GIGeomAdd;\r\n    public modify: GIGeomModify;\r\n    public query: GIGeomQuery;\r\n    public threejs: GIGeomThreejs;\r\n    /**\r\n     * Creates an object to store the geometry data.\r\n     * @param geom_data The JSON data\r\n     */\r\n    constructor(model: GIModel) {\r\n        this.model = model;\r\n        this.io = new GIGeomIO(this, this._geom_arrays);\r\n        this.add = new GIGeomAdd(this, this._geom_arrays);\r\n        this.modify = new GIGeomModify(this, this._geom_arrays);\r\n        this.query = new GIGeomQuery(this, this._geom_arrays);\r\n        this.threejs = new GIGeomThreejs(this, this._geom_arrays);\r\n        this.selected = [];\r\n    }\r\n    /**\r\n     * Checks geometry for internal consistency\r\n     */\r\n    public check(): string[] {\r\n        const errors: string[] = [];\r\n        this._checkPosis().forEach( error => errors.push(error) );\r\n        this._checkVerts().forEach( error => errors.push(error) );\r\n        this._checkEdges().forEach( error => errors.push(error) );\r\n        this._checkWires().forEach( error => errors.push(error) );\r\n        this._checkFaces().forEach( error => errors.push(error) );\r\n        this._checkPlines().forEach( error => errors.push(error) );\r\n        this._checkPgons().forEach( error => errors.push(error) );\r\n        return errors;\r\n    }\r\n    /**\r\n     * Checks geometry for internal consistency\r\n     */\r\n    private _checkPosis(): string[] {\r\n        const errors: string[] = [];\r\n        for (let posi_i = 0; posi_i < this._geom_arrays.up_posis_verts.length; posi_i++) {\r\n            // up\r\n            const verts_i: number[] = this._geom_arrays.up_posis_verts[posi_i];\r\n            if (verts_i === undefined) { errors.push('Posi ' + posi_i + ': Posi->Vert undefined.'); }\r\n            if (verts_i === null) { continue; } // deleted\r\n            // down\r\n            for (const vert_i of verts_i) {\r\n                const vert: TVert = this._geom_arrays.dn_verts_posis[vert_i];\r\n                if (vert === undefined ) { errors.push('Posi ' + posi_i + ': Vert->Posi undefined.'); }\r\n                if (vert === null ) { errors.push('Posi ' + posi_i + ': Vert->Posi null.'); }\r\n            }\r\n        }\r\n        return errors;\r\n    }\r\n    private _checkVerts(): string[] {\r\n        const errors: string[] = [];\r\n        for (let vert_i = 0; vert_i < this._geom_arrays.dn_verts_posis.length; vert_i++) {\r\n            // down\r\n            const vert: TVert = this._geom_arrays.dn_verts_posis[vert_i];\r\n            if (vert === undefined) { errors.push('Vert ' + vert_i + ': Vert->Posi undefined.'); }\r\n            if (vert === null) { continue; } // deleted\r\n            // up\r\n            const edges_i: number[] = this._geom_arrays.up_verts_edges[vert_i];\r\n            if (edges_i === undefined) {\r\n                errors.push('Vert ' + vert_i + ': Vert->Edge undefined.');\r\n                continue;\r\n            }\r\n            if (edges_i === null) {\r\n                errors.push('Vert ' + vert_i + ': Vert->Edge null.');\r\n                continue;\r\n            }\r\n            for (const edge_i of edges_i) {\r\n                if (edge_i === undefined) {\r\n                    errors.push('Vert ' + vert_i + ': Vert->Edge undefined.');\r\n                }\r\n                if (edge_i === null) {\r\n                    errors.push('Vert ' + vert_i + ': Vert->Edge null.');\r\n                }\r\n                // down\r\n                const edge: TEdge = this._geom_arrays.dn_edges_verts[edge_i];\r\n                if (edge === undefined) {\r\n                    errors.push('Vert ' + vert_i + ': Edge->Vert undefined.');\r\n                }\r\n                if (edge === null) {\r\n                    errors.push('Vert ' + vert_i + ': Edge->Vert null.');\r\n                }\r\n            }\r\n        }\r\n        return errors;\r\n    }\r\n    private _checkEdges(): string[] {\r\n        const errors: string[] = [];\r\n        for (let edge_i = 0; edge_i < this._geom_arrays.dn_edges_verts.length; edge_i++) {\r\n            // down\r\n            const edge: TEdge = this._geom_arrays.dn_edges_verts[edge_i];\r\n            if (edge === undefined) { errors.push('Edge ' + edge_i + ': Edge->Vert undefined.'); }\r\n            if (edge === null) { continue; } // deleted\r\n            // up\r\n            const wire_i: number = this._geom_arrays.up_edges_wires[edge_i];\r\n            if (wire_i === undefined) { continue; } // no wire, must be a point\r\n            if (wire_i === null) { errors.push('Edge ' + edge_i + ': Edge->Wire null.'); }\r\n            // down\r\n            const wire: TWire = this._geom_arrays.dn_wires_edges[wire_i];\r\n            if (wire === undefined) { errors.push('Edge ' + edge_i + ': Wire->Edge undefined.'); }\r\n            if (wire === null) { errors.push('Edge ' + edge_i + ': Wire->Edge null.'); }\r\n        }\r\n        return errors;\r\n    }\r\n    private _checkWires(): string[] {\r\n        const errors: string[] = [];\r\n        for (let wire_i = 0; wire_i < this._geom_arrays.dn_wires_edges.length; wire_i++) {\r\n            // down\r\n            const wire: TWire = this._geom_arrays.dn_wires_edges[wire_i];\r\n            if (wire === undefined) { errors.push('Wire ' + wire_i + ': Wire->Edge undefined.'); }\r\n            if (wire === null) { continue; } // deleted\r\n            // up\r\n            const face_i: number = this._geom_arrays.up_wires_faces[wire_i];\r\n            const pline_i: number = this._geom_arrays.up_wires_plines[wire_i];\r\n            if (face_i !== undefined) {\r\n                if (face_i === null) {\r\n                    errors.push('Wire ' + wire_i + ': Wire->Face null.');\r\n                }\r\n                // down\r\n                const face: TFace = this._geom_arrays.dn_faces_wirestris[face_i];\r\n                if (face === undefined) { errors.push('Wire ' + wire_i + ': Face->Wire undefined.'); }\r\n                if (face === null) { errors.push('Wire ' + wire_i + ': Face->Wire null.'); }\r\n            } else if (pline_i !== undefined) {\r\n                if (pline_i === null) {\r\n                    errors.push('Wire ' + wire_i + ': Wire->Pline null.');\r\n                }\r\n                // down\r\n                const pline: TPline = this._geom_arrays.dn_plines_wires[pline_i];\r\n                if (pline === undefined) { errors.push('Wire ' + wire_i + ': Pline->Wire undefined.'); }\r\n                if (pline === null) { errors.push('Wire ' + wire_i + ': Pline->Wire null.'); }\r\n            } else {\r\n                // down\r\n                errors.push('Wire ' + wire_i + ': Both Wire->Face and Wire->Pline undefined.');\r\n            }\r\n        }\r\n        return errors;\r\n    }\r\n    private _checkFaces(): string[] {\r\n        const errors: string[] = [];\r\n        for (let face_i = 0; face_i < this._geom_arrays.dn_faces_wirestris.length; face_i++) {\r\n            // down\r\n            const face: TFace = this._geom_arrays.dn_faces_wirestris[face_i];\r\n            if (face === undefined) { errors.push('Face ' + face_i + ': Face->WireTri undefined.'); }\r\n            if (face === null) { continue; } // deleted\r\n            // up\r\n            const pgon_i: number = this._geom_arrays.up_faces_pgons[face_i];\r\n            if (pgon_i === undefined) {\r\n                errors.push('Face ' + face_i + ': Face->Pgon undefined.');\r\n            }\r\n            if (pgon_i === null) {\r\n                errors.push('Face ' + face_i + ': Face->Pgon null.');\r\n            }\r\n            // down\r\n            const pgon: TPgon = this._geom_arrays.dn_pgons_faces[pgon_i];\r\n            if (pgon === undefined) { errors.push('Face ' + face_i + ': Pgon->Face undefined.'); }\r\n            if (pgon === null) { errors.push('Face ' + face_i + ': Pgon->Face null.'); }\r\n        }\r\n        return errors;\r\n    }\r\n    private _checkPlines(): string[] {\r\n        const errors: string[] = [];\r\n        for (let pline_i = 0; pline_i < this._geom_arrays.dn_plines_wires.length; pline_i++) {\r\n            // down\r\n            const pline: TPline = this._geom_arrays.dn_plines_wires[pline_i];\r\n            if (pline === undefined) { errors.push('Pline ' + pline_i + ': Pline->Wire undefined.'); }\r\n            if (pline === null) { continue; } // deleted\r\n            // up\r\n            const colls_i: number[] = this._geom_arrays.up_plines_colls[pline_i];\r\n            if (colls_i === undefined) { continue; } // not in coll\r\n            for (const coll_i of colls_i) {\r\n                if (coll_i === undefined) {\r\n                    errors.push('Pline ' + pline_i + ': Pline->Coll undefined.');\r\n                }\r\n                if (coll_i === null) {\r\n                    errors.push('Pline ' + pline_i + ': Pline->Coll null.');\r\n                }\r\n                // down\r\n                const coll: TColl = this._geom_arrays.dn_colls_objs[coll_i];\r\n                if (coll === undefined) { errors.push('Pline ' + pline_i + ': Coll->Objs undefined.'); }\r\n                if (coll === null) { errors.push('Pline ' + pline_i + ': Coll->Objs null.'); }\r\n                if (coll[2].indexOf(pline_i) === -1) {\r\n                    errors.push('Pline ' + pline_i + ': Coll->Pline missing.');\r\n                }\r\n            }\r\n        }\r\n        return errors;\r\n    }\r\n    private _checkPgons(): string[] {\r\n        const errors: string[] = [];\r\n        for (let pgon_i = 0; pgon_i < this._geom_arrays.dn_pgons_faces.length; pgon_i++) {\r\n            // down\r\n            const pgon: TPgon = this._geom_arrays.dn_pgons_faces[pgon_i];\r\n            if (pgon === undefined) { errors.push('Pgon ' + pgon_i + ': Pgon->Face undefined.'); }\r\n            if (pgon === null) { continue; } // deleted\r\n            // up\r\n            const colls_i: number[] = this._geom_arrays.up_pgons_colls[pgon_i];\r\n            if (colls_i === undefined) { continue; } // not in coll\r\n            for (const coll_i of colls_i) {\r\n                if (coll_i === undefined) {\r\n                    errors.push('Pgon ' + pgon_i + ': Pgon->Coll undefined.');\r\n                }\r\n                if (coll_i === null) {\r\n                    errors.push('Pgon ' + pgon_i + ': Pgon->Coll null.');\r\n                }\r\n                // down\r\n                const coll: TColl = this._geom_arrays.dn_colls_objs[coll_i];\r\n                if (coll === undefined) { errors.push('Pgon ' + pgon_i + ': Coll->Objs undefined.'); }\r\n                if (coll === null) { errors.push('Pgon ' + pgon_i + ': Coll->Objs null.'); }\r\n                if (coll[3].indexOf(pgon_i) === -1) {\r\n                    errors.push('Pgon ' + pgon_i + ': Coll->Pgon missing.');\r\n                }\r\n            }\r\n        }\r\n        return errors;\r\n    }\r\n}\r\n","import { EEntType, TTri, TVert, TEdge, TWire, TFace,\r\n    TColl, IGeomData, TPoint, TPline, TPgon, Txyz, IGeomArrays, IGeomCopy, TAttribDataTypes, IGeomPack } from './common';\r\nimport { triangulate } from '../triangulate/triangulate';\r\nimport { GIGeom } from './GIGeom';\r\n\r\n/**\r\n * Class for geometry.\r\n */\r\nexport class GIGeomAdd {\r\n    private _geom: GIGeom;\r\n    private _geom_arrays: IGeomArrays;\r\n    /**\r\n     * Creates an object to store the geometry data.\r\n     * @param geom_data The JSON data\r\n     */\r\n    constructor(geom: GIGeom, geom_arrays: IGeomArrays) {\r\n        this._geom = geom;\r\n        this._geom_arrays = geom_arrays;\r\n    }\r\n    // ============================================================================\r\n    // Add geometry\r\n    // ============================================================================\r\n    /**\r\n     * Adds a new position to the model and returns the index to that position.\r\n     */\r\n    public addPosi(): number {\r\n        // create posi\r\n        const posi_i: number = this._addPosi();\r\n        return posi_i;\r\n    }\r\n    /**\r\n     * Adds a new point entity to the model.\r\n     * @param posi_i The position for the point.\r\n     */\r\n    public addPoint(posi_i: number): number {\r\n        // create vert\r\n        const vert_i = this._addVertex(posi_i);\r\n        // create point\r\n        const point_i: number = this._geom_arrays.dn_points_verts.push(vert_i) - 1;\r\n        this._geom_arrays.up_verts_points[vert_i] = point_i;\r\n        return point_i;\r\n    }\r\n    /**\r\n     * Adds a new pline entity to the model using numeric indices.\r\n     * @param posis_i\r\n     */\r\n    public addPline(posis_i: number[], close: boolean = false): number {\r\n        // create verts, edges, wires\r\n        const vert_i_arr: number[] = posis_i.map( posi_i => this._addVertex(posi_i));\r\n        const edges_i_arr: number[] = [];\r\n        for (let i = 0; i < vert_i_arr.length - 1; i++) {\r\n            edges_i_arr.push( this._addEdge(vert_i_arr[i], vert_i_arr[i + 1]));\r\n        }\r\n        if (close) {\r\n            edges_i_arr.push( this._addEdge(vert_i_arr[vert_i_arr.length - 1], vert_i_arr[0]));\r\n        }\r\n        const wire_i: number = this._addWire(edges_i_arr, close);\r\n        // create pline\r\n        const pline_i: number = this._geom_arrays.dn_plines_wires.push(wire_i) - 1;\r\n        this._geom_arrays.up_wires_plines[wire_i] = pline_i;\r\n        return pline_i;\r\n    }\r\n    /**\r\n     * Adds a new polygon + hole entity to the model using numeric indices.\r\n     * @param posis_id\r\n     */\r\n    public addPgon(posis_i: number[], holes_posis_i?: number[][]): number {\r\n        const has_holes: boolean = (holes_posis_i !== undefined) && (holes_posis_i.length) ? true : false ;\r\n        // create verts, edges, wire for face\r\n        const vert_i_arr: number[] = posis_i.map( posi_i => this._addVertex(posi_i));\r\n        const edges_i_arr: number[] = [];\r\n        for (let i = 0; i < vert_i_arr.length - 1; i++) {\r\n            edges_i_arr.push( this._addEdge(vert_i_arr[i], vert_i_arr[i + 1]));\r\n        }\r\n        edges_i_arr.push( this._addEdge(vert_i_arr[vert_i_arr.length - 1], vert_i_arr[0]));\r\n        const wire_i: number = this._addWire(edges_i_arr, true);\r\n        let face_i: number;\r\n        if (has_holes) {\r\n        // create verts, edges, wire for holes\r\n            const holes_wires_i: number[] = [];\r\n            for (const hole_posis_i of holes_posis_i) {\r\n                const hole_vert_i_arr: number[] = hole_posis_i.map( posi_i => this._addVertex(posi_i));\r\n                const hole_edges_i_arr: number[] = [];\r\n                for (let i = 0; i < hole_vert_i_arr.length - 1; i++) {\r\n                    hole_edges_i_arr.push( this._addEdge(hole_vert_i_arr[i], hole_vert_i_arr[i + 1]));\r\n                }\r\n                hole_edges_i_arr.push( this._addEdge(hole_vert_i_arr[hole_vert_i_arr.length - 1], hole_vert_i_arr[0]));\r\n                const hole_wire_i: number = this._addWire(hole_edges_i_arr, true);\r\n                holes_wires_i.push(hole_wire_i);\r\n            }\r\n            // create the new face with a hole\r\n            face_i = this._addFaceWithHoles(wire_i, holes_wires_i);\r\n        } else {\r\n            face_i = this._addFace(wire_i);\r\n        }\r\n        // create polygon\r\n        const pgon_i: number = this._geom_arrays.dn_pgons_faces.push(face_i) - 1;\r\n        this._geom_arrays.up_faces_pgons[face_i] = pgon_i;\r\n        return pgon_i;\r\n    }\r\n    /**\r\n     * Adds a collection and updates the rev array using numeric indices.\r\n     * @param parent_i\r\n     * @param points_i\r\n     * @param plines_i\r\n     * @param pgons_i\r\n     */\r\n    public addColl(parent_i: number, points_i: number[], plines_i: number[], pgons_i: number[]): number {\r\n        // create collection\r\n        const coll_i: number = this._geom_arrays.dn_colls_objs.push([parent_i, points_i, plines_i, pgons_i]) - 1;\r\n        for (const point_i of points_i) {\r\n            if (this._geom_arrays.up_points_colls[point_i] === undefined) {\r\n                this._geom_arrays.up_points_colls[point_i] = [coll_i];\r\n            } else {\r\n                this._geom_arrays.up_points_colls[point_i].push(coll_i);\r\n            }\r\n        }\r\n        for (const pline_i of plines_i) {\r\n            if (this._geom_arrays.up_plines_colls[pline_i] === undefined) {\r\n                this._geom_arrays.up_plines_colls[pline_i] = [coll_i];\r\n            } else {\r\n                this._geom_arrays.up_plines_colls[pline_i].push(coll_i);\r\n            }\r\n        }\r\n        for (const pgon_i of pgons_i) {\r\n            if (this._geom_arrays.up_pgons_colls[pgon_i] === undefined) {\r\n                this._geom_arrays.up_pgons_colls[pgon_i] = [coll_i];\r\n            } else {\r\n                this._geom_arrays.up_pgons_colls[pgon_i].push(coll_i);\r\n            }\r\n        }\r\n        return coll_i;\r\n    }\r\n    // ============================================================================\r\n    // Copy geometry\r\n    // ============================================================================\r\n    /**\r\n     * Copy positions.\r\n     * @param posis_i\r\n     * @param copy_attribs\r\n     */\r\n    public copyPosis(posis_i: number|number[], copy_attribs: boolean): number|number[] {\r\n        if (!Array.isArray(posis_i)) {\r\n            const posi_i: number = posis_i as number;\r\n            const xyz: Txyz = this._geom.model.attribs.query.getPosiCoords(posi_i);\r\n            const new_posi_i: number = this.addPosi();\r\n            this._geom.model.attribs.add.setPosiCoords(new_posi_i, xyz);\r\n            if (copy_attribs) {\r\n                const attrib_names: string[] = this._geom.model.attribs.query.getAttribNames(EEntType.POSI);\r\n                for (const attrib_name of attrib_names) {\r\n                    const value: TAttribDataTypes =\r\n                        this._geom.model.attribs.query.getAttribValue(EEntType.POSI, attrib_name, posis_i) as TAttribDataTypes;\r\n                    this._geom.model.attribs.add.setAttribValue(EEntType.POSI, new_posi_i, attrib_name, value);\r\n                }\r\n            }\r\n            return new_posi_i;\r\n        } else {\r\n            return (posis_i as number[]).map(posi_i => this.copyPosis(posi_i, copy_attribs)) as number[];\r\n        }\r\n    }\r\n    /**\r\n     * Copy points.\r\n     * TODO copy attribs of topo entities\r\n     * @param index\r\n     * @param copy_attribs\r\n     */\r\n    public copyPoints(points_i: number|number[], copy_attribs: boolean): number|number[] {\r\n        // make copies\r\n        if (!Array.isArray(points_i)) {\r\n            const old_point_i: number = points_i as number;\r\n            const posis_i: number[] = this._geom.query.navAnyToPosi(EEntType.POINT, old_point_i);\r\n            const new_point_i: number = this.addPoint(posis_i[0]);\r\n            if (copy_attribs) {\r\n                this._geom.model.attribs.add.copyAttribs(EEntType.POINT, old_point_i, new_point_i);\r\n            }\r\n            return new_point_i;\r\n        } else { // An array of ent_i\r\n            return (points_i as number[]).map(point_i => this.copyPoints(point_i, copy_attribs)) as number[];\r\n        }\r\n    }\r\n    /**\r\n     * Copy plines.\r\n     * TODO copy attribs of topo entities\r\n     * @param index\r\n     * @param copy_attribs\r\n     */\r\n    public copyPlines(plines_i: number|number[], copy_attribs: boolean): number|number[] {\r\n        // make copies\r\n        if (!Array.isArray(plines_i)) {\r\n            const old_pline_i: number = plines_i as number;\r\n            const posis_i: number[] = this._geom.query.navAnyToPosi(EEntType.PLINE, old_pline_i);\r\n            const wire_i: number = this._geom.query.navPlineToWire(old_pline_i);\r\n            const is_closed: boolean = this._geom.query.istWireClosed(wire_i);\r\n            const new_pline_i: number = this.addPline(posis_i, is_closed);\r\n            if (copy_attribs) {\r\n                this._geom.model.attribs.add.copyAttribs(EEntType.PLINE, old_pline_i, new_pline_i);\r\n            }\r\n            return new_pline_i;\r\n        } else { // An array of ent_i\r\n            return (plines_i as number[]).map(pline_i => this.copyPlines(pline_i, copy_attribs)) as number[];\r\n        }\r\n    }\r\n    /**\r\n     * Copy polygons.\r\n     * TODO copy attribs of topo entities\r\n     * @param index\r\n     * @param copy_attribs\r\n     */\r\n    public copyPgons(pgons_i: number|number[], copy_attribs: boolean): number|number[] {\r\n        // make copies\r\n        if (!Array.isArray(pgons_i)) {\r\n            const old_pgon_i: number = pgons_i as number;\r\n            const wires_i: number[] = this._geom.query.navAnyToWire(EEntType.PGON, old_pgon_i);\r\n            const posis_i: number[] = this._geom.query.navAnyToPosi(EEntType.WIRE, wires_i[0] as number);\r\n            let new_pgon_i: number;\r\n            if (wires_i.length === 1) {\r\n                new_pgon_i = this.addPgon(posis_i);\r\n            } else {\r\n                const holes_posis_i: number[][] = [];\r\n                for (let i = 1; i < wires_i.length; i++) {\r\n                    const hole_posis_i: number[] = this._geom.query.navAnyToPosi(EEntType.WIRE, wires_i[i] as number);\r\n                    holes_posis_i.push(hole_posis_i);\r\n                }\r\n                new_pgon_i = this.addPgon(posis_i, holes_posis_i);\r\n            }\r\n            if (copy_attribs) {\r\n                this._geom.model.attribs.add.copyAttribs(EEntType.PGON, old_pgon_i, new_pgon_i);\r\n            }\r\n            return new_pgon_i;\r\n        } else { // AN array of ent_i\r\n            return (pgons_i as number[]).map(pgon_i => this.copyPgons(pgon_i, copy_attribs)) as number[];\r\n        }\r\n    }\r\n   /**\r\n     * Copy a collection\r\n     * TODO Copy attribs of object and topo entities\r\n     * @param ent_type\r\n     * @param index\r\n     * @param copy_posis\r\n     * @param copy_attribs\r\n     */\r\n    public copyColls(colls_i: number|number[], copy_attribs: boolean): number|number[] {\r\n        // make copies\r\n        if (!Array.isArray(colls_i)) {\r\n            const old_coll_i: number = colls_i as number;\r\n            // make a deep copy of the objects in the collection\r\n            const points_i: number[] = this._geom.query.navCollToPoint(old_coll_i);\r\n            const res1 = this.copyPoints(points_i, copy_attribs) as number[];\r\n            const plines_i: number[] = this._geom.query.navCollToPline(old_coll_i);\r\n            const res2 = this.copyPlines(plines_i, copy_attribs) as number[];\r\n            const pgons_i: number[] = this._geom.query.navCollToPgon(old_coll_i);\r\n            const res3 = this.copyPgons(pgons_i, copy_attribs) as number[];\r\n            const parent: number = this._geom.query.getCollParent(old_coll_i);\r\n            // add the new collection\r\n            const new_coll_i: number = this.addColl(parent, res1, res2, res3);\r\n            // copy the attributes from old collection to new collection\r\n            if (copy_attribs) {\r\n                this._geom.model.attribs.add.copyAttribs(EEntType.COLL, old_coll_i, new_coll_i);\r\n            }\r\n            // return the new collection\r\n            return new_coll_i;\r\n        } else {\r\n            return (colls_i as number[]).map(coll_i => this.copyColls(coll_i, copy_attribs)) as number[];\r\n        }\r\n    }\r\n\r\n    // ============================================================================\r\n    // Methods to create the topological entities\r\n    // These methods have been made public for access from GIGeomModify\r\n    // They should not be called externally, hence the underscore.\r\n    // ============================================================================\r\n    /**\r\n     * Adds a position and updates the arrays.\r\n     */\r\n    public _addPosi(): number {\r\n        // in this case, there are no down arrays\r\n        // because posis are the bottom of the hierarchy\r\n        // update up arrays\r\n        const posi_i: number = this._geom_arrays.up_posis_verts.push([]) - 1;\r\n        // return the numeric index of the posi\r\n        return posi_i;\r\n    }\r\n    /**\r\n     * Adds a vertex and updates the arrays.\r\n     * @param posi_i\r\n     */\r\n    public _addVertex(posi_i: number): number {\r\n        // update down arrays\r\n        const vert_i: number = this._geom_arrays.dn_verts_posis.push(posi_i) - 1;\r\n        // update up arrays\r\n            // if (this._geom_arrays.up_posis_verts[posi_i] === undefined) {\r\n            //     this._geom_arrays.up_posis_verts[posi_i] = [];\r\n            // }\r\n        this._geom_arrays.up_posis_verts[posi_i].push(vert_i);\r\n        // return the numeric index of the vertex\r\n        return vert_i;\r\n    }\r\n    /**\r\n     * Adds an edge and updates the arrays.\r\n     * @param vert_i1\r\n     * @param vert_i2\r\n     */\r\n    public _addEdge(vert_i1: number, vert_i2: number): number {\r\n        // update down arrays\r\n        const edge_i: number = this._geom_arrays.dn_edges_verts.push([vert_i1, vert_i2]) - 1;\r\n        // update up arrays\r\n        if (this._geom_arrays.up_verts_edges[vert_i1] === undefined) {\r\n            this._geom_arrays.up_verts_edges[vert_i1] = [];\r\n        }\r\n        this._geom_arrays.up_verts_edges[vert_i1].push(edge_i);\r\n        if (this._geom_arrays.up_verts_edges[vert_i2] === undefined) {\r\n            this._geom_arrays.up_verts_edges[vert_i2] = [];\r\n        }\r\n        this._geom_arrays.up_verts_edges[vert_i2].push(edge_i);\r\n        // return the numeric index of the edge\r\n        return edge_i;\r\n    }\r\n    /**\r\n     * Adds a wire and updates the arrays.\r\n     * Edges are assumed to be sequential!\r\n     * @param edges_i\r\n     */\r\n    public _addWire(edges_i: number[], close: boolean = false): number {\r\n        // update down arrays\r\n        const wire_i: number = this._geom_arrays.dn_wires_edges.push(edges_i) - 1;\r\n        // update up arrays\r\n        edges_i.forEach( edge_i => this._geom_arrays.up_edges_wires[edge_i] = wire_i );\r\n        // return the numeric index of the wire\r\n        return wire_i;\r\n    }\r\n    /**\r\n     * Adds trangles and updates the arrays.\r\n     * Wires are assumed to be closed!\r\n     * @param wire_i\r\n     */\r\n    public _addTris(wire_i: number, hole_wires_i?: number[]): number[] {\r\n        // save all verts\r\n        const all_verts_i: number[] = [];\r\n        // get the coords of the outer perimeter edge\r\n        const wire_verts_i: number[] = this._geom.query.navAnyToVert(EEntType.WIRE, wire_i);\r\n        wire_verts_i.forEach(wire_vert_i => all_verts_i.push(wire_vert_i));\r\n        const wire_posis_i: number[] = wire_verts_i.map( vert_i => this._geom_arrays.dn_verts_posis[vert_i] );\r\n        const wire_coords: Txyz[] = wire_posis_i.map( posi_i => this._geom.model.attribs.query.getPosiCoords(posi_i) );\r\n        // get the coords of the holes\r\n        const all_hole_coords: Txyz[][] = [];\r\n        if (hole_wires_i !== undefined) {\r\n            for (const hole_wire_i of hole_wires_i) {\r\n                const hole_wire_verts_i: number[] = this._geom.query.navAnyToVert(EEntType.WIRE, hole_wire_i);\r\n                hole_wire_verts_i.forEach(wire_vert_i => all_verts_i.push(wire_vert_i));\r\n                const hole_wire_posis_i: number[] = hole_wire_verts_i.map( vert_i => this._geom_arrays.dn_verts_posis[vert_i] );\r\n                const hole_wire_coords: Txyz[] = hole_wire_posis_i.map( posi_i => this._geom.model.attribs.query.getPosiCoords(posi_i) );\r\n                all_hole_coords.push(hole_wire_coords);\r\n            }\r\n        }\r\n        // create the triangles\r\n        const tris_corners: number[][] = triangulate(wire_coords, all_hole_coords);\r\n        const tris_verts_i: TTri[] = tris_corners.map(tri_corners => tri_corners.map( corner => all_verts_i[corner] ) as TTri );\r\n        // update down arrays\r\n        const tris_i: number[] = tris_verts_i.map(tri_verts_i => this._geom_arrays.dn_tris_verts.push(tri_verts_i) - 1);\r\n        // update up arrays\r\n        for (let i = 0; i < tris_verts_i.length; i++) {\r\n            const tri_verts_i: TTri = tris_verts_i[i];\r\n            const tri_i: number = tris_i[i];\r\n            for (const tri_vert_i of tri_verts_i) {\r\n                if (this._geom_arrays.up_verts_tris[tri_vert_i] === undefined) {\r\n                    this._geom_arrays.up_verts_tris[tri_vert_i] = [];\r\n                }\r\n                this._geom_arrays.up_verts_tris[tri_vert_i].push(tri_i);\r\n            }\r\n        }\r\n        // return an array of numeric indices of the triangles\r\n        return tris_i;\r\n    }\r\n    /**\r\n     * Adds a face and updates the arrays.\r\n     * Wires are assumed to be closed!\r\n     * This also calls addTris()\r\n     * @param wire_i\r\n     */\r\n    public _addFace(wire_i: number): number {\r\n        // create the triangles\r\n        const tris_i: number[] = this._addTris(wire_i);\r\n        // create the face\r\n        const face: TFace = [[wire_i], tris_i];\r\n        // update down arrays\r\n        const face_i: number = this._geom_arrays.dn_faces_wirestris.push(face) - 1;\r\n        // update up arrays\r\n        this._geom_arrays.up_wires_faces[wire_i] = face_i;\r\n        tris_i.forEach( tri_i => this._geom_arrays.up_tris_faces[tri_i] = face_i );\r\n        // return the numeric index of the face\r\n        return face_i;\r\n    }\r\n    /**\r\n     * Adds a face with a hole and updates the arrays.\r\n     * Wires are assumed to be closed!\r\n     * This also calls addTris()\r\n     * @param wire_i\r\n     */\r\n    public _addFaceWithHoles(wire_i: number, holes_wires_i: number[]): number {\r\n        // create the triangles\r\n        const tris_i: number[] = this._addTris(wire_i, holes_wires_i);\r\n        // create the face\r\n        const face_wires_i: number[] = [wire_i].concat(holes_wires_i);\r\n        const face: TFace = [face_wires_i, tris_i];\r\n        // update down arrays\r\n        const face_i: number = this._geom_arrays.dn_faces_wirestris.push(face) - 1;\r\n        // update up arrays\r\n        face_wires_i.forEach(face_wire_i => this._geom_arrays.up_wires_faces[face_wire_i] = face_i);\r\n        tris_i.forEach( tri_i => this._geom_arrays.up_tris_faces[tri_i] = face_i );\r\n        // return the numeric index of the face\r\n        return face_i;\r\n    }\r\n}\r\n","import { TTri, TVert, TEdge, TWire, TFace,\r\n    TColl, IGeomData, TPoint, TPline, TPgon, Txyz, IGeomArrays, IGeomCopy, TAttribDataTypes, IGeomPack } from './common';\r\nimport { GIGeom } from './GIGeom';\r\n\r\n/**\r\n * Class for geometry.\r\n */\r\nexport class GIGeomIO {\r\n    private _geom: GIGeom;\r\n    private _geom_arrays: IGeomArrays;\r\n    /**\r\n     * Creates an object to store the geometry data.\r\n     * @param geom_data The JSON data\r\n     */\r\n    constructor(geom: GIGeom, geom_arrays: IGeomArrays) {\r\n        this._geom = geom;\r\n        this._geom_arrays = geom_arrays;\r\n    }\r\n    /**\r\n     * Adds data to this model from another model.\r\n     * The existing data in the model is not deleted.\r\n     * Both models may have deleted items, resulting in null values.\r\n     * @param geom_arrays The geom_arrays of the other model.\r\n     */\r\n    public merge(geom_arrays: IGeomArrays): void {\r\n        // get lengths of existing entities before we start adding stuff\r\n        // const num_posis: number = this._geom_arrays.num_posis;\r\n        const num_posis: number = this._geom_arrays.up_posis_verts.length;\r\n        const num_verts: number = this._geom_arrays.dn_verts_posis.length;\r\n        const num_tris: number = this._geom_arrays.dn_tris_verts.length;\r\n        const num_edges: number = this._geom_arrays.dn_edges_verts.length;\r\n        const num_wires: number = this._geom_arrays.dn_wires_edges.length;\r\n        const num_faces: number = this._geom_arrays.dn_faces_wirestris.length;\r\n        const num_points: number = this._geom_arrays.dn_points_verts.length;\r\n        const num_plines: number = this._geom_arrays.dn_plines_wires.length;\r\n        const num_pgons: number = this._geom_arrays.dn_pgons_faces.length;\r\n        const num_colls: number = this._geom_arrays.dn_colls_objs.length;\r\n\r\n        // for the down arrays, it is important the values are never undefined\r\n        // undefined cannot be exported as json\r\n        // if anything is deleted, then the value should be null\r\n\r\n        // add vertices to model\r\n        for (const posi_i of geom_arrays.dn_verts_posis) {\r\n            if (posi_i === null) {\r\n                this._geom_arrays.dn_verts_posis.push( null );\r\n            } else {\r\n                const new_vert: TVert = posi_i + num_posis as TVert;\r\n                this._geom_arrays.dn_verts_posis.push( new_vert );\r\n            }\r\n        }\r\n        // add triangles to model\r\n        for (const verts_i of geom_arrays.dn_tris_verts) {\r\n            if (verts_i === null) {\r\n                this._geom_arrays.dn_tris_verts.push( null );\r\n            } else {\r\n                const new_triangle: TTri = verts_i.map(v => v + num_verts) as TTri;\r\n                this._geom_arrays.dn_tris_verts.push( new_triangle );\r\n            }\r\n        }\r\n        // add edges to model\r\n        for (const verts_i of geom_arrays.dn_edges_verts) {\r\n            if (verts_i === null) {\r\n                this._geom_arrays.dn_edges_verts.push( null );\r\n            } else {\r\n                const new_edge: TEdge = verts_i.map(v => v + num_verts) as TEdge;\r\n                this._geom_arrays.dn_edges_verts.push( new_edge );\r\n            }\r\n        }\r\n        // add wires to model\r\n        for (const edges_i of geom_arrays.dn_wires_edges) {\r\n            if (edges_i === null) {\r\n                this._geom_arrays.dn_wires_edges.push( null )\r\n            } else {\r\n                const new_wire: TWire = edges_i.map(e => e + num_edges) as TWire;\r\n                this._geom_arrays.dn_wires_edges.push( new_wire );\r\n            }\r\n        }\r\n        // add faces to model\r\n        for (const wires_tris_i of geom_arrays.dn_faces_wirestris) {\r\n            if (wires_tris_i === null) {\r\n                this._geom_arrays.dn_faces_wirestris.push( null );\r\n            } else {\r\n                const new_face: TFace = [\r\n                    wires_tris_i[0].map( w => w + num_wires),\r\n                    wires_tris_i[1].map( t => t + num_tris)\r\n                ] as TFace;\r\n                this._geom_arrays.dn_faces_wirestris.push( new_face );\r\n            }\r\n        }\r\n        // add points to model\r\n        for (const vert_i of geom_arrays.dn_points_verts) {\r\n            if (vert_i === null) {\r\n                this._geom_arrays.dn_points_verts.push( null );\r\n            } else {\r\n                const new_point: TPoint = vert_i + num_verts as TPoint;\r\n                this._geom_arrays.dn_points_verts.push( new_point );\r\n            }\r\n        }\r\n        // add plines to model\r\n        for (const wire_i of geom_arrays.dn_plines_wires) {\r\n            if (wire_i === null) {\r\n                this._geom_arrays.dn_plines_wires.push( null );\r\n            } else {\r\n                const new_pline: TPline = wire_i + num_wires as TPline;\r\n                this._geom_arrays.dn_plines_wires.push( new_pline );\r\n            }\r\n        }\r\n        // add pgons to model\r\n        for (const face_i of geom_arrays.dn_pgons_faces) {\r\n            if (face_i === null) {\r\n                this._geom_arrays.dn_pgons_faces.push( null );\r\n            } else {\r\n                const new_pgon: TPgon = face_i + num_faces as TPgon;\r\n                this._geom_arrays.dn_pgons_faces.push( new_pgon );\r\n            }\r\n        }\r\n        // add collections to model\r\n        for (const coll of geom_arrays.dn_colls_objs) {\r\n            if (coll === null) {\r\n                this._geom_arrays.dn_colls_objs.push( null );\r\n            } else {\r\n                const parent: number = (coll[0] === -1) ? -1 : coll[0] + num_colls;\r\n                const coll_points_i: number[] = coll[1].map( point => point + num_points);\r\n                const coll_plines_i: number[] = coll[2].map( line => line + num_plines);\r\n                const coll_pgons_i: number[] = coll[3].map( pgon => pgon + num_pgons);\r\n                const new_coll: TColl = [parent, coll_points_i, coll_plines_i, coll_pgons_i];\r\n                this._geom_arrays.dn_colls_objs.push( new_coll );\r\n            }\r\n        }\r\n\r\n        // update reverse arrays\r\n\r\n        // undefined = no value\r\n        // in typescript, undefined behaves in strange ways, try this\r\n        //     const x = [0, undefined, 2, , 4];\r\n        //     for (const i of x) { console.log(\"i in for loop:\", i);}\r\n        //     x.forEach(i => console.log(\"i in foreach loop:\", i) );\r\n        // for the undefined values, explicitly setting the value to undefined is not the same as not setting it at all\r\n        // with a foreach loop, if there is no value, then it skips it completley\r\n        // in this case, we want to make sure there is no value\r\n\r\n        // update posis to verts (they can be null or [])\r\n        for (let i = 0; i < geom_arrays.up_posis_verts.length; i++) {\r\n            const verts_i: number[] = geom_arrays.up_posis_verts[i];\r\n            if (verts_i === undefined) {\r\n                continue;\r\n            } else if (verts_i === null) {\r\n                this._geom_arrays.up_posis_verts[i + num_posis] = null;\r\n            } else {\r\n                const new_verts_i: number[] = verts_i.map( vert_i => vert_i + num_verts);\r\n                this._geom_arrays.up_posis_verts[i + num_posis] = new_verts_i;\r\n            }\r\n        }\r\n        // update verts to tris\r\n        for (let i = 0; i < geom_arrays.up_verts_tris.length; i++) {\r\n            const tris_i: number[] = geom_arrays.up_verts_tris[i];\r\n            if (tris_i === undefined) {\r\n                continue;\r\n            } else if (tris_i === null) {\r\n                this._geom_arrays.up_verts_tris[i + num_verts] = null;\r\n            } else {\r\n                const new_tris_i: number[] = tris_i.map( tri_i => tri_i + num_tris);\r\n                this._geom_arrays.up_verts_tris[i + num_verts] = new_tris_i;\r\n            }\r\n        }\r\n        // update tris to faces\r\n        for (let i = 0; i < geom_arrays.up_tris_faces.length; i++) {\r\n            const face_i: number = geom_arrays.up_tris_faces[i];\r\n            if (face_i === undefined) {\r\n                continue;\r\n            } else if (face_i === null) {\r\n                this._geom_arrays.up_tris_faces[i + num_tris] = null;\r\n            } else {\r\n                const new_face_i: number = face_i + num_faces;\r\n                this._geom_arrays.up_tris_faces[i + num_tris] = new_face_i;\r\n            }\r\n        }\r\n        // update verts to edges\r\n        for (let i = 0; i < geom_arrays.up_verts_edges.length; i++) {\r\n            const edges_i: number[] = geom_arrays.up_verts_edges[i];\r\n            if (edges_i === undefined) {\r\n                continue;\r\n            } else if (edges_i === null) {\r\n                this._geom_arrays.up_verts_edges[i + num_verts] = null;\r\n            } else {\r\n                const new_edges_i: number[] = edges_i.map( edge_i => edge_i + num_edges);\r\n                this._geom_arrays.up_verts_edges[i + num_verts] = new_edges_i;\r\n            }\r\n        }\r\n        // update edges to wires\r\n        for (let i = 0; i < geom_arrays.up_edges_wires.length; i++) {\r\n            const wire_i: number = geom_arrays.up_edges_wires[i];\r\n            if (wire_i === undefined) {\r\n                continue;\r\n            } else if (wire_i === null) {\r\n                this._geom_arrays.up_edges_wires[i + num_edges] = null;\r\n            } else {\r\n                const new_wire_i: number = wire_i + num_wires;\r\n                this._geom_arrays.up_edges_wires[i + num_edges] = new_wire_i;\r\n            }\r\n        }\r\n        // update wires to faces\r\n        for (let i = 0; i < geom_arrays.up_wires_faces.length; i++) {\r\n            const face_i: number = geom_arrays.up_wires_faces[i];\r\n            if (face_i === undefined) {\r\n                continue;\r\n            } else if (face_i === null) {\r\n                this._geom_arrays.up_wires_faces[i + num_wires] = null;\r\n            } else {\r\n                const new_face_i: number = face_i + num_faces;\r\n                this._geom_arrays.up_wires_faces[i + num_wires] = new_face_i;\r\n            }\r\n        }\r\n        // update verts to points\r\n        for (let i = 0; i < geom_arrays.up_verts_points.length; i++) {\r\n            const point_i: number = geom_arrays.up_verts_points[i];\r\n            if (point_i === undefined) {\r\n                continue;\r\n            } else if (point_i === null) {\r\n                this._geom_arrays.up_verts_points[i + num_points] = null;\r\n            } else {\r\n                const new_point_i: number = point_i + num_points;\r\n                this._geom_arrays.up_verts_points[i + num_points] = new_point_i;\r\n            }\r\n        }\r\n        // update wires to plines\r\n        for (let i = 0; i < geom_arrays.up_wires_plines.length; i++) {\r\n            const pline_i: number = geom_arrays.up_wires_plines[i];\r\n            if (pline_i === undefined) {\r\n                continue;\r\n            } else if (pline_i === null) {\r\n                this._geom_arrays.up_wires_plines[i + num_wires] = null;\r\n            } else {\r\n                const new_pline_i: number = pline_i + num_plines;\r\n                this._geom_arrays.up_wires_plines[i + num_wires] = new_pline_i;\r\n            }\r\n        }\r\n        // update faces to pgons\r\n        for (let i = 0; i < geom_arrays.up_faces_pgons.length; i++) {\r\n            const pgon_i: number = geom_arrays.up_faces_pgons[i];\r\n            if (pgon_i === undefined) {\r\n                continue;\r\n            } else if (pgon_i === null) {\r\n                this._geom_arrays.up_faces_pgons[i + num_faces] = null;\r\n            } else {\r\n                const new_pgon_i: number = pgon_i + num_pgons;\r\n                this._geom_arrays.up_faces_pgons[i + num_faces] = new_pgon_i;\r\n            }\r\n        }\r\n        // update points to colls\r\n        for (let i = 0; i < geom_arrays.up_points_colls.length; i++) {\r\n            const colls_i: number[] = geom_arrays.up_points_colls[i];\r\n            if (colls_i === undefined) {\r\n                continue;\r\n            } else if (colls_i === null) {\r\n                this._geom_arrays.up_points_colls[i + num_points] = null;\r\n            } else {\r\n                const new_colls_i: number[] = colls_i.map(coll_i => coll_i + num_colls);\r\n                this._geom_arrays.up_points_colls[i + num_points] = new_colls_i;\r\n            }\r\n        }\r\n        // update plines to colls\r\n        for (let i = 0; i < geom_arrays.up_plines_colls.length; i++) {\r\n            const colls_i: number[] = geom_arrays.up_plines_colls[i];\r\n            if (colls_i === undefined) {\r\n                continue;\r\n            } else if (colls_i === null) {\r\n                this._geom_arrays.up_plines_colls[i + num_plines] = null;\r\n            } else {\r\n                const new_colls_i: number[] = colls_i.map(coll_i => coll_i + num_colls);\r\n                this._geom_arrays.up_plines_colls[i + num_plines] = new_colls_i;\r\n            }\r\n        }\r\n        // update pgons to colls\r\n        for (let i = 0; i < geom_arrays.up_pgons_colls.length; i++) {\r\n            const colls_i: number[] = geom_arrays.up_pgons_colls[i];\r\n            if (colls_i === undefined) {\r\n                continue;\r\n            } else if (colls_i === null) {\r\n                this._geom_arrays.up_pgons_colls[i + num_pgons] = null;\r\n            } else {\r\n                const new_colls_i: number[] = colls_i.map(coll_i => coll_i + num_colls);\r\n                this._geom_arrays.up_pgons_colls[i + num_pgons] = new_colls_i;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Sets the data in this model from JSON data.\r\n     * The existing data in the model is deleted.\r\n     * @param geom_data The JSON data\r\n     */\r\n    public setData(geom_data: IGeomData): IGeomPack {\r\n        // update the down arrays\r\n        // these are assumed never to undefined\r\n\r\n        // add vertices to model\r\n        this._geom_arrays.dn_verts_posis =  geom_data.vertices;\r\n        // add triangles to model\r\n        this._geom_arrays.dn_tris_verts =  geom_data.triangles;\r\n        // add edges to model\r\n        this._geom_arrays.dn_edges_verts = geom_data.edges;\r\n        // add wires to model\r\n        this._geom_arrays.dn_wires_edges = geom_data.wires;\r\n        // add faces to model\r\n        this._geom_arrays.dn_faces_wirestris = geom_data.faces;\r\n        // add points to model\r\n        this._geom_arrays.dn_points_verts = geom_data.points;\r\n        // add lines to model\r\n        this._geom_arrays.dn_plines_wires = geom_data.polylines;\r\n        // add pgons to model\r\n        this._geom_arrays.dn_pgons_faces = geom_data.polygons;\r\n        // add collections to model\r\n        this._geom_arrays.dn_colls_objs = geom_data.collections;\r\n\r\n        // update the up arrays\r\n        // many of the values will be undefined\r\n        // they could be null, since we might have saved some data with deleted ents\r\n\r\n        // fill up_posis_verts with either null or empty arrays\r\n        // the up_posis_verts array is special, it can have no undefine values\r\n        // its length is used to determine how many posis there are in the model\r\n        this._geom_arrays.up_posis_verts = [];\r\n        for (let posi_i = 0; posi_i < geom_data.num_positions; posi_i++) {\r\n            if (this._geom.model.attribs.query.getPosiCoords(posi_i) === undefined) {\r\n                this._geom_arrays.up_posis_verts[posi_i] = null;\r\n            } else {\r\n                this._geom_arrays.up_posis_verts[posi_i] = [];\r\n            }\r\n        }\r\n        // posis->verts\r\n        this._geom_arrays.dn_verts_posis.forEach( (posi_i, vert_i) => { // val, index\r\n            if (posi_i !== null) {\r\n                this._geom_arrays.up_posis_verts[posi_i].push(vert_i);\r\n            }\r\n        });\r\n        // verts->tris, one to many\r\n        this._geom_arrays.up_verts_tris = [];\r\n        this._geom_arrays.dn_tris_verts.forEach( (vert_i_arr, tri_i) => { // val, index\r\n            if (vert_i_arr !== null) {\r\n                vert_i_arr.forEach( vert_i => {\r\n                    if (this._geom_arrays.up_verts_tris[vert_i] === undefined) {\r\n                        this._geom_arrays.up_verts_tris[vert_i] = [];\r\n                    }\r\n                    this._geom_arrays.up_verts_tris[vert_i].push(tri_i);\r\n                });\r\n            }\r\n        });\r\n        // verts->edges, one to two\r\n        this._geom_arrays.up_verts_edges = [];\r\n        this._geom_arrays.dn_edges_verts.forEach( (vert_i_arr, edge_i) => { // val, index\r\n            if (vert_i_arr !== null) {\r\n                vert_i_arr.forEach( vert_i => {\r\n                    if (this._geom_arrays.up_verts_edges[vert_i] === undefined) {\r\n                        this._geom_arrays.up_verts_edges[vert_i] = [];\r\n                    }\r\n                    this._geom_arrays.up_verts_edges[vert_i].push(edge_i);\r\n                });\r\n            }\r\n        });\r\n        // edges->wires\r\n        this._geom_arrays.up_edges_wires = [];\r\n        this._geom_arrays.dn_wires_edges.forEach( (edge_i_arr, wire_i) => { // val, index\r\n            if (edge_i_arr !== null) {\r\n                edge_i_arr.forEach( edge_i => {\r\n                    this._geom_arrays.up_edges_wires[edge_i] = wire_i;\r\n                });\r\n            }\r\n        });\r\n        // wires->faces, tris->faces, faces->wirestris\r\n        this._geom_arrays.up_wires_faces = [];\r\n        this._geom_arrays.up_tris_faces = [];\r\n        this._geom_arrays.dn_faces_wirestris.forEach( (face, face_i) => { // val, index\r\n            if (face !== null) {\r\n                const [wire_i_arr, tri_i_arr] = face;\r\n                wire_i_arr.forEach( wire_i => {\r\n                    this._geom_arrays.up_wires_faces[wire_i] = face_i;\r\n                });\r\n                tri_i_arr.forEach( tri_i => {\r\n                    this._geom_arrays.up_tris_faces[tri_i] = face_i;\r\n                });\r\n            }\r\n        });\r\n        // points, lines, polygons\r\n        this._geom_arrays.up_verts_points = [];\r\n        this._geom_arrays.dn_points_verts.forEach( (vert_i, point_i) => { // val, index\r\n            if (vert_i !== null) {\r\n                this._geom_arrays.up_verts_points[vert_i] = point_i;\r\n            }\r\n        });\r\n        this._geom_arrays.up_wires_plines = [];\r\n        this._geom_arrays.dn_plines_wires.forEach( (wire_i, line_i) => { // val, index\r\n            if (wire_i !== null) {\r\n                this._geom_arrays.up_wires_plines[wire_i] = line_i;\r\n            }\r\n        });\r\n        this._geom_arrays.up_faces_pgons = [];\r\n        this._geom_arrays.dn_pgons_faces.forEach( (face_i, pgon_i) => { // val, index\r\n            if (face_i !== null) {\r\n                this._geom_arrays.up_faces_pgons[face_i] = pgon_i;\r\n            }\r\n        });\r\n        // collections of points, polylines, polygons\r\n        this._geom_arrays.up_points_colls = [];\r\n        this._geom_arrays.up_plines_colls = [];\r\n        this._geom_arrays.up_pgons_colls = [];\r\n        this._geom_arrays.dn_colls_objs.forEach( (coll, coll_i) => { // val, index\r\n            if (coll !== null) {\r\n                const [parent, point_i_arr, pline_i_arr, pgon_i_arr] = coll;\r\n                point_i_arr.forEach( point_i => {\r\n                    if (this._geom_arrays.up_points_colls[point_i] === undefined) {\r\n                        this._geom_arrays.up_points_colls[point_i] = [coll_i];\r\n                    } else {\r\n                        this._geom_arrays.up_points_colls[point_i].push(coll_i);\r\n                    }\r\n                });\r\n                pline_i_arr.forEach( pline_i => {\r\n                    if (this._geom_arrays.up_plines_colls[pline_i] === undefined) {\r\n                        this._geom_arrays.up_plines_colls[pline_i] = [coll_i];\r\n                    } else {\r\n                        this._geom_arrays.up_plines_colls[pline_i].push(coll_i);\r\n                    }\r\n                });\r\n                pgon_i_arr.forEach( pgon_i => {\r\n                    if (this._geom_arrays.up_pgons_colls[pgon_i] === undefined) {\r\n                        this._geom_arrays.up_pgons_colls[pgon_i] = [coll_i];\r\n                    } else {\r\n                        this._geom_arrays.up_pgons_colls[pgon_i].push(coll_i);\r\n                    }\r\n                });\r\n            }\r\n        });\r\n\r\n        // return data\r\n        return {\r\n            posis_i:  Array.from(Array(geom_data.num_positions).keys()), // .map(v => v + num_old_posis),\r\n            points_i: Array.from(Array(geom_data.points.length).keys()), // .map(v => v + num_old_points),\r\n            plines_i: Array.from(Array(geom_data.polylines.length).keys()), // .map(v => v + num_old_plines),\r\n            pgons_i:  Array.from(Array(geom_data.polygons.length).keys()), // .map(v => v + num_old_pgons),\r\n            colls_i:  Array.from(Array(geom_data.collections.length).keys()) // .map(v => v + num_old_colls)\r\n        };\r\n    }\r\n    /**\r\n     * Returns the JSON data for this model.\r\n     */\r\n    public getData(): IGeomData {\r\n        return {\r\n            num_positions: this._geom_arrays.up_posis_verts.length,\r\n            triangles: this._geom_arrays.dn_tris_verts,\r\n            vertices: this._geom_arrays.dn_verts_posis,\r\n            edges: this._geom_arrays.dn_edges_verts,\r\n            wires: this._geom_arrays.dn_wires_edges,\r\n            faces: this._geom_arrays.dn_faces_wirestris,\r\n            points: this._geom_arrays.dn_points_verts,\r\n            polylines: this._geom_arrays.dn_plines_wires,\r\n            polygons: this._geom_arrays.dn_pgons_faces,\r\n            collections: this._geom_arrays.dn_colls_objs\r\n        };\r\n    }\r\n\r\n}\r\n","import { EEntType, TTri, TEdge, TWire, TFace, IGeomArrays, Txyz, TColl } from './common';\r\nimport { GIGeom } from './GIGeom';\r\nimport { arrRem, arrIdxAdd } from '../util/arrays';\r\nimport { vecDot } from '../geom/vectors';\r\n\r\n/**\r\n * Class for geometry.\r\n */\r\nexport class GIGeomModify {\r\n    private _geom: GIGeom;\r\n    private _geom_arrays: IGeomArrays;\r\n    /**\r\n     * Creates an object to store the geometry data.\r\n     * @param geom_data The JSON data\r\n     */\r\n    constructor(geom: GIGeom, geom_arrays: IGeomArrays) {\r\n        this._geom = geom;\r\n        this._geom_arrays = geom_arrays;\r\n    }\r\n    // ============================================================================\r\n    // Delete geometry\r\n    // ============================================================================\r\n    /**\r\n     * Del all unused posis in the model.\r\n     * Posi attributes will also be deleted.\r\n     * @param posis_i\r\n     */\r\n    public delUnusedPosis(posis_i: number|number[]): void {\r\n        // create array\r\n        posis_i = (Array.isArray(posis_i)) ? posis_i : [posis_i];\r\n        if (posis_i.length === 0) { return; }\r\n        // loop\r\n        const deleted_posis_i: number[] = [];\r\n        for (const posi_i of posis_i) {\r\n            // update up arrays\r\n            const verts_i: number[] = this._geom_arrays.up_posis_verts[posi_i];\r\n            if (verts_i.length === 0) { // only delete posis with no verts\r\n                this._geom_arrays.up_posis_verts[posi_i] = null;\r\n                deleted_posis_i.push(posi_i);\r\n            }\r\n            // no need to update down arrays\r\n        }\r\n        // delete all the posi attributes, for all posis that were deleted\r\n        this._geom.model.attribs.add.delEntFromAttribs(EEntType.POSI, deleted_posis_i);\r\n    }\r\n    /**\r\n     * Del posis.\r\n     * Posi attributes will also be deleted.\r\n     * @param posis_i\r\n     */\r\n    public delPosis(posis_i: number|number[]): void {\r\n        // create array\r\n        posis_i = (Array.isArray(posis_i)) ? posis_i : [posis_i];\r\n        if (posis_i.length === 0) { return; }\r\n        // loop\r\n        const deleted_posis_i: number[] = [];\r\n        for (const posi_i of posis_i) {\r\n            if (this._geom_arrays.up_posis_verts[posi_i] === null) { continue; } // already deleted\r\n            // delete all verts for this posi\r\n            const copy_verts_i: number[] = this._geom_arrays.up_posis_verts[posi_i].slice(); // make a copy\r\n            copy_verts_i.forEach(vert_i => this._delVert(vert_i));\r\n            // delete the posi\r\n            this._geom_arrays.up_posis_verts[posi_i] = null;\r\n            deleted_posis_i.push(posi_i);\r\n            // no need to update down arrays\r\n        }\r\n        // delete all the posi attributes, for all posis that were deleted\r\n        this._geom.model.attribs.add.delEntFromAttribs(EEntType.POSI, deleted_posis_i);\r\n    }\r\n    /**\r\n     * Del points.\r\n     * Point attributes will also be deleted.\r\n     * @param points_i\r\n     */\r\n    public delPoints(points_i: number|number[], del_unused_posis: boolean): void {\r\n        // create array\r\n        points_i = (Array.isArray(points_i)) ? points_i : [points_i];\r\n        if (!points_i.length) { return; }\r\n        // del attribs\r\n        this._geom.model.attribs.add.delEntFromAttribs(EEntType.POINT, points_i);\r\n        // loop\r\n        for (const point_i of points_i) {\r\n            // first get all the arrays so we dont break navigation\r\n            const vert_i: number = this._geom_arrays.dn_points_verts[point_i];\r\n            if (vert_i === null) { continue; } // already deleted\r\n            const posi_i: number = this._geom_arrays.dn_verts_posis[vert_i];\r\n            // delete the point and check collections\r\n            this._geom_arrays.dn_points_verts[point_i] = null;\r\n            for (const coll of this._geom_arrays.dn_colls_objs) {\r\n                const coll_points_i: number[] = coll[1];\r\n                arrRem(coll_points_i, point_i);\r\n            }\r\n            // delete the vert by setting the up and down arrays to null\r\n            this._geom_arrays.dn_verts_posis[vert_i] = null;\r\n            delete this._geom_arrays.up_verts_points[vert_i];\r\n            // remove the vert from up_posis_verts\r\n            const posi_verts_i: number[] = this._geom_arrays.up_posis_verts[posi_i];\r\n            arrRem(posi_verts_i, vert_i);\r\n            // delete unused posis\r\n            if (del_unused_posis) {\r\n                this.delUnusedPosis(posi_i);\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Del plines.\r\n     * Pline attributes will also be deleted.\r\n     * @param plines_i\r\n     */\r\n    public delPlines(plines_i: number|number[], del_unused_posis: boolean): void {\r\n        // del attribs\r\n        this._geom.model.attribs.add.delEntFromAttribs(EEntType.PLINE, plines_i);\r\n        // create array\r\n        plines_i = (Array.isArray(plines_i)) ? plines_i : [plines_i];\r\n        if (!plines_i.length) { return; }\r\n        // loop\r\n        for (const pline_i of plines_i) {\r\n            // first get all the arrays so we dont break navigation\r\n            const wire_i: number = this._geom_arrays.dn_plines_wires[pline_i];\r\n            if (wire_i === null) { continue; } // already deleted\r\n            const edges_i: number[] = this._geom.query.navAnyToEdge(EEntType.PLINE, pline_i);\r\n            const verts_i: number[] = this._geom.query.navAnyToVert(EEntType.PLINE, pline_i);\r\n            const posis_i: number[] = this._geom.query.navAnyToPosi(EEntType.PLINE, pline_i);\r\n            // delete the pline and check collections\r\n            this._geom_arrays.dn_plines_wires[pline_i] = null;\r\n            for (const coll of this._geom_arrays.dn_colls_objs) {\r\n                if (coll !== null) {\r\n                    const coll_plines_i: number[] = coll[2];\r\n                    arrRem(coll_plines_i, pline_i);\r\n                }\r\n            }\r\n            // delete the wire\r\n            this._geom_arrays.dn_wires_edges[wire_i] = null;\r\n            delete this._geom_arrays.up_wires_plines[wire_i];\r\n            // delete the edges\r\n            edges_i.forEach( edge_i => {\r\n                this._geom_arrays.dn_edges_verts[edge_i] = null;\r\n                delete this._geom_arrays.up_edges_wires[edge_i];\r\n            });\r\n            // delete the verts\r\n            verts_i.forEach( vert_i => {\r\n                this._geom_arrays.dn_verts_posis[vert_i] = null;\r\n                delete this._geom_arrays.up_verts_edges[vert_i];\r\n            });\r\n            // remove the verts from up_posis_verts\r\n            for (const posi_i of posis_i) {\r\n                const posi_verts_i: number[] = this._geom_arrays.up_posis_verts[posi_i];\r\n                // loop through deleted verts\r\n                for (const vert_i of verts_i) {\r\n                    arrRem(posi_verts_i, vert_i);\r\n                    if (posi_verts_i.length === 0) { break; }\r\n                }\r\n            }\r\n            // delete unused posis\r\n            if (del_unused_posis) {\r\n                this.delUnusedPosis(posis_i);\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Del pgons.\r\n     * Pgon attributes will also be deleted.\r\n     * @param pgons_i\r\n     */\r\n    public delPgons(pgons_i: number|number[], del_unused_posis: boolean): void {\r\n        // del attribs\r\n        this._geom.model.attribs.add.delEntFromAttribs(EEntType.PGON, pgons_i);\r\n        // create array\r\n        pgons_i = (Array.isArray(pgons_i)) ? pgons_i : [pgons_i];\r\n        if (!pgons_i.length) { return; }\r\n        // loop\r\n        for (const pgon_i of pgons_i) {\r\n            // first get all the arrays so we dont break navigation\r\n            const face_i: number = this._geom_arrays.dn_pgons_faces[pgon_i];\r\n            if (face_i === null) { continue; } // already deleted\r\n            const wires_i: number[] = this._geom.query.navAnyToWire(EEntType.PGON, pgon_i);\r\n            const edges_i: number[] = this._geom.query.navAnyToEdge(EEntType.PGON, pgon_i);\r\n            const verts_i: number[] = this._geom.query.navAnyToVert(EEntType.PGON, pgon_i);\r\n            const tris_i: number[] = this._geom.query.navAnyToTri(EEntType.PGON, pgon_i);\r\n            const posis_i: number[] = this._geom.query.navAnyToPosi(EEntType.PGON, pgon_i);\r\n            // delete the pgon and check the collections\r\n            this._geom_arrays.dn_pgons_faces[pgon_i] = null;\r\n            for (const coll of this._geom_arrays.dn_colls_objs) {\r\n                if (coll !== null) {\r\n                    const coll_pgons_i: number[] = coll[3];\r\n                    arrRem(coll_pgons_i, pgon_i);\r\n                }\r\n            }\r\n            // delete the face\r\n            this._geom_arrays.dn_faces_wirestris[face_i] = null;\r\n            delete this._geom_arrays.up_faces_pgons[face_i];\r\n            // delete the wires\r\n            wires_i.forEach( wire_i => {\r\n                this._geom_arrays.dn_wires_edges[wire_i] = null;\r\n                delete this._geom_arrays.up_wires_faces[wire_i];\r\n            });\r\n            // delete the edges\r\n            edges_i.forEach( edge_i => {\r\n                this._geom_arrays.dn_edges_verts[edge_i] = null;\r\n                delete this._geom_arrays.up_edges_wires[edge_i];\r\n            });\r\n            // delete the verts\r\n            verts_i.forEach( vert_i => {\r\n                this._geom_arrays.dn_verts_posis[vert_i] = null;\r\n                delete this._geom_arrays.up_verts_edges[vert_i];\r\n                delete this._geom_arrays.up_verts_tris[vert_i];\r\n            });\r\n            // delete the tris\r\n            tris_i.forEach( tri_i => {\r\n                this._geom_arrays.dn_tris_verts[tri_i] = null;\r\n                delete this._geom_arrays.up_tris_faces[tri_i];\r\n            });\r\n            // clean up, posis up arrays point to verts that may have been deleted\r\n            for (const posi_i of posis_i) {\r\n                const posi_verts_i: number[] = this._geom_arrays.up_posis_verts[posi_i];\r\n                // loop through deleted verts\r\n                for (const vert_i of verts_i) {\r\n                    arrRem(posi_verts_i, vert_i);\r\n                    if (posi_verts_i.length === 0) { break; }\r\n                }\r\n            }\r\n            // delete unused posis\r\n            if (del_unused_posis) {\r\n                this.delUnusedPosis(posis_i);\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Delete a collection.\r\n     * Collection attributes will also be deleted.\r\n     * This does not delete any of the object in the collection.\r\n     * Also, does not delete any positions.\r\n     * @param colls_i The collections to delete\r\n     */\r\n    public delColls(colls_i: number|number[], del_unused_posis: boolean): void {\r\n        // del attribs\r\n        this._geom.model.attribs.add.delEntFromAttribs(EEntType.COLL, colls_i);\r\n        // create array\r\n        colls_i = (Array.isArray(colls_i)) ? colls_i : [colls_i];\r\n        if (!colls_i.length) { return; }\r\n        // loop\r\n        for (const coll_i of colls_i) {\r\n            const coll: TColl = this._geom_arrays.dn_colls_objs[coll_i];\r\n            if (coll === null) { continue; } // already deleted\r\n            // up arrays, delete points, plines, pgons\r\n            const points_i: number[] = coll[1];\r\n            points_i.forEach(point_i =>  {\r\n                const other_colls_i: number[] = this._geom_arrays.up_points_colls[point_i];\r\n                arrRem(other_colls_i, coll_i);\r\n            });\r\n            const plines_i: number[] = coll[2];\r\n            plines_i.forEach(pline_i =>  {\r\n                const other_colls_i: number[] = this._geom_arrays.up_plines_colls[pline_i];\r\n                arrRem(other_colls_i, coll_i);\r\n            });\r\n            const pgons_i: number[] = coll[3];\r\n            pgons_i.forEach(pgon_i =>  {\r\n                const other_colls_i: number[] = this._geom_arrays.up_pgons_colls[pgon_i];\r\n                arrRem(other_colls_i, coll_i);\r\n            });\r\n            // down arrays\r\n            this._geom_arrays.dn_colls_objs[coll_i] = null;\r\n        }\r\n    }\r\n    // ============================================================================\r\n    // Modify geometry\r\n    // ============================================================================\r\n    /**\r\n     * \r\n     * @param coll_i Set collection parent\r\n     * @param parent_coll_i\r\n     */\r\n    public setCollParent(coll_i: number, parent_coll_i: number): void {\r\n        this._geom_arrays.dn_colls_objs[coll_i][0] = parent_coll_i;\r\n    }\r\n    /**\r\n     * Add entities to a collection\r\n     * @param coll_i\r\n     * @param points_i\r\n     * @param plines_i\r\n     * @param pgons_i\r\n     */\r\n    public collAddEnts(coll_i: number, points_i: number[], plines_i: number[], pgons_i: number[]): void {\r\n        const coll: TColl = this._geom_arrays.dn_colls_objs[coll_i];\r\n        const coll_points: number[] = coll[1];\r\n        if (points_i && points_i.length) {\r\n            for (const point_i of points_i) {\r\n                if (coll_points.indexOf(point_i) === -1) {\r\n                    // update down arrays\r\n                    coll_points.push(point_i);\r\n                    // update up arrays\r\n                    arrIdxAdd(this._geom_arrays.up_points_colls, point_i, coll_i);\r\n                }\r\n            }\r\n        }\r\n        const coll_plines: number[] = coll[2];\r\n        if (plines_i && plines_i.length) {\r\n            for (const pline_i of plines_i) {\r\n                if (coll_plines.indexOf(pline_i) === -1) {\r\n                    // update down arrays\r\n                    coll_plines.push(pline_i);\r\n                    // update up arrays\r\n                    arrIdxAdd(this._geom_arrays.up_plines_colls, pline_i, coll_i);\r\n                }\r\n            }\r\n        }\r\n        const coll_pgons: number[] = coll[3];\r\n        if (pgons_i && pgons_i.length) {\r\n            for (const pgon_i of pgons_i) {\r\n                if (coll_pgons.indexOf(pgon_i) === -1) {\r\n                    // update down arrays\r\n                    coll_pgons.push(pgon_i);\r\n                    // update up arrays\r\n                    arrIdxAdd(this._geom_arrays.up_pgons_colls, pgon_i, coll_i);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Remove entities from a collection\r\n     * @param coll_i\r\n     * @param points_i\r\n     * @param plines_i\r\n     * @param pgons_i\r\n     */\r\n    public collRemoveEnts(coll_i: number, points_i: number[], plines_i: number[], pgons_i: number[]): void {\r\n        const coll: TColl = this._geom_arrays.dn_colls_objs[coll_i];\r\n        const coll_points: number[] = coll[1];\r\n        if (points_i && points_i.length) {\r\n            for (const point_i of points_i) {\r\n                // update down arrays\r\n                arrRem(coll_points, point_i);\r\n                // update up arrays\r\n                arrRem(this._geom_arrays.up_points_colls[point_i], coll_i);\r\n            }\r\n        }\r\n        const coll_plines: number[] = coll[2];\r\n        if (plines_i && plines_i.length) {\r\n            for (const pline_i of plines_i) {\r\n                // update down arrays\r\n                arrRem(coll_plines, pline_i);\r\n                // update up arrays\r\n                arrRem(this._geom_arrays.up_plines_colls[pline_i], coll_i);\r\n            }\r\n        }\r\n        const coll_pgons: number[] = coll[3];\r\n        if (pgons_i && pgons_i.length) {\r\n            for (const pgon_i of pgons_i) {\r\n                // update down arrays\r\n                arrRem(coll_pgons, pgon_i);\r\n                // update up arrays\r\n                arrRem(this._geom_arrays.up_pgons_colls[pgon_i], coll_i);\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Creates hole in a face\r\n     * @param posis_id\r\n     */\r\n    public cutFaceHoles(face_i: number, posis_i_arr: number[][]): number[] {\r\n        // get the normal of the face\r\n        const face_normal: Txyz = this._geom.query.getFaceNormal(face_i);\r\n        // make the wires for the holes\r\n        const hole_wires_i: number[] = [];\r\n        for (const hole_posis_i of posis_i_arr) {\r\n            const hole_vert_i_arr: number[] = hole_posis_i.map( posi_i => this._geom.add._addVertex(posi_i));\r\n            const hole_edges_i_arr: number[] = [];\r\n            for (let i = 0; i < hole_vert_i_arr.length - 1; i++) {\r\n                hole_edges_i_arr.push( this._geom.add._addEdge(hole_vert_i_arr[i], hole_vert_i_arr[i + 1]));\r\n            }\r\n            hole_edges_i_arr.push( this._geom.add._addEdge(hole_vert_i_arr[hole_vert_i_arr.length - 1], hole_vert_i_arr[0]));\r\n            const hole_wire_i: number = this._geom.add._addWire(hole_edges_i_arr, true);\r\n            // get normal of wire and check if we need to reverse the wire\r\n            const wire_normal: Txyz = this._geom.query.getWireNormal(hole_wire_i);\r\n            if (vecDot(face_normal, wire_normal) > 0) {\r\n                this.reverse(hole_wire_i);\r\n            }\r\n            // add to list of holes\r\n            hole_wires_i.push(hole_wire_i);\r\n        }\r\n        // create the holes, does everything at face level\r\n        this._cutFaceHoles(face_i, hole_wires_i);\r\n        // no need to change either the up or down arrays\r\n        // return the new wires\r\n        return hole_wires_i;\r\n    }\r\n    /**\r\n     * Close a wire\r\n     * @param wire_i The wire to close.\r\n     */\r\n    public closeWire(wire_i: number): number {\r\n        // get the wire start and end verts\r\n        const wire: TWire = this._geom_arrays.dn_wires_edges[wire_i];\r\n        const num_edges: number = wire.length;\r\n        const start_edge_i: number = wire[0];\r\n        const end_edge_i: number = wire[num_edges - 1];\r\n        const start_vert_i: number = this._geom.query.navEdgeToVert(start_edge_i)[0];\r\n        const end_vert_i: number = this._geom.query.navEdgeToVert(end_edge_i)[1];\r\n        if (start_vert_i === end_vert_i) { return; }\r\n        // add the edge to the model\r\n        const new_edge_i: number = this._geom.add._addEdge(end_vert_i, start_vert_i);\r\n        // update the down arrays\r\n        this._geom_arrays.dn_wires_edges[wire_i].push(new_edge_i);\r\n        // update the up arrays\r\n        this._geom_arrays.up_edges_wires[new_edge_i] = wire_i;\r\n        // return the new edge\r\n        return new_edge_i;\r\n    }\r\n    /**\r\n     * Open a wire, by making a new position for the last vertex.\r\n     * @param wire_i The wire to close.\r\n     */\r\n    public openWire(wire_i: number): void {\r\n        // This deletes an edge\r\n        throw new Error('Not implemented');\r\n    }\r\n    /**\r\n     * Insert a vertex into an edge and updates the wire with the new edge\r\n     * @param edge_i The edge to insert teh vertex into\r\n     */\r\n    public insertVertIntoWire(edge_i: number, posi_i: number): number {\r\n        const wire_i: number = this._geom.query.navEdgeToWire(edge_i);\r\n        const wire: TWire = this._geom_arrays.dn_wires_edges[wire_i];\r\n        const old_edge: TEdge = this._geom_arrays.dn_edges_verts[edge_i];\r\n        // create one new vertex and one new edge\r\n        const new_vert_i: number = this._geom.add._addVertex(posi_i);\r\n        const new_edge_i: number = this._geom.add._addEdge(new_vert_i, old_edge[1]);\r\n        // update the down arrays\r\n        old_edge[1] = new_vert_i;\r\n        wire.splice(wire.indexOf(edge_i), 1, edge_i, new_edge_i);\r\n        // update the up arrays\r\n        this._geom_arrays.up_edges_wires[new_edge_i] = wire_i;\r\n        // return the new edge\r\n        return new_edge_i;\r\n    }\r\n    /**\r\n     * Adds a vertex to a wire and updates the wire with the new edge\r\n     * @param wire_i The wire to add to.\r\n     */\r\n    public addVertToWire(wire_i: number, posi_i: number, to_end: boolean): number {\r\n        const wire: TWire = this._geom_arrays.dn_wires_edges[wire_i];\r\n        // create one new vertex and one new edge\r\n        const new_vert_i: number = this._geom.add._addVertex(posi_i);\r\n        let new_edge_i: number;\r\n        if (to_end) {\r\n            const exist_edge_i: number = wire[wire.length - 1];\r\n            const exist_vert_i: number = this._geom_arrays.dn_edges_verts[exist_edge_i][1];\r\n            new_edge_i = this._geom.add._addEdge(exist_vert_i, new_vert_i);\r\n            // update the down arrays\r\n            wire.push(new_edge_i);\r\n        } else {\r\n            const exist_edge_i: number = wire[0];\r\n            const exist_vert_i: number = this._geom_arrays.dn_edges_verts[exist_edge_i][0];\r\n            new_edge_i = this._geom.add._addEdge(new_vert_i, exist_vert_i);\r\n            // update the down arrays\r\n            wire.splice(0, 0, new_edge_i);\r\n        }\r\n        // update the up arrays\r\n        this._geom_arrays.up_edges_wires[new_edge_i] = wire_i;\r\n        // return the new edge\r\n        return new_edge_i;\r\n    }\r\n    /**\r\n     * Replace positions\r\n     * @param ent_type\r\n     * @param ent_i\r\n     * @param new_posis_i\r\n     */\r\n    public replacePosis(ent_type: EEntType, ent_i: number, new_posis_i: number[]): void {\r\n        const verts_i: number[] = this._geom.query.navAnyToVert(ent_type, ent_i);\r\n        if (verts_i.length !== new_posis_i.length) {\r\n            throw new Error('Replacing positions operation failed due to incorrect number of positions.');\r\n        }\r\n        for (let i = 0; i < verts_i.length; i++) {\r\n            const vert_i: number = verts_i[i];\r\n            const old_posi_i: number = this._geom_arrays.dn_verts_posis[vert_i];\r\n            const new_posi_i: number = new_posis_i[i];\r\n            // set the down array\r\n            this._geom_arrays.dn_verts_posis[vert_i] = new_posi_i;\r\n            // update the up arrays for the old posi, i.e. remove this vert\r\n            arrRem(this._geom_arrays.up_posis_verts[old_posi_i], vert_i);\r\n            // update the up arrays for the new posi, i.e. add this vert\r\n            this._geom_arrays.up_posis_verts[new_posi_i].push(vert_i);\r\n        }\r\n    }\r\n    /**\r\n     * Unweld the vertices\r\n     * TODO copy attributes onto new positions?\r\n     * @param verts_i\r\n     */\r\n    public unweldVerts(verts_i: number[]): number[] {\r\n        // create a map, for each posi_i, count how many verts there are in the input verts\r\n        const exist_posis_i_map: Map<number, number> = new Map(); // posi_i -> count\r\n        for (const vert_i of verts_i) {\r\n            const posi_i: number = this._geom.query.navVertToPosi(vert_i);\r\n            if (!exist_posis_i_map.has(posi_i)) {\r\n                exist_posis_i_map.set(posi_i, 0);\r\n            }\r\n            const vert_count: number = exist_posis_i_map.get(posi_i);\r\n            exist_posis_i_map.set(posi_i, vert_count + 1);\r\n        }\r\n        // copy positions on the perimeter and make a map\r\n        const old_to_new_posis_i_map: Map<number, number> = new Map();\r\n        exist_posis_i_map.forEach( (vert_count, old_posi_i) => {\r\n            const all_old_verts_i: number[] = this._geom.query.navPosiToVert(old_posi_i);\r\n            const all_vert_count: number = all_old_verts_i.length;\r\n            if (vert_count !== all_vert_count) {\r\n                if (!old_to_new_posis_i_map.has(old_posi_i)) {\r\n                    const new_posi_i: number = this._geom.add.copyPosis(old_posi_i, true) as number;\r\n                    old_to_new_posis_i_map.set(old_posi_i, new_posi_i);\r\n                }\r\n            }\r\n        });\r\n        // now go through the geom again and rewire to the new posis\r\n        for (const vert_i of verts_i) {\r\n            const old_posi_i: number = this._geom.query.navVertToPosi(vert_i);\r\n            if (old_to_new_posis_i_map.has(old_posi_i)) {\r\n                const new_posi_i: number = old_to_new_posis_i_map.get(old_posi_i);\r\n                // update the down arrays\r\n                this._geom_arrays.dn_verts_posis[vert_i] = new_posi_i;\r\n                // update the up arrays for the old posi, i.e. remove this vert\r\n                arrRem(this._geom_arrays.up_posis_verts[old_posi_i], vert_i);\r\n                // update the up arrays for the new posi, i.e. add this vert\r\n                this._geom_arrays.up_posis_verts[new_posi_i].push(vert_i);\r\n            }\r\n        }\r\n        // return all the new positions\r\n        return Array.from(old_to_new_posis_i_map.values());\r\n    }\r\n    /**\r\n     * Reverse the edges of a wire.\r\n     * This lists the edges in reverse order, and flips each edge.\r\n     * The attributes ... TODO\r\n     */\r\n    public reverse(wire_i: number): void {\r\n        const wire: TWire = this._geom_arrays.dn_wires_edges[wire_i];\r\n        wire.reverse();\r\n        // reverse the edges\r\n        for (const edge_i of wire) {\r\n            const edge: TEdge = this._geom_arrays.dn_edges_verts[edge_i];\r\n            edge.reverse();\r\n        }\r\n        // if this is a face, reverse the triangles\r\n        if (this._geom_arrays.up_wires_faces[wire_i] !== undefined) {\r\n            const face_i: number = this._geom_arrays.up_wires_faces[wire_i];\r\n            const face: TFace = this._geom_arrays.dn_faces_wirestris[face_i];\r\n            for (const tri_i of face[1]) {\r\n                const tri: TTri = this._geom_arrays.dn_tris_verts[tri_i];\r\n                tri.reverse();\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Shifts the edges of a wire.\r\n     * The attributes ... TODO\r\n     */\r\n    public shift(wire_i: number, offset: number): void {\r\n        const wire: TWire = this._geom_arrays.dn_wires_edges[wire_i];\r\n        wire.unshift.apply( wire, wire.splice( offset, wire.length ) );\r\n    }\r\n    // ============================================================================\r\n    // Private methods\r\n    // ============================================================================\r\n    /**\r\n     * Adds a hole to a face and updates the arrays.\r\n     * Wires are assumed to be closed!\r\n     * This also calls addTris()\r\n     * @param wire_i\r\n     */\r\n    private _cutFaceHoles(face_i: number, hole_wires_i: number[]): number {\r\n        // get the wires and triangles arrays\r\n        const [face_wires_i, old_face_tris_i]: [number[], number[]] = this._geom_arrays.dn_faces_wirestris[face_i];\r\n        // get the outer wire\r\n        const outer_wire_i: number = face_wires_i[0];\r\n        // get the hole wires\r\n        const all_hole_wires_i: number[] = [];\r\n        if (face_wires_i.length > 1) {\r\n            face_wires_i.slice(1).forEach(wire_i => all_hole_wires_i.push(wire_i));\r\n        }\r\n        hole_wires_i.forEach(wire_i => all_hole_wires_i.push(wire_i));\r\n        // create the triangles\r\n        const new_tris_i: number[] = this._geom.add._addTris(outer_wire_i, all_hole_wires_i);\r\n        // create the face\r\n        const new_wires_i: number[] = face_wires_i.concat(hole_wires_i);\r\n        const new_face: TFace = [new_wires_i, new_tris_i];\r\n        // update down arrays\r\n        this._geom_arrays.dn_faces_wirestris[face_i] = new_face;\r\n        // update up arrays\r\n        hole_wires_i.forEach(hole_wire_i => this._geom_arrays.up_wires_faces[hole_wire_i] = face_i);\r\n        new_tris_i.forEach( tri_i => this._geom_arrays.up_tris_faces[tri_i] = face_i );\r\n        // delete the old trianges\r\n        for (const old_face_tri_i of old_face_tris_i) {\r\n            // remove these deleted tris from the verts\r\n            for (const vertex_i of this._geom_arrays.dn_tris_verts[old_face_tri_i]) {\r\n                const tris_i: number[] = this._geom_arrays.up_verts_tris[vertex_i];\r\n                arrRem(tris_i, old_face_tri_i);\r\n            }\r\n            // tris to verts\r\n            this._geom_arrays.dn_tris_verts[old_face_tri_i] = null;\r\n            // tris to faces\r\n            delete this._geom_arrays.up_tris_faces[old_face_tri_i];\r\n        }\r\n        // TODO deal with the old triangles, stored in face_tris_i\r\n        // TODO These are still there and are still pointing up at this face\r\n        // TODO the have to be deleted...\r\n\r\n        // return the numeric index of the face\r\n        return face_i;\r\n    }\r\n    // ============================================================================\r\n    // Private methods to delete topo\r\n    // ============================================================================\r\n    /**\r\n     * Deletes a vert.\r\n     *\r\n     * In the general case, the two edges adjacent to the deleted vert will be merged.\r\n     * This means that the next edge will be deleted.\r\n     * The end vert of the previous edge will connect to the end posi of the next edge.\r\n     *\r\n     * The first special case is if the vert is for a point. In that case, just delete the point.\r\n     *\r\n     * Then there are two special cases for whicj we delete the whole object\r\n     *\r\n     * 1) If the wire is open and has only 1 edge, then delete the wire\r\n     * 2) if the wire is closed pgon and has only 3 edges, then:\r\n     *    a) If the wire is the boundary of the pgon, then delete the whole pgon\r\n     *    b) If the wire is a hole in the pgon, then delete the hole\r\n     *\r\n     * Assuming the special cases above do not apply,\r\n     * then there are two more special cases for open wires\r\n     *\r\n     * 1) If the vert is at the start of an open wire, then delete the first edge\r\n     * 2) If teh vert is at the end of an open wire, then delete the last edge\r\n     *\r\n     * Finally, we come to the standard case.\r\n     * The next edge is deleted, and the prev edge gets rewired.\r\n     *\r\n     * @param vert_i\r\n     */\r\n    private _delVert(vert_i: number): void {\r\n        // check, has it already been deleted\r\n        if (this._geom_arrays.dn_verts_posis[vert_i] === null) { return; }\r\n        // check, is this a point, then delete the point and vertex\r\n        const point_i: number = this._geom_arrays.up_verts_points[vert_i];\r\n        if (point_i !== undefined && point_i !== null) {\r\n            this.delPoints(point_i, false);\r\n            return;\r\n        }\r\n        // get the posis, edges, and wires, and other info\r\n        const edges_i: number[] = this._geom_arrays.up_verts_edges[vert_i];\r\n        const wire_i: number = this._geom_arrays.up_edges_wires[edges_i[0]];\r\n        const face_i: number = this._geom_arrays.up_wires_faces[wire_i]; // this may be undefined\r\n        const wire_edges_i: number[] = this._geom_arrays.dn_wires_edges[wire_i];\r\n        const wire_verts_i: number[] = this._geom.query.navAnyToVert(EEntType.WIRE, wire_i);\r\n        const wire_is_closed: boolean = this._geom.query.istWireClosed(wire_i);\r\n        const index_vert_i: number = wire_verts_i.indexOf(vert_i);\r\n        const num_verts: number = wire_verts_i.length;\r\n\r\n        // update the edges and wires\r\n        if (!wire_is_closed && num_verts === 2) {\r\n\r\n            // special case, open pline with 2 verts\r\n            this.__delVert__OpenPline1Edge(wire_i);\r\n\r\n        } else if (face_i !== undefined && face_i !== null && num_verts === 3) {\r\n\r\n            // special case, pgon with three verts\r\n            const wires_i: number[] = this._geom_arrays.dn_faces_wirestris[face_i][0];\r\n            const index_face_wire: number = wires_i.indexOf(wire_i);\r\n            if (index_face_wire === 0) {\r\n\r\n                // special case, pgon boundary with verts, delete the pgon\r\n                this.__delVert__PgonBoundaryWire3Edge(face_i);\r\n\r\n            } else {\r\n\r\n                // special case, pgon hole with verts, delete the hole\r\n                this.__delVert__PgonHoleWire3Edge(face_i, wire_i);\r\n\r\n            }\r\n        } else if (!wire_is_closed && index_vert_i === 0) {\r\n\r\n            // special case, open pline, delete start edge and vert\r\n            this.__delVert__OpenPlineStart(wire_edges_i, wire_verts_i, vert_i);\r\n\r\n        } else if (!wire_is_closed && index_vert_i === num_verts - 1) {\r\n\r\n            // special case, open pline, delete end edge and vert\r\n            this.__delVert__OpenPlineEnd(wire_edges_i, wire_verts_i, vert_i);\r\n\r\n        } else {\r\n\r\n            // standard case, delete the prev edge and reqire the next edge\r\n            this.__delVert__StandardCase(wire_edges_i, vert_i, index_vert_i === 0);\r\n\r\n            if (face_i !== undefined) {\r\n\r\n                // for pgons, also update tris\r\n                this._updateFaceTris(face_i);\r\n\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Special case, delete the pline\r\n     * @param wire_i\r\n     */\r\n    private __delVert__OpenPline1Edge(wire_i: number) {\r\n        const pline_i: number = this._geom_arrays.up_wires_plines[wire_i];\r\n        this.delPlines(pline_i, false);\r\n    }\r\n    /**\r\n     * Special case, delete either the pgon\r\n     * @param face_i\r\n     */\r\n    private __delVert__PgonBoundaryWire3Edge(face_i: number) {\r\n        const pgon_i: number = this._geom_arrays.up_faces_pgons[face_i];\r\n        this.delPgons(pgon_i, false);\r\n    }\r\n    /**\r\n     * Special case, delete either the hole\r\n     * @param vert_i\r\n     */\r\n    private __delVert__PgonHoleWire3Edge(face_i: number, wire_i: number) {\r\n    }\r\n    /**\r\n     * Special case, delete the first edge\r\n     * @param vert_i\r\n     */\r\n    private __delVert__OpenPlineStart(wire_edges_i: number[], wire_verts_i: number[], vert_i: number) {\r\n        const posi_i: number = this._geom_arrays.dn_verts_posis[vert_i];\r\n        // vert_i is at the star of an open wire, we have one edge\r\n        const start_edge_i: number = wire_edges_i[0];\r\n        // delete the first edge\r\n        this._geom_arrays.dn_edges_verts[start_edge_i] = null;\r\n        delete this._geom_arrays.up_edges_wires[start_edge_i];\r\n        this._geom.model.attribs.add.delEntFromAttribs(EEntType.EDGE, start_edge_i);\r\n        // update the second vert\r\n        const second_vert_i: number = wire_verts_i[1];\r\n        arrRem(this._geom_arrays.up_verts_edges[second_vert_i], start_edge_i);\r\n        // update the wire\r\n        arrRem(wire_edges_i, start_edge_i);\r\n        // delete the vert\r\n        this._geom_arrays.dn_verts_posis[vert_i] = null;\r\n        delete this._geom_arrays.up_verts_edges[vert_i];\r\n        this._geom.model.attribs.add.delEntFromAttribs(EEntType.VERT, vert_i);\r\n        // update the posis\r\n        arrRem(this._geom_arrays.up_posis_verts[posi_i], vert_i);\r\n    }\r\n    /**\r\n     * Special case, delete the last edge\r\n     * @param vert_i\r\n     */\r\n    private __delVert__OpenPlineEnd(wire_edges_i: number[], wire_verts_i: number[], vert_i: number) {\r\n        const posi_i: number = this._geom_arrays.dn_verts_posis[vert_i];\r\n        // vert_i is at the end of an open wire, we have one edge\r\n        const end_edge_i: number = wire_edges_i[wire_edges_i.length - 1];\r\n        // delete the last edge\r\n        this._geom_arrays.dn_edges_verts[end_edge_i] = null;\r\n        delete this._geom_arrays.up_edges_wires[end_edge_i];\r\n        this._geom.model.attribs.add.delEntFromAttribs(EEntType.EDGE, end_edge_i);\r\n        // update the one before last vert\r\n        const before_last_vert_i: number = wire_verts_i[wire_verts_i.length - 2];\r\n        arrRem(this._geom_arrays.up_verts_edges[before_last_vert_i], end_edge_i);\r\n        // update the wire\r\n        arrRem(wire_edges_i, end_edge_i);\r\n        // delete the vert\r\n        this._geom_arrays.dn_verts_posis[vert_i] = null;\r\n        delete this._geom_arrays.up_verts_edges[vert_i];\r\n        this._geom.model.attribs.add.delEntFromAttribs(EEntType.VERT, vert_i);\r\n        // update the posis\r\n        arrRem(this._geom_arrays.up_posis_verts[posi_i], vert_i);\r\n    }\r\n    /**\r\n     * Final case, delete the next edge, reqire the previous edge\r\n     * For pgons, this does not update the tris\r\n     * @param vert_i\r\n     */\r\n    private __delVert__StandardCase(wire_edges_i: number[], vert_i: number, is_first: boolean) {\r\n        const posi_i: number = this._geom_arrays.dn_verts_posis[vert_i];\r\n        // vert_i is in the middle of a wire, we must have two edges\r\n        const edges_i: number[] = this._geom_arrays.up_verts_edges[vert_i];\r\n        const prev_edge_i: number = is_first ? edges_i[1] : edges_i[0];\r\n        const next_edge_i: number = is_first ? edges_i[0] : edges_i[1];\r\n        // get the verts of the two edges\r\n        const prev_edge_verts_i: number[] = this._geom_arrays.dn_edges_verts[prev_edge_i];\r\n        const next_edge_verts_i: number[] = this._geom_arrays.dn_edges_verts[next_edge_i];\r\n        const prev_vert_i: number = prev_edge_verts_i[0];\r\n        const next_vert_i: number = next_edge_verts_i[1];\r\n        // run some checks, TODO this can be removed later\r\n        if (prev_vert_i === vert_i) { throw new Error('Unexpected vertex ordering 1'); }\r\n        if (next_vert_i === vert_i) { throw new Error('Unexpected vertex ordering 2'); }\r\n        if (prev_edge_verts_i[1] !== next_edge_verts_i[0]) { throw new Error('Unexpected vertex ordering 3'); }\r\n        if (prev_edge_verts_i[1] !== vert_i) { throw new Error('Unexpected vertex ordering 4'); }\r\n        // rewire the end vert of the previous edge to the end vert of the next edge\r\n        prev_edge_verts_i[1] = next_vert_i;\r\n        this._geom_arrays.up_verts_edges[next_vert_i][0] = prev_edge_i;\r\n        // delete the next edge\r\n        this._geom_arrays.dn_edges_verts[next_edge_i] = null;\r\n        delete this._geom_arrays.up_edges_wires[next_edge_i];\r\n        this._geom.model.attribs.add.delEntFromAttribs(EEntType.EDGE, next_edge_i);\r\n        // update the wire\r\n        arrRem(wire_edges_i, next_edge_i);\r\n        // delete the vert\r\n        this._geom_arrays.dn_verts_posis[vert_i] = null;\r\n        delete this._geom_arrays.up_verts_edges[vert_i];\r\n        this._geom.model.attribs.add.delEntFromAttribs(EEntType.VERT, vert_i);\r\n        // update the posis\r\n        arrRem(this._geom_arrays.up_posis_verts[posi_i], vert_i);\r\n    }\r\n    /**\r\n     * Updates the tris in a face\r\n     * @param face_i\r\n     */\r\n    private _updateFaceTris(face_i: number) {\r\n        // get the wires\r\n        const border_wire_i: number = this._geom_arrays.dn_faces_wirestris[face_i][0][0];\r\n        // get the border and holes\r\n        const holes_wires_i: number[] = [];\r\n        const num_holes: number = this._geom_arrays.dn_faces_wirestris[face_i][0].length - 1;\r\n        if (num_holes > 1) {\r\n            for (let i = 1; i < num_holes + 1; i++) {\r\n                const hole_wire_i: number = this._geom_arrays.dn_faces_wirestris[face_i][0][i];\r\n                holes_wires_i.push(hole_wire_i);\r\n            }\r\n        }\r\n        const tris_i: number[] = this._geom.add._addTris(border_wire_i, holes_wires_i);\r\n        // delete the old tris\r\n        for (const tri_i of this._geom_arrays.dn_faces_wirestris[face_i][1]) {\r\n            // update the verts\r\n            const verts_i: number[] = this._geom_arrays.dn_tris_verts[tri_i];\r\n            for (const vert_i of verts_i) {\r\n                delete this._geom_arrays.up_verts_tris[vert_i]; // up\r\n            }\r\n            // delete the tri\r\n            this._geom_arrays.dn_tris_verts[tri_i] = null;\r\n            delete this._geom_arrays.up_tris_faces[tri_i]; // up\r\n        }\r\n        // update down arrays\r\n        this._geom_arrays.dn_faces_wirestris[face_i][1] = tris_i;\r\n        // update up arrays\r\n        for (const tri_i of tris_i) {\r\n            this._geom_arrays.up_tris_faces[tri_i] = face_i;\r\n        }\r\n    }\r\n}\r\n","\r\nimport {  EEntType, IGeomArrays, EEntStrToGeomArray, TWire, Txyz } from './common';\r\nimport { isPosi, isVert, isPoint, isEdge, isWire, isPline, isFace, isPgon, isColl, isTri } from './id';\r\nimport { GIGeom } from './GIGeom';\r\nimport { vecFromTo, vecCross, vecDiv } from '../geom/vectors';\r\n/**\r\n * Class for geometry.\r\n */\r\nexport class GIGeomQuery {\r\n    private _geom: GIGeom;\r\n    private _geom_arrays: IGeomArrays;\r\n    /**\r\n     * Creates an object to store the geometry data.\r\n     * @param geom_data The JSON data\r\n     */\r\n    constructor(geom: GIGeom, geom_arrays: IGeomArrays) {\r\n        this._geom = geom;\r\n        this._geom_arrays = geom_arrays;\r\n    }\r\n    // ============================================================================\r\n    // Get entity indices, and num ents\r\n    // ============================================================================\r\n    /**\r\n     * Returns a list of indices for all, including ents that are null\r\n     * @param ent_type\r\n     */\r\n    public getEnts(ent_type: EEntType, include_deleted: boolean): number[] {\r\n        // get posis indices array from up array: up_posis_verts\r\n        if (isPosi(ent_type)) {\r\n            const posis: number[][] = this._geom_arrays.up_posis_verts;\r\n            const posis_i: number[] = [];\r\n            if (include_deleted) {\r\n                for (let i = 0; i < posis.length; i++ ) {\r\n                    const posi = posis[i];\r\n                    if (posi !== null) {\r\n                        posis_i.push(i);\r\n                    } else {\r\n                        posis_i.push(null); // TODO\r\n                    }\r\n                }\r\n            } else {\r\n                for (let i = 0; i < posis.length; i++ ) {\r\n                    const posi = posis[i];\r\n                    if (posi !== null) {\r\n                        posis_i.push(i);\r\n                    }\r\n                }\r\n            }\r\n            return posis_i;\r\n        }\r\n        // get ents indices array from down arrays\r\n        const geom_array_key: string = EEntStrToGeomArray[ent_type];\r\n        const geom_array: any[] = this._geom_arrays[geom_array_key];\r\n        const ents_i: number[] = [];\r\n        if (include_deleted) {\r\n            for (let i = 0; i < geom_array.length; i++ ) {\r\n                const ent = geom_array[i];\r\n                if (ent !== null) {\r\n                    ents_i.push(i);\r\n                } else {\r\n                    ents_i.push(null); // TODO\r\n                }\r\n            }\r\n        } else {\r\n            for (let i = 0; i < geom_array.length; i++ ) {\r\n                const ent = geom_array[i];\r\n                if (ent !== null) {\r\n                    ents_i.push(i);\r\n                }\r\n            }\r\n        }\r\n        return ents_i;\r\n    }\r\n    /**\r\n     * Returns the number of entities\r\n     * @param ent_type\r\n     */\r\n    public numEnts(ent_type: EEntType, include_deleted: boolean): number {\r\n        return this.getEnts(ent_type, include_deleted).length;\r\n    }\r\n    /**\r\n     * Returns a list of indices for all posis that have no verts\r\n     * @param ent_type\r\n     */\r\n    public getUnusedPosis(include_deleted: boolean): number[] {\r\n        // get posis indices array from up array: up_posis_verts\r\n        const posis: number[][] = this._geom_arrays.up_posis_verts;\r\n        const posis_i: number[] = [];\r\n        if (include_deleted) {\r\n            for (let i = 0; i < posis.length; i++ ) {\r\n                const posi = posis[i];\r\n                if (posi !== null) {\r\n                    if (posi.length === 0) { posis_i.push(i); }\r\n                } else {\r\n                    posis_i.push(null);\r\n                }\r\n            }\r\n        } else {\r\n            for (let i = 0; i < posis.length; i++ ) {\r\n                const posi = posis[i];\r\n                if (posi !== null) {\r\n                    if (posi.length === 0) { posis_i.push(i); }\r\n                }\r\n            }\r\n        }\r\n        return posis_i;\r\n    }\r\n    // ============================================================================\r\n    // Util\r\n    // ============================================================================\r\n    /**\r\n     * Check if an entity exists\r\n     * @param ent_type\r\n     * @param index\r\n     */\r\n    public entExists(ent_type: EEntType, index: number): boolean {\r\n        const geom_arrays_key: string = EEntStrToGeomArray[ent_type];\r\n        return (this._geom_arrays[geom_arrays_key][index] !== undefined);\r\n    }\r\n    /**\r\n     * Check if a wire is closed.\r\n     * @param wire_i\r\n     */\r\n    public istWireClosed(wire_i: number): boolean {\r\n        // get the wire start and end verts\r\n        const wire: TWire = this._geom_arrays.dn_wires_edges[wire_i];\r\n        const num_edges: number = wire.length;\r\n        const start_edge_i: number = wire[0];\r\n        const end_edge_i: number = wire[num_edges - 1];\r\n        const start_vert_i: number = this._geom.query.navEdgeToVert(start_edge_i)[0];\r\n        const end_vert_i: number = this._geom.query.navEdgeToVert(end_edge_i)[1];\r\n        // if start and end verts are the same, then wire is closed\r\n        return (start_vert_i === end_vert_i);\r\n    }\r\n    /**\r\n     * Returns the vertices.\r\n     * For a closed wire, #vertices = #edges\r\n     * For an open wire, #vertices = #edges + 1\r\n     * @param wire_i\r\n     */\r\n    private getWireVerts(wire_i: number): number[] {\r\n        const edges_i: number[] = this._geom_arrays.dn_wires_edges[wire_i];\r\n        const verts_i: number[] = edges_i.map(edge_i => this._geom_arrays.dn_edges_verts[edge_i][0]);\r\n        // if wire is open, then add final vertex\r\n        if (this._geom_arrays.dn_edges_verts[edges_i[0]][0] !== this._geom_arrays.dn_edges_verts[edges_i[edges_i.length - 1]][1]) {\r\n            verts_i.push(this._geom_arrays.dn_edges_verts[edges_i[edges_i.length - 1]][1]);\r\n        }\r\n        return verts_i;\r\n    }\r\n    /**\r\n     * Get the parent of a collection.\r\n     * @param coll_i\r\n     */\r\n    public getCollParent(coll_i: number): number {\r\n        return this._geom_arrays.dn_colls_objs[coll_i][0];\r\n    }\r\n    /**\r\n     *\r\n     * @param face_i\r\n     */\r\n    public getFaceBoundary(face_i: number): number {\r\n        const wires_i: number[] = this._geom_arrays.dn_faces_wirestris[face_i][0];\r\n        return wires_i[0];\r\n    }\r\n    /**\r\n     *\r\n     * @param face_i\r\n     */\r\n    public getFaceHoles(face_i: number): number[] {\r\n        const wires_i: number[] = this._geom_arrays.dn_faces_wirestris[face_i][0];\r\n        return wires_i.slice(1);\r\n    }\r\n    /**\r\n     *\r\n     * @param ent_i\r\n     */\r\n    public getCentroid(ent_type: EEntType, ent_i: number): Txyz {\r\n        const posis_i: number[] = this.navAnyToPosi(ent_type, ent_i);\r\n        const centroid: Txyz = [0, 0, 0];\r\n        for (const posi_i of posis_i) {\r\n            const xyz: Txyz = this._geom.model.attribs.query.getPosiCoords(posi_i);\r\n            centroid[0] += xyz[0];\r\n            centroid[1] += xyz[1];\r\n            centroid[2] += xyz[2];\r\n        }\r\n        return vecDiv(centroid, posis_i.length);\r\n    }\r\n    /**\r\n     *\r\n     * @param face_i\r\n     */\r\n    public getFaceNormal(face_i: number): Txyz {\r\n        const normal: Txyz = [0, 0, 0];\r\n        const tris_i: number[] = this._geom._geom_arrays.dn_faces_wirestris[face_i][1];\r\n        let count = 0;\r\n        for (const tri_i of tris_i) {\r\n            const posis_i: number[] = this._geom_arrays.dn_tris_verts[tri_i].map(vert_i => this._geom_arrays.dn_verts_posis[vert_i]);\r\n            const xyzs: Txyz[] = posis_i.map(posi_i => this._geom.model.attribs.query.getPosiCoords(posi_i));\r\n            const vec_a: Txyz = vecFromTo(xyzs[0], xyzs[1]);\r\n            const vec_b: Txyz = vecFromTo(xyzs[0], xyzs[2]); // CCW\r\n            const tri_normal: Txyz = vecCross(vec_a, vec_b, true);\r\n            if (!(tri_normal[0] === 0 && tri_normal[1] === 0 && tri_normal[2] === 0)) {\r\n                count += 1;\r\n                normal[0] += tri_normal[0];\r\n                normal[1] += tri_normal[1];\r\n                normal[2] += tri_normal[2];\r\n            }\r\n        }\r\n        if (count === 0) { return [0, 0, 0]; }\r\n        return vecDiv(normal, count);\r\n    }\r\n    /**\r\n     *\r\n     * @param wire_i\r\n     */\r\n    public getWireNormal(wire_i: number): Txyz {\r\n        const centroid: Txyz = this.getCentroid(EEntType.WIRE, wire_i);\r\n        const edges_i: number[] = this._geom._geom_arrays.dn_wires_edges[wire_i];\r\n        const normal: Txyz = [0, 0, 0];\r\n        let count = 0;\r\n        for (const edge_i of edges_i) {\r\n            const posis_i: number[] = this._geom_arrays.dn_edges_verts[edge_i].map(vert_i => this._geom_arrays.dn_verts_posis[vert_i]);\r\n            const xyzs: Txyz[] = posis_i.map(posi_i => this._geom.model.attribs.query.getPosiCoords(posi_i));\r\n            const vec_a: Txyz = vecFromTo(centroid, xyzs[0]);\r\n            const vec_b: Txyz = vecFromTo(centroid, xyzs[1]); // CCW\r\n            const tri_normal: Txyz = vecCross(vec_a, vec_b, true);\r\n            if (!(tri_normal[0] === 0 && tri_normal[1] === 0 && tri_normal[2] === 0)) {\r\n                count += 1;\r\n                normal[0] += tri_normal[0];\r\n                normal[1] += tri_normal[1];\r\n                normal[2] += tri_normal[2];\r\n            }\r\n        }\r\n        if (count === 0) { return [0, 0, 0]; }\r\n        return vecDiv(normal, count);\r\n    }\r\n    // ============================================================================\r\n    // Navigate down the hierarchy\r\n    // ============================================================================\r\n    public navVertToPosi(vert_i: number): number {\r\n        return this._geom_arrays.dn_verts_posis[vert_i];\r\n    }\r\n    public navTriToVert(tri_i: number): number[] {\r\n        return this._geom_arrays.dn_tris_verts[tri_i];\r\n    }\r\n    public navEdgeToVert(edge_i: number): number[] {\r\n        return this._geom_arrays.dn_edges_verts[edge_i];\r\n    }\r\n    public navWireToEdge(wire_i: number): number[] {\r\n        return this._geom_arrays.dn_wires_edges[wire_i];\r\n    }\r\n    public navFaceToWire(face_i: number): number[] {\r\n        return this._geom_arrays.dn_faces_wirestris[face_i][0];\r\n    }\r\n    public navFaceToTri(face_i: number): number[] {\r\n        return this._geom_arrays.dn_faces_wirestris[face_i][1];\r\n    }\r\n    public navPointToVert(point_i: number): number {\r\n        return this._geom_arrays.dn_points_verts[point_i];\r\n    }\r\n    public navPlineToWire(line_i: number): number {\r\n        return this._geom_arrays.dn_plines_wires[line_i];\r\n    }\r\n    public navPgonToFace(pgon_i: number): number {\r\n        return this._geom_arrays.dn_pgons_faces[pgon_i];\r\n    }\r\n    public navCollToPoint(coll_i: number): number[] {\r\n        return this._geom_arrays.dn_colls_objs[coll_i][1]; // coll points\r\n    }\r\n    public navCollToPline(coll_i: number): number[] {\r\n        return this._geom_arrays.dn_colls_objs[coll_i][2]; // coll lines\r\n    }\r\n    public navCollToPgon(coll_i: number): number[] {\r\n        return this._geom_arrays.dn_colls_objs[coll_i][3]; // coll pgons\r\n    }\r\n    public navCollToColl(coll_i: number): number {\r\n        return coll_i[0]; // coll parent\r\n    }\r\n    // ============================================================================\r\n    // Navigate up the hierarchy\r\n    // ============================================================================\r\n    public navPosiToVert(posi_i: number): number[] {\r\n        return this._geom_arrays.up_posis_verts[posi_i];\r\n    }\r\n    public navVertToTri(vert_i: number): number[] {\r\n        return this._geom_arrays.up_verts_tris[vert_i];\r\n    }\r\n    public navVertToEdge(vert_i: number): number[] {\r\n        return this._geom_arrays.up_verts_edges[vert_i];\r\n    }\r\n    public navTriToFace(tri_i: number): number {\r\n        return this._geom_arrays.up_tris_faces[tri_i];\r\n    }\r\n    public navEdgeToWire(edge_i: number): number {\r\n        return this._geom_arrays.up_edges_wires[edge_i];\r\n    }\r\n    public navWireToFace(wire_i: number): number {\r\n        return this._geom_arrays.up_wires_faces[wire_i];\r\n    }\r\n    public navVertToPoint(vert_i: number): number {\r\n        return this._geom_arrays.up_verts_points[vert_i];\r\n    }\r\n    public navWireToPline(wire_i: number): number {\r\n        return this._geom_arrays.up_wires_plines[wire_i];\r\n    }\r\n    public navFaceToPgon(face: number): number {\r\n        return this._geom_arrays.up_faces_pgons[face];\r\n    }\r\n    public navPointToColl(point_i: number): number[] {\r\n        return this._geom_arrays.up_points_colls[point_i];\r\n    }\r\n    public navPlineToColl(line_i: number): number[] {\r\n        return this._geom_arrays.up_plines_colls[line_i];\r\n    }\r\n    public navPgonToColl(pgon_i: number): number[] {\r\n        return this._geom_arrays.up_pgons_colls[pgon_i];\r\n    }\r\n    // ============================================================================\r\n    // Navigate from any level to ? (up or down)\r\n    // ============================================================================\r\n    /**\r\n     * Navigate from any level to the colls\r\n     * @param ent_type\r\n     * @param index\r\n     */\r\n    public navAnyToColl(ent_type: EEntType, index: number): number[] {\r\n        if (isColl(ent_type)) { return [index]; }\r\n        const points_i: number[] = this.navAnyToPoint(ent_type, index);\r\n        const colls1_i: number[] = [].concat(...points_i.map(point_i => this.navPointToColl(point_i)));\r\n        const plines_i: number[] = this.navAnyToPline(ent_type, index);\r\n        const colls2_i: number[] = [].concat(...plines_i.map(pline_i => this.navPlineToColl(pline_i)));\r\n        const pgons_i: number[] = this.navAnyToPgon(ent_type, index);\r\n        const colls3_i: number[] = [].concat(...pgons_i.map(pgon_i => this.navPgonToColl(pgon_i)));\r\n        return Array.from(new Set([...colls1_i, ...colls2_i, ...colls3_i])).filter(coll_i => coll_i !== undefined); // remove duplicates\r\n    }\r\n    /**\r\n     * Navigate from any level to the pgons\r\n     * @param ent_type\r\n     * @param index\r\n     */\r\n    public navAnyToPgon(ent_type: EEntType, index: number): number[] {\r\n        if (isPgon(ent_type)) { return [index]; }\r\n        const faces_i: number[] = this.navAnyToFace(ent_type, index);\r\n        return faces_i.map( face_i => this.navFaceToPgon(face_i) ).filter(pgon_i => pgon_i !== undefined);\r\n    }\r\n    /**\r\n     * Navigate from any level to the plines\r\n     * @param ent_type\r\n     * @param index\r\n     */\r\n    public navAnyToPline(ent_type: EEntType, index: number): number[] {\r\n        if (isPline(ent_type)) { return [index]; }\r\n        const wires_i: number[] = this.navAnyToWire(ent_type, index);\r\n        return wires_i.map( wire_i => this.navWireToPline(wire_i) ).filter(pline_i => pline_i !== undefined);\r\n    }\r\n    /**\r\n     * Navigate from any level to the points\r\n     * @param ent_type\r\n     * @param index\r\n     */\r\n    public navAnyToPoint(ent_type: EEntType, index: number): number[] {\r\n        if (isPoint(ent_type)) { return [index]; }\r\n        const verts_i: number[] = this.navAnyToVert(ent_type, index);\r\n        return verts_i.map( vert_i => this.navVertToPoint(vert_i) ).filter(point_i => point_i !== undefined);\r\n    }\r\n    /**\r\n     * Navigate from any level to the faces\r\n     * @param ent_type\r\n     * @param index\r\n     */\r\n    public navAnyToFace(ent_type: EEntType, index: number): number[] {\r\n        if (isPosi(ent_type)) {\r\n            const verts_i: number[] = this.navPosiToVert(index);\r\n            return [].concat(...verts_i.map( vert_i => this.navAnyToFace(EEntType.VERT, vert_i) ));\r\n        } else if (isVert(ent_type)) {\r\n            const edges_i: number[] = this.navVertToEdge(index);\r\n            return [].concat(...edges_i.map( edge_i => this.navAnyToFace(EEntType.EDGE, edge_i) ));\r\n        } else if (isTri(ent_type)) {\r\n            return [this.navTriToFace(index)];\r\n        } else if (isEdge(ent_type)) {\r\n            const wire_i: number = this.navEdgeToWire(index);\r\n            return this.navAnyToFace(EEntType.WIRE, wire_i);\r\n        } else if (isWire(ent_type)) {\r\n            return [this.navWireToFace(index)];\r\n        } else if (isFace(ent_type)) { // target\r\n            return [index];\r\n        } else if (isPoint(ent_type)) {\r\n            return [];\r\n        } else if (isPline(ent_type)) {\r\n            return [];\r\n        } else if (isPgon(ent_type)) {\r\n            return [this.navPgonToFace(index)];\r\n        } else if (isColl(ent_type)) {\r\n            const pgons_i: number[] = this.navCollToPgon(index);\r\n            return pgons_i.map(pgon_i => this.navPgonToFace(pgon_i));\r\n        }\r\n        throw new Error('Bad navigation in geometry data structure: ' + ent_type + index);\r\n    }\r\n    /**\r\n     * Navigate from any level to the wires\r\n     * @param ent_type\r\n     * @param index\r\n     */\r\n    public navAnyToWire(ent_type: EEntType, index: number): number[] {\r\n        if (isPosi(ent_type)) {\r\n            const verts_i: number[] = this.navPosiToVert(index);\r\n            return [].concat(...verts_i.map( vert_i => this.navAnyToWire(EEntType.VERT, vert_i) ));\r\n        } else if (isVert(ent_type)) {\r\n            const edges_i: number[] = this.navVertToEdge(index);\r\n            return [].concat(...edges_i.map( edge_i => this.navEdgeToWire(edge_i) ));\r\n        } else if (isTri(ent_type)) {\r\n            return [];\r\n        } else if (isEdge(ent_type)) {\r\n            return [this.navEdgeToWire(index)];\r\n        } else if (isWire(ent_type)) { // target\r\n            return [index];\r\n        } else if (isFace(ent_type)) {\r\n            return this.navFaceToWire(index);\r\n        } else if (isPoint(ent_type)) {\r\n            return [];\r\n        } else if (isPline(ent_type)) {\r\n            return [this.navPlineToWire(index)];\r\n        } else if (isPgon(ent_type)) {\r\n            const face_i: number = this.navPgonToFace(index);\r\n            return this.navFaceToWire(face_i);\r\n        } else if (isColl(ent_type)) {\r\n            const all_wires_i: number[] = [];\r\n            const plines_i: number[] = this.navCollToPline(index);\r\n            for (const pline_i of plines_i) {\r\n                const wire_i: number = this.navPlineToWire(index);\r\n                all_wires_i.push(wire_i);\r\n            }\r\n            const pgons_i: number[] = this.navCollToPgon(index);\r\n            for (const pgon_i of pgons_i) {\r\n                const wires_i: number[] = this.navAnyToWire(EEntType.PGON, pgon_i);\r\n                for (const wire_i of wires_i) {\r\n                    all_wires_i.push(wire_i);\r\n                }\r\n            }\r\n            return all_wires_i;\r\n        }\r\n        throw new Error('Bad navigation in geometry data structure: ' + ent_type + index);\r\n    }\r\n    /**\r\n     * Navigate from any level to the edges\r\n     * @param ent_type\r\n     * @param index\r\n     */\r\n    public navAnyToEdge(ent_type: EEntType, index: number): number[] {\r\n        if (isPosi(ent_type)) {\r\n            const verts_i: number[] = this.navPosiToVert(index);\r\n            return [].concat(...verts_i.map( vert_i => this.navVertToEdge(vert_i) ));\r\n        } else if (isVert(ent_type)) {\r\n            return this.navVertToEdge(index);\r\n        } else if (isTri(ent_type)) {\r\n            return [];\r\n        } else if (isEdge(ent_type)) {\r\n            return [index];\r\n        } else if (isWire(ent_type)) {\r\n            return this.navWireToEdge(index);\r\n        } else if (isFace(ent_type)) {\r\n            const wires_i: number[] = this.navFaceToWire(index);\r\n            return [].concat(...wires_i.map(wire_i => this.navWireToEdge(wire_i)));\r\n        } else if (isPoint(ent_type)) {\r\n            return [];\r\n        } else if (isPline(ent_type)) {\r\n            const wire_i: number = this.navPlineToWire(index);\r\n            return this.navAnyToEdge(EEntType.WIRE, wire_i);\r\n        } else if (isPgon(ent_type)) {\r\n            const face_i: number = this.navPgonToFace(index);\r\n            return this.navAnyToEdge(EEntType.FACE, face_i);\r\n        } else if (isColl(ent_type)) {\r\n            const all_edges_i: number[] = [];\r\n            const plines_i: number[] = this.navCollToPline(index);\r\n            for (const pline_i of plines_i) {\r\n                const edges_i: number[] = this.navAnyToVert(EEntType.PLINE, pline_i);\r\n                for (const edge_i of edges_i) {\r\n                    all_edges_i.push(edge_i);\r\n                }\r\n            }\r\n            const pgons_i: number[] = this.navCollToPgon(index);\r\n            for (const pgon_i of pgons_i) {\r\n                const edges_i: number[] = this.navAnyToVert(EEntType.PGON, pgon_i);\r\n                for (const edge_i of edges_i) {\r\n                    all_edges_i.push(edge_i);\r\n                }\r\n            }\r\n            return all_edges_i;\r\n        }\r\n        throw new Error('Bad navigation in geometry data structure: ' + ent_type + index);\r\n    }\r\n    /**\r\n     * Navigate from any level to the vertices\r\n     * @param ent_type\r\n     * @param index\r\n     */\r\n    public navAnyToVert(ent_type: EEntType, index: number): number[] {\r\n        if (isPosi(ent_type)) {\r\n            return this.navPosiToVert(index);\r\n        } else if (isVert(ent_type)) {\r\n            return [index];\r\n        } else if (isTri(ent_type)) {\r\n            return this.navTriToVert(index);\r\n        } else if (isEdge(ent_type)) {\r\n            return this.navEdgeToVert(index);\r\n        } else if (isWire(ent_type)) {\r\n            return this.getWireVerts(index); // avoids duplicate verts\r\n        } else if (isFace(ent_type)) {\r\n            const wires_i: number[] = this.navFaceToWire(index);\r\n            const verts_i: number[] = [];\r\n            for (const wire_i of wires_i) {\r\n                const wire_verts_i: number [] = this.getWireVerts(wire_i); // avoids duplicate verts\r\n                for (const vert_i of wire_verts_i) { verts_i.push(vert_i); }\r\n            }\r\n            return verts_i;\r\n        } else if (isPoint(ent_type)) {\r\n            return  [this.navPointToVert(index)];\r\n        } else if (isPline(ent_type)) {\r\n            const wire_i: number = this.navPlineToWire(index);\r\n            return this.navAnyToVert(EEntType.WIRE, wire_i);\r\n        } else if (isPgon(ent_type)) {\r\n            const face_i: number = this.navPgonToFace(index);\r\n            return this.navAnyToVert(EEntType.FACE, face_i);\r\n        } else if (isColl(ent_type)) {\r\n            const all_verts_i: number[] = [];\r\n            const points_i: number[] = this.navCollToPoint(index);\r\n            for (const point_i of points_i) {\r\n                const vert_i: number = this.navPointToVert(point_i);\r\n                all_verts_i.push(vert_i);\r\n            }\r\n            const plines_i: number[] = this.navCollToPline(index);\r\n            for (const pline_i of plines_i) {\r\n                const verts_i: number[] = this.navAnyToVert(EEntType.PLINE, pline_i);\r\n                for (const vert_i of verts_i) {\r\n                    all_verts_i.push(vert_i);\r\n                }\r\n            }\r\n            const pgons_i: number[] = this.navCollToPgon(index);\r\n            for (const pgon_i of pgons_i) {\r\n                const verts_i: number[] = this.navAnyToVert(EEntType.PGON, pgon_i);\r\n                for (const vert_i of verts_i) {\r\n                    all_verts_i.push(vert_i);\r\n                }\r\n            }\r\n            return all_verts_i;\r\n        }\r\n        throw new Error('Bad navigation in geometry data structure: ' + ent_type + index);\r\n    }\r\n    /**\r\n     * Navigate from any level to the triangles\r\n     * @param ent_type\r\n     * @param index\r\n     */\r\n    public navAnyToTri(ent_type: EEntType, index: number): number[] {\r\n        if (isPosi(ent_type)) {\r\n            const verts_i: number[] = this.navPosiToVert(index);\r\n            return [].concat(...verts_i.map(vert_i => this.navVertToTri(vert_i)));\r\n        } else if (isVert(ent_type)) {\r\n            return this.navVertToTri(index);\r\n        } else if (isTri(ent_type)) {\r\n            return [index];\r\n        } else if (isEdge(ent_type)) {\r\n            return [];\r\n        } else if (isWire(ent_type)) {\r\n            return [];\r\n        } else if (isFace(ent_type)) {\r\n            return this.navFaceToTri(index);\r\n        } else if (isPoint(ent_type)) {\r\n            return [];\r\n        } else if (isPline(ent_type)) {\r\n            return [];\r\n        } else if (isPgon(ent_type)) {\r\n            const face_i: number = this.navPgonToFace(index);\r\n            return this.navFaceToTri(face_i);\r\n        } else if (isColl(ent_type)) {\r\n            const all_tris_i: number[] = [];\r\n            const pgons_i: number[] = this.navCollToPgon(index);\r\n            for (const pgon_i of pgons_i) {\r\n                const tris_i: number[] = this.navAnyToTri(EEntType.PGON, pgon_i);\r\n                for (const tri_i of tris_i) {\r\n                    all_tris_i.push(tri_i);\r\n                }\r\n            }\r\n            return all_tris_i;\r\n        }\r\n        throw new Error('Bad navigation in geometry data structure: ' + ent_type + index);\r\n    }\r\n    /**\r\n     * Navigate from any level to the positions\r\n     * @param ent_type\r\n     * @param index\r\n     */\r\n    public navAnyToPosi(ent_type: EEntType, index: number): number[] {\r\n        if (isPosi(ent_type)) { return [index]; }\r\n        const verts_i: number[] = this.navAnyToVert(ent_type, index);\r\n        const posis_i: number[] = verts_i.map(vert_i => this.navVertToPosi(vert_i));\r\n        return Array.from(new Set(posis_i)); // remove duplicates\r\n    }\r\n    // ============================================================================\r\n    // Navigate from any to any, general method\r\n    // ============================================================================\r\n    /**\r\n     * Navigate from any level down to the positions\r\n     * @param index\r\n     */\r\n    public navAnyToAny(from_ets: EEntType, to_ets: EEntType, index: number): number[] {\r\n        // same level\r\n        if (from_ets === to_ets) { return [index]; }\r\n        // from -> to\r\n        switch (to_ets) {\r\n            case EEntType.POSI:\r\n                return this.navAnyToPosi(from_ets, index);\r\n            case EEntType.VERT:\r\n                return this.navAnyToVert(from_ets, index);\r\n            case EEntType.EDGE:\r\n                return this.navAnyToEdge(from_ets, index);\r\n            case EEntType.WIRE:\r\n                return this.navAnyToWire(from_ets, index);\r\n            case EEntType.FACE:\r\n                return this.navAnyToFace(from_ets, index);\r\n            case EEntType.POINT:\r\n                return this.navAnyToPoint(from_ets, index);\r\n            case EEntType.PLINE:\r\n                return this.navAnyToPline(from_ets, index);\r\n            case EEntType.PGON:\r\n                return this.navAnyToPgon(from_ets, index);\r\n            case EEntType.COLL:\r\n                return this.navAnyToColl(from_ets, index);\r\n            default:\r\n                throw new Error('Bad navigation in geometry data structure: ' + to_ets + index);\r\n        }\r\n    }\r\n    // ============================================================================\r\n    // Other methods\r\n    // ============================================================================\r\n    /**\r\n     * Get the welded neighbour vertices of a set of vertices.\r\n     * @param ent_type\r\n     * @param index\r\n     */\r\n    public neighbours(from_ets: EEntType, to_ets: EEntType, index: number): number[] {\r\n        const verts_i: number[] = this.navAnyToVert(from_ets, index);\r\n        const posis_i: number[] = this.navAnyToPosi(from_ets, index);\r\n        const neighbour_ents_i: Set<number> = new Set();\r\n        for (const posi_i of posis_i) {\r\n            const found_verts_i: number[] = this.navPosiToVert(posi_i);\r\n            for (const found_vert_i of found_verts_i) {\r\n                if (verts_i.indexOf(found_vert_i) === -1) {\r\n                    const found_ents_i: number[] = this.navAnyToAny(EEntType.VERT, to_ets, found_vert_i);\r\n                    found_ents_i.forEach( found_ent_i => neighbour_ents_i.add(found_ent_i));\r\n                }\r\n            }\r\n        }\r\n        return Array.from(neighbour_ents_i);\r\n    }\r\n\r\n}\r\n","import { GIGeom } from './GIGeom';\r\nimport { IGeomArrays, TTri, TEdge, TPoint } from './common';\r\nimport { GIAttribMap } from './GIAttribMap';\r\nimport * as THREE from 'three';\r\n\r\n/**\r\n * Class for geometry.\r\n */\r\nexport class GIGeomThreejs {\r\n    private _geom: GIGeom;\r\n    private _geom_arrays: IGeomArrays;\r\n    /**\r\n     * Creates an object to store the geometry data.\r\n     * @param geom The GIGeom obect\r\n     * @param geom_arrays The geometry arrays\r\n     */\r\n    constructor(geom: GIGeom, geom_arrays: IGeomArrays) {\r\n        this._geom = geom;\r\n        this._geom_arrays = geom_arrays;\r\n    }\r\n    // ============================================================================\r\n    // ThreeJS\r\n    // Get arrays for threejs, these retrun arrays of indexes to positions\r\n    // For a method to get the array of positions, see the attrib class\r\n    // getSeqCoords()\r\n    // ============================================================================\r\n    /**\r\n     * Returns a flat list of all vertices.\r\n     * The indices in the list point to the sequential coordinates.\r\n     */\r\n    public get3jsVerts(): number[] {\r\n        return this._geom_arrays.dn_verts_posis;\r\n    }\r\n    /**\r\n     * Returns that data required for threejs triangles.\r\n     * 0) the vertices, as a flat array\r\n     * 1) the select map, that maps from the threejs tri indices to the gi model tri indices\r\n     * 2) the materials array, which is an array of objects\r\n     * 3) the material groups array, which is an array of [ start, count, mat_index ]\r\n     */\r\n    public get3jsTris(vertex_map: Map<number, number>): [number[], Map<number, number>, object[], [number, number, number][]] {\r\n        // arrays to store threejs data\r\n        const tri_data_arrs: [number[], TTri, number][] = []; // tri_mat_indices, new_tri_verts_i, tri_i\r\n        const mat_f: object = {\r\n            specular: 0x000000,\r\n            emissive: 0x000000,\r\n            shininess: 0,\r\n            side: THREE.FrontSide\r\n        };\r\n        const mat_b: object = {\r\n            specular: 0x000000,\r\n            emissive: 0x000000,\r\n            shininess: 0,\r\n            side: THREE.BackSide\r\n        };\r\n        const materials: object[] = [this._getMaterial( mat_f ), this._getMaterial( mat_b )];\r\n        const material_names:  string[] = ['default_front', 'default_back'];\r\n        // get the material attribute from polygons\r\n        const material_attrib: GIAttribMap = this._geom.model.attribs._attribs_maps.pg.get('material');\r\n        // loop through all tris\r\n        for (let tri_i = 0; tri_i < this._geom_arrays.dn_tris_verts.length; tri_i++) {\r\n            const tri_verts_i: number[] = this._geom_arrays.dn_tris_verts[tri_i];\r\n            if (tri_verts_i !== null) {\r\n                // get the verts, face and the polygon for this tri\r\n                const new_tri_verts_i: TTri = tri_verts_i.map(v => vertex_map.get(v)) as TTri;\r\n                // get the materials for this tri from the polygon\r\n                const tri_face_i: number = this._geom_arrays.up_tris_faces[tri_i];\r\n                const tri_pgon_i: number = this._geom_arrays.up_faces_pgons[tri_face_i];\r\n                const tri_mat_indices: number[] = [];\r\n                if (material_attrib !== undefined) {\r\n                    const mat_attrib_val: string|string[] = material_attrib.getEntVal(tri_pgon_i) as string|string[];\r\n                    const pgon_mat_names: string[] = (Array.isArray(mat_attrib_val)) ? mat_attrib_val : [mat_attrib_val];\r\n                    for (const pgon_mat_name of pgon_mat_names) {\r\n                        let pgon_mat_index: number = material_names.indexOf(pgon_mat_name);\r\n                        if (pgon_mat_index === -1) {\r\n                            const mat: string = this._geom.model.attribs._attribs_maps.mo.get(pgon_mat_name);\r\n                            if (mat !== undefined) {\r\n                                pgon_mat_index = materials.length;\r\n                                material_names.push(pgon_mat_name);\r\n                                const mat_settings_obj: object = JSON.parse(mat);\r\n                                materials.push(this._getMaterial(mat_settings_obj));\r\n                            }\r\n                        }\r\n                        if (pgon_mat_index !== -1) {\r\n                            tri_mat_indices.push(pgon_mat_index);\r\n                        }\r\n                    }\r\n                }\r\n                if (tri_mat_indices.length === 0) {\r\n                    tri_mat_indices.push(0); // default material front\r\n                    tri_mat_indices.push(1); // default material back\r\n                }\r\n                // add the data to the data_array\r\n                tri_data_arrs.push( [ tri_mat_indices, new_tri_verts_i, tri_i ] );\r\n            }\r\n        }\r\n        // sort that data_array, so that we get triangls sorted according to their materials\r\n        // for each entry in the data_array, the first item is the material indices, so that they are sorted correctly\r\n        tri_data_arrs.sort();\r\n        // loop through the sorted array and create the tris and groups data for threejs\r\n        const tris_verts_i: TTri[] = [];\r\n        const tri_select_map: Map<number, number> = new Map();\r\n        const mat_groups_map: Map<number, [number, number][]> = new Map(); // mat_index -> [start, end][]\r\n        for (const tri_data_arr of tri_data_arrs) {\r\n            // save the tri data\r\n            const tjs_i = tris_verts_i.push(tri_data_arr[1]) - 1;\r\n            tri_select_map.set(tjs_i, tri_data_arr[2]);\r\n            // go through all materials for this tri and add save the mat groups data\r\n            for (const mat_index of tri_data_arr[0]) {\r\n                let start_end_arrs: [number, number][] = mat_groups_map.get(mat_index);\r\n                if (start_end_arrs === undefined) {\r\n                    start_end_arrs = [[tjs_i, tjs_i]];\r\n                    mat_groups_map.set(mat_index, start_end_arrs);\r\n                } else {\r\n                    const start_end: [number, number] = start_end_arrs[start_end_arrs.length - 1];\r\n                    if (tjs_i === start_end[1] + 1) {\r\n                        start_end[1] = tjs_i;\r\n                    } else {\r\n                        start_end_arrs.push([tjs_i, tjs_i]);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        // convert the mat_groups_map into the format required for threejs\r\n        // for each material group, we need an array [start, count, mat_index]\r\n        const material_groups: [number, number, number][] = []; // [start, count, mat_index][]\r\n        mat_groups_map.forEach( (start_end_arrs, mat_index) => {\r\n            for (const start_end of start_end_arrs) {\r\n                const start: number = start_end[0];\r\n                const count: number = start_end[1] - start_end[0] + 1;\r\n                material_groups.push( [ start * 3, count * 3, mat_index ] );\r\n            }\r\n        });\r\n        // convert the verts list to a flat array\r\n        // tslint:disable-next-line:no-unused-expression\r\n        // @ts-ignore\r\n        const tris_verts_i_flat: number[] = tris_verts_i.flat(1);\r\n        // return the data\r\n        // there are four sets of data that are returns\r\n        return [\r\n            tris_verts_i_flat, // 0) the vertices, as a flat array\r\n            tri_select_map,    // 1) the select map, that maps from the threejs tri indices to the gi model tri indices\r\n            materials,         // 2) the materials array, which is an array of objects\r\n            material_groups    // 3) the material groups array, which is an array of [ start, count, mat_index ]\r\n        ];\r\n\r\n        // let gi_i = 0;\r\n        // const l = this._geom_arrays.dn_tris_verts.length;\r\n        // for (; gi_i < l; gi_i++) {\r\n        //     const tri_verts_i: TTri = this._geom_arrays.dn_tris_verts[gi_i];\r\n        //     if (tri_verts_i !== null) {\r\n        //         const new_tri_verts_i: TTri = tri_verts_i.map(v => vertex_map.get(v)) as TTri;\r\n        //         const tjs_i = tris_verts_i_filt.push(new_tri_verts_i) - 1;\r\n        //         tri_select_map.set(tjs_i, gi_i);\r\n        //     }\r\n        // }\r\n        // @ts-ignore\r\n        // return [tris_verts_i.flat(1), tri_select_map];\r\n        // return this._geom_arrays.dn_tris_verts.flat(1);\r\n        // return [].concat(...this._geom_arrays.dn_tris_verts);\r\n    }\r\n    /**\r\n     * Returns a flat list of the sequence of verices for all the edges.\r\n     * This list will be assumed to be in pairs.\r\n     * The indices in the list point to the vertices.\r\n     */\r\n    public get3jsEdges(vertex_map: Map<number, number>): [number[], Map<number, number>] {\r\n        const edges_verts_i_filt: TEdge[] = [];\r\n        const edge_select_map: Map<number, number> = new Map();\r\n        let gi_i = 0;\r\n        const l = this._geom_arrays.dn_edges_verts.length;\r\n        for (; gi_i < l; gi_i++) {\r\n            const edge_verts_i: TEdge = this._geom_arrays.dn_edges_verts[gi_i];\r\n            if (edge_verts_i !== null) {\r\n                const new_edge_verts_i: TEdge = edge_verts_i.map(e => vertex_map.get(e)) as TEdge;\r\n                const tjs_i = edges_verts_i_filt.push(new_edge_verts_i) - 1;\r\n                edge_select_map.set(tjs_i, gi_i);\r\n            }\r\n        }\r\n        // @ts-ignore\r\n        return [edges_verts_i_filt.flat(1), edge_select_map];\r\n\r\n        // @ts-ignore\r\n        // return this._geom_arrays.dn_edges_verts.flat(1);\r\n        // return [].concat(...this._geom_arrays.dn_edges_verts);\r\n    }\r\n    /**\r\n     * Returns a flat list of the sequence of verices for all the points.\r\n     * The indices in the list point to the vertices.\r\n     */\r\n    public get3jsPoints(vertex_map: Map<number, number>): [number[], Map<number, number>] {\r\n        const points_verts_i_filt: TPoint[] = [];\r\n        const point_select_map: Map<number, number> = new Map();\r\n        let gi_i = 0;\r\n        const l = this._geom_arrays.dn_points_verts.length;\r\n        for (; gi_i < l; gi_i++) {\r\n            const point_verts_i: TPoint = this._geom_arrays.dn_points_verts[gi_i];\r\n            if (point_verts_i !== null) {\r\n                const new_point_verts_i: TPoint = vertex_map.get(point_verts_i) as TPoint;\r\n                const tjs_i = points_verts_i_filt.push(new_point_verts_i) - 1;\r\n                point_select_map.set(tjs_i, gi_i);\r\n            }\r\n        }\r\n        return [points_verts_i_filt, point_select_map];\r\n        // return this._geom_arrays.dn_points_verts;\r\n    }\r\n\r\n    /**\r\n     * Create a threejs material\r\n     * @param settings\r\n     */\r\n    private _getMaterial(settings?: object) {\r\n        const material =  {\r\n            type: 'MeshPhongMaterial',\r\n            side: THREE.DoubleSide,\r\n            vertexColors: THREE.VertexColors\r\n        };\r\n        if (settings) {\r\n            for (const key of Object.keys(settings)) {\r\n                material[key] = settings[key];\r\n            }\r\n        }\r\n        return material;\r\n    }\r\n}\r\n","import { GIGeom } from './GIGeom';\r\nimport { GIAttribs } from './GIAttribs';\r\nimport { IModelData, IGeomPack } from './common';\r\nimport { GIModelThreejs } from './GIModelThreejs';\r\n/**\r\n * Geo-info model class.\r\n */\r\nexport class GIModel {\r\n    [x: string]: any; // TODO: What is this???\r\n    public geom: GIGeom;\r\n    public attribs: GIAttribs;\r\n    public threejs: GIModelThreejs;\r\n    /**\r\n     * Creates a model.\r\n     * @param model_data The JSON data\r\n     */\r\n    constructor(model_data?: IModelData) {\r\n        this.geom = new GIGeom(this);\r\n        this.attribs = new GIAttribs(this);\r\n        this.threejs = new GIModelThreejs(this);\r\n        if (model_data) {\r\n            this.addData(model_data);\r\n        }\r\n    }\r\n    /**\r\n     * Copys the data from a second model into this model.\r\n     * The existing data in this model is not deleted.\r\n     * @param model_data The GI model.\r\n     */\r\n    public merge(model: GIModel): void {\r\n        this.attribs.io.merge(model.attribs._attribs_maps); // warning: must be before this.geom.add.addData()\r\n        this.geom.io.merge(model.geom._geom_arrays);\r\n    }\r\n    /**\r\n     * Sets the data in this model from JSON data.\r\n     * Any existing data in the model is deleted.\r\n     * @param model_data The JSON data.\r\n     */\r\n    public setData (model_data: IModelData): IGeomPack {\r\n        this.attribs.io.setData(model_data.attributes); // warning: must be before this.geom.add.addData()\r\n        const new_ents_i: IGeomPack = this.geom.io.setData(model_data.geometry);\r\n        return new_ents_i;\r\n    }\r\n    /**\r\n     * Returns the JSON data for this model.\r\n     */\r\n    public getData(): IModelData {\r\n        return {\r\n            geometry: this.geom.io.getData(),\r\n            attributes: this.attribs.io.getData()\r\n        };\r\n    }\r\n    /**\r\n     * Check model for internal consistency\r\n     */\r\n    public check(): string[] {\r\n        return this.geom.check();\r\n    }\r\n}\r\n","import { EAttribNames, EEntType } from './common';\r\nimport { IThreeJS } from './ThreejsJSON';\r\nimport { GIModel } from './GIModel';\r\n/**\r\n * Geo-info model class.\r\n */\r\nexport class GIModelThreejs {\r\n    private _model: GIModel;\r\n\r\n   /**\r\n     * Creates an object to store the attribute data.\r\n     * @param model The JSON data\r\n     */\r\n    constructor(model: GIModel) {\r\n        this._model = model;\r\n    }\r\n    /**\r\n     * Generate a default color if none exists.\r\n     */\r\n    private _generateColors(): number[] {\r\n        const colors = [];\r\n        const numEnts = this._model.geom.query.numEnts(EEntType.VERT, false);\r\n        for (let index = 0; index < numEnts; index++) {\r\n            colors.push(1, 1, 1);\r\n        }\r\n        return colors;\r\n    }\r\n    // /**\r\n    //  * Generate default normals if non exist.\r\n    //  */\r\n    // private _generateNormals(): number[] {\r\n    //     const normals = [];\r\n    //     const numEnts = this.geom.query.numEnts(EEntType.VERT, false);\r\n    //     for (let index = 0; index < numEnts; index++) {\r\n    //         normals.push(0, 0, 0);\r\n    //     }\r\n    //     return normals;\r\n    // }\r\n    /**\r\n     * Returns arrays for visualization in Threejs.\r\n     */\r\n    public get3jsData(): IThreeJS {\r\n        // get the attribs at the vertex level\r\n        const [posis_xyz, posis_map]: [number[], Map<number, number>]  =  this._model.attribs.threejs.get3jsSeqPosisCoords();\r\n        const [vertex_xyz, vertex_map]: [number[], Map<number, number>]  =  this._model.attribs.threejs.get3jsSeqVertsCoords();\r\n        const normals_values: number[] = this._model.attribs.threejs.get3jsSeqVertsAttrib(EAttribNames.NORMAL);\r\n        let colors_values: number[] = this._model.attribs.threejs.get3jsSeqVertsAttrib(EAttribNames.COLOUR);\r\n        // add normals and colours\r\n        // if (!normals_values) {\r\n        //     normals_values = this._generateNormals();\r\n        // }\r\n        if (!colors_values) {\r\n            colors_values = this._generateColors();\r\n        }\r\n        // get posi indices\r\n        const posis_indices: number[] = Array.from(posis_map.values());\r\n        // get the indices of the vertices for edges, points and triangles\r\n        const [tris_verts_i, triangle_select_map, materials, material_groups]:\r\n            [number[], Map<number, number>, object[], [number, number, number][]] = this._model.geom.threejs.get3jsTris(vertex_map);\r\n        const [edges_verts_i, edge_select_map]: [number[], Map<number, number>] = this._model.geom.threejs.get3jsEdges(vertex_map);\r\n        const [points_verts_i, point_select_map]: [number[], Map<number, number>] = this._model.geom.threejs.get3jsPoints(vertex_map);\r\n        // return an object containing all the data\r\n        const data: IThreeJS = {\r\n            posis_xyz: posis_xyz,\r\n            posis_indices: posis_indices,\r\n            posis_map: posis_map,\r\n            vertex_xyz: vertex_xyz,\r\n            vertex_map: vertex_map,\r\n            normals: normals_values,\r\n            colors: colors_values,\r\n            point_indices: points_verts_i,\r\n            point_select_map: point_select_map,\r\n            edge_indices: edges_verts_i,\r\n            edge_select_map: edge_select_map,\r\n            triangle_indices: tris_verts_i,\r\n            triangle_select_map: triangle_select_map,\r\n            materials: materials,\r\n            material_groups: material_groups\r\n        };\r\n        // console.log(data);\r\n        return data;\r\n    }\r\n}\r\n","import { GIAttribMap } from './GIAttribMap';\r\n\r\n// some constants\r\nexport const XYPLANE: TPlane = [[0, 0, 0], [1, 0, 0], [0, 1, 0]];\r\nexport const YZPLANE: TPlane = [[0, 0, 0], [0, 1, 0], [0, 0, 1]];\r\nexport const ZXPLANE: TPlane = [[0, 0, 0], [0, 0, 1], [1, 0, 0]];\r\n\r\nexport const YXPLANE: TPlane = [[0, 0, 0], [0, 1, 0], [1, 0, 0]];\r\nexport const ZYPLANE: TPlane = [[0, 0, 0], [0, 0, 1], [0, 1, 0]];\r\nexport const XZPLANE: TPlane = [[0, 0, 0], [1, 0, 0], [0, 0, 1]];\r\n\r\n// EEntType and an index\r\nexport type TEntTypeIdx = [EEntType, number];\r\n\r\n// Object for entities\r\nexport interface IGeomPack {\r\n    posis_i: number[];\r\n    points_i: number[];\r\n    plines_i: number[];\r\n    pgons_i: number[];\r\n    colls_i: number[];\r\n}\r\n\r\n// Types\r\nexport type TRay = [Txyz, Txyz]; // an origin and a direction vector\r\nexport type TPlane = [Txyz, Txyz, Txyz]; // an origin, an x vec and a y vec\r\nexport type TBBox = [Txyz, Txyz, Txyz, Txyz]; // an origin, an x vec and a y vec\r\nexport type TQuery = string;\r\nexport type TId = string;\r\nexport type TColor = [number, number, number]; // TODO replace with Txyz\r\nexport type TNormal = [number, number, number]; // TODO replace with xyz\r\nexport type TTexture = [number, number];\r\n\r\n// Types of entities\r\nexport enum EEntType {\r\n    POSI,\r\n    TRI,\r\n    VERT,\r\n    EDGE,\r\n    WIRE,\r\n    FACE,\r\n    POINT,\r\n    PLINE,\r\n    PGON,\r\n    COLL,\r\n    MOD\r\n}\r\n\r\n// Types of entities\r\nexport enum EEntTypeStr {\r\n    'ps',\r\n    '_t',\r\n    '_v',\r\n    '_e',\r\n    '_w',\r\n    '_f',\r\n    'pt',\r\n    'pl',\r\n    'pg',\r\n    'co',\r\n    'mo'\r\n}\r\n\r\nexport enum EEntStrToGeomArray {\r\n    'posis',\r\n    'dn_tris_verts',\r\n    'dn_verts_posis',\r\n    'dn_edges_verts',\r\n    'dn_wires_edges',\r\n    'dn_faces_wirestris',\r\n    'dn_points_verts',\r\n    'dn_plines_wires',\r\n    'dn_pgons_faces',\r\n    'dn_colls_objs'\r\n}\r\n\r\n/**\r\n * Attribute maps\r\n */\r\nexport interface IAttribsMaps {\r\n    ps: Map<string, GIAttribMap>;\r\n    _v: Map<string, GIAttribMap>;\r\n    _e: Map<string, GIAttribMap>;\r\n    _w: Map<string, GIAttribMap>;\r\n    _f: Map<string, GIAttribMap>;\r\n    pt: Map<string, GIAttribMap>;\r\n    pl: Map<string, GIAttribMap>;\r\n    pg: Map<string, GIAttribMap>;\r\n    co: Map<string, GIAttribMap>;\r\n    mo: Map<string, any>;\r\n}\r\n\r\n// Names of attributes\r\nexport enum EAttribNames {\r\n    COORDS =  'xyz',\r\n    NORMAL =  'normal',\r\n    COLOUR =   'rgb',\r\n    TEXTURE = 'uv',\r\n    NAME = 'name'\r\n}\r\n\r\n/**\r\n * The types of operators that can be used in a query.\r\n */\r\nexport enum EQueryOperatorTypes {\r\n    IS_EQUAL = '==',\r\n    IS_NOT_EQUAL = '!=',\r\n    IS_GREATER_OR_EQUAL = '>=',\r\n    IS_LESS_OR_EQUAL = '<=',\r\n    IS_GREATER = '>',\r\n    IS_LESS = '<',\r\n    EQUAL = '='\r\n}\r\n\r\n/**\r\n * A query component.\r\n * Each query can consist of multiple components.\r\n * Some examples of queries\r\n * @name == value\r\n * @name > value\r\n * @name[2] <= value\r\n */\r\nexport interface IQueryComponent {\r\n    attrib_name: string;\r\n    attrib_index: number;\r\n    attrib_value_str: string;\r\n    operator_type: EQueryOperatorTypes;\r\n}\r\n\r\n/**\r\n * A sort component.\r\n * Each sort can consist of multiple components.\r\n * Some examples of queries\r\n * @name\r\n * @name[2]\r\n */\r\nexport interface ISortComponent {\r\n    attrib_name: string;\r\n    attrib_index: number;\r\n}\r\n\r\nexport enum ESort {\r\n    'DESCENDING' = 'descending',\r\n    'ASCENDING' = 'ascending'\r\n}\r\n\r\nexport enum EAttribPromote {\r\n    AVERAGE,\r\n    MEDIAN,\r\n    SUM,\r\n    MIN,\r\n    MAX,\r\n    FIRST,\r\n    LAST\r\n}\r\n\r\n/**\r\n * Geom arrays\r\n */\r\nexport interface IGeomArrays {\r\n    // num_posis: number;\r\n    dn_verts_posis: TVert[];\r\n    dn_tris_verts: TTri[];\r\n    dn_edges_verts: TEdge[];\r\n    dn_wires_edges: TWire[];\r\n    dn_faces_wirestris: TFace[];\r\n    dn_points_verts: TPoint[];\r\n    dn_plines_wires: TPline[];\r\n    dn_pgons_faces: TPgon[];\r\n    dn_colls_objs: TColl[];\r\n    up_posis_verts: number[][]; // one to many\r\n    up_tris_faces: number[];\r\n    up_verts_edges: number[][]; // one to two\r\n    up_verts_tris: number[][]; // one to many\r\n    up_verts_points: number[];\r\n    up_edges_wires: number[];\r\n    up_wires_faces: number[];\r\n    up_wires_plines: number[];\r\n    up_faces_pgons: number[];\r\n    up_points_colls: number[][]; // one to many\r\n    up_plines_colls: number[][]; // one to many\r\n    up_pgons_colls: number[][]; // one to many\r\n}\r\n\r\n// copy geometry\r\nexport interface IGeomCopy {\r\n    points: number[];\r\n    plines: number[];\r\n    pgons: number[];\r\n    colls: number[];\r\n}\r\n// ================================================================================================\r\n// JSON DATA\r\n// ================================================================================================\r\n\r\n// enums\r\nexport enum EAttribDataTypeStrs {\r\n    // INT = 'Int',\r\n    FLOAT = 'Float',\r\n    STRING = 'String'\r\n}\r\n\r\n// types\r\nexport type Txyz = [number, number, number]; // in use\r\nexport type TPosi = number;\r\nexport type TTri = [number, number, number]; // [position, position, position]\r\nexport type TVert = number; // positions\r\nexport type TEdge = [number, number]; // [vertex, vertex]\r\nexport type TWire = number[]; // [edge, edge,....]\r\nexport type TFace = [number[], number[]]; // [[wire, ....], [triangle, ...]]\r\nexport type TPoint = number; // [vertex,....]\r\nexport type TPline = number; // [wire,....]\r\nexport type TPgon = number; // [face,....]\r\nexport type TColl = [number, number[], number[], number[]]; // [parent, [point, ...], [polyline, ...], [polygon, ....]]\r\nexport type TEntity = TTri | TVert | TEdge | TWire | TFace | TPoint | TPline | TPgon | TColl;\r\nexport type TAttribDataTypes = string | string[] | number | number[];\r\nexport type TEntAttribValuesArr = Array<[number[], TAttribDataTypes]>;\r\nexport type TModelAttribValuesArr = Array<[string, TAttribDataTypes]>;\r\n// interfaces for JSON data\r\n\r\nexport const RE_SPACES: RegExp = /\\s+/g;\r\n\r\nexport interface IGeomData {\r\n    num_positions: number;\r\n    triangles: TTri[];\r\n    vertices: TVert[];\r\n    edges: TEdge[];\r\n    wires: TWire[];\r\n    faces: TFace[];\r\n    points: TPoint[];\r\n    polylines: TPline[];\r\n    polygons: TPgon[];\r\n    collections: TColl[];\r\n}\r\nexport interface IAttribData {\r\n    name: string;\r\n    data_type: EAttribDataTypeStrs;\r\n    data_size: number;\r\n    data: TEntAttribValuesArr;\r\n}\r\nexport interface IAttribsData {\r\n    positions: IAttribData[];\r\n    vertices: IAttribData[];\r\n    edges: IAttribData[];\r\n    wires: IAttribData[];\r\n    faces: IAttribData[];\r\n    points: IAttribData[];\r\n    polylines: IAttribData[];\r\n    polygons: IAttribData[];\r\n    collections: IAttribData[];\r\n    model: TModelAttribValuesArr;\r\n}\r\nexport interface IModelData {\r\n    geometry: IGeomData;\r\n    attributes: IAttribsData;\r\n}\r\n","import { GIModel } from './GIModel';\r\nimport { TColor, TNormal, TTexture, EAttribNames, Txyz, EEntType} from './common';\r\n/**\r\n * Export to obj\r\n */\r\nexport function exportObj(model: GIModel): string {\r\n    const h_str = '# File generated by Mobius.\\n';\r\n    // the order of data is 1) vertex, 2) texture, 3) normal\r\n    let v_str = '';\r\n    let vt_str = '';\r\n    let vn_str = '';\r\n    let f_str = '';\r\n    let l_str = '';\r\n    // do we have color, texture, normal?\r\n    const has_color_attrib: boolean = model.attribs.query.hasAttrib(EEntType.VERT, EAttribNames.COLOUR);\r\n    const has_normal_attrib: boolean = model.attribs.query.hasAttrib(EEntType.VERT, EAttribNames.NORMAL);\r\n    const has_texture_attrib: boolean = model.attribs.query.hasAttrib(EEntType.VERT, EAttribNames.TEXTURE);\r\n    const posis_i: number[] = model.geom.query.getEnts(EEntType.POSI, false);\r\n    const verts_i: number[] = model.geom.query.getEnts(EEntType.VERT, false);\r\n    // positions\r\n    if (has_color_attrib) {\r\n        for (const vert_i of verts_i) {\r\n            const color: TColor = model.attribs.query.getAttribValue(EEntType.VERT, EAttribNames.COLOUR, vert_i) as TColor;\r\n            const coord: Txyz = model.attribs.query.getVertCoords(vert_i);\r\n            v_str += 'v ' + coord.map( v => v.toString() ).join(' ') + color.map( c => c.toString() ).join(' ') + '\\n';\r\n        }\r\n    } else {\r\n        for (const posi_i of posis_i) {\r\n            const coord: Txyz = model.attribs.query.getPosiCoords(posi_i);\r\n            v_str += 'v ' + coord.map( v => v.toString() ).join(' ') + '\\n';\r\n        }\r\n    }\r\n    // textures, vt\r\n    if (has_texture_attrib) {\r\n        for (const vert_i of verts_i) {\r\n            const texture: TTexture = model.attribs.query.getAttribValue(EEntType.VERT, EAttribNames.TEXTURE, vert_i) as TTexture;\r\n            vt_str += 'v ' + texture.map( v => v.toString() ).join(' ') + '\\n';\r\n        }\r\n    }\r\n    // normals, vn\r\n    if (has_normal_attrib) {\r\n        for (const vert_i of verts_i) {\r\n            const normal: TNormal = model.attribs.query.getAttribValue(EEntType.VERT, EAttribNames.NORMAL, vert_i) as TNormal;\r\n            vn_str += 'v ' + normal.map( v => v.toString() ).join(' ') + '\\n';\r\n        }\r\n    }\r\n    // polygons, f\r\n    const pgons_i: number[] = model.geom.query.getEnts(EEntType.PGON, false);\r\n    for (const pgon_i of pgons_i) {\r\n        const pgon_verts_i_outer: number[] = model.geom.query.navAnyToVert(EEntType.PGON, pgon_i);\r\n        // const verts_i_outer = verts_i[0];\r\n        // TODO what about holes\r\n        if (has_texture_attrib) {\r\n            // TODO\r\n        }\r\n        if (has_normal_attrib) {\r\n            // TODO\r\n        }\r\n        if (has_color_attrib) {\r\n            f_str += 'f ' + pgon_verts_i_outer.map( vert_i => (vert_i + 1).toString() ).join(' ') + '\\n';\r\n        } else {\r\n            f_str += 'f ' + pgon_verts_i_outer.map( vert_i => (model.geom.query.navVertToPosi(vert_i) + 1).toString() ).join(' ') + '\\n';\r\n        }\r\n    }\r\n    // polylines, l\r\n    const plines_i: number[] = model.geom.query.getEnts(EEntType.PLINE, false);\r\n    for (const pline_i of plines_i) {\r\n        const pline_verts_i: number[] = model.geom.query.navAnyToVert(EEntType.PLINE, pline_i);\r\n        l_str += 'l ' + pline_verts_i.map( vert_i => (vert_i + 1).toString() ).join(' ') + '\\n';\r\n    }\r\n    // result\r\n    return h_str + v_str + v_str + vt_str + vn_str + f_str + l_str;\r\n}\r\n","import { TId, EEntType, EEntTypeStr, TEntTypeIdx } from './common';\r\n\r\n// ============================================================================\r\nexport function getArrDepth(arr: any): number {\r\n    if (Array.isArray(arr)) {\r\n        return 1 + getArrDepth(arr[0]);\r\n    }\r\n    return 0;\r\n}\r\n// ============================================================================\r\nexport function idsMakeFromIndicies(ent_type: EEntType, idxs: number|number[]|number[][]): TId|TId[]|TId[][] {\r\n    const depth: number = getArrDepth(idxs);\r\n    if (depth === 0) {\r\n        const idx: number = idxs as number;\r\n        return EEntTypeStr[ent_type as EEntType] + idx as TId;\r\n    } else if (depth === 1) {\r\n        const idxs_arr: number[] = idxs as number[];\r\n        if (idxs_arr.length === 0) { return []; } //  deal with empty array\r\n        return idxs_arr.map( idx => idsMakeFromIndicies(ent_type, idx) ) as TId[];\r\n    } else { // depth === 2\r\n        const idxs_arrs: number[][] = idxs as number[][];\r\n        return idxs_arrs.map( idxs_arr => idsMakeFromIndicies(ent_type, idxs_arr) ) as TId[][];\r\n    }\r\n}\r\nexport function idsMake(ent_type_idxs: TEntTypeIdx|TEntTypeIdx[]|TEntTypeIdx[][]): TId|TId[]|TId[][] {\r\n    const depth: number = getArrDepth(ent_type_idxs);\r\n    if (depth === 1) {\r\n        if (ent_type_idxs.length === 0) { return []; } //  deal with empty array\r\n        const ent_type_idx: TEntTypeIdx = ent_type_idxs as TEntTypeIdx;\r\n        return EEntTypeStr[ent_type_idx[0] as EEntType] + ent_type_idx[1] as TId;\r\n    } else if (depth === 2) {\r\n        const ent_type_idxs_arr: TEntTypeIdx[] = ent_type_idxs as TEntTypeIdx[];\r\n        return ent_type_idxs_arr.map( ent_type_idx => idsMake(ent_type_idx) ) as TId[];\r\n    } else { // depth === 3\r\n        const ent_type_idxs_arrs: TEntTypeIdx[][] = ent_type_idxs as TEntTypeIdx[][];\r\n        return ent_type_idxs_arrs.map( ent_type_idxs_arr => idsMake(ent_type_idxs_arr) ) as TId[][];\r\n    }\r\n}\r\nexport function idsBreak(ids: TId|TId[]|TId[][]): TEntTypeIdx|TEntTypeIdx[]|TEntTypeIdx[][] {\r\n    const depth: number = getArrDepth(ids);\r\n    if (depth === 0) {\r\n        const id: TId = ids as TId;\r\n        if (typeof id !== 'string') { throw new Error('Value is not an entity ID.'); }\r\n        if (id.length < 3) { throw new Error('String is not an entity ID.'); }\r\n        const ent_type_str: string = id.slice(0, 2);\r\n        const ent_type: EEntType = EEntTypeStr[ent_type_str];\r\n        if (ent_type === undefined) { throw new Error('String is not an entity ID.'); }\r\n        const index: number = Number(id.slice(2));\r\n        return [ent_type, index];\r\n    } else if (depth === 1) {\r\n        const ids_arr: TId[] = ids as TId[];\r\n        return ids_arr.map( id => idsBreak(id) ) as TEntTypeIdx[];\r\n    } else { // depth === 2\r\n        const ids_arr: TId[][] = ids as TId[][];\r\n        return ids_arr.map( id => idsBreak(id) ) as TEntTypeIdx[][];\r\n    }\r\n}\r\nexport function idIndicies(ents_arr: TEntTypeIdx[]): number[] {\r\n    return ents_arr.map( ents => ents[1] );\r\n}\r\n// ============================================================================\r\nexport function isPosi(ent_type: EEntType): boolean {\r\n    return ent_type === EEntType.POSI;\r\n}\r\nexport function isVert(ent_type: EEntType): boolean {\r\n    return ent_type === EEntType.VERT;\r\n}\r\nexport function isTri(ent_type: EEntType): boolean {\r\n    return ent_type === EEntType.TRI;\r\n}\r\nexport function isEdge(ent_type: EEntType): boolean {\r\n    return ent_type === EEntType.EDGE;\r\n}\r\nexport function isWire(ent_type: EEntType): boolean {\r\n    return ent_type === EEntType.WIRE;\r\n}\r\nexport function isFace(ent_type: EEntType): boolean {\r\n    return ent_type === EEntType.FACE;\r\n}\r\nexport function isPoint(ent_type: EEntType): boolean {\r\n    return ent_type === EEntType.POINT;\r\n}\r\nexport function isPline(ent_type: EEntType): boolean {\r\n    return ent_type === EEntType.PLINE;\r\n}\r\nexport function isPgon(ent_type: EEntType): boolean {\r\n    return ent_type === EEntType.PGON;\r\n}\r\nexport function isColl(ent_type: EEntType): boolean {\r\n    return ent_type === EEntType.COLL;\r\n}\r\n// more general test\r\nexport function isTopo(ent_type: EEntType): boolean {\r\n    if (ent_type === EEntType.VERT) { return true; }\r\n    if (ent_type === EEntType.EDGE) { return true; }\r\n    if (ent_type === EEntType.WIRE) { return true; }\r\n    if (ent_type === EEntType.FACE) { return true; }\r\n    return false;\r\n}\r\nexport function isObj(ent_type: EEntType): boolean {\r\n    if (ent_type === EEntType.PGON) { return true; }\r\n    if (ent_type === EEntType.PLINE) { return true; }\r\n    if (ent_type === EEntType.POINT) { return true; }\r\n    return false;\r\n}\r\nexport function isDim0(ent_type: EEntType): boolean {\r\n    if (ent_type === EEntType.POSI) { return true; }\r\n    if (ent_type === EEntType.VERT) { return true; }\r\n    if (ent_type === EEntType.POINT) { return true; }\r\n    return false;\r\n}\r\nexport function isDim1(ent_type: EEntType): boolean {\r\n    if (ent_type === EEntType.EDGE) { return true; }\r\n    if (ent_type === EEntType.PLINE) { return true; }\r\n    return false;\r\n}\r\nexport function isDim2(ent_type: EEntType): boolean {\r\n    if (ent_type === EEntType.FACE) { return true; }\r\n    if (ent_type === EEntType.PGON) { return true; }\r\n    return false;\r\n}\r\n","import * as three from 'three';\r\ntype Txyz = [number, number, number];\r\nconst EPS = 1e-6;\r\n\r\nexport function distance(v1: Txyz, v2: Txyz): number {\r\n    const vec: Txyz = [\r\n        v1[0] - v2[0],\r\n        v1[1] - v2[1],\r\n        v1[2] - v2[2],\r\n    ];\r\n    return Math.hypot(...vec);\r\n}\r\n","import * as three from 'three';\r\nimport { vecNorm, vecCross } from './vectors';\r\nimport { Vector3 } from 'three';\r\nimport { getArrDepth } from '../geo-info/id';\r\ntype Txyz = [number, number, number]; // x, y, z\r\ntype TPlane = [Txyz, Txyz, Txyz]; // origin, xaxis, yaxis\r\nconst EPS = 1e-6;\r\n\r\nexport function multMatrix(xyz: Txyz, m: three.Matrix4): Txyz {\r\n    const v2: three.Vector3 = new three.Vector3(...xyz as Txyz);\r\n    v2.applyMatrix4(m);\r\n    return v2.toArray() as Txyz;\r\n}\r\n\r\nexport function mirrorMatrix(origin: Txyz, normal: Txyz): three.Matrix4 {\r\n    // plane normal\r\n    const [a, b, c]: number[] = vecNorm(normal);\r\n    // rotation matrix\r\n    const matrix_mirror: three.Matrix4 = new three.Matrix4();\r\n    matrix_mirror.set(\r\n        1 - (2 * a * a), -2 * a * b, -2 * a * c, 0,\r\n        -2 * a * b, 1 - (2 * b * b), -2 * b * c, 0,\r\n        -2 * a * c, -2 * b * c, 1 - (2 * c * c), 0,\r\n        0, 0, 0, 1\r\n    );\r\n    // translation matrix\r\n    const matrix_trn1: three.Matrix4 = new three.Matrix4();\r\n    matrix_trn1.makeTranslation(-origin[0], -origin[1], -origin[2]);\r\n    const matrix_trn2: three.Matrix4 = new three.Matrix4();\r\n    matrix_trn2.makeTranslation(origin[0], origin[1], origin[2]);\r\n    // final matrix\r\n    const move_mirror_move: three.Matrix4 = matrix_trn2.multiply(matrix_mirror.multiply(matrix_trn1));\r\n    // do the xform\r\n    return move_mirror_move;\r\n}\r\n\r\nexport function rotateMatrix(origin: Txyz, axis: Txyz, angle: number): three.Matrix4 {\r\n    // norm the axis\r\n    axis = vecNorm(axis);\r\n    // rotation matrix\r\n    const matrix_rot: three.Matrix4 = new three.Matrix4();\r\n    matrix_rot.makeRotationAxis(new three.Vector3(...axis), angle);\r\n    // translation matrix\r\n    const matrix_trn1: three.Matrix4 = new three.Matrix4();\r\n    matrix_trn1.makeTranslation(-origin[0], -origin[1], -origin[2]);\r\n    const matrix_trn2: three.Matrix4 = new three.Matrix4();\r\n    matrix_trn2.makeTranslation(origin[0], origin[1], origin[2]);\r\n    // final matrix\r\n    const move_rot_move: three.Matrix4 = matrix_trn2.multiply(matrix_rot.multiply(matrix_trn1));\r\n    // do the xform\r\n    return move_rot_move;\r\n}\r\n\r\nexport function scaleMatrix(origin: Txyz|TPlane, factor: Txyz): three.Matrix4 {\r\n    // scale matrix\r\n    const matrix_scale: three.Matrix4 = new three.Matrix4();\r\n    matrix_scale.makeScale(factor[0], factor[1], factor[2]);\r\n    // xform matrix\r\n    const source_plane: TPlane = (getArrDepth(origin) === 2 ? origin : [origin, [1, 0, 0], [0, 1, 0]]) as TPlane;\r\n    const matrix_xform1: three.Matrix4 = _xformMatrixFromXYZVectors(\r\n        source_plane[0], source_plane[1], source_plane[2], true);\r\n    const matrix_xform2: three.Matrix4 = _xformMatrixFromXYZVectors(\r\n        source_plane[0], source_plane[1], source_plane[2], false);\r\n    // final matrix\r\n    const xform_scale_xform: three.Matrix4 = matrix_xform2.multiply(matrix_scale.multiply(matrix_xform1));\r\n    // do the xform\r\n    return xform_scale_xform;\r\n}\r\n\r\nexport function xfromSourceTargetMatrix(source_plane: TPlane, target_plane: TPlane): three.Matrix4 {\r\n    // matrix to xform from source to gcs, then from gcs to target\r\n    const matrix_source_to_gcs: three.Matrix4 = _xformMatrixFromXYZVectors(\r\n        source_plane[0], source_plane[1], source_plane[2], true);\r\n    const matrix_gcs_to_target: three.Matrix4 = _xformMatrixFromXYZVectors(\r\n        target_plane[0], target_plane[1], target_plane[2], false);\r\n    // final matrix\r\n    const xform: three.Matrix4 = matrix_gcs_to_target.multiply(matrix_source_to_gcs);\r\n    // return the matrix\r\n    return xform;\r\n}\r\n\r\n// ================================================================================================\r\n// Helper functions\r\n// ================================================================================================\r\n\r\nfunction _crossVectors(v1: three.Vector3, v2: three.Vector3, norm: boolean = false): three.Vector3 {\r\n    const v3: three.Vector3 = new three.Vector3();\r\n    v3.crossVectors(v1, v2);\r\n    if (norm) { v3.normalize(); }\r\n    return v3;\r\n}\r\n\r\nfunction _dotVectors(v1: three.Vector3, v2: three.Vector3): number {\r\n    return v1.dot(v2);\r\n}\r\n\r\nfunction _xformMatrixFromXYZVectors(o: Txyz, xaxis: Txyz, xyplane: Txyz, neg: boolean): three.Matrix4 {\r\n    const x_vec: three.Vector3 = new three.Vector3(...xaxis).normalize();\r\n    const xyplane_vec: three.Vector3 = new three.Vector3(...xyplane).normalize();\r\n    const z_vec: three.Vector3 = _crossVectors(x_vec, xyplane_vec);\r\n    const y_vec: three.Vector3 = _crossVectors(z_vec, x_vec);\r\n    if (neg) {\r\n        return _xformMatrixNeg(new three.Vector3(...o), x_vec, y_vec);\r\n    }\r\n    return xformMatrixPos(new three.Vector3(...o), x_vec, y_vec);\r\n}\r\n\r\nfunction _xformMatrixNeg(o: three.Vector3, x: three.Vector3, y: three.Vector3): three.Matrix4 {\r\n    const m1: three.Matrix4 = new three.Matrix4();\r\n    const o_neg: three.Vector3 = o.clone().negate();\r\n    m1.setPosition(o_neg);\r\n    const m2: three.Matrix4 = new three.Matrix4();\r\n    m2.makeBasis(x.normalize(), y.normalize(), _crossVectors(x, y, true));\r\n    m2.getInverse(m2);\r\n    const m3: three.Matrix4 = new three.Matrix4();\r\n    // first translate to (0,0,0), then xform, so m1 x m2\r\n    m3.multiplyMatrices(m2, m1);\r\n    return m3;\r\n}\r\n\r\nfunction xformMatrixPos(o: three.Vector3, x: three.Vector3, y: three.Vector3): three.Matrix4 {\r\n    const m1: three.Matrix4 = new three.Matrix4();\r\n    m1.setPosition(o);\r\n    const m2: three.Matrix4 = new three.Matrix4();\r\n    m2.makeBasis(x.normalize(), y.normalize(), _crossVectors(x, y, true));\r\n    const m3: three.Matrix4 = new three.Matrix4();\r\n    // first xform, then translate to origin, so m1 x m2\r\n    m3.multiplyMatrices(m1, m2);\r\n    return m3;\r\n}\r\n\r\n// ---------------------------------------------------------------------------------\r\n\r\nfunction _matrixFromXYZ(pts: Txyz[],\r\n    from_origin: Txyz, from_vectors: Txyz[],\r\n    to_origin: Txyz, to_vectors: Txyz[]): number[][] {\r\n\r\n    const e1: three.Vector3 = new three.Vector3(from_vectors[0][0]).normalize();\r\n    const e2: three.Vector3 = new three.Vector3(from_vectors[0][1]).normalize();\r\n    const e3: three.Vector3 = new three.Vector3(from_vectors[0][2]).normalize();\r\n\r\n    const b1: three.Vector3 = new three.Vector3(to_vectors[0][0]).normalize();\r\n    const b2: three.Vector3 = new three.Vector3(to_vectors[0][1]).normalize();\r\n    const b3: three.Vector3 = new three.Vector3(to_vectors[0][2]).normalize();\r\n\r\n    if (e1.dot(e2) === 0) { throw new Error('Orthonormal initial basis required'); }\r\n    if (e1.dot(e3) === 0) { throw new Error('Orthonormal initial basis required'); }\r\n    if (e2.dot(e3) === 0) { throw new Error('Orthonormal initial basis required'); }\r\n    if (b1.dot(b2) === 0) { throw new Error('Orthonormal initial basis required'); }\r\n    if (b1.dot(b3) === 0) { throw new Error('Orthonormal initial basis required'); }\r\n    if (b2.dot(b3) === 0) { throw new Error('Orthonormal initial basis required'); }\r\n\r\n    const matrix: three.Matrix3 = new three.Matrix3();\r\n    matrix.set(e1.dot(b1), e1.dot(b2), e1.dot(b3),\r\n    e2.dot(b1), e2.dot(b2), e2.dot(b3),\r\n    e3.dot(b1), e3.dot(b2), e3.dot(b3));\r\n\r\n    const t_x: number = to_origin[0] - from_origin[0];\r\n    const t_y: number = to_origin[1] - from_origin[1];\r\n    const t_z: number = to_origin[2] - from_origin[2];\r\n\r\n    return [[e1.dot(b1), e1.dot(b2), e1.dot(b3), t_x],\r\n    [e2.dot(b1), e2.dot(b2), e2.dot(b3), t_y],\r\n    [e3.dot(b1), e3.dot(b2), e3.dot(b3), t_z],\r\n    [0, 0, 0, 1]];\r\n}\r\n","import * as three from 'three';\r\nimport { Vector3, Triangle } from 'three';\r\ntype Txyz = [number, number, number];\r\nconst EPS = 1e-6;\r\n\r\nexport function normal(v1: Txyz, v2: Txyz, v3: Txyz, norm: boolean = false): Txyz {\r\n    const _v1: three.Vector3 = new Vector3(...v1);\r\n    const _v2: three.Vector3 = new Vector3(...v2);\r\n    const _v3: three.Vector3 = new Vector3(...v3);\r\n    const t: three.Triangle = new Triangle(_v1, _v2, _v3);\r\n    const _normal: three.Vector3 = new Vector3();\r\n    t.getNormal(_normal);\r\n    if (norm) {\r\n        _normal.normalize();\r\n    }\r\n    return _normal.toArray() as Txyz;\r\n}\r\n\r\nexport function area(v1: Txyz, v2: Txyz, v3: Txyz): number {\r\n    const _v1: three.Vector3 = new Vector3(...v1);\r\n    const _v2: three.Vector3 = new Vector3(...v2);\r\n    const _v3: three.Vector3 = new Vector3(...v3);\r\n    const t: three.Triangle = new Triangle(_v1, _v2, _v3);\r\n    return t.getArea();\r\n}\r\n","import * as three from 'three';\r\nimport * as mathjs from 'mathjs';\r\ntype Txyz = [number, number, number];\r\nconst EPS = 1e-6;\r\n\r\n//  Vectors using Txyz =======================================================================================================\r\nexport function vecEqual(v1: Txyz, v2: Txyz, tol: number): boolean {\r\n    if (Math.abs(v1[0] - v2[0]) > tol) { return false; }\r\n    if (Math.abs(v1[1] - v2[1]) > tol) { return false; }\r\n    if (Math.abs(v1[2] - v2[2]) > tol) { return false; }\r\n    return true;\r\n}\r\n\r\nexport function vecSub(v1: Txyz, v2: Txyz, norm: boolean = false): Txyz {\r\n    const v3: Txyz = [\r\n        v1[0] - v2[0],\r\n        v1[1] - v2[1],\r\n        v1[2] - v2[2],\r\n    ];\r\n    if (norm) {\r\n        this.vectorNorm(v3);\r\n    }\r\n    return v3;\r\n}\r\n\r\nexport function vecAdd(v1: Txyz, v2: Txyz, norm: boolean = false): Txyz {\r\n    const v3: Txyz = [\r\n        v1[0] + v2[0],\r\n        v1[1] + v2[1],\r\n        v1[2] + v2[2],\r\n    ];\r\n    if (norm) {\r\n        this.vectorNorm(v3);\r\n    }\r\n    return v3;\r\n}\r\n\r\nexport function vecSum(vecs: Txyz[], norm: boolean = false): Txyz {\r\n    const vec_sum: Txyz = [0, 0, 0];\r\n    for (const vec of vecs) {\r\n        vec_sum[0] += vec[0];\r\n        vec_sum[1] += vec[1];\r\n        vec_sum[2] += vec[2];\r\n    }\r\n    if (norm) {\r\n        this.vectorNorm(vec_sum);\r\n    }\r\n    return vec_sum;\r\n}\r\n\r\nexport function vecDiv(vec: Txyz, divisor: number): Txyz {\r\n    return [\r\n        vec[0] / divisor,\r\n        vec[1] / divisor,\r\n        vec[2] / divisor\r\n    ];\r\n}\r\n\r\nexport function vecMult(vec: Txyz, multiplier: number): Txyz {\r\n    return [\r\n        vec[0] * multiplier,\r\n        vec[1] * multiplier,\r\n        vec[2] * multiplier\r\n    ];\r\n}\r\n\r\nexport function vecCross(v1: Txyz, v2: Txyz, norm: boolean = false): Txyz {\r\n    const n: Txyz = mathjs.cross(v1, v2);\r\n    if (norm) {\r\n        return vecNorm(n);\r\n    }\r\n    return n;\r\n}\r\n\r\nexport function vecDot(v1: Txyz, v2: Txyz): number {\r\n    return mathjs.dot(v1, v2);\r\n}\r\n\r\nexport function vecNorm(v: Txyz): Txyz {\r\n    const length: number = Math.hypot(...v);\r\n    if (length === 0) {return [0, 0, 0]; }\r\n    return [v[0] / length, v[1] / length, v[2] / length];\r\n}\r\n\r\nexport function vecAng(v1: Txyz, v2: Txyz): number {\r\n    const v1n: Txyz = vecNorm(v1);\r\n    const v2n: Txyz = vecNorm(v2);\r\n    const d: number = mathjs.dot(v1n, v2n);\r\n    if ((1 - Math.abs(d)) < EPS) { return 0; }\r\n    return Math.acos( d );\r\n}\r\n\r\nexport function vecAng2(v1: Txyz, v2: Txyz, n: Txyz): number {\r\n    const v1n: Txyz = vecNorm(v1);\r\n    const v2n: Txyz = vecNorm(v2);\r\n    const d: number = mathjs.dot(v1n, v2n);\r\n    if ((1 - Math.abs(d)) < EPS) { return 0; }\r\n    let angle: number = Math.acos( d );\r\n    const c: Txyz = mathjs.cross(v1n, v2n);\r\n    angle = angle * mathjs.compare(mathjs.dot(n, c), 0);\r\n    if (angle < 0) { angle = angle + (Math.PI * 2); }\r\n    return angle;\r\n}\r\n\r\nexport function vecLen(v: Txyz): number {\r\n    return Math.hypot(...v);\r\n}\r\nexport function vecSetLen(v: Txyz, len: number): Txyz {\r\n    const fac: number = len / Math.hypot(...v);\r\n    return [v[0] * fac, v[1] * fac, v[2] * fac];\r\n}\r\nexport function vecRev(v: Txyz): Txyz {\r\n    return [\r\n        v[0] * -1,\r\n        v[1] * -1,\r\n        v[2] * -1\r\n    ];\r\n}\r\n\r\nexport function vecFromTo(v1: Txyz, v2: Txyz): Txyz {\r\n    return vecSub(v2, v1);\r\n}\r\n\r\nexport function vecMakeOrtho(v1: Txyz, v2: Txyz): Txyz {\r\n    return vecCross(v2, vecCross(v1, v2));\r\n}\r\n\r\nexport function vecCodir(v1: Txyz, v2: Txyz) {\r\n    v1  = vecNorm(v1);\r\n    v2  = vecNorm(v2);\r\n    if (Math.abs(1 - mathjs.dot(v1, v2)) > EPS) { return false; }\r\n    return true;\r\n}\r\n\r\nexport function dist(p1: Txyz, p2: Txyz): number {\r\n    return mathjs.distance(p1, p2);\r\n}\r\n\r\n/**\r\n * Finds the normal to a set of points using Newell's method\r\n */\r\nexport function newellNorm(pts: Txyz[]): Txyz {\r\n\r\n    const normal: Txyz = [0, 0, 0];\r\n    for (let i = 0; i < pts.length - 1; i++) {\r\n        const p0: Txyz = pts[i];\r\n        const p1: Txyz = pts[i + 1];\r\n        normal[0] += (p0[1] - p1[1]) * (p0[2] + p1[2]);\r\n        normal[1] += (p0[2] - p1[2]) * (p0[0] + p1[0]);\r\n        normal[2] += (p0[0] - p1[0]) * (p0[1] + p1[1]);\r\n    }\r\n    return vecNorm(normal);\r\n}\r\n\r\n/**\r\n * Create new points between two points.\r\n */\r\nexport function interpByNum(pt1: Txyz, pt2: Txyz, num_points: number): Txyz[] {\r\n    if (num_points < 1) {return []; }\r\n    const sub_vec: Txyz = vecDiv(vecSub(pt2, pt1), num_points + 1);\r\n    const points: Txyz[] = [];\r\n    let next: Txyz = pt1;\r\n    for (let i = 0; i < num_points; i++) {\r\n        next = vecAdd(next, sub_vec);\r\n        points.push(next);\r\n    }\r\n    return points;\r\n}\r\nexport function interpByLen(pt1: Txyz, pt2: Txyz, len: number): Txyz[] {\r\n    const vec: Txyz = vecSub(pt2, pt1);\r\n    const num_points: number = Math.floor(vecLen(vec) / len);\r\n    const sub_vec: Txyz = vecMult(vecNorm(vec), len);\r\n    const points: Txyz[] = [];\r\n    let next: Txyz = pt1;\r\n    for (let i = 0; i < num_points; i++) {\r\n        next = vecAdd(next, sub_vec);\r\n        points.push(next);\r\n    }\r\n    return points;\r\n}\r\n\r\n","/**\r\n * @author Mugen87 / https://github.com/Mugen87\r\n * Port from https://github.com/mapbox/earcut (v2.1.2)\r\n */\r\n\r\nconst Earcut = {\r\n\r\n    triangulate: function ( data, holeIndices?, dim? ) {\r\n\r\n        dim = dim || 2;\r\n\r\n        const hasHoles = holeIndices && holeIndices.length;\r\n        const outerLen = hasHoles ? holeIndices[ 0 ] * dim : data.length;\r\n        let outerNode = linkedList( data, 0, outerLen, dim, true );\r\n        const triangles = [];\r\n\r\n        if ( ! outerNode ) { return triangles; }\r\n\r\n        let minX, minY, maxX, maxY, x, y, invSize;\r\n\r\n        if ( hasHoles ) { outerNode = eliminateHoles( data, holeIndices, outerNode, dim ); }\r\n\r\n        // if the shape is not too simple, we'll use z-order curve hash later; calculate polygon bbox\r\n\r\n        if ( data.length > 80 * dim ) {\r\n\r\n            minX = maxX = data[ 0 ];\r\n            minY = maxY = data[ 1 ];\r\n\r\n            for ( let i = dim; i < outerLen; i += dim ) {\r\n\r\n                x = data[ i ];\r\n                y = data[ i + 1 ];\r\n                if ( x < minX ) { minX = x; }\r\n                if ( y < minY ) { minY = y; }\r\n                if ( x > maxX ) { maxX = x; }\r\n                if ( y > maxY ) { maxY = y; }\r\n\r\n            }\r\n\r\n            // minX, minY and invSize are later used to transform coords into integers for z-order calculation\r\n\r\n            invSize = Math.max( maxX - minX, maxY - minY );\r\n            invSize = invSize !== 0 ? 1 / invSize : 0;\r\n\r\n        }\r\n\r\n        earcutLinked( outerNode, triangles, dim, minX, minY, invSize );\r\n\r\n        return triangles;\r\n\r\n    }\r\n\r\n};\r\n\r\n// create a circular doubly linked list from polygon points in the specified winding order\r\n\r\nfunction linkedList( data, start, end, dim, clockwise ) {\r\n\r\n    let i, last;\r\n\r\n    if ( clockwise === ( signedArea( data, start, end, dim ) > 0 ) ) {\r\n\r\n        for ( i = start; i < end; i += dim ) { last = insertNode( i, data[ i ], data[ i + 1 ], last ); }\r\n\r\n    } else {\r\n\r\n        for ( i = end - dim; i >= start; i -= dim ) { last = insertNode( i, data[ i ], data[ i + 1 ], last ); }\r\n\r\n    }\r\n\r\n    if ( last && equals( last, last.next ) ) {\r\n\r\n        removeNode( last );\r\n        last = last.next;\r\n\r\n    }\r\n\r\n    return last;\r\n\r\n}\r\n\r\n// eliminate colinear or duplicate points\r\n\r\nfunction filterPoints( start, end? ) {\r\n\r\n    if ( ! start ) { return start; }\r\n    if ( ! end ) { end = start; }\r\n\r\n    let p = start, again;\r\n\r\n    do {\r\n\r\n        again = false;\r\n\r\n        if ( ! p.steiner && ( equals( p, p.next ) || area( p.prev, p, p.next ) === 0 ) ) {\r\n\r\n            removeNode( p );\r\n            p = end = p.prev;\r\n            if ( p === p.next ) { break; }\r\n            again = true;\r\n\r\n        } else {\r\n\r\n            p = p.next;\r\n\r\n        }\r\n\r\n    } while ( again || p !== end );\r\n\r\n    return end;\r\n\r\n}\r\n\r\n// main ear slicing loop which triangulates a polygon (given as a linked list)\r\n\r\nfunction earcutLinked( ear, triangles, dim, minX, minY, invSize, pass? ) {\r\n\r\n    if ( ! ear ) { return; }\r\n\r\n    // interlink polygon nodes in z-order\r\n\r\n    if ( ! pass && invSize ) { indexCurve( ear, minX, minY, invSize ); }\r\n\r\n    let stop = ear, prev, next;\r\n\r\n    // iterate through ears, slicing them one by one\r\n\r\n    while ( ear.prev !== ear.next ) {\r\n\r\n        prev = ear.prev;\r\n        next = ear.next;\r\n\r\n        if ( invSize ? isEarHashed( ear, minX, minY, invSize ) : isEar( ear ) ) {\r\n\r\n            // cut off the triangle\r\n            triangles.push( prev.i / dim );\r\n            triangles.push( ear.i / dim );\r\n            triangles.push( next.i / dim );\r\n\r\n            removeNode( ear );\r\n\r\n            // skipping the next vertice leads to less sliver triangles\r\n            ear = next.next;\r\n            stop = next.next;\r\n\r\n            continue;\r\n\r\n        }\r\n\r\n        ear = next;\r\n\r\n        // if we looped through the whole remaining polygon and can't find any more ears\r\n\r\n        if ( ear === stop ) {\r\n\r\n            // try filtering points and slicing again\r\n\r\n            if ( ! pass ) {\r\n\r\n                earcutLinked( filterPoints( ear ), triangles, dim, minX, minY, invSize, 1 );\r\n\r\n                // if this didn't work, try curing all small self-intersections locally\r\n\r\n            } else if ( pass === 1 ) {\r\n\r\n                ear = cureLocalIntersections( ear, triangles, dim );\r\n                earcutLinked( ear, triangles, dim, minX, minY, invSize, 2 );\r\n\r\n            // as a last resort, try splitting the remaining polygon into two\r\n\r\n            } else if ( pass === 2 ) {\r\n\r\n                splitEarcut( ear, triangles, dim, minX, minY, invSize );\r\n\r\n            }\r\n\r\n            break;\r\n\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\n// check whether a polygon node forms a valid ear with adjacent nodes\r\n\r\nfunction isEar( ear ) {\r\n\r\n    const a = ear.prev,\r\n        b = ear,\r\n        c = ear.next;\r\n\r\n    if ( area( a, b, c ) >= 0 ) { return false; } // reflex, can't be an ear\r\n\r\n    // now make sure we don't have other points inside the potential ear\r\n    let p = ear.next.next;\r\n\r\n    while ( p !== ear.prev ) {\r\n\r\n        if ( pointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y ) && area( p.prev, p, p.next ) >= 0 ) {\r\n\r\n            return false;\r\n\r\n        }\r\n\r\n        p = p.next;\r\n\r\n    }\r\n\r\n    return true;\r\n\r\n}\r\n\r\nfunction isEarHashed( ear, minX, minY, invSize ) {\r\n\r\n    const a = ear.prev,\r\n        b = ear,\r\n        c = ear.next;\r\n\r\n    if ( area( a, b, c ) >= 0 ) { return false; } // reflex, can't be an ear\r\n\r\n    // triangle bbox; min & max are calculated like this for speed\r\n\r\n    const minTX = a.x < b.x ? ( a.x < c.x ? a.x : c.x ) : ( b.x < c.x ? b.x : c.x ),\r\n        minTY = a.y < b.y ? ( a.y < c.y ? a.y : c.y ) : ( b.y < c.y ? b.y : c.y ),\r\n        maxTX = a.x > b.x ? ( a.x > c.x ? a.x : c.x ) : ( b.x > c.x ? b.x : c.x ),\r\n        maxTY = a.y > b.y ? ( a.y > c.y ? a.y : c.y ) : ( b.y > c.y ? b.y : c.y );\r\n\r\n    // z-order range for the current triangle bbox;\r\n\r\n    const minZ = zOrder( minTX, minTY, minX, minY, invSize ),\r\n        maxZ = zOrder( maxTX, maxTY, minX, minY, invSize );\r\n\r\n    // first look for points inside the triangle in increasing z-order\r\n\r\n    let p = ear.nextZ;\r\n\r\n    while ( p && p.z <= maxZ ) {\r\n\r\n        if ( p !== ear.prev && p !== ear.next &&\r\n                pointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y ) &&\r\n                area( p.prev, p, p.next ) >= 0 ) { return false; }\r\n        p = p.nextZ;\r\n\r\n    }\r\n\r\n    // then look for points in decreasing z-order\r\n\r\n    p = ear.prevZ;\r\n\r\n    while ( p && p.z >= minZ ) {\r\n\r\n        if ( p !== ear.prev && p !== ear.next &&\r\n                pointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y ) &&\r\n                area( p.prev, p, p.next ) >= 0 ) { return false; }\r\n\r\n        p = p.prevZ;\r\n\r\n    }\r\n\r\n    return true;\r\n\r\n}\r\n\r\n// go through all polygon nodes and cure small local self-intersections\r\n\r\nfunction cureLocalIntersections( start, triangles, dim ) {\r\n\r\n    let p = start;\r\n\r\n    do {\r\n\r\n        const a = p.prev, b = p.next.next;\r\n\r\n        if ( ! equals( a, b ) && intersects( a, p, p.next, b ) && locallyInside( a, b ) && locallyInside( b, a ) ) {\r\n\r\n            triangles.push( a.i / dim );\r\n            triangles.push( p.i / dim );\r\n            triangles.push( b.i / dim );\r\n\r\n            // remove two nodes involved\r\n\r\n            removeNode( p );\r\n            removeNode( p.next );\r\n\r\n            p = start = b;\r\n\r\n        }\r\n\r\n        p = p.next;\r\n\r\n    } while ( p !== start );\r\n\r\n    return p;\r\n\r\n}\r\n\r\n// try splitting polygon into two and triangulate them independently\r\n\r\nfunction splitEarcut( start, triangles, dim, minX, minY, invSize ) {\r\n\r\n    // look for a valid diagonal that divides the polygon into two\r\n\r\n    let a = start;\r\n\r\n    do {\r\n\r\n        let b = a.next.next;\r\n\r\n        while ( b !== a.prev ) {\r\n\r\n            if ( a.i !== b.i && isValidDiagonal( a, b ) ) {\r\n\r\n                // split the polygon in two by the diagonal\r\n\r\n                let c = splitPolygon( a, b );\r\n\r\n                // filter colinear points around the cuts\r\n\r\n                a = filterPoints( a, a.next );\r\n                c = filterPoints( c, c.next );\r\n\r\n                // run earcut on each half\r\n\r\n                earcutLinked( a, triangles, dim, minX, minY, invSize );\r\n                earcutLinked( c, triangles, dim, minX, minY, invSize );\r\n                return;\r\n\r\n            }\r\n\r\n            b = b.next;\r\n\r\n        }\r\n\r\n        a = a.next;\r\n\r\n    } while ( a !== start );\r\n\r\n}\r\n\r\n// link every hole into the outer loop, producing a single-ring polygon without holes\r\n\r\nfunction eliminateHoles( data, holeIndices, outerNode, dim ) {\r\n\r\n    let queue = [], i, len, start, end, list;\r\n\r\n    for ( i = 0, len = holeIndices.length; i < len; i ++ ) {\r\n\r\n        start = holeIndices[ i ] * dim;\r\n        end = i < len - 1 ? holeIndices[ i + 1 ] * dim : data.length;\r\n        list = linkedList( data, start, end, dim, false );\r\n        if ( list === list.next ) { list.steiner = true; }\r\n        queue.push( getLeftmost( list ) );\r\n\r\n    }\r\n\r\n    queue.sort( compareX );\r\n\r\n    // process holes from left to right\r\n\r\n    for ( i = 0; i < queue.length; i ++ ) {\r\n\r\n        eliminateHole( queue[ i ], outerNode );\r\n        outerNode = filterPoints( outerNode, outerNode.next );\r\n\r\n    }\r\n\r\n    return outerNode;\r\n\r\n}\r\n\r\nfunction compareX( a, b ) {\r\n\r\n    return a.x - b.x;\r\n\r\n}\r\n\r\n// find a bridge between vertices that connects hole with an outer ring and and link it\r\n\r\nfunction eliminateHole( hole, outerNode ) {\r\n\r\n    outerNode = findHoleBridge( hole, outerNode );\r\n\r\n    if ( outerNode ) {\r\n\r\n        const b = splitPolygon( outerNode, hole );\r\n\r\n        filterPoints( b, b.next );\r\n\r\n    }\r\n\r\n}\r\n\r\n// David Eberly's algorithm for finding a bridge between hole and outer polygon\r\n\r\nfunction findHoleBridge( hole, outerNode ) {\r\n\r\n    let p = outerNode;\r\n    const hx = hole.x;\r\n    const hy = hole.y;\r\n    let qx = - Infinity;\r\n    let m;\r\n\r\n    // find a segment intersected by a ray from the hole's leftmost point to the left;\r\n    // segment's endpoint with lesser x will be potential connection point\r\n\r\n    do {\r\n\r\n        if ( hy <= p.y && hy >= p.next.y && p.next.y !== p.y ) {\r\n\r\n            const x = p.x + ( hy - p.y ) * ( p.next.x - p.x ) / ( p.next.y - p.y );\r\n\r\n            if ( x <= hx && x > qx ) {\r\n\r\n                qx = x;\r\n\r\n                if ( x === hx ) {\r\n\r\n                    if ( hy === p.y ) { return p; }\r\n                    if ( hy === p.next.y ) { return p.next; }\r\n\r\n                }\r\n\r\n                m = p.x < p.next.x ? p : p.next;\r\n\r\n            }\r\n\r\n        }\r\n\r\n        p = p.next;\r\n\r\n    } while ( p !== outerNode );\r\n\r\n    if ( ! m ) { return null; }\r\n\r\n    if ( hx === qx ) { return m.prev; } // hole touches outer segment; pick lower endpoint\r\n\r\n    // look for points inside the triangle of hole point, segment intersection and endpoint;\r\n    // if there are no points found, we have a valid connection;\r\n    // otherwise choose the point of the minimum angle with the ray as connection point\r\n\r\n    const stop = m;\r\n    const mx = m.x;\r\n    const my = m.y;\r\n    let tanMin = Infinity;\r\n    let tan;\r\n\r\n    p = m.next;\r\n\r\n    while ( p !== stop ) {\r\n\r\n        if ( hx >= p.x && p.x >= mx && hx !== p.x &&\r\n                        pointInTriangle( hy < my ? hx : qx, hy, mx, my, hy < my ? qx : hx, hy, p.x, p.y ) ) {\r\n\r\n            tan = Math.abs( hy - p.y ) / ( hx - p.x ); // tangential\r\n\r\n            if ( ( tan < tanMin || ( tan === tanMin && p.x > m.x ) ) && locallyInside( p, hole ) ) {\r\n\r\n                m = p;\r\n                tanMin = tan;\r\n\r\n            }\r\n\r\n        }\r\n\r\n        p = p.next;\r\n\r\n    }\r\n\r\n    return m;\r\n\r\n}\r\n\r\n// interlink polygon nodes in z-order\r\n\r\nfunction indexCurve( start, minX, minY, invSize ) {\r\n\r\n    let p = start;\r\n\r\n    do {\r\n\r\n        if ( p.z === null ) { p.z = zOrder( p.x, p.y, minX, minY, invSize ); }\r\n        p.prevZ = p.prev;\r\n        p.nextZ = p.next;\r\n        p = p.next;\r\n\r\n    } while ( p !== start );\r\n\r\n    p.prevZ.nextZ = null;\r\n    p.prevZ = null;\r\n\r\n    sortLinked( p );\r\n\r\n}\r\n\r\n// Simon Tatham's linked list merge sort algorithm\r\n// http://www.chiark.greenend.org.uk/~sgtatham/algorithms/listsort.html\r\n\r\nfunction sortLinked( list ) {\r\n\r\n    let i, p, q, e, tail, numMerges, pSize, qSize, inSize = 1;\r\n\r\n    do {\r\n\r\n        p = list;\r\n        list = null;\r\n        tail = null;\r\n        numMerges = 0;\r\n\r\n        while ( p ) {\r\n\r\n            numMerges ++;\r\n            q = p;\r\n            pSize = 0;\r\n\r\n            for ( i = 0; i < inSize; i ++ ) {\r\n\r\n                pSize ++;\r\n                q = q.nextZ;\r\n                if ( ! q ) { break; }\r\n\r\n            }\r\n\r\n            qSize = inSize;\r\n\r\n            while ( pSize > 0 || ( qSize > 0 && q ) ) {\r\n\r\n                if ( pSize !== 0 && ( qSize === 0 || ! q || p.z <= q.z ) ) {\r\n\r\n                    e = p;\r\n                    p = p.nextZ;\r\n                    pSize --;\r\n\r\n                } else {\r\n\r\n                    e = q;\r\n                    q = q.nextZ;\r\n                    qSize --;\r\n\r\n                }\r\n\r\n                if ( tail ) { tail.nextZ = e; } else { list = e; }\r\n\r\n                e.prevZ = tail;\r\n                tail = e;\r\n\r\n            }\r\n\r\n            p = q;\r\n\r\n        }\r\n\r\n        tail.nextZ = null;\r\n        inSize *= 2;\r\n\r\n    } while ( numMerges > 1 );\r\n\r\n    return list;\r\n\r\n}\r\n\r\n// z-order of a point given coords and inverse of the longer side of data bbox\r\n\r\nfunction zOrder( x, y, minX, minY, invSize ) {\r\n\r\n    // coords are transformed into non-negative 15-bit integer range\r\n\r\n    x = 32767 * ( x - minX ) * invSize;\r\n    y = 32767 * ( y - minY ) * invSize;\r\n\r\n    x = ( x | ( x << 8 ) ) & 0x00FF00FF;\r\n    x = ( x | ( x << 4 ) ) & 0x0F0F0F0F;\r\n    x = ( x | ( x << 2 ) ) & 0x33333333;\r\n    x = ( x | ( x << 1 ) ) & 0x55555555;\r\n\r\n    y = ( y | ( y << 8 ) ) & 0x00FF00FF;\r\n    y = ( y | ( y << 4 ) ) & 0x0F0F0F0F;\r\n    y = ( y | ( y << 2 ) ) & 0x33333333;\r\n    y = ( y | ( y << 1 ) ) & 0x55555555;\r\n\r\n    return x | ( y << 1 );\r\n\r\n}\r\n\r\n// find the leftmost node of a polygon ring\r\n\r\nfunction getLeftmost( start ) {\r\n\r\n    let p = start, leftmost = start;\r\n\r\n    do {\r\n\r\n        if ( p.x < leftmost.x ) { leftmost = p; }\r\n        p = p.next;\r\n\r\n    } while ( p !== start );\r\n\r\n    return leftmost;\r\n\r\n}\r\n\r\n// check if a point lies within a convex triangle\r\n\r\nfunction pointInTriangle( ax, ay, bx, by, cx, cy, px, py ) {\r\n\r\n    return ( cx - px ) * ( ay - py ) - ( ax - px ) * ( cy - py ) >= 0 &&\r\n     ( ax - px ) * ( by - py ) - ( bx - px ) * ( ay - py ) >= 0 &&\r\n     ( bx - px ) * ( cy - py ) - ( cx - px ) * ( by - py ) >= 0;\r\n\r\n}\r\n\r\n// check if a diagonal between two polygon nodes is valid (lies in polygon interior)\r\n\r\nfunction isValidDiagonal( a, b ) {\r\n\r\n    return a.next.i !== b.i && a.prev.i !== b.i && ! intersectsPolygon( a, b ) &&\r\n        locallyInside( a, b ) && locallyInside( b, a ) && middleInside( a, b );\r\n\r\n}\r\n\r\n// signed area of a triangle\r\n\r\nfunction area( p, q, r ) {\r\n\r\n    return ( q.y - p.y ) * ( r.x - q.x ) - ( q.x - p.x ) * ( r.y - q.y );\r\n\r\n}\r\n\r\n// check if two points are equal\r\n\r\nfunction equals( p1, p2 ) {\r\n\r\n    return p1.x === p2.x && p1.y === p2.y;\r\n\r\n}\r\n\r\n// check if two segments intersect\r\n\r\nfunction intersects( p1, q1, p2, q2 ) {\r\n\r\n    if ( ( equals( p1, q1 ) && equals( p2, q2 ) ) ||\r\n            ( equals( p1, q2 ) && equals( p2, q1 ) ) ) { return true; }\r\n\r\n    return area( p1, q1, p2 ) > 0 !== area( p1, q1, q2 ) > 0 &&\r\n                 area( p2, q2, p1 ) > 0 !== area( p2, q2, q1 ) > 0;\r\n\r\n}\r\n\r\n// check if a polygon diagonal intersects any polygon segments\r\n\r\nfunction intersectsPolygon( a, b ) {\r\n\r\n    let p = a;\r\n\r\n    do {\r\n\r\n        if ( p.i !== a.i && p.next.i !== a.i && p.i !== b.i && p.next.i !== b.i &&\r\n                        intersects( p, p.next, a, b ) ) {\r\n\r\n            return true;\r\n\r\n        }\r\n\r\n        p = p.next;\r\n\r\n    } while ( p !== a );\r\n\r\n    return false;\r\n\r\n}\r\n\r\n// check if a polygon diagonal is locally inside the polygon\r\n\r\nfunction locallyInside( a, b ) {\r\n\r\n    return area( a.prev, a, a.next ) < 0 ?\r\n        area( a, b, a.next ) >= 0 && area( a, a.prev, b ) >= 0 :\r\n        area( a, b, a.prev ) < 0 || area( a, a.next, b ) < 0;\r\n\r\n}\r\n\r\n// check if the middle point of a polygon diagonal is inside the polygon\r\n\r\nfunction middleInside( a, b ) {\r\n\r\n    let p = a;\r\n    let inside = false;\r\n    const px = ( a.x + b.x ) / 2;\r\n    const py = ( a.y + b.y ) / 2;\r\n\r\n    do {\r\n\r\n        if ( ( ( p.y > py ) !== ( p.next.y > py ) ) && p.next.y !== p.y &&\r\n                        ( px < ( p.next.x - p.x ) * ( py - p.y ) / ( p.next.y - p.y ) + p.x ) ) {\r\n\r\n            inside = ! inside;\r\n\r\n        }\r\n\r\n        p = p.next;\r\n\r\n    } while ( p !== a );\r\n\r\n    return inside;\r\n\r\n}\r\n\r\n// link two polygon vertices with a bridge; if the vertices belong to the same ring, it splits polygon into two;\r\n// if one belongs to the outer ring and another to a hole, it merges it into a single ring\r\n\r\nfunction splitPolygon( a, b ) {\r\n\r\n    const a2 = new Node( a.i, a.x, a.y ),\r\n        b2 = new Node( b.i, b.x, b.y ),\r\n        an = a.next,\r\n        bp = b.prev;\r\n\r\n    a.next = b;\r\n    b.prev = a;\r\n\r\n    a2.next = an;\r\n    an.prev = a2;\r\n\r\n    b2.next = a2;\r\n    a2.prev = b2;\r\n\r\n    bp.next = b2;\r\n    b2.prev = bp;\r\n\r\n    return b2;\r\n\r\n}\r\n\r\n// create a node and optionally link it with previous one (in a circular doubly linked list)\r\n\r\nfunction insertNode( i, x, y, last ) {\r\n\r\n    const p = new Node( i, x, y );\r\n\r\n    if ( ! last ) {\r\n\r\n        p.prev = p;\r\n        p.next = p;\r\n\r\n    } else {\r\n\r\n        p.next = last.next;\r\n        p.prev = last;\r\n        last.next.prev = p;\r\n        last.next = p;\r\n\r\n    }\r\n\r\n    return p;\r\n\r\n}\r\n\r\nfunction removeNode( p ) {\r\n\r\n    p.next.prev = p.prev;\r\n    p.prev.next = p.next;\r\n\r\n    if ( p.prevZ ) { p.prevZ.nextZ = p.nextZ; }\r\n    if ( p.nextZ ) { p.nextZ.prevZ = p.prevZ; }\r\n\r\n}\r\n\r\nfunction Node( i, x, y ) {\r\n\r\n    // vertice index in coordinates array\r\n    this.i = i;\r\n\r\n    // vertex coordinates\r\n    this.x = x;\r\n    this.y = y;\r\n\r\n    // previous and next vertice nodes in a polygon ring\r\n    this.prev = null;\r\n    this.next = null;\r\n\r\n    // z-order curve value\r\n    this.z = null;\r\n\r\n    // previous and next nodes in z-order\r\n    this.prevZ = null;\r\n    this.nextZ = null;\r\n\r\n    // indicates whether this is a steiner point\r\n    this.steiner = false;\r\n\r\n}\r\n\r\nfunction signedArea( data, start, end, dim ) {\r\n\r\n    let sum = 0;\r\n\r\n    for ( let i = start, j = end - dim; i < end; i += dim ) {\r\n\r\n        sum += ( data[ j ] - data[ i ] ) * ( data[ i + 1 ] + data[ j + 1 ] );\r\n        j = i;\r\n\r\n    }\r\n\r\n    return sum;\r\n\r\n}\r\n\r\nexport { Earcut };\r\n","import * as three from 'three';\r\n\r\nconst EPS = 1e-6;\r\n/**\r\n * Utility functions for threejs.\r\n */\r\n\r\n // Matrices ======================================================================================================\r\n\r\nexport function multVectorMatrix(v: three.Vector3, m: three.Matrix4): three.Vector3 {\r\n    const v2: three.Vector3 = v.clone();\r\n    v2.applyMatrix4(m);\r\n    return v2;\r\n}\r\n\r\nexport function xformMatrix(o: three.Vector3, x: three.Vector3, y: three.Vector3, z: three.Vector3): three.Matrix4 {\r\n    x.normalize();\r\n    y.normalize();\r\n    z.normalize();\r\n    const m1: three.Matrix4 = new three.Matrix4();\r\n    const o_neg: three.Vector3 = o.clone().negate();\r\n    m1.setPosition(o_neg);\r\n    const m2: three.Matrix4 = new three.Matrix4();\r\n    m2.makeBasis(x, y, z);\r\n    m2.getInverse(m2);\r\n    const m3: three.Matrix4 = new three.Matrix4();\r\n    m3.multiplyMatrices(m2, m1);\r\n    return m3;\r\n}\r\n\r\nexport function matrixInv(m: three.Matrix4): three.Matrix4 {\r\n    const m2: three.Matrix4 = new three.Matrix4();\r\n    return m2.getInverse(m);\r\n}\r\n\r\n//  Vectors =======================================================================================================\r\n\r\nexport function subVectors(v1: three.Vector3, v2: three.Vector3, norm: boolean = false): three.Vector3 {\r\n    const v3: three.Vector3 = new three.Vector3();\r\n    v3.subVectors(v1, v2);\r\n    if (norm) {v3.normalize(); }\r\n    return v3;\r\n}\r\n\r\nexport function addVectors(v1: three.Vector3, v2: three.Vector3, norm: boolean = false): three.Vector3 {\r\n    const v3: three.Vector3 = new three.Vector3();\r\n    v3.addVectors(v1, v2);\r\n    if (norm) {v3.normalize(); }\r\n    return v3;\r\n}\r\n\r\nexport function crossVectors(v1: three.Vector3, v2: three.Vector3, norm: boolean = false): three.Vector3 {\r\n    const v3: three.Vector3 = new three.Vector3();\r\n    v3.crossVectors(v1, v2);\r\n    if (norm) {v3.normalize(); }\r\n    return v3;\r\n}\r\n","\r\nimport * as three from 'three';\r\nimport * as threex from './threex';\r\nimport * as earcut from './earcut';\r\nimport { Txyz } from '../geo-info/common';\r\nimport { area } from '../geom/triangle';\r\n\r\n//  3D to 2D ======================================================================================================\r\n\r\n/**\r\n * Function that returns a matrix to transform a set of vertices in 3d space onto the xy plane.\r\n * This function assumes that the vertices are more or less co-planar.\r\n * Returns a set of three Vectors that represent points on the xy plane.\r\n * Returns null if the plane cannot be found, e.g. points are all colinear.\r\n */\r\nfunction _getMatrix(points: three.Vector3[]): three.Matrix4 {\r\n\r\n    // calculate origin\r\n    const o: three.Vector3 = new three.Vector3();\r\n    for (const v of points) {\r\n        o.add(v);\r\n    }\r\n    o.divideScalar(points.length);\r\n\r\n    // find three vectors\r\n    let vx: three.Vector3;\r\n    let vz: three.Vector3;\r\n    let got_vx = false;\r\n    for (let i = 0; i < points.length; i++) {\r\n        if (!got_vx) {\r\n            vx =  threex.subVectors(points[i], o);\r\n            if (vx.lengthSq() !== 0) {got_vx = true; }\r\n        } else {\r\n            vz = threex.crossVectors(vx, threex.subVectors(points[i], o));\r\n            if (vz.lengthSq() !== 0) { break; }\r\n        }\r\n        if (i === points.length - 1) { return null; } // could not find any pair of vectors\r\n    }\r\n    const vy: three.Vector3 =  threex.crossVectors(vz, vx);\r\n\r\n    // create matrix\r\n    vx.normalize();\r\n    vy.normalize();\r\n    vz.normalize();\r\n    const m2: three.Matrix4 = new three.Matrix4();\r\n    m2.makeBasis(vx, vy, vz);\r\n    m2.getInverse(m2);\r\n    return m2;\r\n}\r\n\r\n/**\r\n * Triangulates a set of coords in 3d with holes\r\n * If the coords cannot be triangulated, it returns [].\r\n * @param coords\r\n */\r\nexport function triangulate(coords: Txyz[], holes?: Txyz[][]): number[][] {\r\n\r\n    // check if we have holes\r\n    const has_holes: boolean = (holes !== undefined && holes.length !== 0);\r\n\r\n    // basic case, a triangle with no holes\r\n    if (coords.length === 3 && !has_holes) {\r\n        return [[0, 1, 2]];\r\n    }\r\n\r\n    // basic case, a quad with no holes\r\n    if (coords.length === 4 && !has_holes) {\r\n        // TODO this does not take into account degenerate cases\r\n        // TODO two points in same location\r\n        // TODO Three points that are colinear\r\n        const area1: number = area(coords[0], coords[1], coords[2]) + area(coords[2], coords[3], coords[0]);\r\n        const area2: number = area(coords[0], coords[1], coords[3]) + area(coords[1], coords[2], coords[3]);\r\n        const tri1a: Txyz[] = [coords[0], coords[1], coords[2]];\r\n        const tri1b: Txyz[] = [coords[2], coords[3], coords[0]];\r\n        const tri2a: Txyz[] = [coords[0], coords[1], coords[3]];\r\n        const tri2b: Txyz[] = [coords[1], coords[2], coords[3]];\r\n        if (area1 < area2) {\r\n            return [[0, 1, 2], [2, 3, 0]];\r\n        } else {\r\n            return [[0, 1, 3], [1, 2, 3]];\r\n        }\r\n    }\r\n\r\n    // get the matrix to transform from 2D to 3D\r\n    const coords_v: three.Vector3[] = coords.map( coord => new three.Vector3(...coord));\r\n    const matrix: three.Matrix4 = _getMatrix( coords_v );\r\n\r\n    // check for null, which means no plane could be found\r\n    if (matrix === null) {\r\n        return [];\r\n    }\r\n\r\n    // create an array to store all x y vertex coordinates\r\n    const flat_vert_xys: number[] = [];\r\n\r\n    // get the perimeter vertices and add them to the array\r\n    const coords_v_2d: three.Vector3[] = coords_v.map((coord_v) => threex.multVectorMatrix(coord_v, matrix));\r\n    if (coords_v_2d === undefined || coords_v_2d === null || coords_v_2d.length === 0) {\r\n        console.log('WARNING: triangulation failed.');\r\n        return [];\r\n    }\r\n    coords_v_2d.forEach(coord_v_2d => flat_vert_xys.push(coord_v_2d.x, coord_v_2d.y));\r\n\r\n    // hole vertices uing EARCUT\r\n    // holes is an array of hole indices if any (e.g. [5, 8] for a 12-vertex input would mean \r\n    // one hole with vertices 5–7 and another with 8–11).\r\n    const hole_indices: number[] = [];\r\n    let index_counter: number = coords_v.length;\r\n    if (has_holes) {\r\n        for (const hole of holes) {\r\n            hole_indices.push(index_counter);\r\n            if (hole.length) {\r\n                const hole_coords_v: three.Vector3[] = hole.map( hole_coord => new three.Vector3(...hole_coord));\r\n                const hole_coords_v_2d: three.Vector3[] = hole_coords_v.map((hole_coord_v) =>\r\n                    threex.multVectorMatrix(hole_coord_v, matrix));\r\n                const one_hole: number[] = [];\r\n                hole_coords_v_2d.forEach(hole_coord_v => flat_vert_xys.push(hole_coord_v.x, hole_coord_v.y));\r\n                index_counter += hole.length;\r\n            }\r\n        }\r\n    }\r\n\r\n    // do the triangulation\r\n    const flat_tris_i: number[] = earcut.Earcut.triangulate(flat_vert_xys, hole_indices);\r\n\r\n    // convert the triangles into lists of three\r\n    const tris_i: number[][] = [];\r\n    for (let i = 0; i < flat_tris_i.length; i += 3) {\r\n        tris_i.push([flat_tris_i[i], flat_tris_i[i + 1], flat_tris_i[i + 2]]);\r\n    }\r\n\r\n    // return the list of triangles\r\n    return tris_i;\r\n}\r\n","\r\n\r\n/**\r\n * Remove an item from an array\r\n * @param arr\r\n * @param item\r\n */\r\nexport function arrRem(arr: any[], item: any): void {\r\n    const index: number = arr.indexOf(item);\r\n    if (index === -1) { return; }\r\n    arr.splice(index, 1);\r\n}\r\n\r\n/**\r\n * Add an item to an array in an array\r\n * @param arr\r\n * @param item\r\n */\r\nexport function arrIdxAdd(arr: any[], idx: number, item: any): void {\r\n    if (arr[idx] === undefined || arr[idx] === null) {\r\n        arr[idx] = [];\r\n    }\r\n    arr[idx].push(item);\r\n}\r\n/**\r\n * Remove an item from an array in an array\r\n * @param arr\r\n * @param item\r\n */\r\nexport function arrIdxRem(arr: any[], idx: number, item: any, del_empty: boolean): void {\r\n    if (arr[idx] === undefined || arr[idx] === null) {\r\n        return;\r\n    }\r\n    const rem_index: number = arr[idx].indexOf(item);\r\n    if (rem_index === -1) { return; }\r\n    arr[idx].splice(rem_index, 1);\r\n    if (del_empty && arr[idx].length === 0) {\r\n        delete arr[idx];\r\n    }\r\n}\r\n","/**\r\n * Sort Map by Key, return a Sorted Map\r\n * @param unsortedMap\r\n */\r\nexport function sortByKey(unsortedMap) {\r\n    const keys = [];\r\n    const sortedMap = new Map();\r\n\r\n    unsortedMap.forEach((value, key) => {\r\n        keys.push(key);\r\n    });\r\n\r\n    keys.sort((a, b) => {\r\n        const x = Number(a.substr(2)), y = Number(b.substr(2));\r\n        return ((x < y) ? -1 : ((x > y) ? 1 : 0));\r\n    }).map(function(key) {\r\n        sortedMap.set(key, unsortedMap.get(key));\r\n    });\r\n    return sortedMap;\r\n}","// The file contents for the current environment will overwrite these during build.\r\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\r\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\r\n// The list of which env maps to which file can be found in `.angular-cli.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n","// IMPORTANT: THIS FILE IS AUTO GENERATED! DO NOT MANUALLY EDIT OR CHECKIN!\r\n/* tslint:disable */\r\nexport const VERSION = {\r\n    \"dirty\": false,\r\n    \"raw\": \"44c24d8\",\r\n    \"hash\": \"44c24d8\",\r\n    \"distance\": null,\r\n    \"tag\": null,\r\n    \"semver\": null,\r\n    \"suffix\": \"44c24d8\",\r\n    \"semverString\": null,\r\n    \"version\": \"0.4.23\"\r\n};\r\n/* tslint:enable */\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/appmodule/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nwindow['CESIUM_BASE_URL'] = 'assets/cesium';\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n"],"sourceRoot":""}