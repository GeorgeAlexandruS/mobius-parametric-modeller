(window["webpackJsonp"] = window["webpackJsonp"] || []).push([["main"],{

/***/ "./src/$$_lazy_route_resource lazy recursive":
/*!**********************************************************!*\
  !*** ./src/$$_lazy_route_resource lazy namespace object ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function webpackEmptyAsyncContext(req) {
	// Here Promise.resolve().then() is used instead of new Promise() to prevent
	// uncaught exception popping up in devtools
	return Promise.resolve().then(function() {
		var e = new Error("Cannot find module '" + req + "'");
		e.code = 'MODULE_NOT_FOUND';
		throw e;
	});
}
webpackEmptyAsyncContext.keys = function() { return []; };
webpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;
module.exports = webpackEmptyAsyncContext;
webpackEmptyAsyncContext.id = "./src/$$_lazy_route_resource lazy recursive";

/***/ }),

/***/ "./src/app/appmodule/app-routing.module.ts":
/*!*************************************************!*\
  !*** ./src/app/appmodule/app-routing.module.ts ***!
  \*************************************************/
/*! exports provided: AppRoutingModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AppRoutingModule", function() { return AppRoutingModule; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var _views__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @views */ "./src/app/views/index.ts");
/**/
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};



var appRoutes = [
    { path: 'flowchart', loadChildren: function () { return _views__WEBPACK_IMPORTED_MODULE_2__["ViewFlowchartModule"]; } },
    { path: 'gallery', loadChildren: function () { return _views__WEBPACK_IMPORTED_MODULE_2__["ViewGalleryModule"]; } },
    { path: 'dashboard', loadChildren: function () { return _views__WEBPACK_IMPORTED_MODULE_2__["ViewDashboardModule"]; } },
    { path: 'editor', loadChildren: function () { return _views__WEBPACK_IMPORTED_MODULE_2__["ViewEditorModule"]; } },
    { path: '', redirectTo: '/gallery', pathMatch: 'full' },
    { path: '**', component: _views__WEBPACK_IMPORTED_MODULE_2__["ViewGalleryModule"] }
];
var AppRoutingModule = /** @class */ (function () {
    function AppRoutingModule() {
    }
    AppRoutingModule = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["NgModule"])({
            imports: [
                _angular_router__WEBPACK_IMPORTED_MODULE_1__["RouterModule"].forRoot(appRoutes, { enableTracing: false } // <-- debugging purposes only
                )
            ],
            exports: [
                _angular_router__WEBPACK_IMPORTED_MODULE_1__["RouterModule"]
            ]
        })
    ], AppRoutingModule);
    return AppRoutingModule;
}());



/***/ }),

/***/ "./src/app/appmodule/app.component.html":
/*!**********************************************!*\
  !*** ./src/app/appmodule/app.component.html ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<router-outlet></router-outlet>"

/***/ }),

/***/ "./src/app/appmodule/app.component.scss":
/*!**********************************************!*\
  !*** ./src/app/appmodule/app.component.scss ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcG1vZHVsZS9hcHAuY29tcG9uZW50LnNjc3MifQ== */"

/***/ }),

/***/ "./src/app/appmodule/app.component.ts":
/*!********************************************!*\
  !*** ./src/app/appmodule/app.component.ts ***!
  \********************************************/
/*! exports provided: AppComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AppComponent", function() { return AppComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _services__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @services */ "./src/app/core/services/index.ts");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/material */ "./node_modules/@angular/material/esm5/material.es5.js");
/* harmony import */ var _angular_platform_browser__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/platform-browser */ "./node_modules/@angular/platform-browser/fesm5/platform-browser.js");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};




// @ts-ignore
console.stdlog = console.log.bind(console);
// @ts-ignore
console.logs = [];
// @ts-ignore
console.log = function () {
    // @ts-ignore
    console.logs.push(Array.from(arguments));
    // @ts-ignore
    console.stdlog.apply(console, arguments);
};
var AppComponent = /** @class */ (function () {
    function AppComponent(dataService, injector, matIconRegistry, domSanitizer) {
        this.dataService = dataService;
        this.injector = injector;
        this.matIconRegistry = matIconRegistry;
        this.domSanitizer = domSanitizer;
        this.matIconRegistry.addSvgIcon('c3D Viewer', this.domSanitizer.bypassSecurityTrustResourceUrl('assets/Icons/3D.svg'));
        this.matIconRegistry.addSvgIcon('cConsole', this.domSanitizer.bypassSecurityTrustResourceUrl('assets/Icons/Console.svg'));
        this.matIconRegistry.addSvgIcon('cHelp', this.domSanitizer.bypassSecurityTrustResourceUrl('assets/Icons/Help.svg'));
        this.matIconRegistry.addSvgIcon('cSummary', this.domSanitizer.bypassSecurityTrustResourceUrl('assets/Icons/Summary.svg'));
        this.matIconRegistry.addSvgIcon('cZoom', this.domSanitizer.bypassSecurityTrustResourceUrl('assets/Icons/Zoom.svg'));
        this.matIconRegistry.addSvgIcon('cfv', this.domSanitizer.bypassSecurityTrustResourceUrl('assets/Icons/Mobius favicon.svg'));
        this.matIconRegistry.addSvgIcon('cMenu', this.domSanitizer.bypassSecurityTrustResourceUrl('assets/Icons/Three Lines Menu.svg'));
        this.matIconRegistry.addSvgIcon('cGallery', this.domSanitizer.bypassSecurityTrustResourceUrl('assets/Icons/Home.svg'));
        this.matIconRegistry.addSvgIcon('cDashboard', this.domSanitizer.bypassSecurityTrustResourceUrl('assets/Icons/Dashboard.svg'));
        this.matIconRegistry.addSvgIcon('cFlowchart', this.domSanitizer.bypassSecurityTrustResourceUrl('assets/Icons/Flowchart.svg'));
        this.matIconRegistry.addSvgIcon('cEditor', this.domSanitizer.bypassSecurityTrustResourceUrl('assets/Icons/Node.svg'));
    }
    AppComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'app-root',
            template: __webpack_require__(/*! ./app.component.html */ "./src/app/appmodule/app.component.html"),
            styles: [__webpack_require__(/*! ./app.component.scss */ "./src/app/appmodule/app.component.scss")]
        }),
        __metadata("design:paramtypes", [_services__WEBPACK_IMPORTED_MODULE_1__["DataService"], _angular_core__WEBPACK_IMPORTED_MODULE_0__["Injector"],
            _angular_material__WEBPACK_IMPORTED_MODULE_2__["MatIconRegistry"], _angular_platform_browser__WEBPACK_IMPORTED_MODULE_3__["DomSanitizer"]])
    ], AppComponent);
    return AppComponent;
}());



/***/ }),

/***/ "./src/app/appmodule/app.module.ts":
/*!*****************************************!*\
  !*** ./src/app/appmodule/app.module.ts ***!
  \*****************************************/
/*! exports provided: AppModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AppModule", function() { return AppModule; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_platform_browser__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/platform-browser */ "./node_modules/@angular/platform-browser/fesm5/platform-browser.js");
/* harmony import */ var _angular_platform_browser_animations__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/platform-browser/animations */ "./node_modules/@angular/platform-browser/fesm5/animations.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm5/forms.js");
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/common/http */ "./node_modules/@angular/common/fesm5/http.js");
/* harmony import */ var _services__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @services */ "./src/app/core/services/index.ts");
/* harmony import */ var _model_viewers_all_viewers_gi_viewer_data_data_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../model-viewers/all-viewers/gi-viewer/data/data.service */ "./src/app/model-viewers/all-viewers/gi-viewer/data/data.service.ts");
/* harmony import */ var _core_core_module__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../core/core.module */ "./src/app/core/core.module.ts");
/* harmony import */ var _shared_shared_module__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @shared/shared.module */ "./src/app/shared/shared.module.ts");
/* harmony import */ var _app_component__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./app.component */ "./src/app/appmodule/app.component.ts");
/* harmony import */ var _views__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @views */ "./src/app/views/index.ts");
/* harmony import */ var _app_routing_module__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./app-routing.module */ "./src/app/appmodule/app-routing.module.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
// import @angular stuff





// import app services


// import app modules


// import { AppRoutingModule } from './app-routing.module';
// import app components



// import { WebWorkerService } from 'ngx-web-worker';
/**
 * AppModule, the root module for the whole app.
 */
var AppModule = /** @class */ (function () {
    /**
     * constructor
     */
    function AppModule() {
        // Do nothing
    }
    AppModule = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["NgModule"])({
            declarations: [
                _app_component__WEBPACK_IMPORTED_MODULE_9__["AppComponent"],
            ],
            imports: [
                _angular_platform_browser__WEBPACK_IMPORTED_MODULE_1__["BrowserModule"],
                _angular_platform_browser_animations__WEBPACK_IMPORTED_MODULE_2__["BrowserAnimationsModule"],
                _angular_common_http__WEBPACK_IMPORTED_MODULE_4__["HttpClientModule"],
                _angular_forms__WEBPACK_IMPORTED_MODULE_3__["FormsModule"],
                _app_routing_module__WEBPACK_IMPORTED_MODULE_11__["AppRoutingModule"],
                _core_core_module__WEBPACK_IMPORTED_MODULE_7__["CoreModule"],
                _views__WEBPACK_IMPORTED_MODULE_10__["ViewGalleryModule"],
                _views__WEBPACK_IMPORTED_MODULE_10__["ViewEditorModule"],
                _views__WEBPACK_IMPORTED_MODULE_10__["ViewDashboardModule"],
                _views__WEBPACK_IMPORTED_MODULE_10__["ViewFlowchartModule"],
                _shared_shared_module__WEBPACK_IMPORTED_MODULE_8__["SharedModule"],
            ],
            entryComponents: [
                _views__WEBPACK_IMPORTED_MODULE_10__["ViewEditorComponent"],
                _views__WEBPACK_IMPORTED_MODULE_10__["ViewDashboardComponent"],
                _views__WEBPACK_IMPORTED_MODULE_10__["ViewFlowchartComponent"],
                _views__WEBPACK_IMPORTED_MODULE_10__["ViewGalleryComponent"],
            ],
            providers: [_services__WEBPACK_IMPORTED_MODULE_5__["DataService"], _model_viewers_all_viewers_gi_viewer_data_data_service__WEBPACK_IMPORTED_MODULE_6__["DataService"]],
            bootstrap: [_app_component__WEBPACK_IMPORTED_MODULE_9__["AppComponent"]]
        }),
        __metadata("design:paramtypes", [])
    ], AppModule);
    return AppModule;
}());



/***/ }),

/***/ "./src/app/core/core.module.ts":
/*!*************************************!*\
  !*** ./src/app/core/core.module.ts ***!
  \*************************************/
/*! exports provided: CoreModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CoreModule", function() { return CoreModule; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _services__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @services */ "./src/app/core/services/index.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (undefined && undefined.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
/*
 *  This module is to be imported ONLY by the AppModule
 *  Contains all global services
 *
 */


var CoreModule = /** @class */ (function () {
    function CoreModule(core) {
        /// Prevents any module apart from AppModule from re-importing
        if (core) {
            throw new Error('Core Module has already been imported');
        }
    }
    CoreModule = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["NgModule"])({
            imports: [],
            declarations: [],
            providers: [_services__WEBPACK_IMPORTED_MODULE_1__["DataService"], _services__WEBPACK_IMPORTED_MODULE_1__["ViewerService"]],
            exports: [],
            entryComponents: []
        }),
        __param(0, Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Optional"])()), __param(0, Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["SkipSelf"])()),
        __metadata("design:paramtypes", [CoreModule])
    ], CoreModule);
    return CoreModule;
}());



/***/ }),

/***/ "./src/app/core/modules/_check_args.ts":
/*!*********************************************!*\
  !*** ./src/app/core/modules/_check_args.ts ***!
  \*********************************************/
/*! exports provided: checkAttribNameValue, checkCommTypes, checkIDs, checkIDnTypes */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "checkAttribNameValue", function() { return checkAttribNameValue; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "checkCommTypes", function() { return checkCommTypes; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "checkIDs", function() { return checkIDs; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "checkIDnTypes", function() { return checkIDnTypes; });
/* harmony import */ var _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @libs/geo-info/common */ "./src/libs/geo-info/common.ts");
/* harmony import */ var _libs_geo_info_id__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @libs/geo-info/id */ "./src/libs/geo-info/id.ts");

// import { isDim0, isDim1, isDim2 } from '@libs/geo-info/id';

// =========================================================================================================================================
// Attribute Checks
// =========================================================================================================================================
function isValidName(fn_name, arg_name, arg) {
    typeCheckObj.isString(fn_name, arg_name, arg); // check arg is string
    if (arg.length === 0) {
        throw new Error(fn_name + ': ' + arg_name + ' not specified');
    }
    if (arg.search(/\W/) !== -1) {
        throw new Error(fn_name + ': ' + arg_name + ' contains restricted characters');
    }
    if (arg[0].search(/[0-9]/) !== -1) {
        throw new Error(fn_name + ': ' + arg_name + ' should not start with numbers');
    }
    return;
}
function checkAttribNameValue(fn_name, attrib_name, attrib_value, attrib_index) {
    isValidName(fn_name, 'attrib_name', attrib_name);
    // blocks writing to id
    if (attrib_name === 'id') {
        throw new Error(fn_name + ': id is not modifiable!');
    }
    // -- check defined index
    var ind = false;
    if (attrib_index !== null && attrib_index !== undefined) {
        ind = true;
        // check if index is number
        typeCheckObj.isNumber(fn_name, 'attrib_index', attrib_index);
    }
    // -- check blocked name
    var blk_att_nm_lst = Object.values(_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EAttribNames"]);
    var blocked = false;
    var isTexture = false;
    var isName = false;
    for (var i = 0; i < blk_att_nm_lst.length; i++) {
        if (attrib_name === 'texture') {
            isTexture = true;
            blocked = true;
            break;
        }
        if (attrib_name === 'name') {
            isName = true;
            blocked = true;
            break;
        }
        if (attrib_name === blk_att_nm_lst[i]) {
            blocked = true;
            break;
        }
    }
    var check_fns = [];
    if (attrib_value !== null && attrib_value !== undefined) {
        if (blocked === true) {
            var pass = false;
            var err_arr = [fn_name + ': ' + 'attrib_name is one of the reserved attribute names - '
                    + Object.values(_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EAttribNames"]).toString() + '\n'];
            if (isName) {
                try {
                    isValidName(fn_name, 'attrib_value', attrib_value);
                    pass = true;
                }
                catch (err) {
                    err_arr.push(err);
                }
            }
            else {
                if (ind === false) {
                    try {
                        isListArg(fn_name, 'attrib_value', attrib_value, 'numbers');
                        var chkLstLen = void 0;
                        if (isTexture) {
                            chkLstLen = 2;
                        }
                        else {
                            chkLstLen = 3;
                        }
                        isListLenArg(fn_name, 'attrib_value', attrib_value, chkLstLen);
                    }
                    catch (err) {
                        err_arr.push(err.message);
                        throw new Error(err_arr.join(''));
                    }
                    check_fns = ['isNumberList'];
                    for (var i = 0; i < check_fns.length; i++) {
                        try {
                            typeCheckObj[check_fns[i]](fn_name + '.' + check_fns[i], 'attrib_value', attrib_value);
                        }
                        catch (err) {
                            err_arr.push(err.message + '\n');
                            continue;
                        }
                        pass = true;
                        break; // passed
                    }
                }
                else {
                    if (isTexture) {
                        if (attrib_index > 1 || attrib_index < 0) {
                            err_arr.push(fn_name + '.validIndex: attrib_index is not between 0 and 1 (inclusive)');
                            throw new Error(err_arr.join(''));
                        }
                    }
                    else {
                        if (attrib_index > 2 || attrib_index < 0) {
                            err_arr.push(fn_name + '.validIndex: attrib_index is not between 0 and 2 (inclusive)');
                            throw new Error(err_arr.join(''));
                        }
                    }
                    check_fns = ['isNumber'];
                    for (var i = 0; i < check_fns.length; i++) {
                        try {
                            typeCheckObj[check_fns[i]](fn_name + '[' + attrib_index + ']' + '.' + check_fns[i], 'attrib_value', attrib_value);
                        }
                        catch (err) {
                            err_arr.push(err.message + '\n');
                            continue;
                        }
                        pass = true;
                        break; // passed
                    }
                }
            }
            if (pass === false) {
                throw new Error(err_arr.join(''));
            }
        }
        else {
            if (ind === false) {
                checkCommTypes(fn_name, 'attrib_value', attrib_value, ['isString', 'isNumber', 'isStringList', 'isNumberList']);
            }
            else { // no nested lists
                checkCommTypes(fn_name + '[' + attrib_index + ']', 'attrib_value', attrib_value, ['isString', 'isNumber']);
            }
        }
    }
    return;
}
// =========================================================================================================================================
// Function Dictionaries
// =========================================================================================================================================
var typeCheckObj = {
    // entities: Check if string
    isEntity: function (fn_name, arg_name, arg) {
        isStringArg(fn_name, arg_name, arg, 'entity');
        if (arg.slice(2).length === 0) {
            throw new Error(fn_name + ': ' + arg_name + ' needs to have an index specified');
        }
        return;
    },
    isEntityList: function (fn_name, arg_name, arg_list) {
        isStringListArg(fn_name, arg_name, arg_list, 'entity');
        return;
    },
    // any: to catch undefined
    isAny: function (fn_name, arg_name, arg) {
        isAnyArg(fn_name, arg_name, arg);
        return;
    },
    // list
    isList: function (fn_name, arg_name, arg) {
        isListArg(fn_name, arg_name, arg, 'any');
        return;
    },
    // strings
    isString: function (fn_name, arg_name, arg) {
        isStringArg(fn_name, arg_name, arg, 'string');
        return;
    },
    isStringList: function (fn_name, arg_name, arg_list) {
        isStringListArg(fn_name, arg_name, arg_list, 'string');
        return;
    },
    // numbers and special numbers
    isNumber: function (fn_name, arg_name, arg) {
        isNumberArg(fn_name, arg_name, arg);
        return;
    },
    isNumberList: function (fn_name, arg_name, arg_list) {
        isNumberListArg(fn_name, arg_name, arg_list);
        return;
    },
    isInt: function (fn_name, arg_name, arg) {
        isIntArg(fn_name, arg_name, arg);
        return;
    },
    isXYlist: function (fn_name, arg_name, arg_list) {
        isListArg(fn_name, arg_name, arg_list, 'numbers');
        isListLenArg(fn_name, arg_name, arg_list, 2);
        isNumberListArg(fn_name, arg_name, arg_list);
        return;
    },
    isXYlistInt: function (fn_name, arg_name, arg_list) {
        isListArg(fn_name, arg_name, arg_list, 'integers');
        isListLenArg(fn_name, arg_name, arg_list, 2);
        isIntListArg(fn_name, arg_name, arg_list);
        return;
    },
    isXYZlist: function (fn_name, arg_name, arg_list) {
        typeCheckObj.isCoord(fn_name, arg_name, arg_list);
        return;
    },
    // Other Geometry
    isCoord: function (fn_name, arg_name, arg) {
        isListArg(fn_name, arg_name, arg, 'numbers');
        isListLenArg(fn_name, arg_name, arg, 3);
        isNumberListArg(fn_name, arg_name, arg);
        return;
    },
    isCoordList: function (fn_name, arg_name, arg_list) {
        isListArg(fn_name, arg_name, arg_list, 'coordinates');
        for (var i = 0; i < arg_list.length; i++) {
            isListLenArg(fn_name, arg_name + '[' + i + ']', arg_list[i], 3);
            isNumberListArg(fn_name, arg_name + '[' + i + ']', arg_list[i]);
        }
        return;
    },
    isVector: function (fn_name, arg_name, arg_list) {
        typeCheckObj.isCoord(fn_name, arg_name, arg_list);
        return;
    },
    isVectorList: function (fn_name, arg_name, arg_list) {
        // Add if required
    },
    isOrigin: function (fn_name, arg_name, arg) {
        return checkIDnTypes(fn_name, arg_name, arg, ['isID', 'isCoord'], ['POSI', 'VERT', 'POINT']);
    },
    isPlane: function (fn_name, arg_name, arg_list) {
        // one origin: point, posi, vert, coord + 2 vectors
        isListArg(fn_name, arg_name, arg_list, 'origin and vectors');
        isListLenArg(fn_name, arg_name, arg_list, 3);
        typeCheckObj.isCoord(fn_name, arg_name + '[0]', arg_list[0]);
        [1, 2].forEach(function (i) {
            typeCheckObj.isVector(fn_name, arg_name + '[' + i + ']', arg_list[i]);
        });
        return;
    },
    isPlaneList: function (fn_name, arg_name, arg_list) {
        // Add if required
    },
    isRay: function (fn_name, arg_name, arg_list) {
        isListArg(fn_name, arg_name, arg_list, 'origin and vector');
        isListLenArg(fn_name, arg_name, arg_list, 2);
        typeCheckObj.isCoord(fn_name, arg_name + '[0]', arg_list[0]);
        typeCheckObj.isVector(fn_name, arg_name + '[1]', arg_list[1]);
        return;
    }
};
var IDcheckObj = {
    // IDs
    // entity types
    // POSI, TRI, VERT, EDGE, WIRE, FACE, POINT, PLINE, PGON, COLL
    isID: function (fn_name, arg_name, arg, ent_type_strs) {
        typeCheckObj.isEntity(fn_name, arg_name, arg); // check is valid id
        var ent_arr = Object(_libs_geo_info_id__WEBPACK_IMPORTED_MODULE_1__["idsBreak"])(arg); // split
        if (ent_type_strs === null) {
            ent_type_strs = ['POSI', 'TRI', 'VERT', 'EDGE', 'WIRE', 'FACE', 'POINT', 'PLINE', 'PGON', 'COLL'];
        }
        var pass = false;
        for (var i = 0; i < ent_type_strs.length; i++) {
            if (ent_arr[0] === _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"][ent_type_strs[i]]) {
                pass = true;
                break;
            }
        }
        if (pass === false) {
            throw new Error(fn_name + ': ' + arg_name + ' is not one of the following valid types - ' + ent_type_strs.toString());
        }
        return ent_arr;
    },
    isIDList: function (fn_name, arg_name, arg_list, ent_type_strs) {
        typeCheckObj.isEntityList(fn_name, arg_name, arg_list); // check is valid id list
        var ent_arr_lst = Object(_libs_geo_info_id__WEBPACK_IMPORTED_MODULE_1__["idsBreak"])(arg_list); // split
        if (ent_type_strs === null) {
            ent_type_strs = ['POSI', 'TRI', 'VERT', 'EDGE', 'WIRE', 'FACE', 'POINT', 'PLINE', 'PGON', 'COLL'];
        }
        var _loop_1 = function (i) {
            var pass = false;
            for (var j = 0; j < ent_type_strs.length; j++) {
                if (ent_arr_lst[i][0] === _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"][ent_type_strs[j]]) {
                    pass = true;
                    break;
                }
            }
            if (pass === false) {
                var ret_str_arr_1 = [];
                ent_type_strs.forEach(function (test_ent) {
                    ret_str_arr_1.push(test_ent + '_list');
                });
                throw new Error(fn_name + ': ' + arg_name + '[' + i + ']' + ' is not one of the following valid types - '
                    + ret_str_arr_1.toString());
            }
        };
        for (var i = 0; i < ent_arr_lst.length; i++) {
            _loop_1(i);
        }
        return ent_arr_lst;
    },
    isIDList_list: function (fn_name, arg_name, arg_list, ent_type_strs) {
        var ret_arr = [];
        for (var i = 0; i < arg_list.length; i++) {
            ret_arr.push(IDcheckObj.isIDList(fn_name, arg_name + '[' + i + ']', arg_list[i], ent_type_strs));
        }
        return ret_arr;
    },
};
// =========================================================================================================================================
// Specific Checks
// =========================================================================================================================================
function checkCommTypes(fn_name, arg_name, arg, check_fns) {
    var pass = false;
    var err_arr = [];
    var ret;
    for (var i = 0; i < check_fns.length; i++) {
        try {
            ret = typeCheckObj[check_fns[i]](fn_name + '.' + check_fns[i], arg_name, arg);
        }
        catch (err) {
            err_arr.push(err.message + '\n');
            continue;
        }
        pass = true;
        break; // passed
    }
    if (pass === false) { // Failed all tests: argument does not fall into any valid types
        var ret_msg = fn_name + ': ' + arg_name + ' failed the following tests - ' + check_fns.toString() + '\n';
        throw new Error(ret_msg + err_arr.join(''));
    }
    return ret;
}
function checkIDs(fn_name, arg_name, arg, check_fns, IDchecks) {
    var pass = false;
    var err_arr = [];
    var ret;
    for (var i = 0; i < check_fns.length; i++) {
        try {
            ret = IDcheckObj[check_fns[i]](fn_name + '.' + check_fns[i], arg_name, arg, IDchecks);
        }
        catch (err) {
            err_arr.push(err.message + '\n');
            continue;
        }
        pass = true;
        break; // passed
    }
    if (pass === false) { // Failed all tests: argument does not fall into any valid types
        var ret_msg = fn_name + ': ' + arg_name + ' failed the following tests - ' + check_fns.toString() + '\n';
        throw new Error(ret_msg + err_arr.join(''));
    }
    return ret; // returns TEntTypeIdx|TEntTypeIdx[]|TEntTypeIdx[][]; depends on which passes
}
// =========================================================================================================================================
// Most General Check
// =========================================================================================================================================
function checkIDnTypes(fn_name, arg_name, arg, check_fns, IDchecks) {
    var pass = false;
    var err_arr = [];
    var ret;
    for (var i = 0; i < check_fns.length; i++) {
        if (Object.keys(IDcheckObj).includes(check_fns[i])) {
            // checking for ID
            try {
                ret = IDcheckObj[check_fns[i]](fn_name + '.' + check_fns[i], arg_name, arg, IDchecks);
            }
            catch (err) {
                err_arr.push(err.message + '\n');
                continue;
            }
            pass = true;
            break; // passed
        }
        else {
            // checking common types
            try {
                typeCheckObj[check_fns[i]](fn_name + '.' + check_fns[i], arg_name, arg);
            }
            catch (err) {
                err_arr.push(err.message + '\n');
                continue;
            }
            pass = true;
            break; // passed
        }
    }
    if (pass === false) { // Failed all tests: argument does not fall into any valid types
        var ret_msg = fn_name + ': ' + arg_name + ' failed the following tests - ' + check_fns.toString() + '\n';
        throw new Error(ret_msg + err_arr.join(''));
    }
    return ret; // returns void|TEntTypeIdx|TEntTypeIdx[]|TEntTypeIdx[][]; depends on which passes
}
// =====================================================================================================================
// util
// =====================================================================================================================
// List
function isListArg(fn_name, arg_name, arg, typ) {
    if (!Array.isArray(arg)) {
        throw new Error(fn_name + ': ' + arg_name + ' is not a list of ' + typ);
    }
    return;
}
function isListLenArg(fn_name, arg_name, arg_list, len) {
    if (arg_list.length !== len) {
        throw new Error(fn_name + ': ' + arg_name + ' is not a list of length ' + len);
    }
    return;
}
// Any
function isAnyArg(fn_name, arg_name, arg) {
    if (arg === undefined) {
        throw new Error(fn_name + ': ' + arg_name + ' must be defined');
    }
    return;
}
// String
function isStringArg(fn_name, arg_name, arg, typ) {
    if (typeof arg !== 'string') {
        throw new Error(fn_name + ': ' + arg_name + ' is not a ' + typ);
    }
    return;
}
function isStringListArg(fn_name, arg_name, arg_list, typ) {
    isListArg(fn_name, arg_name, arg_list, typ);
    for (var i = 0; i < arg_list.length; i++) {
        isStringArg(fn_name, arg_name + '[' + i + ']', arg_list[i], typ);
        if (arg_list[i].slice(2).length === 0) {
            throw new Error(fn_name + ': ' + arg_name + '[' + i + ']' + ' needs to have an index specified');
        }
    }
    return;
}
// Numbers
function isNumberArg(fn_name, arg_name, arg) {
    if (typeof arg !== 'number') {
        throw new Error(fn_name + ': ' + arg_name + ' is not a number');
    }
    return;
}
function isNumberListArg(fn_name, arg_name, arg_list) {
    isListArg(fn_name, arg_name, arg_list, 'numbers');
    for (var i = 0; i < arg_list.length; i++) {
        if (typeof arg_list[i] !== 'number') {
            throw new Error(fn_name + ': ' + arg_name + '[' + i + ']' + ' is not a number');
        }
    }
    return;
}
function isIntArg(fn_name, arg_name, arg) {
    if (!Number.isInteger(arg)) {
        throw new Error(fn_name + ': ' + arg_name + ' is not an integer');
    }
    return;
}
function isIntListArg(fn_name, arg_name, arg_list) {
    isListArg(fn_name, arg_name, arg_list, 'integers');
    for (var i = 0; i < arg_list.length; i++) {
        if (!Number.isInteger(arg_list[i])) {
            throw new Error(fn_name + ': ' + arg_name + '[' + i + ']' + ' is not an integer');
        }
    }
    return;
}


/***/ }),

/***/ "./src/app/core/modules/_constants.ts":
/*!********************************************!*\
  !*** ./src/app/core/modules/_constants.ts ***!
  \********************************************/
/*! exports provided: XY, YZ, ZX, YX, ZY, XZ */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "XY", function() { return XY; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "YZ", function() { return YZ; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ZX", function() { return ZX; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "YX", function() { return YX; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ZY", function() { return ZY; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "XZ", function() { return XZ; });
/* harmony import */ var _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @libs/geo-info/common */ "./src/libs/geo-info/common.ts");

var XY = _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["XYPLANE"];
var YZ = _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["YZPLANE"];
var ZX = _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["ZXPLANE"];
var YX = _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["YXPLANE"];
var ZY = _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["ZYPLANE"];
var XZ = _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["XZPLANE"];


/***/ }),

/***/ "./src/app/core/modules/_conversion.ts":
/*!*********************************************!*\
  !*** ./src/app/core/modules/_conversion.ts ***!
  \*********************************************/
/*! exports provided: radToDeg, degToRad */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "radToDeg", function() { return radToDeg; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "degToRad", function() { return degToRad; });
function radToDeg(rad) {
    return rad * (180 / Math.PI);
}
function degToRad(deg) {
    return deg * (Math.PI / 180);
}


/***/ }),

/***/ "./src/app/core/modules/_list.ts":
/*!***************************************!*\
  !*** ./src/app/core/modules/_list.ts ***!
  \***************************************/
/*! exports provided: range, length, shuffle, zip, zip2 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "range", function() { return range; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "length", function() { return length; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "shuffle", function() { return shuffle; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "zip", function() { return zip; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "zip2", function() { return zip2; });
/**
 * list functions that obtain and return information from an input list. Does not modify input list.
 */
function range(min, max) {
    if (min === undefined) {
        throw new Error('Invalid arg: min must be defined.');
    }
    if (max === undefined) {
        throw new Error('Invalid arg: max must be defined.');
    }
    var len = max - min;
    if (len <= 0) {
        return [];
    }
    return Array.apply(0, new Array(len)).map(function (v, i) { return i + min; });
}
function length(list) {
    if (list === undefined) {
        throw new Error('Invalid arg: list must be defined.');
    }
    return list.length;
}
function shuffle(list) {
    var new_list = list.slice();
    new_list.sort(function () { return .5 - Math.random(); });
    return new_list;
}
function zip(lists) {
    var shortest = lists.length === 0 ? [] : lists.reduce(function (a, b) {
        return a.length < b.length ? a : b;
    });
    return shortest.map(function (_, i) { return lists.map(function (array) { return array[i]; }); });
}
function zip2(lists) {
    var longest = lists.length === 0 ? [] : lists.reduce(function (a, b) {
        return a.length > b.length ? a : b;
    });
    return longest.map(function (_, i) { return lists.map(function (array) { return array[i]; }); });
}


/***/ }),

/***/ "./src/app/core/modules/_mathjs.ts":
/*!*****************************************!*\
  !*** ./src/app/core/modules/_mathjs.ts ***!
  \*****************************************/
/*! exports provided: boolean, number, string, mad, mean, median, mode, prod, std, vari, sum, hypot, norm, mod, square, cube, distance, random, randomInt, pickRandom */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "boolean", function() { return boolean; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "number", function() { return number; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "string", function() { return string; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "mad", function() { return mad; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "mean", function() { return mean; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "median", function() { return median; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "mode", function() { return mode; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "prod", function() { return prod; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "std", function() { return std; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "vari", function() { return vari; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sum", function() { return sum; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "hypot", function() { return hypot; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "norm", function() { return norm; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "mod", function() { return mod; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "square", function() { return square; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "cube", function() { return cube; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "distance", function() { return distance; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "random", function() { return random; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "randomInt", function() { return randomInt; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "pickRandom", function() { return pickRandom; });
/* harmony import */ var mathjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! mathjs */ "./node_modules/mathjs/index.js");
/* harmony import */ var mathjs__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(mathjs__WEBPACK_IMPORTED_MODULE_0__);

var boolean = mathjs__WEBPACK_IMPORTED_MODULE_0__["boolean"];
var number = mathjs__WEBPACK_IMPORTED_MODULE_0__["number"];
var string = mathjs__WEBPACK_IMPORTED_MODULE_0__["string"];
var mad = mathjs__WEBPACK_IMPORTED_MODULE_0__["mad"];
var mean = mathjs__WEBPACK_IMPORTED_MODULE_0__["mean"];
var median = mathjs__WEBPACK_IMPORTED_MODULE_0__["median"];
var mode = mathjs__WEBPACK_IMPORTED_MODULE_0__["mode"];
var prod = mathjs__WEBPACK_IMPORTED_MODULE_0__["prod"];
var std = mathjs__WEBPACK_IMPORTED_MODULE_0__["std"];
var vari = mathjs__WEBPACK_IMPORTED_MODULE_0__["var"];
var sum = mathjs__WEBPACK_IMPORTED_MODULE_0__["sum"];
var hypot = mathjs__WEBPACK_IMPORTED_MODULE_0__["hypot"];
var norm = mathjs__WEBPACK_IMPORTED_MODULE_0__["norm"];
var mod = mathjs__WEBPACK_IMPORTED_MODULE_0__["mod"];
var square = mathjs__WEBPACK_IMPORTED_MODULE_0__["square"];
var cube = mathjs__WEBPACK_IMPORTED_MODULE_0__["cube"];
var distance = mathjs__WEBPACK_IMPORTED_MODULE_0__["distance"];
var random = mathjs__WEBPACK_IMPORTED_MODULE_0__["random"];
var randomInt = mathjs__WEBPACK_IMPORTED_MODULE_0__["randomInt"];
var pickRandom = mathjs__WEBPACK_IMPORTED_MODULE_0__["pickRandom"];


/***/ }),

/***/ "./src/app/core/modules/_model.ts":
/*!****************************************!*\
  !*** ./src/app/core/modules/_model.ts ***!
  \****************************************/
/*! exports provided: __new__, __preprocess__, __postprocess__, __merge__, __stringify__, __setAttrib__, __getAttrib__ */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__new__", function() { return __new__; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__preprocess__", function() { return __preprocess__; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__postprocess__", function() { return __postprocess__; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__merge__", function() { return __merge__; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__stringify__", function() { return __stringify__; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__setAttrib__", function() { return __setAttrib__; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__getAttrib__", function() { return __getAttrib__; });
/* harmony import */ var _libs_geo_info_GIModel__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @libs/geo-info/GIModel */ "./src/libs/geo-info/GIModel.ts");
/* harmony import */ var _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @libs/geo-info/common */ "./src/libs/geo-info/common.ts");
/* harmony import */ var _libs_geo_info_id__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @libs/geo-info/id */ "./src/libs/geo-info/id.ts");
/* harmony import */ var _check_args__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./_check_args */ "./src/app/core/modules/_check_args.ts");




//  ===============================================================================================
//  Functions used by Mobius
//  ===============================================================================================
/**
 * Creates a new empty model.
 *
 * @returns New model empty.
 */
function __new__() {
    var model = new _libs_geo_info_GIModel__WEBPACK_IMPORTED_MODULE_0__["GIModel"]();
    model.attribs.add.addAttrib(_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_1__["EEntType"].POSI, _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_1__["EAttribNames"].COORDS, _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_1__["EAttribDataTypeStrs"].FLOAT, 3);
    return model;
}
//  ===============================================================================================
/**
 * A function to preprocess the model, before it enters the node.
 * In cases where there is more than one model connected to a node,
 * the preprocess function will be called before the merge function.
 *
 * @param model The model to preprocess.
 */
function __preprocess__(__model__) {
    // TODO
}
//  ===============================================================================================
/**
 * A function to postprocess the model, after it enters the node.
 *
 * @param model The model to postprocess.
 */
function __postprocess__(__model__) {
    // TODO
    // Remove all undefined values for the arrays
}
//  ===============================================================================================
/**
 * Merges the second model into the first model. The geometry, attribues, and groups are all merged.
 * If the models contain contain groups with the same names, then the groups will be merged.
 *
 * @param model1 The model to merge into.
 * @param model2 The model to merge from    .
 */
function __merge__(model1, model2) {
    return model1.merge(model2);
}
//  ===============================================================================================
/**
 * Returns a string representation of this model.
 * @param __model__
 */
function __stringify__(__model__) {
    return JSON.stringify(__model__.getData());
}
//  ===============================================================================================
/**
 * Sets an attribute in the model.
 * @param __model__
 */
function __setAttrib__(__model__, entities, attrib_name, attrib_value, attrib_index) {
    // --- Error Check ---
    var fn_name = entities + '.Inline.__setAttrib__' + '[\'' + attrib_name + '\']';
    var ents_arr = Object(_check_args__WEBPACK_IMPORTED_MODULE_3__["checkIDs"])(fn_name, 'entities', entities, ['isID', 'isIDlist'], null);
    Object(_check_args__WEBPACK_IMPORTED_MODULE_3__["checkAttribNameValue"])(fn_name, attrib_name, attrib_value, attrib_index);
    if (!Array.isArray(ents_arr[0])) {
        ents_arr = [ents_arr];
    }
    for (var _i = 0, ents_arr_1 = ents_arr; _i < ents_arr_1.length; _i++) {
        var ents = ents_arr_1[_i];
        var _a = ents, ent_type = _a[0], index = _a[1];
        if (attrib_index !== null && attrib_index !== undefined) {
            var value_arr = __model__.attribs.query.getAttribValue(ent_type, attrib_name, index);
            value_arr[attrib_index] = attrib_value;
            __model__.attribs.add.setAttribValue(ent_type, index, attrib_name, value_arr);
        }
        else {
            __model__.attribs.add.setAttribValue(ent_type, index, attrib_name, attrib_value);
        }
    }
}
//  ===============================================================================================
function _getAttrib(__model__, ents_arr, attrib_name, attrib_index) {
    if (Object(_libs_geo_info_id__WEBPACK_IMPORTED_MODULE_2__["getArrDepth"])(ents_arr) === 1) {
        var _a = ents_arr, ent_type = _a[0], index = _a[1];
        if (attrib_index !== null && attrib_index !== undefined) {
            return __model__.attribs.query.getAttribValue(ent_type, attrib_name, index)[attrib_index];
        }
        else {
            return __model__.attribs.query.getAttribValue(ent_type, attrib_name, index);
        }
    }
    else {
        return ents_arr.map(function (ent_arr) {
            return _getAttrib(__model__, ent_arr, attrib_name, attrib_index);
        });
    }
}
/**
 * Gets an attribute from the model.
 * @param __model__
 */
function __getAttrib__(__model__, entities, attrib_name, attrib_index) {
    // --- Error Check ---
    var fn_name = 'Inline.__getAttrib__';
    var ents_arr = Object(_check_args__WEBPACK_IMPORTED_MODULE_3__["checkIDs"])(fn_name, 'entities', entities, ['isID', 'isIDList'], null);
    Object(_check_args__WEBPACK_IMPORTED_MODULE_3__["checkCommTypes"])(fn_name, 'attrib_name', attrib_name, ['isString']);
    if (attrib_index !== null && attrib_index !== undefined) {
        Object(_check_args__WEBPACK_IMPORTED_MODULE_3__["checkCommTypes"])(fn_name, 'attrib_index', attrib_index, ['isNumber']);
    }
    // --- Error Check ---
    return _getAttrib(__model__, ents_arr, attrib_name, attrib_index);
}
//  ===============================================================================================


/***/ }),

/***/ "./src/app/core/modules/_parameterTypes.ts":
/*!*************************************************!*\
  !*** ./src/app/core/modules/_parameterTypes.ts ***!
  \*************************************************/
/*! exports provided: _parameterTypes, _varString */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_parameterTypes", function() { return _parameterTypes; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_varString", function() { return _varString; });
/* harmony import */ var _model__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./_model */ "./src/app/core/modules/_model.ts");

var _parameterTypes = {
    constList: '__constList__',
    model: '__model__',
    input: '__input__',
    new: '_model.__new__',
    newFn: _model__WEBPACK_IMPORTED_MODULE_0__["__new__"],
    merge: '_model.__merge__',
    mergeFn: _model__WEBPACK_IMPORTED_MODULE_0__["__merge__"],
    addData: '_model.addGiData',
    preprocess: '_model.__preprocess__',
    postprocess: '_model.__postprocess__',
    setattrib: '_model.__setAttrib__',
    getattrib: '_model.__getAttrib__',
    return: '_Output.Return'
};
var _varString = "\nPI = Math.PI;\nXY = __modules__._constants.XY;\nYZ = __modules__._constants.YZ;\nZX = __modules__._constants.ZX;\nYX = __modules__._constants.YX;\nZY = __modules__._constants.ZY;\nXZ = __modules__._constants.XZ;\nmin = Math.min;\nmax = Math.max;\npow = Math.pow;\nsqrt = Math.sqrt;\nexp = Math.exp;\nlog = Math.log;\nround = Math.round;\nceil = Math.ceil;\nfloor = Math.floor;\nabs = Math.abs;\nsin = Math.sin;\nasin = Math.asin;\nsinh = Math.sinh;\nasinh = Math.asinh;\ncos = Math.cos;\nacos = Math.acos;\ncosh = Math.cosh;\nacosh = Math.acosh;\ntan = Math.tan;\natan = Math.atan;\ntanh = Math.tanh;\natanh = Math.atanh;\natan2 = Math.atan2;\nboolean = __modules__._mathjs.boolean;\nnumber = __modules__._mathjs.number;\nstring = __modules__._mathjs.string;\nmad = __modules__._mathjs.mad;\nmean = __modules__._mathjs.mean;\nmedian = __modules__._mathjs.median;\nmode = __modules__._mathjs.mode;\nprod = __modules__._mathjs.prod;\nstd = __modules__._mathjs.std;\nvari = __modules__._mathjs.var;\nsum = __modules__._mathjs.sum;\nhypot = __modules__._mathjs.hypot;\nnorm = __modules__._mathjs.norm;\nmod = __modules__._mathjs.mod;\nsquare = __modules__._mathjs.square;\ncube = __modules__._mathjs.cube;\ndistance = __modules__._mathjs.distance;\nrange = __modules__._list.range;\nlength = __modules__._list.length;\nshuffle = __modules__._list.shuffle;\nzip = __modules__._list.zip;\nzip2 = __modules__._list.zip2;\nvecsAdd = __modules__._vec.vecAdd;\nvecSub = __modules__._vec.vecSub;\nvecDiv = __modules__._vec.vecDiv;\nvecMult = __modules__._vec.vecMult;\nvecLen = __modules__._vec.vecLen;\nvecSetLen = __modules__._vec.vecSetLen;\nvecNorm = __modules__._vec.vecNorm;\nvecRev = __modules__._vec.vecRev;\nvecFromTo = __modules__._vec.vecFromTo;\nvecAng = __modules__._vec.vecAng;\nvecAng2 = __modules__._vec.vecAng2;\nvecDot = __modules__._vec.vecDot;\nvecCross = __modules__._vec.vecCross;\nvecEqual = __modules__._vec.vecEqual;\nradToDeg = __modules__._conversion.radToDeg;\ndegToRad = __modules__._conversion.degToRad;\nrand = __modules__._rand.rand;\nrandInt = __modules__._rand.randInt;\nrandPick = __modules__._rand.randPick;\n";


/***/ }),

/***/ "./src/app/core/modules/_rand.ts":
/*!***************************************!*\
  !*** ./src/app/core/modules/_rand.ts ***!
  \***************************************/
/*! exports provided: rand, randInt, randPick */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "rand", function() { return rand; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "randInt", function() { return randInt; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "randPick", function() { return randPick; });
/* harmony import */ var mathjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! mathjs */ "./node_modules/mathjs/index.js");
/* harmony import */ var mathjs__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(mathjs__WEBPACK_IMPORTED_MODULE_0__);

function rand(min, max) {
    return mathjs__WEBPACK_IMPORTED_MODULE_0__["random"](min, max);
}
function randInt(min, max) {
    return mathjs__WEBPACK_IMPORTED_MODULE_0__["randomInt"](min, max);
}
function randPick(list, num) {
    return mathjs__WEBPACK_IMPORTED_MODULE_0__["pickRandom"](list, num);
}


/***/ }),

/***/ "./src/app/core/modules/_vec.ts":
/*!**************************************!*\
  !*** ./src/app/core/modules/_vec.ts ***!
  \**************************************/
/*! exports provided: vecAdd, vecSub, vecDiv, vecMult, vecLen, vecSetLen, vecNorm, vecRev, vecFromTo, vecAng, vecAng2, vecDot, vecCross, vecEqual */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "vecAdd", function() { return vecAdd; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "vecSub", function() { return vecSub; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "vecDiv", function() { return vecDiv; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "vecMult", function() { return vecMult; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "vecLen", function() { return vecLen; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "vecSetLen", function() { return vecSetLen; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "vecNorm", function() { return vecNorm; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "vecRev", function() { return vecRev; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "vecFromTo", function() { return vecFromTo; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "vecAng", function() { return vecAng; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "vecAng2", function() { return vecAng2; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "vecDot", function() { return vecDot; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "vecCross", function() { return vecCross; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "vecEqual", function() { return vecEqual; });
/* harmony import */ var _libs_geom_vectors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @libs/geom/vectors */ "./src/libs/geom/vectors.ts");

var vecAdd = _libs_geom_vectors__WEBPACK_IMPORTED_MODULE_0__["vecAdd"];
var vecSub = _libs_geom_vectors__WEBPACK_IMPORTED_MODULE_0__["vecSub"];
var vecDiv = _libs_geom_vectors__WEBPACK_IMPORTED_MODULE_0__["vecDiv"];
var vecMult = _libs_geom_vectors__WEBPACK_IMPORTED_MODULE_0__["vecMult"];
var vecLen = _libs_geom_vectors__WEBPACK_IMPORTED_MODULE_0__["vecLen"];
var vecSetLen = _libs_geom_vectors__WEBPACK_IMPORTED_MODULE_0__["vecSetLen"];
var vecNorm = _libs_geom_vectors__WEBPACK_IMPORTED_MODULE_0__["vecNorm"];
var vecRev = _libs_geom_vectors__WEBPACK_IMPORTED_MODULE_0__["vecRev"];
var vecFromTo = _libs_geom_vectors__WEBPACK_IMPORTED_MODULE_0__["vecFromTo"];
var vecAng = _libs_geom_vectors__WEBPACK_IMPORTED_MODULE_0__["vecAng"];
var vecAng2 = _libs_geom_vectors__WEBPACK_IMPORTED_MODULE_0__["vecAng2"];
var vecDot = _libs_geom_vectors__WEBPACK_IMPORTED_MODULE_0__["vecDot"];
var vecCross = _libs_geom_vectors__WEBPACK_IMPORTED_MODULE_0__["vecCross"];
var vecEqual = _libs_geom_vectors__WEBPACK_IMPORTED_MODULE_0__["vecEqual"];


/***/ }),

/***/ "./src/app/core/modules/calc.ts":
/*!**************************************!*\
  !*** ./src/app/core/modules/calc.ts ***!
  \**************************************/
/*! exports provided: _EDistanceMethod, Distance, Length, Area, Vector, Centroid, _normal, Normal, ParamTToXyz, ParamXyzToT */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_EDistanceMethod", function() { return _EDistanceMethod; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Distance", function() { return Distance; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Length", function() { return Length; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Area", function() { return Area; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Vector", function() { return Vector; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Centroid", function() { return Centroid; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_normal", function() { return _normal; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Normal", function() { return Normal; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ParamTToXyz", function() { return ParamTToXyz; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ParamXyzToT", function() { return ParamXyzToT; });
/* harmony import */ var _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @libs/geo-info/common */ "./src/libs/geo-info/common.ts");
/* harmony import */ var _libs_geo_info_id__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @libs/geo-info/id */ "./src/libs/geo-info/id.ts");
/* harmony import */ var _libs_geom_distance__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @libs/geom/distance */ "./src/libs/geom/distance.ts");
/* harmony import */ var _libs_geom_vectors__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @libs/geom/vectors */ "./src/libs/geom/vectors.ts");
/* harmony import */ var _libs_triangulate_triangulate__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @libs/triangulate/triangulate */ "./src/libs/triangulate/triangulate.ts");
/* harmony import */ var _libs_geom_triangle__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @libs/geom/triangle */ "./src/libs/geom/triangle.ts");
/* harmony import */ var _check_args__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./_check_args */ "./src/app/core/modules/_check_args.ts");







// ================================================================================================
var _EDistanceMethod;
(function (_EDistanceMethod) {
    _EDistanceMethod["P_P_DISTANCE"] = "p_to_p_distance";
    _EDistanceMethod["MIN_DISTANCE"] = "min_distance";
})(_EDistanceMethod || (_EDistanceMethod = {}));
function _distanceMin(__model__, ent_arr1, ents_arr2) {
    var depth2 = Object(_libs_geo_info_id__WEBPACK_IMPORTED_MODULE_1__["getArrDepth"])(ents_arr2);
    if (depth2 === 1) {
        throw Error('Not implemented');
    }
    else if (depth2 === 2) {
        return ents_arr2.map(function (ent_arr2) { return _distanceMin(__model__, ent_arr1, ent_arr2); });
    }
}
function _distancePtoP(__model__, ent_arr1, ents_arr2) {
    var depth2 = Object(_libs_geo_info_id__WEBPACK_IMPORTED_MODULE_1__["getArrDepth"])(ents_arr2);
    if (depth2 === 1) {
        var ent_arr2 = ents_arr2;
        var ps1_xyz = __model__.attribs.query.getPosiCoords(ent_arr1[1]);
        var ps2_xyz = __model__.attribs.query.getPosiCoords(ent_arr2[1]);
        return Object(_libs_geom_distance__WEBPACK_IMPORTED_MODULE_2__["distance"])(ps1_xyz, ps2_xyz);
    }
    else if (depth2 === 2) {
        return ents_arr2.map(function (ent_arr2) { return _distancePtoP(__model__, ent_arr1, ent_arr2); });
    }
}
/**
 * Calculates the distance between two positions.
 * @param __model__
 * @param position1 First position.
 * @param position2 Second position, or list of positions.
 * @param method Enum; distance or min_distance.
 * @returns Distance, or list of distances (if position2 is a list).
 * @example distance1 = calc.Distance (position1, position2, p_to_p_distance)
 * @example_info position1 = [0,0,0], position2 = [[0,0,10],[0,0,20]]
 * Expected value of distance is [10,20].
 */
function Distance(__model__, position1, position2, method) {
    // --- Error Check ---
    var fn_name = 'calc.Distance';
    var ents_arr1 = Object(_check_args__WEBPACK_IMPORTED_MODULE_6__["checkIDs"])(fn_name, 'position1', position1, ['isID'], ['POSI']);
    var ents_arr2 = Object(_check_args__WEBPACK_IMPORTED_MODULE_6__["checkIDs"])(fn_name, 'position2', position2, ['isID'], ['POSI']); // TODO
    // --- Error Check ---
    if (method === _EDistanceMethod.P_P_DISTANCE) {
        return _distancePtoP(__model__, ents_arr1, ents_arr2);
    }
    else if (method === _EDistanceMethod.MIN_DISTANCE) {
        return _distanceMin(__model__, ents_arr1, ents_arr2);
    }
}
// ================================================================================================
/**
 * Calculates the length of a line or a list of lines.
 * @param __model__
 * @param lines Edge, wire or polyline.
 * @returns Length.
 * @example length1 = calc.Length (line1)
 */
function Length(__model__, lines) {
    // --- Error Check ---
    Object(_check_args__WEBPACK_IMPORTED_MODULE_6__["checkIDs"])('calc.Length', 'lines', lines, ['isID', 'isIDList'], ['EDGE', 'WIRE', 'PLINE']);
    // --- Error Check ---
    if (!Array.isArray(lines)) {
        lines = [lines];
    }
    var edges_i = [];
    var dist = 0;
    for (var _i = 0, lines_1 = lines; _i < lines_1.length; _i++) {
        var line = lines_1[_i];
        var _a = Object(_libs_geo_info_id__WEBPACK_IMPORTED_MODULE_1__["idsBreak"])(line), ent_type = _a[0], index = _a[1];
        if (Object(_libs_geo_info_id__WEBPACK_IMPORTED_MODULE_1__["isEdge"])(ent_type)) {
            edges_i.push(index);
        }
        else if (Object(_libs_geo_info_id__WEBPACK_IMPORTED_MODULE_1__["isWire"])(ent_type)) {
            edges_i.push.apply(edges_i, __model__.geom.query.navWireToEdge(index));
        }
        else if (Object(_libs_geo_info_id__WEBPACK_IMPORTED_MODULE_1__["isPline"])(ent_type)) {
            var wire_i = __model__.geom.query.navPlineToWire(index);
            edges_i.push.apply(edges_i, __model__.geom.query.navWireToEdge(wire_i));
        }
        else {
            throw new Error('Entity is of wrong type. Must be a an edge, a wire or a polyline');
        }
        for (var _b = 0, edges_i_1 = edges_i; _b < edges_i_1.length; _b++) {
            var edge_i = edges_i_1[_b];
            var posis_i = __model__.geom.query.navAnyToPosi(_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].EDGE, edge_i);
            var xyz_0 = __model__.attribs.query.getPosiCoords(posis_i[0]);
            var xyz_1 = __model__.attribs.query.getPosiCoords(posis_i[1]);
            dist += Object(_libs_geom_distance__WEBPACK_IMPORTED_MODULE_2__["distance"])(xyz_0, xyz_1);
        }
    }
    return dist;
}
// ================================================================================================
/**
 * Calculates the area of a surface or a list of surfaces.
 * TODO: allow for a list of surfaces
 * @param __model__
 * @param entities A polygon, a face, a closed polyline, or a closed wire.
 * @returns Area.
 * @example area1 = calc.Area (surface1)
 */
function Area(__model__, entities) {
    // --- Error Check ---
    var fn_name = 'calc.Area';
    Object(_check_args__WEBPACK_IMPORTED_MODULE_6__["checkIDs"])(fn_name, 'entities', entities, ['isID'], ['PGON', 'FACE', 'PLINE', 'WIRE']);
    // --- Error Check ---
    var _a = Object(_libs_geo_info_id__WEBPACK_IMPORTED_MODULE_1__["idsBreak"])(entities), ent_type = _a[0], index = _a[1];
    if (Object(_libs_geo_info_id__WEBPACK_IMPORTED_MODULE_1__["isPgon"])(ent_type) || Object(_libs_geo_info_id__WEBPACK_IMPORTED_MODULE_1__["isFace"])(ent_type)) {
        // faces, these are already triangulated
        var face_i = index;
        if (Object(_libs_geo_info_id__WEBPACK_IMPORTED_MODULE_1__["isPgon"])(ent_type)) {
            face_i = __model__.geom.query.navPgonToFace(index);
        }
        var tris_i = __model__.geom.query.navFaceToTri(face_i);
        var total_area = 0;
        for (var _i = 0, tris_i_1 = tris_i; _i < tris_i_1.length; _i++) {
            var tri_i = tris_i_1[_i];
            var corners_i = __model__.geom.query.navAnyToPosi(_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].TRI, tri_i);
            var corners_xyzs = corners_i.map(function (corner_i) { return __model__.attribs.query.getPosiCoords(corner_i); });
            var tri_area = Object(_libs_geom_triangle__WEBPACK_IMPORTED_MODULE_5__["area"])(corners_xyzs[0], corners_xyzs[1], corners_xyzs[2]);
            total_area += tri_area;
        }
        return total_area;
    }
    else if (Object(_libs_geo_info_id__WEBPACK_IMPORTED_MODULE_1__["isPline"])(ent_type) || Object(_libs_geo_info_id__WEBPACK_IMPORTED_MODULE_1__["isWire"])(ent_type)) {
        // wires, these need to be triangulated
        var wire_i = index;
        if (Object(_libs_geo_info_id__WEBPACK_IMPORTED_MODULE_1__["isPline"])(ent_type)) {
            wire_i = __model__.geom.query.navPlineToWire(index);
        }
        if (__model__.geom.query.istWireClosed(wire_i)) {
            throw new Error(fn_name + ': ' + 'To calculate area, wire must be closed');
        }
        var posis_i = __model__.geom.query.navAnyToPosi(_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].WIRE, index);
        var xyzs_1 = posis_i.map(function (posi_i) { return __model__.attribs.query.getPosiCoords(posi_i); });
        var tris = Object(_libs_triangulate_triangulate__WEBPACK_IMPORTED_MODULE_4__["triangulate"])(xyzs_1);
        var total_area = 0;
        for (var _b = 0, tris_1 = tris; _b < tris_1.length; _b++) {
            var tri = tris_1[_b];
            var corners_xyzs = tri.map(function (corner_i) { return xyzs_1[corner_i]; });
            var tri_area = Object(_libs_geom_triangle__WEBPACK_IMPORTED_MODULE_5__["area"])(corners_xyzs[0], corners_xyzs[1], corners_xyzs[2]);
            total_area += tri_area;
        }
        return total_area;
    }
}
// ================================================================================================
/**
 * Returns a vector along an edge.
 * @param __model__
 * @param edge An edge
 * @returns The vector from the start point of an edge to the end point of an edge
 */
function Vector(__model__, edge) {
    // --- Error Check ---
    Object(_check_args__WEBPACK_IMPORTED_MODULE_6__["checkIDs"])('vector.GetVector', 'edge', edge, ['isID'], ['EDGE']);
    // --- Error Check ---
    var _a = Object(_libs_geo_info_id__WEBPACK_IMPORTED_MODULE_1__["idsBreak"])(edge), ent_type = _a[0], index = _a[1];
    var posis_i = __model__.geom.query.navAnyToPosi(ent_type, index);
    var start = __model__.attribs.query.getPosiCoords(posis_i[0]);
    var end = __model__.attribs.query.getPosiCoords(posis_i[1]);
    return Object(_libs_geom_vectors__WEBPACK_IMPORTED_MODULE_3__["vecSub"])(end, start);
}
// ================================================================================================
function _centroid(__model__, ents_arr) {
    var posis_i = [];
    for (var _i = 0, ents_arr_1 = ents_arr; _i < ents_arr_1.length; _i++) {
        var ent_arr = ents_arr_1[_i];
        posis_i.push.apply(posis_i, __model__.geom.query.navAnyToPosi(ent_arr[0], ent_arr[1]));
    }
    var unique_posis_i = Array.from(new Set(posis_i));
    var unique_xyzs = unique_posis_i.map(function (posi_i) { return __model__.attribs.query.getPosiCoords(posi_i); });
    return Object(_libs_geom_vectors__WEBPACK_IMPORTED_MODULE_3__["vecDiv"])(Object(_libs_geom_vectors__WEBPACK_IMPORTED_MODULE_3__["vecSum"])(unique_xyzs), unique_xyzs.length);
}
/**
 * Calculates the centroid of a list of any entity.
 * @param __model__
 * @param entities List of positions, vertices, points, edges, wires, polylines, faces, polygons, or collections.
 * @returns Centroid.
 * @example centroid1 = calc.Centroid (polygon1)
 */
function Centroid(__model__, entities) {
    if (!Array.isArray(entities)) {
        entities = [entities];
    }
    var ents_arr = Object(_libs_geo_info_id__WEBPACK_IMPORTED_MODULE_1__["idsBreak"])(entities);
    // --- Error Check ---
    Object(_check_args__WEBPACK_IMPORTED_MODULE_6__["checkIDs"])('calc.Centroid', 'geometry', entities, ['isID', 'isIDList'], ['POSI', 'VERT', 'POINT', 'EDGE', 'WIRE', 'PLINE', 'FACE', 'PGON', 'COLL']);
    // --- Error Check ---
    return _centroid(__model__, ents_arr);
}
// ================================================================================================
function _normal(__model__, ents_arr) {
    if (ents_arr.length > 0 && !Array.isArray(ents_arr[0])) {
        var ent_type = ents_arr[0];
        var index = ents_arr[1];
        if (Object(_libs_geo_info_id__WEBPACK_IMPORTED_MODULE_1__["isPgon"])(ent_type) || Object(_libs_geo_info_id__WEBPACK_IMPORTED_MODULE_1__["isFace"])(ent_type)) {
            // faces, these are already triangulated
            var face_i = index;
            if (Object(_libs_geo_info_id__WEBPACK_IMPORTED_MODULE_1__["isPgon"])(ent_type)) {
                face_i = __model__.geom.query.navPgonToFace(index);
            }
            var tris_i = __model__.geom.query.navFaceToTri(face_i);
            var normal_vec = [0, 0, 0];
            for (var _i = 0, tris_i_2 = tris_i; _i < tris_i_2.length; _i++) {
                var tri_i = tris_i_2[_i];
                var corners_i = __model__.geom.query.navAnyToPosi(_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].TRI, tri_i);
                var corners_xyzs = corners_i.map(function (corner_i) { return __model__.attribs.query.getPosiCoords(corner_i); });
                var tri_normal = Object(_libs_geom_triangle__WEBPACK_IMPORTED_MODULE_5__["normal"])(corners_xyzs[0], corners_xyzs[1], corners_xyzs[2], true);
                normal_vec = Object(_libs_geom_vectors__WEBPACK_IMPORTED_MODULE_3__["vecAdd"])(normal_vec, tri_normal);
            }
            return Object(_libs_geom_vectors__WEBPACK_IMPORTED_MODULE_3__["vecNorm"])(Object(_libs_geom_vectors__WEBPACK_IMPORTED_MODULE_3__["vecDiv"])(normal_vec, tris_i.length));
        }
        else if (Object(_libs_geo_info_id__WEBPACK_IMPORTED_MODULE_1__["isPline"])(ent_type) || Object(_libs_geo_info_id__WEBPACK_IMPORTED_MODULE_1__["isWire"])(ent_type)) {
            // wires, these need to be triangulated
            var wire_i = index;
            if (Object(_libs_geo_info_id__WEBPACK_IMPORTED_MODULE_1__["isPline"])(ent_type)) {
                wire_i = __model__.geom.query.navPlineToWire(index);
            }
            if (!__model__.geom.query.istWireClosed(wire_i)) {
                throw new Error('To calculate normals, wire must be closed');
            }
            var posis_i = __model__.geom.query.navAnyToPosi(_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].WIRE, index);
            var xyzs_2 = posis_i.map(function (posi_i) { return __model__.attribs.query.getPosiCoords(posi_i); });
            var tris = Object(_libs_triangulate_triangulate__WEBPACK_IMPORTED_MODULE_4__["triangulate"])(xyzs_2);
            var normal_vec = [0, 0, 0];
            for (var _a = 0, tris_2 = tris; _a < tris_2.length; _a++) {
                var tri = tris_2[_a];
                var corners_xyzs = tri.map(function (corner_i) { return xyzs_2[corner_i]; });
                var tri_normal = Object(_libs_geom_triangle__WEBPACK_IMPORTED_MODULE_5__["normal"])(corners_xyzs[0], corners_xyzs[1], corners_xyzs[2], true);
                normal_vec = Object(_libs_geom_vectors__WEBPACK_IMPORTED_MODULE_3__["vecAdd"])(normal_vec, tri_normal);
            }
            return Object(_libs_geom_vectors__WEBPACK_IMPORTED_MODULE_3__["vecNorm"])(Object(_libs_geom_vectors__WEBPACK_IMPORTED_MODULE_3__["vecDiv"])(normal_vec, tris.length));
        }
    }
    else {
        return ents_arr.map(function (ent_arr) { return _normal(__model__, ent_arr); });
    }
}
// function _newell_normal(__model__: GIModel, ents_arr: TEntTypeIdx[]): Txyz {
//     const posis_i: number[] = [];
//     for (const ent_arr of ents_arr) {
//         posis_i.push(...__model__.geom.query.navAnyToPosi(ent_arr[0], ent_arr[1]));
//     }
//     const unique_posis_i = Array.from(new Set(posis_i));
//     const unique_xyzs: Txyz[] = unique_posis_i.map( posi_i => __model__.attribs.query.getPosiCoords(posi_i));
//     return newellNorm(unique_xyzs);
// }
/**
 * Calculates the normal of a list of positions, a polygon, a face, a closed polyline, a closed wire, or a plane..
 * @param __model__
 * @param entities List of positions, a polygon, a face, a closed polyline, a closed wire, or a plane.
 * @returns Vector.
 * @example normal1 = calc.Normal (polygon1)
 * @example_info If the input is non-planar, the output vector will be an average of all normal vector of the triangulated surfaces.
 */
function Normal(__model__, entities) {
    var ents_arr = Object(_libs_geo_info_id__WEBPACK_IMPORTED_MODULE_1__["idsBreak"])(entities);
    // --- Error Check ---
    var fn_name = 'vector.GetNormal';
    // checkIDs(fn_name, 'entity', entities, ['isID'], ['PGON', 'FACE', 'PLINE', 'WIRE']);
    // --- Error Check ---
    return _normal(__model__, ents_arr);
}
// ================================================================================================
/**
 * Calculates the position on a linear entity, given a t parameter.
 * @param __model__
 * @param line Edge, wire, or polyline.
 * @param t_param A value between 0 to 1.
 * @returns Set of XYZ coordinates.
 * @example coord1 = calc.ParamTToXyz (polyline1, 0.23)
 */
function ParamTToXyz(__model__, line, t_param) {
    // --- Error Check ---
    var fn_name = 'calc.ParamTToXyz';
    Object(_check_args__WEBPACK_IMPORTED_MODULE_6__["checkIDs"])(fn_name, 'line', line, ['isID'], ['EDGE', 'WIRE', 'POLYLINE']);
    Object(_check_args__WEBPACK_IMPORTED_MODULE_6__["checkCommTypes"])(fn_name, 't_param', t_param, ['isNumber']);
    if (t_param < 0 || t_param > 1) {
        throw new Error(fn_name + ': ' + 't_param is not between 0 and 1');
    }
    // --- Error Check ---
    var edges_i = [];
    var _a = Object(_libs_geo_info_id__WEBPACK_IMPORTED_MODULE_1__["idsBreak"])(line), ent_type = _a[0], index = _a[1];
    if (Object(_libs_geo_info_id__WEBPACK_IMPORTED_MODULE_1__["isEdge"])(ent_type)) {
        edges_i.push(index);
    }
    else if (Object(_libs_geo_info_id__WEBPACK_IMPORTED_MODULE_1__["isWire"])(ent_type)) {
        edges_i.push.apply(edges_i, __model__.geom.query.navWireToEdge(index));
    }
    else if (Object(_libs_geo_info_id__WEBPACK_IMPORTED_MODULE_1__["isPline"])(ent_type)) {
        var wire_i = __model__.geom.query.navPlineToWire(index);
        edges_i.push.apply(edges_i, __model__.geom.query.navWireToEdge(wire_i));
    }
    // } else {
    //     throw new Error('Entity is of wrong type. Must be a an edge, a wire or a polyline');
    // }
    var num_edges = edges_i.length;
    // get all the edge lengths
    var total_dist = 0;
    var dists = [];
    var xyz_pairs = [];
    for (var _i = 0, edges_i_2 = edges_i; _i < edges_i_2.length; _i++) {
        var edge_i = edges_i_2[_i];
        var posis_i = __model__.geom.query.navAnyToPosi(_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].EDGE, edge_i);
        var xyz_0 = __model__.attribs.query.getPosiCoords(posis_i[0]);
        var xyz_1 = __model__.attribs.query.getPosiCoords(posis_i[1]);
        var dist = Object(_libs_geom_distance__WEBPACK_IMPORTED_MODULE_2__["distance"])(xyz_0, xyz_1);
        total_dist += dist;
        dists.push(total_dist);
        xyz_pairs.push([xyz_0, xyz_1]);
    }
    // map the t_param
    var t_param_mapped = t_param * total_dist;
    // loop through and find the point
    for (var i = 0; i < num_edges; i++) {
        if (t_param_mapped < dists[i]) {
            var xyz_pair = xyz_pairs[i];
            var dist_a = 0;
            if (i > 0) {
                dist_a = dists[i - 1];
            }
            var dist_b = dists[i];
            var edge_length = dist_b - dist_a;
            var to_t = t_param_mapped - dist_a;
            var divisor = to_t / edge_length;
            return Object(_libs_geom_vectors__WEBPACK_IMPORTED_MODULE_3__["vecAdd"])(xyz_pair[0], Object(_libs_geom_vectors__WEBPACK_IMPORTED_MODULE_3__["vecDiv"])(Object(_libs_geom_vectors__WEBPACK_IMPORTED_MODULE_3__["vecSub"])(xyz_pair[1], xyz_pair[0]), divisor));
        }
    }
    // t param must be 1 (or greater)
    return xyz_pairs[num_edges - 1][1];
}
// ================================================================================================
/**
 * Calculates a location on a line to get t parameter.
 * @param __model__
 * @param lines List of edges, wires, or polylines.
 * @param locations List of positions, vertices, points, or coordinates.
 * @example coord1 = calc.ParamXyzToT (polyline1, [1,2,3])
 */
function ParamXyzToT(__model__, lines, locations) {
    // --- Error Check ---
    var fn_name = 'calc.ParamXyzToT';
    Object(_check_args__WEBPACK_IMPORTED_MODULE_6__["checkIDs"])(fn_name, 'lines', lines, ['isID', 'isIDList'], ['EDGE', 'WIRE', 'POLYLINE']);
    Object(_check_args__WEBPACK_IMPORTED_MODULE_6__["checkIDnTypes"])(fn_name, 'locations', locations, ['isID', 'isIDList', 'isCoord'], ['POSI', 'VERT', 'POINT']);
    // --- Error Check ---
    throw new Error('Not impemented.');
    return null;
}
// ================================================================================================


/***/ }),

/***/ "./src/app/core/modules/index.ts":
/*!***************************************!*\
  !*** ./src/app/core/modules/index.ts ***!
  \***************************************/
/*! exports provided: _model, query, make, modify, isect, calc, util, pattern, virtual, list, _mathjs, _rand, _vec, _list, _conversion, _constants, _Output, _parameterTypes, _varString */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _model__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./_model */ "./src/app/core/modules/_model.ts");
/* harmony reexport (module object) */ __webpack_require__.d(__webpack_exports__, "_model", function() { return _model__WEBPACK_IMPORTED_MODULE_0__; });
/* harmony import */ var _query__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./query */ "./src/app/core/modules/query.ts");
/* harmony reexport (module object) */ __webpack_require__.d(__webpack_exports__, "query", function() { return _query__WEBPACK_IMPORTED_MODULE_1__; });
/* harmony import */ var _make__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./make */ "./src/app/core/modules/make.ts");
/* harmony reexport (module object) */ __webpack_require__.d(__webpack_exports__, "make", function() { return _make__WEBPACK_IMPORTED_MODULE_2__; });
/* harmony import */ var _modify__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./modify */ "./src/app/core/modules/modify.ts");
/* harmony reexport (module object) */ __webpack_require__.d(__webpack_exports__, "modify", function() { return _modify__WEBPACK_IMPORTED_MODULE_3__; });
/* harmony import */ var _isect__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./isect */ "./src/app/core/modules/isect.ts");
/* harmony reexport (module object) */ __webpack_require__.d(__webpack_exports__, "isect", function() { return _isect__WEBPACK_IMPORTED_MODULE_4__; });
/* harmony import */ var _calc__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./calc */ "./src/app/core/modules/calc.ts");
/* harmony reexport (module object) */ __webpack_require__.d(__webpack_exports__, "calc", function() { return _calc__WEBPACK_IMPORTED_MODULE_5__; });
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./util */ "./src/app/core/modules/util.ts");
/* harmony reexport (module object) */ __webpack_require__.d(__webpack_exports__, "util", function() { return _util__WEBPACK_IMPORTED_MODULE_6__; });
/* harmony import */ var _pattern__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./pattern */ "./src/app/core/modules/pattern.ts");
/* harmony reexport (module object) */ __webpack_require__.d(__webpack_exports__, "pattern", function() { return _pattern__WEBPACK_IMPORTED_MODULE_7__; });
/* harmony import */ var _virtual__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./virtual */ "./src/app/core/modules/virtual.ts");
/* harmony reexport (module object) */ __webpack_require__.d(__webpack_exports__, "virtual", function() { return _virtual__WEBPACK_IMPORTED_MODULE_8__; });
/* harmony import */ var _list__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./list */ "./src/app/core/modules/list.ts");
/* harmony reexport (module object) */ __webpack_require__.d(__webpack_exports__, "list", function() { return _list__WEBPACK_IMPORTED_MODULE_9__; });
/* harmony import */ var _mathjs__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./_mathjs */ "./src/app/core/modules/_mathjs.ts");
/* harmony reexport (module object) */ __webpack_require__.d(__webpack_exports__, "_mathjs", function() { return _mathjs__WEBPACK_IMPORTED_MODULE_10__; });
/* harmony import */ var _rand__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./_rand */ "./src/app/core/modules/_rand.ts");
/* harmony reexport (module object) */ __webpack_require__.d(__webpack_exports__, "_rand", function() { return _rand__WEBPACK_IMPORTED_MODULE_11__; });
/* harmony import */ var _vec__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./_vec */ "./src/app/core/modules/_vec.ts");
/* harmony reexport (module object) */ __webpack_require__.d(__webpack_exports__, "_vec", function() { return _vec__WEBPACK_IMPORTED_MODULE_12__; });
/* harmony import */ var _list__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./_list */ "./src/app/core/modules/_list.ts");
/* harmony reexport (module object) */ __webpack_require__.d(__webpack_exports__, "_list", function() { return _list__WEBPACK_IMPORTED_MODULE_13__; });
/* harmony import */ var _conversion__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./_conversion */ "./src/app/core/modules/_conversion.ts");
/* harmony reexport (module object) */ __webpack_require__.d(__webpack_exports__, "_conversion", function() { return _conversion__WEBPACK_IMPORTED_MODULE_14__; });
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./_constants */ "./src/app/core/modules/_constants.ts");
/* harmony reexport (module object) */ __webpack_require__.d(__webpack_exports__, "_constants", function() { return _constants__WEBPACK_IMPORTED_MODULE_15__; });
/* harmony import */ var _output__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./output */ "./src/app/core/modules/output.ts");
/* harmony reexport (module object) */ __webpack_require__.d(__webpack_exports__, "_Output", function() { return _output__WEBPACK_IMPORTED_MODULE_16__; });
/* harmony import */ var _parameterTypes__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./_parameterTypes */ "./src/app/core/modules/_parameterTypes.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "_parameterTypes", function() { return _parameterTypes__WEBPACK_IMPORTED_MODULE_17__["_parameterTypes"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "_varString", function() { return _parameterTypes__WEBPACK_IMPORTED_MODULE_17__["_varString"]; });

// functions used by mobius
// import * as Model from './Model';
// export {Model};


// import * as _model from './Model';
// export {_model};
// functions for end users


















// helpers












// input, output ports





/***/ }),

/***/ "./src/app/core/modules/isect.ts":
/*!***************************************!*\
  !*** ./src/app/core/modules/isect.ts ***!
  \***************************************/
/*! exports provided: Intersect, _EKnifeKeep, Knife, Split */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Intersect", function() { return Intersect; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_EKnifeKeep", function() { return _EKnifeKeep; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Knife", function() { return Knife; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Split", function() { return Split; });
/**
 * Adds positions by intersecting polylines, planes, and polygons.
 * @param __model__
 * @param entities1 First polyline, plane, face, or polygon.
 * @param entities2 Second polyline, plane face, or polygon.
 * @returns List of positions.
 * @example intersect1 = isect.Intersect (object1, object2)
 * @example_info Returns a list of positions at the intersections between both objects.
 */
function Intersect(__model__, entities1, entities2) {
    // --- Error Check ---
    // const fn_name = 'isect.Intersect';
    // const ents_arr_1 = checkIDnTypes(fn_name, 'object1', entities1, ['isID', 'isPlane'], ['PLINE', 'PGON', 'FACE']);
    // const ents_arr_2 = checkIDnTypes(fn_name, 'object2', entities2, ['isID', 'isPlane'], ['PLINE', 'PGON', 'FACE']);
    // --- Error Check ---
    throw new Error('Not impemented.');
    return null;
}
// Knife modelling operation keep
var _EKnifeKeep;
(function (_EKnifeKeep) {
    _EKnifeKeep["KEEP_ABOVE"] = "keep above the plane";
    _EKnifeKeep["KEEP_BELOW"] = "keep below the plane";
    _EKnifeKeep["KEEP_ALL"] = "keep all";
})(_EKnifeKeep || (_EKnifeKeep = {}));
/**
 * Separates a list of points, polylines or polygons into two lists with a plane.
 * @param __model__
 * @param geometry List of points, polylines or polygons.
 * @param plane Knife.
 * @param keep Keep above, keep below, or keep both lists of separated points, polylines or polygons.
 * @returns List, or list of two lists, of points, polylines or polygons.
 * @example knife1 = isect.Knife ([p1,p2,p3,p4,p5], plane1, keepabove)
 * @example_info Returns [[p1,p2,p3],[p4,p5]] if p1, p2, p3 are points above the plane and p4, p5 are points below the plane.
 */
function Knife(__model__, geometry, plane, keep) {
    // --- Error Check ---
    // const fn_name = 'isect.Knife';
    // const ents_arr = checkIDs(fn_name, 'geometry', geometry, ['isIDList'], ['POINT', 'PLINE', 'PGON']);
    // checkCommTypes(fn_name, 'plane', plane, ['isPlane']);
    // --- Error Check ---
    throw new Error('Not implemented.');
    return null;
}
/**
 * Splits a polyline or polygon with a polyline.
 * @param __model__
 * @param geometry A list of polylines or polygons to be split.
 * @param polyline Splitter.
 * @returns List of two lists containing polylines or polygons.
 * @example splitresult = isect.Split (pl1, pl2)
 * @example_info Returns [[pl1A],[pl1B]], where pl1A and pl1B are polylines resulting from the split occurring where pl1 and pl2 intersect.
 */
function Split(__model__, geometry, polyline) {
    // --- Error Check ---
    // const fn_name = 'isect.Split';
    // const ents_arr = checkIDs(fn_name, 'objects', geometry, ['isIDList'], ['PLINE', 'PGON']);
    // checkIDs(fn_name, 'polyline', polyline, ['isID'], ['PLINE']);
    // --- Error Check ---
    throw new Error('Not implemented.');
    return null;
}
// Ray and plane


/***/ }),

/***/ "./src/app/core/modules/list.ts":
/*!**************************************!*\
  !*** ./src/app/core/modules/list.ts ***!
  \**************************************/
/*! exports provided: _EIndexOfMethod, IndexOf, Includes, Copy, Concat, Flatten, Slice, _EAppendMethod, Append, RemoveIndex, _ERemoveValueMethod, RemoveValue, _EReplaceValueMethod, ReplaceValue, Reverse, _ESortMethod, Sort, Splice */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_EIndexOfMethod", function() { return _EIndexOfMethod; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "IndexOf", function() { return IndexOf; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Includes", function() { return Includes; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Copy", function() { return Copy; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Concat", function() { return Concat; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Flatten", function() { return Flatten; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Slice", function() { return Slice; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_EAppendMethod", function() { return _EAppendMethod; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Append", function() { return Append; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RemoveIndex", function() { return RemoveIndex; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_ERemoveValueMethod", function() { return _ERemoveValueMethod; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RemoveValue", function() { return RemoveValue; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_EReplaceValueMethod", function() { return _EReplaceValueMethod; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ReplaceValue", function() { return ReplaceValue; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Reverse", function() { return Reverse; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_ESortMethod", function() { return _ESortMethod; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Sort", function() { return Sort; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Splice", function() { return Splice; });
/* harmony import */ var _check_args__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./_check_args */ "./src/app/core/modules/_check_args.ts");

/**
 * ================================================================================================
 * list functions that obtain and return information from an input list. Does not modify input list.
 */
var _EIndexOfMethod;
(function (_EIndexOfMethod) {
    _EIndexOfMethod["SEARCH_ALL"] = "search_all";
    _EIndexOfMethod["SEARCH_FIRST"] = "search_first";
})(_EIndexOfMethod || (_EIndexOfMethod = {}));
/**
 * Searches for a value in a list and returns the index position if found.
 * Items must match both the value and type of specified value.
 *
 * Returns -1 if no values in list match specified value.
 *
 * @param list List.
 * @param value Value to search for.
 * @param method Enum, specifies whether to search all occurances or only the first.
 * @returns Index position or list of index positions containing specified value.
 * @example positions = list.IndexOf(list,2,true)
 * @example_info where list = [6,2,2,7]
 * Expected value of positions is [1,2].
 */
function IndexOf(list, value, method) {
    // --- Error Check ---
    var fn_name = 'list.IndexOf';
    Object(_check_args__WEBPACK_IMPORTED_MODULE_0__["checkCommTypes"])(fn_name, 'list', list, ['isList']);
    Object(_check_args__WEBPACK_IMPORTED_MODULE_0__["checkCommTypes"])(fn_name, 'value', value, ['isAny']);
    // --- Error Check ---
    var positions = [];
    for (var i = 0; i < list.length; i++) {
        if (list[i] === value) {
            positions.push(i);
            if (method === _EIndexOfMethod.SEARCH_FIRST) {
                return i;
            }
        }
    }
    if (positions.length > 0) {
        return positions;
    }
    else {
        return -1;
    }
}
/**
 * Searches for a value in an list and returns true if found.
 * Items must match both the value and type of specified value.
 *
 * Returns false if no values in list match specified value.
 *
 * @param list List.
 * @param value Value to search for.
 * @returns Returns true if value can be found in list, false if value cannot be found.
 * @example exists = list.Includes(list,2)
 * @example_info where list = [6,2,2,7]
 * Expected value of exists is true.
 */
function Includes(list, value) {
    // --- Error Check ---
    var fn_name = 'list.Includes';
    Object(_check_args__WEBPACK_IMPORTED_MODULE_0__["checkCommTypes"])(fn_name, 'list', list, ['isList']);
    Object(_check_args__WEBPACK_IMPORTED_MODULE_0__["checkCommTypes"])(fn_name, 'value', value, ['isAny']);
    // --- Error Check ---
    for (var i = list.length - 1; i >= 0; i--) {
        if (list[i] === value) {
            return true;
        }
    }
    return false;
}
/**
 * ================================================================================================
 * list functions that return a new list. The input list is not modified.
 */
/**
 * Creates a new list by creating a new list by making a copy of an existing list.
 *
 * @param list List to copy.
 * @returns New duplicated list.
 * @example copy1 = list.Copy(list)
 * @example_info where list = [1,2,3]
 * Expected value of copy is [1,2,3].
 */
function Copy(list) {
    // --- Error Check ---
    Object(_check_args__WEBPACK_IMPORTED_MODULE_0__["checkCommTypes"])('list.Copy', 'list', list, ['isList']);
    // --- Error Check ---
    return list.slice();
}
/**
 * Creates a new list by combining two lists into a new list.
 *
 * @param list1 First list.
 * @param list2 Second list.
 * @returns Combined list (list1 first, followed by list2).
 * @example newlist = list.Concat(list1,list2)
 * @example_info where list1 = [1,2,3]
 * and list2 = [9,0]
 * Expected value of newlist is [1,2,3,9,0].
 */
function Concat(list1, list2) {
    // --- Error Check ---
    var fn_name = 'list.Concat';
    Object(_check_args__WEBPACK_IMPORTED_MODULE_0__["checkCommTypes"])(fn_name, 'list1', list1, ['isList']);
    Object(_check_args__WEBPACK_IMPORTED_MODULE_0__["checkCommTypes"])(fn_name, 'list2', list2, ['isList']);
    // --- Error Check ---
    return list1.concat(list2);
}
/**
 * Creates a new list by flattening an n-dimensional list into a one-dimensional list.
 *
 * @param list List to flatten.
 * @returns Flattened list.
 * @example flatten = list.Flatten(list)
 * @example_info where list = [1,2,3,[4,5]]
 * Expected value of flatten is [1,2,3,4,5].
 */
function Flatten(list) {
    // --- Error Check ---
    Object(_check_args__WEBPACK_IMPORTED_MODULE_0__["checkCommTypes"])('list.Flatten', 'list', list, ['isList']);
    // --- Error Check ---
    return _flattenDeep(list);
}
function _flattenDeep(list) {
    return list.reduce(function (acc, val) { return Array.isArray(val) ? acc.concat(_flattenDeep(val)) : acc.concat(val); }, []);
}
/**
 * Creates a new list by copying a portion of an existing list, from start index to end index (end not included).
 *
 * @param list List to slice.
 * @param start Zero-based index at which to begin slicing.
 *      A negative index can be used, indicating an offset from the end of the sequence.
 *      If start is undefined, slice begins from index 0.
 * @param end Zero-based index before which to end slicing. Slice extracts up to but not including end.
 *      A negative index can be used, indicating an offset from the end of the sequence.
 *      If end is undefined, slice extracts through the end of the sequence.
 * @returns A new list.
 * @example result = list.Slice(list,1,3)
 * @example_info where list = [1,2,3,4,5]
 * Expected value of result is [2,3].
 */
function Slice(list, start, end) {
    // --- Error Check ---
    var fn_name = 'list.Slice';
    Object(_check_args__WEBPACK_IMPORTED_MODULE_0__["checkCommTypes"])(fn_name, 'list', list, ['isList']);
    Object(_check_args__WEBPACK_IMPORTED_MODULE_0__["checkCommTypes"])(fn_name, 'start', start, ['isInt']);
    Object(_check_args__WEBPACK_IMPORTED_MODULE_0__["checkCommTypes"])(fn_name, 'end', end, ['isInt']);
    // --- Error Check ---
    return list.slice(start, end);
}
/**
 * ================================================================================================
 * list functions that modify the original input list. Return void.
 */
var _EAppendMethod;
(function (_EAppendMethod) {
    _EAppendMethod["TO_START"] = "to_start";
    _EAppendMethod["TO_END"] = "to_end";
})(_EAppendMethod || (_EAppendMethod = {}));
/**
 * Adds one value to the end of an list.
 * If value is an list, the entire list will be appended as one value.
 *
 * @param list List to add to.
 * @param value Item to add.
 * @param method Enum, append to start or end.
 * @example append = list.Append(list, 4, 'at_end')
 * @example_info where list = [1,2,3]
 * Expected value of list is [1,2,3,4].
 */
function Append(list, value, method) {
    // --- Error Check ---
    var fn_name = 'list.Append';
    Object(_check_args__WEBPACK_IMPORTED_MODULE_0__["checkCommTypes"])(fn_name, 'list', list, ['isList']);
    Object(_check_args__WEBPACK_IMPORTED_MODULE_0__["checkCommTypes"])(fn_name, 'value', value, ['isAny']);
    // --- Error Check ---
    if (method === _EAppendMethod.TO_END) {
        list.push(value);
    }
    else {
        list.unshift(value);
    }
}
/**
 * Removes the value at the specified index from a list.
 *
 * @param list List to remove value from.
 * @param index Zero-based index number of value to remove.
 * @example remove = list.RemoveIndex(list,1)
 * @example_info where list = [1,2,3]
 * Expected value of remove is [1,3].
 */
function RemoveIndex(list, index) {
    // --- Error Check ---
    var fn_name = 'list.RemoveIndex';
    Object(_check_args__WEBPACK_IMPORTED_MODULE_0__["checkCommTypes"])(fn_name, 'list', list, ['isList']);
    Object(_check_args__WEBPACK_IMPORTED_MODULE_0__["checkCommTypes"])(fn_name, 'index', index, ['isInt']);
    // --- Error Check ---
    list.splice(index, 1);
}
var _ERemoveValueMethod;
(function (_ERemoveValueMethod) {
    _ERemoveValueMethod["REMOVE_ALL"] = "remove_all";
    _ERemoveValueMethod["REMOVE_FIRST"] = "remove_first";
})(_ERemoveValueMethod || (_ERemoveValueMethod = {}));
/**
 * Removes values that matches specified value from a list.
 * Items must match both the value and type of specified value.
 *
 * Returns original list if no values in list match specified value.
 *
 * @param list List to remove value from.
 * @param value Value to search for.
 * @param method Enum; specifies whether to remove all occurances or only the first.
 * @example remove = list.RemoveValue(list,2,'remove_all')
 * @example_info where list = [1,2,2,3]
 * Expected value of remove is [1,3].
 */
function RemoveValue(list, value, method) {
    // --- Error Check ---
    var fn_name = 'list.RemoveValue';
    Object(_check_args__WEBPACK_IMPORTED_MODULE_0__["checkCommTypes"])(fn_name, 'list', list, ['isList']);
    Object(_check_args__WEBPACK_IMPORTED_MODULE_0__["checkCommTypes"])(fn_name, 'value', value, ['isAny']);
    // --- Error Check ---
    for (var i = list.length - 1; i >= 0; i--) {
        if (list[i] === value) {
            list.splice(i, 1);
            if (method === _ERemoveValueMethod.REMOVE_FIRST) {
                break;
            }
        }
    }
}
var _EReplaceValueMethod;
(function (_EReplaceValueMethod) {
    _EReplaceValueMethod["REPLACE_ALL"] = "replace_all";
    _EReplaceValueMethod["REPLACE_FIRST"] = "replace_first";
})(_EReplaceValueMethod || (_EReplaceValueMethod = {}));
/**
 * Replaces values that matches specified value from an list with a new value
 * Items must match both the value and type of specified value
 *
 * Returns original list if no value in list matches specified value.
 *
 * @param list List to remove value from.
 * @param value1 Value to search for.
 * @param value2 Value to replace existing value with.
 * @param method Enum; specifies whether to replace all occurances or only the first.
 * @example replace = list.ReplaceValue(list,2,9,'replace_all')
 * @example_info where list = [1,2,2,3]
 * Expected value of replace is [1,9,9,3].
 */
function ReplaceValue(list, value1, value2, method) {
    // --- Error Check ---
    var fn_name = 'list.ReplaceValue';
    Object(_check_args__WEBPACK_IMPORTED_MODULE_0__["checkCommTypes"])(fn_name, 'list', list, ['isList']);
    Object(_check_args__WEBPACK_IMPORTED_MODULE_0__["checkCommTypes"])(fn_name, 'value1', value1, ['isAny']);
    Object(_check_args__WEBPACK_IMPORTED_MODULE_0__["checkCommTypes"])(fn_name, 'value2', value2, ['isAny']);
    // --- Error Check ---
    for (var i = 0; i < list.length; i++) {
        if (list[i] === value1) {
            list[i] = value2;
            if (method === _EReplaceValueMethod.REPLACE_FIRST) {
                break;
            }
        }
    }
}
/**
 * Reverses the order of values in a list and returns a new list.
 *
 * @param list List to reverse.
 * @returns New reversed list.
 * @example result = list.Reverse(list1)
 * @example_info where list1 = [1,2,3]
 * Expected value of result is [3,2,1].
 */
function Reverse(list) {
    // --- Error Check ---
    Object(_check_args__WEBPACK_IMPORTED_MODULE_0__["checkCommTypes"])('list.Reverse', 'list', list, ['isList']);
    // --- Error Check ---
    list.reverse();
}
var _ESortMethod;
(function (_ESortMethod) {
    _ESortMethod["ALPHA"] = "alpha_descending";
    _ESortMethod["REV_ALPHA"] = "alpha_ascending";
    _ESortMethod["NUM"] = "numeric_descending";
    _ESortMethod["REV_NUM"] = "numeric_ascending";
    _ESortMethod["SHIFT"] = "shift_1";
    _ESortMethod["REV_SHIFT"] = "reverse_shift_1";
    _ESortMethod["RANDOM"] = "random";
})(_ESortMethod || (_ESortMethod = {}));
/**
 * Sorts an list of values.
 *
 * For alphabetical sort, values are sorted according to string Unicode code points
 * (character by character, numbers before upper case alphabets, upper case alphabets before lower case alphabets)
 *
 * @param list List to sort.
 * @param method Enum; specifies the sort method to use.
 * @example sort = list.Sort(list, 'alpha')
 * @example_info where list = ["1","2","10","Orange","apple"]
 * Expected value of list is ["1","10","2","Orange","apple"].
 * @example sort = list.Sort(list, 'numeric')
 * @example_info where list = [56,6,48]
 * Expected value of list is [6,48,56].
 */
function Sort(list, method) {
    // --- Error Check ---
    Object(_check_args__WEBPACK_IMPORTED_MODULE_0__["checkCommTypes"])('list.Sort', 'list', list, ['isList']);
    // --- Error Check ---
    switch (method) {
        case _ESortMethod.ALPHA:
            list.sort();
            break;
        case _ESortMethod.REV_ALPHA:
            list.sort().reverse();
            break;
        case _ESortMethod.NUM:
            list.sort(function (a, b) { return a - b; });
            break;
        case _ESortMethod.REV_NUM:
            list.sort(function (a, b) { return a - b; }).reverse();
            break;
        case _ESortMethod.SHIFT:
            var first = list.shift();
            list.push(first);
            break;
        case _ESortMethod.REV_SHIFT:
            var last = list.pop();
            list.unshift(last);
            break;
        case _ESortMethod.RANDOM:
            list.sort(function () { return .5 - Math.random(); });
            break;
        default:
            throw new Error('list.Sort: Sort method not recognised.');
            break;
    }
}
/**
 * Adds and/or removes values to/from a list.
 *
 * If no values_to_add are specified, then values are only removed.
 * If num_to_remove is 0, then values are only added.
 *
 * @param list List to splice.
 * @param index Zero-based index at which to add/remove values. (Items are added/removed after specified index)
 * @param num_to_remove Number of values to remove.
 * @param values_to_add List of values to add.
 * @example result = list.Splice(list1, 1, 3, [2.2, 3.3])
 * @example_info where list1 = [10, 20, 30, 40, 50]
 * Expected value of result is [10, 2.2, 3.2, 50]. New values were added where the values were removed.
 */
function Splice(list, index, num_to_remove, values_to_add) {
    // --- Error Check ---
    var fn_name = 'list.Splice';
    Object(_check_args__WEBPACK_IMPORTED_MODULE_0__["checkCommTypes"])(fn_name, 'list', list, ['isList']);
    Object(_check_args__WEBPACK_IMPORTED_MODULE_0__["checkCommTypes"])(fn_name, 'index', index, ['isInt']);
    Object(_check_args__WEBPACK_IMPORTED_MODULE_0__["checkCommTypes"])(fn_name, 'num_to_remove', num_to_remove, ['isInt']);
    Object(_check_args__WEBPACK_IMPORTED_MODULE_0__["checkCommTypes"])(fn_name, 'values_to_add', values_to_add, ['isList']);
    // --- Error Check ---
    // const list2 = list.slice();
    // list2.splice(index, num_to_remove, ...values_to_add);
    // return list2;
    list.splice.apply(list, [index, num_to_remove].concat(values_to_add));
}


/***/ }),

/***/ "./src/app/core/modules/make.ts":
/*!**************************************!*\
  !*** ./src/app/core/modules/make.ts ***!
  \**************************************/
/*! exports provided: Position, Point, _EClose, Polyline, Polygon, _collection, Collection, _ECopyAttribues, Copy, _ELoftMethod, Loft, Extrude, Join, _EDivideMethod, Divide, Unweld */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Position", function() { return Position; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Point", function() { return Point; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_EClose", function() { return _EClose; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Polyline", function() { return Polyline; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Polygon", function() { return Polygon; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_collection", function() { return _collection; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Collection", function() { return Collection; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_ECopyAttribues", function() { return _ECopyAttribues; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Copy", function() { return Copy; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_ELoftMethod", function() { return _ELoftMethod; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Loft", function() { return Loft; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Extrude", function() { return Extrude; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Join", function() { return Join; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_EDivideMethod", function() { return _EDivideMethod; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Divide", function() { return Divide; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Unweld", function() { return Unweld; });
/* harmony import */ var _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @libs/geo-info/common */ "./src/libs/geo-info/common.ts");
/* harmony import */ var _libs_geo_info_id__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @libs/geo-info/id */ "./src/libs/geo-info/id.ts");
/* harmony import */ var _libs_geom_vectors__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @libs/geom/vectors */ "./src/libs/geom/vectors.ts");
/* harmony import */ var _check_args__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./_check_args */ "./src/app/core/modules/_check_args.ts");




// ================================================================================================
function _position(__model__, coords) {
    var depth = Object(_libs_geo_info_id__WEBPACK_IMPORTED_MODULE_1__["getArrDepth"])(coords);
    if (depth === 1) {
        var coord1 = coords;
        var posi_i = __model__.geom.add.addPosition();
        __model__.attribs.add.setAttribValue(_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].POSI, posi_i, _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EAttribNames"].COORDS, coord1);
        return [_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].POSI, posi_i];
    }
    else if (depth === 2) {
        var coords2 = coords;
        return coords2.map(function (coord) { return _position(__model__, coord); });
    }
    else {
        var coords3 = coords;
        return coords3.map(function (coord2) { return _position(__model__, coord2); });
    }
}
/**
 * Adds a new position to the model.
 * @param __model__
 * @param coords XYZ coordinates as a list of three numbers.
 * @returns New position if successful, null if unsuccessful or on error.
 * @example position1 = make.Position([1,2,3])
 * @example_info Creates a position with coordinates x=1, y=2, z=3.
 */
function Position(__model__, coords) {
    // --- Error Check ---
    // checkCommTypes('make.Position', 'coords', coords, ['isCoord', 'isCoordList']);
    // TODO allow to Txyz[][]
    // --- Error Check ---
    var new_ents_arr = _position(__model__, coords);
    return Object(_libs_geo_info_id__WEBPACK_IMPORTED_MODULE_1__["idsMake"])(new_ents_arr);
}
// ================================================================================================
function _point(__model__, ents_arr) {
    if (!Array.isArray(ents_arr)) {
        var index = ents_arr[1];
        var point_i = __model__.geom.add.addPoint(index);
        return [_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].POINT, point_i];
    }
    else {
        return ents_arr.map(function (_ents_arr) { return _point(__model__, _ents_arr); });
    }
}
/**
 * Adds a new point to the model. If a list of positions is provided as the input, then a list of points is generated.
 * @param __model__
 * @param positions Position of point.
 * @returns New point if successful, null if unsuccessful or on error.
 * @example_info Creates a point at position1.
 * @example point1 = make.Point(position1)
 * @example_info Creates a point at position1.
 */
function Point(__model__, positions) {
    // --- Error Check ---
    var ents_arr = Object(_check_args__WEBPACK_IMPORTED_MODULE_3__["checkIDs"])('make.Point', 'positions', positions, ['isID', 'isIDList'], ['POSI']);
    // --- Error Check ---
    var new_ents_arr = _point(__model__, ents_arr);
    return Object(_libs_geo_info_id__WEBPACK_IMPORTED_MODULE_1__["idsMake"])(new_ents_arr);
}
// ================================================================================================
// Enums for Polyline()
var _EClose;
(function (_EClose) {
    _EClose["CLOSE"] = "close";
    _EClose["OPEN"] = "open";
})(_EClose || (_EClose = {}));
function _polyline(__model__, ents_arr, close) {
    if (Object(_libs_geo_info_id__WEBPACK_IMPORTED_MODULE_1__["getArrDepth"])(ents_arr) === 2) {
        var bool_close = (close === _EClose.CLOSE);
        var posis_i = Object(_libs_geo_info_id__WEBPACK_IMPORTED_MODULE_1__["idIndicies"])(ents_arr);
        var pline_i = __model__.geom.add.addPline(posis_i, bool_close);
        return [_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].PLINE, pline_i];
    }
    else {
        return ents_arr.map(function (ent_arr) { return _polyline(__model__, ent_arr, close); });
    }
}
/**
 * Adds a new polyline to the model.
 * @param __model__
 * @param positions List of positions.
 * @param close Enum of 'close' or 'open'.
 * @returns New polyline if successful, null if unsuccessful or on error.
 * @example polyline1 = make.Polyline([position1,position2,position3], close)
 * @example_info Creates a closed polyline with vertices position1, position2, position3 in sequence.
 */
function Polyline(__model__, positions, close) {
    // --- Error Check ---
    var ents_arr = Object(_check_args__WEBPACK_IMPORTED_MODULE_3__["checkIDs"])('make.Polyline', 'positions', positions, ['isIDList', 'isIDList_list'], ['POSI']); // TODO
    // --- Error Check ---
    var new_ents_arr = _polyline(__model__, ents_arr, close);
    return Object(_libs_geo_info_id__WEBPACK_IMPORTED_MODULE_1__["idsMake"])(new_ents_arr);
}
// ================================================================================================
function _polygon(__model__, ents_arr) {
    if (Object(_libs_geo_info_id__WEBPACK_IMPORTED_MODULE_1__["getArrDepth"])(ents_arr) === 2) {
        var posis_i = Object(_libs_geo_info_id__WEBPACK_IMPORTED_MODULE_1__["idIndicies"])(ents_arr);
        var pgon_i = __model__.geom.add.addPgon(posis_i);
        return [_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].PGON, pgon_i];
    }
    else {
        return ents_arr.map(function (_ents_arr) { return _polygon(__model__, _ents_arr); });
    }
}
/**
 * Adds a new polygon to the model.
 * @param __model__
 * @param positions List of positions.
 * @returns New polygon if successful, null if unsuccessful or on error.
 * @example polygon1 = make.Polygon([position1,position2,position3])
 * @example_info Creates a polygon with vertices position1, position2, position3 in sequence.
 */
function Polygon(__model__, positions) {
    // --- Error Check ---
    var ents_arr = Object(_check_args__WEBPACK_IMPORTED_MODULE_3__["checkIDs"])('make.Polygon', 'positions', positions, ['isIDList', 'isIDList_list'], ['POSI']);
    // --- Error Check ---
    var new_ents_arr = _polygon(__model__, ents_arr);
    return Object(_libs_geo_info_id__WEBPACK_IMPORTED_MODULE_1__["idsMake"])(new_ents_arr);
}
// ================================================================================================
function _collection(__model__, parent_index, ents_arr) {
    if (Object(_libs_geo_info_id__WEBPACK_IMPORTED_MODULE_1__["getArrDepth"])(ents_arr) === 1) {
        ents_arr = [ents_arr];
    }
    var points = [];
    var plines = [];
    var pgons = [];
    for (var _i = 0, ents_arr_1 = ents_arr; _i < ents_arr_1.length; _i++) {
        var ent_arr = ents_arr_1[_i];
        if (Object(_libs_geo_info_id__WEBPACK_IMPORTED_MODULE_1__["isPoint"])(ent_arr[0])) {
            points.push(ent_arr[1]);
        }
        if (Object(_libs_geo_info_id__WEBPACK_IMPORTED_MODULE_1__["isPline"])(ent_arr[0])) {
            plines.push(ent_arr[1]);
        }
        if (Object(_libs_geo_info_id__WEBPACK_IMPORTED_MODULE_1__["isPgon"])(ent_arr[0])) {
            pgons.push(ent_arr[1]);
        }
    }
    var coll_i = __model__.geom.add.addColl(parent_index, points, plines, pgons);
    return [_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].COLL, coll_i];
}
/**
 * Adds a new collection to the model.
 * @param __model__
 * @param parent_coll Collection
 * @param geometry List of points, polylines, polygons.
 * @returns New collection if successful, null if unsuccessful or on error.
 * @example collection1 = make.Collection([point1,polyine1,polygon1])
 * @example_info Creates a collection containing point1, polyline1, polygon1.
 */
function Collection(__model__, parent_coll, geometry) {
    // --- Error Check ---
    var fn_name = 'make.Collection';
    var parent_index;
    if (parent_coll !== null && parent_coll !== undefined) {
        var parent_ent_arr = Object(_check_args__WEBPACK_IMPORTED_MODULE_3__["checkIDs"])(fn_name, 'parent_coll', parent_coll, ['isID'], ['COLL']);
        parent_index = parent_ent_arr[1];
    }
    else {
        parent_index = -1;
    }
    var ents_arr = Object(_check_args__WEBPACK_IMPORTED_MODULE_3__["checkIDs"])(fn_name, 'geometry', geometry, ['isID', 'isIDList'], ['POINT', 'PLINE', 'PGON']);
    // --- Error Check ---
    var new_ent_arr = _collection(__model__, parent_index, ents_arr);
    return Object(_libs_geo_info_id__WEBPACK_IMPORTED_MODULE_1__["idsMake"])(new_ent_arr);
}
// ================================================================================================
// Stuff for Copy()
function _copyGeom(__model__, ents_arr, copy_attributes) {
    if (Object(_libs_geo_info_id__WEBPACK_IMPORTED_MODULE_1__["getArrDepth"])(ents_arr) === 1) {
        var _a = ents_arr, ent_type = _a[0], index = _a[1];
        if (Object(_libs_geo_info_id__WEBPACK_IMPORTED_MODULE_1__["isColl"])(ent_type)) {
            var coll_i = __model__.geom.add.copyColls(index, copy_attributes);
            return [ent_type, coll_i];
        }
        else if (Object(_libs_geo_info_id__WEBPACK_IMPORTED_MODULE_1__["isObj"])(ent_type)) {
            var obj_i = __model__.geom.add.copyObjs(ent_type, index, copy_attributes);
            return [ent_type, obj_i];
        }
        else if (Object(_libs_geo_info_id__WEBPACK_IMPORTED_MODULE_1__["isPosi"])(ent_type)) {
            var posi_i = __model__.geom.add.copyPosis(index, copy_attributes);
            return [ent_type, posi_i];
        }
    }
    else {
        return ents_arr.map(function (one_ent) { return _copyGeom(__model__, one_ent, copy_attributes); });
    }
}
function _copyGeomPosis(__model__, ents_arr, copy_attributes) {
    if (Object(_libs_geo_info_id__WEBPACK_IMPORTED_MODULE_1__["getArrDepth"])(ents_arr) === 1) {
        ents_arr = [ents_arr];
    }
    // create the new positions
    var old_to_new_posis_i_map = new Map(); // count number of posis
    for (var _i = 0, ents_arr_2 = ents_arr; _i < ents_arr_2.length; _i++) {
        var ent_arr = ents_arr_2[_i];
        var _a = ent_arr, ent_type = _a[0], index = _a[1];
        if (!Object(_libs_geo_info_id__WEBPACK_IMPORTED_MODULE_1__["isPosi"])(ent_type)) { // obj or coll
            var old_posis_i = __model__.geom.query.navAnyToPosi(ent_type, index);
            var ent_new_posis_i = [];
            for (var _b = 0, old_posis_i_1 = old_posis_i; _b < old_posis_i_1.length; _b++) {
                var old_posi_i = old_posis_i_1[_b];
                var new_posi_i = void 0;
                if (old_to_new_posis_i_map.has(old_posi_i)) {
                    new_posi_i = old_to_new_posis_i_map.get(old_posi_i);
                }
                else {
                    new_posi_i = __model__.geom.add.copyPosis(old_posi_i, copy_attributes);
                    old_to_new_posis_i_map.set(old_posi_i, new_posi_i);
                }
                ent_new_posis_i.push(new_posi_i);
            }
            __model__.geom.add.replacePosis(ent_type, index, ent_new_posis_i);
        }
    }
    // return all the new points
    var all_new_posis_i = Array.from(old_to_new_posis_i_map.values());
    return all_new_posis_i.map(function (posi_i) { return [_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].POSI, posi_i]; });
}
var _ECopyAttribues;
(function (_ECopyAttribues) {
    _ECopyAttribues["COPY_ATTRIBUTES"] = "copy_attributes";
    _ECopyAttribues["NO_ATTRIBUTES"] = "no_attributes";
})(_ECopyAttribues || (_ECopyAttribues = {}));
/**
 * Adds a new copy of specified entities to the model.
 * @param __model__
 * @param entities Position, point, polyline, polygon, collection to be copied.
 * @param copy_positions Enum to create a copy of the existing positions or to reuse the existing positions.
 * @param copy_attributes Enum to copy attributes or to have no attributes copied.
 * @returns New copy if successful, null if unsuccessful or on error.
 * @example copy1 = make.Copy([position1,polyine1,polygon1], copy_positions, copy_attributes)
 * @example_info Creates a list containing a copy of the entities in sequence of input.
 */
function Copy(__model__, entities, copy_attributes) {
    // --- Error Check ---
    var ents_arr = Object(_check_args__WEBPACK_IMPORTED_MODULE_3__["checkIDs"])('make.Copy', 'entities', entities, ['isID', 'isIDList'], ['POSI', 'POINT', 'PLINE', 'PGON', 'COLL']);
    // --- Error Check ---
    var bool_copy_attribs = (copy_attributes === _ECopyAttribues.COPY_ATTRIBUTES);
    // copy the list of entities
    var new_ents_arr = _copyGeom(__model__, ents_arr, bool_copy_attribs);
    // copy the positions that belong to the list of entities
    _copyGeomPosis(__model__, ents_arr, bool_copy_attribs);
    // return only the new entities
    return Object(_libs_geo_info_id__WEBPACK_IMPORTED_MODULE_1__["idsMake"])(new_ents_arr);
}
// ================================================================================================
// Loft modelling operation
var _ELoftMethod;
(function (_ELoftMethod) {
    _ELoftMethod["OPEN"] = "open";
    _ELoftMethod["CLOSED"] = "closed";
})(_ELoftMethod || (_ELoftMethod = {}));
function _loft(__model__, ents_arr, method) {
    var edges_arrs_i = [];
    var num_edges = 0;
    for (var _i = 0, ents_arr_3 = ents_arr; _i < ents_arr_3.length; _i++) {
        var ents = ents_arr_3[_i];
        var _a = ents, ent_type = _a[0], index = _a[1];
        var edges_i = __model__.geom.query.navAnyToEdge(ent_type, index);
        if (edges_arrs_i.length === 0) {
            num_edges = edges_i.length;
        }
        if (edges_i.length !== num_edges) {
            throw new Error('make.Loft: Number of edges is not consistent.');
        }
        edges_arrs_i.push(edges_i);
    }
    if (method === _ELoftMethod.CLOSED) {
        edges_arrs_i.push(edges_arrs_i[0]);
    }
    var pgons_i = [];
    for (var i = 0; i < edges_arrs_i.length - 1; i++) {
        var edges_i_a = edges_arrs_i[i];
        var edges_i_b = edges_arrs_i[i + 1];
        for (var j = 0; j < num_edges; j++) {
            var verts_i_a = __model__.geom.query.navAnyToPosi(_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].EDGE, edges_i_a[j]);
            var verts_i_b = __model__.geom.query.navAnyToPosi(_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].EDGE, edges_i_b[j]);
            var pgon_i = __model__.geom.add.addPgon([verts_i_a[0], verts_i_a[1], verts_i_b[1], verts_i_b[0]]);
            pgons_i.push(pgon_i);
        }
    }
    return pgons_i.map(function (pgon_i) { return [_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].PGON, pgon_i]; });
}
/**
 * Lofts between edges.
 * @param __model__
 * @param entities Edges (or wires, polylines or polygons with the same number of edges).
 * @param method Enum, if 'closed', then close the loft back to the first edge in the input.
 * @returns Lofted polygons between edges if successful, null if unsuccessful or on error.
 * @example surface1 = make.Loft([polyline1,polyline2,polyline3], closed)
 * @example_info Creates a list of polygons lofting between polyline1, polyline2, polyline3, and polyline1.
 */
function Loft(__model__, entities, method) {
    // --- Error Check ---
    var ents_arr = Object(_check_args__WEBPACK_IMPORTED_MODULE_3__["checkIDs"])('make.Loft', 'entities', entities, ['isIDList'], ['EDGE', 'WIRE', 'PLINE', 'PGON']);
    // --- Error Check ---
    var new_ents_arr = _loft(__model__, ents_arr, method);
    return Object(_libs_geo_info_id__WEBPACK_IMPORTED_MODULE_1__["idsMake"])(new_ents_arr);
}
// ================================================================================================
function _extrude(__model__, ents_arr, distance, divisions) {
    var extrude_vec = (Array.isArray(distance) ? distance : [0, 0, distance]);
    var extrude_vec_div = Object(_libs_geom_vectors__WEBPACK_IMPORTED_MODULE_2__["vecDiv"])(extrude_vec, divisions);
    if (!Array.isArray(ents_arr[0])) {
        var _a = ents_arr, ent_type = _a[0], index = _a[1];
        // check if this is a collection
        if (Object(_libs_geo_info_id__WEBPACK_IMPORTED_MODULE_1__["isColl"])(ent_type)) {
            var points_i = __model__.geom.query.navCollToPoint(index);
            var res1 = points_i.map(function (point_i) { return _extrude(__model__, [_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].POINT, point_i], extrude_vec, divisions); });
            var plines_i = __model__.geom.query.navCollToPline(index);
            var res2 = plines_i.map(function (pline_i) { return _extrude(__model__, [_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].PLINE, pline_i], extrude_vec, divisions); });
            var pgons_i = __model__.geom.query.navCollToPgon(index);
            var res3 = pgons_i.map(function (pgon_i) { return _extrude(__model__, [_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].PGON, pgon_i], extrude_vec, divisions); });
            return [].concat.apply([], [res1, res2, res3]);
        }
        // check if this is a position, a vertex, or a point -> pline
        if (Object(_libs_geo_info_id__WEBPACK_IMPORTED_MODULE_1__["isDim0"])(ent_type)) {
            var all_posis_i = __model__.geom.query.navAnyToPosi(ent_type, index);
            var new_posis_i = [all_posis_i[0]];
            for (var i = 1; i < divisions + 1; i++) {
                var extrude_vec_mult = Object(_libs_geom_vectors__WEBPACK_IMPORTED_MODULE_2__["vecMult"])(extrude_vec_div, i);
                var new_pline_posi_i = __model__.geom.add.copyPosis(all_posis_i[0], false); // Do not copy attribs
                __model__.attribs.add.movePosiCoords(new_pline_posi_i, extrude_vec_mult);
                new_posis_i.push(new_pline_posi_i);
            }
            // loft between the positions and create a single polyline
            var pline_i = __model__.geom.add.addPline(new_posis_i);
            return [_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].PLINE, pline_i];
        }
        // extrude edges -> polygons
        var new_pgons_i = [];
        var edges_i = __model__.geom.query.navAnyToEdge(ent_type, index);
        var strip_posis_map_1 = new Map();
        for (var _i = 0, edges_i_1 = edges_i; _i < edges_i_1.length; _i++) {
            var edge_i = edges_i_1[_i];
            // get exist posis_i
            var exist_posis_i = __model__.geom.query.navAnyToPosi(_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].EDGE, edge_i);
            // create the new posis strip if necessary
            for (var _b = 0, exist_posis_i_1 = exist_posis_i; _b < exist_posis_i_1.length; _b++) {
                var exist_posi_i = exist_posis_i_1[_b];
                if (strip_posis_map_1.get(exist_posi_i) === undefined) {
                    var xyz = __model__.attribs.query.getPosiCoords(exist_posi_i);
                    var strip_posis_i = [exist_posi_i];
                    for (var i = 1; i < divisions + 1; i++) {
                        var strip_posi_i = __model__.geom.add.addPosition();
                        var move_xyz = Object(_libs_geom_vectors__WEBPACK_IMPORTED_MODULE_2__["vecMult"])(extrude_vec_div, i);
                        __model__.attribs.add.setPosiCoords(strip_posi_i, Object(_libs_geom_vectors__WEBPACK_IMPORTED_MODULE_2__["vecAdd"])(xyz, move_xyz));
                        strip_posis_i.push(strip_posi_i);
                    }
                    strip_posis_map_1.set(exist_posi_i, strip_posis_i);
                }
            }
            // get the two strips and make polygons
            var strip1_posis_i = strip_posis_map_1.get(exist_posis_i[0]);
            var strip2_posis_i = strip_posis_map_1.get(exist_posis_i[1]);
            for (var i = 0; i < strip1_posis_i.length - 1; i++) {
                var c1 = strip1_posis_i[i];
                var c2 = strip2_posis_i[i];
                var c3 = strip2_posis_i[i + 1];
                var c4 = strip1_posis_i[i + 1];
                var pgon_i = __model__.geom.add.addPgon([c1, c2, c3, c4]);
                new_pgons_i.push(pgon_i);
            }
        }
        if (Object(_libs_geo_info_id__WEBPACK_IMPORTED_MODULE_1__["isDim2"])(ent_type)) { // create a top -> polygon
            var old_posis_i = __model__.geom.query.navAnyToPosi(ent_type, index);
            var new_posis_i = old_posis_i.map(function (old_posi_i) { return strip_posis_map_1.get(old_posi_i)[divisions]; });
            var pgon_i = __model__.geom.add.addPgon(new_posis_i);
            new_pgons_i.push(pgon_i);
        }
        return new_pgons_i.map(function (pgon_i) { return [_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].PGON, pgon_i]; });
    }
    else {
        return [].concat.apply([], ents_arr.map(function (_ents_arr) { return _extrude(__model__, _ents_arr, extrude_vec, divisions); }));
    }
}
/**
 * Extrudes geometry by distance (in default direction = z-axis) or by vector.
 * - Extrusion of location produces a line;
 * - Extrusion of line produces a polygon;
 * - Extrusion of surface produces a list of surfaces.
 * @param __model__
 * @param entities Vertex, edge, wire, face, position, point, polyline, polygon, collection.
 * @param distance Number or vector. If number, assumed to be [0,0,value] (i.e. extrusion distance in z-direction).
 * @param divisions Number of divisions to divide extrusion by. Minimum is 1.
 * @returns Extrusion of entities if successful, null if unsuccessful or on error.
 * @example extrusion1 = make.Extrude(point1, 10, 2)
 * @example_info Creates a list of 2 lines of total length 10 (length 5 each) in the z-direction.
 * If point1 = [0,0,0], extrusion1[0] is a line between [0,0,0] and [0,0,5]; extrusion1[1] is a line between [0,0,5] and [0,0,10].
 * @example extrusion2 = make.Extrude(polygon1, [0,5,0], 1)
 * @example_info Extrudes polygon1 by 5 in the y-direction, creating a list of surfaces.
 */
function Extrude(__model__, entities, distance, divisions) {
    // --- Error Check ---
    var fn_name = 'make.Extrude';
    var ents_arr = Object(_check_args__WEBPACK_IMPORTED_MODULE_3__["checkIDs"])(fn_name, 'entities', entities, ['isID', 'isIDList'], ['VERT', 'EDGE', 'WIRE', 'FACE', 'POSI', 'POINT', 'PLINE', 'PGON', 'COLL']);
    Object(_check_args__WEBPACK_IMPORTED_MODULE_3__["checkCommTypes"])(fn_name, 'distance', distance, ['isNumber', 'isVector']);
    Object(_check_args__WEBPACK_IMPORTED_MODULE_3__["checkCommTypes"])(fn_name, 'divisions', divisions, ['isInt']);
    // --- Error Check ---
    var new_ents_arr = _extrude(__model__, ents_arr, distance, divisions);
    return Object(_libs_geo_info_id__WEBPACK_IMPORTED_MODULE_1__["idsMake"])(new_ents_arr);
}
// ================================================================================================
/**
 * Joins polylines to polylines or polygons to polygons.
 * @param __model__
 * @param geometry Polylines or polygons.
 * @returns New joined polyline or polygon if successful, null if unsuccessful or on error.
 * @example joined1 = make.Join([polyline1,polyline2])
 * @example_info Creates a new polyline by joining polyline1 and polyline2. Geometries must be of the same type.
 */
function Join(__model__, geometry) {
    // --- Error Check ---
    var ents_arr = Object(_check_args__WEBPACK_IMPORTED_MODULE_3__["checkIDs"])('make.Join', 'geometry', geometry, ['isIDList'], ['PLINE', 'PGON']);
    // --- Error Check ---
    throw new Error('Not implemented.');
    return null;
}
// ================================================================================================
// Divide edge modelling operation
var _EDivideMethod;
(function (_EDivideMethod) {
    _EDivideMethod["BY_NUMBER"] = "by_number";
    _EDivideMethod["BY_LENGTH"] = "by_length";
})(_EDivideMethod || (_EDivideMethod = {}));
function _divideEdge(__model__, edge_i, divisor, method) {
    var posis_i = __model__.geom.query.navAnyToPosi(_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].EDGE, edge_i);
    var start = __model__.attribs.query.getPosiCoords(posis_i[0]);
    var end = __model__.attribs.query.getPosiCoords(posis_i[1]);
    var new_xyzs;
    if (method === _EDivideMethod.BY_NUMBER) {
        new_xyzs = Object(_libs_geom_vectors__WEBPACK_IMPORTED_MODULE_2__["interpByNum"])(start, end, divisor - 1);
    }
    else {
        new_xyzs = Object(_libs_geom_vectors__WEBPACK_IMPORTED_MODULE_2__["interpByLen"])(start, end, divisor);
    }
    var new_edges_i = [];
    var old_edge_i = edge_i;
    for (var _i = 0, new_xyzs_1 = new_xyzs; _i < new_xyzs_1.length; _i++) {
        var new_xyz = new_xyzs_1[_i];
        var posi_i = __model__.geom.add.addPosition();
        __model__.attribs.add.setPosiCoords(posi_i, new_xyz);
        var new_edge_i = __model__.geom.add.insertVertIntoEdge(old_edge_i, posi_i);
        new_edges_i.push(old_edge_i);
        old_edge_i = new_edge_i;
    }
    new_edges_i.push(old_edge_i);
    return new_edges_i;
}
function _divide(__model__, ents_arr, divisor, method) {
    if (Object(_libs_geo_info_id__WEBPACK_IMPORTED_MODULE_1__["getArrDepth"])(ents_arr) === 1) {
        var _a = ents_arr, ent_type = _a[0], index = _a[1];
        var exist_edges_i = void 0;
        if (!Object(_libs_geo_info_id__WEBPACK_IMPORTED_MODULE_1__["isEdge"])(ent_type)) {
            exist_edges_i = __model__.geom.query.navAnyToEdge(ent_type, index).slice();
        }
        else {
            exist_edges_i = [index];
        }
        var all_new_edges_i = [];
        for (var _i = 0, exist_edges_i_1 = exist_edges_i; _i < exist_edges_i_1.length; _i++) {
            var exist_edge_i = exist_edges_i_1[_i];
            var new_edges_i = _divideEdge(__model__, exist_edge_i, divisor, method);
            all_new_edges_i.push.apply(all_new_edges_i, new_edges_i);
        }
        return all_new_edges_i.map(function (one_edge_i) { return [_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].EDGE, one_edge_i]; });
    }
    else {
        return [].concat.apply([], ents_arr.map(function (one_edge) { return _divide(__model__, one_edge, divisor, method); }));
    }
}
/**
 * Divides edge, wire or polyline by length or by number of segments.
 * If object is not exact multiple of length, length of last segment will be the remainder.
 * @param __model__
 * @param edge Edge, wire, or polyline(s) to be divided.
 * @param divisor Segment length or number of segments.
 * @param method Enum to choose which method.
 * @returns List of new edges (segments of original edges), null if unsuccessful or on error.
 * @example segments1 = make.Divide(edge1, 5, by_number)
 * @example_info Creates a list of 5 equal segments from edge1.
 * @example segments2 = make.Divide(edge1, 5, by_length)
 * @example_info If edge1 has length 13, creates from edge a list of two segments of length 5 and one segment of length 3.
 */
function Divide(__model__, edge, divisor, method) {
    // --- Error Check ---
    var fn_name = 'make.Divide';
    var ents_arr = Object(_check_args__WEBPACK_IMPORTED_MODULE_3__["checkIDs"])('make.Copy', 'edge', edge, ['isID', 'isIDList'], ['EDGE', 'WIRE', 'PLINE']);
    Object(_check_args__WEBPACK_IMPORTED_MODULE_3__["checkCommTypes"])(fn_name, 'divisor', divisor, ['isNumber']);
    // --- Error Check ---
    var new_ents_arr = _divide(__model__, ents_arr, divisor, method);
    return Object(_libs_geo_info_id__WEBPACK_IMPORTED_MODULE_1__["idsMake"])(new_ents_arr);
}
// ================================================================================================
/**
 * Unweld vertices so that they do not share positions.
 * For the vertices of the specified entities, if they share positions with other entities in the model,
 * then those positions will be replaced with new positions.
 * This function performs a simple unweld.
 * That is, the vertices within the set of specified entities are not unwelded.
 * @param __model__
 * @param entities Vertex, edge, wire, face, point, polyline, polygon, collection.
 * @param method Enum; the method to use for unweld.
 * @returns The newly created positions resulting from the unweld.
 * @example mod.Unweld(polyline1)
 * @example_info Unwelds polyline1 from all ther entities that shares the same position.
 */
function Unweld(__model__, entities) {
    // --- Error Check ---
    var ents_arr = Object(_check_args__WEBPACK_IMPORTED_MODULE_3__["checkIDs"])('modify.Unweld', 'entities', entities, ['isID', 'isIDList'], ['VERT', 'EDGE', 'WIRE', 'FACE', 'POINT', 'PLINE', 'PGON', 'COLL']);
    // --- Error Check ---
    if (!Array.isArray(ents_arr[0])) {
        ents_arr = [ents_arr];
    }
    // get verts_i
    var all_verts_i = []; // count number of posis
    for (var _i = 0, ents_arr_4 = ents_arr; _i < ents_arr_4.length; _i++) {
        var ents = ents_arr_4[_i];
        var verts_i = __model__.geom.query.navAnyToVert(ents[0], ents[1]);
        all_verts_i.push.apply(all_verts_i, verts_i);
    }
    var new_posis_i = __model__.geom.add.unweldVerts(all_verts_i);
    return new_posis_i.map(function (posi_i) { return Object(_libs_geo_info_id__WEBPACK_IMPORTED_MODULE_1__["idsMake"])([_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].POSI, posi_i]); });
}
// ================================================================================================
// Explode
// Pipe
// Offset


/***/ }),

/***/ "./src/app/core/modules/modify.ts":
/*!****************************************!*\
  !*** ./src/app/core/modules/modify.ts ***!
  \****************************************/
/*! exports provided: Move, Rotate, Scale, Mirror, XForm, Reverse, Close, _EPromoteMethod, _EPromoteAttribTypes, Promote, Weld, Delete */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Move", function() { return Move; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Rotate", function() { return Rotate; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Scale", function() { return Scale; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Mirror", function() { return Mirror; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "XForm", function() { return XForm; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Reverse", function() { return Reverse; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Close", function() { return Close; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_EPromoteMethod", function() { return _EPromoteMethod; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_EPromoteAttribTypes", function() { return _EPromoteAttribTypes; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Promote", function() { return Promote; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Weld", function() { return Weld; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Delete", function() { return Delete; });
/* harmony import */ var _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @libs/geo-info/common */ "./src/libs/geo-info/common.ts");
/* harmony import */ var _libs_geo_info_id__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @libs/geo-info/id */ "./src/libs/geo-info/id.ts");
/* harmony import */ var _libs_geom_vectors__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @libs/geom/vectors */ "./src/libs/geom/vectors.ts");
/* harmony import */ var _check_args__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./_check_args */ "./src/app/core/modules/_check_args.ts");
/* harmony import */ var _libs_geom_matrix__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @libs/geom/matrix */ "./src/libs/geom/matrix.ts");





// ================================================================================================
/**
 * Moves entities by vector.
 * @param __model__
 * @param entities Position, vertex, edge, wire, face, point, polyline, polygon, collection.
 * @param vector List of three numbers.
 * @returns Modifies the input entities.
 * @example modify.Move(position1, [1,1,1])
 * @example_info Moves position1 by [1,1,1].
 */
function Move(__model__, entities, vector) {
    // --- Error Check ---
    var fn_name = 'modify.Move';
    var ents_arr = Object(_check_args__WEBPACK_IMPORTED_MODULE_3__["checkIDs"])(fn_name, 'entities', entities, ['isID', 'isIDList'], ['POSI', 'VERT', 'EDGE', 'WIRE', 'FACE', 'POINT', 'PLINE', 'PGON', 'COLL']);
    Object(_check_args__WEBPACK_IMPORTED_MODULE_3__["checkCommTypes"])(fn_name, 'vector', vector, ['isVector']);
    // --- Error Check ---
    if (!Array.isArray(ents_arr[0])) {
        ents_arr = [ents_arr];
    }
    var posis_i = [];
    for (var _i = 0, ents_arr_1 = ents_arr; _i < ents_arr_1.length; _i++) {
        var ents = ents_arr_1[_i];
        posis_i.push.apply(posis_i, __model__.geom.query.navAnyToPosi(ents[0], ents[1]));
    }
    var unique_posis_i = Array.from(new Set(posis_i));
    for (var _a = 0, unique_posis_i_1 = unique_posis_i; _a < unique_posis_i_1.length; _a++) {
        var unique_posi_i = unique_posis_i_1[_a];
        var old_xyz = __model__.attribs.query.getPosiCoords(unique_posi_i);
        var new_xyz = Object(_libs_geom_vectors__WEBPACK_IMPORTED_MODULE_2__["vecAdd"])(old_xyz, vector);
        __model__.attribs.add.setPosiCoords(unique_posi_i, new_xyz);
    }
    return;
}
// ================================================================================================
/**
 * Rotates entities on plane by angle.
 * @param __model__
 * @param entities Vertex, edge, wire, face, plane, position, point, polyline, polygon, collection.
 * @param origin A list of three numbers (or a position, point, or vertex).
 * @param axis A list of three numbers.
 * @param angle Angle (in radians).
 * @returns Modifies the input entities.
 * @example modify.Rotate(polyline1, plane1, PI)
 * @example_info Rotates polyline1 on plane1 by PI (i.e. 180 degrees).
 */
function Rotate(__model__, entities, origin, axis, angle) {
    // --- Error Check ---
    var fn_name = 'modify.Rotate';
    var ents_arr = Object(_check_args__WEBPACK_IMPORTED_MODULE_3__["checkIDs"])(fn_name, 'entities', entities, ['isID', 'isIDList'], ['POSI', 'VERT', 'EDGE', 'WIRE', 'FACE', 'POINT', 'PLINE', 'PGON', 'COLL']);
    var ori_ents_arr = Object(_check_args__WEBPACK_IMPORTED_MODULE_3__["checkCommTypes"])(fn_name, 'origin', origin, ['isOrigin']);
    Object(_check_args__WEBPACK_IMPORTED_MODULE_3__["checkCommTypes"])(fn_name, 'axis', axis, ['isXYZlist']);
    Object(_check_args__WEBPACK_IMPORTED_MODULE_3__["checkCommTypes"])(fn_name, 'angle', angle, ['isNumber']);
    // --- Error Check ---
    // handle geometry type
    if (!Array.isArray(ents_arr[0])) {
        ents_arr = [ents_arr];
    }
    // handle origin type
    if (!Array.isArray(origin)) {
        var origin_posi = __model__.geom.query.navAnyToPosi(ori_ents_arr[0], ori_ents_arr[1]);
        origin = __model__.attribs.query.getPosiCoords(origin_posi[0]);
    }
    // rotate all positions
    var posis_i = [];
    for (var _i = 0, ents_arr_2 = ents_arr; _i < ents_arr_2.length; _i++) {
        var ents = ents_arr_2[_i];
        posis_i.push.apply(posis_i, __model__.geom.query.navAnyToPosi(ents[0], ents[1]));
    }
    var unique_posis_i = Array.from(new Set(posis_i));
    var matrix = Object(_libs_geom_matrix__WEBPACK_IMPORTED_MODULE_4__["rotateMatrix"])(origin, axis, angle);
    for (var _a = 0, unique_posis_i_2 = unique_posis_i; _a < unique_posis_i_2.length; _a++) {
        var unique_posi_i = unique_posis_i_2[_a];
        var old_xyz = __model__.attribs.query.getPosiCoords(unique_posi_i);
        var new_xyz = Object(_libs_geom_matrix__WEBPACK_IMPORTED_MODULE_4__["multMatrix"])(old_xyz, matrix);
        __model__.attribs.add.setPosiCoords(unique_posi_i, new_xyz);
    }
    return;
}
// ================================================================================================
/**
 * Scales entities on plane by factor.
 * @param __model__
 * @param entities Vertex, edge, wire, face, plane, position, point, polyline, polygon, collection.
 * @param origin Position, point, vertex, list of three numbers, plane.
 * @param scale Scale factor.
 * @returns Modifies the input entities.
 * @example modify.Scale(entities, plane1, 0.5)
 * @example_info Scales entities by 0.5 on plane1.
 */
function Scale(__model__, entities, origin, scale) {
    // --- Error Check ---
    var fn_name = 'modify.Scale';
    var ents_arr = Object(_check_args__WEBPACK_IMPORTED_MODULE_3__["checkIDs"])(fn_name, 'entities', entities, ['isID', 'isIDList'], ['POSI', 'VERT', 'EDGE', 'WIRE', 'FACE', 'POINT', 'PLINE', 'PGON', 'COLL']);
    var ori_ents_arr = Object(_check_args__WEBPACK_IMPORTED_MODULE_3__["checkCommTypes"])(fn_name, 'origin', origin, ['isOrigin', 'isPlane']);
    Object(_check_args__WEBPACK_IMPORTED_MODULE_3__["checkCommTypes"])(fn_name, 'scale', scale, ['isNumber', 'isXYZlist']);
    // --- Error Check ---
    // handle geometry type
    if (!Array.isArray(ents_arr[0])) {
        ents_arr = [ents_arr];
    }
    // handle origin type
    if (!Array.isArray(origin)) {
        var origin_posi = __model__.geom.query.navAnyToPosi(ori_ents_arr[0], ori_ents_arr[1]);
        origin = __model__.attribs.query.getPosiCoords(origin_posi[0]);
    }
    // handle scale type
    if (!Array.isArray(scale)) {
        scale = [scale, scale, scale];
    }
    // scale all positions
    var posis_i = [];
    for (var _i = 0, ents_arr_3 = ents_arr; _i < ents_arr_3.length; _i++) {
        var ents = ents_arr_3[_i];
        posis_i.push.apply(posis_i, __model__.geom.query.navAnyToPosi(ents[0], ents[1]));
    }
    var unique_posis_i = Array.from(new Set(posis_i));
    var matrix = Object(_libs_geom_matrix__WEBPACK_IMPORTED_MODULE_4__["scaleMatrix"])(origin, scale);
    for (var _a = 0, unique_posis_i_3 = unique_posis_i; _a < unique_posis_i_3.length; _a++) {
        var unique_posi_i = unique_posis_i_3[_a];
        var old_xyz = __model__.attribs.query.getPosiCoords(unique_posi_i);
        var new_xyz = Object(_libs_geom_matrix__WEBPACK_IMPORTED_MODULE_4__["multMatrix"])(old_xyz, matrix);
        __model__.attribs.add.setPosiCoords(unique_posi_i, new_xyz);
    }
    return;
}
// ================================================================================================
/**
 * Mirrors entities across plane.
 * @param __model__
 * @param entities Vertex, edge, wire, face, plane, position, point, polyline, polygon, collection.
 * @param origin Position, vertex, point, list of three numbers.
 * @param direction Vector or a list of three numbers.
 * @returns Modifies the input entities.
 * @example modify.Mirror(polygon1, plane1)
 * @example_info Mirrors polygon1 across plane1.
 */
function Mirror(__model__, entities, origin, direction) {
    // --- Error Check ---
    var fn_name = 'modify.Mirror';
    var ents_arr = Object(_check_args__WEBPACK_IMPORTED_MODULE_3__["checkIDs"])(fn_name, 'entities', entities, ['isID', 'isIDList'], ['POSI', 'VERT', 'EDGE', 'WIRE', 'FACE', 'POINT', 'PLINE', 'PGON', 'COLL']);
    var ori_ents_arr = Object(_check_args__WEBPACK_IMPORTED_MODULE_3__["checkCommTypes"])(fn_name, 'origin', origin, ['isOrigin']);
    Object(_check_args__WEBPACK_IMPORTED_MODULE_3__["checkCommTypes"])(fn_name, 'direction', direction, ['isVector']);
    // --- Error Check ---
    // handle geometry type
    if (!Array.isArray(ents_arr[0])) {
        ents_arr = [ents_arr];
    }
    // handle origin type
    if (!Array.isArray(origin)) {
        var _a = ori_ents_arr, origin_ent_type = _a[0], origin_index = _a[1];
        var origin_posi = __model__.geom.query.navAnyToPosi(origin_ent_type, origin_index);
        origin = __model__.attribs.query.getPosiCoords(origin_posi[0]);
    }
    // mirror all positions
    var posis_i = [];
    for (var _i = 0, ents_arr_4 = ents_arr; _i < ents_arr_4.length; _i++) {
        var ents = ents_arr_4[_i];
        var _b = ents, ent_type = _b[0], index = _b[1];
        posis_i.push.apply(posis_i, __model__.geom.query.navAnyToPosi(ent_type, index));
    }
    var unique_posis_i = Array.from(new Set(posis_i));
    var matrix = Object(_libs_geom_matrix__WEBPACK_IMPORTED_MODULE_4__["mirrorMatrix"])(origin, direction);
    for (var _c = 0, unique_posis_i_4 = unique_posis_i; _c < unique_posis_i_4.length; _c++) {
        var unique_posi_i = unique_posis_i_4[_c];
        var old_xyz = __model__.attribs.query.getPosiCoords(unique_posi_i);
        var new_xyz = Object(_libs_geom_matrix__WEBPACK_IMPORTED_MODULE_4__["multMatrix"])(old_xyz, matrix);
        __model__.attribs.add.setPosiCoords(unique_posi_i, new_xyz);
    }
}
// ================================================================================================
/**
 * Transforms entities from one construction plane to another.
 * @param __model__
 * @param entities Vertex, edge, wire, face, position, point, polyline, polygon, collection.
 * @param from Plane defining target construction plane.
 * @param to Plane defining destination construction plane.
 * @returns Modifies the input entities.
 * @example modify.XForm(polygon1, plane1, plane2)
 * @example_info Transforms polygon1 from plane1 to plane2.
 */
function XForm(__model__, entities, from, to) {
    // --- Error Check ---
    // const fn_name = 'modify.Mirror';
    // const ents_arr = checkIDs(fn_name, 'entities', entities, ['isID', 'isIDList'],
    //                          ['POSI', 'VERT', 'EDGE', 'WIRE', 'FACE', 'POINT', 'PLINE', 'PGON', 'COLL']);
    // checkCommTypes(fn_name, 'from', from, ['isPlane']);
    // checkCommTypes(fn_name, 'to', to, ['isPlane']);
    // --- Error Check ---
    // handle geometry type
    if (!Array.isArray(entities)) {
        entities = [entities];
    }
    // xform all positions
    var posis_i = [];
    for (var _i = 0, entities_1 = entities; _i < entities_1.length; _i++) {
        var geom_id = entities_1[_i];
        var _a = Object(_libs_geo_info_id__WEBPACK_IMPORTED_MODULE_1__["idsBreak"])(geom_id), ent_type = _a[0], index = _a[1];
        posis_i.push.apply(posis_i, __model__.geom.query.navAnyToPosi(ent_type, index));
    }
    var unique_posis_i = Array.from(new Set(posis_i));
    var matrix = Object(_libs_geom_matrix__WEBPACK_IMPORTED_MODULE_4__["xfromSourceTargetMatrix"])(from, to);
    for (var _b = 0, unique_posis_i_5 = unique_posis_i; _b < unique_posis_i_5.length; _b++) {
        var unique_posi_i = unique_posis_i_5[_b];
        var old_xyz = __model__.attribs.query.getPosiCoords(unique_posi_i);
        var new_xyz = Object(_libs_geom_matrix__WEBPACK_IMPORTED_MODULE_4__["multMatrix"])(old_xyz, matrix);
        __model__.attribs.add.setPosiCoords(unique_posi_i, new_xyz);
    }
}
// ================================================================================================
/**
 * Reverses direction of entities.
 * @param __model__
 * @param entities Wire, face, polyline, polygon.
 * @returns Modifies the input entities.
 * @example modify.Reverse(face1)
 * @example_info Flips face1 and reverses its normal.
 * @example modify.Reverse(polyline1)
 * @example_info Reverses the order of vertices to reverse the direction of the polyline.
 */
function Reverse(__model__, entities) {
    // --- Error Check ---
    // const ents_arr = checkIDs('modify.Reverse', 'entities', entities, ['isID', 'isIDList'], ['PLINE', 'PGON', 'WIRE']);
    // --- Error Check ---
    throw new Error('Not implemented.');
}
// ================================================================================================
function _close(__model__, ents_arr) {
    if (!Array.isArray(ents_arr[0])) {
        var _a = ents_arr, ent_type = _a[0], index = _a[1];
        var wire_i = index;
        if (ent_type === _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].PLINE) {
            wire_i = __model__.geom.query.navPlineToWire(index);
        }
        else if (ent_type !== _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].WIRE) {
            throw new Error('modify.Close: Entity is of wrong type. It must be either a polyline or a wire.');
        }
        __model__.geom.add.closeWire(wire_i);
    }
    else {
        for (var _i = 0, ents_arr_5 = ents_arr; _i < ents_arr_5.length; _i++) {
            var ents = ents_arr_5[_i];
            _close(__model__, ents);
        }
    }
}
/**
 * Closes polyline(s) if open.
 * @param __model__
 * @param lines Polyline(s).
 * @returns Modifies the input polyline(s).
 * @example modify.Close([polyline1,polyline2,...])
 * @example_info If open, polylines are changed to closed; if already closed, nothing happens.
 */
function Close(__model__, lines) {
    // --- Error Check ---
    var ents_arr = Object(_check_args__WEBPACK_IMPORTED_MODULE_3__["checkIDs"])('modify.Close', 'lines', lines, ['isID', 'isIDList'], ['PLINE']);
    // --- Error Check ---
    _close(__model__, ents_arr);
}
// ================================================================================================
// Promote modelling operation
var _EPromoteMethod;
(function (_EPromoteMethod) {
    _EPromoteMethod["MEAN"] = "mean";
    _EPromoteMethod["MIN"] = "min";
    _EPromoteMethod["MAX"] = "max";
    _EPromoteMethod["NONE"] = "none";
})(_EPromoteMethod || (_EPromoteMethod = {}));
// Promote modelling operation
var _EPromoteAttribTypes;
(function (_EPromoteAttribTypes) {
    _EPromoteAttribTypes["POSIS"] = "positions";
    _EPromoteAttribTypes["VERTS"] = "vertices";
    _EPromoteAttribTypes["EDGES"] = "edges";
    _EPromoteAttribTypes["WIRES"] = "wires";
    _EPromoteAttribTypes["FACES"] = "faces";
    _EPromoteAttribTypes["POINTS"] = "points";
    _EPromoteAttribTypes["PLINES"] = "plines";
    _EPromoteAttribTypes["PGONS"] = "pgons";
    _EPromoteAttribTypes["COLLS"] = "collections";
})(_EPromoteAttribTypes || (_EPromoteAttribTypes = {}));
/**
 * Promotes or demotes an attribute from one geometry level to another.
 * @param __model__
 * @param attrib_name Attribute name to be promoted or demoted.
 * @param from Enum; Positions, vertices, edges, wires, faces or collections.
 * @param to Enum; Positions, vertices, edges, wires, faces or collections.
 * @param method Enum; Maximum, minimum, average, mode, median, sum, sum of squares, root mean square, first match or last match.
 * @returns Promotes or demotes the attribute.
 * @example promote1 = modify.Promote (colour, positions, faces, sum)
 */
function Promote(__model__, attrib_name, from, to, method) {
    // --- Error Check ---
    // checkCommTypes('attrib.Promote', 'attrib_name', attrib_name, ['isString']);
    // --- Error Check ---
    throw new Error('Not implemented.');
}
// ================================================================================================
/**
 * Welds entities together.
 * @param __model__
 * @param entities Vertex, edge, wire, face, position, point, polyline, polygon, collection.
 * @returns Modifies the input entities.
 * @example modify.Weld([polyline1,polyline2])
 * @example_info Welds both polyline1 and polyline2 together. Entities must be of the same type.
 */
function Weld(__model__, entities) {
    // --- Error Check ---
    // const ents_arr = checkIDs('modify.Weld', 'entities', entities, ['isIDList'],
    //                          ['POSI', 'VERT', 'EDGE', 'WIRE', 'FACE', 'POINT', 'PLINE', 'PGON', 'COLL']);
    // --- Error Check ---
    throw new Error('Not implemented.');
}
// ================================================================================================
/**
 * Deletes entities.
 * @param __model__
 * @param entities Position, point, polyline, polygon, collection. Can be a list.
 * @returns Modifies the input entities.
 * @example modify.Delete(polygon1)
 * @example_info Deletes polygon1 from the model.
 */
function Delete(__model__, entities) {
    // --- Error Check ---
    // const ents_arr = checkIDs('modify.Close', 'geometry', entities, ['isID', 'isIDList'], ['POSI', 'POINT', 'PLINE', 'PGON', 'COLL']);
    // --- Error Check ---
    throw new Error('Not implemented.');
}
// Collection Add Entities
// Collection Remove Remove Entities
// ExtendPline
// ProjectPosition
// Move position along vector (normals)


/***/ }),

/***/ "./src/app/core/modules/output.ts":
/*!****************************************!*\
  !*** ./src/app/core/modules/output.ts ***!
  \****************************************/
/*! exports provided: Return */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Return", function() { return Return; });
/**
* Return certain value from the model for the flowchart's end node
 * @summary Return a specific value
 * @param {any[]} __model__  Model of the node.
 * @param {number} value  Index of the value to be returned.
 * @returns {any} Value
 */
function Return(__model__, value) {
    return value;
}


/***/ }),

/***/ "./src/app/core/modules/pattern.ts":
/*!*****************************************!*\
  !*** ./src/app/core/modules/pattern.ts ***!
  \*****************************************/
/*! exports provided: Arc, _EGridMethod, Grid, Rectangle */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Arc", function() { return Arc; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_EGridMethod", function() { return _EGridMethod; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Grid", function() { return Grid; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Rectangle", function() { return Rectangle; });
/* harmony import */ var _check_args__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./_check_args */ "./src/app/core/modules/_check_args.ts");
/* harmony import */ var _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @libs/geo-info/common */ "./src/libs/geo-info/common.ts");
/* harmony import */ var _libs_geo_info_id__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @libs/geo-info/id */ "./src/libs/geo-info/id.ts");
/* harmony import */ var _libs_geom_vectors__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @libs/geom/vectors */ "./src/libs/geom/vectors.ts");
/* harmony import */ var _libs_geom_matrix__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @libs/geom/matrix */ "./src/libs/geom/matrix.ts");





// ================================================================================================
/**
* Creates a list of XYZ coordinates in an arc arrangement.
* @param __model__
* @param origin XYZ coordinates as a list of three numbers.
* @param radius Radius of circle as a number.
* @param num_positions Number of positions distributed equally along the arc.
* @param arc_angle Angle of arc (in radians).
* @returns XYZ coordinates if successful, null if unsuccessful or on error.
* @example coordinates1 = pattern.Arc([0,0,0], 10, 12, PI)
* @example_info Creates a list of 12 XYZ coordinates distributed equally along a semicircle of radius 10.
 */
function Arc(__model__, origin, radius, num_positions, arc_angle) {
    // --- Error Check ---
    var fn_name = 'pattern.Arc';
    Object(_check_args__WEBPACK_IMPORTED_MODULE_0__["checkCommTypes"])(fn_name, 'origin', origin, ['isCoord', 'isPlane']);
    Object(_check_args__WEBPACK_IMPORTED_MODULE_0__["checkCommTypes"])(fn_name, 'radius', radius, ['isNumber']);
    Object(_check_args__WEBPACK_IMPORTED_MODULE_0__["checkCommTypes"])(fn_name, 'num_positions', num_positions, ['isInt']);
    Object(_check_args__WEBPACK_IMPORTED_MODULE_0__["checkCommTypes"])(fn_name, 'arc_angle', arc_angle, ['isNumber']);
    // --- Error Check ---
    // create the matrix one time
    var matrix;
    var origin_is_plane = Object(_libs_geo_info_id__WEBPACK_IMPORTED_MODULE_2__["getArrDepth"])(origin) === 2;
    if (origin_is_plane) {
        matrix = Object(_libs_geom_matrix__WEBPACK_IMPORTED_MODULE_4__["xfromSourceTargetMatrix"])(_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_1__["XYPLANE"], origin);
    }
    // create positions
    var posis_i = [];
    for (var i = 0; i < num_positions + 1; i++) {
        var angle = (arc_angle / num_positions) * i;
        var x = (Math.cos(angle) * radius);
        var y = (Math.sin(angle) * radius);
        var xyz = [x, y, 0];
        if (origin_is_plane) {
            xyz = Object(_libs_geom_matrix__WEBPACK_IMPORTED_MODULE_4__["multMatrix"])(xyz, matrix);
        }
        else { // we have a plane
            xyz = Object(_libs_geom_vectors__WEBPACK_IMPORTED_MODULE_3__["vecAdd"])(xyz, origin);
        }
        var posi_i = __model__.geom.add.addPosition();
        __model__.attribs.add.setPosiCoords(posi_i, xyz);
        posis_i.push(posi_i);
    }
    // return the list of posis
    return Object(_libs_geo_info_id__WEBPACK_IMPORTED_MODULE_2__["idsMakeFromIndicies"])(_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_1__["EEntType"].POSI, posis_i);
}
// ================================================================================================
var _EGridMethod;
(function (_EGridMethod) {
    _EGridMethod["FLAT"] = "flat";
    _EGridMethod["COLUMNS"] = "columns";
    _EGridMethod["ROWS"] = "rows";
    _EGridMethod["SQUARES"] = "squares";
})(_EGridMethod || (_EGridMethod = {}));
/**
* Creates a list of XYZ coordinates in a grid arrangement.
* @param __model__
* @param origin XYZ coordinates as a list of three numbers.
* @param size Size of grid. If number, assume square grid of that length; if list of two numbers, x and y lengths respectively.
* @param num_positions Number of positions.
* @param method Enum, define the way the coords will be return as lists.
* If integer, same number for x and y; if list of two numbers, number for x and y respectively.
* @returns XYZ coordinates if successful, null if unsuccessful or on error.
* @example coordinates1 = pattern.Grid([0,0,0], 10, 3)
* @example_info Creates a list of 9 XYZ coordinates on a 3x3 square grid of length 10.
* @example coordinates1 = pattern.Grid([0,0,0], [10,20], [2,4])
* @example_info Creates a list of 8 XYZ coordinates on a 2x4 grid of length 10 by 20.
*/
function Grid(__model__, origin, size, num_positions, method) {
    // --- Error Check ---
    var fn_name = 'pattern.Grid';
    Object(_check_args__WEBPACK_IMPORTED_MODULE_0__["checkCommTypes"])(fn_name, 'origin', origin, ['isCoord', 'isPlane']);
    Object(_check_args__WEBPACK_IMPORTED_MODULE_0__["checkCommTypes"])(fn_name, 'size', size, ['isNumber', 'isXYlist']);
    Object(_check_args__WEBPACK_IMPORTED_MODULE_0__["checkCommTypes"])(fn_name, 'num_positions', num_positions, ['isInt', 'isXYlistInt']);
    // --- Error Check ---
    // create the matrix one time
    var matrix;
    var origin_is_plane = Object(_libs_geo_info_id__WEBPACK_IMPORTED_MODULE_2__["getArrDepth"])(origin) === 2;
    if (origin_is_plane) {
        matrix = Object(_libs_geom_matrix__WEBPACK_IMPORTED_MODULE_4__["xfromSourceTargetMatrix"])(_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_1__["XYPLANE"], origin);
    }
    // create the positions
    var posis_i = [];
    var xy_size = (Array.isArray(size) ? size : [size, size]);
    var xy_num_positions = (Array.isArray(num_positions) ? num_positions : [num_positions, num_positions]);
    var x_offset = xy_size[0] / (xy_num_positions[0] - 1);
    var y_offset = xy_size[1] / (xy_num_positions[1] - 1);
    for (var i = 0; i < xy_num_positions[1]; i++) {
        var y = (i * y_offset) - (xy_size[1] / 2);
        for (var j = 0; j < xy_num_positions[0]; j++) {
            var x = (j * x_offset) - (xy_size[0] / 2);
            var xyz = [x, y, 0];
            if (origin_is_plane) {
                xyz = Object(_libs_geom_matrix__WEBPACK_IMPORTED_MODULE_4__["multMatrix"])(xyz, matrix);
            }
            else { // we have a plane
                xyz = Object(_libs_geom_vectors__WEBPACK_IMPORTED_MODULE_3__["vecAdd"])(xyz, origin);
            }
            var posi_i = __model__.geom.add.addPosition();
            __model__.attribs.add.setPosiCoords(posi_i, xyz);
            posis_i.push(posi_i);
        }
    }
    // structure the grid of posis, and return
    var posis_i2 = [];
    if (method === _EGridMethod.FLAT) {
        return Object(_libs_geo_info_id__WEBPACK_IMPORTED_MODULE_2__["idsMakeFromIndicies"])(_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_1__["EEntType"].POSI, posis_i);
    }
    else if (method === _EGridMethod.ROWS) {
        for (var i = 0; i < xy_num_positions[1]; i++) {
            var row = [];
            for (var j = 0; j < xy_num_positions[0]; j++) {
                var index = (i * xy_num_positions[0]) + j;
                row.push(posis_i[index]);
            }
            posis_i2.push(row);
        }
    }
    else if (method === _EGridMethod.COLUMNS) {
        for (var i = 0; i < xy_num_positions[0]; i++) {
            var col = [];
            for (var j = 0; j < xy_num_positions[1]; j++) {
                var index = (j * xy_num_positions[0]) + i;
                col.push(posis_i[index]);
            }
            posis_i2.push(col);
        }
    }
    else if (method === _EGridMethod.SQUARES) {
        for (var i = 0; i < xy_num_positions[1] - 1; i++) {
            for (var j = 0; j < xy_num_positions[0] - 1; j++) {
                var index = (i * xy_num_positions[0]) + j;
                var square = [
                    posis_i[index],
                    posis_i[index + 1],
                    posis_i[index + xy_num_positions[0] + 1],
                    posis_i[index + xy_num_positions[0]]
                ];
                posis_i2.push(square);
            }
        }
    }
    return Object(_libs_geo_info_id__WEBPACK_IMPORTED_MODULE_2__["idsMakeFromIndicies"])(_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_1__["EEntType"].POSI, posis_i2);
}
// ================================================================================================
/**
* Creates a list of XYZ coordinates in a rectangular arrangement.
* @param __model__
* @param origin XYZ coordinates as a list of three numbers.
* @param size Size of rectangle. If number, assume square of that length; if list of two numbers, x and y lengths respectively.
* @returns XYZ coordinates if successful, null if unsuccessful or on error.
* @example coordinates1 = pattern.Rectangle([0,0,0], 10)
* @example_info Creates a list of 4 coords, being the vertices of a 10 by 10 square.
* @example coordinates1 = pattern.Rectangle([0,0,0], [10,20])
* @example_info Creates a list of 4 coords, being the vertices of a 10 by 20 rectangle.
 */
function Rectangle(__model__, origin, size) {
    // --- Error Check ---
    var fn_name = 'pattern.Rectangle';
    Object(_check_args__WEBPACK_IMPORTED_MODULE_0__["checkCommTypes"])(fn_name, 'origin', origin, ['isCoord', 'isPlane']);
    Object(_check_args__WEBPACK_IMPORTED_MODULE_0__["checkCommTypes"])(fn_name, 'size', size, ['isNumber', 'isXYlist']);
    // --- Error Check ---
    // create the matrix one time
    var matrix;
    var origin_is_plane = Object(_libs_geo_info_id__WEBPACK_IMPORTED_MODULE_2__["getArrDepth"])(origin) === 2;
    if (origin_is_plane) {
        matrix = Object(_libs_geom_matrix__WEBPACK_IMPORTED_MODULE_4__["xfromSourceTargetMatrix"])(_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_1__["XYPLANE"], origin);
    }
    // create the positions
    var posis_i = [];
    var xy_size = (Array.isArray(size) ? size : [size, size]);
    var c1 = [-(xy_size[0] / 2), -(xy_size[1] / 2), 0];
    var c2 = [(xy_size[0] / 2), -(xy_size[1] / 2), 0];
    var c3 = [(xy_size[0] / 2), (xy_size[1] / 2), 0];
    var c4 = [-(xy_size[0] / 2), (xy_size[1] / 2), 0];
    var coords = [c1, c2, c3, c4];
    for (var _i = 0, coords_1 = coords; _i < coords_1.length; _i++) {
        var coord = coords_1[_i];
        var xyz = coord;
        if (origin_is_plane) {
            xyz = Object(_libs_geom_matrix__WEBPACK_IMPORTED_MODULE_4__["multMatrix"])(xyz, matrix);
        }
        else { // we have a plane
            xyz = Object(_libs_geom_vectors__WEBPACK_IMPORTED_MODULE_3__["vecAdd"])(xyz, origin);
        }
        var posi_i = __model__.geom.add.addPosition();
        __model__.attribs.add.setPosiCoords(posi_i, xyz);
        posis_i.push(posi_i);
    }
    // return
    return Object(_libs_geo_info_id__WEBPACK_IMPORTED_MODULE_2__["idsMakeFromIndicies"])(_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_1__["EEntType"].POSI, posis_i);
}
// ================================================================================================


/***/ }),

/***/ "./src/app/core/modules/query.ts":
/*!***************************************!*\
  !*** ./src/app/core/modules/query.ts ***!
  \***************************************/
/*! exports provided: _EQuerySelect, Get, Count, _neighbours, Neighbours, _ESortMethod, Sort, IsClosed, _IsPlanar */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_EQuerySelect", function() { return _EQuerySelect; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Get", function() { return Get; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Count", function() { return Count; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_neighbours", function() { return _neighbours; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Neighbours", function() { return Neighbours; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_ESortMethod", function() { return _ESortMethod; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Sort", function() { return Sort; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "IsClosed", function() { return IsClosed; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_IsPlanar", function() { return _IsPlanar; });
/* harmony import */ var _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @libs/geo-info/common */ "./src/libs/geo-info/common.ts");
/* harmony import */ var _libs_geo_info_id__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @libs/geo-info/id */ "./src/libs/geo-info/id.ts");
/* harmony import */ var _check_args__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./_check_args */ "./src/app/core/modules/_check_args.ts");



// TQuery should be something like this:
//
// #@name != value
// #@name1 > 10 || #@name2 < 5 && #@name3 == 'red'
// #@xyz[2] > 5
//
// ================================================================================================
// These are used by Get(), Count(), and Neighbours()
var _EQuerySelect;
(function (_EQuerySelect) {
    _EQuerySelect["POSI"] = "positions";
    _EQuerySelect["VERT"] = "vertices";
    _EQuerySelect["EDGE"] = "edges";
    _EQuerySelect["WIRE"] = "wires";
    _EQuerySelect["FACE"] = "faces";
    _EQuerySelect["POINT"] = "points";
    _EQuerySelect["PLINE"] = "polylines";
    _EQuerySelect["PGON"] = "polygons";
    _EQuerySelect["COLL"] = "collections";
    _EQuerySelect["OBJS"] = "objects";
    _EQuerySelect["TOPOS"] = "topologies";
    _EQuerySelect["ALL"] = "all";
})(_EQuerySelect || (_EQuerySelect = {}));
function _convertSelectToEEntTypeStr(select) {
    switch (select) {
        case _EQuerySelect.POSI:
            return _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].POSI;
        case _EQuerySelect.VERT:
            return _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].VERT;
        case _EQuerySelect.EDGE:
            return _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].EDGE;
        case _EQuerySelect.WIRE:
            return _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].WIRE;
        case _EQuerySelect.FACE:
            return _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].FACE;
        case _EQuerySelect.POINT:
            return _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].POINT;
        case _EQuerySelect.PLINE:
            return _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].PLINE;
        case _EQuerySelect.PGON:
            return _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].PGON;
        case _EQuerySelect.COLL:
            return _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].COLL;
        case _EQuerySelect.OBJS:
            return [
                _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].POINT,
                _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].PLINE,
                _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].PGON
            ];
        case _EQuerySelect.TOPOS:
            return [
                _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].VERT,
                _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].EDGE,
                _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].WIRE,
                _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].FACE
            ];
        case _EQuerySelect.ALL:
            return [
                _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].POSI,
                _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].VERT,
                _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].EDGE,
                _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].WIRE,
                _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].FACE,
                _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].POINT,
                _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].PLINE,
                _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].PGON,
                _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].COLL
            ];
        default:
            throw new Error('Query select parameter not recognised.');
    }
}
// ================================================================================================
function _get(__model__, select_ent_types, ents_arr, query_expr) {
    if (!Array.isArray(select_ent_types)) {
        var select_ent_type_1 = select_ent_types;
        // get the list of entities
        var found_entities_i = [];
        if (ents_arr === null || ents_arr === undefined) {
            found_entities_i.push.apply(found_entities_i, __model__.geom.query.getEnts(select_ent_type_1));
        }
        else {
            if (!Array.isArray(ents_arr[0])) {
                ents_arr = [ents_arr];
            }
            for (var _i = 0, ents_arr_1 = ents_arr; _i < ents_arr_1.length; _i++) {
                var ents = ents_arr_1[_i];
                found_entities_i.push.apply(found_entities_i, __model__.geom.query.navAnyToAny(ents[0], select_ent_type_1, ents[1]));
            }
        }
        // check if the query is null
        if (query_expr === null || query_expr === undefined) {
            return found_entities_i.map(function (entity_i) { return [select_ent_type_1, entity_i]; });
        }
        // do the query on the list of entities
        var query_result = __model__.attribs.query.queryAttribs(select_ent_type_1, query_expr, found_entities_i);
        return query_result.map(function (entity_i) { return [select_ent_type_1, entity_i]; });
    }
    else {
        var query_results = [];
        for (var _a = 0, select_ent_types_1 = select_ent_types; _a < select_ent_types_1.length; _a++) {
            var select_ent_type = select_ent_types_1[_a];
            query_results.push.apply(query_results, _get(__model__, select_ent_type, ents_arr, query_expr));
        }
        return query_results;
    }
}
/**
 * Returns a list of entities based on a query expression.
 * The query expression should use the following format: #@name == value,
 * where 'name' is the attribute name, and 'value' is the attribute value that you are searching for.
 * If the attribute value is a string, then in must be in quotes, as follows: #@name == 'str_value'.
 * The '==' is the comparison operator. The other comparison operators are: !=, >, >=, <, =<.
 * Entities can be search using multiple query expressions, as follows:  #@name1 == value1 &&  #@name2 == value2.
 * Query expressions can be combined with either && (and) and || (or), where
 * && takes precedence over ||.
 * @param __model__
 * @param select Enum, specifies what type of entities will be returned.
 * @param entities List of entities to be searched. If 'null' (without quotes), all entities in the model will be searched.
 * @param query_expr Attribute condition. If 'null' (without quotes), no condition is set; all found entities are returned.
 * @returns List of entities whose type matches the type specified in 'select'.
 * @example positions = query.Get(positions, polyline1, #@xyz[2]>10)
 * @example_info Returns a list of positions defined by polyline1 where the z-coordinate is more than 10.
 */
function Get(__model__, select, entities, query_expr) {
    // --- Error Check ---
    var ents_arr = null;
    if (entities !== null && entities !== undefined) {
        ents_arr = Object(_check_args__WEBPACK_IMPORTED_MODULE_2__["checkIDs"])('query.Get', 'entities', entities, ['isID', 'isIDList'], null);
    }
    // TODO check the query string
    // --- Error Check ---
    var select_ent_types = _convertSelectToEEntTypeStr(select);
    var found_ents_arr = _get(__model__, select_ent_types, ents_arr, query_expr);
    return Object(_libs_geo_info_id__WEBPACK_IMPORTED_MODULE_1__["idsMake"])(found_ents_arr);
}
// ================================================================================================
/**
 * Returns the number of entities based on a query expression.
 * The query expression should use the following format: #@name == value,
 * where 'name' is the attribute name, and 'value' is the attribute value.
 * If the attribute value is a string, then in must be in qoutes, as follows: #@name == 'str_value'.
 * The '==' is the comparison operator. The other comparison operators are: !=, >, >=, <, =<.
 * Entities can be search using multiple query expressions, as follows:  #@name1 == value1 &&  #@name2 == value2.
 * Query expressions can be combine with either && (and) and || (or), where
 * && takes precedence over ||.
 *
 * @param __model__
 * @param select Enum, specifies what type of entities are to be counted.
 * @param entities List of entities to be searched. If 'null' (without quotes), list of all entities in the model.
 * @param query_expr Attribute condition. If 'null' (without quotes), no condition is set; list of all search entities is returned.
 * @returns Number of entities.
 * @example num_ents = query.Count(positions, polyline1, #@xyz[2]>10)
 * @example_info Returns the number of positions defined by polyline1 where the z-coordinate is more than 10.
 */
function Count(__model__, select, entities, query_expr) {
    // --- Error Check ---
    // if (entities !== null && entities !== undefined) {
    //     checkIDs('query.Count', 'entities', entities, ['isID', 'isIDList'], null);
    // }
    // --- Error Check ---
    return Get(__model__, select, entities, query_expr).length; // Check done in Get
}
// ================================================================================================
function _neighbours(__model__, select_ent_types, ents_arr) {
    if (!Array.isArray(select_ent_types)) {
        var select_ent_type_2 = select_ent_types;
        if (!Array.isArray(ents_arr[0])) {
            ents_arr = [ents_arr];
        }
        var all_nbor_ents_i_1 = new Set();
        for (var _i = 0, ents_arr_2 = ents_arr; _i < ents_arr_2.length; _i++) {
            var ents = ents_arr_2[_i];
            var _a = ents, ent_type = _a[0], index = _a[1];
            var nbor_ents_i = __model__.geom.query.neighbours(ent_type, select_ent_type_2, index);
            nbor_ents_i.forEach(function (nbor_ent_i) { return all_nbor_ents_i_1.add(nbor_ent_i); });
        }
        return Array.from(all_nbor_ents_i_1).map(function (nbor_ent_i) { return [select_ent_type_2, nbor_ent_i]; });
    }
    else {
        var query_results = [];
        for (var _b = 0, select_ent_types_2 = select_ent_types; _b < select_ent_types_2.length; _b++) {
            var select_ent_type = select_ent_types_2[_b];
            query_results.push.apply(query_results, _neighbours(__model__, select_ent_type, ents_arr));
        }
        return query_results;
    }
}
/**
* Returns a list of welded neighbours of any entity
* @param __model__
* @param select Enum, select the types of neighbours to return
* @param entities List of entities.
* @returns A list of welded neighbours
* @example mod.Neighbours([polyline1,polyline2,polyline3])
* @example_info Returns list of entities that are welded to polyline1 and polyline2.
*/
function Neighbours(__model__, select, entities) {
    // --- Error Check ---
    var ents_arr = null;
    if (entities !== null && entities !== undefined) {
        ents_arr = Object(_check_args__WEBPACK_IMPORTED_MODULE_2__["checkIDs"])('query.Get', 'entities', entities, ['isID', 'isIDList'], null);
    }
    // --- Error Check ---
    var select_ent_types = _convertSelectToEEntTypeStr(select);
    var found_ents_arr = _neighbours(__model__, select_ent_types, ents_arr);
    return Object(_libs_geo_info_id__WEBPACK_IMPORTED_MODULE_1__["idsMake"])(found_ents_arr);
}
// ================================================================================================
function _sort(__model__, ents_arr, sort_expr, method) {
    // get the list of ents_i
    var ent_type = ents_arr[0][0];
    var ents_i = ents_arr.filter(function (ent_arr) { return ent_arr[0] === ent_type; }).map(function (ent_arr) { return ent_arr[1]; });
    // check if the sort expression is null
    if (sort_expr === null || sort_expr === undefined) {
        ents_i.sort();
        if (method === _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["ESort"].ASCENDING) {
            ents_i.reverse();
        }
        return ents_i.map(function (entity_i) { return [ent_type, entity_i]; });
    }
    // do the sort on the list of entities
    var sort_result = __model__.attribs.query.sortByAttribs(ent_type, ents_i, sort_expr, method);
    return sort_result.map(function (entity_i) { return [ent_type, entity_i]; });
}
var _ESortMethod;
(function (_ESortMethod) {
    _ESortMethod["DESCENDING"] = "descending";
    _ESortMethod["ASCENDING"] = "ascending";
})(_ESortMethod || (_ESortMethod = {}));
/**
 * Sorts entities based on a sort expression.
 * The sort expression should use the following format: #@name, where 'name' is the attribute name.
 * Entities can be sorted using multiple sort expresssions as follows: #@name1 && #@name2.
 * If the attribute is a list, and index can also be specified as follows: #@name1[index].
 * @param __model__
 * @param entities List of two or more entities to be sorted, all of the same entity type.
 * @param sort_expr Attribute condition. If 'null' (without quotes), entities will be sorted based on their ID.
 * @param method Enum, sort descending or ascending.
 * @returns Sorted entities.
 * @example sorted_list = query.Sort( [pos1, pos2, pos3], #@xyz[2], descending)
 * @example_info Returns a list of three positions, sorted according to the descending z value.
 */
function Sort(__model__, entities, sort_expr, method) {
    // --- Error Check ---
    var ents_arr = Object(_check_args__WEBPACK_IMPORTED_MODULE_2__["checkIDs"])('query.Sort', 'entities', entities, ['isIDList'], null);
    // TODO check the sort expression
    // --- Error Check ---
    var sort_method = (method === _ESortMethod.DESCENDING) ? _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["ESort"].DESCENDING : _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["ESort"].ASCENDING;
    var sorted_ents_arr = _sort(__model__, ents_arr, sort_expr, sort_method);
    return Object(_libs_geo_info_id__WEBPACK_IMPORTED_MODULE_1__["idsMake"])(sorted_ents_arr);
}
// ================================================================================================
function _isClosed(__model__, ents_arr) {
    if (!Array.isArray(ents_arr[0])) {
        var _a = ents_arr, ent_type = _a[0], index = _a[1];
        var wire_i = index;
        if (ent_type === _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].PLINE) {
            wire_i = __model__.geom.query.navPlineToWire(index);
        }
        else if (ent_type !== _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].WIRE) {
            throw new Error('query.isClosed: Entity is of wrong type. It must be either a polyline or a wire.');
        }
        return __model__.geom.query.istWireClosed(wire_i);
    }
    else {
        return ents_arr.map(function (ents) { return _isClosed(__model__, ents); });
    }
}
/**
 * Checks if polyline(s) or wire(s) are closed.
 * @param __model__
 * @param lines Polyline(s) or wire(s).
 * @returns Boolean or list of boolean in input sequence of lines.
 * @example mod.IsClosed([polyline1,polyline2,polyline3])
 * @example_info Returns list [true,true,false] if polyline1 and polyline2 are closed but polyline3 is open.
 */
function IsClosed(__model__, lines) {
    // --- Error Check ---
    var ents_arr = Object(_check_args__WEBPACK_IMPORTED_MODULE_2__["checkIDs"])('query.isClosed', 'lines', lines, ['isID', 'isIDList'], ['PLINE', 'WIRE']);
    // --- Error Check ---
    return _isClosed(__model__, ents_arr);
}
// ================================================================================================
/**
 * Checks if a wire, polyline, face, or polygon is planar.
 * @param __model__
 * @param entities Wire, polyline, face, or polygon.
 * @param tolerance
 * @returns Boolean or list of boolean in input sequence of lines.
 * @example mod.IsPlanar([polyline1,polyline2,polyline3])
 * @example_info Returns list [true,true,false] if polyline1 and polyline2 are planar but polyline3 is not planar.
 */
function _IsPlanar(__model__, entities, tolerance) {
    // --- Error Check ---
    // const fn_name = 'query.isPlanar';
    // const ents_arr = checkIDs(fn_name, 'entities', entities, ['isID', 'isIDList'], ['PLINE', 'WIRE']);
    // checkCommTypes(fn_name, 'tolerance', tolerance, ['isNumber']);
    // --- Error Check ---
    throw new Error('Not implemented');
}
// ================================================================================================


/***/ }),

/***/ "./src/app/core/modules/util.ts":
/*!**************************************!*\
  !*** ./src/app/core/modules/util.ts ***!
  \**************************************/
/*! exports provided: _EIODataFormat, ImportData, ExportData */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_EIODataFormat", function() { return _EIODataFormat; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ImportData", function() { return ImportData; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ExportData", function() { return ExportData; });
/* harmony import */ var _libs_geo_info_GIModel__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @libs/geo-info/GIModel */ "./src/libs/geo-info/GIModel.ts");
/* harmony import */ var _libs_geo_info_export__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @libs/geo-info/export */ "./src/libs/geo-info/export.ts");
/* harmony import */ var _libs_geo_info_import__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @libs/geo-info/import */ "./src/libs/geo-info/import.ts");
/* harmony import */ var _libs_filesys_download__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @libs/filesys/download */ "./src/libs/filesys/download.ts");
/* harmony import */ var _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @libs/geo-info/common */ "./src/libs/geo-info/common.ts");
/* harmony import */ var _model__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./_model */ "./src/app/core/modules/_model.ts");
/* harmony import */ var _libs_geo_info_id__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @libs/geo-info/id */ "./src/libs/geo-info/id.ts");







// ================================================================================================
// Import / Export data types
var _EIODataFormat;
(function (_EIODataFormat) {
    _EIODataFormat["GI"] = "gi";
    _EIODataFormat["OBJ"] = "obj";
})(_EIODataFormat || (_EIODataFormat = {}));
/**
 * Imports data into the model.
 * In order to get the model data from a file, you need to define the File or URL parameter
 * in the Start node of the flowchart.
 *
 * @param model_data The model data
 * @param data_format Enum, the file format.
 * @returns A list of the positions, points, polylines, polygons and collections added to the model.
 * @example util.ImportData (file1_data, obj)
 * @example_info Imports the data from file1 (defining the .obj file uploaded in 'Start' node).
 */
function ImportData(__model__, model_data, data_format) {
    var geom_pack;
    switch (data_format) {
        case _EIODataFormat.GI:
            var gi_model = new _libs_geo_info_GIModel__WEBPACK_IMPORTED_MODULE_0__["GIModel"](JSON.parse(model_data));
            geom_pack = Object(_model__WEBPACK_IMPORTED_MODULE_5__["__merge__"])(__model__, gi_model);
            break;
        case _EIODataFormat.OBJ:
            var obj_model = Object(_libs_geo_info_import__WEBPACK_IMPORTED_MODULE_2__["importObj"])(model_data);
            geom_pack = Object(_model__WEBPACK_IMPORTED_MODULE_5__["__merge__"])(__model__, obj_model);
            break;
        default:
            throw new Error('Data type not recognised');
            break;
    }
    var posis_id = geom_pack.posis_i.map(function (posi_i) { return Object(_libs_geo_info_id__WEBPACK_IMPORTED_MODULE_6__["idsMake"])([_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_4__["EEntType"].POSI, posi_i]); });
    var points_id = geom_pack.points_i.map(function (point_i) { return Object(_libs_geo_info_id__WEBPACK_IMPORTED_MODULE_6__["idsMake"])([_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_4__["EEntType"].POINT, point_i]); });
    var plines_id = geom_pack.plines_i.map(function (pline_i) { return Object(_libs_geo_info_id__WEBPACK_IMPORTED_MODULE_6__["idsMake"])([_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_4__["EEntType"].PLINE, pline_i]); });
    var pgons_id = geom_pack.pgons_i.map(function (pgon_i) { return Object(_libs_geo_info_id__WEBPACK_IMPORTED_MODULE_6__["idsMake"])([_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_4__["EEntType"].PGON, pgon_i]); });
    var colls_id = geom_pack.colls_i.map(function (coll_i) { return Object(_libs_geo_info_id__WEBPACK_IMPORTED_MODULE_6__["idsMake"])([_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_4__["EEntType"].COLL, coll_i]); });
    return posis_id.concat(points_id, plines_id, pgons_id, colls_id);
}
// ================================================================================================
/**
 * Export data from the model as a file.
 * This will result in a popup in your browser, asking you to save the filel.
 * @param __model__
 * @param filename Name of the file as a string.
 * @param data_format Enum, the file format.
 * @returns Boolean.
 * @example util.ExportData ('my_model.obj', obj)
 * @example_info Exports all the data in the model as an OBJ.
 */
function ExportData(__model__, filename, data_format) {
    switch (data_format) {
        case _EIODataFormat.GI:
            var gi_data = JSON.stringify(__model__.getData());
            return Object(_libs_filesys_download__WEBPACK_IMPORTED_MODULE_3__["download"])(gi_data, filename);
            break;
        case _EIODataFormat.OBJ:
            var obj_data = Object(_libs_geo_info_export__WEBPACK_IMPORTED_MODULE_1__["exportObj"])(__model__);
            return Object(_libs_filesys_download__WEBPACK_IMPORTED_MODULE_3__["download"])(obj_data, filename);
            break;
        default:
            throw new Error('Data type not recognised');
            break;
    }
}
// ================================================================================================


/***/ }),

/***/ "./src/app/core/modules/virtual.ts":
/*!*****************************************!*\
  !*** ./src/app/core/modules/virtual.ts ***!
  \*****************************************/
/*! exports provided: Ray, Plane, RayFromPlane, GetRay, GetPlane, VisRay, VisPlane */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Ray", function() { return Ray; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Plane", function() { return Plane; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RayFromPlane", function() { return RayFromPlane; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GetRay", function() { return GetRay; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GetPlane", function() { return GetPlane; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "VisRay", function() { return VisRay; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "VisPlane", function() { return VisPlane; });
/* harmony import */ var _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @libs/geo-info/common */ "./src/libs/geo-info/common.ts");
/* harmony import */ var _check_args__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./_check_args */ "./src/app/core/modules/_check_args.ts");
/* harmony import */ var _libs_geo_info_id__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @libs/geo-info/id */ "./src/libs/geo-info/id.ts");
/* harmony import */ var _libs_geom_vectors__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @libs/geom/vectors */ "./src/libs/geom/vectors.ts");
/* harmony import */ var _calc__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./calc */ "./src/app/core/modules/calc.ts");





// ================================================================================================
/**
 * Creates a ray, centered at the origin.
 * A ray is defined by a list of two lists, as follows: [origin, direction_vector].
 * @param __model__
 * @param origin Origin of ray: Position, Vertex, Point, or a list of three numbers
 * @param dir_vec Direction of Ray: Vector, or list of three numbers
 * @returns [origin, vector]: [[x,y,z],[x',y',z']]
 * @example virtual.Ray([1,2,3],[4,3,2])
 * @example_info Creates a ray from [1,2,3] with the vector [4,3,2].
 *
 */
function Ray(__model__, origin, dir_vec) {
    // --- Error Check ---
    var fn_name = 'virtual.Ray';
    var ents_arr = Object(_check_args__WEBPACK_IMPORTED_MODULE_1__["checkCommTypes"])(fn_name, 'origin', origin, ['isOrigin']);
    Object(_check_args__WEBPACK_IMPORTED_MODULE_1__["checkCommTypes"])(fn_name, 'dir_vec', dir_vec, ['isVector']);
    // --- Error Check ---
    if (!Array.isArray(origin)) {
        var _a = ents_arr, ent_type = _a[0], index = _a[1];
        var posi_i = __model__.geom.query.navAnyToPosi(ent_type, index)[0];
        origin = __model__.attribs.query.getPosiCoords(posi_i);
    }
    return [
        origin,
        Object(_libs_geom_vectors__WEBPACK_IMPORTED_MODULE_3__["vecNorm"])(dir_vec)
    ];
}
// ================================================================================================
/**
 * Creates a plane, centered at the origin.
 * A plane is define by a list of three lists, as folows: [origin, x_vector, y_vector].
 * @param __model__
 * @param origin Origin of plane: Position, Vertex, Point, or a list of three numbers
 * @param x_vec X vector of the plane: List of three numbers
 * @param xy_vec A vector in the xy plane (parallel to teh x vector): List of three numbers
 * @returns [origin, vector, vector]: [[x,y,z],[x',y',z'],[x",y",z"]]
 * @example virtual.Plane ([1,2,3],[4,3,2],[3,3,9])
 * @example_info Creates a plane with its origin positioned at [1,2,3] and two vectors [4,3,2] and [3,3,9] lie on it.
 */
function Plane(__model__, origin, x_vec, xy_vec) {
    // --- Error Check ---
    var fn_name = 'virtual.Plane';
    var ents_arr = Object(_check_args__WEBPACK_IMPORTED_MODULE_1__["checkCommTypes"])(fn_name, 'origin', origin, ['isOrigin']);
    Object(_check_args__WEBPACK_IMPORTED_MODULE_1__["checkCommTypes"])(fn_name, 'x_vec', x_vec, ['isVector']);
    Object(_check_args__WEBPACK_IMPORTED_MODULE_1__["checkCommTypes"])(fn_name, 'xy_vec', xy_vec, ['isVector']);
    // --- Error Check ---
    if (!Array.isArray(origin)) {
        var _a = ents_arr, ent_type = _a[0], index = _a[1];
        var posi_i = __model__.geom.query.navAnyToPosi(ent_type, index)[0];
        origin = __model__.attribs.query.getPosiCoords(posi_i);
    }
    return [
        origin,
        Object(_libs_geom_vectors__WEBPACK_IMPORTED_MODULE_3__["vecNorm"])(x_vec),
        Object(_libs_geom_vectors__WEBPACK_IMPORTED_MODULE_3__["vecNorm"])(Object(_libs_geom_vectors__WEBPACK_IMPORTED_MODULE_3__["vecMakeOrtho"])(xy_vec, x_vec))
    ];
}
// ================================================================================================
function _rayFromPlane(planes) {
    if (Object(_libs_geo_info_id__WEBPACK_IMPORTED_MODULE_2__["getArrDepth"])(planes) === 2) {
        var plane = planes;
        return [plane[0], Object(_libs_geom_vectors__WEBPACK_IMPORTED_MODULE_3__["vecCross"])(plane[1], plane[2])];
    }
    else {
        return planes.map(function (plane) { return _rayFromPlane(plane); });
    }
}
/**
 * Create a ray, from a plane.
 * The direction will be along the z axis.
 * A plane is define by a list of three lists, as folows: [origin, x_vector, y_vector].
 * A ray is defined by a list of two lists, as follows: [origin, direction_vector].
 * @param __model__
 * @param plane Plane or list of planes.
 * @returns Ray or list of rays.
 */
function RayFromPlane(plane) {
    // --- Error Check ---
    Object(_check_args__WEBPACK_IMPORTED_MODULE_1__["checkCommTypes"])('virtual.RayFromPlane', 'origin', plane, ['isPlane']);
    // TODO allow list of planes
    // --- Error Check ---
    return _rayFromPlane(plane);
}
// ================================================================================================
function _getRay(__model__, ents_arr) {
    if (Object(_libs_geo_info_id__WEBPACK_IMPORTED_MODULE_2__["getArrDepth"])(ents_arr) === 1) {
        var ent_arr = ents_arr;
        var posis_i = __model__.geom.query.navAnyToPosi(ent_arr[0], ent_arr[1]);
        var xyzs = posis_i.map(function (posi_i) { return __model__.attribs.query.getPosiCoords(posi_i); });
        return [xyzs[0], Object(_libs_geom_vectors__WEBPACK_IMPORTED_MODULE_3__["vecSub"])(xyzs[1], xyzs[0])];
    }
    else {
        return ents_arr.map(function (ent_arr) { return _getRay(__model__, ent_arr); });
    }
}
/**
 * Returns a plane of a face.
 * @param __model__
 * @param edge The id of an edge
 * @returns The face plane.
 */
function GetRay(__model__, edge) {
    // --- Error Check ---
    var ents_arr = Object(_check_args__WEBPACK_IMPORTED_MODULE_1__["checkIDs"])('virtual.GetRay', 'edge', edge, ['isID'], ['EDGE']);
    // TODO allow list of edges
    // --- Error Check ---
    return _getRay(__model__, ents_arr);
}
// ================================================================================================
function _getPlane(__model__, ents_arr) {
    if (ents_arr.length > 0 && !Array.isArray(ents_arr[0])) {
        var ent_arr = ents_arr;
        var posis_i = __model__.geom.query.navAnyToPosi(ent_arr[0], ent_arr[1]);
        var unique_posis_i = Array.from(new Set(posis_i));
        if (unique_posis_i.length < 3) {
            throw new Error('Too few points to calculate plane.');
        }
        var unique_xyzs = unique_posis_i.map(function (posi_i) { return __model__.attribs.query.getPosiCoords(posi_i); });
        var origin_1 = Object(_libs_geom_vectors__WEBPACK_IMPORTED_MODULE_3__["vecDiv"])(Object(_libs_geom_vectors__WEBPACK_IMPORTED_MODULE_3__["vecSum"])(unique_xyzs), unique_xyzs.length);
        // const normal: Txyz = newellNorm(unique_xyzs);
        var normal = Object(_calc__WEBPACK_IMPORTED_MODULE_4__["_normal"])(__model__, ent_arr); // TODO
        var x_vec = Object(_libs_geom_vectors__WEBPACK_IMPORTED_MODULE_3__["vecNorm"])(Object(_libs_geom_vectors__WEBPACK_IMPORTED_MODULE_3__["vecFromTo"])(unique_xyzs[0], unique_xyzs[1]));
        var y_vec = Object(_libs_geom_vectors__WEBPACK_IMPORTED_MODULE_3__["vecCross"])(x_vec, normal);
        return [origin_1, x_vec, y_vec];
    }
    else {
        return ents_arr.map(function (ent_arr) { return _getPlane(__model__, ent_arr); });
    }
}
/**
 * Returns a plane from a set of positions.
 * @param __model__
 * @param entities Any entities
 * @returns The plane.
 */
function GetPlane(__model__, entities) {
    var ents_arr = Object(_libs_geo_info_id__WEBPACK_IMPORTED_MODULE_2__["idsBreak"])(entities);
    // --- Error Check ---
    // checkIDs('virtual.GetPlane', 'face', face, ['isID'], ['FACE']); // TODO should match _normal(), 
    // TODO ['PGON', 'FACE', 'PLINE', 'WIRE']);
    // --- Error Check ---
    return _getPlane(__model__, ents_arr);
}
// ================================================================================================
/**
 * Visualises a ray by adding geometry to the model.
 * @param __model__
 * @param ray A list of two list of three coordinates [origin, vector]: [[x,y,z],[x',y',z']]
 * @returns A points and a line representing the ray. (The point is tha start point of the ray.)
 * @example ray1 = virtual.visRay([[1,2,3],[0,0,1]])
 */
function VisRay(__model__, ray, scale) {
    // --- Error Check ---
    var fn_name = 'virtual.visRay';
    Object(_check_args__WEBPACK_IMPORTED_MODULE_1__["checkCommTypes"])(fn_name, 'ray', ray, ['isRay']);
    Object(_check_args__WEBPACK_IMPORTED_MODULE_1__["checkCommTypes"])(fn_name, 'scale', scale, ['isNumber']);
    // --- Error Check ---
    var origin = ray[0];
    var vec = Object(_libs_geom_vectors__WEBPACK_IMPORTED_MODULE_3__["vecMult"])(ray[1], scale);
    var end = Object(_libs_geom_vectors__WEBPACK_IMPORTED_MODULE_3__["vecAdd"])(origin, vec);
    // create orign point
    var origin_posi_i = __model__.geom.add.addPosition();
    __model__.attribs.add.setPosiCoords(origin_posi_i, origin);
    var point_i = __model__.geom.add.addPoint(origin_posi_i);
    // create pline
    var end_posi_i = __model__.geom.add.addPosition();
    __model__.attribs.add.setPosiCoords(end_posi_i, end);
    var pline_i = __model__.geom.add.addPline([origin_posi_i, end_posi_i]);
    // return the geometry IDs
    return [
        Object(_libs_geo_info_id__WEBPACK_IMPORTED_MODULE_2__["idsMake"])([_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].POINT, point_i]),
        Object(_libs_geo_info_id__WEBPACK_IMPORTED_MODULE_2__["idsMake"])([_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].PLINE, pline_i])
    ];
}
// ================================================================================================
/**
 * Visualises a plane by adding geometry to the model.
 * @param __model__
 * @param plane A list of lists
 * @returns A points, a polygon and two polyline representing the plane. (The point is the origin of the plane.)
 * @example plane1 = virtual.visPlane(position1, vector1, [0,1,0])
 * @example_info Creates a plane with position1 on it and normal = cross product of vector1 with y-axis.
 */
function VisPlane(__model__, plane, scale) {
    // --- Error Check ---
    var fn_name = 'virtual.visPlane';
    Object(_check_args__WEBPACK_IMPORTED_MODULE_1__["checkCommTypes"])(fn_name, 'plane', plane, ['isPlane']);
    Object(_check_args__WEBPACK_IMPORTED_MODULE_1__["checkCommTypes"])(fn_name, 'scale', scale, ['isNumber']);
    // --- Error Check ---
    var origin = plane[0];
    var x_vec = Object(_libs_geom_vectors__WEBPACK_IMPORTED_MODULE_3__["vecMult"])(plane[1], scale);
    var y_vec = Object(_libs_geom_vectors__WEBPACK_IMPORTED_MODULE_3__["vecMult"])(plane[2], scale);
    var x_end = Object(_libs_geom_vectors__WEBPACK_IMPORTED_MODULE_3__["vecAdd"])(origin, x_vec);
    var y_end = Object(_libs_geom_vectors__WEBPACK_IMPORTED_MODULE_3__["vecAdd"])(origin, y_vec);
    var plane_corners = [
        Object(_libs_geom_vectors__WEBPACK_IMPORTED_MODULE_3__["vecAdd"])(x_end, y_vec),
        Object(_libs_geom_vectors__WEBPACK_IMPORTED_MODULE_3__["vecSub"])(y_end, x_vec),
        Object(_libs_geom_vectors__WEBPACK_IMPORTED_MODULE_3__["vecSub"])(Object(_libs_geom_vectors__WEBPACK_IMPORTED_MODULE_3__["vecSub"])(origin, x_vec), y_vec),
        Object(_libs_geom_vectors__WEBPACK_IMPORTED_MODULE_3__["vecSub"])(x_end, y_vec),
    ];
    x_end = Object(_libs_geom_vectors__WEBPACK_IMPORTED_MODULE_3__["vecAdd"])(x_end, Object(_libs_geom_vectors__WEBPACK_IMPORTED_MODULE_3__["vecMult"])(x_vec, 0.1));
    y_end = Object(_libs_geom_vectors__WEBPACK_IMPORTED_MODULE_3__["vecSub"])(y_end, Object(_libs_geom_vectors__WEBPACK_IMPORTED_MODULE_3__["vecMult"])(y_vec, 0.1));
    // create the point
    var origin_posi_i = __model__.geom.add.addPosition();
    __model__.attribs.add.setPosiCoords(origin_posi_i, origin);
    var point_i = __model__.geom.add.addPoint(origin_posi_i);
    // create the x axis
    var x_end_posi_i = __model__.geom.add.addPosition();
    __model__.attribs.add.setPosiCoords(x_end_posi_i, x_end);
    var x_pline_i = __model__.geom.add.addPline([origin_posi_i, x_end_posi_i]);
    // create the y axis
    var y_end_posi_i = __model__.geom.add.addPosition();
    __model__.attribs.add.setPosiCoords(y_end_posi_i, y_end);
    var y_pline_i = __model__.geom.add.addPline([origin_posi_i, y_end_posi_i]);
    // create pline for plane
    var corner_posis_i = [];
    for (var _i = 0, plane_corners_1 = plane_corners; _i < plane_corners_1.length; _i++) {
        var corner = plane_corners_1[_i];
        var posi_i = __model__.geom.add.addPosition();
        __model__.attribs.add.setPosiCoords(posi_i, corner);
        corner_posis_i.push(posi_i);
    }
    var plane_i = __model__.geom.add.addPline(corner_posis_i, true);
    // return the geometry IDs
    return [
        Object(_libs_geo_info_id__WEBPACK_IMPORTED_MODULE_2__["idsMake"])([_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].POINT, point_i]),
        Object(_libs_geo_info_id__WEBPACK_IMPORTED_MODULE_2__["idsMake"])([_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].PLINE, x_pline_i]),
        Object(_libs_geo_info_id__WEBPACK_IMPORTED_MODULE_2__["idsMake"])([_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].PLINE, y_pline_i]),
        Object(_libs_geo_info_id__WEBPACK_IMPORTED_MODULE_2__["idsMake"])([_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].PLINE, plane_i])
    ];
}
// ================================================================================================


/***/ }),

/***/ "./src/app/core/services/data.service.ts":
/*!***********************************************!*\
  !*** ./src/app/core/services/data.service.ts ***!
  \***********************************************/
/*! exports provided: DataService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DataService", function() { return DataService; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _models_flowchart__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @models/flowchart */ "./src/app/shared/models/flowchart/index.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};


var DataService = /** @class */ (function () {
    function DataService() {
        this._prevActions = [];
        this._nextActions = [];
    }
    DataService_1 = DataService;
    Object.defineProperty(DataService.prototype, "file", {
        get: function () { return DataService_1._data; },
        set: function (data) {
            DataService_1._data = {
                name: data.name,
                author: data.author,
                flowchart: data.flowchart,
                last_updated: data.last_updated,
                version: data.version
            };
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataService.prototype, "flowchartPos", {
        get: function () { return DataService_1._flowchartPosition; },
        set: function (transf) { DataService_1._flowchartPosition = transf; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataService.prototype, "newFlowchart", {
        get: function () { return DataService_1._newFlowchart; },
        set: function (check) { DataService_1._newFlowchart = check; },
        enumerable: true,
        configurable: true
    });
    DataService.prototype.getModelOutputView = function (nodeID) {
        if (DataService_1._modelOutputView.hasOwnProperty(nodeID)) {
            return DataService_1._modelOutputView[nodeID];
        }
        return true;
    };
    DataService.prototype.setModelOutputView = function (nodeID, check) { DataService_1._modelOutputView[nodeID] = check; };
    Object.defineProperty(DataService.prototype, "testModel", {
        get: function () { return DataService_1._testModel; },
        set: function (check) { DataService_1._testModel = check; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataService.prototype, "activeView", {
        get: function () { return DataService_1._activeModelView; },
        set: function (view) { DataService_1._activeModelView = view; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataService.prototype, "activeGallery", {
        get: function () { return DataService_1._activeGallery; },
        set: function (gallery) { DataService_1._activeGallery = gallery; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataService.prototype, "helpView", {
        get: function () { return DataService_1._helpView; },
        set: function (view) { DataService_1._helpView[1] = view; },
        enumerable: true,
        configurable: true
    });
    DataService.prototype.toggleHelp = function (state) { DataService_1._helpView[0] = state; };
    Object.defineProperty(DataService.prototype, "focusedInput", {
        get: function () { return DataService_1._focusedInput; },
        set: function (input) { DataService_1._focusedInput = input; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataService.prototype, "copiedProd", {
        get: function () { return DataService_1._copiedProd; },
        set: function (prods) { DataService_1._copiedProd = prods; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataService.prototype, "copiedType", {
        get: function () { return DataService_1._copiedType; },
        set: function (Ptype) { DataService_1._copiedType = Ptype; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataService.prototype, "splitVal", {
        get: function () { return DataService_1._splitVal; },
        set: function (num) { DataService_1._splitVal = num; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataService.prototype, "consoleScroll", {
        get: function () { return DataService_1._consoleScroll; },
        set: function (num) { DataService_1._consoleScroll = num; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataService.prototype, "flowchart", {
        get: function () { return DataService_1._data.flowchart; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataService.prototype, "node", {
        get: function () { return DataService_1._data.flowchart.nodes[DataService_1._data.flowchart.meta.selected_nodes[0]]; },
        enumerable: true,
        configurable: true
    });
    DataService.prototype.registerAction = function (action) {
        this._prevActions.push(action);
        this._nextActions = [];
        // console.log(action);
    };
    DataService.prototype.undo = function () {
        if (this._prevActions.length === 0) {
            return undefined;
        }
        var action = this._prevActions.pop();
        this._nextActions.push(action);
        return action;
    };
    DataService.prototype.redo = function () {
        if (this._nextActions.length === 0) {
            return undefined;
        }
        var action = this._nextActions.pop();
        this._prevActions.push(action);
        return action;
    };
    var DataService_1;
    DataService._data = {
        name: 'default_file',
        author: 'new_user',
        last_updated: new Date(),
        version: 1,
        flowchart: _models_flowchart__WEBPACK_IMPORTED_MODULE_1__["FlowchartUtils"].newflowchart()
    };
    DataService._flowchartPosition = undefined;
    DataService._newFlowchart = true;
    DataService._modelOutputView = {};
    DataService._testModel = false;
    DataService._helpView = [false, undefined];
    DataService._activeModelView = undefined;
    DataService._activeGallery = undefined;
    DataService._splitVal = 60;
    DataService = DataService_1 = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Injectable"])()
    ], DataService);
    return DataService;
}());



/***/ }),

/***/ "./src/app/core/services/index.ts":
/*!****************************************!*\
  !*** ./src/app/core/services/index.ts ***!
  \****************************************/
/*! exports provided: DataService, ViewerService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _data_service__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./data.service */ "./src/app/core/services/data.service.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DataService", function() { return _data_service__WEBPACK_IMPORTED_MODULE_0__["DataService"]; });

/* harmony import */ var _viewer_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./viewer.service */ "./src/app/core/services/viewer.service.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ViewerService", function() { return _viewer_service__WEBPACK_IMPORTED_MODULE_1__["ViewerService"]; });





/***/ }),

/***/ "./src/app/core/services/viewer.service.ts":
/*!*************************************************!*\
  !*** ./src/app/core/services/viewer.service.ts ***!
  \*************************************************/
/*! exports provided: ViewerService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ViewerService", function() { return ViewerService; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm5/index.js");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};


var ViewerService = /** @class */ (function () {
    function ViewerService() {
        this.contextReceivedSource = new rxjs__WEBPACK_IMPORTED_MODULE_1__["Subject"]();
        this.contextReceived$ = this.contextReceivedSource.asObservable();
    }
    ViewerService.prototype.receiveContext = function (componentFactoryResolver, injector) {
        this.contextReceivedSource.next({ resolver: componentFactoryResolver, injector: injector });
    };
    ViewerService = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Injectable"])()
    ], ViewerService);
    return ViewerService;
}());



/***/ }),

/***/ "./src/app/model-viewers/all-viewers/console-viewer/console-viewer.component.html":
/*!****************************************************************************************!*\
  !*** ./src/app/model-viewers/all-viewers/console-viewer/console-viewer.component.html ***!
  \****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div id='console-container'>\r\n    <div class='container'>\r\n        <ng-container *ngFor='let text of logs'>\r\n            <div class = 'line-container'>\r\n                <p class='normalText line'  *ngFor='let splittedText of text.join(\" \").split(\"\\n\")' >{{splittedText}}</p>\r\n\r\n                <!-- <ng-container *ngIf='text.join(\" \").indexOf(\"Error\") !== -1; else default_template'>\r\n                    <p class='errorText line' *ngFor='let splittedText of text.join(\" \").split(\"\\n\")' >{{splittedText}}</p>\r\n                </ng-container>\r\n                <ng-template #default_template>\r\n                    <p class='normalText line'  *ngFor='let splittedText of text.join(\" \").split(\"\\n\")' >{{splittedText}}</p>\r\n                </ng-template> -->\r\n            </div>\r\n        </ng-container>\r\n    </div>\r\n    <button id=\"clearConsole\"\r\n        mat-icon-button\r\n        (click)=\"clearConsole()\"\r\n        title='Clear Console'>\r\n        <mat-icon>block</mat-icon>\r\n    </button> \r\n</div>\r\n"

/***/ }),

/***/ "./src/app/model-viewers/all-viewers/console-viewer/console-viewer.component.scss":
/*!****************************************************************************************!*\
  !*** ./src/app/model-viewers/all-viewers/console-viewer/console-viewer.component.scss ***!
  \****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "@import url(\"https://fonts.googleapis.com/css?family=Ubuntu+Mono\");\n:host {\n  height: 100%;\n  width: 100%; }\ndiv {\n  font-family: sans-serif;\n  color: #505050;\n  width: 100%;\n  padding-left: 10px; }\nh5 {\n  font-weight: 700;\n  font-size: 12px; }\n.funcDesc {\n  font-weight: 600; }\n.paramP {\n  padding-left: 5px; }\nspan {\n  font-weight: 550;\n  font-style: italic; }\n#console-container {\n  margin-top: 40px;\n  height: calc(100vh - 40px);\n  width: 100%;\n  padding: 0px;\n  overflow: auto; }\n.container {\n  padding: 0px 10px 10px 10px;\n  height: -webkit-fit-content;\n  height: -moz-fit-content;\n  height: fit-content;\n  width: 100%;\n  box-sizing: border-box;\n  display: flex;\n  flex-flow: column nowrap;\n  justify-content: flex-start; }\n.container .line-container {\n    border-bottom: 1px solid #E6E6E6;\n    padding: 2px 0px; }\n.container .line-container .line {\n      white-space: pre-wrap;\n      word-wrap: break-word;\n      font-family: 'Ubuntu Mono'; }\n.errorText {\n  color: #E94858; }\n.normalText {\n  color: #808080; }\n#clearConsole {\n  position: absolute;\n  background-color: transparent;\n  padding: 0px;\n  border: 0px;\n  margin: 0px;\n  top: 5px;\n  right: 10px;\n  color: #808080; }\n\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kZWwtdmlld2Vycy9hbGwtdmlld2Vycy9jb25zb2xlLXZpZXdlci9DOlxcVXNlcnNcXGFraWJkcHRcXERvY3VtZW50c1xcQW5ndWxhclxcbW9iaXVzLXBhcmFtZXRyaWMtbW9kZWxsZXIvc3JjXFxhcHBcXG1vZGVsLXZpZXdlcnNcXGFsbC12aWV3ZXJzXFxjb25zb2xlLXZpZXdlclxcY29uc29sZS12aWV3ZXIuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL21vZGVsLXZpZXdlcnMvYWxsLXZpZXdlcnMvY29uc29sZS12aWV3ZXIvQzpcXFVzZXJzXFxha2liZHB0XFxEb2N1bWVudHNcXEFuZ3VsYXJcXG1vYml1cy1wYXJhbWV0cmljLW1vZGVsbGVyL3NyY1xcYXBwXFxtb2RlbC12aWV3ZXJzXFxhbGwtdmlld2Vyc1xcZ2VuZXJhbC12aWV3ZXIuc2NzcyIsInNyYy9hcHAvbW9kZWwtdmlld2Vycy9hbGwtdmlld2Vycy9jb25zb2xlLXZpZXdlci9DOlxcVXNlcnNcXGFraWJkcHRcXERvY3VtZW50c1xcQW5ndWxhclxcbW9iaXVzLXBhcmFtZXRyaWMtbW9kZWxsZXIvc3JjXFxzY3NzXFx2YXJpYWJsZXMuc2NzcyIsInNyYy9hcHAvbW9kZWwtdmlld2Vycy9hbGwtdmlld2Vycy9jb25zb2xlLXZpZXdlci9DOlxcVXNlcnNcXGFraWJkcHRcXERvY3VtZW50c1xcQW5ndWxhclxcbW9iaXVzLXBhcmFtZXRyaWMtbW9kZWxsZXIvc3JjXFxzY3NzXFxjb2xvcnMuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFHQSxtRUFBWTtBQ0haO0VBQ0ksYUFBWTtFQUNaLFlBQVcsRUFDZDtBQUVEO0VBQ0ksd0JBQXVCO0VBQ3ZCLGVBQW9CO0VBQ3BCLFlBQVc7RUFDWCxtQkFBaUIsRUFDcEI7QUFFRDtFQUNJLGlCQUFnQjtFQUNoQixnQkNUUyxFRFVaO0FBRUQ7RUFDSSxpQkFBZ0IsRUFDbkI7QUFFRDtFQUNJLGtCQUFpQixFQUVwQjtBQUNEO0VBQ0ksaUJBQWdCO0VBQ2hCLG1CQUFrQixFQUNyQjtBRHZCRDtFQUNJLGlCQUFnQjtFQUNoQiwyQkFBMEI7RUFDMUIsWUFBVztFQUNYLGFBQVk7RUFDWixlQUFjLEVBQ2pCO0FBQ0Q7RUFDSSw0QkFBMkI7RUFDM0IsNEJBQW1CO0VBQW5CLHlCQUFtQjtFQUFuQixvQkFBbUI7RUFDbkIsWUFBVztFQUNYLHVCQUFzQjtFQUN0QixjQUFhO0VBQ2IseUJBQXdCO0VBQ3hCLDRCQUEyQixFQVU5QjtBQWpCRDtJQVNRLGlDR2hCUTtJSGlCUixpQkFBZ0IsRUFNbkI7QUFoQkw7TUFZWSxzQkFBcUI7TUFDckIsc0JBQXFCO01BQ3JCLDJCQUEwQixFQUM3QjtBQUlUO0VBQ0ksZUdqQmlCLEVIa0JwQjtBQUVEO0VBQ0ksZUduQ1ksRUhvQ2Y7QUFFRDtFQUNJLG1CQUFrQjtFQUNsQiw4QkFBNkI7RUFDN0IsYUFBWTtFQUNaLFlBQVc7RUFDWCxZQUFXO0VBQ1gsU0FBUTtFQUNSLFlBQVc7RUFDWCxlRzlDWSxFSGdEZiIsImZpbGUiOiJzcmMvYXBwL21vZGVsLXZpZXdlcnMvYWxsLXZpZXdlcnMvY29uc29sZS12aWV3ZXIvY29uc29sZS12aWV3ZXIuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJAaW1wb3J0ICd+c2Nzcy9jb2xvcnMnO1xyXG5AaW1wb3J0ICd+c2Nzcy92YXJpYWJsZXMnO1xyXG5AaW1wb3J0ICcuLi9nZW5lcmFsLXZpZXdlci5zY3NzJztcclxuQGltcG9ydCB1cmwoJ2h0dHBzOi8vZm9udHMuZ29vZ2xlYXBpcy5jb20vY3NzP2ZhbWlseT1VYnVudHUrTW9ubycpO1xyXG5cclxuI2NvbnNvbGUtY29udGFpbmVyIHtcclxuICAgIG1hcmdpbi10b3A6IDQwcHg7XHJcbiAgICBoZWlnaHQ6IGNhbGMoMTAwdmggLSA0MHB4KTsgLy8kaGVhZGVyLWhlaWdodFxyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBwYWRkaW5nOiAwcHg7XHJcbiAgICBvdmVyZmxvdzogYXV0bztcclxufVxyXG4uY29udGFpbmVye1xyXG4gICAgcGFkZGluZzogMHB4IDEwcHggMTBweCAxMHB4O1xyXG4gICAgaGVpZ2h0OiBmaXQtY29udGVudDtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgYm94LXNpemluZzogYm9yZGVyLWJveDtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBmbGV4LWZsb3c6IGNvbHVtbiBub3dyYXA7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtc3RhcnQ7XHJcbiAgICAubGluZS1jb250YWluZXJ7XHJcbiAgICAgICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICRjb2xvcjU7XHJcbiAgICAgICAgcGFkZGluZzogMnB4IDBweDtcclxuICAgICAgICAubGluZXtcclxuICAgICAgICAgICAgd2hpdGUtc3BhY2U6IHByZS13cmFwO1xyXG4gICAgICAgICAgICB3b3JkLXdyYXA6IGJyZWFrLXdvcmQ7XHJcbiAgICAgICAgICAgIGZvbnQtZmFtaWx5OiAnVWJ1bnR1IE1vbm8nO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxufVxyXG5cclxuLmVycm9yVGV4dHtcclxuICAgIGNvbG9yOiAkZXJyb3ItY29sb3I7XHJcbn1cclxuXHJcbi5ub3JtYWxUZXh0e1xyXG4gICAgY29sb3I6ICRjb2xvcjE7XHJcbn1cclxuXHJcbiNjbGVhckNvbnNvbGUge1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XHJcbiAgICBwYWRkaW5nOiAwcHg7XHJcbiAgICBib3JkZXI6IDBweDtcclxuICAgIG1hcmdpbjogMHB4O1xyXG4gICAgdG9wOiA1cHg7XHJcbiAgICByaWdodDogMTBweDtcclxuICAgIGNvbG9yOiAkY29sb3IxO1xyXG5cclxufSIsIjpob3N0IHtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG59XHJcblxyXG5kaXYge1xyXG4gICAgZm9udC1mYW1pbHk6IHNhbnMtc2VyaWY7XHJcbiAgICBjb2xvcjogcmdiKDgwLDgwLDgwKTtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgcGFkZGluZy1sZWZ0OjEwcHg7XHJcbn1cclxuXHJcbmg1IHtcclxuICAgIGZvbnQtd2VpZ2h0OiA3MDA7XHJcbiAgICBmb250LXNpemU6ICRmc2l6ZTI7XHJcbn1cclxuXHJcbi5mdW5jRGVzYyB7XHJcbiAgICBmb250LXdlaWdodDogNjAwO1xyXG59XHJcblxyXG4ucGFyYW1QIHtcclxuICAgIHBhZGRpbmctbGVmdDogNXB4O1xyXG5cclxufVxyXG5zcGFuIHtcclxuICAgIGZvbnQtd2VpZ2h0OiA1NTA7XHJcbiAgICBmb250LXN0eWxlOiBpdGFsaWM7XHJcbn1cclxuIiwiJHBhZGRpbmc6IDQwcHg7IC8vID8gbm90IHVzZWRcclxuJHNtYWxsLXBhZGRpbmc6IDE1cHg7XHJcbiRoZWFkZXItaGVpZ2h0OiA0MHB4O1xyXG5cclxuJGZzaXplMTogMTVweDtcclxuJGZzaXplMjogMTJweDtcclxuJGZzaXplMzogMzBweDtcclxuXHJcbiRwb3J0LXNpemU6IDE1cHg7XHJcbiRkZWZhdWx0LXNpZGUtcGFkZGluZzogMTVweDtcclxuIiwiXHJcbiRjb2xvcjE6ICM4MDgwODA7XHJcbiRjb2xvcjI6ICM5OTk5OTk7XHJcbiRjb2xvcjM6ICNCM0IzQjM7IFxyXG4kY29sb3I0OiAjQ0NDQ0NDO1xyXG4kY29sb3I1OiAjRTZFNkU2O1xyXG4kY29sb3I1LTU6IHJnYigyNDUsIDI0NSwgMjQ1KTtcclxuJGNvbG9yNjogcmdiKDI1MCwgMjUwLCAyNTEpO1xyXG5cclxuJGNvbG9yNzogd2hpdGU7XHJcbiRjb2xvcjg6ICMzNzM3Mzc7XHJcblxyXG4kc2VsZWN0ZWQtY29sb3I6IHJnYigwLCAwLCAxMDkpO1xyXG4kaG92ZXItY29sb3I6ICRjb2xvcjI7XHJcblxyXG4kZXJyb3ItY29sb3I6ICNFOTQ4NTg7IC8vcGluay1yZWRcclxuJGVycm9yLWNvbG9yLWx0OiByZ2IoMjU1LCAyMjAsIDIyNCk7XHJcbiRwY29sb3IyOiAjRjNBMzJBOyAvL29yYW5nZS15ZWxsb3dcclxuJHByaW50LWNvbG9yOiAjODJCRjZFOyAvL2xpZ2h0Z3JlZW5cclxuJHByaW50LWNvbG9yLWx0OiByZ2IoMjMwLCAyNTUsIDIyMSk7XHJcblxyXG4vLyAkcHJvZC1iYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMjUwLDI1MCwyNTApO1xyXG4vLyAkYmFja2dyb3VuZC1jb2xvcjogcmdiKDIyMCwyMjAsMjIwKTtcclxuJGZ1bmN0aW9uLXRleHQtY29sb3I6IHJnYigxOTAsIDE0MCwgMzApO1xyXG4kZnVuY3Rpb24tdGV4dC1jb2xvcjI6IHJnYigxOCwgMTI2LCAxMzYpXHJcbiJdfQ== */"

/***/ }),

/***/ "./src/app/model-viewers/all-viewers/console-viewer/console-viewer.component.ts":
/*!**************************************************************************************!*\
  !*** ./src/app/model-viewers/all-viewers/console-viewer/console-viewer.component.ts ***!
  \**************************************************************************************/
/*! exports provided: ConsoleViewerComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ConsoleViewerComponent", function() { return ConsoleViewerComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};

/**
 * ConsoleViewerComponent
 */
var ConsoleViewerComponent = /** @class */ (function () {
    /**
     * constructor
     */
    function ConsoleViewerComponent() {
        // console.log('Console Viewer Created');
    }
    /**
     * ngOnInit
     */
    ConsoleViewerComponent.prototype.ngOnInit = function () {
        // @ts-ignore
        this.text = console.logs.join('\n');
    };
    /**
     * ngOnInit
     */
    ConsoleViewerComponent.prototype.ngAfterViewInit = function () {
        var ct = document.getElementById('console-container');
        ct.scrollTop = ct.scrollHeight;
    };
    /**
     * ngDoCheck
     */
    ConsoleViewerComponent.prototype.ngDoCheck = function () {
        // @ts-ignore
        if (console.logs.length > 500) {
            // @ts-ignore
            console.logs.splice(0, console.logs.length - 500);
        }
        // @ts-ignore
        var t = console.logs.join('\n');
        // @ts-ignore
        this.logs = console.logs;
        if (this.text !== t) {
            this.text = t;
            this.scrollcheck = true;
        }
    };
    ConsoleViewerComponent.prototype.ngAfterViewChecked = function () {
        if (this.scrollcheck) {
            var ct = document.getElementById('console-container');
            ct.scrollTop = ct.scrollHeight;
            this.scrollcheck = false;
        }
    };
    ConsoleViewerComponent.prototype.clearConsole = function () {
        // @ts-ignore
        console.logs = [];
    };
    ConsoleViewerComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'console-viewer',
            template: __webpack_require__(/*! ./console-viewer.component.html */ "./src/app/model-viewers/all-viewers/console-viewer/console-viewer.component.html"),
            styles: [__webpack_require__(/*! ./console-viewer.component.scss */ "./src/app/model-viewers/all-viewers/console-viewer/console-viewer.component.scss")]
        }),
        __metadata("design:paramtypes", [])
    ], ConsoleViewerComponent);
    return ConsoleViewerComponent;
}());



/***/ }),

/***/ "./src/app/model-viewers/all-viewers/gi-viewer/attribute/attribute.component.html":
/*!****************************************************************************************!*\
  !*** ./src/app/model-viewers/all-viewers/gi-viewer/attribute/attribute.component.html ***!
  \****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class = 'attrib--container'>\r\n  <my-tabs id=\"attribTab\" (selectedIndexChange) = \"_setDataSource($event)\" [hidden]=\"dataSource === undefined\">\r\n    <my-tab *ngFor=\"let tab of tabs; let i = index\" tabTitle=\"{{tab.title}}\" index=\"{{i}}\">\r\n        <div class=\"mat-elevation-z1\">\r\n          <div class = \"table--container\">\r\n            <table mat-table [dataSource]=\"dataSource\" matSort>\r\n              <ng-container *ngFor=\"let column of displayedColumns\" [matColumnDef]=\"column\">\r\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header> {{column}} </th>\r\n                  <td mat-cell *matCellDef=\"let element\"> {{element[column]}} </td>\r\n              </ng-container>\r\n              <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n              <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n            </table>\r\n          </div>\r\n          <div class = 'btm--container'>\r\n            <div id=\"displaySelected\" [hidden]=\"dataSource === undefined\">\r\n              <span>Show Selected</span>\r\n              <input type=\"checkbox\" id=\"switch\" (click)=\"showSelectedSwitch()\" [checked]=\"showSelected\"/><label for=\"switch\">Toggle</label>\r\n            </div>\r\n            <div class = 'paginator--container'>\r\n              <mat-paginator id=\"matPaginator\" [pageSizeOptions]=\"[5, 10, 20]\" showFirstLastButtons></mat-paginator>\r\n            </div>\r\n          </div>\r\n        </div>\r\n    </my-tab>\r\n  </my-tabs>\r\n</div>\r\n  "

/***/ }),

/***/ "./src/app/model-viewers/all-viewers/gi-viewer/attribute/attribute.component.scss":
/*!****************************************************************************************!*\
  !*** ./src/app/model-viewers/all-viewers/gi-viewer/attribute/attribute.component.scss ***!
  \****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".table--container {\n  overflow-y: auto; }\n\n.mat-table {\n  background-color: whitesmoke;\n  border-top: 1px solid #B3B3B3;\n  border-bottom: 1px solid #CCCCCC; }\n\ntable {\n  width: 100%;\n  font-family: sans-serif;\n  background-color: transparent; }\n\ntable tr.mat-header-row {\n    background-color: whitesmoke;\n    height: 27px; }\n\ntable tr.mat-row {\n    height: 24px; }\n\ntable tr.mat-row .mat-cell {\n      font-size: 12px;\n      color: #373737;\n      background-color: #fafafb;\n      border-bottom: 1px solid #B3B3B3; }\n\ntable tr.mat-row:last-child .mat-cell {\n      border-bottom-color: transparent; }\n\n/deep/ #attribTab {\n  height: 100%; }\n\n/deep/ #attribTab ul {\n    background-color: transparent;\n    margin: 0;\n    padding-left: 11px;\n    white-space: nowrap;\n    height: 20px;\n    position: absolute;\n    top: 1px; }\n\n/deep/ #attribTab ul li {\n      list-style: none;\n      display: inline-block;\n      width: 75px;\n      color: #808080;\n      overflow: visible;\n      cursor: pointer;\n      position: relative;\n      height: inherit;\n      padding: 0px; }\n\n/deep/ #attribTab ul li span {\n        font-family: sans-serif;\n        margin-right: 2px;\n        font-weight: 550;\n        font-size: 12px;\n        line-height: 15px;\n        border: 1px solid transparent;\n        position: relative;\n        display: block;\n        padding: 2px;\n        text-align: center;\n        position: absolute;\n        width: inherit;\n        box-sizing: border-box; }\n\n/deep/ #attribTab ul li:hover {\n        background-color: transparent; }\n\n/deep/ #attribTab ul li:hover span {\n          color: #00006d;\n          background-color: transparent; }\n\n/deep/ #attribTab ul li.active {\n        background-color: transparent; }\n\n/deep/ #attribTab ul li.active span {\n          color: #00006d;\n          cursor: default;\n          background-color: whitesmoke;\n          border: 1px solid #B3B3B3;\n          border-bottom: 2px solid whitesmoke; }\n\n/deep/ #attribTab .pane {\n    margin-top: 20px;\n    height: calc(100% - 20px); }\n\n/deep/ #attribTab .pane .mat-elevation-z1 {\n      display: flex;\n      flex-flow: column nowrap;\n      height: 100%;\n      justify-content: space-between;\n      box-shadow: none; }\n\n/deep/ #settings_button.btn {\n  height: 20px;\n  width: 20px;\n  background-color: #fafafb;\n  position: absolute;\n  top: -1px; }\n\n/deep/ #settings_button.btn .mat-icon {\n    height: inherit;\n    width: inherit;\n    line-height: 20px;\n    font-size: 15px; }\n\n/deep/ #settings_button.btn:hover .mat-icon {\n    color: #00006d; }\n\n.attrib--container {\n  height: calc(100% - 30px); }\n\n.attrib--container #attribTab {\n    height: 100%; }\n\n.attrib--container #attribTab my-tab {\n      height: 100%; }\n\n#displaySelected {\n  position: absolute;\n  bottom: 17px;\n  left: 10px; }\n\n#displaySelected span {\n    vertical-align: middle;\n    font-size: 12px;\n    color: #808080;\n    padding-right: 5px; }\n\n#displaySelected input[type=checkbox] {\n    height: 0;\n    width: 0;\n    visibility: hidden; }\n\n.btm--container {\n  position: relative;\n  height: 30px;\n  position: absolute;\n  display: flex;\n  flex-flow: row nowrap;\n  justify-content: flex-end;\n  width: 100%;\n  bottom: 0px; }\n\n.btm--container #displaySelected {\n    padding-left: 10px;\n    width: 20%; }\n\n.btm--container #displaySelected span {\n      vertical-align: middle;\n      font-size: 12px;\n      color: #808080;\n      padding-right: 5px;\n      -moz-user-select: none;\n      -webkit-user-select: none; }\n\n.btm--container #displaySelected input[type=checkbox] {\n      height: 0;\n      width: 0;\n      visibility: hidden; }\n\n.btm--container #displaySelected label {\n      vertical-align: middle;\n      cursor: pointer;\n      text-indent: -9999px;\n      width: 30px;\n      height: 15px;\n      background: #CCCCCC;\n      display: inline-block;\n      position: relative; }\n\n.btm--container #displaySelected label:after {\n        content: '';\n        position: absolute;\n        top: 1px;\n        left: 1px;\n        width: 13px;\n        height: 13px;\n        background: #E6E6E6;\n        transition: 0.3s; }\n\n.btm--container #displaySelected input:checked + label {\n      background: #00006d; }\n\n.btm--container #displaySelected input:checked + label:after {\n      left: calc(100% - 2px);\n      -webkit-transform: translateX(-100%);\n              transform: translateX(-100%); }\n\n.btm--container #displaySelected input:hover:not(:checked) + label {\n      background: rgba(0, 0, 109, 0.4); }\n\n.btm--container #displaySelected input:hover:not(:checked) + label:after {\n        box-shadow: 2px 0px 0px 0px; }\n\n.btm--container #displaySelected label:active:after {\n      width: 13px; }\n\n.btm--container .paginator--container {\n    position: relative;\n    width: 80%;\n    display: flex;\n    flex-flow: row nowrap;\n    justify-content: flex-end; }\n\n.btm--container #matPaginator {\n    position: absolute;\n    top: -20px;\n    background-color: transparent;\n    width: 100%; }\n\n.btm--container #matPaginator .mat-paginator-outer-container .mat-paginator-container {\n      width: inherit;\n      min-height: 30px !important;\n      position: absolute;\n      bottom: 8px;\n      height: 20px;\n      display: flex;\n      flex-flow: row nowrap;\n      flex-shrink: 0;\n      font-family: sans-serif; }\n\n.btm--container #matPaginator .mat-paginator-outer-container .mat-paginator-container .mat-paginator-page-size, .btm--container #matPaginator .mat-paginator-outer-container .mat-paginator-container .mat-paginator-range-actions {\n        height: inherit;\n        align-items: baseline;\n        padding-right: 15px; }\n\n.btm--container #matPaginator .mat-paginator-outer-container .mat-paginator-container .mat-paginator-page-size-label, .btm--container #matPaginator .mat-paginator-outer-container .mat-paginator-container .mat-paginator-range-label {\n        white-space: nowrap; }\n\n.btm--container #matPaginator .mat-paginator-outer-container .mat-paginator-container .mat-paginator-page-size-select {\n        margin: 0; }\n\n.btm--container #matPaginator .mat-paginator-outer-container .mat-paginator-container .mat-paginator-page-size-select .mat-form-field-wrapper {\n          padding-bottom: 0.95em; }\n\n.btm--container #matPaginator .mat-paginator-outer-container .mat-paginator-container .mat-paginator-page-size-select .mat-form-field-wrapper .mat-form-field-flex .mat-form-field-infix .mat-select .mat-select-trigger .mat-select-value {\n            font-family: sans-serif;\n            color: #808080; }\n\n.btm--container #matPaginator .mat-paginator-outer-container .mat-paginator-container .mat-icon-button:hover .mat-paginator-icon {\n        fill: #00006d; }\n\n/*# sourceMappingURL=data:application/json;base64, */"

/***/ }),

/***/ "./src/app/model-viewers/all-viewers/gi-viewer/attribute/attribute.component.ts":
/*!**************************************************************************************!*\
  !*** ./src/app/model-viewers/all-viewers/gi-viewer/attribute/attribute.component.ts ***!
  \**************************************************************************************/
/*! exports provided: AttributeComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AttributeComponent", function() { return AttributeComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/material */ "./node_modules/@angular/material/esm5/material.es5.js");
/* harmony import */ var _libs_geo_info_GIModel__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @libs/geo-info/GIModel */ "./src/libs/geo-info/GIModel.ts");
/* harmony import */ var _data_data_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../data/data.service */ "./src/app/model-viewers/all-viewers/gi-viewer/data/data.service.ts");
/* harmony import */ var _libs_geo_info__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @libs/geo-info */ "./src/libs/geo-info/index.ts");
/* harmony import */ var _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @libs/geo-info/common */ "./src/libs/geo-info/common.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};






var AttributeComponent = /** @class */ (function () {
    function AttributeComponent(injector) {
        this.showSelected = false;
        this.tabs = [
            { type: _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_5__["EEntType"].POSI, title: 'Positions' },
            { type: _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_5__["EEntType"].VERT, title: 'Vertex' },
            { type: _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_5__["EEntType"].EDGE, title: 'Edges' },
            { type: _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_5__["EEntType"].WIRE, title: 'Wires' },
            { type: _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_5__["EEntType"].FACE, title: 'Faces' },
            { type: _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_5__["EEntType"].POINT, title: 'Points' },
            { type: _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_5__["EEntType"].PLINE, title: 'Polylines' },
            { type: _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_5__["EEntType"].PGON, title: 'Polygons' },
            { type: _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_5__["EEntType"].COLL, title: 'Collections' }
        ];
        this.displayedColumns = [];
        this.paginator = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["QueryList"]();
        this.sort = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["QueryList"]();
        this.dataService = injector.get(_data_data_service__WEBPACK_IMPORTED_MODULE_3__["DataService"]);
        if (localStorage.getItem('mpm_attrib_current_tab') === null) {
            localStorage.setItem('mpm_attrib_current_tab', '0');
        }
    }
    AttributeComponent.prototype.ngOnChanges = function (changes) {
        if (changes['data'] && this.data) {
            this.refreshTable();
        }
        if (changes['refresh']) {
            this.refreshTable();
        }
    };
    AttributeComponent.prototype.generateTable = function (tabIndex) {
        var EntityType = _libs_geo_info__WEBPACK_IMPORTED_MODULE_4__["GICommon"].EEntType;
        var tab_map = {
            0: EntityType.POSI,
            1: EntityType.VERT,
            2: EntityType.EDGE,
            3: EntityType.WIRE,
            4: EntityType.FACE,
            5: EntityType.POINT,
            6: EntityType.PLINE,
            7: EntityType.PGON,
            8: EntityType.COLL
        };
        if (this.data) {
            var ThreeJS = this.data.attribs.threejs;
            var displayData = [];
            var AllAttribData = ThreeJS.getAttribsForTable(tab_map[tabIndex]);
            var SelectedAttribData = ThreeJS.getEntsVals(this.dataService.selected_ents.get(_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_5__["EEntTypeStr"][tab_map[tabIndex]]), tab_map[tabIndex]);
            if (this.showSelected) {
                displayData = SelectedAttribData;
            }
            else {
                displayData = AllAttribData;
            }
            if (displayData.length > 0) {
                this.displayedColumns = Object.keys(displayData[0]);
                this.dataSource = new _angular_material__WEBPACK_IMPORTED_MODULE_1__["MatTableDataSource"](displayData);
            }
            else {
                this.displayedColumns = [];
                this.dataSource = new _angular_material__WEBPACK_IMPORTED_MODULE_1__["MatTableDataSource"]();
            }
            this.dataSource.paginator = this.paginator.toArray()[tabIndex];
            this.dataSource.sort = this.sort.toArray()[tabIndex];
        }
        return tabIndex;
    };
    AttributeComponent.prototype._setDataSource = function (tabIndex) {
        var _this = this;
        setTimeout(function () {
            localStorage.setItem('mpm_attrib_current_tab', tabIndex.toString());
            _this.generateTable(tabIndex);
        });
    };
    AttributeComponent.prototype.getCurrentTab = function () {
        if (localStorage.getItem('mpm_attrib_current_tab') != null) {
            return Number(localStorage.getItem('mpm_attrib_current_tab'));
        }
        else {
            return 0;
        }
    };
    AttributeComponent.prototype.showSelectedSwitch = function () {
        this.showSelected = !this.showSelected;
        this.refreshTable();
    };
    AttributeComponent.prototype.refreshTable = function () {
        var _this = this;
        var currentTab = this.getCurrentTab();
        setTimeout(function () {
            _this.generateTable(currentTab);
        });
    };
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", _libs_geo_info_GIModel__WEBPACK_IMPORTED_MODULE_2__["GIModel"])
    ], AttributeComponent.prototype, "data", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", Event)
    ], AttributeComponent.prototype, "refresh", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChildren"])(_angular_material__WEBPACK_IMPORTED_MODULE_1__["MatPaginator"]),
        __metadata("design:type", Object)
    ], AttributeComponent.prototype, "paginator", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChildren"])(_angular_material__WEBPACK_IMPORTED_MODULE_1__["MatSort"]),
        __metadata("design:type", Object)
    ], AttributeComponent.prototype, "sort", void 0);
    AttributeComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'attribute',
            template: __webpack_require__(/*! ./attribute.component.html */ "./src/app/model-viewers/all-viewers/gi-viewer/attribute/attribute.component.html"),
            styles: [__webpack_require__(/*! ./attribute.component.scss */ "./src/app/model-viewers/all-viewers/gi-viewer/attribute/attribute.component.scss")]
        }),
        __metadata("design:paramtypes", [_angular_core__WEBPACK_IMPORTED_MODULE_0__["Injector"]])
    ], AttributeComponent);
    return AttributeComponent;
}());



/***/ }),

/***/ "./src/app/model-viewers/all-viewers/gi-viewer/attribute/attribute.module.ts":
/*!***********************************************************************************!*\
  !*** ./src/app/model-viewers/all-viewers/gi-viewer/attribute/attribute.module.ts ***!
  \***********************************************************************************/
/*! exports provided: AttributeModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AttributeModule", function() { return AttributeModule; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/material */ "./node_modules/@angular/material/esm5/material.es5.js");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};


var AttributeModule = /** @class */ (function () {
    function AttributeModule() {
    }
    AttributeModule = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["NgModule"])({
            imports: [
                _angular_material__WEBPACK_IMPORTED_MODULE_1__["MatTableModule"],
                _angular_material__WEBPACK_IMPORTED_MODULE_1__["MatSortModule"],
                _angular_material__WEBPACK_IMPORTED_MODULE_1__["MatPaginatorModule"]
            ],
            exports: [
                _angular_material__WEBPACK_IMPORTED_MODULE_1__["MatTableModule"],
                _angular_material__WEBPACK_IMPORTED_MODULE_1__["MatSortModule"],
                _angular_material__WEBPACK_IMPORTED_MODULE_1__["MatPaginatorModule"]
            ]
        })
    ], AttributeModule);
    return AttributeModule;
}());



/***/ }),

/***/ "./src/app/model-viewers/all-viewers/gi-viewer/attribute/tab.component.ts":
/*!********************************************************************************!*\
  !*** ./src/app/model-viewers/all-viewers/gi-viewer/attribute/tab.component.ts ***!
  \********************************************************************************/
/*! exports provided: TabComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TabComponent", function() { return TabComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};

var TabComponent = /** @class */ (function () {
    function TabComponent() {
        this.active = false;
    }
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])('tabTitle'),
        __metadata("design:type", String)
    ], TabComponent.prototype, "title", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", Object)
    ], TabComponent.prototype, "active", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])('index'),
        __metadata("design:type", Number)
    ], TabComponent.prototype, "index", void 0);
    TabComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'my-tab',
            template: "\n    <div [hidden]=\"!active\" class=\"pane\">\n      <ng-content></ng-content>\n    </div>\n  ",
            styles: ["\n    .pane{\n      padding: 0;\n    }\n  "]
        })
    ], TabComponent);
    return TabComponent;
}());



/***/ }),

/***/ "./src/app/model-viewers/all-viewers/gi-viewer/attribute/tabs.component.ts":
/*!*********************************************************************************!*\
  !*** ./src/app/model-viewers/all-viewers/gi-viewer/attribute/tabs.component.ts ***!
  \*********************************************************************************/
/*! exports provided: TabsComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TabsComponent", function() { return TabsComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _tab_component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./tab.component */ "./src/app/model-viewers/all-viewers/gi-viewer/attribute/tab.component.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};


var TabsComponent = /** @class */ (function () {
    function TabsComponent() {
        this.selectedIndexChange = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
    }
    // contentChildren are set
    TabsComponent.prototype.ngAfterContentInit = function () {
        var _this = this;
        setTimeout(function () {
            var activeTabs = _this.tabs.filter(function (tab) { return tab.active; });
            // if there is no active tab set, activate the first
            if (activeTabs.length === 0) {
                _this.selectTab(_this.tabs.first);
            }
        }, 0);
    };
    TabsComponent.prototype.selectTab = function (tab) {
        // deactivate all tabs
        this.tabs.toArray().forEach(function (_tab) { return _tab.active = false; });
        // activate the tab the user has clicked on.
        tab.active = true;
        this.selectedIndexChange.emit(tab.index);
    };
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])(),
        __metadata("design:type", Object)
    ], TabsComponent.prototype, "selectedIndexChange", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ContentChildren"])(_tab_component__WEBPACK_IMPORTED_MODULE_1__["TabComponent"]),
        __metadata("design:type", _angular_core__WEBPACK_IMPORTED_MODULE_0__["QueryList"])
    ], TabsComponent.prototype, "tabs", void 0);
    TabsComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'my-tabs',
            template: "\n      <ul class=\"nav nav-tabs\">\n        <li *ngFor=\"let tab of tabs\" (click)=\"selectTab(tab)\" [class.active]=\"tab.active\">\n          <span>{{tab.title}}</span>\n        </li>\n      </ul>\n      <ng-content></ng-content>\n    ",
            styles: [__webpack_require__(/*! ./attribute.component.scss */ "./src/app/model-viewers/all-viewers/gi-viewer/attribute/attribute.component.scss")]
        })
    ], TabsComponent);
    return TabsComponent;
}());



/***/ }),

/***/ "./src/app/model-viewers/all-viewers/gi-viewer/data/data.service.ts":
/*!**************************************************************************!*\
  !*** ./src/app/model-viewers/all-viewers/gi-viewer/data/data.service.ts ***!
  \**************************************************************************/
/*! exports provided: DataService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DataService", function() { return DataService; });
/* harmony import */ var _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @libs/geo-info/common */ "./src/libs/geo-info/common.ts");
/* harmony import */ var _data_threejs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./data.threejs */ "./src/app/model-viewers/all-viewers/gi-viewer/data/data.threejs.ts");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};


// import @angular stuff

/**
 * DataService
 * The data service for the Goe-Info viewer.
 */
var DataService = /** @class */ (function () {
    /**
     * Create a data service.
     */
    function DataService() {
        this.selecting = [];
        // Selected Entities by Threejs Viewer for Attribute Table
        this.selected_ents = new Map();
        this.selected_ents.set(_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntTypeStr"][_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].POSI], new Map());
        this.selected_ents.set(_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntTypeStr"][_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].VERT], new Map());
        this.selected_ents.set(_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntTypeStr"][_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].EDGE], new Map());
        this.selected_ents.set(_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntTypeStr"][_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].FACE], new Map());
        this.selected_ents.set(_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntTypeStr"][_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].WIRE], new Map());
        this.selected_ents.set(_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntTypeStr"][_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].PGON], new Map());
        this.selected_ents.set(_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntTypeStr"][_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].PLINE], new Map());
        this.selected_ents.set(_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntTypeStr"][_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].POINT], new Map());
        this.selected_ents.set(_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntTypeStr"][_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].COLL], new Map());
    }
    /**
     * Get the THreejs Scene
     */
    DataService.prototype.getThreejsScene = function () {
        return this._data_threejs;
    };
    /**
     * Set the THreejs Scene
     */
    DataService.prototype.setThreejsScene = function (settings) {
        this._data_threejs = new _data_threejs__WEBPACK_IMPORTED_MODULE_1__["DataThreejs"](settings);
    };
    /**
     * check selected entites number
     */
    DataService.prototype.countSelectedEnts = function () {
        var count = 0;
        this.selected_ents.forEach(function (selected_ents) {
            count = +selected_ents.size;
        });
        return count;
    };
    DataService = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_2__["Injectable"])(),
        __metadata("design:paramtypes", [])
    ], DataService);
    return DataService;
}());



/***/ }),

/***/ "./src/app/model-viewers/all-viewers/gi-viewer/data/data.threejs.ts":
/*!**************************************************************************!*\
  !*** ./src/app/model-viewers/all-viewers/gi-viewer/data/data.threejs.ts ***!
  \**************************************************************************/
/*! exports provided: DataThreejs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DataThreejs", function() { return DataThreejs; });
/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! three */ "./node_modules/three/build/three.module.js");
/* harmony import */ var three_orbit_controls__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! three-orbit-controls */ "./node_modules/three-orbit-controls/index.js");
/* harmony import */ var three_orbit_controls__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(three_orbit_controls__WEBPACK_IMPORTED_MODULE_1__);


/**
 * ThreejsScene
 */
var DataThreejs = /** @class */ (function () {
    /**
     * Constructs a new data subscriber.
     */
    function DataThreejs(settings) {
        // interaction and selection
        this.selected_geoms = new Map();
        // text lables
        this.ObjLabelMap = new Map();
        this._textLabels = new Map();
        // number of threejs points, lines, triangles
        this._threejs_nums = [0, 0, 0];
        this.sceneObjs = [];
        this.sceneObjsSelected = new Map();
        this.settings = settings;
        // scene
        this._scene = new three__WEBPACK_IMPORTED_MODULE_0__["Scene"]();
        this._scene.background = new three__WEBPACK_IMPORTED_MODULE_0__["Color"](0xcccccc);
        // renderer
        this._renderer = new three__WEBPACK_IMPORTED_MODULE_0__["WebGLRenderer"]({ antialias: true });
        // this._renderer.setClearColor(0xEEEEEE);
        this._renderer.setPixelRatio(window.devicePixelRatio);
        this._renderer.setSize(window.innerWidth / 1.8, window.innerHeight);
        this._renderer.shadowMap.enabled = true;
        this._renderer.shadowMap.type = three__WEBPACK_IMPORTED_MODULE_0__["PCFSoftShadowMap"];
        // camera settings
        this._camera = new three__WEBPACK_IMPORTED_MODULE_0__["PerspectiveCamera"](50, 1, 0.01, 20000);
        // document.addEventListener( 'keypress', this.onWindowKeyPress, false );
        this._camera.position.x = -80;
        this._camera.position.y = -80;
        this._camera.position.z = 80;
        this._camera.aspect = 1;
        this._camera.up.set(0, 0, 1);
        this._camera.lookAt(this._scene.position);
        this._camera.updateProjectionMatrix();
        // orbit controls
        var orbit_controls = three_orbit_controls__WEBPACK_IMPORTED_MODULE_1__(three__WEBPACK_IMPORTED_MODULE_0__);
        this._controls = new orbit_controls(this._camera, this._renderer.domElement);
        this._controls.enableKeys = false;
        this._controls.update();
        // mouse
        this._mouse = new three__WEBPACK_IMPORTED_MODULE_0__["Vector2"]();
        // selecting
        this._raycaster = new three__WEBPACK_IMPORTED_MODULE_0__["Raycaster"]();
        this._raycaster.linePrecision = 0.05;
        // add grid and lights
        this._addGrid();
        this._addHemisphereLight();
        this._addAxes();
    }
    DataThreejs.prototype.addGeometry = function (model, container) {
        while (this._scene.children.length > 0) {
            this._scene.remove(this._scene.children[0]);
            this.sceneObjs = [];
        }
        document.querySelectorAll('[id^=textLabel_]').forEach(function (value) {
            container.removeChild(value);
        });
        this.ObjLabelMap.clear();
        this._textLabels.clear();
        this._addGrid();
        this._addHemisphereLight();
        // this._addDirectionalLight();
        this._addAxes();
        // Add geometry
        var threejs_data = model.get3jsData();
        // Create buffers that will be used by all geometry
        var posis_buffer = new three__WEBPACK_IMPORTED_MODULE_0__["Float32BufferAttribute"](threejs_data.positions, 3);
        var normals_buffer = new three__WEBPACK_IMPORTED_MODULE_0__["Float32BufferAttribute"](threejs_data.normals, 3);
        var colors_buffer = new three__WEBPACK_IMPORTED_MODULE_0__["Float32BufferAttribute"](threejs_data.colors, 3);
        this._addTris(threejs_data.triangle_indices, posis_buffer, normals_buffer, colors_buffer);
        this._addLines(threejs_data.edge_indices, posis_buffer, normals_buffer);
        this._addPoints(threejs_data.point_indices, posis_buffer, colors_buffer);
        // const allObjs = this.getAllObjs();
        // const center = allObjs.center;
        // this.grid.position.copy(center);
        // this.axesHelper.position.copy(center);
    };
    DataThreejs.prototype.selectObjFace = function (ent_id, triangle_i, positions, container, label) {
        if (label === void 0) { label = true; }
        var geom = new three__WEBPACK_IMPORTED_MODULE_0__["BufferGeometry"]();
        geom.setIndex(triangle_i);
        geom.addAttribute('position', new three__WEBPACK_IMPORTED_MODULE_0__["Float32BufferAttribute"](positions, 3));
        geom.addAttribute('normal', new three__WEBPACK_IMPORTED_MODULE_0__["Float32BufferAttribute"](Array(positions.length).fill(0), 3));
        geom.addAttribute('color', new three__WEBPACK_IMPORTED_MODULE_0__["Float32BufferAttribute"](Array(positions.length).fill(0), 3));
        var mat = new three__WEBPACK_IMPORTED_MODULE_0__["MeshPhongMaterial"]({
            // specular:  new THREE.Color('rgb(255, 0, 0)'), // 0xffffff,
            specular: 0x000000,
            emissive: 0xff0000,
            shininess: 20,
            side: three__WEBPACK_IMPORTED_MODULE_0__["DoubleSide"],
            vertexColors: three__WEBPACK_IMPORTED_MODULE_0__["VertexColors"],
        });
        var mesh = new three__WEBPACK_IMPORTED_MODULE_0__["Mesh"](geom, mat);
        mesh.geometry.computeBoundingSphere();
        mesh.geometry.computeVertexNormals();
        this._scene.add(mesh);
        this.selected_geoms.set(ent_id, mesh.id);
        this.sceneObjsSelected.set(ent_id, mesh);
        if (label) {
            var obj = { entity: mesh, type: objType.face };
            this.createLabelforObj(container, obj.entity, obj.type, ent_id);
            this.ObjLabelMap.set(ent_id, obj);
        }
    };
    DataThreejs.prototype.selectObjLine = function (ent_id, indices, positions, container, label) {
        if (label === void 0) { label = true; }
        var geom = new three__WEBPACK_IMPORTED_MODULE_0__["BufferGeometry"]();
        if (indices.length > 2) {
            geom.setIndex(indices);
        }
        else {
            geom.setIndex([0, 1]);
        }
        geom.addAttribute('position', new three__WEBPACK_IMPORTED_MODULE_0__["Float32BufferAttribute"](positions, 3));
        geom.addAttribute('normal', new three__WEBPACK_IMPORTED_MODULE_0__["Float32BufferAttribute"](Array(positions.length).fill(0), 3));
        var mat = new three__WEBPACK_IMPORTED_MODULE_0__["LineBasicMaterial"]({
            color: 0xff0000,
            linewidth: 5,
            linecap: 'round',
            linejoin: 'round' // ignored by WebGLRenderer
        });
        var line = new three__WEBPACK_IMPORTED_MODULE_0__["LineSegments"](geom, mat);
        this._scene.add(line);
        this.selected_geoms.set(ent_id, line.id);
        this.sceneObjsSelected.set(ent_id, line);
        if (label) {
            var obj = { entity: line, type: objType.line };
            this.createLabelforObj(container, obj.entity, obj.type, ent_id);
            this.ObjLabelMap.set(ent_id, obj);
        }
    };
    DataThreejs.prototype.selectObjPoint = function (ent_id, point_indices, positions, container, label) {
        if (ent_id === void 0) { ent_id = null; }
        if (label === void 0) { label = true; }
        var geom = new three__WEBPACK_IMPORTED_MODULE_0__["BufferGeometry"]();
        geom.setIndex(point_indices);
        geom.addAttribute('position', new three__WEBPACK_IMPORTED_MODULE_0__["Float32BufferAttribute"](positions, 3));
        var colors = new Uint8Array([].concat.apply([], Array(positions.length / 3).fill([255, 0, 0])));
        geom.addAttribute('color', new three__WEBPACK_IMPORTED_MODULE_0__["BufferAttribute"](colors, 3, true));
        geom.computeBoundingSphere();
        var mat = new three__WEBPACK_IMPORTED_MODULE_0__["PointsMaterial"]({
            size: 1,
            vertexColors: three__WEBPACK_IMPORTED_MODULE_0__["VertexColors"]
        });
        var point = new three__WEBPACK_IMPORTED_MODULE_0__["Points"](geom, mat);
        this._scene.add(point);
        this.selected_geoms.set(ent_id, point.id);
        this.sceneObjsSelected.set(ent_id, point);
        if (label) {
            var obj = { entity: point, type: objType.point };
            this.createLabelforObj(container, obj.entity, obj.type, ent_id);
            this.ObjLabelMap.set(ent_id, obj);
        }
    };
    DataThreejs.prototype.selectObjPositions = function (ent_id, positions) {
        var geom = new three__WEBPACK_IMPORTED_MODULE_0__["BufferGeometry"]();
        geom.addAttribute('position', new three__WEBPACK_IMPORTED_MODULE_0__["Float32BufferAttribute"](positions, 3));
        var colors = new Uint8Array([].concat.apply([], Array(positions.length / 3).fill([0, 60, 255])));
        geom.addAttribute('color', new three__WEBPACK_IMPORTED_MODULE_0__["BufferAttribute"](colors, 3, true));
        geom.computeBoundingSphere();
        var mat = new three__WEBPACK_IMPORTED_MODULE_0__["PointsMaterial"]({
            size: 0.8,
            vertexColors: three__WEBPACK_IMPORTED_MODULE_0__["VertexColors"]
        });
        var point = new three__WEBPACK_IMPORTED_MODULE_0__["Points"](geom, mat);
        this._scene.add(point);
        this.selected_geoms.set(ent_id, point);
        this.sceneObjsSelected.set(ent_id, point);
    };
    DataThreejs.prototype.createLabelforObj = function (container, obj, type, labelText) {
        var label = this._createTextLabel(container, type, labelText);
        label.setHTML(labelText);
        label.setParent(obj);
        this._textLabels.set(label.element.id, label);
        container.appendChild(label.element);
    };
    DataThreejs.prototype.unselectObj = function (ent_id, container) {
        var removing = this.selected_geoms.get(ent_id);
        //
        this.selected_geoms.delete(ent_id);
        // remove Geom from scene
        this._scene.remove(this._scene.getObjectById(removing));
        // remove Geom from selected Objs Map
        this.sceneObjsSelected.delete(ent_id);
        this.ObjLabelMap.delete(ent_id);
        if (document.getElementById("textLabel_" + ent_id)) {
            container.removeChild(document.getElementById("textLabel_" + ent_id));
        }
    };
    // ============================================================================
    // Private methods
    // ============================================================================
    /**
     * Creates a hemisphere light
     */
    DataThreejs.prototype._addHemisphereLight = function () {
        var light = new three__WEBPACK_IMPORTED_MODULE_0__["HemisphereLight"](0xffffbb, // skyColor
        0x080820, // groundColor
        1 // intensity
        );
        this._scene.add(light);
    };
    /**
     * Creates an ambient light
     */
    DataThreejs.prototype._addAmbientLight = function (color, intensity) {
        var light = new three__WEBPACK_IMPORTED_MODULE_0__["AmbientLight"](color, intensity); // soft white light
        this._scene.add(light);
    };
    // Creates a Directional Light
    DataThreejs.prototype._addDirectionalLight = function () {
        var light = new three__WEBPACK_IMPORTED_MODULE_0__["SpotLight"](0xffffff);
        light.position.set(200, 100, 200);
        light.castShadow = true;
        this._scene.add(light);
    };
    // add axes
    DataThreejs.prototype._addAxes = function (size) {
        if (size === void 0) { size = this.settings.axes.size; }
        var i = 0;
        var length = this._scene.children.length;
        if (length !== 0) {
            for (; i < length; i++) {
                if (this._scene.children[i]) {
                    if (this._scene.children[i].name === 'AxesHelper') {
                        this._scene.remove(this._scene.children[i]);
                    }
                }
            }
        }
        this.axesHelper = new three__WEBPACK_IMPORTED_MODULE_0__["AxesHelper"](size);
        this.axesHelper.visible = this.settings.axes.show;
        if (this.axesHelper.visible) {
            this.axesHelper.name = 'AxesHelper';
            this._scene.add(this.axesHelper);
        }
        // this.axesHelper.position.set(0, 0, 0);
    };
    /**
     * Draws a grid on the XY plane.
     */
    DataThreejs.prototype._addGrid = function (size) {
        if (size === void 0) { size = this.settings.grid.size; }
        var i = 0;
        var length = this._scene.children.length;
        for (; i < length; i++) {
            if (this._scene.children[i]) {
                if (this._scene.children[i].name === 'GridHelper') {
                    this._scene.remove(this._scene.children[i]);
                }
            }
        }
        this.grid = new three__WEBPACK_IMPORTED_MODULE_0__["GridHelper"](size, size / 10);
        this.grid.visible = this.settings.grid.show;
        // todo: change grid -> grid_value
        if (this.grid.visible) {
            this.grid.name = 'GridHelper';
            var vector = new three__WEBPACK_IMPORTED_MODULE_0__["Vector3"](0, 1, 0);
            this.grid.lookAt(vector);
            this.grid.position.set(0, 0, 0);
            this._scene.add(this.grid);
        }
    };
    /**
     * Add threejs triangles to the scene
     */
    DataThreejs.prototype._addTris = function (tris_i, posis_buffer, normals_buffer, colors_buffer) {
        var geom = new three__WEBPACK_IMPORTED_MODULE_0__["BufferGeometry"]();
        geom.setIndex(tris_i);
        geom.addAttribute('position', posis_buffer);
        geom.addAttribute('normal', normals_buffer);
        geom.addAttribute('color', colors_buffer);
        var mat = new three__WEBPACK_IMPORTED_MODULE_0__["MeshPhongMaterial"]({
            // specular:  new THREE.Color('rgb(255, 0, 0)'), // 0xffffff,
            specular: 0xffffff,
            emissive: 0xdddddd,
            shininess: 0,
            side: three__WEBPACK_IMPORTED_MODULE_0__["DoubleSide"],
            vertexColors: three__WEBPACK_IMPORTED_MODULE_0__["VertexColors"],
        });
        var mesh = new three__WEBPACK_IMPORTED_MODULE_0__["Mesh"](geom, mat);
        mesh.geometry.computeBoundingSphere();
        mesh.geometry.computeVertexNormals();
        mesh.castShadow = true;
        mesh.receiveShadow = false;
        // show vertex normals
        this.vnh = new three__WEBPACK_IMPORTED_MODULE_0__["VertexNormalsHelper"](mesh, this.settings.normals.size, 0x0000ff);
        this.vnh.visible = this.settings.normals.show;
        this._scene.add(this.vnh);
        this.sceneObjs.push(mesh);
        // add mesh to scene
        this._scene.add(mesh);
        this._threejs_nums[2] = tris_i.length / 3;
    };
    /**
     * Add threejs lines to the scene
     */
    DataThreejs.prototype._addLines = function (lines_i, posis_buffer, normals_buffer) {
        var geom = new three__WEBPACK_IMPORTED_MODULE_0__["BufferGeometry"]();
        geom.setIndex(lines_i);
        geom.addAttribute('position', posis_buffer);
        geom.addAttribute('normal', normals_buffer);
        // geom.addAttribute( 'color', new THREE.Float32BufferAttribute( colors_flat, 3 ) );
        var mat = new three__WEBPACK_IMPORTED_MODULE_0__["LineBasicMaterial"]({
            color: 0x000000,
            linewidth: 1,
            linecap: 'round',
            linejoin: 'round' // ignored by WebGLRenderer
        });
        var line = new three__WEBPACK_IMPORTED_MODULE_0__["LineSegments"](geom, mat);
        this.sceneObjs.push(line);
        this._scene.add(line);
        this._threejs_nums[1] = lines_i.length / 2;
    };
    /**
     * Add threejs points to the scene
     */
    DataThreejs.prototype._addPoints = function (points_i, posis_buffer, colors_buffer) {
        var geom = new three__WEBPACK_IMPORTED_MODULE_0__["BufferGeometry"]();
        geom.setIndex(points_i);
        geom.addAttribute('position', posis_buffer);
        geom.addAttribute('color', colors_buffer);
        // geom.computeBoundingSphere();
        var mat = new three__WEBPACK_IMPORTED_MODULE_0__["PointsMaterial"]({
            size: 1,
            vertexColors: three__WEBPACK_IMPORTED_MODULE_0__["VertexColors"]
        });
        var point = new three__WEBPACK_IMPORTED_MODULE_0__["Points"](geom, mat);
        this.sceneObjs.push(point);
        this._scene.add(point);
        this._threejs_nums[0] = points_i.length;
    };
    DataThreejs.prototype._createTextLabel = function (container, type, labelText) {
        var div = document.createElement('div');
        div.id = "textLabel_" + labelText;
        div.className = 'text-label';
        div.style.position = 'absolute';
        div.innerHTML = '';
        div.style.top = '-1000';
        div.style.left = '-1000';
        var _this = this;
        return {
            element: div,
            parent: false,
            position: new three__WEBPACK_IMPORTED_MODULE_0__["Vector3"](0, 0, 0),
            setHTML: function (html) {
                this.element.innerHTML = html;
            },
            setParent: function (threejsobj) {
                this.parent = threejsobj;
            },
            updatePosition: function () {
                if (this.parent) {
                    if (type === objType.point || type === objType.face) {
                        var center = this.parent.geometry.boundingSphere.center;
                        this.position.copy(center);
                    }
                    else if (type === objType.line) {
                        var p = this.parent.geometry.getAttribute('position').array;
                        var center = new three__WEBPACK_IMPORTED_MODULE_0__["Vector3"]((p[0] + p[3]) / 2, (p[1] + p[4]) / 2, (p[2] + p[5]) / 2);
                        this.position.copy(center);
                    }
                }
                var coords2d = this.get2DCoords(this.position, _this._camera);
                this.element.style.left = coords2d.x + 'px';
                this.element.style.top = coords2d.y + 'px';
            },
            get2DCoords: function (position, camera) {
                var vector = position.project(camera);
                vector.x = (vector.x + 1) / 2 * container.offsetWidth;
                vector.y = -(vector.y - 1) / 2 * container.offsetHeight;
                return vector;
            }
        };
    };
    DataThreejs.prototype.lookAtObj = function (width) {
        var allObjs = this.getAllObjs();
        var selectedObjs = this.getSelectedObjs();
        if (allObjs === null && selectedObjs === null) {
            var sceneCenter = this._scene.position;
            this._camera.lookAt(sceneCenter);
            // this._camera.updateProjectionMatrix();
            this._controls.target.set(sceneCenter.x, sceneCenter.y, sceneCenter.z);
            this._controls.update();
        }
        var center = null;
        var radius = null;
        if (selectedObjs) {
            center = selectedObjs.center;
            radius = selectedObjs.radius;
        }
        else {
            center = allObjs.center;
            radius = allObjs.radius;
        }
        // set grid and axeshelper to center of the objs
        // this.grid.position.set(center.x, center.y, 0);
        // this.axesHelper.position.set(center.x, center.y, 0);
        var fov = this._camera.fov * (Math.PI / 180);
        var vec_centre_to_pos = new three__WEBPACK_IMPORTED_MODULE_0__["Vector3"]();
        vec_centre_to_pos.subVectors(this._camera.position, center);
        var r = radius < 100 ? 200 : (radius < 500 ? 10 : 1);
        var f = 1 + (width / radius / r);
        var tmp_vec = new three__WEBPACK_IMPORTED_MODULE_0__["Vector3"](Math.abs(radius / Math.sin(fov / 2) / f), Math.abs(radius / Math.sin(fov / 2) / f), Math.abs(radius / Math.sin(fov / 2)) / f);
        vec_centre_to_pos.setLength(tmp_vec.length());
        var perspectiveNewPos = new three__WEBPACK_IMPORTED_MODULE_0__["Vector3"]();
        perspectiveNewPos.addVectors(center, vec_centre_to_pos);
        var newLookAt = new three__WEBPACK_IMPORTED_MODULE_0__["Vector3"](center.x, center.y, center.z);
        this._camera.position.copy(perspectiveNewPos);
        this._camera.lookAt(newLookAt);
        this._camera.updateProjectionMatrix();
        this._controls.target.set(newLookAt.x, newLookAt.y, newLookAt.z);
        this._controls.update();
    };
    DataThreejs.prototype.getAllObjs = function () {
        if (this.sceneObjs.length !== 0) {
            var objs_1 = new three__WEBPACK_IMPORTED_MODULE_0__["Object3D"]();
            this.sceneObjs.map(function (obj) { return objs_1.children.push(obj); });
            var boxHelper = new three__WEBPACK_IMPORTED_MODULE_0__["BoxHelper"](objs_1);
            boxHelper.geometry.computeBoundingSphere();
            var boundingSphere = boxHelper.geometry.boundingSphere;
            return boundingSphere;
        }
        else {
            return null;
        }
    };
    DataThreejs.prototype.getSelectedObjs = function () {
        if (this.sceneObjsSelected.size !== 0) {
            var objs_2 = new three__WEBPACK_IMPORTED_MODULE_0__["Object3D"]();
            this.sceneObjsSelected.forEach(function (obj) { return objs_2.children.push(obj); });
            var boxHelper = new three__WEBPACK_IMPORTED_MODULE_0__["BoxHelper"](objs_2);
            boxHelper.geometry.computeBoundingSphere();
            var boundingSphere = boxHelper.geometry.boundingSphere;
            return boundingSphere;
        }
        else {
            return null;
        }
    };
    DataThreejs.prototype.onWindowKeyPress = function (event) {
        if (event.target.nodeName === 'TEXTAREA') {
            return;
        }
        var segment_str = window.location.pathname;
        var segment_array = segment_str.split('/');
        var last_segment = segment_array[segment_array.length - 1];
        if (last_segment === 'editor') {
            return null;
        }
        var keyCode = event.which;
        // console.log(keyCode);
        var positionDelta = 10;
        var rotationDelta = 0.02;
        var xp = this._camera.position.x;
        var yp = this._camera.position.y;
        switch (keyCode) {
            case 65: // A: move left
                this._camera.position.x -= positionDelta;
                break;
            case 68: // D: move right
                this._camera.position.x += positionDelta;
                break;
            case 87: // W: move forward
                this._camera.position.y += positionDelta;
                break;
            case 83: // S: move backward
                this._camera.position.y -= positionDelta;
                break;
            case 90: // Z: move up
                this._camera.position.z += positionDelta;
                break;
            case 88: // X: move down
                this._camera.position.z -= positionDelta;
                break;
            case 81: // Q: rotate clockwise
                this._camera.position.x = xp * Math.cos(rotationDelta) + yp * Math.sin(rotationDelta);
                this._camera.position.y = yp * Math.cos(rotationDelta) - xp * Math.sin(rotationDelta);
                this._camera.lookAt(this._scene.position);
                break;
            case 69: // E: rotate anticlockwise
                this._camera.position.x = xp * Math.cos(rotationDelta) - yp * Math.sin(rotationDelta);
                this._camera.position.y = yp * Math.cos(rotationDelta) + xp * Math.sin(rotationDelta);
                this._camera.lookAt(this._scene.position);
                break;
            case 84: // T
                this._camera.rotation.x += rotationDelta;
                break;
            case 71: // G
                this._camera.rotation.x -= rotationDelta;
                break;
            case 70: // F
                this._camera.rotation.y += rotationDelta;
                break;
            case 72: // H
                this._camera.rotation.y -= rotationDelta;
                break;
            default:
                break;
        }
    };
    return DataThreejs;
}());

/**
 * objType includes point, line, face
 */
var objType;
(function (objType) {
    objType["point"] = "point";
    objType["line"] = "line";
    objType["face"] = "face";
})(objType || (objType = {}));


/***/ }),

/***/ "./src/app/model-viewers/all-viewers/gi-viewer/gi-viewer.component.html":
/*!******************************************************************************!*\
  !*** ./src/app/model-viewers/all-viewers/gi-viewer/gi-viewer.component.html ***!
  \******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div id=\"gi-viewer-container\">\r\n\t<as-split direction=\"vertical\">\r\n\t\t<as-split-area [size]=\"68\" id=\"three-js\">\r\n\t\t\t<threejs-viewer [model]='data' (eventClicked)=\"childEventClicked($event)\"></threejs-viewer>\r\n\t\t</as-split-area>\r\n\t\t<as-split-area [size]='32' id=\"attrib\">\r\n\t\t\t<attribute [data]=\"data\" [refresh]=\"clickedEvent\"></attribute>\r\n\t\t\t<button class='btn' id=\"settings_button\" mat-icon-button (click)=\"openModal('settings_modal')\"><mat-icon>settings</mat-icon></button>\r\n\t\t\t<modal-window id=\"settings_modal\">\r\n\t\t\t\t<h1>Settings</h1>\r\n\t\t\t\t<ul>\r\n\t\t\t\t\t<li [title] = \"!normalsEnabled?'No models available':''\">\r\n\t\t\t\t\t\t<div class=\"label\">Normals</div>\r\n\t\t\t\t\t\t<div class=\"onoffswitch\">\r\n\t\t\t\t\t\t\t<input type=\"checkbox\"\r\n\t\t\t\t\t\t\tname=\"onoffswitch\"\r\n\t\t\t\t\t\t\tclass=\"onoffswitch-checkbox\"\r\n\t\t\t\t\t\t\tid=\"normalsOnOff\"\r\n\t\t\t\t\t\t\t[checked]='settings.normals.show'\r\n\t\t\t\t\t\t\t[disabled] = \"!normalsEnabled\"\r\n\t\t\t\t\t\t\t(change)=\"settingOnChange('normals.show')\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<label class=\"onoffswitch-label\" for=\"normalsOnOff\">\r\n\t\t\t\t\t\t\t\t<span class=\"onoffswitch-inner\"></span>\r\n\t\t\t\t\t\t\t\t<span class=\"onoffswitch-switch\"></span>\r\n\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div class=\"slidecontainer\">\r\n\t\t\t\t\t\t\t<input type=\"range\" min=\"1\" max=\"100\" step=\"1\"\r\n\t\t\t\t\t\t\t[value]=\"settings.normals.size\"\r\n\t\t\t\t\t\t\tclass=\"slider\" id=\"normalSize\"\r\n\t\t\t\t\t\t\t(input)=\"settingOnChange('normals.size', $event.target.value)\"\r\n\t\t\t\t\t\t\t[disabled] = \"!normalsEnabled\">\r\n\t\t\t\t\t\t\t<input type=\"text\" [value]=\"settings.normals.size\" disabled>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t<li>\r\n\t\t\t\t\t\t<div class=\"label\">Axes</div>\r\n\t\t\t\t\t\t<div class=\"onoffswitch\">\r\n\t\t\t\t\t\t\t<input type=\"checkbox\"\r\n\t\t\t\t\t\t\tname=\"onoffswitch\"\r\n\t\t\t\t\t\t\tclass=\"onoffswitch-checkbox\"\r\n\t\t\t\t\t\t\tid=\"axesOnOff\"\r\n\t\t\t\t\t\t\t[checked]=\"settings.axes.show\"\r\n\t\t\t\t\t\t\t(change)=\"settingOnChange('axes.show')\">\r\n\t\t\t\t\t\t\t<label class=\"onoffswitch-label\" for=\"axesOnOff\">\r\n\t\t\t\t\t\t\t\t<span class=\"onoffswitch-inner\"></span>\r\n\t\t\t\t\t\t\t\t<span class=\"onoffswitch-switch\"></span>\r\n\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div class=\"slidecontainer\">\r\n\t\t\t\t\t\t\t<input type=\"range\" min=\"1\" max=\"1000\" step=\"1\" [value]=\"settings.axes.size\" class=\"slider\" id=\"axesSize\" (input)=\"settingOnChange('axes.size', $event.target.value)\">\r\n\t\t\t\t\t\t\t<input type=\"text\" [value]=\"settings.axes.size\" disabled>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t<li>\r\n\t\t\t\t\t\t<div class=\"label\">Grid</div>\r\n\t\t\t\t\t\t<div class=\"onoffswitch\">\r\n\t\t\t\t\t\t\t<input type=\"checkbox\"\r\n\t\t\t\t\t\t\tname=\"onoffswitch\"\r\n\t\t\t\t\t\t\tclass=\"onoffswitch-checkbox\"\r\n\t\t\t\t\t\t\tid=\"gridOnOff\"\r\n\t\t\t\t\t\t\t[checked]='settings.grid.show'\r\n\t\t\t\t\t\t\t(change)=\"settingOnChange('grid.show')\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<label class=\"onoffswitch-label\" for=\"gridOnOff\">\r\n\t\t\t\t\t\t\t\t<span class=\"onoffswitch-inner\"></span>\r\n\t\t\t\t\t\t\t\t<span class=\"onoffswitch-switch\"></span>\r\n\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div class=\"slidecontainer\">\r\n\t\t\t\t\t\t\t<input type=\"range\" min=\"10\" max=\"10000\" step=\"10\" [value]=\"settings.grid.size\" class=\"slider\" id=\"gridSize\" (input)=\"settingOnChange('grid.size', $event.target.value)\">\r\n\t\t\t\t\t\t\t<input type=\"text\" [value]=\"settings.grid.size\" disabled>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t<!-- <li>Shadow On/Off</li>\r\n\t\t\t\t\t<li>Position color/size</li> -->\r\n\t\t\t\t</ul>\r\n\t\t\t\t<button (click)=\"closeModal('settings_modal', true);\" class=\"primary\">Save</button>\r\n\t\t\t\t<button (click)=\"closeModal('settings_modal');\">Close</button>\r\n\t\t\t</modal-window>\r\n\t\t</as-split-area>\r\n\t</as-split>\r\n</div>\r\n"

/***/ }),

/***/ "./src/app/model-viewers/all-viewers/gi-viewer/gi-viewer.component.scss":
/*!******************************************************************************!*\
  !*** ./src/app/model-viewers/all-viewers/gi-viewer/gi-viewer.component.scss ***!
  \******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "#gi-viewer-container {\n  width: 100%;\n  height: 100%;\n  overflow: hidden; }\n\n.mat-tab-group {\n  margin-bottom: 0px; }\n\nas-split-area {\n  position: relative;\n  overflow: hidden auto !important; }\n\n#settings_button {\n  position: absolute;\n  top: 2px;\n  right: 10px;\n  cursor: pointer;\n  z-index: 800;\n  display: inline-block;\n  vertical-align: bottom;\n  background-color: transparent;\n  color: #808080;\n  border: none;\n  outline: none;\n  padding: 0px;\n  width: 40px;\n  height: 40px;\n  transition: 0.3s;\n  font-size: 14px; }\n\n#settings_button:hover {\n    color: #E6E6E6; }\n\n#settings_button.active {\n    color: #00006d; }\n\n#attrib {\n  overflow: hidden !important; }\n\n#attrib attribute {\n    height: calc(100% - 10px);\n    display: flex;\n    flex-flow: column nowrap;\n    justify-content: space-between; }\n\nmodal-window {\n  display: none; }\n\nmodal-window h1 {\n    font-size: 15px;\n    font-weight: 550;\n    line-height: 35px; }\n\nmodal-window ul {\n    margin: 20px 0;\n    padding: 0;\n    background-color: transparent; }\n\nmodal-window ul li {\n      list-style: none;\n      padding: 10px 0;\n      background-color: inherit;\n      height: 15px;\n      font-size: 12px;\n      box-sizing: content-box;\n      color: #373737;\n      font-size: 12px;\n      font-style: normal; }\n\nmodal-window ul li .label {\n        float: left;\n        line-height: 20px;\n        width: 100px; }\n\nmodal-window ul li .label + div {\n        float: left; }\n\nmodal-window ul li .label, modal-window ul li input {\n        color: #373737;\n        font-size: 12px;\n        font-style: normal; }\n\nmodal-window ul li .label:hover, modal-window ul li input:hover {\n          background-color: inherit; }\n\nmodal-window button {\n    background: white;\n    border: 1px solid #CCCCCC;\n    padding: 3px 10px;\n    cursor: pointer;\n    margin-right: 10px;\n    width: 75px;\n    font-size: 12px; }\n\nmodal-window button.primary {\n      background: #00006d;\n      border-color: #00006d;\n      color: white; }\n\nmodal-window button.primary:hover {\n        background: rgba(0, 0, 109, 0.75); }\n\nmodal-window button:focus {\n      outline: none; }\n\nbody.modal-open {\n  overflow: hidden; }\n\n#settings_modal {\n  /* The slider itself */\n  /* Mouse-over effects */\n  /* The slider handle (use -webkit- (Chrome, Opera, Safari, Edge) and -moz- (Firefox) to override default look) */ }\n\n#settings_modal .onoffswitch {\n    position: relative;\n    width: 60px;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    -ms-user-select: none; }\n\n#settings_modal .onoffswitch-checkbox {\n    display: none; }\n\n#settings_modal .onoffswitch-label {\n    display: block;\n    overflow: hidden;\n    cursor: pointer;\n    border: 1px solid #CCCCCC;\n    border-radius: 0px; }\n\n#settings_modal .onoffswitch-inner {\n    display: block;\n    width: 200%;\n    margin-left: -100%;\n    transition: margin 0.1s ease-in 0s; }\n\n#settings_modal .onoffswitch-inner:before, #settings_modal .onoffswitch-inner:after {\n    display: block;\n    float: left;\n    width: 50%;\n    height: 20px;\n    padding: 0;\n    line-height: 20px;\n    font-size: 12px;\n    color: white;\n    font-family: Trebuchet, Arial, sans-serif;\n    font-weight: bold;\n    box-sizing: border-box; }\n\n#settings_modal .onoffswitch-inner:before {\n    content: \"ON\";\n    padding-left: 5px;\n    background-color: white;\n    color: #808080; }\n\n#settings_modal .onoffswitch-inner:after {\n    content: \"OFF\";\n    padding-right: 5px;\n    background-color: white;\n    color: #B3B3B3;\n    text-align: right; }\n\n#settings_modal .onoffswitch-switch {\n    display: block;\n    width: 20px;\n    margin: 0px;\n    background: #CCCCCC;\n    position: absolute;\n    top: 0;\n    bottom: 0;\n    right: 35px;\n    border: 2px solid transparent;\n    border-radius: 0px;\n    transition: all 0.1s ease-in 0s; }\n\n#settings_modal .onoffswitch-checkbox:checked + .onoffswitch-label .onoffswitch-inner {\n    margin-left: 0; }\n\n#settings_modal .onoffswitch-checkbox:checked + .onoffswitch-label .onoffswitch-switch {\n    right: 0px;\n    background-color: #00006d; }\n\n#settings_modal .onoffswitch-checkbox:disabled:checked + .onoffswitch-label .onoffswitch-switch {\n    background-color: white; }\n\n#settings_modal .onoffswitch-checkbox:disabled:checked + .onoffswitch-label .onoffswitch-inner,\n  #settings_modal .onoffswitch-checkbox:disabled:checked + .onoffswitch-label .onoffswitch-switch {\n    cursor: help; }\n\n#settings_modal .slidecontainer {\n    width: 100%;\n    /* Width of the outside container */ }\n\n#settings_modal .slidecontainer:hover {\n      background-color: transparent; }\n\n#settings_modal .slider {\n    -webkit-appearance: none;\n    /* Override default CSS styles */\n    -moz-appearance: none;\n         appearance: none;\n    width: calc(100% - 230px);\n    max-width: 500px;\n    height: 22px;\n    /* Specified height */\n    background: #d3d3d3;\n    /* Grey background */\n    outline: none;\n    /* Remove outline */\n    opacity: 0.7;\n    /* Set transparency (for mouse-over effects on hover) */\n    /* 0.2 seconds transition on hover */\n    transition: opacity .2s;\n    margin: 0; }\n\n#settings_modal .slider:hover {\n    opacity: 1;\n    /* Fully shown on mouse-over */ }\n\n#settings_modal .slider::-webkit-slider-thumb {\n    -webkit-appearance: none;\n    appearance: none;\n    width: 12px;\n    height: 26px;\n    background: #00006d;\n    cursor: pointer; }\n\n#settings_modal .slider::-moz-range-thumb {\n    width: 12px;\n    height: 26px;\n    background: #00006d;\n    cursor: pointer; }\n\n#settings_modal .slider:disabled::-webkit-slider-thumb {\n    background: white; }\n\n#settings_modal .slider:disabled::-moz-range-thumb {\n    background: white; }\n\n#settings_modal .slider:disabled {\n    cursor: help; }\n\n#settings_modal input {\n    margin-left: 10px !important; }\n\n#settings_modal input + input {\n    vertical-align: top;\n    border: none;\n    line-height: 20px;\n    background: transparent;\n    width: 50px; }\n\n/*# sourceMappingURL=data:application/json;base64, */"

/***/ }),

/***/ "./src/app/model-viewers/all-viewers/gi-viewer/gi-viewer.component.ts":
/*!****************************************************************************!*\
  !*** ./src/app/model-viewers/all-viewers/gi-viewer/gi-viewer.component.ts ***!
  \****************************************************************************/
/*! exports provided: GIViewerComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GIViewerComponent", function() { return GIViewerComponent; });
/* harmony import */ var _libs_geo_info_GIModel__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @libs/geo-info/GIModel */ "./src/libs/geo-info/GIModel.ts");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _data_data_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./data/data.service */ "./src/app/model-viewers/all-viewers/gi-viewer/data/data.service.ts");
/* harmony import */ var _html_modal_window_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./html/modal-window.service */ "./src/app/model-viewers/all-viewers/gi-viewer/html/modal-window.service.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};

// import @angular stuff

// import app services


// import others
// import { ThreejsViewerComponent } from './threejs/threejs-viewer.component';
/**
 * GIViewerComponent
 * This component is used in /app/model-viewers/model-viewers-container.component.html
 */
var GIViewerComponent = /** @class */ (function () {
    /**
     * constructor
     * @param dataService
     */
    function GIViewerComponent(dataService, modalService) {
        this.dataService = dataService;
        this.modalService = modalService;
        this.settings = {
            normals: { show: false, size: 5 },
            axes: { show: false, size: 20 },
            grid: { show: true, size: 500 },
        };
        this.normalsEnabled = false;
        //
        if (localStorage.getItem('mpm_settings') === null) {
            localStorage.setItem('mpm_settings', JSON.stringify(this.settings));
        }
    }
    /**
     * ngOnInit
     */
    GIViewerComponent.prototype.ngOnInit = function () {
        this.getSettings();
        if (this.dataService.getThreejsScene() === undefined) {
            this.dataService.setThreejsScene(this.settings);
        }
    };
    GIViewerComponent.prototype.getSettings = function () {
        if (localStorage.getItem('mpm_settings') != null) {
            this.settings = JSON.parse(localStorage.getItem('mpm_settings'));
        }
    };
    GIViewerComponent.prototype.childEventClicked = function (event) {
        this.clickedEvent = event;
    };
    GIViewerComponent.prototype.openModal = function (id) {
        this.getSettings();
        if (document.body.className === 'modal-open') {
            this.modalService.close(id);
        }
        else {
            this.modalService.open(id);
            var scene = this.dataService.getThreejsScene();
            if (scene._threejs_nums.reduce(function (a, b) { return a + b; }, 0) !== 0) {
                scene.vnh !== undefined ? this.normalsEnabled = true : this.normalsEnabled = false;
            }
        }
    };
    GIViewerComponent.prototype.closeModal = function (id, save) {
        if (save === void 0) { save = false; }
        this.modalService.close(id);
        if (save) {
            this.dataService.getThreejsScene().settings = this.settings;
            localStorage.setItem('mpm_settings', JSON.stringify(this.settings));
            document.getElementById('executeButton').click();
        }
    };
    GIViewerComponent.prototype.settingOnChange = function (setting, value) {
        var scene = this.dataService.getThreejsScene();
        switch (setting) {
            case 'normals.show':
                this.settings.normals.show = !this.settings.normals.show;
                scene.vnh.visible = this.settings.normals.show;
                break;
            case 'normals.size':
                this.settings.normals.size = Number(value);
                break;
            case 'axes.show':
                this.settings.axes.show = !this.settings.axes.show;
                scene.axesHelper.visible = this.settings.axes.show;
                break;
            case 'axes.size':
                this.settings.axes.size = Number(value);
                scene._addAxes(Number(value));
                break;
            case 'grid.show':
                this.settings.grid.show = !this.settings.grid.show;
                scene.grid.visible = this.settings.grid.show;
                break;
            case 'grid.size':
                this.settings.grid.size = Number(value);
                scene._addGrid(this.settings.grid.size);
                break;
            default:
                break;
        }
        scene._renderer.render(scene._scene, scene._camera);
    };
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        __metadata("design:type", _libs_geo_info_GIModel__WEBPACK_IMPORTED_MODULE_0__["GIModel"])
    ], GIViewerComponent.prototype, "data", void 0);
    GIViewerComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'gi-viewer',
            template: __webpack_require__(/*! ./gi-viewer.component.html */ "./src/app/model-viewers/all-viewers/gi-viewer/gi-viewer.component.html"),
            styles: [__webpack_require__(/*! ./gi-viewer.component.scss */ "./src/app/model-viewers/all-viewers/gi-viewer/gi-viewer.component.scss")]
        }),
        __metadata("design:paramtypes", [_data_data_service__WEBPACK_IMPORTED_MODULE_2__["DataService"], _html_modal_window_service__WEBPACK_IMPORTED_MODULE_3__["ModalService"]])
    ], GIViewerComponent);
    return GIViewerComponent;
}());



/***/ }),

/***/ "./src/app/model-viewers/all-viewers/gi-viewer/gi-viewer.module.ts":
/*!*************************************************************************!*\
  !*** ./src/app/model-viewers/all-viewers/gi-viewer/gi-viewer.module.ts ***!
  \*************************************************************************/
/*! exports provided: GIViewerModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GIViewerModule", function() { return GIViewerModule; });
/* harmony import */ var angular_split__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! angular-split */ "./node_modules/angular-split/fesm5/angular-split.js");
/* harmony import */ var ngx_pagination__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ngx-pagination */ "./node_modules/ngx-pagination/dist/ngx-pagination.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_material_slider__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/material/slider */ "./node_modules/@angular/material/esm5/slider.es5.js");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/fesm5/common.js");
/* harmony import */ var _angular_material_tooltip__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/material/tooltip */ "./node_modules/@angular/material/esm5/tooltip.es5.js");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/material */ "./node_modules/@angular/material/esm5/material.es5.js");
/* harmony import */ var _angular_material_expansion__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/material/expansion */ "./node_modules/@angular/material/esm5/expansion.es5.js");
/* harmony import */ var _attribute_attribute_module__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./attribute/attribute.module */ "./src/app/model-viewers/all-viewers/gi-viewer/attribute/attribute.module.ts");
/* harmony import */ var _gi_viewer_component__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./gi-viewer.component */ "./src/app/model-viewers/all-viewers/gi-viewer/gi-viewer.component.ts");
/* harmony import */ var _threejs_threejs_viewer_component__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./threejs/threejs-viewer.component */ "./src/app/model-viewers/all-viewers/gi-viewer/threejs/threejs-viewer.component.ts");
/* harmony import */ var _attribute_attribute_component__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./attribute/attribute.component */ "./src/app/model-viewers/all-viewers/gi-viewer/attribute/attribute.component.ts");
/* harmony import */ var _attribute_tab_component__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./attribute/tab.component */ "./src/app/model-viewers/all-viewers/gi-viewer/attribute/tab.component.ts");
/* harmony import */ var _attribute_tabs_component__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./attribute/tabs.component */ "./src/app/model-viewers/all-viewers/gi-viewer/attribute/tabs.component.ts");
/* harmony import */ var _html_dropdown_menu_component__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./html/dropdown-menu.component */ "./src/app/model-viewers/all-viewers/gi-viewer/html/dropdown-menu.component.ts");
/* harmony import */ var _html_modal_window_component__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./html/modal-window.component */ "./src/app/model-viewers/all-viewers/gi-viewer/html/modal-window.component.ts");
/* harmony import */ var _html_modal_window_service__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./html/modal-window.service */ "./src/app/model-viewers/all-viewers/gi-viewer/html/modal-window.service.ts");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm5/forms.js");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};


// import @angular stuff







// import app components









/**
 * GIViewer
 * A viewer for Geo-Info models.
 */
var GIViewerModule = /** @class */ (function () {
    function GIViewerModule() {
    }
    GIViewerModule_1 = GIViewerModule;
    GIViewerModule.forRoot = function () {
        return {
            ngModule: GIViewerModule_1
        };
    };
    var GIViewerModule_1;
    GIViewerModule = GIViewerModule_1 = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_2__["NgModule"])({
            declarations: [
                _gi_viewer_component__WEBPACK_IMPORTED_MODULE_9__["GIViewerComponent"],
                _threejs_threejs_viewer_component__WEBPACK_IMPORTED_MODULE_10__["ThreejsViewerComponent"],
                _attribute_attribute_component__WEBPACK_IMPORTED_MODULE_11__["AttributeComponent"],
                _attribute_tab_component__WEBPACK_IMPORTED_MODULE_12__["TabComponent"],
                _attribute_tabs_component__WEBPACK_IMPORTED_MODULE_13__["TabsComponent"],
                _html_dropdown_menu_component__WEBPACK_IMPORTED_MODULE_14__["DropdownMenuComponent"],
                _html_modal_window_component__WEBPACK_IMPORTED_MODULE_15__["ModalWindowComponent"]
            ],
            exports: [
                _gi_viewer_component__WEBPACK_IMPORTED_MODULE_9__["GIViewerComponent"]
            ],
            imports: [
                _angular_common__WEBPACK_IMPORTED_MODULE_4__["CommonModule"],
                angular_split__WEBPACK_IMPORTED_MODULE_0__["AngularSplitModule"],
                _angular_material_slider__WEBPACK_IMPORTED_MODULE_3__["MatSliderModule"],
                _angular_material__WEBPACK_IMPORTED_MODULE_6__["MatIconModule"],
                ngx_pagination__WEBPACK_IMPORTED_MODULE_1__["NgxPaginationModule"],
                _angular_material_expansion__WEBPACK_IMPORTED_MODULE_7__["MatExpansionModule"],
                _angular_material_tooltip__WEBPACK_IMPORTED_MODULE_5__["MatTooltipModule"],
                _attribute_attribute_module__WEBPACK_IMPORTED_MODULE_8__["AttributeModule"],
                _angular_forms__WEBPACK_IMPORTED_MODULE_17__["FormsModule"]
            ],
            providers: [
                _html_modal_window_service__WEBPACK_IMPORTED_MODULE_16__["ModalService"]
            ]
        })
    ], GIViewerModule);
    return GIViewerModule;
}());



/***/ }),

/***/ "./src/app/model-viewers/all-viewers/gi-viewer/html/dropdown-menu.component.html":
/*!***************************************************************************************!*\
  !*** ./src/app/model-viewers/all-viewers/gi-viewer/html/dropdown-menu.component.html ***!
  \***************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div\r\n    [hidden]=\"!visible\"\r\n    [style.left.px]='position.x'\r\n    [style.top.px]='position.y'\r\n>\r\n    <ul>\r\n        <ol>Please choose:</ol>\r\n        <ol *ngFor=\"let item of items\" (click)=\"selectItem(item)\">{{item.label}}</ol>\r\n    </ul>\r\n</div>\r\n"

/***/ }),

/***/ "./src/app/model-viewers/all-viewers/gi-viewer/html/dropdown-menu.component.scss":
/*!***************************************************************************************!*\
  !*** ./src/app/model-viewers/all-viewers/gi-viewer/html/dropdown-menu.component.scss ***!
  \***************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "div {\n  position: absolute; }\n  div ul {\n    padding: 0; }\n  div ul ol {\n      cursor: pointer;\n      list-style: none;\n      background: #ffffff;\n      min-width: 20px;\n      padding: 5px 10px; }\n  div ul ol:hover {\n        background: #eeeeee; }\n\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kZWwtdmlld2Vycy9hbGwtdmlld2Vycy9naS12aWV3ZXIvaHRtbC9DOlxcVXNlcnNcXGFraWJkcHRcXERvY3VtZW50c1xcQW5ndWxhclxcbW9iaXVzLXBhcmFtZXRyaWMtbW9kZWxsZXIvc3JjXFxhcHBcXG1vZGVsLXZpZXdlcnNcXGFsbC12aWV3ZXJzXFxnaS12aWV3ZXJcXGh0bWxcXGRyb3Bkb3duLW1lbnUuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxtQkFBa0IsRUFjckI7RUFmRDtJQUdRLFdBQVUsRUFXYjtFQWRMO01BS1ksZ0JBQWU7TUFDZixpQkFBZ0I7TUFDaEIsb0JBQW1CO01BQ25CLGdCQUFlO01BQ2Ysa0JBQWlCLEVBSXBCO0VBYlQ7UUFXZ0Isb0JBQW1CLEVBQ3RCIiwiZmlsZSI6InNyYy9hcHAvbW9kZWwtdmlld2Vycy9hbGwtdmlld2Vycy9naS12aWV3ZXIvaHRtbC9kcm9wZG93bi1tZW51LmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiZGl2e1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgdWx7XHJcbiAgICAgICAgcGFkZGluZzogMDtcclxuICAgICAgICBvbHtcclxuICAgICAgICAgICAgY3Vyc29yOiBwb2ludGVyO1xyXG4gICAgICAgICAgICBsaXN0LXN0eWxlOiBub25lO1xyXG4gICAgICAgICAgICBiYWNrZ3JvdW5kOiAjZmZmZmZmO1xyXG4gICAgICAgICAgICBtaW4td2lkdGg6IDIwcHg7XHJcbiAgICAgICAgICAgIHBhZGRpbmc6IDVweCAxMHB4O1xyXG4gICAgICAgICAgICAmOmhvdmVye1xyXG4gICAgICAgICAgICAgICAgYmFja2dyb3VuZDogI2VlZWVlZTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxufSJdfQ== */"

/***/ }),

/***/ "./src/app/model-viewers/all-viewers/gi-viewer/html/dropdown-menu.component.ts":
/*!*************************************************************************************!*\
  !*** ./src/app/model-viewers/all-viewers/gi-viewer/html/dropdown-menu.component.ts ***!
  \*************************************************************************************/
/*! exports provided: DropdownMenuComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DropdownMenuComponent", function() { return DropdownMenuComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};

var DropdownMenuComponent = /** @class */ (function () {
    function DropdownMenuComponent() {
        this.selected = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
    }
    DropdownMenuComponent.prototype.setItems = function (items, label) {
        var dropdownMenu = [];
        items.map(function (item) { return dropdownMenu.push({ id: item, label: "" + label + item }); });
        console.log('dropdownMenu', dropdownMenu);
        this.items = dropdownMenu;
    };
    DropdownMenuComponent.prototype.selectItem = function (item) {
        this.visible = false;
        this.selected.emit(item.id);
    };
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])(),
        __metadata("design:type", Object)
    ], DropdownMenuComponent.prototype, "selected", void 0);
    DropdownMenuComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'dropdown-menu',
            template: __webpack_require__(/*! ./dropdown-menu.component.html */ "./src/app/model-viewers/all-viewers/gi-viewer/html/dropdown-menu.component.html"),
            styles: [__webpack_require__(/*! ./dropdown-menu.component.scss */ "./src/app/model-viewers/all-viewers/gi-viewer/html/dropdown-menu.component.scss")]
        })
    ], DropdownMenuComponent);
    return DropdownMenuComponent;
}());



/***/ }),

/***/ "./src/app/model-viewers/all-viewers/gi-viewer/html/modal-window.component.html":
/*!**************************************************************************************!*\
  !*** ./src/app/model-viewers/all-viewers/gi-viewer/html/modal-window.component.html ***!
  \**************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"modal-window\" id=\"modal-window\">\r\n    <div class=\"modal-body\">\r\n        <ng-content></ng-content>\r\n    </div>\r\n</div>\r\n<div class=\"modal-background\"></div>"

/***/ }),

/***/ "./src/app/model-viewers/all-viewers/gi-viewer/html/modal-window.component.scss":
/*!**************************************************************************************!*\
  !*** ./src/app/model-viewers/all-viewers/gi-viewer/html/modal-window.component.scss ***!
  \**************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "@charset \"UTF-8\";\n.modal-window {\n  max-width: 777px;\n  position: absolute;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  z-index: 1000;\n  overflow: auto;\n  -webkit-transition: transform 1s ease; }\n.modal-window.open {\n    -webkit-animation: slide 0.5s forwards;\n    animation: slide 0.5s forwards; }\n.modal-window     .modal-body {\n    padding: 20px;\n    background: #fff;\n    margin: 0;\n    height: calc(100% - 40px);\n    position: relative; }\n@-webkit-keyframes slide {\n  100% {\n    left: 0; } }\n@keyframes slide {\n  100% {\n    left: 0; } }\n.modal-background {\n  position: fixed;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  background-color: transparent;\n  opacity: 0.5;\n  z-index: 900; }\n\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kZWwtdmlld2Vycy9hbGwtdmlld2Vycy9naS12aWV3ZXIvaHRtbC9tb2RhbC13aW5kb3cuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL21vZGVsLXZpZXdlcnMvYWxsLXZpZXdlcnMvZ2ktdmlld2VyL2h0bWwvQzpcXFVzZXJzXFxha2liZHB0XFxEb2N1bWVudHNcXEFuZ3VsYXJcXG1vYml1cy1wYXJhbWV0cmljLW1vZGVsbGVyL3NyY1xcYXBwXFxtb2RlbC12aWV3ZXJzXFxhbGwtdmlld2Vyc1xcZ2ktdmlld2VyXFxodG1sXFxtb2RhbC13aW5kb3cuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsaUJBQWlCO0FDQWpCO0VBQ0ksaUJBQWdCO0VBQ2hCLG1CQUFrQjtFQUNsQixPQUFNO0VBQ04sU0FBUTtFQUNSLFVBQVM7RUFFVCxjQUFhO0VBQ2IsZUFBYztFQUNkLHNDQUFxQyxFQWdCeEM7QUF6QkQ7SUFXUSx1Q0FBc0M7SUFDdEMsK0JBQThCLEVBQ2pDO0FBYkw7SUFnQlEsY0FBYTtJQUNiLGlCQUFnQjtJQUNoQixVQUFTO0lBQ1QsMEJBQXlCO0lBSXpCLG1CQUFrQixFQUNyQjtBQUlMO0VBQ0k7SUFBTyxRQUFPLEVBQUEsRUFBQTtBQUdsQjtFQUNJO0lBQU8sUUFBTyxFQUFBLEVBQUE7QUFHbEI7RUFDSSxnQkFBZTtFQUNmLE9BQU07RUFDTixTQUFRO0VBQ1IsVUFBUztFQUNULFFBQU87RUFDUCw4QkFBNkI7RUFDN0IsYUFBWTtFQUNaLGFBQVksRUFDZiIsImZpbGUiOiJzcmMvYXBwL21vZGVsLXZpZXdlcnMvYWxsLXZpZXdlcnMvZ2ktdmlld2VyL2h0bWwvbW9kYWwtd2luZG93LmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiQGNoYXJzZXQgXCJVVEYtOFwiO1xuLm1vZGFsLXdpbmRvdyB7XG4gIG1heC13aWR0aDogNzc3cHg7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiAwO1xuICByaWdodDogMDtcbiAgYm90dG9tOiAwO1xuICB6LWluZGV4OiAxMDAwO1xuICBvdmVyZmxvdzogYXV0bztcbiAgLXdlYmtpdC10cmFuc2l0aW9uOiB0cmFuc2Zvcm0gMXMgZWFzZTsgfVxuICAubW9kYWwtd2luZG93Lm9wZW4ge1xuICAgIC13ZWJraXQtYW5pbWF0aW9uOiBzbGlkZSAwLjVzIGZvcndhcmRzO1xuICAgIGFuaW1hdGlvbjogc2xpZGUgMC41cyBmb3J3YXJkczsgfVxuICAubW9kYWwtd2luZG93IMKgwqDCoMKgLm1vZGFsLWJvZHkge1xuICAgIHBhZGRpbmc6IDIwcHg7XG4gICAgYmFja2dyb3VuZDogI2ZmZjtcbiAgICBtYXJnaW46IDA7XG4gICAgaGVpZ2h0OiBjYWxjKDEwMCUgLSA0MHB4KTtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7IH1cblxuQC13ZWJraXQta2V5ZnJhbWVzIHNsaWRlIHtcbiAgMTAwJSB7XG4gICAgbGVmdDogMDsgfSB9XG5cbkBrZXlmcmFtZXMgc2xpZGUge1xuICAxMDAlIHtcbiAgICBsZWZ0OiAwOyB9IH1cblxuLm1vZGFsLWJhY2tncm91bmQge1xuICBwb3NpdGlvbjogZml4ZWQ7XG4gIHRvcDogMDtcbiAgcmlnaHQ6IDA7XG4gIGJvdHRvbTogMDtcbiAgbGVmdDogMDtcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gIG9wYWNpdHk6IDAuNTtcbiAgei1pbmRleDogOTAwOyB9XG4iLCIubW9kYWwtd2luZG93IHtcclxuICAgIG1heC13aWR0aDogNzc3cHg7XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICB0b3A6IDA7XHJcbiAgICByaWdodDogMDtcclxuICAgIGJvdHRvbTogMDtcclxuICAgIC8vIGxlZnQ6IDA7XHJcbiAgICB6LWluZGV4OiAxMDAwO1xyXG4gICAgb3ZlcmZsb3c6IGF1dG87XHJcbiAgICAtd2Via2l0LXRyYW5zaXRpb246IHRyYW5zZm9ybSAxcyBlYXNlO1xyXG4gICAgJi5vcGVue1xyXG4gICAgICAgIC13ZWJraXQtYW5pbWF0aW9uOiBzbGlkZSAwLjVzIGZvcndhcmRzO1xyXG4gICAgICAgIGFuaW1hdGlvbjogc2xpZGUgMC41cyBmb3J3YXJkcztcclxuICAgIH1cclxuXHJcbsKgwqDCoMKgLm1vZGFsLWJvZHkge1xyXG4gICAgICAgIHBhZGRpbmc6IDIwcHg7XHJcbiAgICAgICAgYmFja2dyb3VuZDogI2ZmZjtcclxuICAgICAgICBtYXJnaW46IDA7XHJcbiAgICAgICAgaGVpZ2h0OiBjYWxjKDEwMCUgLSA0MHB4KTtcclxuICAgICAgICAvLyB3aWR0aDogNTAlO1xyXG4gICAgICAgIC8vIG1hcmdpbi1sZWZ0OiA1MCU7XHJcbiAgICAgICAgLy8gbGVmdDogLTI1JTtcclxuICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICB9XHJcbn1cclxuXHJcblxyXG5ALXdlYmtpdC1rZXlmcmFtZXMgc2xpZGUge1xyXG4gICAgMTAwJSB7IGxlZnQ6IDA7IH1cclxufVxyXG5cclxuQGtleWZyYW1lcyBzbGlkZSB7XHJcbiAgICAxMDAlIHsgbGVmdDogMDsgfVxyXG59XHJcblxyXG4ubW9kYWwtYmFja2dyb3VuZCB7XHJcbiAgICBwb3NpdGlvbjogZml4ZWQ7XHJcbiAgICB0b3A6IDA7XHJcbiAgICByaWdodDogMDtcclxuICAgIGJvdHRvbTogMDtcclxuICAgIGxlZnQ6IDA7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcclxuICAgIG9wYWNpdHk6IDAuNTtcclxuICAgIHotaW5kZXg6IDkwMDtcclxufSJdfQ== */"

/***/ }),

/***/ "./src/app/model-viewers/all-viewers/gi-viewer/html/modal-window.component.ts":
/*!************************************************************************************!*\
  !*** ./src/app/model-viewers/all-viewers/gi-viewer/html/modal-window.component.ts ***!
  \************************************************************************************/
/*! exports provided: ModalWindowComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ModalWindowComponent", function() { return ModalWindowComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _modal_window_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./modal-window.service */ "./src/app/model-viewers/all-viewers/gi-viewer/html/modal-window.service.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};


var ModalWindowComponent = /** @class */ (function () {
    function ModalWindowComponent(modalService, el) {
        this.modalService = modalService;
        this.el = el;
        this.element = el.nativeElement;
    }
    ModalWindowComponent.prototype.ngOnInit = function () {
        var modal = this;
        // ensure id attribute exists
        if (!this.id) {
            console.error('modal must have an id');
            return;
        }
        var leftContent = document.getElementsByClassName('content__panel')[0];
        this.containerWidth = leftContent.clientWidth;
        var modalWindow = this.element.querySelector('.modal-window');
        modalWindow.style.width = this.containerWidth + 11 + "px";
        modalWindow.style.left = -this.containerWidth - 11 + "px";
        // move element to bottom of page (just before </body>) so it can be displayed above everything else
        document.body.appendChild(this.element);
        // close modal on background click
        this.element.addEventListener('click', function (e) {
            if (e.target.className === 'modal-background') {
                modal.close();
            }
        });
        // add self (this modal instance) to the modal service so it's accessible from controllers
        this.modalService.add(this);
    };
    // remove self from modal service when directive is destroyed
    ModalWindowComponent.prototype.ngOnDestroy = function () {
        this.modalService.remove(this.id);
        this.element.remove();
    };
    // open modal
    ModalWindowComponent.prototype.open = function () {
        var modalWindow = document.getElementById('modal-window');
        // modalWindow.style.left = 0;
        modalWindow.classList.add('open');
        this.element.style.display = 'block';
        document.body.classList.add('modal-open');
    };
    // close modal
    ModalWindowComponent.prototype.close = function () {
        this.element.style.display = 'none';
        var modalWindow = this.element.querySelector('.modal-window');
        // modalWindow.style.left = `${-this.containerWidth - 11}px`;
        modalWindow.classList.remove('open');
        document.body.classList.remove('modal-open');
    };
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", String)
    ], ModalWindowComponent.prototype, "id", void 0);
    ModalWindowComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'modal-window',
            template: __webpack_require__(/*! ./modal-window.component.html */ "./src/app/model-viewers/all-viewers/gi-viewer/html/modal-window.component.html"),
            styles: [__webpack_require__(/*! ./modal-window.component.scss */ "./src/app/model-viewers/all-viewers/gi-viewer/html/modal-window.component.scss")]
        }),
        __metadata("design:paramtypes", [_modal_window_service__WEBPACK_IMPORTED_MODULE_1__["ModalService"], _angular_core__WEBPACK_IMPORTED_MODULE_0__["ElementRef"]])
    ], ModalWindowComponent);
    return ModalWindowComponent;
}());



/***/ }),

/***/ "./src/app/model-viewers/all-viewers/gi-viewer/html/modal-window.service.ts":
/*!**********************************************************************************!*\
  !*** ./src/app/model-viewers/all-viewers/gi-viewer/html/modal-window.service.ts ***!
  \**********************************************************************************/
/*! exports provided: ModalService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ModalService", function() { return ModalService; });
var ModalService = /** @class */ (function () {
    function ModalService() {
        this.modals = [];
    }
    ModalService.prototype.add = function (modal) {
        // add modal to array of active modals
        this.modals.push(modal);
    };
    ModalService.prototype.remove = function (id) {
        // remove modal from array of active modals
        this.modals = this.modals.filter(function (x) { return x.id !== id; });
    };
    ModalService.prototype.open = function (id) {
        var modal = this.modals.filter(function (x) { return x.id === id; })[0];
        modal.open();
    };
    ModalService.prototype.close = function (id) {
        // close modal specified by id
        var modal = this.modals.filter(function (x) { return x.id === id; })[0];
        modal.close();
    };
    return ModalService;
}());



/***/ }),

/***/ "./src/app/model-viewers/all-viewers/gi-viewer/threejs/threejs-viewer.component.html":
/*!*******************************************************************************************!*\
  !*** ./src/app/model-viewers/all-viewers/gi-viewer/threejs/threejs-viewer.component.html ***!
  \*******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div\r\n    id=\"threejs-container\"\r\n    (window:keydown)=\"onKeyDown($event)\"\r\n    (window:keyup)=\"onKeyUp($event)\"\r\n    (window:mousedown)=\"onMouseDown($event)\"\r\n    (window:mousemove)=\"onMouseMove($event)\"\r\n    (window:mouseup)=\"onMouseUp($event)\"\r\n>\r\n    <div\r\n        *ngIf=\"_model_error\"\r\n        style=\"position:absolute;color:red;margin-top: 50px;left:40%;text-align: center;font-family:sans-serif;font-size: 14px;background-color: white;\"\r\n    >\r\n        Error displaying model:{{text}}\r\n    </div>\r\n    <div\r\n        *ngIf=\"_no_model\"\r\n        style=\"position:absolute;color:red;margin-top: 50px;left:40%;text-align: center;font-family:sans-serif;font-size: 14px;background-color: white;\"\r\n    >\r\n        Model or Scene not defined.\r\n    </div>\r\n    <div\r\n        *ngIf=\"messageVisible\"\r\n        style=\"position:absolute;color:orange;margin-top: 50px;left:40%;padding:10px;text-align: center;font-family:sans-serif;font-size: 14px;background-color: white;\"\r\n    >\r\n        {{message}}\r\n    </div>\r\n\r\n\r\n    <!-- <button id=\"zoomingfit\"  \r\n        [class.visible]=\"Visible === 'zoomfit'\" \r\n        (click)=\"zoomfit()\">\r\n        <span matTooltip=\"zoom to fit\"><i class=\"fa fa-arrows-alt\"></i></span>\r\n    </button> -->\r\n    <button\r\n        id=\"zoomingfit\"\r\n        mat-icon-button\r\n        [class.visible]=\"Visible === 'zoomfit'\"\r\n        (click)=\"zoomfit()\"\r\n    >\r\n        <mat-icon svgIcon=\"cZoom\"></mat-icon>\r\n    </button>\r\n\r\n\r\n    <!-- <button id=\"selecting\" [class.visible]=\"Visible === 'select'\" (click)= \"select($event, Visible)\" ><i class=\"fa fa-mouse-pointer\"></i></button> -->\r\n    <!-- <button id=\"setting\" [class.selected]=\"settingVisible\" (click)= \"setting(settingVisible)\"><i class=\"fa fa-cog\"></i></button> -->\r\n    <!-- <button id=\"selecting\" [class.selected]=\"seVisible\" (click)= \"select(seVisible)\" ><span matTooltip=\"select\"><i class=\"fa fa-mouse-pointer\"></i></span></button> -->\r\n    <button\r\n        id=\"EntitySelection\"\r\n        mat-icon-button\r\n        (click)=\"selectDropdownVisible = !selectDropdownVisible; needSelect=false\"\r\n    >\r\n        <mat-icon>near_me</mat-icon>\r\n        <div\r\n            [hidden]=\"needSelect?(!needSelect&&selectDropdownVisible):!needSelect\"\r\n            class=\"needSelect\"\r\n        ></div>\r\n    </button>\r\n    <span\r\n        *ngIf=\"!selectDropdownVisible\"\r\n        id=\"SelectingEntityType\"\r\n        matTooltip=\"Selecting {{SelectingEntityType.name}}\"\r\n    >\r\n        {{SelectingEntityType.id}}\r\n    </span>\r\n    <div\r\n        id=\"selectDropdown\"\r\n        *ngIf=\"selectDropdownVisible == true\"\r\n    >\r\n        <button\r\n            *ngFor=\"let selection of selections\"\r\n            (click)=\"selectEntityType(selection); needSelect=false\"\r\n            [class.active]=\"SelectingEntityType.id === selection.id\"\r\n        >\r\n            <span matTooltip=\"Select {{selection.name}}\">{{selection.id}}</span>\r\n        </button>\r\n    </div>\r\n\r\n\r\n    <div id=\"shownumber\">\r\n        <tbody>\r\n            <tr>\r\n                <td\r\n                    align=left\r\n                    style=\"width: 60px;\"\r\n                >\r\n                    Triangles&nbsp;&nbsp;\r\n                </td>\r\n                <td\r\n                    align=left\r\n                    style=\"width: 10px;\"\r\n                >\r\n                    {{_threejs_nums[2]}}\r\n                </td>\r\n            </tr>\r\n            <tr>\r\n                <td\r\n                    align=left\r\n                    style=\"width: 60px;\"\r\n                >\r\n                    Lines\r\n                </td>\r\n                <td\r\n                    align=left\r\n                    style=\"width: 10px;\"\r\n                >\r\n                    {{_threejs_nums[1]}}\r\n                </td>\r\n            </tr>\r\n            <tr>\r\n                <td\r\n                    align=left\r\n                    style=\"width: 60px;\"\r\n                >\r\n                    Points&nbsp;&nbsp;\r\n                </td>\r\n                <td\r\n                    align=left\r\n                    style=\"width: 10px;\"\r\n                >\r\n                    {{_threejs_nums[0]}}\r\n                </td>\r\n            </tr>\r\n        </tbody>\r\n    </div>\r\n\r\n\r\n    <dropdown-menu (selected)='selectEntity($event)'></dropdown-menu>\r\n    <!-- <button id=\"imagery\"  \r\n        [class.selected]=\"imVisible\" (click)=\"leaflet()\">I\r\n        </button> -->\r\n    <!-- setting -->\r\n\r\n\r\n    <!-- <app-setting *ngIf=\"settingVisible == true\"></app-setting> -->\r\n</div>\r\n"

/***/ }),

/***/ "./src/app/model-viewers/all-viewers/gi-viewer/threejs/threejs-viewer.component.scss":
/*!*******************************************************************************************!*\
  !*** ./src/app/model-viewers/all-viewers/gi-viewer/threejs/threejs-viewer.component.scss ***!
  \*******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "button {\n  cursor: pointer; }\n  button:focus {\n    outline: none; }\n  :host {\n  width: 100%;\n  height: 100%;\n  background-color: green;\n  overflow: hidden; }\n  #threejs-container {\n  position: relative;\n  height: 100%;\n  width: 100%;\n  margin: 0px;\n  overflow: hidden;\n  font-family: sans-serif; }\n  #container-top-right-resize {\n  top: 0px;\n  right: 0px; }\n  #shownumber {\n  position: absolute;\n  bottom: 5px;\n  right: 5px;\n  background: rgba(255, 255, 255, 0.3);\n  padding: 10px;\n  color: #2a8ac5; }\n  /*#rotating{\r\n    width: 30px;\r\n    height: 25px;\r\n    font-size:15px;\r\n    right:0px; \r\n    text-align:center;\r\n    position: absolute;\r\n    top: 0px;\r\n    background-color:transparent;\r\n    border:0;\r\n}\r\n\r\n#paning{\r\n    width: 30px;\r\n    height: 25px;\r\n    font-size:15px;\r\n    right:0px; \r\n    text-align:center;\r\n    position: absolute;\r\n    top: 25px;\r\n    background-color:transparent;\r\n    border:0;\r\n}\r\n\r\n#zooming{\r\n    width: 30px;\r\n    height: 25px;\r\n    font-size:15px;\r\n    right:0px; \r\n    text-align:center;\r\n    position: absolute;\r\n    margin-top: 50px;\r\n    background-color:transparent;\r\n    border:0;\r\n}*/\n  /*#imagery{\r\n    width: 30px;\r\n    height: 25px;\r\n    font-size:14px;\r\n    right:0px; \r\n    text-align:center;\r\n    position: absolute;\r\n    margin-top: 10px;\r\n    background-color:transparent;\r\n    border:0;\r\n}*/\n  #zoomingfit {\n  width: 40px;\n  height: 40px;\n  font-size: 15px;\n  position: absolute;\n  top: 0px;\n  right: 0px;\n  text-align: center;\n  color: #505050;\n  background-color: transparent;\n  border: 0; }\n  #EntitySelection {\n  width: 40px;\n  height: 40px;\n  font-size: 15px;\n  position: absolute;\n  top: 40px;\n  right: 0px;\n  text-align: center;\n  color: #505050;\n  background-color: transparent;\n  border: 0; }\n  .needSelect {\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 40px;\n  height: 40px;\n  border-radius: 50%;\n  background-color: white;\n  opacity: 0;\n  -webkit-animation: scaleIn 2s infinite cubic-bezier(0.36, 0.11, 0.89, 0.32);\n          animation: scaleIn 2s infinite cubic-bezier(0.36, 0.11, 0.89, 0.32); }\n  @-webkit-keyframes scaleIn {\n  from {\n    -webkit-transform: scale(0.8, 0.8);\n            transform: scale(0.8, 0.8);\n    opacity: .5; }\n  to {\n    -webkit-transform: scale(1.2, 1.2);\n            transform: scale(1.2, 1.2);\n    opacity: 0; } }\n  @keyframes scaleIn {\n  from {\n    -webkit-transform: scale(0.8, 0.8);\n            transform: scale(0.8, 0.8);\n    opacity: .5; }\n  to {\n    -webkit-transform: scale(1.2, 1.2);\n            transform: scale(1.2, 1.2);\n    opacity: 0; } }\n  #SelectingEntityType {\n  width: 40px;\n  font-size: 15px;\n  position: absolute;\n  text-align: center;\n  color: #505050;\n  top: 75px;\n  right: 0px; }\n  #selectDropdown {\n  position: absolute;\n  top: 70px;\n  right: 5px; }\n  #selectDropdown button {\n    width: 30px;\n    height: 25px;\n    font: 15px bolder;\n    display: block;\n    background-color: transparent;\n    border: 0;\n    font-family: sans-serif;\n    color: #505050;\n    cursor: pointer; }\n  #selectDropdown button.active {\n      background-color: #f3f3f3; }\n  #selectDropdown button:hover {\n      background-color: #dadada; }\n  #setting {\n  width: 30px;\n  height: 25px;\n  font-size: 15px;\n  right: 0px;\n  text-align: center;\n  position: absolute;\n  top: 10px;\n  background-color: transparent;\n  border: 0; }\n  .visible {\n  color: grey; }\n  .selectvisible {\n  background-color: white !important;\n  color: #395d73; }\n\r\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kZWwtdmlld2Vycy9hbGwtdmlld2Vycy9naS12aWV3ZXIvdGhyZWVqcy9DOlxcVXNlcnNcXGFraWJkcHRcXERvY3VtZW50c1xcQW5ndWxhclxcbW9iaXVzLXBhcmFtZXRyaWMtbW9kZWxsZXIvc3JjXFxhcHBcXG1vZGVsLXZpZXdlcnNcXGFsbC12aWV3ZXJzXFxnaS12aWV3ZXJcXHRocmVlanNcXHRocmVlanMtdmlld2VyLmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC9tb2RlbC12aWV3ZXJzL2FsbC12aWV3ZXJzL2dpLXZpZXdlci90aHJlZWpzL0M6XFxVc2Vyc1xcYWtpYmRwdFxcRG9jdW1lbnRzXFxBbmd1bGFyXFxtb2JpdXMtcGFyYW1ldHJpYy1tb2RlbGxlci9zcmNcXHNjc3NcXHZhcmlhYmxlcy5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUdBO0VBQ0ksZ0JBQWUsRUFJbEI7RUFMRDtJQUdRLGNBQWEsRUFDaEI7RUFHTDtFQUdJLFlBQVc7RUFDWCxhQUFZO0VBQ1osd0JBQXVCO0VBQ3ZCLGlCQUFlLEVBQ2xCO0VBRUQ7RUFDSSxtQkFBa0I7RUFFbEIsYUFBWTtFQUNaLFlBQVc7RUFDWCxZQUFVO0VBQ1YsaUJBQWdCO0VBRWhCLHdCQUFzQixFQUN6QjtFQUVEO0VBQ0ksU0FBUTtFQUNSLFdBQVUsRUFDYjtFQUVEO0VBQ0ksbUJBQWtCO0VBQ2xCLFlBQVc7RUFDWCxXQUFVO0VBQ1YscUNBQWlDO0VBQ2pDLGNBQWE7RUFDYixlQUFjLEVBQ2pCO0VBRUQ7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7R0FrQ0c7RUFFSDs7Ozs7Ozs7OztHQVVHO0VBRUg7RUFDSSxZQUFXO0VBQ1gsYUFBWTtFQUNaLGdCQzNGUztFRDRGVCxtQkFBa0I7RUFDbEIsU0FBTztFQUNQLFdBQVM7RUFDVCxtQkFBaUI7RUFDakIsZUFBYztFQUNkLDhCQUE0QjtFQUM1QixVQUFRLEVBQ1g7RUFFRDtFQUNJLFlBQVc7RUFDWCxhQUFZO0VBQ1osZ0JDeEdTO0VEeUdULG1CQUFrQjtFQUNsQixVQUFTO0VBQ1QsV0FBUztFQUNULG1CQUFpQjtFQUNqQixlQUFjO0VBQ2QsOEJBQTRCO0VBQzVCLFVBQVEsRUFDWDtFQUNEO0VBQ0ksbUJBQWtCO0VBQ2xCLE9BQU07RUFDTixRQUFPO0VBQ1AsWUFBVztFQUNYLGFBQVk7RUFDWixtQkFBa0I7RUFDbEIsd0JBQXVCO0VBQ3ZCLFdBQVU7RUFDViw0RUFBK0Q7VUFBL0Qsb0VBQStELEVBQ2xFO0VBRUQ7RUFDSTtJQUNFLG1DQUF3QjtZQUF4QiwyQkFBd0I7SUFDeEIsWUFBVyxFQUFBO0VBRWI7SUFDRSxtQ0FBMEI7WUFBMUIsMkJBQTBCO0lBQzFCLFdBQVUsRUFBQSxFQUFBO0VBUGhCO0VBQ0k7SUFDRSxtQ0FBd0I7WUFBeEIsMkJBQXdCO0lBQ3hCLFlBQVcsRUFBQTtFQUViO0lBQ0UsbUNBQTBCO1lBQTFCLDJCQUEwQjtJQUMxQixXQUFVLEVBQUEsRUFBQTtFQUloQjtFQUNJLFlBQVc7RUFDWCxnQkMxSVM7RUQySVQsbUJBQWtCO0VBQ2xCLG1CQUFpQjtFQUNqQixlQUFjO0VBQ2QsVUFBUztFQUNULFdBQVMsRUFDWjtFQUVEO0VBQ0ksbUJBQWtCO0VBQ2xCLFVBQVM7RUFDVCxXQUFVLEVBa0JiO0VBckJEO0lBS1EsWUFBVztJQUNYLGFBQVk7SUFDWixrQkFBb0I7SUFDcEIsZUFBYztJQUNkLDhCQUE0QjtJQUM1QixVQUFRO0lBQ1Isd0JBQXNCO0lBQ3RCLGVBQWM7SUFDZCxnQkFBZSxFQU9sQjtFQXBCTDtNQWVZLDBCQUEwQixFQUM3QjtFQWhCVDtNQWtCWSwwQkFBMEIsRUFDN0I7RUFJVDtFQUNJLFlBQVc7RUFDWCxhQUFZO0VBQ1osZ0JDNUtTO0VENktULFdBQVM7RUFDVCxtQkFBaUI7RUFDakIsbUJBQWtCO0VBQ2xCLFVBQVM7RUFDVCw4QkFBNEI7RUFDNUIsVUFBUSxFQUNYO0VBSUQ7RUFDSSxZQUFXLEVBQ2Q7RUFFRDtFQUNJLG1DQUFtQztFQUNuQyxlQUFhLEVBQ2hCIiwiZmlsZSI6InNyYy9hcHAvbW9kZWwtdmlld2Vycy9hbGwtdmlld2Vycy9naS12aWV3ZXIvdGhyZWVqcy90aHJlZWpzLXZpZXdlci5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIkBpbXBvcnQgJ35zY3NzL2NvbG9ycyc7XHJcbkBpbXBvcnQgJ35zY3NzL3ZhcmlhYmxlcyc7XHJcblxyXG5idXR0b257XHJcbiAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgICAmOmZvY3Vze1xyXG4gICAgICAgIG91dGxpbmU6IG5vbmU7XHJcbiAgICB9XHJcbn1cclxuLy90aHJlZWpzLXZpZXdlclxyXG46aG9zdCAgeyBcclxuICAgIC8vIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIC8vIHBhZGRpbmc6NXB4O1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBncmVlbjtcclxuICAgIG92ZXJmbG93OmhpZGRlbjtcclxufVxyXG5cclxuI3RocmVlanMtY29udGFpbmVyIHtcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgIC8vIHBhZGRpbmc6NTBweDtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgbWFyZ2luOjBweDtcclxuICAgIG92ZXJmbG93OiBoaWRkZW47XHJcbiAgICAvLyBjb2xvcjogYmx1ZTtcclxuICAgIGZvbnQtZmFtaWx5OnNhbnMtc2VyaWY7XHJcbn1cclxuXHJcbiNjb250YWluZXItdG9wLXJpZ2h0LXJlc2l6ZSB7IFxyXG4gICAgdG9wOiAwcHg7IFxyXG4gICAgcmlnaHQ6IDBweDsgXHJcbn1cclxuXHJcbiNzaG93bnVtYmVye1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgYm90dG9tOiA1cHg7XHJcbiAgICByaWdodDogNXB4O1xyXG4gICAgYmFja2dyb3VuZDogcmdiYSgyNTUsMjU1LDI1NSwwLjMpO1xyXG4gICAgcGFkZGluZzogMTBweDtcclxuICAgIGNvbG9yOiAjMmE4YWM1O1xyXG59XHJcblxyXG4vKiNyb3RhdGluZ3tcclxuICAgIHdpZHRoOiAzMHB4O1xyXG4gICAgaGVpZ2h0OiAyNXB4O1xyXG4gICAgZm9udC1zaXplOjE1cHg7XHJcbiAgICByaWdodDowcHg7IFxyXG4gICAgdGV4dC1hbGlnbjpjZW50ZXI7XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICB0b3A6IDBweDtcclxuICAgIGJhY2tncm91bmQtY29sb3I6dHJhbnNwYXJlbnQ7XHJcbiAgICBib3JkZXI6MDtcclxufVxyXG5cclxuI3BhbmluZ3tcclxuICAgIHdpZHRoOiAzMHB4O1xyXG4gICAgaGVpZ2h0OiAyNXB4O1xyXG4gICAgZm9udC1zaXplOjE1cHg7XHJcbiAgICByaWdodDowcHg7IFxyXG4gICAgdGV4dC1hbGlnbjpjZW50ZXI7XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICB0b3A6IDI1cHg7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOnRyYW5zcGFyZW50O1xyXG4gICAgYm9yZGVyOjA7XHJcbn1cclxuXHJcbiN6b29taW5ne1xyXG4gICAgd2lkdGg6IDMwcHg7XHJcbiAgICBoZWlnaHQ6IDI1cHg7XHJcbiAgICBmb250LXNpemU6MTVweDtcclxuICAgIHJpZ2h0OjBweDsgXHJcbiAgICB0ZXh0LWFsaWduOmNlbnRlcjtcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIG1hcmdpbi10b3A6IDUwcHg7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOnRyYW5zcGFyZW50O1xyXG4gICAgYm9yZGVyOjA7XHJcbn0qL1xyXG5cclxuLyojaW1hZ2VyeXtcclxuICAgIHdpZHRoOiAzMHB4O1xyXG4gICAgaGVpZ2h0OiAyNXB4O1xyXG4gICAgZm9udC1zaXplOjE0cHg7XHJcbiAgICByaWdodDowcHg7IFxyXG4gICAgdGV4dC1hbGlnbjpjZW50ZXI7XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICBtYXJnaW4tdG9wOiAxMHB4O1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjp0cmFuc3BhcmVudDtcclxuICAgIGJvcmRlcjowO1xyXG59Ki9cclxuXHJcbiN6b29taW5nZml0e1xyXG4gICAgd2lkdGg6IDQwcHg7XHJcbiAgICBoZWlnaHQ6IDQwcHg7XHJcbiAgICBmb250LXNpemU6JGZzaXplMTtcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIHRvcDowcHg7XHJcbiAgICByaWdodDowcHg7IFxyXG4gICAgdGV4dC1hbGlnbjpjZW50ZXI7XHJcbiAgICBjb2xvcjogIzUwNTA1MDtcclxuICAgIGJhY2tncm91bmQtY29sb3I6dHJhbnNwYXJlbnQ7XHJcbiAgICBib3JkZXI6MDtcclxufVxyXG5cclxuI0VudGl0eVNlbGVjdGlvbntcclxuICAgIHdpZHRoOiA0MHB4O1xyXG4gICAgaGVpZ2h0OiA0MHB4O1xyXG4gICAgZm9udC1zaXplOiRmc2l6ZTE7XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICB0b3A6IDQwcHg7XHJcbiAgICByaWdodDowcHg7IFxyXG4gICAgdGV4dC1hbGlnbjpjZW50ZXI7XHJcbiAgICBjb2xvcjogIzUwNTA1MDtcclxuICAgIGJhY2tncm91bmQtY29sb3I6dHJhbnNwYXJlbnQ7XHJcbiAgICBib3JkZXI6MDtcclxufVxyXG4ubmVlZFNlbGVjdHtcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIHRvcDogMDtcclxuICAgIGxlZnQ6IDA7XHJcbiAgICB3aWR0aDogNDBweDtcclxuICAgIGhlaWdodDogNDBweDtcclxuICAgIGJvcmRlci1yYWRpdXM6IDUwJTtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xyXG4gICAgb3BhY2l0eTogMDtcclxuICAgIGFuaW1hdGlvbjogc2NhbGVJbiAycyBpbmZpbml0ZSBjdWJpYy1iZXppZXIoLjM2LCAuMTEsIC44OSwgLjMyKTtcclxufVxyXG5cclxuQGtleWZyYW1lcyBzY2FsZUluIHtcclxuICAgIGZyb20ge1xyXG4gICAgICB0cmFuc2Zvcm06IHNjYWxlKC44LCAuOCk7XHJcbiAgICAgIG9wYWNpdHk6IC41O1xyXG4gICAgfVxyXG4gICAgdG8ge1xyXG4gICAgICB0cmFuc2Zvcm06IHNjYWxlKDEuMiwgMS4yKTtcclxuICAgICAgb3BhY2l0eTogMDtcclxuICAgIH1cclxufVxyXG5cclxuI1NlbGVjdGluZ0VudGl0eVR5cGV7XHJcbiAgICB3aWR0aDogNDBweDtcclxuICAgIGZvbnQtc2l6ZTokZnNpemUxO1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgdGV4dC1hbGlnbjpjZW50ZXI7XHJcbiAgICBjb2xvcjogIzUwNTA1MDtcclxuICAgIHRvcDogNzVweDtcclxuICAgIHJpZ2h0OjBweDsgXHJcbn1cclxuXHJcbiNzZWxlY3REcm9wZG93bntcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIHRvcDogNzBweDtcclxuICAgIHJpZ2h0OiA1cHg7XHJcbiAgICBidXR0b257XHJcbiAgICAgICAgd2lkdGg6IDMwcHg7XHJcbiAgICAgICAgaGVpZ2h0OiAyNXB4O1xyXG4gICAgICAgIGZvbnQ6ICRmc2l6ZTEgYm9sZGVyO1xyXG4gICAgICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6dHJhbnNwYXJlbnQ7XHJcbiAgICAgICAgYm9yZGVyOjA7XHJcbiAgICAgICAgZm9udC1mYW1pbHk6c2Fucy1zZXJpZjtcclxuICAgICAgICBjb2xvcjogIzUwNTA1MDtcclxuICAgICAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgICAgICAgJi5hY3RpdmV7XHJcbiAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICAjZjNmM2YzO1xyXG4gICAgICAgIH1cclxuICAgICAgICAmOmhvdmVye1xyXG4gICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAgI2RhZGFkYTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbn1cclxuXHJcbiNzZXR0aW5ne1xyXG4gICAgd2lkdGg6IDMwcHg7XHJcbiAgICBoZWlnaHQ6IDI1cHg7XHJcbiAgICBmb250LXNpemU6JGZzaXplMTtcclxuICAgIHJpZ2h0OjBweDsgXHJcbiAgICB0ZXh0LWFsaWduOmNlbnRlcjtcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIHRvcDogMTBweDtcclxuICAgIGJhY2tncm91bmQtY29sb3I6dHJhbnNwYXJlbnQ7XHJcbiAgICBib3JkZXI6MDtcclxufVxyXG5cclxuXHJcblxyXG4udmlzaWJsZXtcclxuICAgIGNvbG9yOiBncmV5O1xyXG59XHJcblxyXG4uc2VsZWN0dmlzaWJsZXtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICB3aGl0ZSAhaW1wb3J0YW50O1xyXG4gICAgY29sb3I6IzM5NWQ3MztcclxufVxyXG4iLCIkcGFkZGluZzogNDBweDsgLy8gPyBub3QgdXNlZFxyXG4kc21hbGwtcGFkZGluZzogMTVweDtcclxuJGhlYWRlci1oZWlnaHQ6IDQwcHg7XHJcblxyXG4kZnNpemUxOiAxNXB4O1xyXG4kZnNpemUyOiAxMnB4O1xyXG4kZnNpemUzOiAzMHB4O1xyXG5cclxuJHBvcnQtc2l6ZTogMTVweDtcclxuJGRlZmF1bHQtc2lkZS1wYWRkaW5nOiAxNXB4O1xyXG4iXX0= */"

/***/ }),

/***/ "./src/app/model-viewers/all-viewers/gi-viewer/threejs/threejs-viewer.component.ts":
/*!*****************************************************************************************!*\
  !*** ./src/app/model-viewers/all-viewers/gi-viewer/threejs/threejs-viewer.component.ts ***!
  \*****************************************************************************************/
/*! exports provided: ThreejsViewerComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ThreejsViewerComponent", function() { return ThreejsViewerComponent; });
/* harmony import */ var _libs_geo_info_GIModel__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @libs/geo-info/GIModel */ "./src/libs/geo-info/GIModel.ts");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _data_data_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../data/data.service */ "./src/app/model-viewers/all-viewers/gi-viewer/data/data.service.ts");
/* harmony import */ var _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @libs/geo-info/common */ "./src/libs/geo-info/common.ts");
/* harmony import */ var _html_dropdown_menu_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../html/dropdown-menu.component */ "./src/app/model-viewers/all-viewers/gi-viewer/html/dropdown-menu.component.ts");
/* harmony import */ var _html_modal_window_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../html/modal-window.service */ "./src/app/model-viewers/all-viewers/gi-viewer/html/modal-window.service.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (undefined && undefined.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};

// import @angular stuff

// import { IModel } from 'gs-json';




/**
 * A threejs viewer for viewing geo-info (GI) models.
 * This component gets used in /app/model-viewers/all-viewers/gi-viewer/gi-viewer.component.html
 */
var ThreejsViewerComponent = /** @class */ (function () {
    /**
     * Creates a new viewer,
     * @param injector
     * @param elem
     */
    function ThreejsViewerComponent(injector, elem) {
        this.eventClicked = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"]();
        this.dropdown = new _html_dropdown_menu_component__WEBPACK_IMPORTED_MODULE_4__["DropdownMenuComponent"]();
        this.container = null;
        // flags for displayinhg text in viewer, see html
        this._no_model = false;
        this._model_error = false;
        this.messageVisible = false;
        // right selection dropdown
        this.needSelect = false;
        // current entity type enabled for selection
        this.SelectingEntityType = { id: _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntTypeStr"][_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntType"].FACE], name: 'Faces' };
        this.selectDropdownVisible = false;
        this.selections = [
            { id: _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntTypeStr"][_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntType"].POSI], name: 'Positions' }, { id: _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntTypeStr"][_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntType"].VERT], name: 'Vetex' },
            { id: _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntTypeStr"][_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntType"].EDGE], name: 'Edges' }, { id: _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntTypeStr"][_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntType"].WIRE], name: 'Wires' },
            { id: _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntTypeStr"][_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntType"].FACE], name: 'Faces' }, { id: _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntTypeStr"][_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntType"].POINT], name: 'Points' },
            { id: _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntTypeStr"][_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntType"].PLINE], name: 'Polylines' }, { id: _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntTypeStr"][_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntType"].PGON], name: 'Polygons' },
            { id: _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntTypeStr"][_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntType"].COLL], name: 'Collections' }
        ];
        this.dropdownPosition = { x: 0, y: 0 };
        this.isDown = false;
        this.shiftKeyPressed = false;
        this._elem = elem;
        this.dataService = injector.get(_data_data_service__WEBPACK_IMPORTED_MODULE_2__["DataService"]);
        this.modalWindow = injector.get(_html_modal_window_service__WEBPACK_IMPORTED_MODULE_5__["ModalService"]);
    }
    /**
     * Called when the viewer is initialised.
     */
    ThreejsViewerComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.dropdown.items = [];
        this.dropdown.visible = false;
        this.dropdown.position = { x: 0, y: 0 };
        // console.log('CALLING ngOnInit in THREEJS VIEWER COMPONENT');
        this.container = this._elem.nativeElement.children.namedItem('threejs-container');
        // check for container
        if (!this.container) {
            console.error('No container in Three Viewer');
            return;
        }
        // size of window
        this._width = this.container.offsetWidth; // container.client_width;
        this._height = this.container.offsetHeight; // container.client_height;
        this._data_threejs = this.dataService.getThreejsScene();
        this.container.appendChild(this._data_threejs._renderer.domElement);
        // set the numbers of entities
        this._threejs_nums = this._data_threejs._threejs_nums;
        // ??? What is happening here?
        var self = this;
        this._data_threejs._controls.addEventListener('change', function () { self.render(self); });
        self._data_threejs._renderer.render(self._data_threejs._scene, self._data_threejs._camera);
        if (this._data_threejs.ObjLabelMap.size !== 0) {
            this._data_threejs.ObjLabelMap.forEach(function (obj, label) {
                _this._data_threejs.createLabelforObj(_this.container, obj.entity, obj.type, label);
            });
        }
    };
    /**
     * @param self
     */
    ThreejsViewerComponent.prototype.render = function (self) {
        // console.log('CALLING render in THREEJS VIEWER COMPONENT');
        var textLabels = this._data_threejs._textLabels;
        if (textLabels.size !== 0) {
            textLabels.forEach(function (label) {
                label.updatePosition();
            });
        }
        self._data_threejs._renderer.render(self._data_threejs._scene, self._data_threejs._camera);
    };
    /**
     * Called when anything changes
     */
    ThreejsViewerComponent.prototype.ngDoCheck = function () {
        var _this = this;
        if (!this.container) {
            console.error('No container in Three Viewer');
            return;
        }
        var width = this.container.offsetWidth;
        var height = this.container.offsetHeight;
        // this is when dimensions change
        if (width !== this._width || height !== this._height) {
            this._width = width;
            this._height = height;
            setTimeout(function () {
                _this._data_threejs._camera.aspect = _this._width / _this._height;
                _this._data_threejs._camera.updateProjectionMatrix();
                _this._data_threejs._renderer.setSize(_this._width, _this._height);
                _this.render(_this);
            }, 10);
        }
    };
    // receive data -> model from gi-viewer component and update model in the scene
    ThreejsViewerComponent.prototype.ngOnChanges = function (changes) {
        if (changes['model']) {
            if (this.model) {
                this.updateModel(this.model);
            }
        }
    };
    /**
     * Update the model in the viewer.
     */
    ThreejsViewerComponent.prototype.updateModel = function (model) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                this._data_threejs = this.dataService.getThreejsScene();
                if (!model) {
                    console.warn('Model or Scene not defined.');
                    this._no_model = true;
                    return [2 /*return*/];
                }
                else {
                    if (model !== this._data_threejs._model) {
                        this._data_threejs._model = model;
                        try {
                            // add geometry to the scene
                            this._data_threejs.addGeometry(model, this.container);
                            this._model_error = false;
                            this._no_model = false;
                            this.render(this);
                        }
                        catch (ex) {
                            console.error('Error displaying model:', ex);
                            this._model_error = true;
                            this._data_threejs._text = ex;
                        }
                    }
                }
                return [2 /*return*/];
            });
        });
    };
    ThreejsViewerComponent.prototype.initRaycaster = function (event) {
        var scene = this._data_threejs;
        scene._mouse.x = (event.offsetX / scene._renderer.domElement.clientWidth) * 2 - 1;
        scene._mouse.y = -(event.offsetY / scene._renderer.domElement.clientHeight) * 2 + 1;
        scene._raycaster.setFromCamera(scene._mouse, scene._camera);
        return scene._raycaster.intersectObjects(scene.sceneObjs);
    };
    ThreejsViewerComponent.prototype.onMouseUp = function (event) {
        if (event.target.tagName !== 'CANVAS') {
            return null;
        }
        else {
            if (this.dragHash < 5) {
                this.onUserAction(event);
            }
            else {
                // this._data_threejs._controls.enabled = true;
            }
            this.isDown = false;
        }
    };
    ThreejsViewerComponent.prototype.onMouseMove = function (event) {
        var tags = document.getElementsByTagName('body');
        var length = tags.length;
        if (event.target.tagName !== 'CANVAS') {
            var index = 0;
            for (; index < length; index++) {
                tags[index].style.cursor = 'default';
            }
            return null;
        }
        else {
            var intersects = this.initRaycaster(event);
            if (intersects.length > 0) {
                var index = 0;
                for (; index < length; index++) {
                    tags[index].style.cursor = 'pointer';
                }
            }
            else {
                var index = 0;
                for (; index < length; index++) {
                    tags[index].style.cursor = 'default';
                }
            }
            if (!this.isDown) {
                return;
            }
            // event.preventDefault();
            var mouseX = event.clientX - event.target.getBoundingClientRect().left;
            var mouseY = event.clientY - event.target.getBoundingClientRect().top;
            // Put your mousemove stuff here
            var dx = mouseX - this.lastX;
            var dy = mouseY - this.lastY;
            this.lastX = mouseX;
            this.lastY = mouseY;
            // accumulate the drag distance
            // (used in mouseup to see if this is a drag or click)
            this.dragHash += Math.abs(dx) + Math.abs(dy);
            if (this.dragHash > 4) {
                // dragging
            }
        }
    };
    ThreejsViewerComponent.prototype.onMouseDown = function (event) {
        if (event.target.tagName !== 'CANVAS') {
            return null;
        }
        else {
            event.stopPropagation();
            this.lastX = event.clientX - event.target.getBoundingClientRect().left;
            this.lastY = event.clientY - event.target.getBoundingClientRect().top;
            // Put your mousedown stuff here
            this.dragHash = 0;
            this.isDown = true;
        }
    };
    ThreejsViewerComponent.prototype.onKeyDown = function (event) {
        var scene = this._data_threejs;
        // keyboard control for camera
        scene.onWindowKeyPress(event);
        if (event.shiftKey) {
            this.shiftKeyPressed = true;
        }
        this.render(this);
    };
    ThreejsViewerComponent.prototype.onKeyUp = function (event) {
        this.shiftKeyPressed = false;
    };
    ThreejsViewerComponent.prototype.onUserAction = function (event) {
        // get entities for mouse event
        var intersects = this.initRaycaster(event);
        // check intersect exist
        if (intersects.length > 0) {
            if (event.which === 1) {
                // check mouse event triggered in THREE viewer, then enable dropdown menu
                if (event.target.tagName === 'CANVAS') {
                    var pos_x = event.clientX - event.target.getBoundingClientRect().left;
                    var pos_y = event.clientY - event.target.getBoundingClientRect().top;
                    this.dropdownPosition = { x: pos_x, y: pos_y };
                }
                this.selectObj(intersects[0]);
            }
        }
        else {
            if (event.target.tagName === 'CANVAS') {
                this.unselectAll();
                this.refreshTable(event);
                if (event.target.tagName !== 'OL') {
                    // not clicking on Menu item, hide dropdown menu
                    this.dropdown.visible = false;
                    // return;
                }
            }
        }
    };
    ThreejsViewerComponent.prototype.refreshTable = function (event) {
        this.eventClicked.emit(event);
    };
    ThreejsViewerComponent.prototype.unselectAll = function () {
        var _this = this;
        var scene = this._data_threejs;
        var selectings = Array.from(scene.selected_geoms.keys());
        for (var _i = 0, selectings_1 = selectings; _i < selectings_1.length; _i++) {
            var selecting = selectings_1[_i];
            scene.unselectObj(selecting, this.container);
        }
        document.querySelectorAll('[id^=textLabel_]').forEach(function (value) {
            _this.container.removeChild(value);
        });
        this._data_threejs._textLabels.clear();
        this.render(this);
        this.dataService.selected_ents.forEach(function (map) {
            map.clear();
        });
        this.refreshTable(event);
        scene.sceneObjsSelected.clear();
        // if (this.SelectingEntityType.id === EEntTypeStr[EEntType.COLL]) {
        //     document.getElementById('executeButton').click();
        // }
    };
    ThreejsViewerComponent.prototype.selectObj = function (intersect0) {
        // console.log('interecting object', intersect);
        var scene = this._data_threejs;
        switch (this.SelectingEntityType.id) {
            case _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntTypeStr"][_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntType"].POSI]:
                if (intersect0.object.type === 'Mesh') {
                    var face = this.model.geom.query.navTriToFace(intersect0.faceIndex);
                    var ent_id = "" + _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntTypeStr"][_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntType"].POSI] + face;
                    if (scene.selected_geoms.has(ent_id)) {
                        this.unselectGeom(ent_id, _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntTypeStr"][_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntType"].POSI]);
                    }
                    else {
                        if (!this.shiftKeyPressed) {
                            this.unselectAll();
                        }
                        this.selectPositions(intersect0);
                    }
                }
                else if (intersect0.object.type === 'LineSegments') {
                    var ent_id = "" + _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntTypeStr"][_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntType"].POSI] + intersect0.index / 2;
                    if (scene.selected_geoms.has(ent_id)) {
                        this.unselectGeom(ent_id, _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntTypeStr"][_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntType"].POSI]);
                    }
                    else {
                        if (!this.shiftKeyPressed) {
                            this.unselectAll();
                        }
                        this.selectPositions(intersect0);
                    }
                }
                else if (intersect0.object.type === 'Points') {
                    var ent_id = "" + _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntTypeStr"][_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntType"].POSI] + intersect0.index;
                    if (scene.selected_geoms.has(ent_id)) {
                        this.unselectGeom(ent_id, _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntTypeStr"][_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntType"].POSI]);
                    }
                    else {
                        if (!this.shiftKeyPressed) {
                            this.unselectAll();
                        }
                        this.selectPositions(intersect0);
                    }
                }
                break;
            case _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntTypeStr"][_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntType"].VERT]:
                this.selectVertex(intersect0);
                break;
            case _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntTypeStr"][_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntType"].COLL]:
                if (!this.shiftKeyPressed) {
                    this.unselectAll();
                }
                this.selectColl(intersect0, intersect0.object.type);
                break;
            case _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntTypeStr"][_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntType"].FACE]:
                if (intersect0.object.type === 'Mesh') {
                    var face = this.model.geom.query.navTriToFace(intersect0.faceIndex);
                    var ent_id = "" + _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntTypeStr"][_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntType"].FACE] + face;
                    if (scene.selected_geoms.has(ent_id)) {
                        this.unselectGeom(ent_id, _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntTypeStr"][_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntType"].FACE]);
                    }
                    else {
                        if (!this.shiftKeyPressed) {
                            this.unselectAll();
                        }
                        this.selectFace(intersect0);
                    }
                }
                else {
                    this.showMessages('Faces', true);
                }
                break;
            case _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntTypeStr"][_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntType"].PGON]:
                if (intersect0.object.type === 'Mesh') {
                    var face = this.model.geom.query.navTriToFace(intersect0.faceIndex);
                    var pgon = this.model.geom.query.navFaceToPgon(face);
                    var ent_id = "" + _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntTypeStr"][_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntType"].PGON] + pgon;
                    if (scene.selected_geoms.has(ent_id)) {
                        this.unselectGeom(ent_id, _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntTypeStr"][_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntType"].PGON]);
                    }
                    else {
                        if (!this.shiftKeyPressed) {
                            this.unselectAll();
                        }
                        this.selectPGon(intersect0);
                    }
                }
                else {
                    this.showMessages('Polygons', true);
                }
                break;
            case _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntTypeStr"][_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntType"].EDGE]:
                if (intersect0.object.type === 'LineSegments') {
                    var ent_id = "" + _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntTypeStr"][_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntType"].EDGE] + intersect0.index / 2;
                    if (scene.selected_geoms.has(ent_id)) {
                        this.unselectGeom(ent_id, _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntTypeStr"][_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntType"].EDGE]);
                    }
                    else {
                        if (!this.shiftKeyPressed) {
                            this.unselectAll();
                        }
                        this.selectEdge(intersect0);
                    }
                }
                else {
                    this.showMessages('Edges', true);
                }
                break;
            case _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntTypeStr"][_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntType"].WIRE]:
                if (intersect0.object.type === 'LineSegments') {
                    var wire = this.model.geom.query.navEdgeToWire(intersect0.index / 2);
                    var ent_id = "" + _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntTypeStr"][_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntType"].WIRE] + wire;
                    if (scene.selected_geoms.has(ent_id)) {
                        this.unselectGeom(ent_id, _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntTypeStr"][_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntType"].WIRE]);
                    }
                    else {
                        if (!this.shiftKeyPressed) {
                            this.unselectAll();
                        }
                        this.selectWire(intersect0);
                    }
                }
                else {
                    this.showMessages('Wires', true);
                }
                break;
            case _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntTypeStr"][_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntType"].PLINE]:
                if (intersect0.object.type === 'LineSegments') {
                    var wire = this.model.geom.query.navEdgeToWire(intersect0.index / 2);
                    var pline = this.model.geom.query.navWireToPline(wire);
                    var ent_id = "" + _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntTypeStr"][_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntType"].PLINE] + pline;
                    if (scene.selected_geoms.has(ent_id)) {
                        this.unselectGeom(ent_id, _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntTypeStr"][_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntType"].PLINE]);
                    }
                    else {
                        if (!this.shiftKeyPressed) {
                            this.unselectAll();
                        }
                        this.selectPLine(intersect0);
                    }
                }
                else {
                    this.showMessages('Polylines', true);
                }
                break;
            case _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntTypeStr"][_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntType"].POINT]:
                if (intersect0.object.type === 'Points') {
                    var ent_id = "" + _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntTypeStr"][_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntType"].POINT] + intersect0.index;
                    if (scene.selected_geoms.has(ent_id)) {
                        this.unselectGeom(ent_id, _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntTypeStr"][_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntType"].POINT]);
                    }
                    else {
                        if (!this.shiftKeyPressed) {
                            this.unselectAll();
                        }
                        this.selectPoint(intersect0);
                    }
                }
                else {
                    this.showMessages('Points', true);
                }
                break;
            default:
                this.showMessages('Please choose an Entity type.', true, 'custom');
                break;
            // if (intersect0.object.type === 'LineSegments') {
            //     const intersect1 = intersects[1];
            //     if (intersect1 && intersect0.distance === intersect1.distance) {
            //         this.chooseLine(intersect0, intersect1);
            //         this.selectWire(intersect0);
            //     } else {
            //         this.selectEdge(intersect0);
            //         this.selectWire(intersect0);
            //     }
            // }
        }
        this.render(this);
    };
    ThreejsViewerComponent.prototype.showMessages = function (msg, needSelect, mode) {
        var _this = this;
        if (needSelect === void 0) { needSelect = false; }
        if (mode === void 0) { mode = 'notice'; }
        switch (mode) {
            case 'custom':
                this.message = msg;
                break;
            case 'notice':
                this.message = "Please Select " + msg;
                break;
            default:
                break;
        }
        this.needSelect = needSelect;
        this.messageVisible = true;
        setTimeout(function () {
            _this.messageVisible = false;
        }, 3000);
    };
    ThreejsViewerComponent.prototype.selectPositions = function (object) {
        var _this = this;
        var ent_type_str = _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntTypeStr"][_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntType"].POSI];
        var scene = this._data_threejs;
        if (object.object.type === 'Points') {
            var vert = this.model.geom.query.navPointToVert(object.index);
            var position = this.model.attribs.query.getPosiCoords(vert);
            var posi_ents = this.model.geom.query.navVertToPosi(vert);
            var posi_ent = this.dataService.selected_ents.get(ent_type_str);
            var ent_id = "" + ent_type_str + object.index;
            scene.selectObjPositions(ent_id, position);
            posi_ent.set(ent_id, posi_ents);
        }
        else if (object.object.type === 'LineSegments') {
            var verts = this.model.geom.query.navEdgeToVert(object.index / 2), positions = verts.map(function (v) { return _this.model.attribs.query.getVertCoords(v); }), posi_flat = [].concat.apply([], positions), posi_ents = verts.map(function (v) { return _this.model.geom.query.navVertToPosi(v); });
            var ent_id = "" + ent_type_str + object.index / 2;
            scene.selectObjPositions(ent_id, posi_flat);
            var posi_ent_1 = this.dataService.selected_ents.get(ent_type_str);
            posi_ents.map(function (posi) { return posi_ent_1.set("" + ent_type_str + posi, posi); });
        }
        else if (object.object.type === 'Mesh') {
            var face = this.model.geom.query.navTriToFace(object.faceIndex), tri = this.model.geom.query.navFaceToTri(face), verts = tri.map(function (index) { return _this.model.geom.query.navTriToVert(index); }), verts_flat = [].concat.apply([], verts), posis = verts_flat.map(function (v) { return _this.model.geom.query.navAnyToPosi(_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntType"].VERT, v); }), posis_flat = [].concat.apply([], posis);
            var posi_ents = verts_flat.map(function (v) { return _this.model.geom.query.navVertToPosi(v); });
            var tri_indices_1 = [], positions_1 = [];
            posis_flat.map(function (posi, index) {
                positions_1.push(_this.model.attribs.query.getPosiCoords(posi));
                tri_indices_1.push(index);
            });
            var posi_flat = [].concat.apply([], positions_1);
            var ent_id = "" + ent_type_str + object.faceIndex;
            scene.selectObjPositions(ent_id, posi_flat);
            var posi_ent_2 = this.dataService.selected_ents.get(ent_type_str);
            posi_ents.map(function (posi) { return posi_ent_2.set("" + ent_type_str + posi, posi); });
        }
    };
    ThreejsViewerComponent.prototype.selectVertex = function (object) {
        var _this = this;
        var ent_type_str = _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntTypeStr"][_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntType"].VERT];
        var scene = this._data_threejs;
        if (object.object.type === 'Points') {
            var vert = this.model.geom.query.navPointToVert(object.index), position = this.model.attribs.query.getPosiCoords(vert);
            var posi_ent = this.dataService.selected_ents.get(ent_type_str);
            var selecting = "" + _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntTypeStr"][_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntType"].POINT] + object.index;
            if (!scene.selected_geoms.has(selecting)) {
                // scene.selectObjPoint(selecting, position, this.container);
                posi_ent.set("" + _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntTypeStr"][_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntType"].POSI] + vert, vert);
            }
            else {
                scene.unselectObj(selecting, this.container);
                posi_ent.delete("" + ent_type_str + vert);
            }
        }
        else if (object.object.type === 'LineSegments') {
            var verts = this.model.geom.query.navEdgeToVert(object.index / 2);
            var positions = verts.map(function (v) { return _this.model.attribs.query.getVertCoords(v); });
            var posi_flat = [].concat.apply([], positions);
            var posi_ent_3 = this.dataService.selected_ents.get(ent_type_str);
            var selecting = "" + _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntTypeStr"][_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntType"].EDGE] + object.index / 2;
            if (!scene.selected_geoms.has(selecting)) {
                scene.selectObjLine(selecting, [], posi_flat, this.container);
                verts.map(function (vert) { return posi_ent_3.set("" + ent_type_str + vert, vert); });
            }
            else {
                scene.unselectObj(selecting, this.container);
                verts.map(function (vert) { return posi_ent_3.delete("" + ent_type_str + vert); });
            }
        }
        else if (object.object.type === 'Mesh') {
            var face = this.model.geom.query.navTriToFace(object.faceIndex), tris = this.model.geom.query.navFaceToTri(face), verts = tris.map(function (tri) { return _this.model.geom.query.navTriToVert(tri); }), verts_flat = [].concat.apply([], verts), posis = verts_flat.map(function (v) { return _this.model.geom.query.navAnyToPosi(_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntType"].VERT, v); }), posis_flat = [].concat.apply([], posis);
            var tri_indices_2 = [];
            var positions_2 = [];
            posis_flat.map(function (posi, index) {
                positions_2.push(_this.model.attribs.query.getPosiCoords(posi));
                tri_indices_2.push(index);
            });
            var posi_flat = [].concat.apply([], positions_2);
            var posi_ent_4 = this.dataService.selected_ents.get(ent_type_str);
            var selecting = "" + _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntType"].FACE + face;
            if (!scene.selected_geoms.has(selecting)) {
                scene.selectObjFace(selecting, tri_indices_2, posi_flat, this.container);
                verts_flat.map(function (vert) { return posi_ent_4.set("" + ent_type_str + vert, vert); });
            }
            else {
                scene.unselectObj(selecting, this.container);
                verts_flat.map(function (vert) { return posi_ent_4.delete("" + ent_type_str + vert); });
            }
        }
    };
    ThreejsViewerComponent.prototype.unselectGeom = function (ent_id, ent_type_str) {
        var scene = this._data_threejs;
        scene.unselectObj(ent_id, this.container);
        this.dataService.selected_ents.get(ent_type_str).delete(ent_id);
    };
    ThreejsViewerComponent.prototype.selectEdge = function (line) {
        var _this = this;
        var ent_type_str = _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntTypeStr"][_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntType"].EDGE], verts = this.model.geom.query.navEdgeToVert(line.index / 2), positions = verts.map(function (v) { return _this.model.attribs.query.getVertCoords(v); }), posi_flat = [].concat.apply([], positions), ent_id = "" + ent_type_str + line.index / 2;
        this._data_threejs.selectObjLine(ent_id, [], posi_flat, this.container);
        this.dataService.selected_ents.get(ent_type_str).set(ent_id, line.index / 2);
    };
    ThreejsViewerComponent.prototype.selectWire = function (line) {
        var _this = this;
        var ent_type_str = _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntTypeStr"][_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntType"].EDGE], wire = this.model.geom.query.navEdgeToWire(line.index / 2), edges = this.model.geom.query.navWireToEdge(wire), verts = edges.map(function (e) { return _this.model.geom.query.navEdgeToVert(e); }), verts_flat = [].concat.apply([], [].concat.apply([], verts)), indices = [], positions = [];
        verts_flat.map(function (v, i) {
            positions.push(_this.model.attribs.query.getVertCoords(v));
            indices.push(i);
        });
        var posi_flat = [].concat.apply([], positions), ent_id = "" + ent_type_str + wire;
        this._data_threejs.selectObjLine(ent_id, indices, posi_flat, this.container);
        this.dataService.selected_ents.get(ent_type_str).set(ent_id, wire);
    };
    ThreejsViewerComponent.prototype.selectFace = function (object) {
        var _this = this;
        var ent_type_str = _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntTypeStr"][_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntType"].FACE], face = this.model.geom.query.navTriToFace(object.faceIndex), tri = this.model.geom.query.navFaceToTri(face), verts = tri.map(function (index) { return _this.model.geom.query.navTriToVert(index); }), verts_flat = [].concat.apply([], verts), posis = verts_flat.map(function (v) { return _this.model.geom.query.navAnyToPosi(_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntType"].VERT, v); }), posis_flat = [].concat.apply([], posis), tri_indices = [], positions = [];
        posis_flat.map(function (posi, index) {
            positions.push(_this.model.attribs.query.getPosiCoords(posi));
            tri_indices.push(index);
        });
        var posi_flat = [].concat.apply([], positions), ent_id = "" + ent_type_str + face;
        this._data_threejs.selectObjFace(ent_id, tri_indices, posi_flat, this.container);
        this.dataService.selected_ents.get(ent_type_str).set(ent_id, face);
    };
    ThreejsViewerComponent.prototype.selectPoint = function (point) {
        var ent_type_str = _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntTypeStr"][_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntType"].POINT];
        var result = this.getPointPosis(point.index);
        var point_indices = result.point_indices;
        var point_posi = result.posi_flat;
        var ent_id = "" + ent_type_str + point.index;
        this._data_threejs.selectObjPoint(ent_id, point_indices, point_posi, this.container);
        this.dataService.selected_ents.get(ent_type_str).set(ent_id, point.index);
    };
    ThreejsViewerComponent.prototype.selectPLine = function (line) {
        var ent_type_str = _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntTypeStr"][_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntType"].PLINE], wire = this.model.geom.query.navEdgeToWire(line.index / 2);
        var result = this.getPLinePosis(wire);
        if (result) {
            var posi_flat = result.posi_flat;
            var indices = result.indices;
            var ent_id = "" + ent_type_str + wire;
            this._data_threejs.selectObjLine(ent_id, indices, posi_flat, this.container);
            this.dataService.selected_ents.get(ent_type_str).set(ent_id, wire);
        }
        else {
            this.showMessages('Please Select a Polyline', false, 'custom');
        }
    };
    ThreejsViewerComponent.prototype.selectPGon = function (triangle) {
        var ent_type_str = _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntTypeStr"][_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntType"].PGON];
        var face = this.model.geom.query.navTriToFace(triangle.faceIndex);
        var result = this.getPGonPosis(face);
        var posi_flat = result.posi_flat;
        var tri_indices = result.indices;
        var ent_id = "" + ent_type_str + face;
        this._data_threejs.selectObjFace(ent_id, tri_indices, posi_flat, this.container);
        this.dataService.selected_ents.get(ent_type_str).set(ent_id, face);
    };
    /**
     * get point positions for collections
     * @param points
     */
    ThreejsViewerComponent.prototype.getPointPosis = function (point1, points) {
        var _this = this;
        if (point1 === void 0) { point1 = null; }
        if (points === void 0) { points = null; }
        var verts_flat = null;
        if (point1 !== null) {
            verts_flat = [this.model.geom.query.navPointToVert(point1)];
        }
        if (points !== null) {
            var verts = points.map(function (p) { return _this.model.geom.query.navPointToVert(p); });
            verts_flat = [].concat.apply([], verts);
        }
        var point_indices = [];
        var positions = [];
        verts_flat.map(function (v, i) {
            positions.push(_this.model.attribs.query.getPosiCoords(v));
            point_indices.push(i);
        });
        var posi_flat = [].concat.apply([], positions);
        var result = { posi_flat: posi_flat, point_indices: point_indices };
        return result;
    };
    /**
     * get pline positions for selectPLine or collections
     * @param wire1
     * @param plines
     */
    ThreejsViewerComponent.prototype.getPLinePosis = function (wire1, plines) {
        var _this = this;
        if (wire1 === void 0) { wire1 = null; }
        if (plines === void 0) { plines = null; }
        var wires_flat = null;
        if (wire1 !== null) {
            var _pline = this.model.geom.query.navWireToPline(wire1);
            if (_pline === undefined) {
                return null;
            }
            wires_flat = [this.model.geom.query.navPlineToWire(_pline)];
        }
        if (plines !== null) {
            var wires = plines.map(function (pl) { return _this.model.geom.query.navPlineToWire(pl); });
            wires_flat = [].concat.apply([], wires);
        }
        var edges = wires_flat.map(function (w) { return _this.model.geom.query.navWireToEdge(w); });
        var edges_flat = [].concat.apply([], edges);
        var verts = edges_flat.map(function (e) { return _this.model.geom.query.navEdgeToVert(e); });
        var verts_flat = [].concat.apply([], [].concat.apply([], verts));
        var indices = [];
        var positions = [];
        verts_flat.map(function (v, i) {
            positions.push(_this.model.attribs.query.getVertCoords(v));
            indices.push(i);
        });
        var posi_flat = [].concat.apply([], positions);
        var result = { posi_flat: posi_flat, indices: indices };
        return result;
    };
    /**
     * get pgon positions for selectPGon or collections
     * @param face1
     * @param pgons
     */
    ThreejsViewerComponent.prototype.getPGonPosis = function (face1, pgons) {
        var _this = this;
        if (face1 === void 0) { face1 = null; }
        if (pgons === void 0) { pgons = null; }
        var faces_flat = null;
        if (face1 !== null) {
            var _pgon = this.model.geom.query.navFaceToPgon(face1);
            if (_pgon === undefined) {
                return null;
            }
            faces_flat = [this.model.geom.query.navPgonToFace(_pgon)];
        }
        if (pgons !== null) {
            var faces = pgons.map(function (pgon) { return _this.model.geom.query.navPgonToFace(pgon); });
            faces_flat = [].concat.apply([], faces);
        }
        var tris = faces_flat.map(function (face) { return _this.model.geom.query.navFaceToTri(face); });
        var tris_flat = [].concat.apply([], tris);
        var verts = tris_flat.map(function (tri) { return _this.model.geom.query.navTriToVert(tri); });
        var verts_flat = [].concat.apply([], verts);
        var posis = verts_flat.map(function (v) { return _this.model.geom.query.navAnyToPosi(_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntType"].VERT, v); });
        var posis_flat = [].concat.apply([], posis);
        var indices = [];
        var positions = [];
        posis_flat.map(function (posi, index) {
            positions.push(_this.model.attribs.query.getPosiCoords(posi));
            indices.push(index);
        });
        var posi_flat = [].concat.apply([], positions);
        var result = { posi_flat: posi_flat, indices: indices };
        return result;
    };
    ThreejsViewerComponent.prototype.selectColl = function (object, type) {
        var colls = [];
        if (type === 'Mesh') {
            colls = this.model.geom.query.navAnyToAny(_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntType"].TRI, _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntType"].COLL, object.faceIndex);
        }
        else if (type === 'LineSegments') {
            colls = this.model.geom.query.navAnyToAny(_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntType"].EDGE, _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntType"].COLL, object.index / 2);
        }
        else if (type === 'Points') {
            var vert = this.model.geom.query.navVertToPoint(object.index);
            colls = this.model.geom.query.navAnyToAny(_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntType"].POINT, _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntType"].COLL, vert);
        }
        /**
         * Show dropdown menu only when Entity belongs to more than 1 Collection.
         */
        if (this.dataService.selected_ents.get(_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntTypeStr"][_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntType"].COLL]).size === 0 && colls.length > 1) {
            this.dropdown.setItems(colls, 'co');
            this.dropdown.visible = true;
            this.dropdown.position = this.dropdownPosition;
        }
        else if (colls.length === 1) {
            this.chooseColl(colls[0]);
        }
        else {
            this.showMessages('No Collections Available', true, 'custom');
        }
    };
    ThreejsViewerComponent.prototype.chooseColl = function (id) {
        var scene = this._data_threejs;
        var pgons = this.model.geom.query.navCollToPgon(id);
        var pgons_flat = [].concat.apply([], pgons);
        var pgonResult = this.getPGonPosis(null, pgons_flat);
        var pgons_posi = pgonResult.posi_flat;
        var pgons_indices = pgonResult.indices;
        var coll_id = "" + _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntTypeStr"][_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntType"].COLL] + id;
        if (pgons_indices.length !== 0) {
            var attrib_val = this.model.attribs.query.getAttribValue(_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntType"].COLL, _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EAttribNames"].NAME, id);
            // const selecting = attrib_val ? attrib_val.toString() : `${EEntType.COLL}${id}`;
            var pgon_id = _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntTypeStr"][_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntType"].COLL] + "_pg_" + id;
            scene.selectObjFace(pgon_id, pgons_indices, pgons_posi, this.container, false);
        }
        var plines = this.model.geom.query.navCollToPline(id);
        var plines_flat = [].concat.apply([], plines);
        var plineResult = this.getPLinePosis(null, plines_flat);
        var plines_posi = plineResult.posi_flat;
        var plines_indices = plineResult.indices;
        if (plines_indices.length !== 0) {
            var pline_id = _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntTypeStr"][_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntType"].COLL] + "_pl_" + id;
            scene.selectObjLine(pline_id, plines_indices, plines_posi, this.container, false);
        }
        var points = this.model.geom.query.navCollToPoint(id);
        var points_flat = [].concat.apply([], points);
        var pointResult = this.getPointPosis(null, points_flat);
        var point_posi = pointResult.posi_flat;
        var point_indices = pointResult.point_indices;
        if (point_indices.length !== 0) {
            var point_id = _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntTypeStr"][_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntType"].COLL] + "_pt_" + id;
            scene.selectObjPoint(point_id, point_indices, point_posi, this.container, false);
        }
        this.dataService.selected_ents.get(_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntTypeStr"][_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntType"].COLL]).set(coll_id, id);
        this.refreshTable(null);
        this.render(this);
    };
    ThreejsViewerComponent.prototype.zoomfit = function () {
        this._data_threejs.lookAtObj(this._width);
    };
    ThreejsViewerComponent.prototype.selectEntityType = function (selection) {
        this.SelectingEntityType = selection;
        this.selectDropdownVisible = false;
    };
    ThreejsViewerComponent.prototype.selectEntity = function (id) {
        this.chooseColl(id);
    };
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"])(),
        __metadata("design:type", Object)
    ], ThreejsViewerComponent.prototype, "eventClicked", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        __metadata("design:type", _libs_geo_info_GIModel__WEBPACK_IMPORTED_MODULE_0__["GIModel"])
    ], ThreejsViewerComponent.prototype, "model", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"])(_html_dropdown_menu_component__WEBPACK_IMPORTED_MODULE_4__["DropdownMenuComponent"]),
        __metadata("design:type", Object)
    ], ThreejsViewerComponent.prototype, "dropdown", void 0);
    ThreejsViewerComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'threejs-viewer',
            template: __webpack_require__(/*! ./threejs-viewer.component.html */ "./src/app/model-viewers/all-viewers/gi-viewer/threejs/threejs-viewer.component.html"),
            styles: [__webpack_require__(/*! ./threejs-viewer.component.scss */ "./src/app/model-viewers/all-viewers/gi-viewer/threejs/threejs-viewer.component.scss")]
        }),
        __metadata("design:paramtypes", [_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injector"], _angular_core__WEBPACK_IMPORTED_MODULE_1__["ElementRef"]])
    ], ThreejsViewerComponent);
    return ThreejsViewerComponent;
}());



/***/ }),

/***/ "./src/app/model-viewers/all-viewers/help-viewer/help-viewer.component.html":
/*!**********************************************************************************!*\
  !*** ./src/app/model-viewers/all-viewers/help-viewer/help-viewer.component.html ***!
  \**********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div id=\"help-container\">\r\n    <div class = 'container' *ngIf='output'>\r\n        <h2><span>{{output.module}}</span>.{{output.name}}</h2>\r\n        <!--<h4>Module: <span>{{output.module}}</span></h4>-->\r\n        <div class = 'body--container'>\r\n            <div class = 'descr--container'>\r\n                <h5>Description:</h5>\r\n                <p>{{output.description}}</p>\r\n            </div>\r\n    \r\n            <div class = 'param--container'>\r\n                <h5 *ngIf='output.parameters?.length > 0'>Parameters:</h5>\r\n                <ul class='params'>\r\n                    <ng-container *ngFor='let param of output.parameters'>\r\n                        <li *ngIf='param'>\r\n                            <div class = 'li--item'>\r\n                                <span>{{param.name}}: </span>{{param.description}}\r\n                            </div>\r\n                        </li>\r\n                    </ng-container>\r\n                </ul>\r\n            </div>        \r\n    \r\n            <!-- <p class='paramP' *ngFor='let param of output.parameters'>\r\n                <span>{{param.name}} - </span>{{param.description}}\r\n            </p> -->\r\n            \r\n            <div class = 'ret--container'>\r\n                <h5 *ngIf='output.returns'>Returns:</h5>\r\n                <p *ngIf='output.returns'>{{output.returns}}</p>\r\n            </div>\r\n\r\n            <div *ngIf='output.example' class = 'exam--container'>\r\n                <h5>Examples:</h5>\r\n                <div *ngFor='let ex of output.example; let i = index;' class = 'examp'>\r\n                    <ul>\r\n                        <li>{{ex}}</li>\r\n                        <p *ngIf='output.example_info'>{{output.example_info[i]}}</p>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n"

/***/ }),

/***/ "./src/app/model-viewers/all-viewers/help-viewer/help-viewer.component.scss":
/*!**********************************************************************************!*\
  !*** ./src/app/model-viewers/all-viewers/help-viewer/help-viewer.component.scss ***!
  \**********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "@import url(\"https://fonts.googleapis.com/css?family=Ubuntu+Mono\");\n:host {\n  height: 100%;\n  width: 100%; }\ndiv {\n  font-family: sans-serif;\n  color: #505050;\n  width: 100%;\n  padding-left: 10px; }\nh5 {\n  font-weight: 700;\n  font-size: 12px; }\n.funcDesc {\n  font-weight: 600; }\n.paramP {\n  padding-left: 5px; }\nspan {\n  font-weight: 550;\n  font-style: italic; }\nh2 {\n  padding-bottom: 6px; }\n#help-container {\n  margin-top: 40px;\n  padding: 0px;\n  height: calc(100vh - 40px);\n  width: 100%;\n  min-width: -webkit-fit-content;\n  min-width: -moz-fit-content;\n  min-width: fit-content;\n  overflow: auto;\n  resize: none;\n  background-color: transparent;\n  color: #373737;\n  border: none; }\n.container {\n  display: flex;\n  flex-flow: column nowrap;\n  justify-content: flex-start;\n  box-sizing: border-box;\n  height: -webkit-fit-content;\n  height: -moz-fit-content;\n  height: fit-content;\n  width: 100%;\n  min-width: 200px;\n  padding: 15px; }\n.body--container {\n  padding: 6px 0px;\n  border-top: 1px solid #808080; }\n.descr--container, .param--container, .ret--container, .exam--container {\n  padding: 0px;\n  line-height: 15px;\n  margin-bottom: 7.5px; }\n.descr--container h5, .param--container h5, .ret--container h5, .exam--container h5 {\n    margin-bottom: 3.75px; }\n.descr--container ul, .param--container ul, .ret--container ul, .exam--container ul {\n    margin: 0px;\n    padding-left: 15px; }\n.descr--container ul li, .param--container ul li, .ret--container ul li, .exam--container ul li {\n      display: list-item; }\n.descr--container ul li .li--item, .param--container ul li .li--item, .ret--container ul li .li--item, .exam--container ul li .li--item {\n        display: flex;\n        flex-flow: row nowrap;\n        padding: 0px; }\n.descr--container ul li .li--item span, .param--container ul li .li--item span, .ret--container ul li .li--item span, .exam--container ul li .li--item span {\n          margin-right: 2px; }\n.exam--container h5 {\n  margin-top: 3.75px; }\n.exam--container .examp {\n  padding: 0px; }\n.exam--container .examp ul {\n    margin-bottom: 6px;\n    padding: 0px; }\n.exam--container .examp ul li {\n      display: flex;\n      border: 1px solid #808080;\n      font-family: 'Ubuntu Mono';\n      padding: 0px 0px 0px 2px;\n      margin: 4px 0px; }\n\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kZWwtdmlld2Vycy9hbGwtdmlld2Vycy9oZWxwLXZpZXdlci9DOlxcVXNlcnNcXGFraWJkcHRcXERvY3VtZW50c1xcQW5ndWxhclxcbW9iaXVzLXBhcmFtZXRyaWMtbW9kZWxsZXIvc3JjXFxhcHBcXG1vZGVsLXZpZXdlcnNcXGFsbC12aWV3ZXJzXFxoZWxwLXZpZXdlclxcaGVscC12aWV3ZXIuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL21vZGVsLXZpZXdlcnMvYWxsLXZpZXdlcnMvaGVscC12aWV3ZXIvQzpcXFVzZXJzXFxha2liZHB0XFxEb2N1bWVudHNcXEFuZ3VsYXJcXG1vYml1cy1wYXJhbWV0cmljLW1vZGVsbGVyL3NyY1xcYXBwXFxtb2RlbC12aWV3ZXJzXFxhbGwtdmlld2Vyc1xcZ2VuZXJhbC12aWV3ZXIuc2NzcyIsInNyYy9hcHAvbW9kZWwtdmlld2Vycy9hbGwtdmlld2Vycy9oZWxwLXZpZXdlci9DOlxcVXNlcnNcXGFraWJkcHRcXERvY3VtZW50c1xcQW5ndWxhclxcbW9iaXVzLXBhcmFtZXRyaWMtbW9kZWxsZXIvc3JjXFxzY3NzXFx2YXJpYWJsZXMuc2NzcyIsInNyYy9hcHAvbW9kZWwtdmlld2Vycy9hbGwtdmlld2Vycy9oZWxwLXZpZXdlci9DOlxcVXNlcnNcXGFraWJkcHRcXERvY3VtZW50c1xcQW5ndWxhclxcbW9iaXVzLXBhcmFtZXRyaWMtbW9kZWxsZXIvc3JjXFxzY3NzXFxjb2xvcnMuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFHQSxtRUFBWTtBQ0haO0VBQ0ksYUFBWTtFQUNaLFlBQVcsRUFDZDtBQUVEO0VBQ0ksd0JBQXVCO0VBQ3ZCLGVBQW9CO0VBQ3BCLFlBQVc7RUFDWCxtQkFBaUIsRUFDcEI7QUFFRDtFQUNJLGlCQUFnQjtFQUNoQixnQkNUUyxFRFVaO0FBRUQ7RUFDSSxpQkFBZ0IsRUFDbkI7QUFFRDtFQUNJLGtCQUFpQixFQUVwQjtBQUNEO0VBQ0ksaUJBQWdCO0VBQ2hCLG1CQUFrQixFQUNyQjtBRHZCRDtFQUNJLG9CQUFtQixFQUN0QjtBQUNEO0VBQ0ksaUJBQWdCO0VBQ2hCLGFBQVk7RUFFWiwyQkFBMEI7RUFDMUIsWUFBVztFQUNYLCtCQUFzQjtFQUF0Qiw0QkFBc0I7RUFBdEIsdUJBQXNCO0VBRXRCLGVBQWM7RUFDZCxhQUFZO0VBRVosOEJBQTZCO0VBQzdCLGVHVlk7RUhXWixhQUFZLEVBQ2Y7QUFFRDtFQUNJLGNBQWE7RUFDYix5QkFBd0I7RUFDeEIsNEJBQTJCO0VBQzNCLHVCQUFzQjtFQUV0Qiw0QkFBbUI7RUFBbkIseUJBQW1CO0VBQW5CLG9CQUFtQjtFQUNuQixZQUFXO0VBQ1gsaUJBQWdCO0VBQ2hCLGNFaENnQixFRmlDbkI7QUFFRDtFQUNJLGlCQUFnQjtFQUNoQiw4QkdyQ1ksRUhzQ2Y7QUFJRDtFQUNJLGFBQVk7RUFDWixrQkFKcUI7RUFLckIscUJBQTJCLEVBbUI5QjtBQXRCRDtJQUtRLHNCQUEyQixFQUM5QjtBQU5MO0lBUVEsWUFBVztJQUNYLG1CRW5EWSxFRitEZjtBQXJCTDtNQVdZLG1CQUFrQixFQVNyQjtBQXBCVDtRQWFnQixjQUFhO1FBQ2Isc0JBQXFCO1FBQ3JCLGFBQVcsRUFJZDtBQW5CYjtVQWlCb0Isa0JBQWlCLEVBQ3BCO0FBTWpCO0VBRVEsbUJBQXdCLEVBQzNCO0FBSEw7RUFLUSxhQUFZLEVBZWY7QUFwQkw7SUFVWSxtQkFBa0I7SUFDbEIsYUFBWSxFQVFmO0FBbkJUO01BYWdCLGNBQWE7TUFDYiwwQkdoRkE7TUhpRkEsMkJBQTBCO01BQzFCLHlCQUF3QjtNQUN4QixnQkFBZSxFQUNsQiIsImZpbGUiOiJzcmMvYXBwL21vZGVsLXZpZXdlcnMvYWxsLXZpZXdlcnMvaGVscC12aWV3ZXIvaGVscC12aWV3ZXIuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJAaW1wb3J0ICd+c2Nzcy9jb2xvcnMnO1xyXG5AaW1wb3J0ICd+c2Nzcy92YXJpYWJsZXMnO1xyXG5AaW1wb3J0ICcuLi9nZW5lcmFsLXZpZXdlci5zY3NzJztcclxuQGltcG9ydCB1cmwoJ2h0dHBzOi8vZm9udHMuZ29vZ2xlYXBpcy5jb20vY3NzP2ZhbWlseT1VYnVudHUrTW9ubycpO1xyXG5cclxuaDJ7XHJcbiAgICBwYWRkaW5nLWJvdHRvbTogNnB4O1xyXG59XHJcbiNoZWxwLWNvbnRhaW5lciB7XHJcbiAgICBtYXJnaW4tdG9wOiA0MHB4O1xyXG4gICAgcGFkZGluZzogMHB4O1xyXG5cclxuICAgIGhlaWdodDogY2FsYygxMDB2aCAtIDQwcHgpOyAvLyRoZWFkZXItaGVpZ2h0XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIG1pbi13aWR0aDogZml0LWNvbnRlbnQ7XHJcblxyXG4gICAgb3ZlcmZsb3c6IGF1dG87XHJcbiAgICByZXNpemU6IG5vbmU7XHJcblxyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XHJcbiAgICBjb2xvcjogJGNvbG9yODtcclxuICAgIGJvcmRlcjogbm9uZTtcclxufVxyXG5cclxuLmNvbnRhaW5lcntcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBmbGV4LWZsb3c6IGNvbHVtbiBub3dyYXA7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtc3RhcnQ7XHJcbiAgICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xyXG5cclxuICAgIGhlaWdodDogZml0LWNvbnRlbnQ7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIG1pbi13aWR0aDogMjAwcHg7XHJcbiAgICBwYWRkaW5nOiAkc21hbGwtcGFkZGluZztcclxufVxyXG5cclxuLmJvZHktLWNvbnRhaW5lcntcclxuICAgIHBhZGRpbmc6IDZweCAwcHg7XHJcbiAgICBib3JkZXItdG9wOiAxcHggc29saWQgJGNvbG9yMTtcclxufVxyXG5cclxuJGxuLWhlaWdodDogJGZzaXplMiArIDNweDtcclxuXHJcbi5kZXNjci0tY29udGFpbmVyLCAucGFyYW0tLWNvbnRhaW5lciwgLnJldC0tY29udGFpbmVyLCAuZXhhbS0tY29udGFpbmVye1xyXG4gICAgcGFkZGluZzogMHB4O1xyXG4gICAgbGluZS1oZWlnaHQ6ICRsbi1oZWlnaHQ7XHJcbiAgICBtYXJnaW4tYm90dG9tOiAkbG4taGVpZ2h0LzI7XHJcbiAgICBoNXtcclxuICAgICAgICBtYXJnaW4tYm90dG9tOiAkbG4taGVpZ2h0LzQ7XHJcbiAgICB9XHJcbiAgICB1bHtcclxuICAgICAgICBtYXJnaW46IDBweDtcclxuICAgICAgICBwYWRkaW5nLWxlZnQ6ICRzbWFsbC1wYWRkaW5nO1xyXG4gICAgICAgIGxpe1xyXG4gICAgICAgICAgICBkaXNwbGF5OiBsaXN0LWl0ZW07XHJcbiAgICAgICAgICAgIC5saS0taXRlbXtcclxuICAgICAgICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAgICAgICAgICBmbGV4LWZsb3c6IHJvdyBub3dyYXA7XHJcbiAgICAgICAgICAgICAgICBwYWRkaW5nOjBweDtcclxuICAgICAgICAgICAgICAgIHNwYW57XHJcbiAgICAgICAgICAgICAgICAgICAgbWFyZ2luLXJpZ2h0OiAycHg7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcbn1cclxuXHJcbi5leGFtLS1jb250YWluZXJ7XHJcbiAgICBoNXtcclxuICAgICAgICBtYXJnaW4tdG9wOiAkbG4taGVpZ2h0LzQ7XHJcbiAgICB9XHJcbiAgICAuZXhhbXB7XHJcbiAgICAgICAgcGFkZGluZzogMHB4O1xyXG4gICAgICAgIC8vIHB7XHJcbiAgICAgICAgLy8gICAgIHBhZGRpbmctbGVmdDogJHNtYWxsLXBhZGRpbmc7XHJcbiAgICAgICAgLy8gfVxyXG4gICAgICAgIHVse1xyXG4gICAgICAgICAgICBtYXJnaW4tYm90dG9tOiA2cHg7XHJcbiAgICAgICAgICAgIHBhZGRpbmc6IDBweDtcclxuICAgICAgICAgICAgbGl7XHJcbiAgICAgICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgICAgICAgICAgYm9yZGVyOiAxcHggc29saWQgJGNvbG9yMTtcclxuICAgICAgICAgICAgICAgIGZvbnQtZmFtaWx5OiAnVWJ1bnR1IE1vbm8nO1xyXG4gICAgICAgICAgICAgICAgcGFkZGluZzogMHB4IDBweCAwcHggMnB4O1xyXG4gICAgICAgICAgICAgICAgbWFyZ2luOiA0cHggMHB4O1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59IiwiOmhvc3Qge1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbn1cclxuXHJcbmRpdiB7XHJcbiAgICBmb250LWZhbWlseTogc2Fucy1zZXJpZjtcclxuICAgIGNvbG9yOiByZ2IoODAsODAsODApO1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBwYWRkaW5nLWxlZnQ6MTBweDtcclxufVxyXG5cclxuaDUge1xyXG4gICAgZm9udC13ZWlnaHQ6IDcwMDtcclxuICAgIGZvbnQtc2l6ZTogJGZzaXplMjtcclxufVxyXG5cclxuLmZ1bmNEZXNjIHtcclxuICAgIGZvbnQtd2VpZ2h0OiA2MDA7XHJcbn1cclxuXHJcbi5wYXJhbVAge1xyXG4gICAgcGFkZGluZy1sZWZ0OiA1cHg7XHJcblxyXG59XHJcbnNwYW4ge1xyXG4gICAgZm9udC13ZWlnaHQ6IDU1MDtcclxuICAgIGZvbnQtc3R5bGU6IGl0YWxpYztcclxufVxyXG4iLCIkcGFkZGluZzogNDBweDsgLy8gPyBub3QgdXNlZFxyXG4kc21hbGwtcGFkZGluZzogMTVweDtcclxuJGhlYWRlci1oZWlnaHQ6IDQwcHg7XHJcblxyXG4kZnNpemUxOiAxNXB4O1xyXG4kZnNpemUyOiAxMnB4O1xyXG4kZnNpemUzOiAzMHB4O1xyXG5cclxuJHBvcnQtc2l6ZTogMTVweDtcclxuJGRlZmF1bHQtc2lkZS1wYWRkaW5nOiAxNXB4O1xyXG4iLCJcclxuJGNvbG9yMTogIzgwODA4MDtcclxuJGNvbG9yMjogIzk5OTk5OTtcclxuJGNvbG9yMzogI0IzQjNCMzsgXHJcbiRjb2xvcjQ6ICNDQ0NDQ0M7XHJcbiRjb2xvcjU6ICNFNkU2RTY7XHJcbiRjb2xvcjUtNTogcmdiKDI0NSwgMjQ1LCAyNDUpO1xyXG4kY29sb3I2OiByZ2IoMjUwLCAyNTAsIDI1MSk7XHJcblxyXG4kY29sb3I3OiB3aGl0ZTtcclxuJGNvbG9yODogIzM3MzczNztcclxuXHJcbiRzZWxlY3RlZC1jb2xvcjogcmdiKDAsIDAsIDEwOSk7XHJcbiRob3Zlci1jb2xvcjogJGNvbG9yMjtcclxuXHJcbiRlcnJvci1jb2xvcjogI0U5NDg1ODsgLy9waW5rLXJlZFxyXG4kZXJyb3ItY29sb3ItbHQ6IHJnYigyNTUsIDIyMCwgMjI0KTtcclxuJHBjb2xvcjI6ICNGM0EzMkE7IC8vb3JhbmdlLXllbGxvd1xyXG4kcHJpbnQtY29sb3I6ICM4MkJGNkU7IC8vbGlnaHRncmVlblxyXG4kcHJpbnQtY29sb3ItbHQ6IHJnYigyMzAsIDI1NSwgMjIxKTtcclxuXHJcbi8vICRwcm9kLWJhY2tncm91bmQtY29sb3I6IHJnYigyNTAsMjUwLDI1MCk7XHJcbi8vICRiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMjIwLDIyMCwyMjApO1xyXG4kZnVuY3Rpb24tdGV4dC1jb2xvcjogcmdiKDE5MCwgMTQwLCAzMCk7XHJcbiRmdW5jdGlvbi10ZXh0LWNvbG9yMjogcmdiKDE4LCAxMjYsIDEzNilcclxuIl19 */"

/***/ }),

/***/ "./src/app/model-viewers/all-viewers/help-viewer/help-viewer.component.ts":
/*!********************************************************************************!*\
  !*** ./src/app/model-viewers/all-viewers/help-viewer/help-viewer.component.ts ***!
  \********************************************************************************/
/*! exports provided: HelpViewerComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "HelpViewerComponent", function() { return HelpViewerComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _shared_decorators__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @shared/decorators */ "./src/app/shared/decorators/index.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};


/**
 * HelpViewerComponent
 */
var HelpViewerComponent = /** @class */ (function () {
    /**
     * constructor
     */
    function HelpViewerComponent() {
        this.ModuleDoc = _shared_decorators__WEBPACK_IMPORTED_MODULE_1__["ModuleDocList"];
        // console.log(`Help Viewer Created`);
    }
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", Object)
    ], HelpViewerComponent.prototype, "output", void 0);
    HelpViewerComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'help-viewer',
            template: __webpack_require__(/*! ./help-viewer.component.html */ "./src/app/model-viewers/all-viewers/help-viewer/help-viewer.component.html"),
            styles: [__webpack_require__(/*! ./help-viewer.component.scss */ "./src/app/model-viewers/all-viewers/help-viewer/help-viewer.component.scss")]
        }),
        __metadata("design:paramtypes", [])
    ], HelpViewerComponent);
    return HelpViewerComponent;
}());



/***/ }),

/***/ "./src/app/model-viewers/model-viewers-container.component.html":
/*!**********************************************************************!*\
  !*** ./src/app/model-viewers/model-viewers-container.component.html ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class='viewers-container'>  \r\n\r\n    <div class='container__header'>\r\n        <div class=\"header-btn-group\">\r\n            <button class='btn' mat-icon-button *ngFor='let view of Viewers;' id='{{view.name}}'\r\n            [class.active]='view.name == activeView.name' (click)='updateView(view)' title='{{view.name}}'>\r\n                <mat-icon [svgIcon]='\"c\"+view.name'></mat-icon>\r\n            </button>\r\n        </div>\r\n    </div>\r\n\r\n    <div class='content__panel'>\r\n        <ng-container #vc></ng-container>\r\n    </div>\r\n\r\n</div>"

/***/ }),

/***/ "./src/app/model-viewers/model-viewers-container.component.scss":
/*!**********************************************************************!*\
  !*** ./src/app/model-viewers/model-viewers-container.component.scss ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".viewers-container {\n  position: relative;\n  display: block;\n  height: 100%;\n  overflow: hidden; }\n  .viewers-container .container__header {\n    position: absolute;\n    left: 0;\n    top: 0;\n    display: flex;\n    background-color: transparent;\n    height: 40px;\n    padding: 0px;\n    margin: 0px; }\n  .viewers-container .container__header .header-btn-group {\n      height: 40px;\n      padding: 0px;\n      margin: 0px;\n      overflow: hidden;\n      background-color: transparent;\n      z-index: 1; }\n  .viewers-container .content__panel {\n    background-color: transparent;\n    width: 100%;\n    height: 100%;\n    overflow: hidden;\n    padding: 0px;\n    margin: 0px; }\n  .viewers-container button {\n    display: inline-block;\n    vertical-align: bottom;\n    background-color: transparent;\n    color: #808080;\n    border: none;\n    outline: none;\n    cursor: pointer;\n    padding: 0px;\n    width: 34px;\n    height: 34px;\n    transition: 0.3s;\n    font-size: 14px; }\n  .viewers-container button:hover {\n      color: #E6E6E6; }\n  .viewers-container button.active {\n      color: #00006d; }\n\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kZWwtdmlld2Vycy9DOlxcVXNlcnNcXGFraWJkcHRcXERvY3VtZW50c1xcQW5ndWxhclxcbW9iaXVzLXBhcmFtZXRyaWMtbW9kZWxsZXIvc3JjXFxhcHBcXG1vZGVsLXZpZXdlcnNcXG1vZGVsLXZpZXdlcnMtY29udGFpbmVyLmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC9tb2RlbC12aWV3ZXJzL0M6XFxVc2Vyc1xcYWtpYmRwdFxcRG9jdW1lbnRzXFxBbmd1bGFyXFxtb2JpdXMtcGFyYW1ldHJpYy1tb2RlbGxlci9zcmNcXHNjc3NcXHZhcmlhYmxlcy5zY3NzIiwic3JjL2FwcC9tb2RlbC12aWV3ZXJzL0M6XFxVc2Vyc1xcYWtpYmRwdFxcRG9jdW1lbnRzXFxBbmd1bGFyXFxtb2JpdXMtcGFyYW1ldHJpYy1tb2RlbGxlci9zcmNcXHNjc3NcXGNvbG9ycy5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUtBO0VBQ0ksbUJBQWtCO0VBQ2xCLGVBQWM7RUFDZCxhQUFZO0VBQ1osaUJBQWdCLEVBcURuQjtFQXpERDtJQU9RLG1CQUFrQjtJQUNsQixRQUFPO0lBQ1AsT0FBTTtJQUNOLGNBQWE7SUFDYiw4QkFBNkI7SUFDN0IsYUNmWTtJRGdCWixhQUFZO0lBQ1osWUFBVyxFQVdkO0VBekJMO01Ba0JZLGFDckJRO01Ec0JSLGFBQVk7TUFDWixZQUFXO01BQ1gsaUJBQWdCO01BQ2hCLDhCQUE2QjtNQUM3QixXQUFVLEVBQ2I7RUF4QlQ7SUEyQlEsOEJBQTZCO0lBQzdCLFlBQVc7SUFDWCxhQUFZO0lBQ1osaUJBQWdCO0lBQ2hCLGFBQVk7SUFDWixZQUFXLEVBR2Q7RUFuQ0w7SUFxQ1Esc0JBQXFCO0lBQ3JCLHVCQUFzQjtJQUN0Qiw4QkFBNkI7SUFDN0IsZUU1Q1E7SUY2Q1IsYUFBWTtJQUNaLGNBQWE7SUFDYixnQkFBZTtJQUNmLGFBQVk7SUFDWixZQUFXO0lBQ1gsYUFBWTtJQUNaLGlCQUFnQjtJQUNoQixnQkFBZSxFQU9sQjtFQXZETDtNQWtEWSxlRWxESSxFRm1EUDtFQW5EVDtNQXFEWSxlRTlDbUIsRUYrQ3RCIiwiZmlsZSI6InNyYy9hcHAvbW9kZWwtdmlld2Vycy9tb2RlbC12aWV3ZXJzLWNvbnRhaW5lci5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIkBpbXBvcnQgJ35zY3NzL2NvbG9ycyc7XHJcbkBpbXBvcnQgJ35zY3NzL3ZhcmlhYmxlcyc7XHJcblxyXG4vLyB0aGUgaG9zdFxyXG5cclxuLnZpZXdlcnMtY29udGFpbmVye1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xyXG5cclxuICAgIC5jb250YWluZXJfX2hlYWRlcntcclxuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgICAgbGVmdDogMDtcclxuICAgICAgICB0b3A6IDA7XHJcbiAgICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcclxuICAgICAgICBoZWlnaHQ6ICRoZWFkZXItaGVpZ2h0O1xyXG4gICAgICAgIHBhZGRpbmc6IDBweDtcclxuICAgICAgICBtYXJnaW46IDBweDtcclxuICAgIFxyXG4gICAgICAgIC5oZWFkZXItYnRuLWdyb3VwIHtcclxuICAgICAgICAgICAgLy9kaXNwbGF5OiBpbmxpbmU7XHJcbiAgICAgICAgICAgIGhlaWdodDogJGhlYWRlci1oZWlnaHQ7XHJcbiAgICAgICAgICAgIHBhZGRpbmc6IDBweDtcclxuICAgICAgICAgICAgbWFyZ2luOiAwcHg7XHJcbiAgICAgICAgICAgIG92ZXJmbG93OiBoaWRkZW47XHJcbiAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xyXG4gICAgICAgICAgICB6LWluZGV4OiAxO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIC5jb250ZW50X19wYW5lbHtcclxuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcclxuICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICBoZWlnaHQ6IDEwMCU7IFxyXG4gICAgICAgIG92ZXJmbG93OiBoaWRkZW47XHJcbiAgICAgICAgcGFkZGluZzogMHB4O1xyXG4gICAgICAgIG1hcmdpbjogMHB4O1xyXG4gICAgXHJcbiAgICAgICAgLy9wYWRkaW5nOiAxMHB4IDE1cHg7XHJcbiAgICB9XHJcbiAgICBidXR0b24ge1xyXG4gICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICAgICAgICB2ZXJ0aWNhbC1hbGlnbjogYm90dG9tO1xyXG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xyXG4gICAgICAgIGNvbG9yOiAkY29sb3IxO1xyXG4gICAgICAgIGJvcmRlcjogbm9uZTtcclxuICAgICAgICBvdXRsaW5lOiBub25lO1xyXG4gICAgICAgIGN1cnNvcjogcG9pbnRlcjtcclxuICAgICAgICBwYWRkaW5nOiAwcHg7XHJcbiAgICAgICAgd2lkdGg6IDM0cHg7XHJcbiAgICAgICAgaGVpZ2h0OiAzNHB4O1xyXG4gICAgICAgIHRyYW5zaXRpb246IDAuM3M7XHJcbiAgICAgICAgZm9udC1zaXplOiAxNHB4O1xyXG4gICAgICAgICY6aG92ZXIge1xyXG4gICAgICAgICAgICBjb2xvcjokY29sb3I1O1xyXG4gICAgICAgIH1cclxuICAgICAgICAmLmFjdGl2ZSB7XHJcbiAgICAgICAgICAgIGNvbG9yOiAkc2VsZWN0ZWQtY29sb3I7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxufVxyXG5cclxuXHJcbiIsIiRwYWRkaW5nOiA0MHB4OyAvLyA/IG5vdCB1c2VkXHJcbiRzbWFsbC1wYWRkaW5nOiAxNXB4O1xyXG4kaGVhZGVyLWhlaWdodDogNDBweDtcclxuXHJcbiRmc2l6ZTE6IDE1cHg7XHJcbiRmc2l6ZTI6IDEycHg7XHJcbiRmc2l6ZTM6IDMwcHg7XHJcblxyXG4kcG9ydC1zaXplOiAxNXB4O1xyXG4kZGVmYXVsdC1zaWRlLXBhZGRpbmc6IDE1cHg7XHJcbiIsIlxyXG4kY29sb3IxOiAjODA4MDgwO1xyXG4kY29sb3IyOiAjOTk5OTk5O1xyXG4kY29sb3IzOiAjQjNCM0IzOyBcclxuJGNvbG9yNDogI0NDQ0NDQztcclxuJGNvbG9yNTogI0U2RTZFNjtcclxuJGNvbG9yNS01OiByZ2IoMjQ1LCAyNDUsIDI0NSk7XHJcbiRjb2xvcjY6IHJnYigyNTAsIDI1MCwgMjUxKTtcclxuXHJcbiRjb2xvcjc6IHdoaXRlO1xyXG4kY29sb3I4OiAjMzczNzM3O1xyXG5cclxuJHNlbGVjdGVkLWNvbG9yOiByZ2IoMCwgMCwgMTA5KTtcclxuJGhvdmVyLWNvbG9yOiAkY29sb3IyO1xyXG5cclxuJGVycm9yLWNvbG9yOiAjRTk0ODU4OyAvL3BpbmstcmVkXHJcbiRlcnJvci1jb2xvci1sdDogcmdiKDI1NSwgMjIwLCAyMjQpO1xyXG4kcGNvbG9yMjogI0YzQTMyQTsgLy9vcmFuZ2UteWVsbG93XHJcbiRwcmludC1jb2xvcjogIzgyQkY2RTsgLy9saWdodGdyZWVuXHJcbiRwcmludC1jb2xvci1sdDogcmdiKDIzMCwgMjU1LCAyMjEpO1xyXG5cclxuLy8gJHByb2QtYmFja2dyb3VuZC1jb2xvcjogcmdiKDI1MCwyNTAsMjUwKTtcclxuLy8gJGJhY2tncm91bmQtY29sb3I6IHJnYigyMjAsMjIwLDIyMCk7XHJcbiRmdW5jdGlvbi10ZXh0LWNvbG9yOiByZ2IoMTkwLCAxNDAsIDMwKTtcclxuJGZ1bmN0aW9uLXRleHQtY29sb3IyOiByZ2IoMTgsIDEyNiwgMTM2KVxyXG4iXX0= */"

/***/ }),

/***/ "./src/app/model-viewers/model-viewers-container.component.ts":
/*!********************************************************************!*\
  !*** ./src/app/model-viewers/model-viewers-container.component.ts ***!
  \********************************************************************/
/*! exports provided: DataViewersContainerComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DataViewersContainerComponent", function() { return DataViewersContainerComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _model_viewers_config__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./model-viewers.config */ "./src/app/model-viewers/model-viewers.config.ts");
/* harmony import */ var _services__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @services */ "./src/app/core/services/index.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};



/**
 * A component that contains all the viewers.
 * This component is used in /app/appmodule/app.component.html
 */
var DataViewersContainerComponent = /** @class */ (function () {
    /**
     * Construct the viewer container.
     * @param injector
     * @param r
     */
    function DataViewersContainerComponent(injector, r, dataService) {
        this.injector = injector;
        this.r = r;
        this.dataService = dataService;
        this.views = [];
        this.Viewers = _model_viewers_config__WEBPACK_IMPORTED_MODULE_1__["Viewers"];
        // do nothing
    }
    /**
     * ngOnInit
     */
    DataViewersContainerComponent.prototype.ngOnInit = function () {
        this.activeView = this.Viewers[0];
        if (this.dataService.activeView) {
            for (var _i = 0, _a = this.Viewers; _i < _a.length; _i++) {
                var view = _a[_i];
                if (view.name === this.dataService.activeView) {
                    this.activeView = view;
                }
            }
        }
        this.updateView(this.activeView);
    };
    /**
     * ngOnDestroy
     */
    DataViewersContainerComponent.prototype.ngOnDestroy = function () {
        this.dataService.activeView = this.activeView.name;
        this.vc.clear();
        for (var view in this.views) {
            if (this.views[view]) {
                this.views[view].destroy();
            }
        }
    };
    /**
     * ngDoCheck
     */
    DataViewersContainerComponent.prototype.ngDoCheck = function () {
        if (this.dataService.helpView[0] === true) {
            var view = void 0;
            for (var _i = 0, _a = this.Viewers; _i < _a.length; _i++) {
                var v = _a[_i];
                if (v.name === 'Help') {
                    view = v;
                }
            }
            this.dataService.toggleHelp(false);
            this.updateView(view);
        }
        else {
            this.updateValue();
        }
    };
    /**
     * createView
     * @param view
     */
    DataViewersContainerComponent.prototype.createView = function (view) {
        var component = view.component;
        var factory = this.r.resolveComponentFactory(component);
        var componentRef = factory.create(this.injector);
        /*
        if (view.name != 'Console'){
            componentRef.instance["data"] = this.data;
        }
        */
        return componentRef;
    };
    /**
     * updateView
     * @param view
     */
    DataViewersContainerComponent.prototype.updateView = function (view) {
        this.activeView = view;
        if (this.views[this.activeView.name] === undefined) {
            this.views[this.activeView.name] = this.createView(view);
        }
        this.updateValue();
        this.vc.detach();
        this.vc.insert(this.views[this.activeView.name].hostView);
    };
    /**
     * updateValue
     */
    DataViewersContainerComponent.prototype.updateValue = function () {
        try {
            var componentRef = this.views[this.activeView.name];
            if (this.activeView.name === 'Help') {
                componentRef.instance['output'] = this.dataService.helpView[1];
            }
            else if (this.activeView.name !== 'Console') {
                componentRef.instance['data'] = this.data;
                // } else {
                //     componentRef.instance['scrollcheck'] = true;
            }
        }
        catch (ex) {
            // console.log(`Active View not defined`);
        }
    };
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"])('vc', { read: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewContainerRef"] }),
        __metadata("design:type", _angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewContainerRef"])
    ], DataViewersContainerComponent.prototype, "vc", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", Object)
    ], DataViewersContainerComponent.prototype, "data", void 0);
    DataViewersContainerComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            // tslint:disable-next-line:component-selector
            selector: 'model-viewers-container',
            template: __webpack_require__(/*! ./model-viewers-container.component.html */ "./src/app/model-viewers/model-viewers-container.component.html"),
            styles: [__webpack_require__(/*! ./model-viewers-container.component.scss */ "./src/app/model-viewers/model-viewers-container.component.scss")]
        }),
        __metadata("design:paramtypes", [_angular_core__WEBPACK_IMPORTED_MODULE_0__["Injector"], _angular_core__WEBPACK_IMPORTED_MODULE_0__["ComponentFactoryResolver"], _services__WEBPACK_IMPORTED_MODULE_2__["DataService"]])
    ], DataViewersContainerComponent);
    return DataViewersContainerComponent;
}());



/***/ }),

/***/ "./src/app/model-viewers/model-viewers-container.module.ts":
/*!*****************************************************************!*\
  !*** ./src/app/model-viewers/model-viewers-container.module.ts ***!
  \*****************************************************************/
/*! exports provided: DataViewersContainer */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DataViewersContainer", function() { return DataViewersContainer; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/fesm5/common.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm5/forms.js");
/* harmony import */ var _model_viewers_container_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./model-viewers-container.component */ "./src/app/model-viewers/model-viewers-container.component.ts");
/* harmony import */ var _model_viewers_config__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./model-viewers.config */ "./src/app/model-viewers/model-viewers.config.ts");
/* harmony import */ var _all_viewers_console_viewer_console_viewer_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./all-viewers/console-viewer/console-viewer.component */ "./src/app/model-viewers/all-viewers/console-viewer/console-viewer.component.ts");
/* harmony import */ var _all_viewers_help_viewer_help_viewer_component__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./all-viewers/help-viewer/help-viewer.component */ "./src/app/model-viewers/all-viewers/help-viewer/help-viewer.component.ts");
/* harmony import */ var _all_viewers_gi_viewer_gi_viewer_module__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./all-viewers/gi-viewer/gi-viewer.module */ "./src/app/model-viewers/all-viewers/gi-viewer/gi-viewer.module.ts");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/material */ "./node_modules/@angular/material/esm5/material.es5.js");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};





// viewers




// import { ThreejsViewerComponent } from './viewers/gi-viewer/threejs/threejs-viewer.component';
// import { MobiusCesium } from './viewers/cesium-viewer/mobius-cesium.module';
// import { VisualiseComponent } from "./viewers/cesium-viewer/setting/visualise.component";
// import { AttributesComponent } from "./viewers/cesium-viewer/setting/attributes.copmponent";
/**
 * DataViewersContainer, NgModule
 */
var DataViewersContainer = /** @class */ (function () {
    /**
     * constructor
     */
    function DataViewersContainer() {
        // do nothing
    }
    DataViewersContainer = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["NgModule"])({
            declarations: [
                _model_viewers_container_component__WEBPACK_IMPORTED_MODULE_3__["DataViewersContainerComponent"],
                // TextViewerComponent,
                _all_viewers_console_viewer_console_viewer_component__WEBPACK_IMPORTED_MODULE_5__["ConsoleViewerComponent"],
                _all_viewers_help_viewer_help_viewer_component__WEBPACK_IMPORTED_MODULE_6__["HelpViewerComponent"],
            ],
            exports: [
                _model_viewers_container_component__WEBPACK_IMPORTED_MODULE_3__["DataViewersContainerComponent"]
            ],
            imports: [
                _angular_common__WEBPACK_IMPORTED_MODULE_1__["CommonModule"],
                _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormsModule"],
                _all_viewers_gi_viewer_gi_viewer_module__WEBPACK_IMPORTED_MODULE_7__["GIViewerModule"],
                _angular_material__WEBPACK_IMPORTED_MODULE_8__["MatIconModule"]
                // SharedModule
            ],
            entryComponents: _model_viewers_config__WEBPACK_IMPORTED_MODULE_4__["VIEWER_ARR"].slice(),
            providers: []
        }),
        __metadata("design:paramtypes", [])
    ], DataViewersContainer);
    return DataViewersContainer;
}());



/***/ }),

/***/ "./src/app/model-viewers/model-viewers.config.ts":
/*!*******************************************************!*\
  !*** ./src/app/model-viewers/model-viewers.config.ts ***!
  \*******************************************************/
/*! exports provided: VIEWER_ARR, Viewers */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "VIEWER_ARR", function() { return VIEWER_ARR; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Viewers", function() { return Viewers; });
/* harmony import */ var _all_viewers_console_viewer_console_viewer_component__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./all-viewers/console-viewer/console-viewer.component */ "./src/app/model-viewers/all-viewers/console-viewer/console-viewer.component.ts");
/* harmony import */ var _all_viewers_help_viewer_help_viewer_component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./all-viewers/help-viewer/help-viewer.component */ "./src/app/model-viewers/all-viewers/help-viewer/help-viewer.component.ts");
/* harmony import */ var _all_viewers_gi_viewer_gi_viewer_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./all-viewers/gi-viewer/gi-viewer.component */ "./src/app/model-viewers/all-viewers/gi-viewer/gi-viewer.component.ts");
// Step-1: Add new ViewerComponet here
// import { TextViewerComponent } from './all-viewers/text-viewer/viewer.component';



var VIEWER_ARR = [
    // Step-2: Add Component here
    _all_viewers_gi_viewer_gi_viewer_component__WEBPACK_IMPORTED_MODULE_2__["GIViewerComponent"],
    _all_viewers_console_viewer_console_viewer_component__WEBPACK_IMPORTED_MODULE_0__["ConsoleViewerComponent"],
    _all_viewers_help_viewer_help_viewer_component__WEBPACK_IMPORTED_MODULE_1__["HelpViewerComponent"],
];
var Viewers = [
    // Step-3: Add Viewer Definition here: name, icon and component
    { name: '3D Viewer', icon: undefined, component: _all_viewers_gi_viewer_gi_viewer_component__WEBPACK_IMPORTED_MODULE_2__["GIViewerComponent"] },
    { name: 'Console', icon: undefined, component: _all_viewers_console_viewer_console_viewer_component__WEBPACK_IMPORTED_MODULE_0__["ConsoleViewerComponent"] },
    { name: 'Help', icon: undefined, component: _all_viewers_help_viewer_help_viewer_component__WEBPACK_IMPORTED_MODULE_1__["HelpViewerComponent"] },
];


/***/ }),

/***/ "./src/app/shared/components/add-components/add_input.component.ts":
/*!*************************************************************************!*\
  !*** ./src/app/shared/components/add-components/add_input.component.ts ***!
  \*************************************************************************/
/*! exports provided: AddInputComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AddInputComponent", function() { return AddInputComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};

var AddInputComponent = /** @class */ (function () {
    function AddInputComponent() {
    }
    AddInputComponent.prototype.addInput = function () {
        return;
        /*
        let newPort = PortUtils.getNewInput();
        newPort.parentNode = this.node;
        this.node.input.push(newPort);
        */
    };
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", Object)
    ], AddInputComponent.prototype, "node", void 0);
    AddInputComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'add-input',
            template: "<button (click)='addInput()'>AddInput</button>"
        }),
        __metadata("design:paramtypes", [])
    ], AddInputComponent);
    return AddInputComponent;
}());



/***/ }),

/***/ "./src/app/shared/components/add-components/add_node.component.ts":
/*!************************************************************************!*\
  !*** ./src/app/shared/components/add-components/add_node.component.ts ***!
  \************************************************************************/
/*! exports provided: AddNodeComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AddNodeComponent", function() { return AddNodeComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _models_node__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @models/node */ "./src/app/shared/models/node/index.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};


var AddNodeComponent = /** @class */ (function () {
    function AddNodeComponent() {
    }
    AddNodeComponent.prototype.addNode = function () { this.flowchart.nodes.push(_models_node__WEBPACK_IMPORTED_MODULE_1__["NodeUtils"].getNewNode()); };
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", Object)
    ], AddNodeComponent.prototype, "flowchart", void 0);
    AddNodeComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'add-node',
            template: "<button (click)='addNode()'>AddNode</button>"
        }),
        __metadata("design:paramtypes", [])
    ], AddNodeComponent);
    return AddNodeComponent;
}());



/***/ }),

/***/ "./src/app/shared/components/add-components/add_output.component.ts":
/*!**************************************************************************!*\
  !*** ./src/app/shared/components/add-components/add_output.component.ts ***!
  \**************************************************************************/
/*! exports provided: AddOutputComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AddOutputComponent", function() { return AddOutputComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};

var AddOutputComponent = /** @class */ (function () {
    function AddOutputComponent() {
    }
    AddOutputComponent.prototype.addOutput = function () {
        return;
        /*
        let newPort = PortUtils.getNewOutput();
        newPort.parentNode = this.node;
        this.node.output.push(newPort);
        */
    };
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", Object)
    ], AddOutputComponent.prototype, "node", void 0);
    AddOutputComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'add-output',
            template: "<button (click)='addOutput()'>AddOutput</button>"
        }),
        __metadata("design:paramtypes", [])
    ], AddOutputComponent);
    return AddOutputComponent;
}());



/***/ }),

/***/ "./src/app/shared/components/execute/execute.component.html":
/*!******************************************************************!*\
  !*** ./src/app/shared/components/execute/execute.component.html ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<button id='executeButton' class=\"btn\" mat-icon-button title=\"Execute\" (click)=\"execute()\">\r\n    <mat-icon>play_circle_outline</mat-icon>\r\n</button>\r\n"

/***/ }),

/***/ "./src/app/shared/components/execute/execute.component.scss":
/*!******************************************************************!*\
  !*** ./src/app/shared/components/execute/execute.component.scss ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "panel-header button {\n  display: inline-block;\n  vertical-align: bottom;\n  background-color: transparent;\n  color: #808080;\n  border: none;\n  outline: none;\n  cursor: pointer;\n  padding: 0px;\n  width: 34px;\n  height: 34px;\n  transition: 0.3s;\n  font-size: 15px; }\n\nbutton:hover {\n  color: #00006d; }\n\npanel-header button.active {\n  color: #00006d; }\n\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc2hhcmVkL2NvbXBvbmVudHMvZXhlY3V0ZS9DOlxcVXNlcnNcXGFraWJkcHRcXERvY3VtZW50c1xcQW5ndWxhclxcbW9iaXVzLXBhcmFtZXRyaWMtbW9kZWxsZXIvc3JjXFxzY3NzXFxoZWFkZXItYnV0dG9uLnNjc3MiLCJzcmMvYXBwL3NoYXJlZC9jb21wb25lbnRzL2V4ZWN1dGUvQzpcXFVzZXJzXFxha2liZHB0XFxEb2N1bWVudHNcXEFuZ3VsYXJcXG1vYml1cy1wYXJhbWV0cmljLW1vZGVsbGVyL3NyY1xcc2Nzc1xcY29sb3JzLnNjc3MiLCJzcmMvYXBwL3NoYXJlZC9jb21wb25lbnRzL2V4ZWN1dGUvQzpcXFVzZXJzXFxha2liZHB0XFxEb2N1bWVudHNcXEFuZ3VsYXJcXG1vYml1cy1wYXJhbWV0cmljLW1vZGVsbGVyL3NyY1xcc2Nzc1xcdmFyaWFibGVzLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBR0E7RUFDSSxzQkFBcUI7RUFDckIsdUJBQXNCO0VBQ3RCLDhCQUE2QjtFQUM3QixlQ05ZO0VET1osYUFBWTtFQUNaLGNBQWE7RUFDYixnQkFBZTtFQUNmLGFBQVk7RUFDWixZQUFXO0VBQ1gsYUFBWTtFQUNaLGlCQUFnQjtFQUNoQixnQkVYUyxFRllaOztBQUVEO0VBQ0ksZUNQMkIsRURROUI7O0FBRUQ7RUFDSSxlQ1gyQixFRFk5QiIsImZpbGUiOiJzcmMvYXBwL3NoYXJlZC9jb21wb25lbnRzL2V4ZWN1dGUvZXhlY3V0ZS5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIkBpbXBvcnQgJ35zY3NzL3ZhcmlhYmxlcyc7XHJcbkBpbXBvcnQgJ35zY3NzL2NvbG9ycyc7XHJcblxyXG5wYW5lbC1oZWFkZXIgYnV0dG9uIHtcclxuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICAgIHZlcnRpY2FsLWFsaWduOiBib3R0b207XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcclxuICAgIGNvbG9yOiAkY29sb3IxO1xyXG4gICAgYm9yZGVyOiBub25lO1xyXG4gICAgb3V0bGluZTogbm9uZTtcclxuICAgIGN1cnNvcjogcG9pbnRlcjtcclxuICAgIHBhZGRpbmc6IDBweDtcclxuICAgIHdpZHRoOiAzNHB4O1xyXG4gICAgaGVpZ2h0OiAzNHB4O1xyXG4gICAgdHJhbnNpdGlvbjogMC4zcztcclxuICAgIGZvbnQtc2l6ZTogJGZzaXplMTtcclxufVxyXG5cclxuYnV0dG9uOmhvdmVyIHtcclxuICAgIGNvbG9yOiRzZWxlY3RlZC1jb2xvcjtcclxufVxyXG5cclxucGFuZWwtaGVhZGVyIGJ1dHRvbi5hY3RpdmUge1xyXG4gICAgY29sb3I6ICRzZWxlY3RlZC1jb2xvcjtcclxufVxyXG4iLCJcclxuJGNvbG9yMTogIzgwODA4MDtcclxuJGNvbG9yMjogIzk5OTk5OTtcclxuJGNvbG9yMzogI0IzQjNCMzsgXHJcbiRjb2xvcjQ6ICNDQ0NDQ0M7XHJcbiRjb2xvcjU6ICNFNkU2RTY7XHJcbiRjb2xvcjUtNTogcmdiKDI0NSwgMjQ1LCAyNDUpO1xyXG4kY29sb3I2OiByZ2IoMjUwLCAyNTAsIDI1MSk7XHJcblxyXG4kY29sb3I3OiB3aGl0ZTtcclxuJGNvbG9yODogIzM3MzczNztcclxuXHJcbiRzZWxlY3RlZC1jb2xvcjogcmdiKDAsIDAsIDEwOSk7XHJcbiRob3Zlci1jb2xvcjogJGNvbG9yMjtcclxuXHJcbiRlcnJvci1jb2xvcjogI0U5NDg1ODsgLy9waW5rLXJlZFxyXG4kZXJyb3ItY29sb3ItbHQ6IHJnYigyNTUsIDIyMCwgMjI0KTtcclxuJHBjb2xvcjI6ICNGM0EzMkE7IC8vb3JhbmdlLXllbGxvd1xyXG4kcHJpbnQtY29sb3I6ICM4MkJGNkU7IC8vbGlnaHRncmVlblxyXG4kcHJpbnQtY29sb3ItbHQ6IHJnYigyMzAsIDI1NSwgMjIxKTtcclxuXHJcbi8vICRwcm9kLWJhY2tncm91bmQtY29sb3I6IHJnYigyNTAsMjUwLDI1MCk7XHJcbi8vICRiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMjIwLDIyMCwyMjApO1xyXG4kZnVuY3Rpb24tdGV4dC1jb2xvcjogcmdiKDE5MCwgMTQwLCAzMCk7XHJcbiRmdW5jdGlvbi10ZXh0LWNvbG9yMjogcmdiKDE4LCAxMjYsIDEzNilcclxuIiwiJHBhZGRpbmc6IDQwcHg7IC8vID8gbm90IHVzZWRcclxuJHNtYWxsLXBhZGRpbmc6IDE1cHg7XHJcbiRoZWFkZXItaGVpZ2h0OiA0MHB4O1xyXG5cclxuJGZzaXplMTogMTVweDtcclxuJGZzaXplMjogMTJweDtcclxuJGZzaXplMzogMzBweDtcclxuXHJcbiRwb3J0LXNpemU6IDE1cHg7XHJcbiRkZWZhdWx0LXNpZGUtcGFkZGluZzogMTVweDtcclxuIl19 */"

/***/ }),

/***/ "./src/app/shared/components/execute/execute.component.ts":
/*!****************************************************************!*\
  !*** ./src/app/shared/components/execute/execute.component.ts ***!
  \****************************************************************/
/*! exports provided: mergeInputsFunc, printFunc, ExecuteComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "mergeInputsFunc", function() { return mergeInputsFunc; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "printFunc", function() { return printFunc; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ExecuteComponent", function() { return ExecuteComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _models_flowchart__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @models/flowchart */ "./src/app/shared/models/flowchart/index.ts");
/* harmony import */ var _models_code__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @models/code */ "./src/app/shared/models/code/index.ts");
/* harmony import */ var _models_procedure__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @models/procedure */ "./src/app/shared/models/procedure/index.ts");
/* harmony import */ var _modules__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @modules */ "./src/app/core/modules/index.ts");
/* harmony import */ var _services__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @services */ "./src/app/core/services/index.ts");
/* harmony import */ var _models_port__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @models/port */ "./src/app/shared/models/port/index.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (undefined && undefined.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};







// import { WebWorkerService } from 'ngx-web-worker';

var mergeInputsFunc = "\nfunction mergeInputs(models){\n    let result = __modules__." + _modules__WEBPACK_IMPORTED_MODULE_4__["_parameterTypes"].new + "();\n    for (let model of models){\n        __modules__." + _modules__WEBPACK_IMPORTED_MODULE_4__["_parameterTypes"].merge + "(result, model);\n    }\n    return result;\n}\n";
var printFunc = "\nfunction printFunc(name, value){\n    let val;\n    if (typeof value === 'number' || value === undefined) {\n        val = value;\n    } else if (typeof value === 'string') {\n        val = '\"' + value + '\"';\n    } else if (value.constructor === [].constructor) {\n        val = JSON.stringify(value);\n    } else if (value.constructor === {}.constructor) {\n        val = JSON.stringify(value);\n    } else {\n        // console.log('Unknown output type:', value);\n        // this.output = functions.__stringify__(value);\n        val = value; // TODO - make this generic\n    }\n    console.log(name+': '+val);\n    return val;\n}\n";
var DEBUG = false;
var ExecuteComponent = /** @class */ (function () {
    function ExecuteComponent(dataService) {
        this.dataService = dataService;
    }
    ExecuteComponent.prototype.execute = function () {
        return __awaiter(this, void 0, void 0, function () {
            var _i, _a, node, EmptyECheck, InvalidECheck, ex_1, _b, _c, prod, _d, _e, _f, arg;
            var _this = this;
            return __generator(this, function (_g) {
                switch (_g.label) {
                    case 0:
                        // const startTime = performance.now();
                        document.getElementById('spinner-on').click();
                        console.log(' ');
                        _i = 0, _a = this.dataService.flowchart.nodes;
                        _g.label = 1;
                    case 1:
                        if (!(_i < _a.length)) return [3 /*break*/, 12];
                        node = _a[_i];
                        EmptyECheck = false;
                        InvalidECheck = false;
                        if (node.type !== 'start') {
                            if (node.input.edges) {
                                node.input.value = undefined;
                            }
                        }
                        _g.label = 2;
                    case 2:
                        _g.trys.push([2, 4, , 5]);
                        return [4 /*yield*/, this.resolveImportedUrl(node.procedure)];
                    case 3:
                        _g.sent();
                        return [3 /*break*/, 5];
                    case 4:
                        ex_1 = _g.sent();
                        document.getElementById('Console').click();
                        console.log(ex_1.message);
                        document.getElementById('spinner-off').click();
                        throw ex_1;
                    case 5:
                        if (!node.enabled) {
                            return [3 /*break*/, 11];
                        }
                        _b = 0, _c = node.procedure;
                        _g.label = 6;
                    case 6:
                        if (!(_b < _c.length)) return [3 /*break*/, 10];
                        prod = _c[_b];
                        if (prod.type === _models_procedure__WEBPACK_IMPORTED_MODULE_3__["ProcedureTypes"].Return || !prod.enabled) {
                            return [3 /*break*/, 9];
                        }
                        if (prod.args.length > 0 && prod.args[0].invalidVar) {
                            node.hasError = true;
                            prod.hasError = true;
                            InvalidECheck = true;
                        }
                        if (!(prod.type === _models_procedure__WEBPACK_IMPORTED_MODULE_3__["ProcedureTypes"].Constant)) return [3 /*break*/, 8];
                        _d = prod;
                        return [4 /*yield*/, _models_code__WEBPACK_IMPORTED_MODULE_2__["CodeUtils"].getStartInput(prod.args[1], prod.meta.inputMode)];
                    case 7:
                        _d.resolvedValue = _g.sent();
                        if (!prod.args[0].value || (!prod.args[1].value && !prod.args[1].default &&
                            prod.args[1].value !== 0 && prod.args[1].default !== 0)) {
                            node.hasError = true;
                            prod.hasError = true;
                            EmptyECheck = true;
                        }
                        return [3 /*break*/, 9];
                    case 8:
                        for (_e = 0, _f = prod.args; _e < _f.length; _e++) {
                            arg = _f[_e];
                            if (arg.name.substring(0, 1) === '_' || arg.type === 5) {
                                continue;
                            }
                            if (arg.value !== 0 && !arg.value) {
                                node.hasError = true;
                                prod.hasError = true;
                                EmptyECheck = true;
                            }
                        }
                        _g.label = 9;
                    case 9:
                        _b++;
                        return [3 /*break*/, 6];
                    case 10:
                        if (EmptyECheck) {
                            document.getElementById('Console').click();
                            console.log('Error: Empty Argument detected. Check marked node(s) and procedure(s)!');
                            document.getElementById('spinner-off').click();
                            // console.log('The flowchart took ' + (performance.now() - startTime) + ' milliseconds to execute.');
                            throw new Error('Empty Argument');
                        }
                        if (InvalidECheck) {
                            document.getElementById('Console').click();
                            console.log('Error: Invalid Argument or Argument with Reserved Word detected. Check marked node(s) and procedure(s)!');
                            document.getElementById('spinner-off').click();
                            // console.log('The flowchart took ' + (performance.now() - startTime) + ' milliseconds to execute.');
                            throw new Error('Reserved Word Argument');
                        }
                        _g.label = 11;
                    case 11:
                        _i++;
                        return [3 /*break*/, 1];
                    case 12:
                        // setTimeout for 20ms so that the loading screen has enough time to be loaded in
                        setTimeout(function () {
                            _this.executeFlowchart(_this.dataService.flowchart);
                            // this._webWorkerService.run(this.executeFlowchart, this.dataService.flowchart);
                            for (var _i = 0, _a = _this.dataService.flowchart.nodes; _i < _a.length; _i++) {
                                var node = _a[_i];
                                if (node.type !== 'end') {
                                    delete node.output.value;
                                }
                            }
                            document.getElementById('spinner-off').click();
                            // console.log('The flowchart took ' + (performance.now() - startTime) + ' milliseconds to execute.');
                        }, 20);
                        return [2 /*return*/];
                }
            });
        });
    };
    ExecuteComponent.prototype.executeFlowchart = function (flowchart) {
        var globalVars = '';
        // order the flowchart
        if (!flowchart.ordered) {
            _models_flowchart__WEBPACK_IMPORTED_MODULE_1__["FlowchartUtils"].orderNodes(flowchart);
        }
        // get the string of all imported functions
        var funcStrings = {};
        for (var _i = 0, _a = flowchart.functions; _i < _a.length; _i++) {
            var func = _a[_i];
            funcStrings[func.name] = _models_code__WEBPACK_IMPORTED_MODULE_2__["CodeUtils"].getFunctionString(func);
        }
        // execute each node
        for (var _b = 0, _c = flowchart.nodes; _b < _c.length; _b++) {
            var node = _c[_b];
            if (!node.enabled) {
                node.output.value = undefined;
                continue;
            }
            globalVars = this.executeNode(node, funcStrings, globalVars);
        }
    };
    ExecuteComponent.prototype.resolveImportedUrl = function (prodList) {
        return __awaiter(this, void 0, void 0, function () {
            var _i, prodList_1, prod, i, arg, _a;
            return __generator(this, function (_b) {
                switch (_b.label) {
                    case 0:
                        _i = 0, prodList_1 = prodList;
                        _b.label = 1;
                    case 1:
                        if (!(_i < prodList_1.length)) return [3 /*break*/, 8];
                        prod = prodList_1[_i];
                        if (!(prod.type === _models_procedure__WEBPACK_IMPORTED_MODULE_3__["ProcedureTypes"].Imported)) return [3 /*break*/, 5];
                        i = 1;
                        _b.label = 2;
                    case 2:
                        if (!(i < prod.args.length)) return [3 /*break*/, 5];
                        arg = prod.args[i];
                        // args.slice(1).map((arg) => {
                        if (arg.type.toString() !== _models_port__WEBPACK_IMPORTED_MODULE_6__["InputType"].URL.toString()) {
                            return [3 /*break*/, 4];
                        }
                        _a = prod;
                        return [4 /*yield*/, _models_code__WEBPACK_IMPORTED_MODULE_2__["CodeUtils"].getStartInput(arg, _models_port__WEBPACK_IMPORTED_MODULE_6__["InputType"].URL)];
                    case 3:
                        _a.resolvedValue = _b.sent();
                        _b.label = 4;
                    case 4:
                        i++;
                        return [3 /*break*/, 2];
                    case 5:
                        if (!prod.children) return [3 /*break*/, 7];
                        return [4 /*yield*/, this.resolveImportedUrl(prod.children)];
                    case 6:
                        _b.sent();
                        _b.label = 7;
                    case 7:
                        _i++;
                        return [3 /*break*/, 1];
                    case 8: return [2 /*return*/];
                }
            });
        });
    };
    ExecuteComponent.prototype.executeNode = function (node, funcStrings, globalVars) {
        var params = { 'currentProcedure': [''] };
        var fnString = '';
        var startTime = performance.now();
        try {
            // get the code for the node
            var codeRes = _models_code__WEBPACK_IMPORTED_MODULE_2__["CodeUtils"].getNodeCode(node, true);
            var nodeCode = codeRes[0];
            var varsDefined = codeRes[1];
            // fnString = printFunc + nodeCode.join('\n');
            fnString = printFunc + '\nfunction __main_node_code__(){\n' + nodeCode.join('\n') + '\n}\nreturn __main_node_code__();';
            // add the constants from the start node
            fnString = _modules__WEBPACK_IMPORTED_MODULE_4__["_varString"] + globalVars + fnString;
            params['model'] = _modules__WEBPACK_IMPORTED_MODULE_4__["_parameterTypes"].newFn();
            _modules__WEBPACK_IMPORTED_MODULE_4__["_parameterTypes"].mergeFn(params['model'], node.input.value);
            // add the imported functions code
            var hasFunctions = false;
            for (var funcName in funcStrings) {
                if (funcStrings.hasOwnProperty(funcName)) {
                    fnString = funcStrings[funcName] + fnString;
                    hasFunctions = true;
                }
            }
            if (hasFunctions || node.type === 'start') {
                fnString = mergeInputsFunc + '\n\n' + fnString;
            }
            // print the code
            console.log("Executing node: " + node.name + "\n");
            if (DEBUG) {
                console.log("______________________________________________________________\n/*     " + node.name.toUpperCase() + "     */\n");
                console.log(fnString);
                /*
                for (const i of nodeCode) {
                    if (i.substring(0, 18) === '__params__.current') {
                        continue;
                    }
                    if (i.length > 500) {
                        console.log(i.substring(0, 500) + '...\n});\n');
                    } else {
                        console.log(i);
                    }
                }
                console.log('--------------------------\n');
                */
            }
            var prevWindowVar = {};
            for (var _i = 0, varsDefined_1 = varsDefined; _i < varsDefined_1.length; _i++) {
                var v = varsDefined_1[_i];
                if (window.hasOwnProperty(v)) {
                    prevWindowVar[v] = window[v];
                }
            }
            // create the function with the string: new Function ([arg1[, arg2[, ...argN]],] functionBody)
            var fn = new Function('__modules__', '__params__', fnString);
            // execute the function
            var result = fn(_modules__WEBPACK_IMPORTED_MODULE_4__, params);
            for (var _a = 0, varsDefined_2 = varsDefined; _a < varsDefined_2.length; _a++) {
                var v = varsDefined_2[_a];
                if (window.hasOwnProperty(v)) {
                    delete window[v];
                    if (prevWindowVar[v]) {
                        window[v] = prevWindowVar[v];
                    }
                }
            }
            node.output.value = result;
            if (node.type === 'start') {
                for (var constant in params['constants']) {
                    if (params['constants'].hasOwnProperty(constant)) {
                        var constString = JSON.stringify(params['constants'][constant]);
                        globalVars += "const " + constant + " = " + constString + ";\n";
                    }
                }
                globalVars += '\n';
            }
            node.model = params['model'];
            var endTime = performance.now();
            var duration = Math.round(endTime - startTime);
            var duration_msg = void 0;
            if (duration < 1000) {
                duration_msg = '  Executed in ' + duration + ' milliseconds.';
            }
            else {
                duration_msg = '  Executed in ' + duration / 1000 + ' seconds.';
            }
            console.log(duration_msg);
            return globalVars;
        }
        catch (ex) {
            var endTime = performance.now();
            var duration = Math.round(endTime - startTime);
            var duration_msg = void 0;
            if (duration < 1000) {
                duration_msg = '  Executed in ' + duration + ' milliseconds.';
            }
            else {
                duration_msg = '  Executed in ' + duration / 1000 + ' seconds.';
            }
            console.log(duration_msg);
            document.getElementById('spinner-off').click();
            if (DEBUG) {
                console.log('\n=======================================\n' +
                    ex.name +
                    '\n=======================================\n' +
                    ex.message);
                throw ex;
            }
            node.hasError = true;
            // console.warn(`${node.name} errored`);
            // Unexpected Identifier
            // Unexpected token
            var prodWithError_1 = params['currentProcedure'][0];
            var markError_1 = function (prod, id) {
                if (prod['ID'] && id && prod['ID'] === id) {
                    prod.hasError = true;
                }
                if (prod.children) {
                    prod.children.map(function (p) {
                        markError_1(p, id);
                    });
                }
            };
            if (prodWithError_1 !== '') {
                node.procedure.map(function (prod) {
                    if (prod['ID'] === prodWithError_1) {
                        prod.hasError = true;
                    }
                    if (prod.children) {
                        prod.children.map(function (p) {
                            markError_1(p, prodWithError_1);
                        });
                    }
                });
            }
            if (ex.toString().indexOf('Unexpected identifier') > -1) {
                ex.message = 'Unexpected Identifier error. Did you declare everything?' +
                    'Check that your strings are enclosed in quotes (")';
            }
            else if (ex.toString().indexOf('Unexpected token') > -1 || ex.toString().indexOf('unexpected token') > -1) {
                ex.message = 'Unexpected token error. Check for stray spaces or reserved keywords?';
            }
            else if (ex.toString().indexOf('\'readAsText\' on \'FileReader\'') > -1) {
                ex.message = 'Unable to read file input. Check all start node inputs.';
            }
            else if (ex.toString().indexOf('Cannot read property \'splice\'') > -1) {
                ex.message = 'Unrecognized or missing variable in the procedure.';
            }
            document.getElementById('Console').click();
            // @ts-ignore
            // console.logs = [];
            console.log('\n=======================================\n' +
                ex.name +
                '\n=======================================\n' +
                ex.message);
            // console.log('---------------\nError node code:');
            // console.log(fnString);
            throw ex;
        }
    };
    ExecuteComponent.prototype.runningFunction = function (functionDetails) {
        // create the function with the string: new Function ([arg1[, arg2[, ...argN]],] functionBody)
        var fn = new Function('__modules__', '__params__', functionDetails.fnString);
        // execute the function
        var result = fn(functionDetails.Modules, functionDetails.params);
        return [result, functionDetails.params];
    };
    ExecuteComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'execute',
            template: __webpack_require__(/*! ./execute.component.html */ "./src/app/shared/components/execute/execute.component.html"),
            styles: [__webpack_require__(/*! ./execute.component.scss */ "./src/app/shared/components/execute/execute.component.scss")]
        }),
        __metadata("design:paramtypes", [_services__WEBPACK_IMPORTED_MODULE_5__["DataService"]])
    ], ExecuteComponent);
    return ExecuteComponent;
}());



/***/ }),

/***/ "./src/app/shared/components/file/download.utils.ts":
/*!**********************************************************!*\
  !*** ./src/app/shared/components/file/download.utils.ts ***!
  \**********************************************************/
/*! exports provided: DownloadUtils */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DownloadUtils", function() { return DownloadUtils; });
var DownloadUtils = /** @class */ (function () {
    function DownloadUtils() {
    }
    DownloadUtils.downloadFile = function (fileName, fileContent) {
        if (window.navigator.msSaveOrOpenBlob) {
            window.navigator.msSaveOrOpenBlob(fileContent, fileName);
        }
        else {
            var a_1 = document.createElement('a');
            document.body.appendChild(a_1);
            var url_1 = window.URL.createObjectURL(fileContent);
            a_1.href = url_1;
            a_1.download = fileName;
            a_1.click();
            setTimeout(function () {
                window.URL.revokeObjectURL(url_1);
                document.body.removeChild(a_1);
            }, 0);
        }
    };
    return DownloadUtils;
}());



/***/ }),

/***/ "./src/app/shared/components/file/index.ts":
/*!*************************************************!*\
  !*** ./src/app/shared/components/file/index.ts ***!
  \*************************************************/
/*! exports provided: SaveFileComponent, LoadFileComponent, NewFileComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _savefile_component__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./savefile.component */ "./src/app/shared/components/file/savefile.component.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SaveFileComponent", function() { return _savefile_component__WEBPACK_IMPORTED_MODULE_0__["SaveFileComponent"]; });

/* harmony import */ var _loadfile_component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./loadfile.component */ "./src/app/shared/components/file/loadfile.component.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "LoadFileComponent", function() { return _loadfile_component__WEBPACK_IMPORTED_MODULE_1__["LoadFileComponent"]; });

/* harmony import */ var _newfile_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./newfile.component */ "./src/app/shared/components/file/newfile.component.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "NewFileComponent", function() { return _newfile_component__WEBPACK_IMPORTED_MODULE_2__["NewFileComponent"]; });






/***/ }),

/***/ "./src/app/shared/components/file/loadfile.component.ts":
/*!**************************************************************!*\
  !*** ./src/app/shared/components/file/loadfile.component.ts ***!
  \**************************************************************/
/*! exports provided: LoadFileComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LoadFileComponent", function() { return LoadFileComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm5/index.js");
/* harmony import */ var _shared_models_procedure__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @shared/models/procedure */ "./src/app/shared/models/procedure/index.ts");
/* harmony import */ var circular_json__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! circular-json */ "./node_modules/circular-json/build/circular-json.node.js");
/* harmony import */ var circular_json__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(circular_json__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _modules__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @modules */ "./src/app/core/modules/index.ts");
/* harmony import */ var _services__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @services */ "./src/app/core/services/index.ts");
/* harmony import */ var _shared_decorators__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @shared/decorators */ "./src/app/shared/decorators/index.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};








var LoadFileComponent = /** @class */ (function () {
    function LoadFileComponent(dataService) {
        this.dataService = dataService;
    }
    LoadFileComponent.prototype.sendloadfile = function () {
        var _this = this;
        var selectedFile = document.getElementById('file-input').files[0];
        var stream = rxjs__WEBPACK_IMPORTED_MODULE_1__["Observable"].create(function (observer) {
            var reader = new FileReader();
            reader.onloadend = function () {
                function checkMissingProd(prodList) {
                    var check = true;
                    for (var _i = 0, prodList_1 = prodList; _i < prodList_1.length; _i++) {
                        var prod = prodList_1[_i];
                        if (prod.children) {
                            if (!checkMissingProd(prod.children)) {
                                check = false;
                            }
                        }
                        prod.hasError = false;
                        if (prod.type !== _shared_models_procedure__WEBPACK_IMPORTED_MODULE_2__["ProcedureTypes"].Function) {
                            continue;
                        }
                        if (!_modules__WEBPACK_IMPORTED_MODULE_4__[prod.meta.module] || !_modules__WEBPACK_IMPORTED_MODULE_4__[prod.meta.module][prod.meta.name]) {
                            prod.hasError = true;
                            check = false;
                        }
                    }
                    return check;
                }
                // if (typeof reader.result === 'string') {}
                var f = circular_json__WEBPACK_IMPORTED_MODULE_3__["parse"](reader.result);
                var file = {
                    name: f.name,
                    author: f.author,
                    flowchart: f.flowchart,
                    last_updated: f.last_updated,
                    version: f.version
                };
                file.flowchart.name = selectedFile.name.split('.mob')[0];
                var hasError = false;
                for (var _i = 0, _a = file.flowchart.nodes; _i < _a.length; _i++) {
                    var node = _a[_i];
                    if (!checkMissingProd(node.procedure)) {
                        node.hasError = true;
                        hasError = true;
                    }
                }
                if (hasError) {
                    alert('The flowchart contains functions that does not exist in the current version of Mobius');
                }
                // TO BE REMOVED after all the existing mob files are updated
                var endNode = file.flowchart.nodes[file.flowchart.nodes.length - 1];
                if (endNode.procedure.length === 0) {
                    endNode.procedure = [{ type: 13, ID: '',
                            parent: undefined,
                            meta: { name: '', module: '' },
                            children: undefined,
                            argCount: 0,
                            args: [],
                            print: false,
                            enabled: true,
                            selected: false,
                            hasError: false }];
                }
                if (endNode.procedure[endNode.procedure.length - 1].type !== 11) {
                    var returnMeta = _modules__WEBPACK_IMPORTED_MODULE_4__["_parameterTypes"].return.split('.');
                    for (var _b = 0, ModuleList_1 = _shared_decorators__WEBPACK_IMPORTED_MODULE_6__["ModuleList"]; _b < ModuleList_1.length; _b++) {
                        var i = ModuleList_1[_b];
                        if (i.module !== returnMeta[0]) {
                            continue;
                        }
                        for (var _c = 0, _d = i.functions; _c < _d.length; _c++) {
                            var j = _d[_c];
                            if (j.name !== returnMeta[1]) {
                                continue;
                            }
                            endNode.procedure.push({ type: 11, ID: '',
                                parent: undefined,
                                meta: { name: '', module: '' },
                                children: undefined,
                                argCount: j.argCount,
                                args: j.args,
                                print: false,
                                enabled: true,
                                selected: false,
                                hasError: false });
                            break;
                        }
                        break;
                    }
                }
                // REMOVE ENDS
                observer.next(file);
                observer.complete();
            };
            reader.readAsText(selectedFile);
        });
        stream.subscribe(function (loadeddata) {
            _this.dataService.file = loadeddata;
            _this.dataService.newFlowchart = true;
            if (_this.dataService.node.type !== 'end') {
                loadeddata.flowchart.meta.selected_nodes = [loadeddata.flowchart.nodes.length - 1];
                // for (let i = 0; i < loadeddata.flowchart.nodes.length; i++) {
                //     if (loadeddata.flowchart.nodes[i].type === 'end') {
                //         loadeddata.flowchart.meta.selected_nodes = [i];
                //         break;
                //     }
                // }
            }
            document.getElementById('executeButton').click();
            var zooming = document.getElementById('zoomToFit');
            if (zooming) {
                zooming.click();
                _this.dataService.newFlowchart = false;
            }
            else {
                _this.dataService.newFlowchart = true;
            }
        });
        document.getElementById('file-input').value = '';
    };
    LoadFileComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'file-load',
            template: "<button id='loadfile' class='btn' onclick=\"document.getElementById('file-input').click();\">Load</button>\n              <input id=\"file-input\" type=\"file\" (change)=\"sendloadfile()\" style=\" display: none;\" />",
            styles: ["\n            button.btn{\n                margin: 0px 0px 0px 0px;\n                font-size: 10px;\n                line-height: 12px;\n                border: 2px solid gray;\n                border-radius: 4px;\n                padding: 2px 5px;\n                background-color: #3F4651;\n                color: #E7BF00;\n                font-weight: 600;\n                text-transform: uppercase;\n             }\n            button.btn:hover{\n                background-color: gray;\n                color: white;\n            }\n\n             "]
        }),
        __metadata("design:paramtypes", [_services__WEBPACK_IMPORTED_MODULE_5__["DataService"]])
    ], LoadFileComponent);
    return LoadFileComponent;
}());



/***/ }),

/***/ "./src/app/shared/components/file/loadurl.component.ts":
/*!*************************************************************!*\
  !*** ./src/app/shared/components/file/loadurl.component.ts ***!
  \*************************************************************/
/*! exports provided: LoadUrlComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LoadUrlComponent", function() { return LoadUrlComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm5/index.js");
/* harmony import */ var circular_json__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! circular-json */ "./node_modules/circular-json/build/circular-json.node.js");
/* harmony import */ var circular_json__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(circular_json__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _services__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @services */ "./src/app/core/services/index.ts");
/* harmony import */ var _modules__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @modules */ "./src/app/core/modules/index.ts");
/* harmony import */ var _shared_decorators__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @shared/decorators */ "./src/app/shared/decorators/index.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};






var LoadUrlComponent = /** @class */ (function () {
    function LoadUrlComponent(dataService) {
        this.dataService = dataService;
    }
    LoadUrlComponent.prototype.loadStartUpURL = function (routerUrl) {
        var url = routerUrl.split('file=');
        if (url.length <= 1) {
            return;
        }
        url = url[1].split('&')[0];
        url = url.replace(/%2F/g, '/');
        url = url.replace(/%5C/g, '\\');
        url = url.replace(/%22|%27|'/g, '');
        if (url.indexOf('dropbox') !== -1) {
            url = url.replace('www', 'dl').replace('dl=0', 'dl=1');
        }
        this.loadURL(url);
    };
    LoadUrlComponent.prototype.loadURL = function (url) {
        var _this = this;
        var stream = rxjs__WEBPACK_IMPORTED_MODULE_1__["Observable"].create(function (observer) {
            var request = new XMLHttpRequest();
            request.open('GET', url);
            request.onload = function () {
                if (request.status === 200) {
                    var f = circular_json__WEBPACK_IMPORTED_MODULE_2__["parse"](request.responseText);
                    var file = {
                        name: f.name,
                        author: f.author,
                        flowchart: f.flowchart,
                        last_updated: f.last_updated,
                        version: f.version
                    };
                    var urlSplit = url.split('/');
                    file.flowchart.name = urlSplit[urlSplit.length - 1].split('.mob')[0];
                    // TO BE REMOVED after all the existing mob files are updated
                    var endNode = file.flowchart.nodes[file.flowchart.nodes.length - 1];
                    if (endNode.procedure.length === 0) {
                        endNode.procedure = [{ type: 13, ID: '',
                                parent: undefined,
                                meta: { name: '', module: '' },
                                children: undefined,
                                argCount: 0,
                                args: [],
                                print: false,
                                enabled: true,
                                selected: false,
                                hasError: false }];
                    }
                    if (endNode.procedure[endNode.procedure.length - 1].type !== 11) {
                        var returnMeta = _modules__WEBPACK_IMPORTED_MODULE_4__["_parameterTypes"].return.split('.');
                        for (var _i = 0, ModuleList_1 = _shared_decorators__WEBPACK_IMPORTED_MODULE_5__["ModuleList"]; _i < ModuleList_1.length; _i++) {
                            var i = ModuleList_1[_i];
                            if (i.module !== returnMeta[0]) {
                                continue;
                            }
                            for (var _a = 0, _b = i.functions; _a < _b.length; _a++) {
                                var j = _b[_a];
                                if (j.name !== returnMeta[1]) {
                                    continue;
                                }
                                endNode.procedure.push({ type: 11, ID: '',
                                    parent: undefined,
                                    meta: { name: '', module: '' },
                                    children: undefined,
                                    argCount: j.argCount,
                                    args: j.args,
                                    print: false,
                                    enabled: true,
                                    selected: false,
                                    hasError: false });
                                break;
                            }
                            break;
                        }
                    }
                    // REMOVE ENDS
                    observer.next(file);
                    observer.complete();
                }
                else {
                    console.log('Error: Unable to load file: ' + url);
                    observer.error('error happened');
                }
            };
            request.onerror = function () {
                console.log('Error: Unable to load file: ' + url);
                observer.error('error happened');
            };
            request.send();
        });
        stream.subscribe(function (loadeddata) {
            _this.dataService.file = loadeddata;
            _this.dataService.newFlowchart = true;
            if (_this.dataService.node.type !== 'end') {
                loadeddata.flowchart.meta.selected_nodes = [loadeddata.flowchart.nodes.length - 1];
                // for (let i = 0; i < loadeddata.flowchart.nodes.length; i++) {
                //     if (loadeddata.flowchart.nodes[i].type === 'end') {
                //         loadeddata.flowchart.meta.selected_nodes = [i];
                //         break;
                //     }
                // }
            }
            document.getElementById('executeButton').click();
        });
    };
    LoadUrlComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'load-url',
            template: "<button id='loadurl' class='btn' (click)='loadURL()'></button>",
            styles: ["\n            button.btn{\n                visibility: hidden;\n            }\n            "]
        }),
        __metadata("design:paramtypes", [_services__WEBPACK_IMPORTED_MODULE_3__["DataService"]])
    ], LoadUrlComponent);
    return LoadUrlComponent;
}());



/***/ }),

/***/ "./src/app/shared/components/file/newfile.component.ts":
/*!*************************************************************!*\
  !*** ./src/app/shared/components/file/newfile.component.ts ***!
  \*************************************************************/
/*! exports provided: NewFileComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NewFileComponent", function() { return NewFileComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _models_flowchart__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @models/flowchart */ "./src/app/shared/models/flowchart/index.ts");
/* harmony import */ var _services__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @services */ "./src/app/core/services/index.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};



var NewFileComponent = /** @class */ (function () {
    function NewFileComponent(dataService, cdr) {
        this.dataService = dataService;
        this.cdr = cdr;
        this.create = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
    }
    NewFileComponent.prototype.sendNewFile = function () {
        var confirmed = confirm('Resetting would delete the current flowchart. Would you like to continue?');
        if (!confirmed) {
            return;
        }
        var file = {
            name: 'default_file.mob',
            author: 'new_user',
            flowchart: _models_flowchart__WEBPACK_IMPORTED_MODULE_1__["FlowchartUtils"].newflowchart(),
            last_updated: new Date(),
            version: 1
        };
        this.dataService.file = file;
        var zooming = document.getElementById('zoomToFit');
        if (zooming) {
            zooming.click();
            this.dataService.newFlowchart = false;
        }
        else {
            this.dataService.newFlowchart = true;
        }
        this.cdr.detectChanges();
        document.getElementById('executeButton').click();
    };
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])(),
        __metadata("design:type", Object)
    ], NewFileComponent.prototype, "create", void 0);
    NewFileComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'file-new',
            template: "<button id='newfile' class='btn' (click)='sendNewFile()'>New</button>",
            styles: ["\n            button.btn{\n                margin: 0px 0px 0px 0px;\n                font-size: 10px;\n                line-height: 12px;\n                border: 2px solid gray;\n                border-radius: 4px;\n                padding: 2px 5px;\n                background-color: #3F4651;\n                color: #E7BF00;\n                font-weight: 600;\n                text-transform: uppercase;\n            }\n            button.btn:hover{\n                background-color: gray;\n                color: white;\n            }\n             "]
        }),
        __metadata("design:paramtypes", [_services__WEBPACK_IMPORTED_MODULE_2__["DataService"], _angular_core__WEBPACK_IMPORTED_MODULE_0__["ChangeDetectorRef"]])
    ], NewFileComponent);
    return NewFileComponent;
}());



/***/ }),

/***/ "./src/app/shared/components/file/savefile.component.ts":
/*!**************************************************************!*\
  !*** ./src/app/shared/components/file/savefile.component.ts ***!
  \**************************************************************/
/*! exports provided: SaveFileComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SaveFileComponent", function() { return SaveFileComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _download_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./download.utils */ "./src/app/shared/components/file/download.utils.ts");
/* harmony import */ var circular_json__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! circular-json */ "./node_modules/circular-json/build/circular-json.node.js");
/* harmony import */ var circular_json__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(circular_json__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _models_flowchart__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @models/flowchart */ "./src/app/shared/models/flowchart/index.ts");
/* harmony import */ var _services__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @services */ "./src/app/core/services/index.ts");
/* harmony import */ var _models_port__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @models/port */ "./src/app/shared/models/port/index.ts");
/* harmony import */ var _models_procedure__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @models/procedure */ "./src/app/shared/models/procedure/index.ts");
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @utils */ "./src/app/shared/utils/index.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (undefined && undefined.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};








var SaveFileComponent = /** @class */ (function () {
    function SaveFileComponent(dataService) {
        this.dataService = dataService;
    }
    SaveFileComponent.prototype.download = function () {
        return __awaiter(this, void 0, void 0, function () {
            var f, _loop_1, _i, _a, prod, _b, _c, node, _d, _e, prod, savedfile, _f, _g, node, _h, _j, prod, _k, _l, edge, fileString, fname, blob;
            return __generator(this, function (_m) {
                switch (_m.label) {
                    case 0:
                        f = this.dataService.file;
                        if (!f.flowchart.ordered) {
                            _models_flowchart__WEBPACK_IMPORTED_MODULE_3__["FlowchartUtils"].orderNodes(f.flowchart);
                        }
                        _loop_1 = function (prod) {
                            var arg_1, p, _a, _b, _c, _d, p, _e, _f, _g, _h;
                            return __generator(this, function (_j) {
                                switch (_j.label) {
                                    case 0:
                                        if (prod.type !== _models_procedure__WEBPACK_IMPORTED_MODULE_6__["ProcedureTypes"].Constant) {
                                            return [2 /*return*/, "continue"];
                                        }
                                        if (!(prod.meta.inputMode.toString() === _models_port__WEBPACK_IMPORTED_MODULE_5__["InputType"].File.toString())) return [3 /*break*/, 4];
                                        arg_1 = prod.args[1];
                                        if (!(arg_1.value && arg_1.value.lastModified)) return [3 /*break*/, 2];
                                        p = new Promise(function (resolve) {
                                            var reader = new FileReader();
                                            reader.onload = function () {
                                                resolve(reader.result);
                                            };
                                            reader.readAsText(arg_1.value);
                                        });
                                        _b = (_a = window.localStorage).setItem;
                                        _c = [arg_1.value.name];
                                        _d = '`';
                                        return [4 /*yield*/, p];
                                    case 1:
                                        _b.apply(_a, _c.concat([_d + (_j.sent()) + '`']));
                                        arg_1.value = { 'name': arg_1.value.name };
                                        _j.label = 2;
                                    case 2:
                                        if (!(arg_1.default && arg_1.default.lastModified)) return [3 /*break*/, 4];
                                        p = new Promise(function (resolve) {
                                            var reader = new FileReader();
                                            reader.onload = function () {
                                                resolve(reader.result);
                                            };
                                            reader.readAsText(arg_1.default);
                                        });
                                        _f = (_e = window.localStorage).setItem;
                                        _g = [arg_1.default.name];
                                        _h = '`';
                                        return [4 /*yield*/, p];
                                    case 3:
                                        _f.apply(_e, _g.concat([_h + (_j.sent()) + '`']));
                                        arg_1.default = { 'name': arg_1.default.name };
                                        _j.label = 4;
                                    case 4: return [2 /*return*/];
                                }
                            });
                        };
                        _i = 0, _a = f.flowchart.nodes[0].procedure;
                        _m.label = 1;
                    case 1:
                        if (!(_i < _a.length)) return [3 /*break*/, 4];
                        prod = _a[_i];
                        return [5 /*yield**/, _loop_1(prod)];
                    case 2:
                        _m.sent();
                        _m.label = 3;
                    case 3:
                        _i++;
                        return [3 /*break*/, 1];
                    case 4:
                        for (_b = 0, _c = f.flowchart.nodes; _b < _c.length; _b++) {
                            node = _c[_b];
                            node.model = undefined;
                            if (node.input.hasOwnProperty('value')) {
                                node.input.value = undefined;
                            }
                            if (node.output.hasOwnProperty('value')) {
                                node.output.value = undefined;
                            }
                            for (_d = 0, _e = node.procedure; _d < _e.length; _d++) {
                                prod = _e[_d];
                                if (prod.hasOwnProperty('resolvedValue')) {
                                    prod.resolvedValue = undefined;
                                }
                            }
                        }
                        savedfile = circular_json__WEBPACK_IMPORTED_MODULE_2__["parse"](circular_json__WEBPACK_IMPORTED_MODULE_2__["stringify"](f));
                        for (_f = 0, _g = savedfile.flowchart.nodes; _f < _g.length; _f++) {
                            node = _g[_f];
                            node.id = _utils__WEBPACK_IMPORTED_MODULE_7__["IdGenerator"].getNodeID();
                            for (_h = 0, _j = node.state.procedure; _h < _j.length; _h++) {
                                prod = _j[_h];
                                prod.selected = false;
                            }
                            node.state.procedure = [];
                        }
                        // **** need to modify this when changing the input's constant function:
                        // **** this part resets the value of the last argument of the function when saving the file
                        /*
                        for (const prod of savedfile.flowchart.nodes[0].procedure) {
                            prod.args[prod.argCount - 1].value = undefined;
                        }
                        */
                        savedfile.flowchart.meta.selected_nodes = [0];
                        for (_k = 0, _l = savedfile.flowchart.edges; _k < _l.length; _k++) {
                            edge = _l[_k];
                            edge.selected = false;
                        }
                        savedfile.name = savedfile.flowchart.name;
                        fileString = circular_json__WEBPACK_IMPORTED_MODULE_2__["stringify"](savedfile);
                        fname = savedfile.flowchart.name.replace(/\ /g, '_') + ".mob";
                        blob = new Blob([fileString], { type: 'application/json' });
                        _download_utils__WEBPACK_IMPORTED_MODULE_1__["DownloadUtils"].downloadFile(fname, blob);
                        this.dataService.flowchart.name = 'Untitled';
                        return [2 /*return*/];
                }
            });
        });
    };
    SaveFileComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'file-save',
            template: "<button id='savefile' class='btn' (click)='download()'>Save</button>",
            styles: ["\n            button.btn{\n                margin: 0px 0px 0px 0px;\n                font-size: 10px;\n                line-height: 12px;\n                border: 2px solid gray;\n                border-radius: 4px;\n                padding: 2px 5px;\n                background-color: #3F4651;\n                color: #E7BF00;\n                font-weight: 600;\n                text-transform: uppercase;\n             }\n            button.btn:hover{\n                background-color: gray;\n                color: white;\n            }\n             "]
        }),
        __metadata("design:paramtypes", [_services__WEBPACK_IMPORTED_MODULE_4__["DataService"]])
    ], SaveFileComponent);
    return SaveFileComponent;
}());



/***/ }),

/***/ "./src/app/shared/components/header/panel-header.component.html":
/*!**********************************************************************!*\
  !*** ./src/app/shared/components/header/panel-header.component.html ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class='container__header'>\r\n\r\n    <!-- hidden components (new file, save file, loaf file) for the dropdown menu-->\r\n    <div style=\"display: none;\">\r\n        <file-new></file-new>\r\n        <file-save></file-save>\r\n        <file-load></file-load>\r\n    </div>\r\n\r\n    <!-- buttons -->\r\n    <div class='header-btn-group'>\r\n\r\n        <!-- top left dropdown menu -->\r\n        <!-- <div class=\"dropmenu\"> -->\r\n            <!-- dropdown menu for new file, save file, loaf file-->\r\n            <!-- <div> -->\r\n                <!--\r\n                <button id='dropdownButton' class='btn' mat-icon-button (click)='openDropdownMenu($event)'>\r\n                    <mat-icon svgIcon=\"cMenu\" id='dropdownIcon'></mat-icon>\r\n                </button>\r\n                -->\r\n            <!-- </div>\r\n        </div> -->\r\n                        \r\n\r\n        <!-- buttons to navigate to the 4 pages -->\r\n        <button class='btn' [class.active]='getUrl()==\"/gallery\"' [routerLink]=\"'/gallery'\" title='Gallery'>\r\n            <mat-icon svgIcon=\"cGallery\"></mat-icon>\r\n        </button>\r\n        <button class='btn' [class.active]='getUrl()==\"/dashboard\"' [routerLink]=\"'/dashboard'\" title='Dashboard'>\r\n            <mat-icon svgIcon=\"cDashboard\"></mat-icon>\r\n        </button>\r\n        <button class='btn' [class.active]='getUrl()==\"/flowchart\"' [routerLink]=\"'/flowchart'\" title='Flowchart'>\r\n            <mat-icon svgIcon=\"cFlowchart\"></mat-icon>\r\n        </button>\r\n        <button class='btn' [class.active]='getUrl()==\"/editor\"' [routerLink]=\"'/editor'\" title='Procedure'>\r\n            <mat-icon svgIcon=\"cEditor\"></mat-icon>\r\n        </button>\r\n                \r\n        <!-- execute button -->\r\n        <execute></execute>\r\n    </div>\r\n\r\n    <div class='filename-container'>\r\n        <div id='filename' (click)='openDropdownMenu($event)'>{{getTitle()}}</div>\r\n        \r\n        <div id=\"dropdownMenu\">\r\n            <button onclick=\"document.getElementById('newfile').click();\"\r\n            title=\"Create New Flowchart\"> \r\n                <mat-icon>rotate_left</mat-icon> \r\n                New File\r\n            </button>\r\n            <br>\r\n            <button onclick=\"document.getElementById('savefile').click();\"\r\n            title=\"Save Flowchart File to Computer\">\r\n                <mat-icon>save_alt</mat-icon>\r\n                Save File\r\n                \r\n            </button>\r\n            <br>\r\n            <button (click)=\"loadFile()\"\r\n            title=\"Load Flowchart File from Computer\">\r\n                <mat-icon>launch</mat-icon>\r\n                Load File \r\n            </button>\r\n        </div>\r\n    </div>\r\n\r\n\r\n</div>\r\n"

/***/ }),

/***/ "./src/app/shared/components/header/panel-header.component.scss":
/*!**********************************************************************!*\
  !*** ./src/app/shared/components/header/panel-header.component.scss ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "panel-header button {\n  display: inline-block;\n  vertical-align: bottom;\n  background-color: transparent;\n  color: #808080;\n  border: none;\n  outline: none;\n  cursor: pointer;\n  padding: 0px;\n  width: 34px;\n  height: 34px;\n  transition: 0.3s;\n  font-size: 15px; }\n\nbutton:hover {\n  color: #00006d; }\n\npanel-header button.active {\n  color: #00006d; }\n\n.container__header {\n  display: inline-flex;\n  float: left;\n  width: 100%;\n  height: 41px;\n  padding: 0px;\n  margin: 0px; }\n\n.container__header .header-btn-group {\n    flex-shrink: 0;\n    display: inline-flex;\n    flex-flow: row nowrap;\n    height: 41px;\n    padding: 0px;\n    margin: 0px;\n    overflow: hidden;\n    z-index: 1; }\n\n.container__header .header-btn-group .mat-icon-button {\n      height: 40px !important;\n      width: 40px !important; }\n\n.container__header .header-btn-group .active {\n      background-color: transparent; }\n\n.container__header .filename-container {\n    width: calc(100% - 170px);\n    display: flex;\n    justify-content: flex-start; }\n\n.container__header #filename {\n    cursor: pointer;\n    height: 40px;\n    font-size: 15px;\n    color: #373737;\n    width: 100%;\n    padding-top: 0px;\n    text-align: left;\n    vertical-align: middle;\n    line-height: 35px;\n    overflow: hidden;\n    text-overflow: ellipsis; }\n\n.container__header #filename:hover {\n      color: #00006d; }\n\n/*\r\nbutton.mat-menu-item{ // drop-down (top-bar) menu buttons\r\n    background-color: $color5;\r\n    color: $color2;\r\n    mat-icon{\r\n        color: $color2;\r\n    }\r\n\r\n    height: $header-height;\r\n    line-height: $header-height;\r\n    font-size: $fsize2;\r\n    text-align: center;\r\n}\r\n\r\nbutton.mat-menu-item:hover{\r\n    background-color: $color5;\r\n    color: $color5;\r\n    // mat-icon{\r\n    //     color: $color5;\r\n    // }\r\n}\r\n*/\n\n#dropdownMenu {\n  display: none;\n  position: fixed;\n  transition: display 0.4s;\n  z-index: 1;\n  background-color: #fafafb;\n  border-left: 1px solid #999999;\n  border-bottom: 1px solid #999999; }\n\n#dropdownMenu button {\n    display: inline-block;\n    width: 100px;\n    line-height: 30px;\n    height: 30px;\n    font-size: 12px;\n    vertical-align: middle;\n    color: #373737; }\n\n#dropdownMenu button mat-icon {\n      color: inherit;\n      vertical-align: middle;\n      font-size: 20px;\n      height: 20px;\n      width: 20px; }\n\n#dropdownMenu button:hover {\n      color: #00006d; }\n\r\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc2hhcmVkL2NvbXBvbmVudHMvaGVhZGVyL0M6XFxVc2Vyc1xcYWtpYmRwdFxcRG9jdW1lbnRzXFxBbmd1bGFyXFxtb2JpdXMtcGFyYW1ldHJpYy1tb2RlbGxlci9zcmNcXHNjc3NcXGhlYWRlci1idXR0b24uc2NzcyIsInNyYy9hcHAvc2hhcmVkL2NvbXBvbmVudHMvaGVhZGVyL0M6XFxVc2Vyc1xcYWtpYmRwdFxcRG9jdW1lbnRzXFxBbmd1bGFyXFxtb2JpdXMtcGFyYW1ldHJpYy1tb2RlbGxlci9zcmNcXHNjc3NcXGNvbG9ycy5zY3NzIiwic3JjL2FwcC9zaGFyZWQvY29tcG9uZW50cy9oZWFkZXIvQzpcXFVzZXJzXFxha2liZHB0XFxEb2N1bWVudHNcXEFuZ3VsYXJcXG1vYml1cy1wYXJhbWV0cmljLW1vZGVsbGVyL3NyY1xcc2Nzc1xcdmFyaWFibGVzLnNjc3MiLCJzcmMvYXBwL3NoYXJlZC9jb21wb25lbnRzL2hlYWRlci9DOlxcVXNlcnNcXGFraWJkcHRcXERvY3VtZW50c1xcQW5ndWxhclxcbW9iaXVzLXBhcmFtZXRyaWMtbW9kZWxsZXIvc3JjXFxhcHBcXHNoYXJlZFxcY29tcG9uZW50c1xcaGVhZGVyXFxwYW5lbC1oZWFkZXIuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBR0E7RUFDSSxzQkFBcUI7RUFDckIsdUJBQXNCO0VBQ3RCLDhCQUE2QjtFQUM3QixlQ05ZO0VET1osYUFBWTtFQUNaLGNBQWE7RUFDYixnQkFBZTtFQUNmLGFBQVk7RUFDWixZQUFXO0VBQ1gsYUFBWTtFQUNaLGlCQUFnQjtFQUNoQixnQkVYUyxFRllaOztBQUVEO0VBQ0ksZUNQMkIsRURROUI7O0FBRUQ7RUFDSSxlQ1gyQixFRFk5Qjs7QUduQkQ7RUFDSSxxQkFBb0I7RUFDcEIsWUFBVztFQUNYLFlBQVc7RUFDWCxhQUEwQjtFQUMxQixhQUFZO0VBQ1osWUFBVyxFQTRDZDs7QUFsREQ7SUFTUSxlQUFjO0lBQ2QscUJBQW9CO0lBQ3BCLHNCQUFxQjtJQUNyQixhQUEwQjtJQUMxQixhQUFZO0lBQ1osWUFBVztJQUNYLGlCQUFnQjtJQUVoQixXQUFVLEVBUWI7O0FBekJMO01BbUJZLHdCQUFpQztNQUNqQyx1QkFBZ0MsRUFDbkM7O0FBckJUO01BdUJZLDhCQUE2QixFQUNoQzs7QUF4QlQ7SUEyQlEsMEJBQXlCO0lBQ3pCLGNBQWE7SUFDYiw0QkFBMkIsRUFDOUI7O0FBOUJMO0lBaUNRLGdCQUFlO0lBQ2YsYURyQ1k7SUNzQ1osZ0JEcENLO0lDcUNMLGVGL0JRO0lFZ0NSLFlBQVc7SUFFWCxpQkFBZ0I7SUFDaEIsaUJBQWdCO0lBQ2hCLHVCQUFzQjtJQUN0QixrQkFBaUM7SUFFakMsaUJBQWdCO0lBQ2hCLHdCQUF1QixFQUkxQjs7QUFqREw7TUErQ1ksZUZ4Q21CLEVFeUN0Qjs7QUF1QlQ7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztFQXFCRTs7QUFDRjtFQUNJLGNBQWE7RUFDYixnQkFBZTtFQUNmLHlCQUF3QjtFQUV4QixXQUFVO0VBQ1YsMEJGakd1QjtFRWtHdkIsK0JGdkdZO0VFeUdaLGlDRnpHWSxFRTZIZjs7QUE3QkQ7SUFXUSxzQkFBcUI7SUFDckIsYUFBWTtJQUNaLGtCRHpHSztJQzBHTCxhRDFHSztJQzJHTCxnQkQ1R0s7SUM2R0wsdUJBQXNCO0lBQ3RCLGVGekdRLEVFb0hYOztBQTVCTDtNQW1CWSxlQUFjO01BQ2QsdUJBQXNCO01BQ3RCLGdCQUFlO01BQ2YsYUFBWTtNQUNaLFlBQVcsRUFDZDs7QUF4QlQ7TUEwQlksZUZoSG1CLEVFaUh0QiIsImZpbGUiOiJzcmMvYXBwL3NoYXJlZC9jb21wb25lbnRzL2hlYWRlci9wYW5lbC1oZWFkZXIuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJAaW1wb3J0ICd+c2Nzcy92YXJpYWJsZXMnO1xyXG5AaW1wb3J0ICd+c2Nzcy9jb2xvcnMnO1xyXG5cclxucGFuZWwtaGVhZGVyIGJ1dHRvbiB7XHJcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICB2ZXJ0aWNhbC1hbGlnbjogYm90dG9tO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XHJcbiAgICBjb2xvcjogJGNvbG9yMTtcclxuICAgIGJvcmRlcjogbm9uZTtcclxuICAgIG91dGxpbmU6IG5vbmU7XHJcbiAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgICBwYWRkaW5nOiAwcHg7XHJcbiAgICB3aWR0aDogMzRweDtcclxuICAgIGhlaWdodDogMzRweDtcclxuICAgIHRyYW5zaXRpb246IDAuM3M7XHJcbiAgICBmb250LXNpemU6ICRmc2l6ZTE7XHJcbn1cclxuXHJcbmJ1dHRvbjpob3ZlciB7XHJcbiAgICBjb2xvcjokc2VsZWN0ZWQtY29sb3I7XHJcbn1cclxuXHJcbnBhbmVsLWhlYWRlciBidXR0b24uYWN0aXZlIHtcclxuICAgIGNvbG9yOiAkc2VsZWN0ZWQtY29sb3I7XHJcbn1cclxuIiwiXHJcbiRjb2xvcjE6ICM4MDgwODA7XHJcbiRjb2xvcjI6ICM5OTk5OTk7XHJcbiRjb2xvcjM6ICNCM0IzQjM7IFxyXG4kY29sb3I0OiAjQ0NDQ0NDO1xyXG4kY29sb3I1OiAjRTZFNkU2O1xyXG4kY29sb3I1LTU6IHJnYigyNDUsIDI0NSwgMjQ1KTtcclxuJGNvbG9yNjogcmdiKDI1MCwgMjUwLCAyNTEpO1xyXG5cclxuJGNvbG9yNzogd2hpdGU7XHJcbiRjb2xvcjg6ICMzNzM3Mzc7XHJcblxyXG4kc2VsZWN0ZWQtY29sb3I6IHJnYigwLCAwLCAxMDkpO1xyXG4kaG92ZXItY29sb3I6ICRjb2xvcjI7XHJcblxyXG4kZXJyb3ItY29sb3I6ICNFOTQ4NTg7IC8vcGluay1yZWRcclxuJGVycm9yLWNvbG9yLWx0OiByZ2IoMjU1LCAyMjAsIDIyNCk7XHJcbiRwY29sb3IyOiAjRjNBMzJBOyAvL29yYW5nZS15ZWxsb3dcclxuJHByaW50LWNvbG9yOiAjODJCRjZFOyAvL2xpZ2h0Z3JlZW5cclxuJHByaW50LWNvbG9yLWx0OiByZ2IoMjMwLCAyNTUsIDIyMSk7XHJcblxyXG4vLyAkcHJvZC1iYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMjUwLDI1MCwyNTApO1xyXG4vLyAkYmFja2dyb3VuZC1jb2xvcjogcmdiKDIyMCwyMjAsMjIwKTtcclxuJGZ1bmN0aW9uLXRleHQtY29sb3I6IHJnYigxOTAsIDE0MCwgMzApO1xyXG4kZnVuY3Rpb24tdGV4dC1jb2xvcjI6IHJnYigxOCwgMTI2LCAxMzYpXHJcbiIsIiRwYWRkaW5nOiA0MHB4OyAvLyA/IG5vdCB1c2VkXHJcbiRzbWFsbC1wYWRkaW5nOiAxNXB4O1xyXG4kaGVhZGVyLWhlaWdodDogNDBweDtcclxuXHJcbiRmc2l6ZTE6IDE1cHg7XHJcbiRmc2l6ZTI6IDEycHg7XHJcbiRmc2l6ZTM6IDMwcHg7XHJcblxyXG4kcG9ydC1zaXplOiAxNXB4O1xyXG4kZGVmYXVsdC1zaWRlLXBhZGRpbmc6IDE1cHg7XHJcbiIsIkBpbXBvcnQgJ35zY3NzL2NvbG9ycyc7XHJcbkBpbXBvcnQgJ35zY3NzL3ZhcmlhYmxlcyc7XHJcbkBpbXBvcnQgJ35zY3NzL2hlYWRlci1idXR0b24nO1xyXG5cclxuXHJcbi5jb250YWluZXJfX2hlYWRlcntcclxuICAgIGRpc3BsYXk6IGlubGluZS1mbGV4O1xyXG4gICAgZmxvYXQ6IGxlZnQ7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGhlaWdodDogJGhlYWRlci1oZWlnaHQgKyAxO1xyXG4gICAgcGFkZGluZzogMHB4O1xyXG4gICAgbWFyZ2luOiAwcHg7XHJcblxyXG4gICAgLmhlYWRlci1idG4tZ3JvdXAge1xyXG4gICAgICAgIGZsZXgtc2hyaW5rOiAwO1xyXG4gICAgICAgIGRpc3BsYXk6IGlubGluZS1mbGV4O1xyXG4gICAgICAgIGZsZXgtZmxvdzogcm93IG5vd3JhcDtcclxuICAgICAgICBoZWlnaHQ6ICRoZWFkZXItaGVpZ2h0ICsgMTtcclxuICAgICAgICBwYWRkaW5nOiAwcHg7XHJcbiAgICAgICAgbWFyZ2luOiAwcHg7XHJcbiAgICAgICAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICAgICAgICAvLyBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcclxuICAgICAgICB6LWluZGV4OiAxO1xyXG4gICAgICAgIC5tYXQtaWNvbi1idXR0b257XHJcbiAgICAgICAgICAgIGhlaWdodDogJGhlYWRlci1oZWlnaHQgIWltcG9ydGFudDtcclxuICAgICAgICAgICAgd2lkdGg6ICRoZWFkZXItaGVpZ2h0ICFpbXBvcnRhbnQ7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIC5hY3RpdmV7XHJcbiAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIC5maWxlbmFtZS1jb250YWluZXJ7XHJcbiAgICAgICAgd2lkdGg6IGNhbGMoMTAwJSAtIDE3MHB4KTsvL3dpZHRoIG9mIGJ0bi1jb250YWluZXI7XHJcbiAgICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtc3RhcnQ7XHJcbiAgICB9XHJcbiAgICAjZmlsZW5hbWV7XHJcbiAgICAgICAgLy9kaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICAgICAgY3Vyc29yOiBwb2ludGVyO1xyXG4gICAgICAgIGhlaWdodDogJGhlYWRlci1oZWlnaHQ7XHJcbiAgICAgICAgZm9udC1zaXplOiAkZnNpemUxO1xyXG4gICAgICAgIGNvbG9yOiAkY29sb3I4O1xyXG4gICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgIC8vIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xyXG4gICAgICAgIHBhZGRpbmctdG9wOiAwcHg7XHJcbiAgICAgICAgdGV4dC1hbGlnbjogbGVmdDtcclxuICAgICAgICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xyXG4gICAgICAgIGxpbmUtaGVpZ2h0OiAkaGVhZGVyLWhlaWdodCAtIDVweDtcclxuICAgICAgICBcclxuICAgICAgICBvdmVyZmxvdzogaGlkZGVuO1xyXG4gICAgICAgIHRleHQtb3ZlcmZsb3c6IGVsbGlwc2lzO1xyXG4gICAgICAgICY6aG92ZXJ7XHJcbiAgICAgICAgICAgIGNvbG9yOiAkc2VsZWN0ZWQtY29sb3I7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59XHJcblxyXG4vLyAuY2RrLW92ZXJsYXktcGFuZSB7IC8vIG92ZXJsYXkgbWVudVxyXG4vLyAgICAgYmFja2dyb3VuZC1jb2xvcjogJGNvbG9yNDtcclxuLy8gICAgIHRvcDogJGhlYWRlci1oZWlnaHQgIWltcG9ydGFudDtcclxuLy8gICAgIC5tYXQtbWVudS1wYW5lbHtcclxuLy8gICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkY29sb3I0O1xyXG4vLyAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuLy8gICAgICAgICBib3JkZXItcmFkaXVzOiAwcHg7XHJcbi8vICAgICAgICAgLy8gYm94LXNoYWRvdzogbm9uZTtcclxuLy8gICAgICAgICBwYWRkaW5nOiAwcHg7XHJcbi8vICAgICAgICAgbGVmdDogMHB4O1xyXG4vLyAgICAgICAgIC5tYXQtbWVudS1jb250ZW50e1xyXG4vLyAgICAgICAgICAgICBwYWRkaW5nOiAwcHg7XHJcbi8vICAgICAgICAgfVxyXG4vLyAgICAgICAgIC5tYXQtbWVudS1pdGVte1xyXG4vLyAgICAgICAgICAgICBwYWRkaW5nOiAwcHg7XHJcbi8vICAgICAgICAgfVxyXG4vLyAgICAgfVxyXG4vLyB9XHJcblxyXG4vKlxyXG5idXR0b24ubWF0LW1lbnUtaXRlbXsgLy8gZHJvcC1kb3duICh0b3AtYmFyKSBtZW51IGJ1dHRvbnNcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICRjb2xvcjU7XHJcbiAgICBjb2xvcjogJGNvbG9yMjtcclxuICAgIG1hdC1pY29ue1xyXG4gICAgICAgIGNvbG9yOiAkY29sb3IyO1xyXG4gICAgfVxyXG5cclxuICAgIGhlaWdodDogJGhlYWRlci1oZWlnaHQ7XHJcbiAgICBsaW5lLWhlaWdodDogJGhlYWRlci1oZWlnaHQ7XHJcbiAgICBmb250LXNpemU6ICRmc2l6ZTI7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbn1cclxuXHJcbmJ1dHRvbi5tYXQtbWVudS1pdGVtOmhvdmVye1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogJGNvbG9yNTtcclxuICAgIGNvbG9yOiAkY29sb3I1O1xyXG4gICAgLy8gbWF0LWljb257XHJcbiAgICAvLyAgICAgY29sb3I6ICRjb2xvcjU7XHJcbiAgICAvLyB9XHJcbn1cclxuKi9cclxuI2Ryb3Bkb3duTWVudSB7XHJcbiAgICBkaXNwbGF5OiBub25lO1xyXG4gICAgcG9zaXRpb246IGZpeGVkO1xyXG4gICAgdHJhbnNpdGlvbjogZGlzcGxheSAwLjRzO1xyXG5cclxuICAgIHotaW5kZXg6IDE7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkY29sb3I2O1xyXG4gICAgYm9yZGVyLWxlZnQ6IDFweCBzb2xpZCAkY29sb3IyO1xyXG4gICAgLy8gYm9yZGVyLXJpZ2h0OiAxcHggc29saWQgJGNvbG9yMjtcclxuICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAkY29sb3IyO1xyXG4gICAgYnV0dG9ue1xyXG4gICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICAgICAgICB3aWR0aDogMTAwcHg7XHJcbiAgICAgICAgbGluZS1oZWlnaHQ6ICRmc2l6ZTM7XHJcbiAgICAgICAgaGVpZ2h0OiAkZnNpemUzO1xyXG4gICAgICAgIGZvbnQtc2l6ZTogJGZzaXplMjtcclxuICAgICAgICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xyXG4gICAgICAgIGNvbG9yOiAkY29sb3I4O1xyXG4gICAgICAgIG1hdC1pY29ue1xyXG4gICAgICAgICAgICBjb2xvcjogaW5oZXJpdDtcclxuICAgICAgICAgICAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcclxuICAgICAgICAgICAgZm9udC1zaXplOiAyMHB4O1xyXG4gICAgICAgICAgICBoZWlnaHQ6IDIwcHg7XHJcbiAgICAgICAgICAgIHdpZHRoOiAyMHB4O1xyXG4gICAgICAgIH1cclxuICAgICAgICAmOmhvdmVye1xyXG4gICAgICAgICAgICBjb2xvcjogJHNlbGVjdGVkLWNvbG9yO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxufVxyXG5cclxuIl19 */"

/***/ }),

/***/ "./src/app/shared/components/header/panel-header.component.ts":
/*!********************************************************************!*\
  !*** ./src/app/shared/components/header/panel-header.component.ts ***!
  \********************************************************************/
/*! exports provided: PanelHeaderComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PanelHeaderComponent", function() { return PanelHeaderComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};


var PanelHeaderComponent = /** @class */ (function () {
    function PanelHeaderComponent(router) {
        this.router = router;
    }
    PanelHeaderComponent.prototype.getTitle = function () {
        return this.title.replace(/_/g, ' ');
    };
    PanelHeaderComponent.prototype.getUrl = function () {
        return this.router.url;
    };
    PanelHeaderComponent.prototype.loadFile = function () {
        document.getElementById('file-input').click();
        // this.router.navigate(['/dashboard']);
    };
    PanelHeaderComponent.prototype.openDropdownMenu = function (e) {
        /*
        const dropdowns = document.getElementsByClassName('dropdown-content');
        for (let i = 0; i < dropdowns.length; i++) {
            const openDropdown = dropdowns[i];
            if (openDropdown.classList.contains('show')) {
            openDropdown.classList.remove('show');
            }
        }
        */
        var stl = document.getElementById('dropdownMenu').style;
        if (!stl.display || stl.display === 'none') {
            stl.display = 'block';
            // const bRect = (<Element>e.target).getBoundingClientRect();
            // console.log(bRect)
            // stl.transform = `translate(` + bRect.left + `px, ` + bRect.height + `px)`;
        }
        else {
            stl.display = 'none';
        }
        e.stopPropagation();
    };
    PanelHeaderComponent.prototype.onWindowClick = function () {
        document.getElementById('dropdownMenu').style.display = 'none';
        var nodeMenu = document.getElementById('nodeMenu');
        if (nodeMenu) {
            document.getElementById('nodeMenu').style.display = 'none';
        }
        var galleryMenu = document.getElementById('galleryMenu');
        if (galleryMenu) {
            document.getElementById('galleryMenu').style.display = 'none';
        }
    };
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", String)
    ], PanelHeaderComponent.prototype, "title", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["HostListener"])('window:click', []),
        __metadata("design:type", Function),
        __metadata("design:paramtypes", []),
        __metadata("design:returntype", void 0)
    ], PanelHeaderComponent.prototype, "onWindowClick", null);
    PanelHeaderComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'panel-header',
            template: __webpack_require__(/*! ./panel-header.component.html */ "./src/app/shared/components/header/panel-header.component.html"),
            styles: [__webpack_require__(/*! ./panel-header.component.scss */ "./src/app/shared/components/header/panel-header.component.scss")]
        }),
        __metadata("design:paramtypes", [_angular_router__WEBPACK_IMPORTED_MODULE_1__["Router"]])
    ], PanelHeaderComponent);
    return PanelHeaderComponent;
}());



/***/ }),

/***/ "./src/app/shared/components/navigation/navigation.component.ts":
/*!**********************************************************************!*\
  !*** ./src/app/shared/components/navigation/navigation.component.ts ***!
  \**********************************************************************/
/*! exports provided: NavigationComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NavigationComponent", function() { return NavigationComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};


var NavigationComponent = /** @class */ (function () {
    function NavigationComponent(_router) {
        this._router = _router;
        this._links = [
            { path: '/about',
                name: 'about'
            },
            { path: '/gallery',
                name: 'gallery'
            },
            { path: '/dashboard',
                name: 'dashboard'
            },
            { path: '/editor',
                name: 'editor'
            },
        ];
    }
    NavigationComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'navigation',
            template: "<ul class='nav'>\n                <li class='link' *ngFor='let link of _links;'\n                      [class.active]='link.path == _router.url'\n                      [routerLink]=\"link.path\"\n                      >{{link.name}}</li>\n              </ul>",
            styles: ["\n      ul.nav{\n        margin: 0px;\n        padding: 0px;\n      }\n\n      li.link{\n        display: inline;\n        border: 2px solid gray;\n        border-radius: 4px;\n        margin: 15px 15px 15px 0px;\n        padding: 5px;\n        text-transform: uppercase;\n        font-weight: 600;\n        cursor: pointer;\n        font-size: 16px;\n      }\n\n      li.link:hover{\n        background-color: gray;\n        color: white;\n      }\n\n      .active{\n        background-color: #222;\n        color: white;\n        border-color: #222 !important;\n      }\n  "]
        }),
        __metadata("design:paramtypes", [_angular_router__WEBPACK_IMPORTED_MODULE_1__["Router"]])
    ], NavigationComponent);
    return NavigationComponent;
}());



/***/ }),

/***/ "./src/app/shared/components/not-found/not-found.component.html":
/*!**********************************************************************!*\
  !*** ./src/app/shared/components/not-found/not-found.component.html ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<h1>Page Not Found</h1>\r\n<p>Dolore ex aliqua ut incididunt laborum deserunt pariatur officia.</p>\r\n"

/***/ }),

/***/ "./src/app/shared/components/not-found/not-found.component.scss":
/*!**********************************************************************!*\
  !*** ./src/app/shared/components/not-found/not-found.component.scss ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NoYXJlZC9jb21wb25lbnRzL25vdC1mb3VuZC9ub3QtZm91bmQuY29tcG9uZW50LnNjc3MifQ== */"

/***/ }),

/***/ "./src/app/shared/components/not-found/not-found.component.ts":
/*!********************************************************************!*\
  !*** ./src/app/shared/components/not-found/not-found.component.ts ***!
  \********************************************************************/
/*! exports provided: PageNotFoundComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PageNotFoundComponent", function() { return PageNotFoundComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};

var PageNotFoundComponent = /** @class */ (function () {
    function PageNotFoundComponent() {
    }
    PageNotFoundComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'page-not-found',
            template: __webpack_require__(/*! ./not-found.component.html */ "./src/app/shared/components/not-found/not-found.component.html"),
            styles: [__webpack_require__(/*! ./not-found.component.scss */ "./src/app/shared/components/not-found/not-found.component.scss")]
        }),
        __metadata("design:paramtypes", [])
    ], PageNotFoundComponent);
    return PageNotFoundComponent;
}());



/***/ }),

/***/ "./src/app/shared/components/notification/notification.component.html":
/*!****************************************************************************!*\
  !*** ./src/app/shared/components/notification/notification.component.html ***!
  \****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div id=\"notificationBox\">{{message}}</div>"

/***/ }),

/***/ "./src/app/shared/components/notification/notification.component.scss":
/*!****************************************************************************!*\
  !*** ./src/app/shared/components/notification/notification.component.scss ***!
  \****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "#notificationBox {\n  pointer-events: none;\n  opacity: 0;\n  min-width: 250px;\n  background-color: white;\n  color: #373737;\n  border: solid #808080 1px;\n  text-align: center;\n  padding: 16px;\n  position: fixed;\n  z-index: 1;\n  left: 10px;\n  bottom: 0px; }\n\n#notificationBox.show {\n  opacity: 1;\n  bottom: 10px;\n  transition: ease-in 0.2s; }\n\n#notificationBox.hide {\n  opacity: 0;\n  bottom: 0px;\n  transition: ease-in 0.2s; }\n\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc2hhcmVkL2NvbXBvbmVudHMvbm90aWZpY2F0aW9uL0M6XFxVc2Vyc1xcYWtpYmRwdFxcRG9jdW1lbnRzXFxBbmd1bGFyXFxtb2JpdXMtcGFyYW1ldHJpYy1tb2RlbGxlci9zcmNcXGFwcFxcc2hhcmVkXFxjb21wb25lbnRzXFxub3RpZmljYXRpb25cXG5vdGlmaWNhdGlvbi5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvc2hhcmVkL2NvbXBvbmVudHMvbm90aWZpY2F0aW9uL0M6XFxVc2Vyc1xcYWtpYmRwdFxcRG9jdW1lbnRzXFxBbmd1bGFyXFxtb2JpdXMtcGFyYW1ldHJpYy1tb2RlbGxlci9zcmNcXHNjc3NcXGNvbG9ycy5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUdBO0VBQ0kscUJBQW9CO0VBQ3BCLFdBQVU7RUFDVixpQkFBZ0I7RUFDaEIsd0JDRVU7RUREVixlQ0VZO0VERFosMEJBQXlCO0VBQ3pCLG1CQUFrQjtFQUNsQixjQUFhO0VBQ2IsZ0JBQWU7RUFDZixXQUFVO0VBQ1YsV0FBVTtFQUNWLFlBQVcsRUFDZDs7QUFFRDtFQUNJLFdBQVU7RUFDVixhQUFZO0VBQ1oseUJBQXdCLEVBQzNCOztBQUVEO0VBQ0ksV0FBVTtFQUNWLFlBQVc7RUFDWCx5QkFBd0IsRUFDM0IiLCJmaWxlIjoic3JjL2FwcC9zaGFyZWQvY29tcG9uZW50cy9ub3RpZmljYXRpb24vbm90aWZpY2F0aW9uLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiQGltcG9ydCAnfnNjc3MvY29sb3JzJztcclxuQGltcG9ydCAnfnNjc3MvdmFyaWFibGVzJztcclxuXHJcbiNub3RpZmljYXRpb25Cb3gge1xyXG4gICAgcG9pbnRlci1ldmVudHM6IG5vbmU7XHJcbiAgICBvcGFjaXR5OiAwO1xyXG4gICAgbWluLXdpZHRoOiAyNTBweDsgXHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkY29sb3I3OyBcclxuICAgIGNvbG9yOiAkY29sb3I4OyBcclxuICAgIGJvcmRlcjogc29saWQgJGNvbG9yMSAxcHg7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICBwYWRkaW5nOiAxNnB4O1xyXG4gICAgcG9zaXRpb246IGZpeGVkOyBcclxuICAgIHotaW5kZXg6IDE7IFxyXG4gICAgbGVmdDogMTBweDsgXHJcbiAgICBib3R0b206IDBweDtcclxufVxyXG5cclxuI25vdGlmaWNhdGlvbkJveC5zaG93IHtcclxuICAgIG9wYWNpdHk6IDE7XHJcbiAgICBib3R0b206IDEwcHg7XHJcbiAgICB0cmFuc2l0aW9uOiBlYXNlLWluIDAuMnM7IFxyXG59XHJcblxyXG4jbm90aWZpY2F0aW9uQm94LmhpZGUge1xyXG4gICAgb3BhY2l0eTogMDtcclxuICAgIGJvdHRvbTogMHB4O1xyXG4gICAgdHJhbnNpdGlvbjogZWFzZS1pbiAwLjJzOyBcclxufVxyXG4iLCJcclxuJGNvbG9yMTogIzgwODA4MDtcclxuJGNvbG9yMjogIzk5OTk5OTtcclxuJGNvbG9yMzogI0IzQjNCMzsgXHJcbiRjb2xvcjQ6ICNDQ0NDQ0M7XHJcbiRjb2xvcjU6ICNFNkU2RTY7XHJcbiRjb2xvcjUtNTogcmdiKDI0NSwgMjQ1LCAyNDUpO1xyXG4kY29sb3I2OiByZ2IoMjUwLCAyNTAsIDI1MSk7XHJcblxyXG4kY29sb3I3OiB3aGl0ZTtcclxuJGNvbG9yODogIzM3MzczNztcclxuXHJcbiRzZWxlY3RlZC1jb2xvcjogcmdiKDAsIDAsIDEwOSk7XHJcbiRob3Zlci1jb2xvcjogJGNvbG9yMjtcclxuXHJcbiRlcnJvci1jb2xvcjogI0U5NDg1ODsgLy9waW5rLXJlZFxyXG4kZXJyb3ItY29sb3ItbHQ6IHJnYigyNTUsIDIyMCwgMjI0KTtcclxuJHBjb2xvcjI6ICNGM0EzMkE7IC8vb3JhbmdlLXllbGxvd1xyXG4kcHJpbnQtY29sb3I6ICM4MkJGNkU7IC8vbGlnaHRncmVlblxyXG4kcHJpbnQtY29sb3ItbHQ6IHJnYigyMzAsIDI1NSwgMjIxKTtcclxuXHJcbi8vICRwcm9kLWJhY2tncm91bmQtY29sb3I6IHJnYigyNTAsMjUwLDI1MCk7XHJcbi8vICRiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMjIwLDIyMCwyMjApO1xyXG4kZnVuY3Rpb24tdGV4dC1jb2xvcjogcmdiKDE5MCwgMTQwLCAzMCk7XHJcbiRmdW5jdGlvbi10ZXh0LWNvbG9yMjogcmdiKDE4LCAxMjYsIDEzNilcclxuIl19 */"

/***/ }),

/***/ "./src/app/shared/components/notification/notification.component.ts":
/*!**************************************************************************!*\
  !*** ./src/app/shared/components/notification/notification.component.ts ***!
  \**************************************************************************/
/*! exports provided: NotificationComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NotificationComponent", function() { return NotificationComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};

var NotificationComponent = /** @class */ (function () {
    function NotificationComponent() {
    }
    NotificationComponent.prototype.ngAfterViewInit = function () {
        this.notificationBox = document.getElementById('notificationBox');
    };
    NotificationComponent.prototype.ngOnChanges = function () {
        if (!this.notificationBox) {
            return;
        }
        window.clearTimeout(this.timeOut);
        this.notificationBox.className = 'show';
        // After 3 seconds, remove the show class from DIV
        this.timeOut = setTimeout(function () {
            this.notificationBox.className = this.notificationBox.className.replace('show', '');
            this.notificationBox.className = 'hide';
            this.message = '';
        }, 2500);
    };
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", String)
    ], NotificationComponent.prototype, "message", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", Boolean)
    ], NotificationComponent.prototype, "dummyTrigger", void 0);
    NotificationComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'notification',
            template: __webpack_require__(/*! ./notification.component.html */ "./src/app/shared/components/notification/notification.component.html"),
            styles: [__webpack_require__(/*! ./notification.component.scss */ "./src/app/shared/components/notification/notification.component.scss")]
        }),
        __metadata("design:paramtypes", [])
    ], NotificationComponent);
    return NotificationComponent;
}());



/***/ }),

/***/ "./src/app/shared/components/spinner/spinner.component.html":
/*!******************************************************************!*\
  !*** ./src/app/shared/components/spinner/spinner.component.html ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div id='spinner-div'>\r\n<div id='overlay'></div>\r\n<div id='spinner' class=\"loader\"></div>\r\n</div>\r\n<button id='spinner-on' style='visibility: hidden;' (click)='on()'></button>\r\n<button id='spinner-off' style='visibility: hidden;' (click)='off()'></button>"

/***/ }),

/***/ "./src/app/shared/components/spinner/spinner.component.scss":
/*!******************************************************************!*\
  !*** ./src/app/shared/components/spinner/spinner.component.scss ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "panel-header button {\n  display: inline-block;\n  vertical-align: bottom;\n  background-color: transparent;\n  color: #808080;\n  border: none;\n  outline: none;\n  cursor: pointer;\n  padding: 0px;\n  width: 34px;\n  height: 34px;\n  transition: 0.3s;\n  font-size: 15px; }\n\nbutton:hover {\n  color: #00006d; }\n\npanel-header button.active {\n  color: #00006d; }\n\n#spinner-div {\n  visibility: hidden; }\n\n#overlay {\n  position: fixed;\n  width: 100%;\n  height: 100%;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: #E6E6E6;\n  z-index: 5;\n  opacity: 0.5;\n  pointer-events: none; }\n\n#spinner {\n  position: fixed;\n  left: 45%;\n  top: 45%;\n  color: #808080;\n  border: 10px solid #E6E6E6;\n  border-radius: 50%;\n  border-top: 10px solid #00006d;\n  width: 60px;\n  height: 60px;\n  -webkit-animation: spin 2s linear infinite;\n  animation: spin 2s linear infinite;\n  z-index: 6; }\n\n@-webkit-keyframes spin {\n  0% {\n    -webkit-transform: rotate(0deg); }\n  100% {\n    -webkit-transform: rotate(360deg); } }\n\n@keyframes spin {\n  0% {\n    -webkit-transform: rotate(0deg);\n            transform: rotate(0deg); }\n  100% {\n    -webkit-transform: rotate(360deg);\n            transform: rotate(360deg); } }\n\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc2hhcmVkL2NvbXBvbmVudHMvc3Bpbm5lci9DOlxcVXNlcnNcXGFraWJkcHRcXERvY3VtZW50c1xcQW5ndWxhclxcbW9iaXVzLXBhcmFtZXRyaWMtbW9kZWxsZXIvc3JjXFxzY3NzXFxoZWFkZXItYnV0dG9uLnNjc3MiLCJzcmMvYXBwL3NoYXJlZC9jb21wb25lbnRzL3NwaW5uZXIvQzpcXFVzZXJzXFxha2liZHB0XFxEb2N1bWVudHNcXEFuZ3VsYXJcXG1vYml1cy1wYXJhbWV0cmljLW1vZGVsbGVyL3NyY1xcc2Nzc1xcY29sb3JzLnNjc3MiLCJzcmMvYXBwL3NoYXJlZC9jb21wb25lbnRzL3NwaW5uZXIvQzpcXFVzZXJzXFxha2liZHB0XFxEb2N1bWVudHNcXEFuZ3VsYXJcXG1vYml1cy1wYXJhbWV0cmljLW1vZGVsbGVyL3NyY1xcc2Nzc1xcdmFyaWFibGVzLnNjc3MiLCJzcmMvYXBwL3NoYXJlZC9jb21wb25lbnRzL3NwaW5uZXIvQzpcXFVzZXJzXFxha2liZHB0XFxEb2N1bWVudHNcXEFuZ3VsYXJcXG1vYml1cy1wYXJhbWV0cmljLW1vZGVsbGVyL3NyY1xcYXBwXFxzaGFyZWRcXGNvbXBvbmVudHNcXHNwaW5uZXJcXHNwaW5uZXIuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBR0E7RUFDSSxzQkFBcUI7RUFDckIsdUJBQXNCO0VBQ3RCLDhCQUE2QjtFQUM3QixlQ05ZO0VET1osYUFBWTtFQUNaLGNBQWE7RUFDYixnQkFBZTtFQUNmLGFBQVk7RUFDWixZQUFXO0VBQ1gsYUFBWTtFQUNaLGlCQUFnQjtFQUNoQixnQkVYUyxFRllaOztBQUVEO0VBQ0ksZUNQMkIsRURROUI7O0FBRUQ7RUFDSSxlQ1gyQixFRFk5Qjs7QUdyQkQ7RUFDSSxtQkFBa0IsRUFDckI7O0FBQ0Q7RUFDSSxnQkFBZTtFQUNmLFlBQVc7RUFDWCxhQUFZO0VBQ1osT0FBTTtFQUNOLFFBQU87RUFDUCxTQUFRO0VBQ1IsVUFBUztFQUNULDBCRlRZO0VFVVosV0FBVTtFQUNWLGFBQVk7RUFDWixxQkFBb0IsRUFDckI7O0FBRUg7RUFDSSxnQkFBZTtFQUNmLFVBQVM7RUFDVCxTQUFRO0VBQ1IsZUZ2Qlk7RUV3QlosMkJGcEJZO0VFcUJaLG1CQUFrQjtFQUNsQiwrQkZmMkI7RUVnQjNCLFlBQVc7RUFDWCxhQUFZO0VBQ1osMkNBQTBDO0VBQzFDLG1DQUFrQztFQUNsQyxXQUFVLEVBRWI7O0FBRUQ7RUFDSTtJQUFLLGdDQUErQixFQUFBO0VBQ3BDO0lBQU8sa0NBQWlDLEVBQUEsRUFBQTs7QUFHNUM7RUFDSTtJQUFLLGdDQUF1QjtZQUF2Qix3QkFBdUIsRUFBQTtFQUM1QjtJQUFPLGtDQUF5QjtZQUF6QiwwQkFBeUIsRUFBQSxFQUFBIiwiZmlsZSI6InNyYy9hcHAvc2hhcmVkL2NvbXBvbmVudHMvc3Bpbm5lci9zcGlubmVyLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiQGltcG9ydCAnfnNjc3MvdmFyaWFibGVzJztcclxuQGltcG9ydCAnfnNjc3MvY29sb3JzJztcclxuXHJcbnBhbmVsLWhlYWRlciBidXR0b24ge1xyXG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgdmVydGljYWwtYWxpZ246IGJvdHRvbTtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xyXG4gICAgY29sb3I6ICRjb2xvcjE7XHJcbiAgICBib3JkZXI6IG5vbmU7XHJcbiAgICBvdXRsaW5lOiBub25lO1xyXG4gICAgY3Vyc29yOiBwb2ludGVyO1xyXG4gICAgcGFkZGluZzogMHB4O1xyXG4gICAgd2lkdGg6IDM0cHg7XHJcbiAgICBoZWlnaHQ6IDM0cHg7XHJcbiAgICB0cmFuc2l0aW9uOiAwLjNzO1xyXG4gICAgZm9udC1zaXplOiAkZnNpemUxO1xyXG59XHJcblxyXG5idXR0b246aG92ZXIge1xyXG4gICAgY29sb3I6JHNlbGVjdGVkLWNvbG9yO1xyXG59XHJcblxyXG5wYW5lbC1oZWFkZXIgYnV0dG9uLmFjdGl2ZSB7XHJcbiAgICBjb2xvcjogJHNlbGVjdGVkLWNvbG9yO1xyXG59XHJcbiIsIlxyXG4kY29sb3IxOiAjODA4MDgwO1xyXG4kY29sb3IyOiAjOTk5OTk5O1xyXG4kY29sb3IzOiAjQjNCM0IzOyBcclxuJGNvbG9yNDogI0NDQ0NDQztcclxuJGNvbG9yNTogI0U2RTZFNjtcclxuJGNvbG9yNS01OiByZ2IoMjQ1LCAyNDUsIDI0NSk7XHJcbiRjb2xvcjY6IHJnYigyNTAsIDI1MCwgMjUxKTtcclxuXHJcbiRjb2xvcjc6IHdoaXRlO1xyXG4kY29sb3I4OiAjMzczNzM3O1xyXG5cclxuJHNlbGVjdGVkLWNvbG9yOiByZ2IoMCwgMCwgMTA5KTtcclxuJGhvdmVyLWNvbG9yOiAkY29sb3IyO1xyXG5cclxuJGVycm9yLWNvbG9yOiAjRTk0ODU4OyAvL3BpbmstcmVkXHJcbiRlcnJvci1jb2xvci1sdDogcmdiKDI1NSwgMjIwLCAyMjQpO1xyXG4kcGNvbG9yMjogI0YzQTMyQTsgLy9vcmFuZ2UteWVsbG93XHJcbiRwcmludC1jb2xvcjogIzgyQkY2RTsgLy9saWdodGdyZWVuXHJcbiRwcmludC1jb2xvci1sdDogcmdiKDIzMCwgMjU1LCAyMjEpO1xyXG5cclxuLy8gJHByb2QtYmFja2dyb3VuZC1jb2xvcjogcmdiKDI1MCwyNTAsMjUwKTtcclxuLy8gJGJhY2tncm91bmQtY29sb3I6IHJnYigyMjAsMjIwLDIyMCk7XHJcbiRmdW5jdGlvbi10ZXh0LWNvbG9yOiByZ2IoMTkwLCAxNDAsIDMwKTtcclxuJGZ1bmN0aW9uLXRleHQtY29sb3IyOiByZ2IoMTgsIDEyNiwgMTM2KVxyXG4iLCIkcGFkZGluZzogNDBweDsgLy8gPyBub3QgdXNlZFxyXG4kc21hbGwtcGFkZGluZzogMTVweDtcclxuJGhlYWRlci1oZWlnaHQ6IDQwcHg7XHJcblxyXG4kZnNpemUxOiAxNXB4O1xyXG4kZnNpemUyOiAxMnB4O1xyXG4kZnNpemUzOiAzMHB4O1xyXG5cclxuJHBvcnQtc2l6ZTogMTVweDtcclxuJGRlZmF1bHQtc2lkZS1wYWRkaW5nOiAxNXB4O1xyXG4iLCJAaW1wb3J0ICd+c2Nzcy9jb2xvcnMnO1xyXG5AaW1wb3J0ICd+c2Nzcy9oZWFkZXItYnV0dG9uJztcclxuXHJcbiNzcGlubmVyLWRpdiB7XHJcbiAgICB2aXNpYmlsaXR5OiBoaWRkZW47XHJcbn1cclxuI292ZXJsYXkge1xyXG4gICAgcG9zaXRpb246IGZpeGVkO1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgICB0b3A6IDA7XHJcbiAgICBsZWZ0OiAwO1xyXG4gICAgcmlnaHQ6IDA7XHJcbiAgICBib3R0b206IDA7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkY29sb3I1O1xyXG4gICAgei1pbmRleDogNTtcclxuICAgIG9wYWNpdHk6IDAuNTtcclxuICAgIHBvaW50ZXItZXZlbnRzOiBub25lO1xyXG4gIH1cclxuXHJcbiNzcGlubmVyIHtcclxuICAgIHBvc2l0aW9uOiBmaXhlZDtcclxuICAgIGxlZnQ6IDQ1JTtcclxuICAgIHRvcDogNDUlO1xyXG4gICAgY29sb3I6ICRjb2xvcjE7XHJcbiAgICBib3JkZXI6IDEwcHggc29saWQgJGNvbG9yNTtcclxuICAgIGJvcmRlci1yYWRpdXM6IDUwJTtcclxuICAgIGJvcmRlci10b3A6IDEwcHggc29saWQgJHNlbGVjdGVkLWNvbG9yO1xyXG4gICAgd2lkdGg6IDYwcHg7XHJcbiAgICBoZWlnaHQ6IDYwcHg7XHJcbiAgICAtd2Via2l0LWFuaW1hdGlvbjogc3BpbiAycyBsaW5lYXIgaW5maW5pdGU7XHJcbiAgICBhbmltYXRpb246IHNwaW4gMnMgbGluZWFyIGluZmluaXRlO1xyXG4gICAgei1pbmRleDogNjtcclxuXHJcbn1cclxuICBcclxuQC13ZWJraXQta2V5ZnJhbWVzIHNwaW4ge1xyXG4gICAgMCUgeyAtd2Via2l0LXRyYW5zZm9ybTogcm90YXRlKDBkZWcpOyB9XHJcbiAgICAxMDAlIHsgLXdlYmtpdC10cmFuc2Zvcm06IHJvdGF0ZSgzNjBkZWcpOyB9XHJcbn1cclxuXHJcbkBrZXlmcmFtZXMgc3BpbiB7XHJcbiAgICAwJSB7IHRyYW5zZm9ybTogcm90YXRlKDBkZWcpOyB9XHJcbiAgICAxMDAlIHsgdHJhbnNmb3JtOiByb3RhdGUoMzYwZGVnKTsgfVxyXG59XHJcbiAgIl19 */"

/***/ }),

/***/ "./src/app/shared/components/spinner/spinner.component.ts":
/*!****************************************************************!*\
  !*** ./src/app/shared/components/spinner/spinner.component.ts ***!
  \****************************************************************/
/*! exports provided: SpinnerComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SpinnerComponent", function() { return SpinnerComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};

var SpinnerComponent = /** @class */ (function () {
    function SpinnerComponent() {
    }
    SpinnerComponent.prototype.on = function () {
        // document.getElementById('loading-spinner-overlay').style.visibility = 'visible';
        // document.getElementById('loading-spinner').style.visibility = 'visible';
        document.getElementById('spinner-div').style.visibility = 'visible';
    };
    SpinnerComponent.prototype.off = function () {
        // document.getElementById('loading-spinner-overlay').style.visibility = 'hidden';
        // document.getElementById('loading-spinner').style.visibility = 'hidden';
        document.getElementById('spinner-div').style.visibility = 'hidden';
    };
    SpinnerComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'spinner',
            template: __webpack_require__(/*! ./spinner.component.html */ "./src/app/shared/components/spinner/spinner.component.html"),
            styles: [__webpack_require__(/*! ./spinner.component.scss */ "./src/app/shared/components/spinner/spinner.component.scss")]
        }),
        __metadata("design:paramtypes", [])
    ], SpinnerComponent);
    return SpinnerComponent;
}());



/***/ }),

/***/ "./src/app/shared/decorators/index.ts":
/*!********************************************!*\
  !*** ./src/app/shared/decorators/index.ts ***!
  \********************************************/
/*! exports provided: ModuleList, ModuleDocList, ProcedureTypesAware, ViewerTypesAware, PortTypesAware */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _module_aware_decorator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./module-aware.decorator */ "./src/app/shared/decorators/module-aware.decorator.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ModuleList", function() { return _module_aware_decorator__WEBPACK_IMPORTED_MODULE_0__["ModuleList"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ModuleDocList", function() { return _module_aware_decorator__WEBPACK_IMPORTED_MODULE_0__["ModuleDocList"]; });

/* harmony import */ var _prodtypes_aware_decorator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./prodtypes-aware.decorator */ "./src/app/shared/decorators/prodtypes-aware.decorator.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ProcedureTypesAware", function() { return _prodtypes_aware_decorator__WEBPACK_IMPORTED_MODULE_1__["ProcedureTypesAware"]; });

/* harmony import */ var _viewertypes_aware_decorator__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./viewertypes-aware.decorator */ "./src/app/shared/decorators/viewertypes-aware.decorator.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ViewerTypesAware", function() { return _viewertypes_aware_decorator__WEBPACK_IMPORTED_MODULE_2__["ViewerTypesAware"]; });

/* harmony import */ var _porttypes_aware_decorator__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./porttypes-aware.decorator */ "./src/app/shared/decorators/porttypes-aware.decorator.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PortTypesAware", function() { return _porttypes_aware_decorator__WEBPACK_IMPORTED_MODULE_3__["PortTypesAware"]; });







/***/ }),

/***/ "./src/app/shared/decorators/module-aware.decorator.ts":
/*!*************************************************************!*\
  !*** ./src/app/shared/decorators/module-aware.decorator.ts ***!
  \*************************************************************/
/*! exports provided: ModuleList, ModuleDocList */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ModuleList", function() { return ModuleList; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ModuleDocList", function() { return ModuleDocList; });
/* harmony import */ var _assets_typedoc_json_doc_json__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @assets/typedoc-json/doc.json */ "./src/assets/typedoc-json/doc.json");
var _assets_typedoc_json_doc_json__WEBPACK_IMPORTED_MODULE_0___namespace = /*#__PURE__*/__webpack_require__.t(/*! @assets/typedoc-json/doc.json */ "./src/assets/typedoc-json/doc.json", 1);
/* harmony import */ var _modules__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @modules */ "./src/app/core/modules/index.ts");

// const doc = require('@assets/typedoc-json/doc.json');

var module_list = [];
// todo: bug fix for defaults
function extract_params(func) {
    var fnStr = func.toString().replace(/((\/\/.*$)|(\/\*[\s\S]*?\*\/))/mg, '');
    var result = fnStr.slice(fnStr.indexOf('(') + 1, fnStr.indexOf(')')).split(','); // .match( /([^\s,]+)/g);
    if (result === null || result[0] === '') {
        result = [];
    }
    var final_result = result.map(function (r) {
        r = r.trim();
        var r_value = r.split('=');
        if (r_value.length === 1) {
            return { name: r_value[0].trim(), value: undefined, default: 0 };
        }
        else {
            return { name: r_value[0].trim(), value: undefined, default: 0 };
        }
    });
    var hasReturn = true;
    if (fnStr.indexOf('return') === -1 || fnStr.indexOf('return;') !== -1) {
        hasReturn = false;
    }
    return [final_result, hasReturn];
}
for (var m_name in _modules__WEBPACK_IMPORTED_MODULE_1__) {
    if (!_modules__WEBPACK_IMPORTED_MODULE_1__[m_name]) {
        continue;
    }
    // if (m_name[0] === '_') { continue; }
    var modObj = {};
    modObj.module = m_name;
    modObj.functions = [];
    for (var _i = 0, _a = Object.keys(_modules__WEBPACK_IMPORTED_MODULE_1__[m_name]); _i < _a.length; _i++) {
        var fn_name = _a[_i];
        var func = _modules__WEBPACK_IMPORTED_MODULE_1__[m_name][fn_name];
        var fnObj = {};
        fnObj.module = m_name;
        fnObj.name = fn_name;
        fnObj.argCount = func.length;
        var args = extract_params(func);
        fnObj.args = args[0];
        fnObj.hasReturn = args[1];
        modObj.functions.push(fnObj);
    }
    module_list.push(modObj);
}
function analyzeParamType(fn, paramType) {
    if (paramType.type === 'array') {
        return analyzeParamType(fn, paramType.elementType) + "[]";
    }
    else if (paramType.type === 'intrinsic' || paramType.type === 'reference') {
        return paramType.name;
    }
    else if (paramType.type === 'union') {
        return paramType.types.map(function (tp) { return analyzeParamType(fn, tp); }).join(' || ');
    }
    else if (paramType.type === 'tuple') {
        return '[' + paramType.elements.map(function (tp) { return analyzeParamType(fn, tp); }).join(', ') + ']';
    }
    else {
        /**
         * TODO: Update unrecognized param type here
         */
        console.log('param type requires updating:', paramType);
        console.log('in function:', fn.module + '.' + fn.name);
        return paramType.type;
    }
}
var docs = {};
for (var _b = 0, _c = _assets_typedoc_json_doc_json__WEBPACK_IMPORTED_MODULE_0__["children"]; _b < _c.length; _b++) {
    var mod = _c[_b];
    var modName = mod.name.split('/');
    modName = modName[modName.length - 1];
    if (modName.substr(0, 1) === '"' || modName.substr(0, 1) === '\'') {
        modName = modName.substr(1, modName.length - 2);
    }
    else {
        modName = modName.substr(0, modName.length - 1);
    }
    if (modName.substr(0, 1) === '_' || modName === 'index') {
        continue;
    }
    var moduleDoc = {};
    for (var _d = 0, _e = mod.children; _d < _e.length; _d++) {
        var func = _e[_d];
        // console.log(func);
        var fn = {};
        fn['name'] = func.name;
        fn['module'] = modName;
        if (!func['signatures']) {
            continue;
        }
        if (func['signatures'][0].comment) {
            var cmmt = func['signatures'][0].comment;
            fn['description'] = cmmt.shortText;
            if (cmmt.tags) {
                for (var _f = 0, _g = cmmt.tags; _f < _g.length; _f++) {
                    var fnTag = _g[_f];
                    if (fnTag.tag === 'summary') {
                        fn['summary'] = fnTag.text;
                    }
                    else {
                        if (fn[fnTag.tag]) {
                            fn[fnTag.tag].push(fnTag.text);
                        }
                        else {
                            fn[fnTag.tag] = [fnTag.text];
                        }
                    }
                }
            }
            fn['returns'] = cmmt.returns;
            if (fn['returns']) {
                fn['returns'] = fn['returns'].trim();
            }
        }
        fn['parameters'] = [];
        if (func['signatures'][0].parameters) {
            for (var _h = 0, _j = func['signatures'][0].parameters; _h < _j.length; _h++) {
                var param = _j[_h];
                var namecheck = true;
                for (var systemVarName in _modules__WEBPACK_IMPORTED_MODULE_1__["_parameterTypes"]) {
                    if (param.name === _modules__WEBPACK_IMPORTED_MODULE_1__["_parameterTypes"][systemVarName]) {
                        namecheck = false;
                        break;
                    }
                }
                if (!namecheck) {
                    fn['parameters'].push(undefined);
                    continue;
                }
                var pr = {};
                pr['name'] = param.name;
                if (param.comment) {
                    pr['description'] = param.comment.shortText || param.comment.text;
                }
                pr['type'] = analyzeParamType(fn, param.type);
                fn['parameters'].push(pr);
            }
        }
        moduleDoc[func.name] = fn;
    }
    docs[modName] = moduleDoc;
}
var ModuleList = module_list;
var ModuleDocList = docs;


/***/ }),

/***/ "./src/app/shared/decorators/porttypes-aware.decorator.ts":
/*!****************************************************************!*\
  !*** ./src/app/shared/decorators/porttypes-aware.decorator.ts ***!
  \****************************************************************/
/*! exports provided: PortTypesAware */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PortTypesAware", function() { return PortTypesAware; });
/* harmony import */ var _models_port__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @models/port */ "./src/app/shared/models/port/index.ts");

function PortTypesAware(constructor) {
    constructor.prototype.PortTypes = _models_port__WEBPACK_IMPORTED_MODULE_0__["InputType"];
    // array form
    var keys = Object.keys(_models_port__WEBPACK_IMPORTED_MODULE_0__["InputType"]);
    constructor.prototype.PortTypesArr = keys.slice(keys.length / 2);
}


/***/ }),

/***/ "./src/app/shared/decorators/prodtypes-aware.decorator.ts":
/*!****************************************************************!*\
  !*** ./src/app/shared/decorators/prodtypes-aware.decorator.ts ***!
  \****************************************************************/
/*! exports provided: ProcedureTypesAware */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ProcedureTypesAware", function() { return ProcedureTypesAware; });
/* harmony import */ var _models_procedure__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @models/procedure */ "./src/app/shared/models/procedure/index.ts");

function ProcedureTypesAware(constructor) {
    constructor.prototype.ProcedureTypes = _models_procedure__WEBPACK_IMPORTED_MODULE_0__["ProcedureTypes"];
    // array form
    var keys = Object.keys(_models_procedure__WEBPACK_IMPORTED_MODULE_0__["ProcedureTypes"]);
    constructor.prototype.ProcedureTypesArr = keys.slice(keys.length / 2);
}


/***/ }),

/***/ "./src/app/shared/decorators/viewertypes-aware.decorator.ts":
/*!******************************************************************!*\
  !*** ./src/app/shared/decorators/viewertypes-aware.decorator.ts ***!
  \******************************************************************/
/*! exports provided: ViewerTypesAware */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ViewerTypesAware", function() { return ViewerTypesAware; });
/* harmony import */ var _models_port__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @models/port */ "./src/app/shared/models/port/index.ts");

function ViewerTypesAware(constructor) {
    constructor.prototype.ViewerTypes = _models_port__WEBPACK_IMPORTED_MODULE_0__["OutputType"];
    // array form
    var keys = Object.keys(_models_port__WEBPACK_IMPORTED_MODULE_0__["OutputType"]);
    constructor.prototype.ViewerTypesArr = keys.slice(keys.length / 2);
}


/***/ }),

/***/ "./src/app/shared/directives/filesys/index.ts":
/*!****************************************************!*\
  !*** ./src/app/shared/directives/filesys/index.ts ***!
  \****************************************************/
/*! exports provided: MbFileReaderDirective */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _mobfile_reader_directive__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./mobfile-reader.directive */ "./src/app/shared/directives/filesys/mobfile-reader.directive.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MbFileReaderDirective", function() { return _mobfile_reader_directive__WEBPACK_IMPORTED_MODULE_0__["MbFileReaderDirective"]; });




/***/ }),

/***/ "./src/app/shared/directives/filesys/mobfile-reader.directive.ts":
/*!***********************************************************************!*\
  !*** ./src/app/shared/directives/filesys/mobfile-reader.directive.ts ***!
  \***********************************************************************/
/*! exports provided: MbFileReaderDirective */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MbFileReaderDirective", function() { return MbFileReaderDirective; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var circular_json__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! circular-json */ "./node_modules/circular-json/build/circular-json.node.js");
/* harmony import */ var circular_json__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(circular_json__WEBPACK_IMPORTED_MODULE_1__);
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
/*
 *  Adding this to an HTML5 input element
 *  allows for the file being read to be converted into a Mobius
 *  Flowchart
 *
 */


var MbFileReaderDirective = /** @class */ (function () {
    function MbFileReaderDirective(el) {
        this.el = el;
        this.data = {};
        this.load = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
    }
    MbFileReaderDirective.prototype.onFileChange = function () {
        var f = this.el.nativeElement.files[0];
        if (f) {
            var reader = new FileReader();
            reader.readAsText(f, 'UTF-8');
            var ins_1 = this;
            reader.onload = function (evt) {
                var fileString = evt.target['result'];
                ins_1.load_flowchart_from_string(fileString);
            };
            reader.onerror = function (evt) {
                console.log('Error reading file');
            };
        }
    };
    //
    // Input: string
    // Output: MobiusFile DS
    //
    //
    MbFileReaderDirective.prototype.load_flowchart_from_string = function (fileString) {
        var _this = this;
        // let jsonData: {language: string, flowchart: JSON, modules: JSON};
        // let flowchart: any; // IFlowchart;
        try {
            var data = circular_json__WEBPACK_IMPORTED_MODULE_1__["parse"](fileString);
            this.load.emit(data);
            // this.data.flowchart = data.flowchart;
            // this.data.modules = data.modules;
            // this.data.language = data.language;
            // this.update_code_generator(CodeFactory.getCodeGenerator(data["language"]));
            // TODO: this.update_modules();
            // flowchart = FlowchartReader.read_flowchart_from_data(data["flowchart"]);
            // TODO: select a node
        }
        catch (err) {
            console.error('Mob-file-reader error', err);
        }
    };
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", Object)
    ], MbFileReaderDirective.prototype, "data", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])(),
        __metadata("design:type", Object)
    ], MbFileReaderDirective.prototype, "load", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["HostListener"])('change'),
        __metadata("design:type", Function),
        __metadata("design:paramtypes", []),
        __metadata("design:returntype", void 0)
    ], MbFileReaderDirective.prototype, "onFileChange", null);
    MbFileReaderDirective = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Directive"])({
            selector: '[mbFileReader]'
        }),
        __metadata("design:paramtypes", [_angular_core__WEBPACK_IMPORTED_MODULE_0__["ElementRef"]])
    ], MbFileReaderDirective);
    return MbFileReaderDirective;
}());



/***/ }),

/***/ "./src/app/shared/models/code/code.utils.ts":
/*!**************************************************!*\
  !*** ./src/app/shared/models/code/code.utils.ts ***!
  \**************************************************/
/*! exports provided: CodeUtils */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CodeUtils", function() { return CodeUtils; });
/* harmony import */ var _models_procedure__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @models/procedure */ "./src/app/shared/models/procedure/index.ts");
/* harmony import */ var _models_port__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @models/port */ "./src/app/shared/models/port/index.ts");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm5/index.js");
/* harmony import */ var circular_json__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! circular-json */ "./node_modules/circular-json/build/circular-json.node.js");
/* harmony import */ var circular_json__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(circular_json__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _modules__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @modules */ "./src/app/core/modules/index.ts");
var __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (undefined && undefined.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};





var CodeUtils = /** @class */ (function () {
    function CodeUtils() {
    }
    CodeUtils.getProcedureCode = function (prod, existingVars, addProdArr) {
        if (prod.enabled === false || prod.type === _models_procedure__WEBPACK_IMPORTED_MODULE_0__["ProcedureTypes"].Blank) {
            return [''];
        }
        prod.hasError = false;
        var codeStr = [];
        var args = prod.args;
        var prefix = args.hasOwnProperty('0') && args[0].value && args[0].value.indexOf('[') === -1
            && existingVars.indexOf(args[0].value) === -1 ? 'let ' : '';
        codeStr.push('');
        if (addProdArr && prod.type !== _models_procedure__WEBPACK_IMPORTED_MODULE_0__["ProcedureTypes"].Else && prod.type !== _models_procedure__WEBPACK_IMPORTED_MODULE_0__["ProcedureTypes"].Elseif) {
            codeStr.push("__params__.currentProcedure[0] = \"" + prod.ID + "\";");
        }
        switch (prod.type) {
            case _models_procedure__WEBPACK_IMPORTED_MODULE_0__["ProcedureTypes"].Variable:
                if (!args[0].value) {
                    codeStr.push(this.repGetAttrib(args[1].value) + ";");
                    break;
                }
                var repVar = this.repSetAttrib(args[0].value);
                if (!repVar) {
                    codeStr.push("" + prefix + args[0].value + " = " + this.repGetAttrib(args[1].value) + ";");
                    if (prefix === 'let ') {
                        existingVars.push(args[0].value);
                    }
                }
                else {
                    codeStr.push(repVar[0] + " " + this.repGetAttrib(args[1].value) + " " + repVar[1]);
                }
                break;
            case _models_procedure__WEBPACK_IMPORTED_MODULE_0__["ProcedureTypes"].If:
                if (args[0].value.indexOf('__params__') !== -1) {
                    throw new Error('Unexpected Identifier');
                }
                codeStr.push("if (" + this.repGetAttrib(args[0].value) + "){");
                break;
            case _models_procedure__WEBPACK_IMPORTED_MODULE_0__["ProcedureTypes"].Else:
                codeStr.push("else {");
                break;
            case _models_procedure__WEBPACK_IMPORTED_MODULE_0__["ProcedureTypes"].Elseif:
                if (args[0].value.indexOf('__params__') !== -1) {
                    throw new Error('Unexpected Identifier');
                }
                codeStr.push("else if(" + this.repGetAttrib(args[0].value) + "){");
                break;
            case _models_procedure__WEBPACK_IMPORTED_MODULE_0__["ProcedureTypes"].Foreach:
                // codeStr.push(`for (${prefix} ${args[0].value} of [...Array(${args[1].value}).keys()]){`);
                if (args[0].value.indexOf('__params__') !== -1) {
                    throw new Error('Unexpected Identifier');
                }
                codeStr.push("for (" + prefix + " " + args[0].value + " of " + this.repGetAttrib(args[1].value) + "){");
                break;
            case _models_procedure__WEBPACK_IMPORTED_MODULE_0__["ProcedureTypes"].While:
                if (args[0].value.indexOf('__params__') !== -1) {
                    throw new Error('Unexpected Identifier');
                }
                codeStr.push("while (" + this.repGetAttrib(args[0].value) + "){");
                break;
            case _models_procedure__WEBPACK_IMPORTED_MODULE_0__["ProcedureTypes"].Break:
                codeStr.push("break;");
                break;
            case _models_procedure__WEBPACK_IMPORTED_MODULE_0__["ProcedureTypes"].Continue:
                codeStr.push("continue;");
                break;
            case _models_procedure__WEBPACK_IMPORTED_MODULE_0__["ProcedureTypes"].Constant:
                if (!addProdArr) {
                    return [''];
                }
                var constName = args[0].value;
                if (constName.substring(0, 1) === '"' || constName.substring(0, 1) === '\'') {
                    constName = args[0].value.substring(1, args[0].value.length - 1);
                }
                codeStr.push("__params__['constants']['" + constName + "'] = " + prod.resolvedValue + ";");
                break;
            case _models_procedure__WEBPACK_IMPORTED_MODULE_0__["ProcedureTypes"].AddData:
                var cst = args[0].value;
                if (!addProdArr) {
                    return ["__modules__." + _modules__WEBPACK_IMPORTED_MODULE_4__["_parameterTypes"].addData + "( __params__.model, " + cst + ");"];
                }
                if (cst.substring(0, 1) === '"' || cst.substring(0, 1) === '\'') {
                    cst = args[0].value.substring(1, args[0].value.length - 1);
                }
                codeStr.push("__params__['constants']['" + cst + "'] = " + prod.resolvedValue + ";");
                if (_modules__WEBPACK_IMPORTED_MODULE_4__["_parameterTypes"].addData) {
                    codeStr.push("__modules__." + _modules__WEBPACK_IMPORTED_MODULE_4__["_parameterTypes"].addData + "( __params__.model, __params__.constants['" + cst + "']);");
                }
                else {
                    codeStr.push("__params__.model = mergeInputs( [__params__.model, __params__.constants['" + cst + "']]);");
                }
                break;
            case _models_procedure__WEBPACK_IMPORTED_MODULE_0__["ProcedureTypes"].Return:
                var check = true;
                var returnArgVals = [];
                for (var _i = 0, args_1 = args; _i < args_1.length; _i++) {
                    var arg = args_1[_i];
                    if (arg.name === _modules__WEBPACK_IMPORTED_MODULE_4__["_parameterTypes"].constList) {
                        returnArgVals.push('__params__.constants');
                        continue;
                    }
                    if (arg.name === _modules__WEBPACK_IMPORTED_MODULE_4__["_parameterTypes"].model) {
                        returnArgVals.push('__params__.model');
                        continue;
                    }
                    if (!arg.value) {
                        check = false;
                        break;
                    }
                    if (arg.value.indexOf('__params__') !== -1) {
                        throw new Error('Unexpected Identifier');
                    }
                    if (arg.value.substring(0, 1) === '#') {
                        returnArgVals.push('`' + this.repGetAttrib(arg.value) + '`');
                        continue;
                    }
                    returnArgVals.push(this.repGetAttrib(arg.value));
                }
                if (!check) {
                    codeStr.push("return __params__['model'];");
                }
                else {
                    codeStr.push("let __return_value__ = __modules__." + _modules__WEBPACK_IMPORTED_MODULE_4__["_parameterTypes"].return + "(" + returnArgVals.join(', ') + ");");
                    if (addProdArr) {
                        codeStr.push("console.log('Return: ', __return_value__);");
                    }
                    codeStr.push("return __return_value__;");
                }
                break;
            case _models_procedure__WEBPACK_IMPORTED_MODULE_0__["ProcedureTypes"].Function:
                var argVals = [];
                for (var _a = 0, _b = args.slice(1); _a < _b.length; _a++) {
                    var arg = _b[_a];
                    if (arg.value && arg.value.indexOf('__params__') !== -1) {
                        throw new Error('Unexpected Identifier');
                    }
                    if (arg.name === _modules__WEBPACK_IMPORTED_MODULE_4__["_parameterTypes"].constList) {
                        argVals.push('__params__.constants');
                        continue;
                    }
                    if (arg.name === _modules__WEBPACK_IMPORTED_MODULE_4__["_parameterTypes"].model) {
                        argVals.push('__params__.model');
                        continue;
                    }
                    if (arg.value && arg.value.substring(0, 1) === '#') {
                        argVals.push('`' + this.repGetAttrib(arg.value) + '`');
                        continue;
                    }
                    argVals.push(this.repGetAttrib(arg.value));
                }
                var argValues = argVals.join(', ');
                var fnCall = "__modules__." + prod.meta.module + "." + prod.meta.name + "( " + argValues + " )";
                if (prod.meta.module.toUpperCase() === 'OUTPUT') {
                    if (prod.args[prod.args.length - 1].value) {
                        codeStr.push("return " + fnCall + ";");
                    }
                }
                else if (args[0].name === '__none__' || !args[0].value) {
                    codeStr.push(fnCall + ";");
                }
                else {
                    var repfuncVar = this.repSetAttrib(args[0].value);
                    if (!repfuncVar) {
                        codeStr.push("" + prefix + args[0].value + " = " + fnCall + ";");
                        if (prefix === 'let ') {
                            existingVars.push(args[0].value);
                        }
                    }
                    else {
                        codeStr.push(repfuncVar[0] + " " + fnCall + " " + repfuncVar[1]);
                    }
                }
                break;
            case _models_procedure__WEBPACK_IMPORTED_MODULE_0__["ProcedureTypes"].Imported:
                var argsVals = [];
                for (var i = 1; i < args.length; i++) {
                    var arg = args[i];
                    // args.slice(1).map((arg) => {
                    if (arg.type.toString() !== _models_port__WEBPACK_IMPORTED_MODULE_1__["InputType"].URL.toString()) {
                        argsVals.push(this.repGetAttrib(arg.value));
                    }
                    else {
                        argsVals.push(prod.resolvedValue);
                    }
                }
                argsVals = argsVals.join(', ');
                var fn = prod.meta.name + "(__params__, " + argsVals + " )";
                if (!args[0].value) {
                    codeStr.push(fnCall + ";");
                    break;
                }
                var repImpVar = this.repSetAttrib(args[0].value);
                if (!repImpVar) {
                    codeStr.push("" + prefix + args[0].value + " = " + fn + ";");
                    if (prefix === 'let ') {
                        existingVars.push(args[0].value);
                    }
                }
                else {
                    codeStr.push(repImpVar[0] + " " + fnCall + " " + repImpVar[1]);
                }
                if (prefix === 'let ') {
                    existingVars.push(args[0].value);
                }
                break;
        }
        if (prod.children) {
            for (var _c = 0, _d = prod.children; _c < _d.length; _c++) {
                var p = _d[_c];
                codeStr = codeStr.concat(CodeUtils.getProcedureCode(p, existingVars, addProdArr));
            }
            codeStr.push("}");
        }
        if (prod.print && prod.args[0].value) {
            var repGet = this.repGetAttrib(prod.args[0].value);
            codeStr.push("printFunc('" + prod.args[0].value + "', " + repGet + ");");
            // codeStr.push(`wait(5000);`);
        }
        return codeStr;
    };
    CodeUtils.repSetAttrib = function (val) {
        if (!val || val.indexOf('@') === -1) {
            return false;
        }
        var splitted = val.split('@');
        if (splitted.length > 2) {
            splitted[1] = splitted.splice(1, splitted.length - 1).join('@');
        }
        var openBracketMatch = (splitted[1].match(/\[/g) || []).length;
        if (openBracketMatch) {
            var bracketSplit = splitted[1].substring(0, splitted[1].length - 1).split('[');
            var innerVar = CodeUtils.repGetAttrib(bracketSplit.splice(1, bracketSplit.length - 1).join('['));
            return ["__modules__." + _modules__WEBPACK_IMPORTED_MODULE_4__["_parameterTypes"].setattrib + "(__params__.model, " + splitted[0] + ", '" + bracketSplit[0] + "',",
                ", " + innerVar + ");"];
        }
        else {
            return ["__modules__." + _modules__WEBPACK_IMPORTED_MODULE_4__["_parameterTypes"].setattrib + "(__params__.model, " + splitted[0] + ", '" + splitted[1] + "',",
                ');'];
        }
    };
    CodeUtils.repGetAttrib = function (val) {
        if (!val) {
            return;
        }
        var res = val.split(' ');
        for (var i in res) {
            if (!res[i]) {
                continue;
            }
            var atIndex = res[i].indexOf('@');
            if (atIndex !== -1 && atIndex > 0 && res[i].trim()[0] !== '#') {
                var splitted = res[i].split('@');
                if (splitted.length > 2) {
                    splitted[1] = splitted.splice(1, splitted.length - 1).join('@');
                }
                var pref = '';
                var postf = '';
                while (splitted[0].substring(0, 1) === '[') {
                    splitted[0] = splitted[0].substring(1, splitted[0].length);
                    pref += '[';
                }
                var closeBracketMatch = (splitted[1].match(/\]/g) || []).length;
                var openBracketMatch = (splitted[1].match(/\[/g) || []).length;
                if (closeBracketMatch > openBracketMatch) {
                    splitted[1] = splitted[1].substring(0, splitted[1].length - (closeBracketMatch - openBracketMatch));
                    postf = ']'.repeat(closeBracketMatch - openBracketMatch);
                }
                if (openBracketMatch) {
                    var bracketSplit = splitted[1].substring(0, splitted[1].length - 1).split('[');
                    var innerVar = CodeUtils.repGetAttrib(bracketSplit.splice(1, bracketSplit.length - 1).join('['));
                    res[i] = pref + "__modules__." + _modules__WEBPACK_IMPORTED_MODULE_4__["_parameterTypes"].getattrib +
                        ("(__params__.model, " + splitted[0] + ", '" + bracketSplit[0] + "', " + innerVar + ")" + postf);
                }
                else {
                    res[i] = pref + "__modules__." + _modules__WEBPACK_IMPORTED_MODULE_4__["_parameterTypes"].getattrib + "(__params__.model, " + splitted[0] + ", '" + splitted[1] + "')" + postf;
                }
            }
        }
        return res.join(' ');
    };
    CodeUtils.getStartInput = function (arg, inputMode) {
        return __awaiter(this, void 0, void 0, function () {
            var val, defaultCheck, result, p, _a, p, _b;
            return __generator(this, function (_c) {
                switch (_c.label) {
                    case 0:
                        defaultCheck = false;
                        if (arg.value === undefined) {
                            val = arg.default;
                            defaultCheck = true;
                        }
                        else {
                            val = arg.value;
                        }
                        result = val;
                        if (!(inputMode.toString() === _models_port__WEBPACK_IMPORTED_MODULE_1__["InputType"].URL.toString())) return [3 /*break*/, 2];
                        if (val.indexOf('dropbox') !== -1) {
                            val = val.replace('www', 'dl').replace('dl=0', 'dl=1');
                        }
                        p = new Promise(function (resolve) {
                            var request = new XMLHttpRequest();
                            request.open('GET', val);
                            request.onload = function () {
                                resolve(request.responseText);
                            };
                            request.send();
                        });
                        _a = '`';
                        return [4 /*yield*/, p];
                    case 1:
                        result = _a + (_c.sent()) + '`';
                        return [3 /*break*/, 5];
                    case 2:
                        if (!(inputMode.toString() === _models_port__WEBPACK_IMPORTED_MODULE_1__["InputType"].File.toString())) return [3 /*break*/, 5];
                        if (!val.lastModified) return [3 /*break*/, 4];
                        p = new Promise(function (resolve) {
                            var reader = new FileReader();
                            reader.onload = function () {
                                resolve(reader.result);
                            };
                            reader.readAsText(val);
                        });
                        _b = '`';
                        return [4 /*yield*/, p];
                    case 3:
                        result = _b + (_c.sent()) + '`';
                        window.localStorage.setItem(val.name, result);
                        if (defaultCheck) {
                            arg.default = { 'name': val.name };
                        }
                        else {
                            arg.value = { 'name': val.name };
                        }
                        return [3 /*break*/, 5];
                    case 4:
                        result = window.localStorage.getItem(val.name);
                        _c.label = 5;
                    case 5: return [2 /*return*/, result];
                }
            });
        });
    };
    CodeUtils.loadFile = function (f) {
        var stream = rxjs__WEBPACK_IMPORTED_MODULE_2__["Observable"].create(function (observer) {
            var request = new XMLHttpRequest();
            request.open('GET', f.download_url);
            request.onload = function () {
                if (request.status === 200) {
                    var fl = circular_json__WEBPACK_IMPORTED_MODULE_3__["parse"](request.responseText);
                    observer.next(fl);
                    observer.complete();
                }
                else {
                    observer.error('error happened');
                }
            };
            request.onerror = function () {
                observer.error('error happened');
            };
            request.send();
        });
        stream.subscribe(function (loadeddata) {
            return loadeddata;
        });
    };
    CodeUtils.mergeInputs = function (models) {
        var result = _modules__WEBPACK_IMPORTED_MODULE_4__["_parameterTypes"]['newFn']();
        for (var _i = 0, models_1 = models; _i < models_1.length; _i++) {
            var model = models_1[_i];
            _modules__WEBPACK_IMPORTED_MODULE_4__["_parameterTypes"]['mergeFn'](result, model);
        }
        return result;
    };
    CodeUtils.getInputValue = function (inp, node) {
        var input;
        if (node.type === 'start' || inp.edges.length === 0) {
            input = _modules__WEBPACK_IMPORTED_MODULE_4__["_parameterTypes"]['newFn']();
        }
        else {
            var inputs = [];
            for (var _i = 0, _a = inp.edges; _i < _a.length; _i++) {
                var edge = _a[_i];
                if (edge.source.parentNode.enabled) {
                    inputs.push(edge.source.value);
                }
            }
            input = CodeUtils.mergeInputs(inputs);
            /*
            if (input.constructor === gsConstructor) {
                input = `new __MODULES__.gs.Model(${input.toJSON()})`
            } else {
                // do nothing
            }
            */
        }
        return input;
    };
    CodeUtils.getNodeCode = function (node, addProdArr) {
        if (addProdArr === void 0) { addProdArr = false; }
        node.hasError = false;
        var codeStr = [];
        var varsDefined = [];
        // input initializations
        if (addProdArr) {
            var input = CodeUtils.getInputValue(node.input, node);
            node.input.value = input;
        }
        if (node.type === 'start') {
            codeStr.push('__params__.constants = {};\n');
        }
        codeStr.push("__modules__." + _modules__WEBPACK_IMPORTED_MODULE_4__["_parameterTypes"].preprocess + "( __params__.model);");
        // procedure
        for (var _i = 0, _a = node.procedure; _i < _a.length; _i++) {
            var prod = _a[_i];
            // if (node.type === 'start' && !addProdArr) { break; }
            codeStr = codeStr.concat(CodeUtils.getProcedureCode(prod, varsDefined, addProdArr));
        }
        if (node.type === 'end' && node.procedure.length > 0) {
            return [codeStr, varsDefined];
            // codeStr.push('}');
            // return ['{'].concat(codeStr);
            // return `{\n${codeStr.join('\n')}\n}`;
        }
        else {
            codeStr.push("__modules__." + _modules__WEBPACK_IMPORTED_MODULE_4__["_parameterTypes"].postprocess + "( __params__.model);");
        }
        codeStr.push('return __params__.model;');
        return [codeStr, varsDefined];
        // return `\n${codeStr.join('\n')}\n\nreturn __params__.model;\n`;
        // return `{\n${codeStr.join('\n')}\nreturn result;\n}`;
        // return `/*    ${node.name.toUpperCase()}    */\n\n{\n${codeStr.join('\n')}\nreturn ${node.output.name};\n}`;
    };
    CodeUtils.getFunctionString = function (func) {
        var fullCode = '';
        var fnCode;
        if (func.args.length === 0) {
            fnCode = "function " + func.name + "(__params__)" +
                "{\nvar merged;\n";
        }
        else {
            fnCode = "function " + func.name + "(__params__, " + func.args.map(function (arg) { return arg.name; }).join(', ') + ")" +
                "{\nvar merged;\n";
        }
        for (var _i = 0, _a = func.flowchart.nodes; _i < _a.length; _i++) {
            var node = _a[_i];
            var codeRes = CodeUtils.getNodeCode(node, false);
            var code = codeRes[0];
            code = '{\n' + code.join('\n') + '\n}';
            if (func.args.length === 0) {
                fullCode += "function " + node.id + "(__params__)" + code + "\n\n";
            }
            else {
                fullCode += "function " + node.id + "(__params__, " + func.args.map(function (arg) { return arg.name; }).join(', ') + ")" + code + "\n\n";
            }
            if (node.type === 'start') {
                // fnCode += `let result_${node.id} = ${node.id}(__params__);\n`
                fnCode += "let result_" + node.id + " = __params__.model;\n";
            }
            else {
                var activeNodes = [];
                for (var _b = 0, _c = node.input.edges; _b < _c.length; _b++) {
                    var nodeEdge = _c[_b];
                    if (!nodeEdge.source.parentNode.enabled) {
                        continue;
                    }
                    activeNodes.push(nodeEdge.source.parentNode.id);
                }
                fnCode += "\n__params__.model = mergeInputs([" + activeNodes.map(function (nodeId) { return 'result_' + nodeId; }).join(', ') + "]);\n";
                // if (activeNodes.length === 1) {
                //     fnCode += `__params__.model = mergeInputs([result_${activeNodes}]);\n`;
                // } else {
                //     fnCode += `merged = mergeInputs([${activeNodes.map((nodeId) => 'result_' + nodeId).join(', ')}]);\n`;
                //     fnCode += `__params__.model = merged;\n`;
                // }
                if (func.args.length === 0) {
                    fnCode += "let result_" + node.id + " = " + node.id + "(__params__);\n";
                }
                else {
                    fnCode += "let result_" + node.id + " = " + node.id + "(__params__, " + func.args.map(function (arg) { return arg.name; }).join(', ') + ");\n";
                }
            }
            if (node.type === 'end') {
                // fnCode += `\n__mainParams__.model = mergeInputs([__mainParams__.model,__params__.model]);\n`;
                fnCode += "\nreturn result_" + node.id + ";\n";
            }
        }
        fnCode += '}\n\n';
        fullCode += fnCode;
        // console.log(fullCode)
        return fullCode;
    };
    return CodeUtils;
}());



/***/ }),

/***/ "./src/app/shared/models/code/execute.utils.ts":
/*!*****************************************************!*\
  !*** ./src/app/shared/models/code/execute.utils.ts ***!
  \*****************************************************/
/*! exports provided: ExecuteUtils */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ExecuteUtils", function() { return ExecuteUtils; });
var ExecuteUtils = /** @class */ (function () {
    function ExecuteUtils() {
    }
    return ExecuteUtils;
}());



/***/ }),

/***/ "./src/app/shared/models/code/index.ts":
/*!*********************************************!*\
  !*** ./src/app/shared/models/code/index.ts ***!
  \*********************************************/
/*! exports provided: CodeUtils, ExecuteUtils */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _code_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./code.utils */ "./src/app/shared/models/code/code.utils.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CodeUtils", function() { return _code_utils__WEBPACK_IMPORTED_MODULE_0__["CodeUtils"]; });

/* harmony import */ var _execute_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./execute.utils */ "./src/app/shared/models/code/execute.utils.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ExecuteUtils", function() { return _execute_utils__WEBPACK_IMPORTED_MODULE_1__["ExecuteUtils"]; });





/***/ }),

/***/ "./src/app/shared/models/flowchart/flowchart.interface.ts":
/*!****************************************************************!*\
  !*** ./src/app/shared/models/flowchart/flowchart.interface.ts ***!
  \****************************************************************/
/*! exports provided: canvasSize */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "canvasSize", function() { return canvasSize; });
//
//
// The flowchart is the basic datastructure in Mobius - it is essentially a linked-list.
// It also
//
var canvasSize = 10000;


/***/ }),

/***/ "./src/app/shared/models/flowchart/flowchart.utils.ts":
/*!************************************************************!*\
  !*** ./src/app/shared/models/flowchart/flowchart.utils.ts ***!
  \************************************************************/
/*! exports provided: FlowchartUtils */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FlowchartUtils", function() { return FlowchartUtils; });
/* harmony import */ var _flowchart_interface__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./flowchart.interface */ "./src/app/shared/models/flowchart/flowchart.interface.ts");
/* harmony import */ var _models_node__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @models/node */ "./src/app/shared/models/node/index.ts");


var FlowchartUtils = /** @class */ (function () {
    function FlowchartUtils() {
    }
    FlowchartUtils.newflowchart = function () {
        var startNode = _models_node__WEBPACK_IMPORTED_MODULE_1__["NodeUtils"].getStartNode();
        startNode.position = { x: _flowchart_interface__WEBPACK_IMPORTED_MODULE_0__["canvasSize"] * 1.07 / 2, y: _flowchart_interface__WEBPACK_IMPORTED_MODULE_0__["canvasSize"] / 2 };
        var middleNode = _models_node__WEBPACK_IMPORTED_MODULE_1__["NodeUtils"].getNewNode();
        middleNode.position = { x: _flowchart_interface__WEBPACK_IMPORTED_MODULE_0__["canvasSize"] * 1.07 / 2, y: 200 + _flowchart_interface__WEBPACK_IMPORTED_MODULE_0__["canvasSize"] / 2 };
        var endNode = _models_node__WEBPACK_IMPORTED_MODULE_1__["NodeUtils"].getEndNode();
        endNode.position = { x: _flowchart_interface__WEBPACK_IMPORTED_MODULE_0__["canvasSize"] * 1.07 / 2, y: 400 + _flowchart_interface__WEBPACK_IMPORTED_MODULE_0__["canvasSize"] / 2 };
        var startMid = {
            source: startNode.output,
            target: middleNode.input,
            selected: false
        };
        startNode.output.edges = [startMid];
        middleNode.input.edges = [startMid];
        var midEnd = {
            source: middleNode.output,
            target: endNode.input,
            selected: false
        };
        middleNode.output.edges = [midEnd];
        endNode.input.edges = [midEnd];
        middleNode.enabled = true;
        endNode.enabled = true;
        var flw = {
            name: 'Untitled',
            description: '',
            language: 'js',
            meta: {
                selected_nodes: [2]
            },
            nodes: [startNode, middleNode, endNode],
            edges: [startMid, midEnd],
            functions: [],
            ordered: true
        };
        return flw;
    };
    FlowchartUtils.checkNode = function (nodeOrder, node, enabled) {
        if (node.hasExecuted) {
            return;
        }
        else if (node.type === 'start') {
            nodeOrder.push(node);
        }
        else {
            for (var _i = 0, _a = node.input.edges; _i < _a.length; _i++) {
                var edge = _a[_i];
                if (!edge.source.parentNode.hasExecuted) {
                    return;
                }
            }
            nodeOrder.push(node);
        }
        node.hasExecuted = true;
        // node.enabled = enabled;
        for (var _b = 0, _c = node.output.edges; _b < _c.length; _b++) {
            var edge = _c[_b];
            FlowchartUtils.checkNode(nodeOrder, edge.target.parentNode, enabled);
        }
    };
    FlowchartUtils.orderNodes = function (flw) {
        var startNode;
        for (var _i = 0, _a = flw.nodes; _i < _a.length; _i++) {
            var node = _a[_i];
            if (node.type === 'start') {
                startNode = node;
            }
            node.hasExecuted = false;
        }
        var nodeOrder = [];
        FlowchartUtils.checkNode(nodeOrder, startNode, true);
        if (nodeOrder.length < flw.nodes.length) {
            /*
            for (const node of flw.nodes) {
                if (node.type !== 'start' && node.input.edges.length === 0) {
                    FlowchartUtils.checkNode(nodeOrder, node, false);
                }
            }
            */
            for (var _b = 0, _c = flw.nodes; _b < _c.length; _b++) {
                var node = _c[_b];
                var check = false;
                for (var _d = 0, nodeOrder_1 = nodeOrder; _d < nodeOrder_1.length; _d++) {
                    var existingNode = nodeOrder_1[_d];
                    if (existingNode === node) {
                        check = true;
                        break;
                    }
                }
                if (check) {
                    continue;
                }
                // node.enabled = false;
                nodeOrder.push(node);
            }
        }
        if (nodeOrder[nodeOrder.length - 1].type !== 'end') {
            for (var i = nodeOrder.length - 2; i > 0; i--) {
                if (nodeOrder[i].type === 'end') {
                    var endN = nodeOrder[i];
                    nodeOrder.splice(i, 1);
                    nodeOrder.push(endN);
                    break;
                }
            }
        }
        flw.nodes = nodeOrder;
        flw.ordered = true;
    };
    return FlowchartUtils;
}());



/***/ }),

/***/ "./src/app/shared/models/flowchart/index.ts":
/*!**************************************************!*\
  !*** ./src/app/shared/models/flowchart/index.ts ***!
  \**************************************************/
/*! exports provided: canvasSize, FlowchartUtils */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _flowchart_interface__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./flowchart.interface */ "./src/app/shared/models/flowchart/flowchart.interface.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "canvasSize", function() { return _flowchart_interface__WEBPACK_IMPORTED_MODULE_0__["canvasSize"]; });

/* harmony import */ var _flowchart_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./flowchart.utils */ "./src/app/shared/models/flowchart/flowchart.utils.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "FlowchartUtils", function() { return _flowchart_utils__WEBPACK_IMPORTED_MODULE_1__["FlowchartUtils"]; });





/***/ }),

/***/ "./src/app/shared/models/node/index.ts":
/*!*********************************************!*\
  !*** ./src/app/shared/models/node/index.ts ***!
  \*********************************************/
/*! exports provided: NodeUtils */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node.utils */ "./src/app/shared/models/node/node.utils.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "NodeUtils", function() { return _node_utils__WEBPACK_IMPORTED_MODULE_0__["NodeUtils"]; });




/***/ }),

/***/ "./src/app/shared/models/node/node.utils.ts":
/*!**************************************************!*\
  !*** ./src/app/shared/models/node/node.utils.ts ***!
  \**************************************************/
/*! exports provided: NodeUtils */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NodeUtils", function() { return NodeUtils; });
/* harmony import */ var _models_procedure__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @models/procedure */ "./src/app/shared/models/procedure/index.ts");
/* harmony import */ var _models_port__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @models/port */ "./src/app/shared/models/port/index.ts");
/* harmony import */ var circular_json__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! circular-json */ "./node_modules/circular-json/build/circular-json.node.js");
/* harmony import */ var circular_json__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(circular_json__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @utils */ "./src/app/shared/utils/index.ts");
/* harmony import */ var _shared_decorators__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @shared/decorators */ "./src/app/shared/decorators/index.ts");
/* harmony import */ var _modules__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @modules */ "./src/app/core/modules/index.ts");






var NodeUtils = /** @class */ (function () {
    function NodeUtils() {
    }
    NodeUtils.getNewNode = function () {
        var node = {
            name: 'Node',
            id: _utils__WEBPACK_IMPORTED_MODULE_3__["IdGenerator"].getNodeID(),
            position: { x: 0, y: 0 },
            enabled: false,
            type: '',
            procedure: [{ type: 13, ID: '',
                    parent: undefined,
                    meta: { name: '', module: '' },
                    children: undefined,
                    argCount: 0,
                    args: [],
                    print: false,
                    enabled: true,
                    selected: false,
                    hasError: false }],
            state: {
                procedure: [],
                input_port: undefined,
                output_port: undefined
            },
            input: _models_port__WEBPACK_IMPORTED_MODULE_1__["PortUtils"].getNewInput(),
            output: _models_port__WEBPACK_IMPORTED_MODULE_1__["PortUtils"].getNewOutput()
        };
        node.input.parentNode = node;
        node.output.parentNode = node;
        return node;
    };
    NodeUtils.getStartNode = function () {
        var node = NodeUtils.getNewNode();
        node.procedure = [];
        node.enabled = true;
        node.name = 'Start';
        node.type = 'start';
        return node;
    };
    NodeUtils.getEndNode = function () {
        var node = NodeUtils.getNewNode();
        var returnMeta = _modules__WEBPACK_IMPORTED_MODULE_5__["_parameterTypes"].return.split('.');
        var check = false;
        for (var _i = 0, ModuleList_1 = _shared_decorators__WEBPACK_IMPORTED_MODULE_4__["ModuleList"]; _i < ModuleList_1.length; _i++) {
            var i = ModuleList_1[_i];
            if (i.module !== returnMeta[0]) {
                continue;
            }
            for (var _a = 0, _b = i.functions; _a < _b.length; _a++) {
                var j = _b[_a];
                if (j.name !== returnMeta[1]) {
                    continue;
                }
                var newReturn = { type: 11, ID: '',
                    parent: undefined,
                    meta: { name: '', module: '' },
                    children: undefined,
                    argCount: j.argCount,
                    args: j.args,
                    print: false,
                    enabled: true,
                    selected: false,
                    hasError: false };
                for (var _c = 0, _d = newReturn.args; _c < _d.length; _c++) {
                    var arg = _d[_c];
                    arg.value = '';
                }
                node.procedure.push(newReturn);
                check = true;
                break;
            }
            break;
        }
        if (!check) {
            console.log('CORE FUNCTION ERROR: Unable to retrieve return procedure, please check "Return" in _ParameterTypes.ts');
        }
        // node.procedure = [];
        node.name = 'End';
        node.type = 'end';
        return node;
    };
    NodeUtils.deselect_procedure = function (node) {
        for (var _i = 0, _a = node.state.procedure; _i < _a.length; _i++) {
            var prod = _a[_i];
            prod.selected = false;
        }
        node.state.procedure = [];
    };
    NodeUtils.rearrangeSelected = function (prodList, tempList, prods) {
        for (var _i = 0, prods_1 = prods; _i < prods_1.length; _i++) {
            var pr = prods_1[_i];
            if (!pr.selected) {
                if (pr.children) {
                    NodeUtils.rearrangeSelected(prodList, tempList, pr.children);
                }
                continue;
            }
            var i = 0;
            while (i < tempList.length) {
                if (tempList[i] === pr) {
                    prodList.push(pr);
                    tempList.splice(i, 1);
                    break;
                }
                i += 1;
            }
            if (pr.children) {
                NodeUtils.rearrangeSelected(prodList, tempList, pr.children);
            }
        }
    };
    NodeUtils.select_procedure = function (node, procedure, ctrl) {
        if (!procedure) {
            return;
        }
        if (ctrl) {
            var selIndex = 0;
            var selected = false;
            while (selIndex < node.state.procedure.length) {
                if (node.state.procedure[selIndex] === procedure) {
                    selected = true;
                    node.state.procedure.splice(selIndex, 1);
                    procedure.selected = false;
                    break;
                }
                selIndex += 1;
            }
            if (!selected) {
                procedure.selected = true;
                node.state.procedure.push(procedure);
                var tempArray = node.state.procedure.splice(0, node.state.procedure.length);
                NodeUtils.rearrangeSelected(node.state.procedure, tempArray, node.procedure);
                // console.log(node.state.procedure);
            }
        }
        else {
            var sel = procedure.selected;
            for (var _i = 0, _a = node.state.procedure; _i < _a.length; _i++) {
                var prod = _a[_i];
                prod.selected = false;
            }
            if (sel && node.state.procedure.length === 1 && node.state.procedure[0] === procedure) {
                node.state.procedure = [];
            }
            else {
                node.state.procedure = [procedure];
                procedure.selected = true;
            }
        }
    };
    NodeUtils.insert_procedure = function (node, prod) {
        if (prod.type === _models_procedure__WEBPACK_IMPORTED_MODULE_0__["ProcedureTypes"].Constant) {
            node.procedure.push(prod);
            return;
        }
        if (node.state.procedure[0]) {
            var list = void 0;
            if (node.state.procedure[0].parent) {
                prod.parent = node.state.procedure[0].parent;
                list = prod.parent.children;
            }
            else {
                list = node.procedure;
            }
            for (var index in list) {
                if (list[index].selected) {
                    list.splice(parseInt(index, 10) + 1, 0, prod);
                    break;
                }
            }
        }
        else {
            if (node.type === 'end') {
                node.procedure.splice(node.procedure.length - 1, 0, prod);
                return;
            }
            else if (node.type === 'start') {
                for (var i = 0; i < node.procedure.length; i++) {
                    if (node.procedure[i].type === _models_procedure__WEBPACK_IMPORTED_MODULE_0__["ProcedureTypes"].Constant) {
                        node.procedure.splice(i, 0, prod);
                        return;
                    }
                }
                node.procedure.push(prod);
                return;
            }
            node.procedure.push(prod);
        }
    };
    NodeUtils.initiateChildren = function (prod) {
        prod.children = [
            { type: 13, ID: '',
                parent: prod, meta: { name: '', module: '' },
                children: undefined,
                argCount: 0,
                args: [],
                print: false,
                enabled: true,
                selected: false,
                hasError: false }
        ];
    };
    NodeUtils.add_procedure = function (node, type, data) {
        var prod = {};
        prod.type = type;
        NodeUtils.insert_procedure(node, prod);
        // add ID to the procedure
        prod.ID = _utils__WEBPACK_IMPORTED_MODULE_3__["IdGenerator"].getProdID();
        prod.enabled = true;
        prod.print = false;
        switch (prod.type) {
            case _models_procedure__WEBPACK_IMPORTED_MODULE_0__["ProcedureTypes"].Variable:
                prod.argCount = 2;
                prod.args = [
                    { name: 'var_name', value: undefined, default: undefined },
                    { name: 'value', value: undefined, default: undefined }
                ];
                break;
            case _models_procedure__WEBPACK_IMPORTED_MODULE_0__["ProcedureTypes"].Foreach:
                prod.argCount = 2;
                prod.args = [{ name: 'item', value: undefined, default: undefined }, { name: 'list', value: undefined, default: [] }];
                this.initiateChildren(prod);
                break;
            case _models_procedure__WEBPACK_IMPORTED_MODULE_0__["ProcedureTypes"].While:
                prod.argCount = 1;
                prod.args = [{ name: 'condition', value: undefined, default: undefined }];
                this.initiateChildren(prod);
                break;
            case _models_procedure__WEBPACK_IMPORTED_MODULE_0__["ProcedureTypes"].If:
            case _models_procedure__WEBPACK_IMPORTED_MODULE_0__["ProcedureTypes"].Elseif:
                prod.argCount = 1;
                prod.args = [{ name: 'condition', value: undefined, default: undefined }];
                this.initiateChildren(prod);
                break;
            case _models_procedure__WEBPACK_IMPORTED_MODULE_0__["ProcedureTypes"].Else:
                prod.argCount = 0;
                prod.args = [];
                this.initiateChildren(prod);
                break;
            case _models_procedure__WEBPACK_IMPORTED_MODULE_0__["ProcedureTypes"].Break:
            case _models_procedure__WEBPACK_IMPORTED_MODULE_0__["ProcedureTypes"].Continue:
                prod.argCount = 0;
                break;
            case _models_procedure__WEBPACK_IMPORTED_MODULE_0__["ProcedureTypes"].Constant:
                prod.argCount = 2;
                prod.meta = { module: 'Input', name: 'Constant', inputMode: data, description: undefined };
                prod.args = [
                    { name: 'const_name', value: undefined, default: 0 },
                    { name: '__input__', value: undefined, default: 0 }
                ];
                break;
            case _models_procedure__WEBPACK_IMPORTED_MODULE_0__["ProcedureTypes"].AddData:
                prod.argCount = 2;
                prod.meta = { module: 'Input', name: 'Constant', inputMode: _models_port__WEBPACK_IMPORTED_MODULE_1__["InputType"].SimpleInput, description: undefined };
                prod.args = [
                    { name: 'const_name', value: undefined, default: 0 },
                    { name: '__input__', value: undefined, default: 0 }
                ];
                break;
            case _models_procedure__WEBPACK_IMPORTED_MODULE_0__["ProcedureTypes"].Return:
                prod.meta = { module: 'Output', name: 'Return', description: undefined };
                prod.argCount = 1;
                prod.args = [{ name: 'index', value: undefined, default: 0 }];
                break;
            case _models_procedure__WEBPACK_IMPORTED_MODULE_0__["ProcedureTypes"].Function:
                if (!data) {
                    throw Error('No function data');
                }
                prod.meta = { module: data.module, name: data.name };
                prod.argCount = data.argCount + 1;
                var returnArg = { name: 'var_name', value: undefined, default: undefined };
                if (!data.hasReturn) {
                    returnArg = { name: '__none__', value: undefined, default: undefined };
                }
                prod.args = [returnArg].concat(data.args);
                break;
            case _models_procedure__WEBPACK_IMPORTED_MODULE_0__["ProcedureTypes"].Imported:
                prod.meta = { module: data.module, name: data.name };
                prod.argCount = data.argCount + 1;
                prod.args = [{ name: 'var_name', value: undefined, default: undefined }].concat(data.args);
                break;
        }
        // select the procedure
        if (prod.children) {
            NodeUtils.select_procedure(node, prod.children[0], false);
        }
        else {
            NodeUtils.select_procedure(node, prod, false);
        }
    };
    NodeUtils.updateNode = function (newNode, newPos) {
        newNode.id = _utils__WEBPACK_IMPORTED_MODULE_3__["IdGenerator"].getNodeID();
        newNode.input = _models_port__WEBPACK_IMPORTED_MODULE_1__["PortUtils"].getNewInput();
        newNode.output = _models_port__WEBPACK_IMPORTED_MODULE_1__["PortUtils"].getNewOutput();
        newNode.input.parentNode = newNode;
        newNode.output.parentNode = newNode;
        newNode.position.x = newPos.x;
        newNode.position.y = newPos.y;
        return newNode;
    };
    NodeUtils.updateID = function (prod) {
        if (prod.hasOwnProperty('children')) {
            prod.children.map(function (child) {
                NodeUtils.updateID(child);
            });
        }
        prod.ID = _utils__WEBPACK_IMPORTED_MODULE_3__["IdGenerator"].getProdID();
        return prod;
    };
    NodeUtils.paste_procedure = function (node, prod) {
        var newProd = NodeUtils.updateID(circular_json__WEBPACK_IMPORTED_MODULE_2__["parse"](circular_json__WEBPACK_IMPORTED_MODULE_2__["stringify"](prod)));
        newProd.parent = undefined;
        NodeUtils.insert_procedure(node, newProd);
        NodeUtils.select_procedure(node, newProd, false);
    };
    return NodeUtils;
}());



/***/ }),

/***/ "./src/app/shared/models/port/index.ts":
/*!*********************************************!*\
  !*** ./src/app/shared/models/port/index.ts ***!
  \*********************************************/
/*! exports provided: PortUtils, PortType, InputType, OutputType */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./types */ "./src/app/shared/models/port/types.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PortType", function() { return _types__WEBPACK_IMPORTED_MODULE_0__["PortType"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "InputType", function() { return _types__WEBPACK_IMPORTED_MODULE_0__["InputType"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "OutputType", function() { return _types__WEBPACK_IMPORTED_MODULE_0__["OutputType"]; });

/* harmony import */ var _port_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./port.utils */ "./src/app/shared/models/port/port.utils.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PortUtils", function() { return _port_utils__WEBPACK_IMPORTED_MODULE_1__["PortUtils"]; });





/***/ }),

/***/ "./src/app/shared/models/port/port.utils.ts":
/*!**************************************************!*\
  !*** ./src/app/shared/models/port/port.utils.ts ***!
  \**************************************************/
/*! exports provided: PortUtils */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PortUtils", function() { return PortUtils; });
/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./types */ "./src/app/shared/models/port/types.ts");

var PortUtils = /** @class */ (function () {
    function PortUtils() {
    }
    PortUtils.getNewInput = function () {
        var inp = {
            name: 'input',
            type: _types__WEBPACK_IMPORTED_MODULE_0__["PortType"].Input,
            value: undefined,
            default: undefined,
            edges: [],
            meta: {
                mode: _types__WEBPACK_IMPORTED_MODULE_0__["InputType"].SimpleInput,
                opts: {}
            }
        };
        return inp;
    };
    PortUtils.getNewOutput = function () {
        var oup = {
            name: 'output',
            type: _types__WEBPACK_IMPORTED_MODULE_0__["PortType"].Output,
            edges: [],
            meta: {
                mode: _types__WEBPACK_IMPORTED_MODULE_0__["OutputType"].Text,
            }
        };
        return oup;
    };
    return PortUtils;
}());



/***/ }),

/***/ "./src/app/shared/models/port/types.ts":
/*!*********************************************!*\
  !*** ./src/app/shared/models/port/types.ts ***!
  \*********************************************/
/*! exports provided: PortType, InputType, OutputType */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PortType", function() { return PortType; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "InputType", function() { return InputType; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "OutputType", function() { return OutputType; });
var PortType;
(function (PortType) {
    PortType[PortType["Input"] = 0] = "Input";
    PortType[PortType["Output"] = 1] = "Output";
})(PortType || (PortType = {}));
var InputType;
(function (InputType) {
    InputType[InputType["SimpleInput"] = 0] = "SimpleInput";
    InputType[InputType["Slider"] = 1] = "Slider";
    InputType[InputType["Checkbox"] = 2] = "Checkbox";
    InputType[InputType["URL"] = 3] = "URL";
    InputType[InputType["File"] = 4] = "File";
    InputType[InputType["Constant"] = 5] = "Constant";
})(InputType || (InputType = {}));
var OutputType;
(function (OutputType) {
    OutputType[OutputType["Text"] = 0] = "Text";
    OutputType[OutputType["Code"] = 1] = "Code";
})(OutputType || (OutputType = {}));


/***/ }),

/***/ "./src/app/shared/models/procedure/index.ts":
/*!**************************************************!*\
  !*** ./src/app/shared/models/procedure/index.ts ***!
  \**************************************************/
/*! exports provided: ProcedureTypes */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./types */ "./src/app/shared/models/procedure/types.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ProcedureTypes", function() { return _types__WEBPACK_IMPORTED_MODULE_0__["ProcedureTypes"]; });




/***/ }),

/***/ "./src/app/shared/models/procedure/types.ts":
/*!**************************************************!*\
  !*** ./src/app/shared/models/procedure/types.ts ***!
  \**************************************************/
/*! exports provided: ProcedureTypes */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ProcedureTypes", function() { return ProcedureTypes; });
var ProcedureTypes;
(function (ProcedureTypes) {
    ProcedureTypes[ProcedureTypes["Variable"] = 0] = "Variable";
    ProcedureTypes[ProcedureTypes["If"] = 1] = "If";
    ProcedureTypes[ProcedureTypes["Elseif"] = 2] = "Elseif";
    ProcedureTypes[ProcedureTypes["Else"] = 3] = "Else";
    ProcedureTypes[ProcedureTypes["Foreach"] = 4] = "Foreach";
    ProcedureTypes[ProcedureTypes["While"] = 5] = "While";
    ProcedureTypes[ProcedureTypes["Break"] = 6] = "Break";
    ProcedureTypes[ProcedureTypes["Continue"] = 7] = "Continue";
    ProcedureTypes[ProcedureTypes["Function"] = 8] = "Function";
    ProcedureTypes[ProcedureTypes["Imported"] = 9] = "Imported";
    ProcedureTypes[ProcedureTypes["Constant"] = 10] = "Constant";
    ProcedureTypes[ProcedureTypes["Return"] = 11] = "Return";
    ProcedureTypes[ProcedureTypes["AddData"] = 12] = "AddData";
    ProcedureTypes[ProcedureTypes["Blank"] = 13] = "Blank";
})(ProcedureTypes || (ProcedureTypes = {}));


/***/ }),

/***/ "./src/app/shared/shared.module.ts":
/*!*****************************************!*\
  !*** ./src/app/shared/shared.module.ts ***!
  \*****************************************/
/*! exports provided: SharedModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SharedModule", function() { return SharedModule; });
/* harmony import */ var angular_split__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! angular-split */ "./node_modules/angular-split/fesm5/angular-split.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/fesm5/common.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm5/forms.js");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/material */ "./node_modules/@angular/material/esm5/material.es5.js");
/* harmony import */ var _directives_filesys__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./directives/filesys */ "./src/app/shared/directives/filesys/index.ts");
/* harmony import */ var _components_execute_execute_component__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./components/execute/execute.component */ "./src/app/shared/components/execute/execute.component.ts");
/* harmony import */ var _components_not_found_not_found_component__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./components/not-found/not-found.component */ "./src/app/shared/components/not-found/not-found.component.ts");
/* harmony import */ var _components_navigation_navigation_component__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./components/navigation/navigation.component */ "./src/app/shared/components/navigation/navigation.component.ts");
/* harmony import */ var _components_header_panel_header_component__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./components/header/panel-header.component */ "./src/app/shared/components/header/panel-header.component.ts");
/* harmony import */ var _components_add_components_add_output_component__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./components/add-components/add_output.component */ "./src/app/shared/components/add-components/add_output.component.ts");
/* harmony import */ var _components_add_components_add_node_component__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./components/add-components/add_node.component */ "./src/app/shared/components/add-components/add_node.component.ts");
/* harmony import */ var _components_add_components_add_input_component__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./components/add-components/add_input.component */ "./src/app/shared/components/add-components/add_input.component.ts");
/* harmony import */ var _components_file__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./components/file */ "./src/app/shared/components/file/index.ts");
/* harmony import */ var _components_notification_notification_component__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./components/notification/notification.component */ "./src/app/shared/components/notification/notification.component.ts");
/* harmony import */ var _model_viewers_model_viewers_container_module__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../model-viewers/model-viewers-container.module */ "./src/app/model-viewers/model-viewers-container.module.ts");
/* harmony import */ var _components_file_loadurl_component__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./components/file/loadurl.component */ "./src/app/shared/components/file/loadurl.component.ts");
/* harmony import */ var _components_spinner_spinner_component__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./components/spinner/spinner.component */ "./src/app/shared/components/spinner/spinner.component.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (undefined && undefined.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
/*
 *  This module is to be imported ONLY by the AppModule
 *  Contains all global services
 *
 */

// @angular stuff





// app directives

// app components







// import { ParameterViewerComponent } from './components/parameter-viewer/parameter-viewer.component';
// import { InputPortViewerComponent } from './components/parameter-viewer/input-port-viewer/input-port-viewer.component';
// import { ProcedureInputViewerComponent } from './components/parameter-viewer/procedure-input-viewer/procedure-input-viewer.component';


// app model viewers



var SharedModule = /** @class */ (function () {
    function SharedModule(shared) {
        /*
        /// Prevents any module apart from AppModule from re-importing
        if(shared){
            throw new Error("Core Module has already been imported");
        }
        */
    }
    SharedModule = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["NgModule"])({
            providers: [],
            declarations: [
                _directives_filesys__WEBPACK_IMPORTED_MODULE_6__["MbFileReaderDirective"],
                _components_execute_execute_component__WEBPACK_IMPORTED_MODULE_7__["ExecuteComponent"],
                _components_not_found_not_found_component__WEBPACK_IMPORTED_MODULE_8__["PageNotFoundComponent"],
                _components_navigation_navigation_component__WEBPACK_IMPORTED_MODULE_9__["NavigationComponent"],
                _components_header_panel_header_component__WEBPACK_IMPORTED_MODULE_10__["PanelHeaderComponent"],
                _components_notification_notification_component__WEBPACK_IMPORTED_MODULE_15__["NotificationComponent"],
                _components_add_components_add_node_component__WEBPACK_IMPORTED_MODULE_12__["AddNodeComponent"], _components_add_components_add_input_component__WEBPACK_IMPORTED_MODULE_13__["AddInputComponent"], _components_add_components_add_output_component__WEBPACK_IMPORTED_MODULE_11__["AddOutputComponent"],
                // ParameterViewerComponent,  InputPortViewerComponent, ProcedureInputViewerComponent,
                _components_file__WEBPACK_IMPORTED_MODULE_14__["NewFileComponent"], _components_file__WEBPACK_IMPORTED_MODULE_14__["SaveFileComponent"], _components_file__WEBPACK_IMPORTED_MODULE_14__["LoadFileComponent"], _components_file_loadurl_component__WEBPACK_IMPORTED_MODULE_17__["LoadUrlComponent"],
                _components_spinner_spinner_component__WEBPACK_IMPORTED_MODULE_18__["SpinnerComponent"]
            ],
            imports: [
                _angular_common__WEBPACK_IMPORTED_MODULE_2__["CommonModule"],
                _angular_router__WEBPACK_IMPORTED_MODULE_3__["RouterModule"],
                _angular_material__WEBPACK_IMPORTED_MODULE_5__["MatSliderModule"], _angular_material__WEBPACK_IMPORTED_MODULE_5__["MatCheckboxModule"],
                _model_viewers_model_viewers_container_module__WEBPACK_IMPORTED_MODULE_16__["DataViewersContainer"],
                angular_split__WEBPACK_IMPORTED_MODULE_0__["AngularSplitModule"],
                _angular_forms__WEBPACK_IMPORTED_MODULE_4__["FormsModule"],
                _angular_material__WEBPACK_IMPORTED_MODULE_5__["MatIconModule"],
            ],
            entryComponents: [],
            exports: [
                _angular_forms__WEBPACK_IMPORTED_MODULE_4__["FormsModule"],
                _angular_material__WEBPACK_IMPORTED_MODULE_5__["MatIconModule"],
                _angular_material__WEBPACK_IMPORTED_MODULE_5__["MatSliderModule"],
                /*
                MatMenuModule,
                MatButtonModule,
                MatExpansionModule,
                MatSelectModule,
                MatFormFieldModule,
                */
                _model_viewers_model_viewers_container_module__WEBPACK_IMPORTED_MODULE_16__["DataViewersContainer"],
                angular_split__WEBPACK_IMPORTED_MODULE_0__["AngularSplitModule"],
                _directives_filesys__WEBPACK_IMPORTED_MODULE_6__["MbFileReaderDirective"],
                _components_execute_execute_component__WEBPACK_IMPORTED_MODULE_7__["ExecuteComponent"],
                _components_not_found_not_found_component__WEBPACK_IMPORTED_MODULE_8__["PageNotFoundComponent"],
                _components_navigation_navigation_component__WEBPACK_IMPORTED_MODULE_9__["NavigationComponent"],
                _components_header_panel_header_component__WEBPACK_IMPORTED_MODULE_10__["PanelHeaderComponent"],
                _components_add_components_add_node_component__WEBPACK_IMPORTED_MODULE_12__["AddNodeComponent"],
                _components_add_components_add_input_component__WEBPACK_IMPORTED_MODULE_13__["AddInputComponent"],
                _components_add_components_add_output_component__WEBPACK_IMPORTED_MODULE_11__["AddOutputComponent"],
                _components_spinner_spinner_component__WEBPACK_IMPORTED_MODULE_18__["SpinnerComponent"],
                // ParameterViewerComponent,
                _components_notification_notification_component__WEBPACK_IMPORTED_MODULE_15__["NotificationComponent"],
                _components_file__WEBPACK_IMPORTED_MODULE_14__["NewFileComponent"], _components_file__WEBPACK_IMPORTED_MODULE_14__["SaveFileComponent"], _components_file__WEBPACK_IMPORTED_MODULE_14__["LoadFileComponent"], _components_file_loadurl_component__WEBPACK_IMPORTED_MODULE_17__["LoadUrlComponent"]
            ]
        }),
        __param(0, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Optional"])()), __param(0, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["SkipSelf"])()),
        __metadata("design:paramtypes", [SharedModule])
    ], SharedModule);
    return SharedModule;
}());



/***/ }),

/***/ "./src/app/shared/utils/GUID.ts":
/*!**************************************!*\
  !*** ./src/app/shared/utils/GUID.ts ***!
  \**************************************/
/*! exports provided: IdGenerator */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "IdGenerator", function() { return IdGenerator; });
var IdGenerator = /** @class */ (function () {
    function IdGenerator() {
    }
    IdGenerator.s4 = function () {
        return Math.floor((1 + Math.random()) * 0x10000)
            .toString(16)
            .substring(1);
    };
    IdGenerator.getId = function () {
        return this.s4() + this.s4() + '-' + this.s4() + '-' + this.s4() + '-' +
            this.s4() + '-' + this.s4() + this.s4() + this.s4();
    };
    IdGenerator.getNodeID = function () {
        return 'node_' + Math.random().toString(36).substr(2, 16);
    };
    IdGenerator.getProdID = function () {
        return 'prod-' + Math.random().toString(36).substr(2, 16);
    };
    return IdGenerator;
}());



/***/ }),

/***/ "./src/app/shared/utils/index.ts":
/*!***************************************!*\
  !*** ./src/app/shared/utils/index.ts ***!
  \***************************************/
/*! exports provided: IdGenerator */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _GUID__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./GUID */ "./src/app/shared/utils/GUID.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "IdGenerator", function() { return _GUID__WEBPACK_IMPORTED_MODULE_0__["IdGenerator"]; });




/***/ }),

/***/ "./src/app/views/index.ts":
/*!********************************!*\
  !*** ./src/app/views/index.ts ***!
  \********************************/
/*! exports provided: ViewEditorComponent, ViewEditorModule, ViewFlowchartComponent, ViewFlowchartModule, ViewGalleryComponent, ViewGalleryModule, ViewDashboardComponent, ViewDashboardModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _view_editor_view_editor_component__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./view-editor/view-editor.component */ "./src/app/views/view-editor/view-editor.component.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ViewEditorComponent", function() { return _view_editor_view_editor_component__WEBPACK_IMPORTED_MODULE_0__["ViewEditorComponent"]; });

/* harmony import */ var _view_editor_view_editor_module__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./view-editor/view-editor.module */ "./src/app/views/view-editor/view-editor.module.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ViewEditorModule", function() { return _view_editor_view_editor_module__WEBPACK_IMPORTED_MODULE_1__["ViewEditorModule"]; });

/* harmony import */ var _view_flowchart_view_flowchart_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./view-flowchart/view-flowchart.component */ "./src/app/views/view-flowchart/view-flowchart.component.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ViewFlowchartComponent", function() { return _view_flowchart_view_flowchart_component__WEBPACK_IMPORTED_MODULE_2__["ViewFlowchartComponent"]; });

/* harmony import */ var _view_flowchart_view_flowchart_module__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./view-flowchart/view-flowchart.module */ "./src/app/views/view-flowchart/view-flowchart.module.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ViewFlowchartModule", function() { return _view_flowchart_view_flowchart_module__WEBPACK_IMPORTED_MODULE_3__["ViewFlowchartModule"]; });

/* harmony import */ var _view_gallery_view_gallery_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./view-gallery/view-gallery.component */ "./src/app/views/view-gallery/view-gallery.component.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ViewGalleryComponent", function() { return _view_gallery_view_gallery_component__WEBPACK_IMPORTED_MODULE_4__["ViewGalleryComponent"]; });

/* harmony import */ var _view_gallery_view_gallery_module__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./view-gallery/view-gallery.module */ "./src/app/views/view-gallery/view-gallery.module.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ViewGalleryModule", function() { return _view_gallery_view_gallery_module__WEBPACK_IMPORTED_MODULE_5__["ViewGalleryModule"]; });

/* harmony import */ var _view_dashboard_view_dashboard_component__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./view-dashboard/view-dashboard.component */ "./src/app/views/view-dashboard/view-dashboard.component.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ViewDashboardComponent", function() { return _view_dashboard_view_dashboard_component__WEBPACK_IMPORTED_MODULE_6__["ViewDashboardComponent"]; });

/* harmony import */ var _view_dashboard_view_dashboard_module__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./view-dashboard/view-dashboard.module */ "./src/app/views/view-dashboard/view-dashboard.module.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ViewDashboardModule", function() { return _view_dashboard_view_dashboard_module__WEBPACK_IMPORTED_MODULE_7__["ViewDashboardModule"]; });











/***/ }),

/***/ "./src/app/views/view-dashboard/parameter-viewer/parameter-viewer.component.html":
/*!***************************************************************************************!*\
  !*** ./src/app/views/view-dashboard/parameter-viewer/parameter-viewer.component.html ***!
  \***************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<!-- <h2>{{displayName()}}</h2> -->\r\n\r\n<textarea id='display-flowchart-desc' [(ngModel)]='flowchart.description' placeholder=\"Flowchart Description\" disabled></textarea>\r\n\r\n<hr>\r\n<ng-container *ngFor=\"let prod of startNode.procedure\">\r\n    <div class='prod--container' *ngIf=\"prod.enabled && prod.type === 10 && prod.meta.inputMode != 5\">\r\n        <!-- input description -->\r\n        <textarea class='desc'\r\n                  id='{{prod.ID}}_desc'\r\n                  [(ngModel)]='prod.meta.description'\r\n                  placeholder=\"Input Description\"\r\n                  disabled></textarea>\r\n        <procedure-input-viewer [prod]=\"prod\"></procedure-input-viewer>\r\n    </div>\r\n</ng-container>\r\n"

/***/ }),

/***/ "./src/app/views/view-dashboard/parameter-viewer/parameter-viewer.component.scss":
/*!***************************************************************************************!*\
  !*** ./src/app/views/view-dashboard/parameter-viewer/parameter-viewer.component.scss ***!
  \***************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".container {\n  background-color: transparent;\n  width: auto;\n  height: auto;\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap; }\n\nh2 {\n  color: #373737;\n  text-align: left;\n  padding-left: 15px;\n  font-size: 12px;\n  line-height: 16px; }\n\np {\n  color: #373737;\n  text-align: left;\n  padding-left: 15px;\n  font-size: 12px;\n  line-height: 14px; }\n\nhr {\n  border-top: 2px solid #E6E6E6; }\n\ndiv[class^=\"container--\"] {\n  display: flex;\n  flex-direction: column;\n  margin: 10px 0px; }\n\ntextarea {\n  color: #373737;\n  background-color: transparent;\n  border: none;\n  padding: 0px 0px 0px 15px;\n  font-family: sans-serif;\n  font-size: 12px;\n  margin: 0px;\n  width: 100%;\n  min-height: 20px;\n  resize: none;\n  box-sizing: border-box; }\n\n.desc {\n  padding-left: 15px; }\n\n.prod--container {\n  margin-bottom: 6px; }\n\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdmlld3Mvdmlldy1kYXNoYm9hcmQvcGFyYW1ldGVyLXZpZXdlci9DOlxcVXNlcnNcXGFraWJkcHRcXERvY3VtZW50c1xcQW5ndWxhclxcbW9iaXVzLXBhcmFtZXRyaWMtbW9kZWxsZXIvc3JjXFxhcHBcXHZpZXdzXFx2aWV3LWRhc2hib2FyZFxccGFyYW1ldGVyLXZpZXdlclxccGFyYW1ldGVyLXZpZXdlci5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvdmlld3Mvdmlldy1kYXNoYm9hcmQvcGFyYW1ldGVyLXZpZXdlci9DOlxcVXNlcnNcXGFraWJkcHRcXERvY3VtZW50c1xcQW5ndWxhclxcbW9iaXVzLXBhcmFtZXRyaWMtbW9kZWxsZXIvc3JjXFxzY3NzXFxjb2xvcnMuc2NzcyIsInNyYy9hcHAvdmlld3Mvdmlldy1kYXNoYm9hcmQvcGFyYW1ldGVyLXZpZXdlci9DOlxcVXNlcnNcXGFraWJkcHRcXERvY3VtZW50c1xcQW5ndWxhclxcbW9iaXVzLXBhcmFtZXRyaWMtbW9kZWxsZXIvc3JjXFxzY3NzXFx2YXJpYWJsZXMuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFHQTtFQUNJLDhCQUE2QjtFQUU3QixZQUFXO0VBQ1gsYUFBWTtFQUVaLGNBQWE7RUFDYix1QkFBc0I7RUFDdEIsZ0JBQWUsRUFDbEI7O0FBRUQ7RUFDSSxlQ0xZO0VETVosaUJBQWdCO0VBQ2hCLG1CQUFrQjtFQUNsQixnQkViUztFRmNULGtCQUFpQixFQUNwQjs7QUFFRDtFQUNJLGVDYlk7RURjWixpQkFBZ0I7RUFDaEIsbUJBQWtCO0VBQ2xCLGdCRXJCUztFRnNCVCxrQkFBaUIsRUFDcEI7O0FBRUQ7RUFDSSw4QkMxQlksRUQyQmY7O0FBRUQ7RUFDSSxjQUFhO0VBQ2IsdUJBQXNCO0VBRXRCLGlCQUFnQixFQUNuQjs7QUFFRDtFQUNJLGVDaENZO0VEaUNaLDhCQUE2QjtFQUM3QixhQUFXO0VBQ1gsMEJBQXlCO0VBQ3pCLHdCQUF1QjtFQUN2QixnQkUxQ1M7RUYyQ1QsWUFBVztFQUNYLFlBQVc7RUFDWCxpQkFBZ0I7RUFDaEIsYUFBWTtFQUNaLHVCQUFzQixFQUN6Qjs7QUFFRDtFQUNJLG1CRXZEZ0IsRUZ3RG5COztBQUVEO0VBQ0ksbUJBQWtCLEVBQ3JCIiwiZmlsZSI6InNyYy9hcHAvdmlld3Mvdmlldy1kYXNoYm9hcmQvcGFyYW1ldGVyLXZpZXdlci9wYXJhbWV0ZXItdmlld2VyLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiQGltcG9ydCAnfnNjc3MvY29sb3JzJztcclxuQGltcG9ydCAnfnNjc3MvdmFyaWFibGVzJztcclxuXHJcbi5jb250YWluZXJ7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcclxuXHJcbiAgICB3aWR0aDogYXV0bztcclxuICAgIGhlaWdodDogYXV0bztcclxuXHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgIGZsZXgtd3JhcDogd3JhcDtcclxufVxyXG5cclxuaDJ7XHJcbiAgICBjb2xvcjogJGNvbG9yODtcclxuICAgIHRleHQtYWxpZ246IGxlZnQ7XHJcbiAgICBwYWRkaW5nLWxlZnQ6IDE1cHg7XHJcbiAgICBmb250LXNpemU6ICRmc2l6ZTI7XHJcbiAgICBsaW5lLWhlaWdodDogMTZweDtcclxufVxyXG5cclxucHtcclxuICAgIGNvbG9yOiAkY29sb3I4O1xyXG4gICAgdGV4dC1hbGlnbjogbGVmdDtcclxuICAgIHBhZGRpbmctbGVmdDogMTVweDtcclxuICAgIGZvbnQtc2l6ZTogJGZzaXplMjtcclxuICAgIGxpbmUtaGVpZ2h0OiAxNHB4O1xyXG59XHJcblxyXG5ocntcclxuICAgIGJvcmRlci10b3A6IDJweCBzb2xpZCAkY29sb3I1O1xyXG59XHJcblxyXG5kaXZbY2xhc3NePVwiY29udGFpbmVyLS1cIl17XHJcbiAgICBkaXNwbGF5OiBmbGV4OyBcclxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcblxyXG4gICAgbWFyZ2luOiAxMHB4IDBweDtcclxufVxyXG5cclxudGV4dGFyZWF7XHJcbiAgICBjb2xvcjogJGNvbG9yODtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xyXG4gICAgYm9yZGVyOm5vbmU7XHJcbiAgICBwYWRkaW5nOiAwcHggMHB4IDBweCAxNXB4O1xyXG4gICAgZm9udC1mYW1pbHk6IHNhbnMtc2VyaWY7XHJcbiAgICBmb250LXNpemU6ICRmc2l6ZTI7XHJcbiAgICBtYXJnaW46IDBweDtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgbWluLWhlaWdodDogMjBweDtcclxuICAgIHJlc2l6ZTogbm9uZTsgXHJcbiAgICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xyXG59XHJcblxyXG4uZGVzY3tcclxuICAgIHBhZGRpbmctbGVmdDogJHNtYWxsLXBhZGRpbmc7XHJcbn1cclxuXHJcbi5wcm9kLS1jb250YWluZXJ7XHJcbiAgICBtYXJnaW4tYm90dG9tOiA2cHg7XHJcbn1cclxuIiwiXHJcbiRjb2xvcjE6ICM4MDgwODA7XHJcbiRjb2xvcjI6ICM5OTk5OTk7XHJcbiRjb2xvcjM6ICNCM0IzQjM7IFxyXG4kY29sb3I0OiAjQ0NDQ0NDO1xyXG4kY29sb3I1OiAjRTZFNkU2O1xyXG4kY29sb3I1LTU6IHJnYigyNDUsIDI0NSwgMjQ1KTtcclxuJGNvbG9yNjogcmdiKDI1MCwgMjUwLCAyNTEpO1xyXG5cclxuJGNvbG9yNzogd2hpdGU7XHJcbiRjb2xvcjg6ICMzNzM3Mzc7XHJcblxyXG4kc2VsZWN0ZWQtY29sb3I6IHJnYigwLCAwLCAxMDkpO1xyXG4kaG92ZXItY29sb3I6ICRjb2xvcjI7XHJcblxyXG4kZXJyb3ItY29sb3I6ICNFOTQ4NTg7IC8vcGluay1yZWRcclxuJGVycm9yLWNvbG9yLWx0OiByZ2IoMjU1LCAyMjAsIDIyNCk7XHJcbiRwY29sb3IyOiAjRjNBMzJBOyAvL29yYW5nZS15ZWxsb3dcclxuJHByaW50LWNvbG9yOiAjODJCRjZFOyAvL2xpZ2h0Z3JlZW5cclxuJHByaW50LWNvbG9yLWx0OiByZ2IoMjMwLCAyNTUsIDIyMSk7XHJcblxyXG4vLyAkcHJvZC1iYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMjUwLDI1MCwyNTApO1xyXG4vLyAkYmFja2dyb3VuZC1jb2xvcjogcmdiKDIyMCwyMjAsMjIwKTtcclxuJGZ1bmN0aW9uLXRleHQtY29sb3I6IHJnYigxOTAsIDE0MCwgMzApO1xyXG4kZnVuY3Rpb24tdGV4dC1jb2xvcjI6IHJnYigxOCwgMTI2LCAxMzYpXHJcbiIsIiRwYWRkaW5nOiA0MHB4OyAvLyA/IG5vdCB1c2VkXHJcbiRzbWFsbC1wYWRkaW5nOiAxNXB4O1xyXG4kaGVhZGVyLWhlaWdodDogNDBweDtcclxuXHJcbiRmc2l6ZTE6IDE1cHg7XHJcbiRmc2l6ZTI6IDEycHg7XHJcbiRmc2l6ZTM6IDMwcHg7XHJcblxyXG4kcG9ydC1zaXplOiAxNXB4O1xyXG4kZGVmYXVsdC1zaWRlLXBhZGRpbmc6IDE1cHg7XHJcbiJdfQ== */"

/***/ }),

/***/ "./src/app/views/view-dashboard/parameter-viewer/parameter-viewer.component.ts":
/*!*************************************************************************************!*\
  !*** ./src/app/views/view-dashboard/parameter-viewer/parameter-viewer.component.ts ***!
  \*************************************************************************************/
/*! exports provided: ParameterViewerComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ParameterViewerComponent", function() { return ParameterViewerComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};

var canvas = document.createElement('canvas');
var ctx = canvas.getContext('2d');
ctx.font = '12px sans-serif';
var ParameterViewerComponent = /** @class */ (function () {
    function ParameterViewerComponent() {
    }
    ParameterViewerComponent.prototype.ngAfterViewInit = function () {
        var textarea = document.getElementById('display-flowchart-desc');
        if (textarea) {
            var desc = this.flowchart.description.split('\n');
            var textareaWidth = textarea.getBoundingClientRect().width - 20;
            var lineCount = 0;
            for (var _i = 0, desc_1 = desc; _i < desc_1.length; _i++) {
                var line = desc_1[_i];
                lineCount += Math.floor(ctx.measureText(line).width / textareaWidth) + 1;
            }
            textarea.style.height = lineCount * 14 + 4 + 'px';
        }
        for (var _a = 0, _b = this.startNode.procedure; _a < _b.length; _a++) {
            var prod = _b[_a];
            if (!prod.enabled || prod.type !== 10 || prod.meta.inputMode === 5) {
                continue;
            }
            textarea = document.getElementById(prod.ID + '_desc');
            if (textarea) {
                var desc = this.flowchart.description.split('\n');
                var textareaWidth = textarea.getBoundingClientRect().width - 20;
                var lineCount = 0;
                for (var _c = 0, desc_2 = desc; _c < desc_2.length; _c++) {
                    var line = desc_2[_c];
                    lineCount += Math.floor(ctx.measureText(line).width / textareaWidth) + 1;
                }
                textarea.style.height = lineCount * 14 + 4 + 'px';
            }
        }
    };
    ParameterViewerComponent.prototype.displayName = function () {
        return this.flowchart.name.replace(/_/g, ' ');
    };
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", Object)
    ], ParameterViewerComponent.prototype, "flowchart", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", Object)
    ], ParameterViewerComponent.prototype, "startNode", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", Object)
    ], ParameterViewerComponent.prototype, "endNode", void 0);
    ParameterViewerComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'parameter-viewer',
            template: __webpack_require__(/*! ./parameter-viewer.component.html */ "./src/app/views/view-dashboard/parameter-viewer/parameter-viewer.component.html"),
            styles: [__webpack_require__(/*! ./parameter-viewer.component.scss */ "./src/app/views/view-dashboard/parameter-viewer/parameter-viewer.component.scss")]
        })
    ], ParameterViewerComponent);
    return ParameterViewerComponent;
}());



/***/ }),

/***/ "./src/app/views/view-dashboard/parameter-viewer/procedure-input-viewer/procedure-input-viewer.component.html":
/*!********************************************************************************************************************!*\
  !*** ./src/app/views/view-dashboard/parameter-viewer/procedure-input-viewer/procedure-input-viewer.component.html ***!
  \********************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class='container'>\r\n    <div class='container--parameter'>\r\n        <input class='input-const-name' [class.disabled-input]='true' [value]='displayConstName()' \r\n        [style.width.px]='inputSize(prod.args[prod.argCount-2].value,\"Undefined\") + 10' disabled>\r\n\r\n        <div class = \"FFA\">\r\n            <ng-container class='parameter__name' [ngSwitch]=\"prod.meta.inputMode\">\r\n                <input *ngSwitchCase=\"PortTypes.SimpleInput\" [(ngModel)]='prod.args[prod.argCount-1].value' \r\n                placeholder='{{prod.args[prod.argCount-1].default}}'\r\n                [style.width.px]='inputSize(prod.args[prod.argCount-1].value, prod.args[prod.argCount-1].default)'>\r\n                \r\n                <ng-container *ngSwitchCase=\"PortTypes.Slider\">\r\n                    <!--<input [class.disabled-input]='true' [(ngModel)]='prod.args[prod.argCount-1].value' \r\n                    placeholder='prod.args[prod.argCount-1].default'\r\n                    [style.width.px]='inputSize(prod.args[prod.argCount-1].value, prod.args[prod.argCount-1].default)' disabled>-->\r\n                    <input [(ngModel)]='prod.args[prod.argCount-1].value' \r\n                    placeholder='{{prod.args[prod.argCount-1].default}}'\r\n                    [style.width.px]='inputSize(prod.args[prod.argCount-1].value, prod.args[prod.argCount-1].default)'>\r\n                    <mat-slider\r\n                        [(ngModel)]='prod.args[prod.argCount-1].value'\r\n                        thumbLabel\r\n                        step={{prod.args[prod.argCount-1].step||1}}\r\n                        min={{prod.args[prod.argCount-1].min||0}}\r\n                        max={{prod.args[prod.argCount-1].max||100}}></mat-slider>\r\n                    <!--\r\n                    <input [(ngModel)]='prod.args[prod.argCount-1].value' type=\"range\" placeholder='{{prod.args[prod.argCount-1].default}}'>\r\n                    <input [(ngModel)]='prod.args[prod.argCount-1].value' value='prod.args[prod.argCount-1].value'  placeholder='{{prod.args[prod.argCount-1].default}}' disabled>\r\n                    -->\r\n                </ng-container>\r\n    \r\n                <div class = 'div--chbox' *ngSwitchCase=\"PortTypes.Checkbox\">\r\n                    <input id = 'chbox_{{prod.ID}}' *ngSwitchCase=\"PortTypes.Checkbox\" [(ngModel)]='prod.args[prod.argCount-1].value' type=\"checkbox\">\r\n                    <label for = 'chbox_{{prod.ID}}'></label>\r\n                </div>\r\n                \r\n                <input *ngSwitchCase=\"PortTypes.URL\" [(ngModel)]='prod.args[prod.argCount-1].value' placeholder='{{prod.args[prod.argCount-1].default}}' \r\n                [style.width.px]='inputSize(prod.args[prod.argCount-1].value, prod.args[prod.argCount-1].default)'>\r\n    \r\n                <ng-container *ngSwitchCase=\"PortTypes.File\" >\r\n                    <button class='filebtn' (click)=\"openFileBrowse(prod.ID)\" >File</button>\r\n                    <input [class.disabled-input]='true' value='{{prod.args[prod.argCount-1].value?.name}}' [style.width.px]='inputSize(prod.args[prod.argCount-1].value?.name||undefined,\"No Input\")' disabled>\r\n                    <input id='file_{{prod.ID}}' style='display: none;' (change)=\"onFileChange($event)\" type=\"file\">\r\n                </ng-container>\r\n    \r\n            </ng-container>\r\n        </div>\r\n        \r\n    </div>\r\n</div>\r\n\r\n"

/***/ }),

/***/ "./src/app/views/view-dashboard/parameter-viewer/procedure-input-viewer/procedure-input-viewer.component.scss":
/*!********************************************************************************************************************!*\
  !*** ./src/app/views/view-dashboard/parameter-viewer/procedure-input-viewer/procedure-input-viewer.component.scss ***!
  \********************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".container {\n  display: block;\n  height: auto;\n  width: 100%; }\n\n.container--parameter {\n  padding: 5px 0px;\n  display: flex;\n  flex-flow: row nowrap;\n  padding-left: 15px;\n  color: #373737;\n  vertical-align: bottom;\n  border-bottom: 1px solid #E6E6E6;\n  overflow: hidden;\n  width: 100%;\n  height: 17px; }\n\n.container--parameter.inputDisabled {\n    opacity: 0.4; }\n\n.container--parameter:hover .btns {\n    display: inline-flex; }\n\n.FFA {\n  display: flex;\n  flex-flow: row nowrap;\n  flex-grow: 1; }\n\n.FFA mat-slider {\n    width: 100%;\n    height: 30px;\n    padding: 0px 20px 0px 0px;\n    position: relative;\n    bottom: 7px; }\n\ninput {\n  color: #373737;\n  background-color: transparent;\n  border: none;\n  border-bottom: 1px solid #808080;\n  margin: 0px 2px;\n  max-width: 95%;\n  height: 15px;\n  vertical-align: bottom;\n  padding: 0px 5px;\n  font-family: sans-serif;\n  font-size: 12px; }\n\ninput:hover, input:focus {\n    background-color: white;\n    color: #373737; }\n\ninput.disabled-input {\n    padding: 0px;\n    border-bottom: 0px; }\n\ninput.disabled-input:hover {\n      background-color: transparent;\n      color: #373737; }\n\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdmlld3Mvdmlldy1kYXNoYm9hcmQvcGFyYW1ldGVyLXZpZXdlci9wcm9jZWR1cmUtaW5wdXQtdmlld2VyL0M6XFxVc2Vyc1xcYWtpYmRwdFxcRG9jdW1lbnRzXFxBbmd1bGFyXFxtb2JpdXMtcGFyYW1ldHJpYy1tb2RlbGxlci9zcmNcXGFwcFxcdmlld3NcXHZpZXctZGFzaGJvYXJkXFxwYXJhbWV0ZXItdmlld2VyXFxwcm9jZWR1cmUtaW5wdXQtdmlld2VyXFxwcm9jZWR1cmUtaW5wdXQtdmlld2VyLmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC92aWV3cy92aWV3LWRhc2hib2FyZC9wYXJhbWV0ZXItdmlld2VyL3Byb2NlZHVyZS1pbnB1dC12aWV3ZXIvQzpcXFVzZXJzXFxha2liZHB0XFxEb2N1bWVudHNcXEFuZ3VsYXJcXG1vYml1cy1wYXJhbWV0cmljLW1vZGVsbGVyL3NyY1xcc2Nzc1xcdmFyaWFibGVzLnNjc3MiLCJzcmMvYXBwL3ZpZXdzL3ZpZXctZGFzaGJvYXJkL3BhcmFtZXRlci12aWV3ZXIvcHJvY2VkdXJlLWlucHV0LXZpZXdlci9DOlxcVXNlcnNcXGFraWJkcHRcXERvY3VtZW50c1xcQW5ndWxhclxcbW9iaXVzLXBhcmFtZXRyaWMtbW9kZWxsZXIvc3JjXFxzY3NzXFxjb2xvcnMuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFHQTtFQUNJLGVBQWM7RUFDZCxhQUFZO0VBRVosWUFBVyxFQUNkOztBQUVEO0VBQ0ksaUJBQWdCO0VBRWhCLGNBQWE7RUFDYixzQkFBcUI7RUFDckIsbUJDZGdCO0VEZ0JoQixlRVBZO0VGUVosdUJBQXNCO0VBRXRCLGlDRWZZO0VGaUJaLGlCQUFnQjtFQUNoQixZQUFXO0VBQ1gsYUFBcUIsRUFTeEI7O0FBdkJEO0lBaUJRLGFBQVksRUFDZjs7QUFsQkw7SUFxQlEscUJBQW9CLEVBQ3ZCOztBQUdMO0VBQ0ksY0FBYTtFQUNiLHNCQUFxQjtFQUNyQixhQUFZLEVBUWY7O0FBWEQ7SUFLUSxZQUFXO0lBQ1gsYUNuQ0s7SURvQ0wsMEJBQXlCO0lBQ3pCLG1CQUFrQjtJQUNsQixZQUFXLEVBQ2Q7O0FBR0w7RUFDSSxlRXZDWTtFRndDWiw4QkFBNkI7RUFDN0IsYUFBVztFQUNYLGlDRW5EWTtFRm9EWixnQkFBZTtFQUdmLGVBQWM7RUFDZCxhQ3JEUztFRHNEVCx1QkFBc0I7RUFDdEIsaUJBQWdCO0VBRWhCLHdCQUF1QjtFQUN2QixnQkN6RFMsRUQyRVo7O0FBaENEO0lBZ0JRLHdCRXZETTtJRndETixlRXZEUSxFRndEWDs7QUFsQkw7SUF5QlEsYUFBWTtJQUNaLG1CQUFrQixFQUtyQjs7QUEvQkw7TUE0QlksOEJBQTZCO01BQzdCLGVFbkVJLEVGb0VQIiwiZmlsZSI6InNyYy9hcHAvdmlld3Mvdmlldy1kYXNoYm9hcmQvcGFyYW1ldGVyLXZpZXdlci9wcm9jZWR1cmUtaW5wdXQtdmlld2VyL3Byb2NlZHVyZS1pbnB1dC12aWV3ZXIuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJAaW1wb3J0ICd+c2Nzcy9jb2xvcnMnO1xyXG5AaW1wb3J0ICd+c2Nzcy92YXJpYWJsZXMnO1xyXG5cclxuLmNvbnRhaW5lcntcclxuICAgIGRpc3BsYXk6IGJsb2NrOyBcclxuICAgIGhlaWdodDogYXV0bztcclxuICAgIC8vIG1hcmdpbjogNXB4IDBweCAwcHggNXB4O1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbn1cclxuXHJcbi5jb250YWluZXItLXBhcmFtZXRlcntcclxuICAgIHBhZGRpbmc6IDVweCAwcHg7XHJcblxyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGZsZXgtZmxvdzogcm93IG5vd3JhcDtcclxuICAgIHBhZGRpbmctbGVmdDogJHNtYWxsLXBhZGRpbmc7XHJcblxyXG4gICAgY29sb3I6ICRjb2xvcjg7XHJcbiAgICB2ZXJ0aWNhbC1hbGlnbjogYm90dG9tO1xyXG5cclxuICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAkY29sb3I1O1xyXG5cclxuICAgIG92ZXJmbG93OiBoaWRkZW47XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGhlaWdodDogJGZzaXplMSArIDJweDtcclxuXHJcbiAgICAmLmlucHV0RGlzYWJsZWR7XHJcbiAgICAgICAgb3BhY2l0eTogMC40O1xyXG4gICAgfVxyXG5cclxuICAgICY6aG92ZXIgLmJ0bnN7XHJcbiAgICAgICAgZGlzcGxheTogaW5saW5lLWZsZXg7XHJcbiAgICB9XHJcbn1cclxuXHJcbi5GRkF7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgZmxleC1mbG93OiByb3cgbm93cmFwO1xyXG4gICAgZmxleC1ncm93OiAxO1xyXG4gICAgbWF0LXNsaWRlcntcclxuICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICBoZWlnaHQ6ICRmc2l6ZTM7XHJcbiAgICAgICAgcGFkZGluZzogMHB4IDIwcHggMHB4IDBweDtcclxuICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICAgICAgYm90dG9tOiA3cHg7XHJcbiAgICB9XHJcbn1cclxuXHJcbmlucHV0e1xyXG4gICAgY29sb3I6ICRjb2xvcjg7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcclxuICAgIGJvcmRlcjpub25lO1xyXG4gICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICRjb2xvcjE7XHJcbiAgICBtYXJnaW46IDBweCAycHg7XHJcbiAgICBcclxuICAgIC8vIG1hcmdpbi1sZWZ0OiA1cHg7XHJcbiAgICBtYXgtd2lkdGg6IDk1JTtcclxuICAgIGhlaWdodDogJGZzaXplMTtcclxuICAgIHZlcnRpY2FsLWFsaWduOiBib3R0b207XHJcbiAgICBwYWRkaW5nOiAwcHggNXB4O1xyXG5cclxuICAgIGZvbnQtZmFtaWx5OiBzYW5zLXNlcmlmO1xyXG4gICAgZm9udC1zaXplOiAkZnNpemUyO1xyXG4gICAgJjpob3ZlciwgJjpmb2N1c3tcclxuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkY29sb3I3O1xyXG4gICAgICAgIGNvbG9yOiAkY29sb3I4O1xyXG4gICAgfVxyXG5cclxuICAgIC8vICY6Zm9jdXN7XHJcbiAgICAvLyAgICAgYm9yZGVyLWJvdHRvbTogMnB4IHNvbGlkICRzZWxlY3RlZC1jb2xvcjtcclxuICAgIC8vIH1cclxuXHJcbiAgICAmLmRpc2FibGVkLWlucHV0e1xyXG4gICAgICAgIHBhZGRpbmc6IDBweDtcclxuICAgICAgICBib3JkZXItYm90dG9tOiAwcHg7IC8vMnB4IHNvbGlkIHRyYW5zcGFyZW50O1xyXG4gICAgICAgICY6aG92ZXJ7IC8vIG5vIGNoYW5nZVxyXG4gICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcclxuICAgICAgICAgICAgY29sb3I6ICRjb2xvcjg7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59XHJcbiIsIiRwYWRkaW5nOiA0MHB4OyAvLyA/IG5vdCB1c2VkXHJcbiRzbWFsbC1wYWRkaW5nOiAxNXB4O1xyXG4kaGVhZGVyLWhlaWdodDogNDBweDtcclxuXHJcbiRmc2l6ZTE6IDE1cHg7XHJcbiRmc2l6ZTI6IDEycHg7XHJcbiRmc2l6ZTM6IDMwcHg7XHJcblxyXG4kcG9ydC1zaXplOiAxNXB4O1xyXG4kZGVmYXVsdC1zaWRlLXBhZGRpbmc6IDE1cHg7XHJcbiIsIlxyXG4kY29sb3IxOiAjODA4MDgwO1xyXG4kY29sb3IyOiAjOTk5OTk5O1xyXG4kY29sb3IzOiAjQjNCM0IzOyBcclxuJGNvbG9yNDogI0NDQ0NDQztcclxuJGNvbG9yNTogI0U2RTZFNjtcclxuJGNvbG9yNS01OiByZ2IoMjQ1LCAyNDUsIDI0NSk7XHJcbiRjb2xvcjY6IHJnYigyNTAsIDI1MCwgMjUxKTtcclxuXHJcbiRjb2xvcjc6IHdoaXRlO1xyXG4kY29sb3I4OiAjMzczNzM3O1xyXG5cclxuJHNlbGVjdGVkLWNvbG9yOiByZ2IoMCwgMCwgMTA5KTtcclxuJGhvdmVyLWNvbG9yOiAkY29sb3IyO1xyXG5cclxuJGVycm9yLWNvbG9yOiAjRTk0ODU4OyAvL3BpbmstcmVkXHJcbiRlcnJvci1jb2xvci1sdDogcmdiKDI1NSwgMjIwLCAyMjQpO1xyXG4kcGNvbG9yMjogI0YzQTMyQTsgLy9vcmFuZ2UteWVsbG93XHJcbiRwcmludC1jb2xvcjogIzgyQkY2RTsgLy9saWdodGdyZWVuXHJcbiRwcmludC1jb2xvci1sdDogcmdiKDIzMCwgMjU1LCAyMjEpO1xyXG5cclxuLy8gJHByb2QtYmFja2dyb3VuZC1jb2xvcjogcmdiKDI1MCwyNTAsMjUwKTtcclxuLy8gJGJhY2tncm91bmQtY29sb3I6IHJnYigyMjAsMjIwLDIyMCk7XHJcbiRmdW5jdGlvbi10ZXh0LWNvbG9yOiByZ2IoMTkwLCAxNDAsIDMwKTtcclxuJGZ1bmN0aW9uLXRleHQtY29sb3IyOiByZ2IoMTgsIDEyNiwgMTM2KVxyXG4iXX0= */"

/***/ }),

/***/ "./src/app/views/view-dashboard/parameter-viewer/procedure-input-viewer/procedure-input-viewer.component.ts":
/*!******************************************************************************************************************!*\
  !*** ./src/app/views/view-dashboard/parameter-viewer/procedure-input-viewer/procedure-input-viewer.component.ts ***!
  \******************************************************************************************************************/
/*! exports provided: ProcedureInputViewerComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ProcedureInputViewerComponent", function() { return ProcedureInputViewerComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _models_port__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @models/port */ "./src/app/shared/models/port/index.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};


var canvas = document.createElement('canvas');
var ctx = canvas.getContext('2d');
ctx.font = '13px Arial';
var ProcedureInputViewerComponent = /** @class */ (function () {
    function ProcedureInputViewerComponent() {
        this.delete = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        this.PortTypes = _models_port__WEBPACK_IMPORTED_MODULE_1__["InputType"];
    }
    ProcedureInputViewerComponent.prototype.editOptions = function () { };
    ProcedureInputViewerComponent.prototype.onFileChange = function (event) {
        this.prod.args[this.prod.argCount - 1].value = event.target.files[0];
    };
    ProcedureInputViewerComponent.prototype.displayConstName = function () {
        var val = this.prod.args[this.prod.argCount - 2].value;
        if (!val) {
            return 'undefined :';
        }
        if (val.substring(0, 1) === '"' || val.substring(0, 1) === '\'') {
            val = val.substring(1, val.length - 1);
        }
        // return val.replace(/_/g, ' ') + ':';
        return val + ':';
    };
    ProcedureInputViewerComponent.prototype.inputSize = function (val, defaultVal) {
        if (val === undefined || val === '') {
            return ctx.measureText(defaultVal).width + 2;
        }
        return ctx.measureText(val).width + 2;
    };
    ProcedureInputViewerComponent.prototype.openFileBrowse = function (id) {
        document.getElementById("file_" + id).click();
    };
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", Object)
    ], ProcedureInputViewerComponent.prototype, "prod", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])(),
        __metadata("design:type", Object)
    ], ProcedureInputViewerComponent.prototype, "delete", void 0);
    ProcedureInputViewerComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'procedure-input-viewer',
            template: __webpack_require__(/*! ./procedure-input-viewer.component.html */ "./src/app/views/view-dashboard/parameter-viewer/procedure-input-viewer/procedure-input-viewer.component.html"),
            styles: [__webpack_require__(/*! ./procedure-input-viewer.component.scss */ "./src/app/views/view-dashboard/parameter-viewer/procedure-input-viewer/procedure-input-viewer.component.scss")]
        }),
        __metadata("design:paramtypes", [])
    ], ProcedureInputViewerComponent);
    return ProcedureInputViewerComponent;
}());



/***/ }),

/***/ "./src/app/views/view-dashboard/view-dashboard-routing.module.ts":
/*!***********************************************************************!*\
  !*** ./src/app/views/view-dashboard/view-dashboard-routing.module.ts ***!
  \***********************************************************************/
/*! exports provided: ViewDashboardRoutingModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ViewDashboardRoutingModule", function() { return ViewDashboardRoutingModule; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var _view_dashboard_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./view-dashboard.component */ "./src/app/views/view-dashboard/view-dashboard.component.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};



var routes = [
    {
        path: '',
        component: _view_dashboard_component__WEBPACK_IMPORTED_MODULE_2__["ViewDashboardComponent"],
        children: []
    }
];
var ViewDashboardRoutingModule = /** @class */ (function () {
    function ViewDashboardRoutingModule() {
    }
    ViewDashboardRoutingModule = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["NgModule"])({
            imports: [_angular_router__WEBPACK_IMPORTED_MODULE_1__["RouterModule"].forChild(routes)],
            exports: [_angular_router__WEBPACK_IMPORTED_MODULE_1__["RouterModule"]]
        })
    ], ViewDashboardRoutingModule);
    return ViewDashboardRoutingModule;
}());



/***/ }),

/***/ "./src/app/views/view-dashboard/view-dashboard.component.html":
/*!********************************************************************!*\
  !*** ./src/app/views/view-dashboard/view-dashboard.component.html ***!
  \********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class='container'>\r\n    <as-split direction=\"horizontal\" (dragEnd)='setSplit($event)'>\r\n        \r\n        <as-split-area [size]=\"100 - getSplit()\">\r\n            <panel-header [title]='getFlowchart().name'></panel-header>\r\n            <!-- viewchild content -->\r\n            <div class='content__panel'>\r\n                <parameter-viewer [flowchart]='getFlowchart()' [startNode]='getFlowchart().nodes[0]' [endNode]='getEndNode()'></parameter-viewer>\r\n            </div>\r\n        </as-split-area>\r\n\r\n        <as-split-area [size]=\"getSplit()\">\r\n            <!-- data viewers panel -->\r\n            <div class='content__viewer' >\r\n                <model-viewers-container [data]='viewerData()'></model-viewers-container>\r\n            </div>\r\n        </as-split-area>\r\n        \r\n    </as-split>\r\n</div>\r\n<spinner></spinner>\r\n"

/***/ }),

/***/ "./src/app/views/view-dashboard/view-dashboard.component.scss":
/*!********************************************************************!*\
  !*** ./src/app/views/view-dashboard/view-dashboard.component.scss ***!
  \********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".content__panel {\n  margin-top: 40px; }\n\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdmlld3Mvdmlldy1kYXNoYm9hcmQvQzpcXFVzZXJzXFxha2liZHB0XFxEb2N1bWVudHNcXEFuZ3VsYXJcXG1vYml1cy1wYXJhbWV0cmljLW1vZGVsbGVyL3NyY1xcYXBwXFx2aWV3c1xcdmlldy1kYXNoYm9hcmRcXHZpZXctZGFzaGJvYXJkLmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC92aWV3cy92aWV3LWRhc2hib2FyZC9DOlxcVXNlcnNcXGFraWJkcHRcXERvY3VtZW50c1xcQW5ndWxhclxcbW9iaXVzLXBhcmFtZXRyaWMtbW9kZWxsZXIvc3JjXFxzY3NzXFx2YXJpYWJsZXMuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFHQTtFQUNJLGlCQ0ZnQixFREduQiIsImZpbGUiOiJzcmMvYXBwL3ZpZXdzL3ZpZXctZGFzaGJvYXJkL3ZpZXctZGFzaGJvYXJkLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiQGltcG9ydCAnfnNjc3MvY29sb3JzJztcclxuQGltcG9ydCAnfnNjc3MvdmFyaWFibGVzJztcclxuXHJcbi5jb250ZW50X19wYW5lbHtcclxuICAgIG1hcmdpbi10b3A6ICRoZWFkZXItaGVpZ2h0O1xyXG59XHJcbiIsIiRwYWRkaW5nOiA0MHB4OyAvLyA/IG5vdCB1c2VkXHJcbiRzbWFsbC1wYWRkaW5nOiAxNXB4O1xyXG4kaGVhZGVyLWhlaWdodDogNDBweDtcclxuXHJcbiRmc2l6ZTE6IDE1cHg7XHJcbiRmc2l6ZTI6IDEycHg7XHJcbiRmc2l6ZTM6IDMwcHg7XHJcblxyXG4kcG9ydC1zaXplOiAxNXB4O1xyXG4kZGVmYXVsdC1zaWRlLXBhZGRpbmc6IDE1cHg7XHJcbiJdfQ== */"

/***/ }),

/***/ "./src/app/views/view-dashboard/view-dashboard.component.ts":
/*!******************************************************************!*\
  !*** ./src/app/views/view-dashboard/view-dashboard.component.ts ***!
  \******************************************************************/
/*! exports provided: ViewDashboardComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ViewDashboardComponent", function() { return ViewDashboardComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _services__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @services */ "./src/app/core/services/index.ts");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var _shared_components_file_loadurl_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @shared/components/file/loadurl.component */ "./src/app/shared/components/file/loadurl.component.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};




var ViewDashboardComponent = /** @class */ (function () {
    function ViewDashboardComponent(dataService, router) {
        this.dataService = dataService;
        this.router = router;
        new _shared_components_file_loadurl_component__WEBPACK_IMPORTED_MODULE_3__["LoadUrlComponent"](this.dataService).loadStartUpURL(this.router.url);
    }
    ViewDashboardComponent.prototype.selectNode = function (node_index) {
        if (typeof (node_index) === 'number') {
            this.dataService.flowchart.meta.selected_nodes = [node_index];
        }
    };
    ViewDashboardComponent.prototype.getEndNode = function () {
        for (var _i = 0, _a = this.dataService.flowchart.nodes; _i < _a.length; _i++) {
            var node = _a[_i];
            if (node.type === 'end') {
                return node;
            }
        }
    };
    ViewDashboardComponent.prototype.viewerData = function () {
        var node = this.dataService.flowchart.nodes[this.dataService.flowchart.meta.selected_nodes[0]];
        if (!node) {
            return '';
        }
        // if (node.type === 'output') { return node.input.value; }
        return node.model;
    };
    ViewDashboardComponent.prototype.setSplit = function (e) { this.dataService.splitVal = e.sizes[1]; };
    ViewDashboardComponent.prototype.getSplit = function () { return this.dataService.splitVal; };
    ViewDashboardComponent.prototype.getFlowchart = function () { return this.dataService.flowchart; };
    ViewDashboardComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'view-dashboard',
            template: __webpack_require__(/*! ./view-dashboard.component.html */ "./src/app/views/view-dashboard/view-dashboard.component.html"),
            styles: [__webpack_require__(/*! ./view-dashboard.component.scss */ "./src/app/views/view-dashboard/view-dashboard.component.scss")]
        }),
        __metadata("design:paramtypes", [_services__WEBPACK_IMPORTED_MODULE_1__["DataService"], _angular_router__WEBPACK_IMPORTED_MODULE_2__["Router"]])
    ], ViewDashboardComponent);
    return ViewDashboardComponent;
}());



/***/ }),

/***/ "./src/app/views/view-dashboard/view-dashboard.module.ts":
/*!***************************************************************!*\
  !*** ./src/app/views/view-dashboard/view-dashboard.module.ts ***!
  \***************************************************************/
/*! exports provided: ViewDashboardModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ViewDashboardModule", function() { return ViewDashboardModule; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/fesm5/common.js");
/* harmony import */ var _shared_shared_module__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @shared/shared.module */ "./src/app/shared/shared.module.ts");
/* harmony import */ var _view_dashboard_routing_module__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./view-dashboard-routing.module */ "./src/app/views/view-dashboard/view-dashboard-routing.module.ts");
/* harmony import */ var _view_dashboard_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./view-dashboard.component */ "./src/app/views/view-dashboard/view-dashboard.component.ts");
/* harmony import */ var _parameter_viewer_parameter_viewer_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./parameter-viewer/parameter-viewer.component */ "./src/app/views/view-dashboard/parameter-viewer/parameter-viewer.component.ts");
/* harmony import */ var _parameter_viewer_procedure_input_viewer_procedure_input_viewer_component__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./parameter-viewer/procedure-input-viewer/procedure-input-viewer.component */ "./src/app/views/view-dashboard/parameter-viewer/procedure-input-viewer/procedure-input-viewer.component.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};







var ViewDashboardModule = /** @class */ (function () {
    function ViewDashboardModule() {
    }
    ViewDashboardModule = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["NgModule"])({
            declarations: [
                _view_dashboard_component__WEBPACK_IMPORTED_MODULE_4__["ViewDashboardComponent"],
                _parameter_viewer_parameter_viewer_component__WEBPACK_IMPORTED_MODULE_5__["ParameterViewerComponent"],
                _parameter_viewer_procedure_input_viewer_procedure_input_viewer_component__WEBPACK_IMPORTED_MODULE_6__["ProcedureInputViewerComponent"]
            ],
            exports: [
                _view_dashboard_component__WEBPACK_IMPORTED_MODULE_4__["ViewDashboardComponent"]
            ],
            imports: [
                _angular_common__WEBPACK_IMPORTED_MODULE_1__["CommonModule"],
                _shared_shared_module__WEBPACK_IMPORTED_MODULE_2__["SharedModule"],
                _view_dashboard_routing_module__WEBPACK_IMPORTED_MODULE_3__["ViewDashboardRoutingModule"]
            ],
            entryComponents: [],
            providers: []
        }),
        __metadata("design:paramtypes", [])
    ], ViewDashboardModule);
    return ViewDashboardModule;
}());



/***/ }),

/***/ "./src/app/views/view-editor/parameter-editor/parameter-editor.component.html":
/*!************************************************************************************!*\
  !*** ./src/app/views/view-editor/parameter-editor/parameter-editor.component.html ***!
  \************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class='flowchart-info' *ngIf=\"node.type=='start'\">\r\n    <!-- <div class = 'divider'></div> -->\r\n    <ng-container *ngIf='!prodCheck'>\r\n        <div class = 'input-container'>\r\n            <input id='flowchart-name' autocomplete='off' [(ngModel)]='flowchart.name' placeholder=\"flowchart name\" [style.width.px]='inputSize(flowchart.name||\"flowchart name\")'>\r\n        </div>\r\n        <textarea autogrow\r\n        id='flowchart-desc' [(ngModel)]='flowchart.description' placeholder=\"flowchart description\"></textarea>\r\n    </ng-container>\r\n\r\n    <div class='container--input' *ngIf='prodCheck'>\r\n        <procedure-input-editor *ngFor=\"let prod of node.procedure; let i = index;\" [prod]=\"prod\" (delete)='deleteProd(i)'></procedure-input-editor>\r\n    </div>\r\n</div>\r\n<div class='flowchart-info' *ngIf=\"node.type=='end'\">\r\n    <!-- <div class = 'divider'></div> -->\r\n    <div id='ret-container'>\r\n        <div class='returnProd'>\r\n            <input class='disabled-input' value=\"Return\" disabled>\r\n            <ng-container *ngFor='let p of node.procedure[node.procedure.length-1].args; let i=index'>\r\n                <input id='ret--input' \r\n                *ngIf='p.name.substring(0,1) !== \"_\"'\r\n                [(ngModel)]='p.value'\r\n                placeholder={{p.name}}\r\n                [style.width.px]='inputSize(p.value||p.name)'\r\n                autocomplete='off'\r\n                >  \r\n            </ng-container>\r\n            </div>\r\n        <textarea autogrow\r\n        id='flowchart-return' [(ngModel)]='flowchart.returnDescription' placeholder=\"Description\"></textarea>\r\n    </div>\r\n</div>\r\n\r\n<!--\r\n<section *ngIf=\"node.type != 'end'\">\r\n    <panel-header [node]='node' [title]=\"'inputs'\"></panel-header>\r\n    <div class='container--input'>\r\n        <input-port-editor [port]=\"node?.input\" ></input-port-editor>\r\n    </div>\r\n</section>\r\n<section *ngIf=\"node.type != 'start'\">\r\n    <panel-header [node]='node' [title]=\"'output'\"></panel-header>\r\n    <div class='container--output'>\r\n        <output-port-editor [port]=\"node?.output\" ></output-port-editor>\r\n    </div>\r\n</section>\r\n-->\r\n"

/***/ }),

/***/ "./src/app/views/view-editor/parameter-editor/parameter-editor.component.scss":
/*!************************************************************************************!*\
  !*** ./src/app/views/view-editor/parameter-editor/parameter-editor.component.scss ***!
  \************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "div[class^=\"container--\"] {\n  display: flex;\n  flex-direction: column;\n  margin: 0px 0px; }\n\n.flowchart-info {\n  display: flex;\n  flex-flow: column nowrap;\n  padding-left: 8px;\n  padding-right: 5px;\n  width: 100%;\n  box-sizing: border-box; }\n\n.flowchart-info #ret-container {\n    display: flex;\n    flex-flow: column nowrap;\n    padding-left: 2px;\n    padding-bottom: 2px;\n    border-left: 1px solid #999999;\n    border-bottom: 1px solid #999999; }\n\ntextarea, #flowchart-name, #ret--input {\n  color: #373737;\n  border: 2px solid #E6E6E6;\n  background-color: transparent;\n  height: 15px;\n  margin-bottom: 1px;\n  padding-left: 5px;\n  font-family: sans-serif;\n  font-size: 12px;\n  max-width: 100%;\n  resize: none;\n  overflow: auto; }\n\ntextarea:hover, textarea:focus, #flowchart-name:hover, #flowchart-name:focus, #ret--input:hover, #ret--input:focus {\n    border-color: #00006d;\n    background-color: white; }\n\n.input-container {\n  padding: 0px;\n  max-width: 100%;\n  padding-right: 9px;\n  box-sizing: border-box; }\n\n#flowchart-name {\n  margin-bottom: 8px;\n  max-width: 100%;\n  height: 15px; }\n\nhr {\n  width: inherit;\n  border-top: 2px solid #808080; }\n\n.disabled-input {\n  border: 0px;\n  margin: 0px;\n  width: 50px;\n  font-family: sans-serif;\n  font-size: 12px;\n  font-weight: 550;\n  font-style: italic;\n  background-color: #fafafb;\n  color: #be8c1e; }\n\n.input {\n  font-size: 12px;\n  resize: horizontal;\n  min-width: 10px;\n  background-color: #fafafb;\n  margin-left: 5px;\n  border: 2px solid #E6E6E6;\n  padding-left: 2px; }\n\n.returnProd {\n  display: inline-block; }\n\n.divider {\n  width: 100%;\n  height: 20px; }\n\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdmlld3Mvdmlldy1lZGl0b3IvcGFyYW1ldGVyLWVkaXRvci9DOlxcVXNlcnNcXGFraWJkcHRcXERvY3VtZW50c1xcQW5ndWxhclxcbW9iaXVzLXBhcmFtZXRyaWMtbW9kZWxsZXIvc3JjXFxhcHBcXHZpZXdzXFx2aWV3LWVkaXRvclxccGFyYW1ldGVyLWVkaXRvclxccGFyYW1ldGVyLWVkaXRvci5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvdmlld3Mvdmlldy1lZGl0b3IvcGFyYW1ldGVyLWVkaXRvci9DOlxcVXNlcnNcXGFraWJkcHRcXERvY3VtZW50c1xcQW5ndWxhclxcbW9iaXVzLXBhcmFtZXRyaWMtbW9kZWxsZXIvc3JjXFxzY3NzXFxjb2xvcnMuc2NzcyIsInNyYy9hcHAvdmlld3Mvdmlldy1lZGl0b3IvcGFyYW1ldGVyLWVkaXRvci9DOlxcVXNlcnNcXGFraWJkcHRcXERvY3VtZW50c1xcQW5ndWxhclxcbW9iaXVzLXBhcmFtZXRyaWMtbW9kZWxsZXIvc3JjXFxzY3NzXFx2YXJpYWJsZXMuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFHQTtFQUNJLGNBQWE7RUFDYix1QkFBc0I7RUFDdEIsZ0JBQWUsRUFDbEI7O0FBRUQ7RUFDSSxjQUFhO0VBQ2IseUJBQXdCO0VBQ3hCLGtCQUFpQjtFQUNqQixtQkFBa0I7RUFDbEIsWUFBVztFQUNYLHVCQUFzQixFQVN6Qjs7QUFmRDtJQVFRLGNBQWE7SUFDYix5QkFBd0I7SUFDeEIsa0JBQWlCO0lBQ2pCLG9CQUFtQjtJQUNuQiwrQkNuQlE7SURvQlIsaUNDcEJRLEVEcUJYOztBQUdMO0VBQ0ksZUNqQlk7RURrQlosMEJDdkJZO0VEd0JaLDhCQUE2QjtFQUM3QixhRTFCUztFRjJCVCxtQkFBa0I7RUFFbEIsa0JBQWlCO0VBQ2pCLHdCQUF1QjtFQUN2QixnQkU5QlM7RUYrQlQsZ0JBQWU7RUFDZixhQUFZO0VBQ1osZUFBYyxFQUtqQjs7QUFqQkQ7SUFjUSxzQkM1QnVCO0lENkJ2Qix3QkNoQ00sRURpQ1Q7O0FBR0w7RUFDSSxhQUFZO0VBQ1osZ0JBQWU7RUFDZixtQkFBa0I7RUFDbEIsdUJBQXNCLEVBQ3pCOztBQUVEO0VBQ0ksbUJBQWtCO0VBQ2xCLGdCQUFlO0VBQ2YsYUVuRFMsRUZvRFo7O0FBRUQ7RUFDSSxlQUFjO0VBQ2QsOEJDM0RZLEVENERmOztBQUVEO0VBQ0ksWUFBVztFQUNYLFlBQVc7RUFDWCxZQUFXO0VBQ1gsd0JBQXVCO0VBQ3ZCLGdCRS9EUztFRmdFVCxpQkFBZ0I7RUFDaEIsbUJBQWtCO0VBQ2xCLDBCQ2hFdUI7RURpRXZCLGVDakRtQyxFRGtEdEM7O0FBRUQ7RUFDSSxnQkV2RVM7RUZ3RVQsbUJBQWtCO0VBQ2xCLGdCQUFlO0VBQ2YsMEJDeEV1QjtFRHlFdkIsaUJBQWdCO0VBQ2hCLDBCQzVFWTtFRDZFWixrQkFBaUIsRUFDcEI7O0FBRUQ7RUFDSSxzQkFBcUIsRUFDeEI7O0FBRUQ7RUFDSSxZQUFXO0VBRVgsYUFBWSxFQUNmIiwiZmlsZSI6InNyYy9hcHAvdmlld3Mvdmlldy1lZGl0b3IvcGFyYW1ldGVyLWVkaXRvci9wYXJhbWV0ZXItZWRpdG9yLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiQGltcG9ydCAnfnNjc3MvY29sb3JzJztcclxuQGltcG9ydCAnfnNjc3MvdmFyaWFibGVzJztcclxuXHJcbmRpdltjbGFzc149XCJjb250YWluZXItLVwiXXtcclxuICAgIGRpc3BsYXk6IGZsZXg7IFxyXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgIG1hcmdpbjogMHB4IDBweDtcclxufVxyXG5cclxuLmZsb3djaGFydC1pbmZve1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGZsZXgtZmxvdzogY29sdW1uIG5vd3JhcDtcclxuICAgIHBhZGRpbmctbGVmdDogOHB4O1xyXG4gICAgcGFkZGluZy1yaWdodDogNXB4O1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xyXG4gICAgI3JldC1jb250YWluZXJ7XHJcbiAgICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgICBmbGV4LWZsb3c6IGNvbHVtbiBub3dyYXA7XHJcbiAgICAgICAgcGFkZGluZy1sZWZ0OiAycHg7XHJcbiAgICAgICAgcGFkZGluZy1ib3R0b206IDJweDtcclxuICAgICAgICBib3JkZXItbGVmdDogMXB4IHNvbGlkICRjb2xvcjI7XHJcbiAgICAgICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICRjb2xvcjI7XHJcbiAgICB9XHJcbn1cclxuXHJcbnRleHRhcmVhLCAjZmxvd2NoYXJ0LW5hbWUsICNyZXQtLWlucHV0e1xyXG4gICAgY29sb3I6ICRjb2xvcjg7XHJcbiAgICBib3JkZXI6IDJweCBzb2xpZCAkY29sb3I1O1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XHJcbiAgICBoZWlnaHQ6ICRmc2l6ZTE7XHJcbiAgICBtYXJnaW4tYm90dG9tOiAxcHg7XHJcblxyXG4gICAgcGFkZGluZy1sZWZ0OiA1cHg7XHJcbiAgICBmb250LWZhbWlseTogc2Fucy1zZXJpZjtcclxuICAgIGZvbnQtc2l6ZTogJGZzaXplMjtcclxuICAgIG1heC13aWR0aDogMTAwJTtcclxuICAgIHJlc2l6ZTogbm9uZTsgXHJcbiAgICBvdmVyZmxvdzogYXV0bztcclxuICAgICY6aG92ZXIsICY6Zm9jdXN7XHJcbiAgICAgICAgYm9yZGVyLWNvbG9yOiAkc2VsZWN0ZWQtY29sb3I7XHJcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJGNvbG9yNztcclxuICAgIH1cclxufVxyXG5cclxuLmlucHV0LWNvbnRhaW5lcntcclxuICAgIHBhZGRpbmc6IDBweDtcclxuICAgIG1heC13aWR0aDogMTAwJTtcclxuICAgIHBhZGRpbmctcmlnaHQ6IDlweDtcclxuICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XHJcbn1cclxuXHJcbiNmbG93Y2hhcnQtbmFtZXtcclxuICAgIG1hcmdpbi1ib3R0b206IDhweDtcclxuICAgIG1heC13aWR0aDogMTAwJTtcclxuICAgIGhlaWdodDogJGZzaXplMTtcclxufVxyXG5cclxuaHJ7XHJcbiAgICB3aWR0aDogaW5oZXJpdDtcclxuICAgIGJvcmRlci10b3A6IDJweCBzb2xpZCAkY29sb3IxO1xyXG59XHJcblxyXG4uZGlzYWJsZWQtaW5wdXR7XHJcbiAgICBib3JkZXI6IDBweDtcclxuICAgIG1hcmdpbjogMHB4O1xyXG4gICAgd2lkdGg6IDUwcHg7XHJcbiAgICBmb250LWZhbWlseTogc2Fucy1zZXJpZjtcclxuICAgIGZvbnQtc2l6ZTogJGZzaXplMjtcclxuICAgIGZvbnQtd2VpZ2h0OiA1NTA7XHJcbiAgICBmb250LXN0eWxlOiBpdGFsaWM7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkY29sb3I2O1xyXG4gICAgY29sb3I6ICRmdW5jdGlvbi10ZXh0LWNvbG9yO1xyXG59XHJcblxyXG4uaW5wdXR7XHJcbiAgICBmb250LXNpemU6ICRmc2l6ZTI7XHJcbiAgICByZXNpemU6IGhvcml6b250YWw7XHJcbiAgICBtaW4td2lkdGg6IDEwcHg7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkY29sb3I2OyBcclxuICAgIG1hcmdpbi1sZWZ0OiA1cHg7XHJcbiAgICBib3JkZXI6IDJweCBzb2xpZCAkY29sb3I1O1xyXG4gICAgcGFkZGluZy1sZWZ0OiAycHg7XHJcbn1cclxuXHJcbi5yZXR1cm5Qcm9ke1xyXG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG59XHJcblxyXG4uZGl2aWRlcntcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgLy8gYmFja2dyb3VuZC1jb2xvcjogJGNvbG9yNS01O1xyXG4gICAgaGVpZ2h0OiAyMHB4O1xyXG59XHJcbiIsIlxyXG4kY29sb3IxOiAjODA4MDgwO1xyXG4kY29sb3IyOiAjOTk5OTk5O1xyXG4kY29sb3IzOiAjQjNCM0IzOyBcclxuJGNvbG9yNDogI0NDQ0NDQztcclxuJGNvbG9yNTogI0U2RTZFNjtcclxuJGNvbG9yNS01OiByZ2IoMjQ1LCAyNDUsIDI0NSk7XHJcbiRjb2xvcjY6IHJnYigyNTAsIDI1MCwgMjUxKTtcclxuXHJcbiRjb2xvcjc6IHdoaXRlO1xyXG4kY29sb3I4OiAjMzczNzM3O1xyXG5cclxuJHNlbGVjdGVkLWNvbG9yOiByZ2IoMCwgMCwgMTA5KTtcclxuJGhvdmVyLWNvbG9yOiAkY29sb3IyO1xyXG5cclxuJGVycm9yLWNvbG9yOiAjRTk0ODU4OyAvL3BpbmstcmVkXHJcbiRlcnJvci1jb2xvci1sdDogcmdiKDI1NSwgMjIwLCAyMjQpO1xyXG4kcGNvbG9yMjogI0YzQTMyQTsgLy9vcmFuZ2UteWVsbG93XHJcbiRwcmludC1jb2xvcjogIzgyQkY2RTsgLy9saWdodGdyZWVuXHJcbiRwcmludC1jb2xvci1sdDogcmdiKDIzMCwgMjU1LCAyMjEpO1xyXG5cclxuLy8gJHByb2QtYmFja2dyb3VuZC1jb2xvcjogcmdiKDI1MCwyNTAsMjUwKTtcclxuLy8gJGJhY2tncm91bmQtY29sb3I6IHJnYigyMjAsMjIwLDIyMCk7XHJcbiRmdW5jdGlvbi10ZXh0LWNvbG9yOiByZ2IoMTkwLCAxNDAsIDMwKTtcclxuJGZ1bmN0aW9uLXRleHQtY29sb3IyOiByZ2IoMTgsIDEyNiwgMTM2KVxyXG4iLCIkcGFkZGluZzogNDBweDsgLy8gPyBub3QgdXNlZFxyXG4kc21hbGwtcGFkZGluZzogMTVweDtcclxuJGhlYWRlci1oZWlnaHQ6IDQwcHg7XHJcblxyXG4kZnNpemUxOiAxNXB4O1xyXG4kZnNpemUyOiAxMnB4O1xyXG4kZnNpemUzOiAzMHB4O1xyXG5cclxuJHBvcnQtc2l6ZTogMTVweDtcclxuJGRlZmF1bHQtc2lkZS1wYWRkaW5nOiAxNXB4O1xyXG4iXX0= */"

/***/ }),

/***/ "./src/app/views/view-editor/parameter-editor/parameter-editor.component.ts":
/*!**********************************************************************************!*\
  !*** ./src/app/views/view-editor/parameter-editor/parameter-editor.component.ts ***!
  \**********************************************************************************/
/*! exports provided: ParameterEditorComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ParameterEditorComponent", function() { return ParameterEditorComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _models_node__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @models/node */ "./src/app/shared/models/node/index.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};


var canvas = document.createElement('canvas');
var ctx = canvas.getContext('2d');
var ParameterEditorComponent = /** @class */ (function () {
    function ParameterEditorComponent() {
    }
    ParameterEditorComponent.prototype.ngAfterViewInit = function () {
        ctx.font = '12px sans-serif';
        var textarea = document.getElementById('flowchart-desc');
        if (textarea) {
            var desc = this.flowchart.description.split('\n');
            var textareaWidth = textarea.getBoundingClientRect().width - 20;
            var lineCount = 0;
            for (var _i = 0, desc_1 = desc; _i < desc_1.length; _i++) {
                var line = desc_1[_i];
                lineCount += Math.floor(ctx.measureText(line).width / textareaWidth) + 1;
            }
            textarea.style.height = lineCount * 14 + 4 + 'px';
        }
        textarea = document.getElementById('flowchart-return');
        if (textarea) {
            var desc = (this.flowchart.returnDescription || '').split('\n');
            var textareaWidth = textarea.getBoundingClientRect().width - 20;
            var lineCount = 0;
            for (var _a = 0, desc_2 = desc; _a < desc_2.length; _a++) {
                var line = desc_2[_a];
                lineCount += Math.floor(ctx.measureText(line).width / textareaWidth) + 1;
            }
            textarea.style.height = lineCount * 14 + 4 + 'px';
        }
    };
    ParameterEditorComponent.prototype.deleteProd = function (index) {
        this.node.procedure.splice(index, 1);
        _models_node__WEBPACK_IMPORTED_MODULE_1__["NodeUtils"].deselect_procedure(this.node);
    };
    ParameterEditorComponent.prototype.inputSize = function (val) {
        ctx.font = 'bold 12px arial';
        return ctx.measureText(val).width + 2;
    };
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", Object)
    ], ParameterEditorComponent.prototype, "node", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", Object)
    ], ParameterEditorComponent.prototype, "flowchart", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", Boolean)
    ], ParameterEditorComponent.prototype, "prodCheck", void 0);
    ParameterEditorComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'parameter-editor',
            template: __webpack_require__(/*! ./parameter-editor.component.html */ "./src/app/views/view-editor/parameter-editor/parameter-editor.component.html"),
            styles: [__webpack_require__(/*! ./parameter-editor.component.scss */ "./src/app/views/view-editor/parameter-editor/parameter-editor.component.scss")]
        })
    ], ParameterEditorComponent);
    return ParameterEditorComponent;
}());



/***/ }),

/***/ "./src/app/views/view-editor/parameter-editor/procedure-input-editor/procedure-input-editor.component.html":
/*!*****************************************************************************************************************!*\
  !*** ./src/app/views/view-editor/parameter-editor/procedure-input-editor/procedure-input-editor.component.html ***!
  \*****************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class='container--parameter' [class.error]='prod.hasError' [class.inputDisabled]='!prod.enabled' *ngIf='prod.meta?.module ==\"Input\"'>\r\n    <div class = \"btn-container\">\r\n        <div class = \"btns\">\r\n            <!-- delete button-->\r\n            <button class='btn' mat-icon-button title=\"Delete Procedure\" (click)='deleteProd()' tabindex=\"-1\">\r\n                <mat-icon class='icon'>delete_outline</mat-icon>\r\n            </button>\r\n            <button class='btn' mat-icon-button title=\"Disable Procedure\" (click)='markDisabled()' tabindex=\"-1\">\r\n                <mat-icon class='icon'>tv_off</mat-icon>\r\n            </button>\r\n        </div>\r\n    </div>\r\n    <div class = 'inp--type--container'>\r\n        <div class='inline-div'>\r\n            <ng-container *ngIf='prod.type == 10'>\r\n                <ng-container [ngSwitch]=\"prod.meta.inputMode\">\r\n                    <input class = 'input--type' *ngSwitchCase='0' [class.disabled-input]='true' value='Simple Input' disabled>\r\n                    <input class = 'input--type' *ngSwitchCase='1' [class.disabled-input]='true' value='Slider' disabled>\r\n                    <input class = 'input--type' *ngSwitchCase='2' [class.disabled-input]='true' value='Check Box' disabled>\r\n                    <input class = 'input--type' *ngSwitchCase='3' [class.disabled-input]='true' value='URL' disabled>\r\n                    <input class = 'input--type' *ngSwitchCase='4' [class.disabled-input]='true' value='File' disabled>\r\n                    <input class = 'input--type' *ngSwitchCase='5' [class.disabled-input]='true' value='Constant' disabled>\r\n                </ng-container>\r\n            </ng-container>\r\n            <input class = 'input--type' *ngIf='prod.type == 12' [class.disabled-input]='true' value='Add Model' size='5' disabled>\r\n        </div>\r\n        <div class='inline-div'>\r\n            <!-- <input [class.disabled-input]='true' value='Name:' disabled> -->\r\n            <input \r\n            [ngModel]='prod.args[0].value'\r\n            (ngModelChange)='prod.args[0].value=varMod($event)'\r\n            [class.error]='prod.args[0].invalidVar'\r\n            placeholder=\"name\"\r\n            [style.width.px]='inputSize(prod.args[0].value,\"Undefined\")'>\r\n        </div>\r\n        <div class='inline-div' *ngIf='prod.type == 12'>\r\n            <!-- <input [class.disabled-input]='true' value='Input Mode:' disabled>  -->\r\n            <!-- \r\n                <input *ngIf='prod.type != 12' [class.disabled-input]='true' [value]='PortTypes[prod.meta.inputMode]'\r\n                [style.width.px]='inputSize(PortTypes[prod.meta.inputMode])' disabled>\r\n            -->\r\n            <select [(ngModel)]=\"prod.meta.inputMode\" tabindex=\"-1\">\r\n                <option value='3' [selected]=\"prod.meta.inputMode == 3\">URL</option>\r\n                <option value='4' [selected]=\"prod.meta.inputMode == 4\">File</option>\r\n            </select>\r\n        </div>\r\n        <!-- <input [class.disabled-input]='true' value='Default:' disabled> -->\r\n        <div class='inline-div'>\r\n            <ng-container [ngSwitch]=\"prod.meta.inputMode\" >\r\n                <!-- Constant -->\r\n                <input *ngSwitchCase=\"PortTypes.Constant\" [(ngModel)]='prod.args[prod.argCount-1].default' placeholder='Default Value' \r\n                [style.width.px]='inputSize(prod.args[prod.argCount-1].default,\"Default Value\")'>\r\n    \r\n                <!-- simpleinput -->\r\n                <input *ngSwitchCase=\"PortTypes.SimpleInput\" [(ngModel)]='prod.args[prod.argCount-1].default' placeholder='Default Value' \r\n                [style.width.px]='inputSize(prod.args[prod.argCount-1].default,\"Default Value\")'>\r\n    \r\n                <!-- slider -->\r\n                <div class='div--slider' *ngSwitchCase=\"PortTypes.Slider\">\r\n                    <div class = 'input--container'>\r\n                        <input [(ngModel)]='prod.args[prod.argCount-1].step' placeholder='Step'\r\n                        [style.width.px]='inputSize(prod.args[prod.argCount-1].step,\"Step\")'>\r\n                        <input [value]='prod.args[prod.argCount-1].min||\"\"' placeholder='Min'\r\n                            (blur)='updateMin(prod.args[prod.argCount-1], $event)'\r\n                            (keyup)='updateMin(prod.args[prod.argCount-1], $event)'\r\n                            [style.width.px]='inputSize(prod.args[prod.argCount-1].min,\"Min\")'>\r\n                        <input [value]='prod.args[prod.argCount-1].max||\"\"' placeholder='Max'\r\n                            (blur)='updateMax(prod.args[prod.argCount-1], $event)'\r\n                            (keyup)='updateMax(prod.args[prod.argCount-1], $event)'\r\n                            [style.width.px]='inputSize(prod.args[prod.argCount-1].max,\"Max\")'>\r\n                    </div>              \r\n                </div>\r\n                \r\n                <!-- checkbox -->\r\n                <div class = 'div--chbox' *ngSwitchCase=\"PortTypes.Checkbox\">\r\n                    <input class='chkbox' id = 'chbox_{{prod.ID}}' [(ngModel)]='prod.args[prod.argCount-1].default' type=\"checkbox\">\r\n                    <label for = 'chbox_{{prod.ID}}'></label>\r\n    \r\n                </div>\r\n    \r\n                <!-- URL -->\r\n                <input *ngSwitchCase=\"PortTypes.URL\" [(ngModel)]='prod.args[prod.argCount-1].default' placeholder='Default URL'\r\n                [style.width.px]='inputSize(prod.args[prod.argCount-1].default,\"Default URL\")'>\r\n    \r\n                <!-- File -->\r\n                <div class='div--filebtn inline-div' *ngSwitchCase=\"PortTypes.File\" >\r\n                    <button class='filebtn' (click)=\"openFileBrowse(prod.ID)\" >File</button>\r\n                    <input [class.disabled-input]='true' value='{{prod.args[prod.argCount-1].default.name}}' [style.width.px]='inputSize(prod.args[prod.argCount-1].default.name,\"\")' disabled>\r\n                    <input id='file_{{prod.ID}}' style='display: none;' (change)=\"onFileChange($event)\" type=\"file\">\r\n                </div>\r\n            </ng-container>\r\n        </div>\r\n        \r\n    </div>\r\n    <ng-container [ngSwitch]=\"prod.meta.inputMode\" >\r\n        <div class='div--slider' *ngSwitchCase=\"PortTypes.Slider\">\r\n            <div class = 'slider--container'>\r\n                <input class = 'slider-input' [(ngModel)]='prod.args[prod.argCount-1].default'\r\n                [style.width.px]='inputSize(prod.args[prod.argCount-1].default,\"\")'>\r\n                <mat-slider\r\n                [(ngModel)]='prod.args[prod.argCount-1].default'\r\n                thumbLabel\r\n                step={{prod.args[prod.argCount-1].step||1}}\r\n                min={{prod.args[prod.argCount-1].min||0}}\r\n                max={{prod.args[prod.argCount-1].max||100}}></mat-slider>\r\n            </div>\r\n        </div> \r\n    </ng-container>\r\n    <div class = 'desc--container'>\r\n        <textarea autogrow class='inp--desc' placeholder='Description' [(ngModel)]='prod.meta.description'></textarea>\r\n    </div>\r\n</div>\r\n\r\n\r\n<!-- <div class='container container--parameter' *ngIf='prod.meta?.module==\"Output\"'>\r\n    <input class='inp--desc' placeholder='Return Description' [(ngModel)]='prod.meta.description'\r\n    [style.width.px]='inputSize(prod.meta.description,\"Return Description\")'>\r\n</div> -->"

/***/ }),

/***/ "./src/app/views/view-editor/parameter-editor/procedure-input-editor/procedure-input-editor.component.scss":
/*!*****************************************************************************************************************!*\
  !*** ./src/app/views/view-editor/parameter-editor/procedure-input-editor/procedure-input-editor.component.scss ***!
  \*****************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".container {\n  margin: 5px 0px; }\n\n.container--parameter {\n  margin: 0px 0px 2px 0px;\n  display: flex;\n  flex-flow: column nowrap;\n  color: #808080;\n  vertical-align: bottom;\n  border-bottom: 1px solid #808080;\n  border-left: 1px solid #808080;\n  overflow: hidden;\n  width: 100%; }\n\n.container--parameter.inputDisabled {\n    opacity: 0.4; }\n\n.container--parameter:hover .btns {\n    display: inline-flex; }\n\n.container--parameter.error {\n    border: 2px solid #E94858; }\n\n.inline-div {\n  box-sizing: border-box;\n  display: inline-block;\n  height: 18px;\n  padding-bottom: 3px;\n  white-space: nowrap; }\n\ninput, select {\n  color: #373737;\n  background-color: transparent;\n  border: 2px solid #E6E6E6;\n  margin: 0px 2px;\n  height: 15px;\n  max-width: 95%;\n  vertical-align: bottom;\n  padding: 0px 5px;\n  font-family: sans-serif;\n  font-size: 12px; }\n\ninput:hover, input:focus, select:hover, select:focus {\n    background-color: white;\n    color: #373737;\n    border-color: #00006d; }\n\ninput.disabled-input, select.disabled-input {\n    padding: 0px;\n    border: none; }\n\ninput.disabled-input:hover, select.disabled-input:hover {\n      background-color: transparent;\n      color: #808080; }\n\ninput.error, select.error {\n    border: 2px solid #E94858; }\n\nselect {\n  height: 17px; }\n\n.btn-container {\n  width: 100%;\n  display: flex;\n  flex-flow: row nowrap;\n  justify-content: flex-end;\n  position: relative; }\n\n.btns {\n  display: none;\n  flex-flow: row-reverse nowrap;\n  justify-content: flex-end;\n  padding-right: 8px;\n  background-color: #fafafb;\n  position: absolute; }\n\n.btns:hover {\n    display: inline-flex; }\n\n.btn {\n  height: 15px;\n  width: 15px;\n  padding: 0px;\n  background-color: transparent;\n  border: none;\n  float: right;\n  color: #808080; }\n\n.btn :hover {\n    color: #00006d; }\n\n.icon {\n  vertical-align: top;\n  font-size: 15px;\n  height: 15px;\n  width: 15px; }\n\n.inp--type--container {\n  display: flex;\n  flex-flow: row nowrap;\n  justify-content: flex-start;\n  margin-top: 1px;\n  box-sizing: border-box;\n  line-height: 15px;\n  min-width: -webkit-fit-content;\n  min-width: -moz-fit-content;\n  min-width: fit-content;\n  margin-bottom: 2px; }\n\n.inp--type--container .input--type {\n    color: #be8c1e;\n    font-weight: 550;\n    font-style: italic;\n    width: 90px; }\n\n.inp--type--container .filebtn {\n    width: 75px;\n    height: 18px;\n    border: none;\n    margin-left: 2px; }\n\n.div--slider {\n  display: flex;\n  flex-flow: column nowrap; }\n\n.div--slider .input--container {\n    display: inline-flex;\n    width: 100%;\n    vertical-align: middle; }\n\n.div--slider .input--container .min-max {\n      white-space: nowrap; }\n\n.div--slider .input--container .min-max span {\n        padding: 0px 2px; }\n\n.div--slider .slider--container {\n    width: 100%;\n    display: flex;\n    flex-flow: row nowrap;\n    padding-right: 50px;\n    margin-left: 1px; }\n\n.div--slider .slider--container .slider-input {\n      height: 15px;\n      line-height: 15px;\n      position: relative;\n      top: 7px; }\n\n.div--slider .slider--container mat-slider {\n      width: 100%;\n      height: 30px;\n      padding: 0px; }\n\n.desc--container {\n  margin-top: 1px;\n  padding-right: 15px;\n  box-sizing: border-box;\n  height: -webkit-fit-content;\n  height: -moz-fit-content;\n  height: fit-content; }\n\n.desc--container .inp--desc {\n    margin-left: 3px;\n    color: #373737;\n    border: 2px solid #E6E6E6;\n    background-color: transparent;\n    padding-left: 5px;\n    font-family: sans-serif;\n    font-size: 12px;\n    min-width: 100%;\n    resize: none;\n    height: 15px; }\n\n.desc--container .inp--desc:hover, .desc--container .inp--desc:focus {\n      color: #373737;\n      border-color: #00006d;\n      background-color: white; }\n\n.chkbox {\n  display: none; }\n\n/*# sourceMappingURL=data:application/json;base64, */"

/***/ }),

/***/ "./src/app/views/view-editor/parameter-editor/procedure-input-editor/procedure-input-editor.component.ts":
/*!***************************************************************************************************************!*\
  !*** ./src/app/views/view-editor/parameter-editor/procedure-input-editor/procedure-input-editor.component.ts ***!
  \***************************************************************************************************************/
/*! exports provided: ProcedureInputEditorComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ProcedureInputEditorComponent", function() { return ProcedureInputEditorComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _procedure_item_procedure_item_component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../procedure-item/procedure-item.component */ "./src/app/views/view-editor/procedure-item/procedure-item.component.ts");
/* harmony import */ var _models_port__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @models/port */ "./src/app/shared/models/port/index.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};



var keys = Object.keys(_models_port__WEBPACK_IMPORTED_MODULE_2__["InputType"]);
var canvas = document.createElement('canvas');
var ctx = canvas.getContext('2d');
ctx.font = '13px Arial';
var ProcedureInputEditorComponent = /** @class */ (function () {
    function ProcedureInputEditorComponent() {
        this.delete = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        this.PortTypes = _models_port__WEBPACK_IMPORTED_MODULE_2__["InputType"];
        this.PortTypesArr = keys.slice(keys.length / 2);
    }
    ProcedureInputEditorComponent.prototype.ngAfterViewInit = function () {
        // console.log(this.prod);
    };
    ProcedureInputEditorComponent.prototype.editOptions = function () { };
    ProcedureInputEditorComponent.prototype.openFileBrowse = function (id) {
        document.getElementById("file_" + id).click();
    };
    ProcedureInputEditorComponent.prototype.onFileChange = function (event) {
        this.prod.args[this.prod.argCount - 1].default = event.target.files[0];
    };
    ProcedureInputEditorComponent.prototype.inputSize = function (val, defaultVal) {
        if (val === undefined || val === '') {
            return ctx.measureText(defaultVal).width + 2;
        }
        return ctx.measureText(val).width + 2;
    };
    // delete this procedure
    ProcedureInputEditorComponent.prototype.deleteProd = function () {
        this.delete.emit();
    };
    ProcedureInputEditorComponent.prototype.markDisabled = function () {
        this.prod.enabled = !this.prod.enabled;
    };
    ProcedureInputEditorComponent.prototype.updateMin = function (args, event) {
        if (event.type === 'keyup' && event.which !== 13) {
            return;
        }
        var currentVal = Number(event.target.value);
        if (currentVal !== 0 && !currentVal) {
            return;
        }
        if (Number(args.max) && Number(args.max) < currentVal) {
            args.min = args.max;
            event.target.value = args.min;
        }
        else {
            args.min = event.target.value;
        }
        if (!args.default || args.default < Number(args.min)) {
            args.default = Number(args.min);
        }
    };
    ProcedureInputEditorComponent.prototype.updateMax = function (args, event) {
        if (event.type === 'keyup' && event.which !== 13) {
            return;
        }
        var currentVal = Number(event.target.value);
        if (currentVal !== 0 && !currentVal) {
            return;
        }
        if (Number(args.min) && Number(args.min) > currentVal) {
            args.max = args.min;
            event.target.value = args.max;
        }
        else {
            args.max = event.target.value;
        }
        if (!args.default || args.default > Number(args.max)) {
            args.default = Number(args.max);
        }
    };
    // modify variable input: replace space " " with underscore "_"
    ProcedureInputEditorComponent.prototype.varMod = function (event) {
        if (!event) {
            return event;
        }
        return _procedure_item_procedure_item_component__WEBPACK_IMPORTED_MODULE_1__["ProcedureItemComponent"].modifyVarArg(event, this.prod.args[0]);
    };
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", Object)
    ], ProcedureInputEditorComponent.prototype, "prod", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])(),
        __metadata("design:type", Object)
    ], ProcedureInputEditorComponent.prototype, "delete", void 0);
    ProcedureInputEditorComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'procedure-input-editor',
            template: __webpack_require__(/*! ./procedure-input-editor.component.html */ "./src/app/views/view-editor/parameter-editor/procedure-input-editor/procedure-input-editor.component.html"),
            styles: [__webpack_require__(/*! ./procedure-input-editor.component.scss */ "./src/app/views/view-editor/parameter-editor/procedure-input-editor/procedure-input-editor.component.scss")]
        }),
        __metadata("design:paramtypes", [])
    ], ProcedureInputEditorComponent);
    return ProcedureInputEditorComponent;
}());



/***/ }),

/***/ "./src/app/views/view-editor/procedure-item/procedure-item.component.html":
/*!********************************************************************************!*\
  !*** ./src/app/views/view-editor/procedure-item/procedure-item.component.html ***!
  \********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class='container--line' \r\n    [class.selected]=\"data.selected\"\r\n    [class.error]=\"data.hasError\"\r\n    [class.disabled]=\"!data.enabled\"\r\n    [class.printing]='data.print'\r\n    [ngSwitch]=\"data.type\"\r\n    (click)='emitSelect($event, data)'\r\n    *ngIf= 'data.type != ProcedureTypes.Return && data.type != ProcedureTypes.Constant'>\r\n    <div class='container--item' >\r\n        <!-- Variable Assignment Template -->\r\n        <div class='line--item' *ngSwitchCase=\"ProcedureTypes.Variable\">\r\n            <input class='input--var'\r\n                id='argVar_{{data.ID}}'\r\n                [ngModel]='data.args[0].value'\r\n                (ngModelChange)='data.args[0].value=varMod($event)'\r\n                [class.error]='data.args[0].invalidVar'\r\n                placeholder={{data.args[0].name}}\r\n                [style.width.px]='inputSize(data.args[0].value||data.args[0].name)'>  \r\n            = \r\n            <div style='position:relative; display:inline-block;'>\r\n                <input \r\n                class='input--arg'\r\n                [(ngModel)]='data.args[1].value'\r\n                (blur)='argMod($event, 1)'\r\n                placeholder={{data.args[1].name}}\r\n                [style.width.px]='inputSize(data.args[1].value||data.args[1].name)'>\r\n                <!-- <p class='input--arg input--arg--p' [innerHTML]='argHighlight(data.args[1].value)'></p> -->\r\n            </div>\r\n            </div>\r\n\r\n        <!-- IF Template -->\r\n        <div class='line--item hasChildren' *ngSwitchCase=\"ProcedureTypes.If\">\r\n            <div class='function-text'>\r\n                If\r\n            </div>\r\n            <input class='input--arg'\r\n                    [(ngModel)]='data.args[0].value'\r\n                    (blur)='argMod($event, 0)'\r\n                    placeholder={{data.args[0].name}}\r\n                    [style.width.px]='inputSize(data.args[0].value||data.args[0].name)'\r\n                    >\r\n        </div>\r\n\r\n        <!-- ELSEIF Template -->\r\n        <div class='line--item hasChildren' *ngSwitchCase=\"ProcedureTypes.Elseif\">\r\n            <div class='function-text'>\r\n                Else if\r\n            </div>\r\n            \r\n        \r\n        <input class='input--arg'\r\n                [(ngModel)]='data.args[0].value'\r\n                (blur)='argMod($event, 0)'\r\n                placeholder={{data.args[0].name}}\r\n                [style.width.px]='inputSize(data.args[0].value||data.args[0].name)'\r\n                >  \r\n        </div>\r\n\r\n        <!-- ELSE Template -->\r\n        <div class='line--item hasChildren' *ngSwitchCase=\"ProcedureTypes.Else\">\r\n            <div class='function-text'>\r\n                Else\r\n            </div>\r\n        </div>\r\n\r\n        <!-- BREAK Template -->\r\n        <div class='line--item' *ngSwitchCase=\"ProcedureTypes.Break\">\r\n            <div class='function-text'>\r\n                Break\r\n            </div>\r\n        </div>\r\n\r\n        <!-- CONTINUE Template -->\r\n        <div class='line--item' *ngSwitchCase=\"ProcedureTypes.Continue\">\r\n            <div class='function-text'>\r\n                Continue\r\n            </div>\r\n        </div>\r\n\r\n\r\n    <!-- FOREACH Template -->\r\n        <div class='line--item hasChildren' *ngSwitchCase=\"ProcedureTypes.Foreach\">\r\n                <div class='function-text'>\r\n                    Foreach\r\n                </div>\r\n                <input class='input--arg'\r\n                    [ngModel]='data.args[0].value'\r\n                    (ngModelChange)='data.args[0].value=varMod($event)'\r\n                    [class.error]='data.args[0].invalidVar'\r\n                    placeholder={{data.args[0].name}}\r\n                    [style.width.px]='inputSize(data.args[0].value||data.args[0].name)'\r\n                    >  \r\n                <div class='function-text'>\r\n                    in\r\n                </div>\r\n                <input class='input--arg'\r\n                    [(ngModel)]='data.args[1].value'\r\n                    (blur)='argMod($event, 1)'\r\n                    placeholder={{data.args[1].name}}\r\n                    [style.width.px]='inputSize(data.args[1].value||data.args[1].name)'\r\n                    >  \r\n                    \r\n        </div>\r\n\r\n        <!-- WHILE Template -->\r\n        <div class='line--item hasChildren' *ngSwitchCase=\"ProcedureTypes.While\">\r\n            <div class='function-text'>\r\n                While\r\n            </div>\r\n            <input class='input--arg' \r\n                    [(ngModel)]='data.args[0].value'\r\n                    (blur)='argMod($event, 0)'\r\n                    placeholder={{data.args[0].name}}\r\n                    [style.width.px]='inputSize(data.args[0].value||data.args[0].name)'\r\n                    >  \r\n\r\n        </div>\r\n\r\n        <!-- Constant (Not visible) Template -->\r\n        <div class='line--item' *ngSwitchCase=\"ProcedureTypes.Constant\">\r\n            <!-- <div class='function-text'>Constant</div>\r\n\r\n            <input class='input--arg' \r\n                    [(ngModel)]='data.args[0].value'\r\n                    (blur)='argMod($event, 0)'\r\n                    placeholder={{data.args[0].name}}\r\n                    [style.width.px]='inputSize(data.args[0].value||data.args[0].name)'\r\n                    >   -->\r\n\r\n        </div>\r\n        \r\n        <!-- Return (Not visible) Template -->\r\n        <div class='line--item' *ngSwitchCase=\"ProcedureTypes.Return\">\r\n            <!-- <div class='function-text'>Return</div>\r\n            <ng-container  *ngFor='let p of data.args;let i=index'>\r\n                <input class='input--arg' \r\n                *ngIf='p.name.substring(0,1) !== \"_\"'\r\n                [(ngModel)]='p.value'\r\n                (blur)='argMod($event, i)'\r\n                placeholder={{p.name}}\r\n                [style.width.px]='inputSize(p.value||p.name)'\r\n                >  \r\n            </ng-container> -->\r\n        </div>\r\n        \r\n        <!-- Blank (always the first procedure of if/else/else if/for/while) -->\r\n        <div class='line--blank' *ngSwitchCase=\"ProcedureTypes.Blank\">\r\n        </div>\r\n\r\n        \r\n        <!-- Function Template -->\r\n        <div class='line--item' *ngSwitchCase=\"ProcedureTypes.Function\">\r\n            <ng-container *ngIf=\"data.args[0].name !=='__none__'\">\r\n                <input class='input--var'\r\n                [ngModel]='data.args[0].value'\r\n                (ngModelChange)='data.args[0].value=varMod($event)'\r\n                [class.error]='data.args[0].invalidVar'\r\n                placeholder={{data.args[0].name}}\r\n                [style.width.px]='inputSize(data.args[0].value||data.args[0].name)'>  \r\n                = \r\n\r\n            </ng-container>\r\n            <div class='function-text'><span class='module-name'>{{data.meta.module}}.</span>{{data.meta.name}} </div>\r\n\r\n            <ng-container *ngFor='let p of data.args.slice(1);let i=index'>\r\n                <!--\r\n                <input *ngIf=\"p.name.toUpperCase() !== '__MODEL__'; else text_template\" \r\n                \r\n                [(ngModel)]='p.value' \r\n                placeholder={{p.name}}>    \r\n                \r\n                <ng-template #text_template>\r\n                    model,\r\n                </ng-template>\r\n                -->\r\n                <select class='input--arg' [(ngModel)]='p.value' *ngIf=\"checkEnum(p, i); else default_template\" >\r\n                    <option *ngFor='let opt of getEnum(i)' value=\"'{{opt}}'\">{{opt}}</option>\r\n                    <!--\r\n                        <option *ngFor='let opt of Modules[data.meta.module][ModuleDoc[data.meta.module][data.meta.name].parameters[i].type]' value={{opt}}>{{opt}}</option>\r\n                    -->\r\n                </select>    \r\n                \r\n                <ng-template #default_template>\r\n                    <input *ngIf=\"p.name.substring(0,1) !== '_'\" \r\n                    class='input--arg' \r\n                    [(ngModel)]='p.value'\r\n                    (blur)='argMod($event, i+1)'\r\n                    placeholder={{p.name}}\r\n                    [style.width.px]='inputSize(p.value||p.name)'\r\n                    >\r\n            </ng-template>\r\n\r\n            </ng-container>\r\n\r\n        </div>\r\n\r\n        <!-- Imported Function Template -->\r\n        <div class='line--item' *ngSwitchCase=\"ProcedureTypes.Imported\">\r\n            <input class='input--var'\r\n                    [ngModel]='data.args[0].value'\r\n                    (ngModelChange)='data.args[0].value=varMod($event)'\r\n                    [class.error]='data.args[0].invalidVar'\r\n                    placeholder={{data.args[0].name}}\r\n                    [style.width.px]='inputSize(data.args[0].value||data.args[0].name)'>\r\n            = \r\n            <div class='function-text'><span class='module-name'>user.</span>{{data.meta.name}} </div> \r\n            \r\n            <ng-container *ngFor='let p of data.args.slice(1);let i=index'>\r\n                <input class='input--arg' \r\n                    *ngIf='p.type !== 5'\r\n                    [(ngModel)]='p.value'\r\n                    (blur)='argMod($event, i+1)'\r\n                    placeholder={{p.name}}\r\n                    [style.width.px]='inputSize(p.value||p.name)'>    \r\n            </ng-container>\r\n        </div>\r\n    </div>\r\n    <div class = \"btn-container\">\r\n        <div class = \"btns\">\r\n            <!-- delete button-->\r\n            <button id = 'delete-btn' *ngIf='data.type != ProcedureTypes.Blank && data.type != ProcedureTypes.Return' class='btn' mat-icon-button title=\"Delete Procedure\" (click)=\"emitDelete()\" tabindex=\"-1\">\r\n                <mat-icon class='icon'>delete_outline</mat-icon>\r\n            </button>\r\n            <!-- Disable button-->\r\n            <button id = 'disable-btn' *ngIf='data.type != ProcedureTypes.Blank' class='btn' mat-icon-button title=\"Disable Procedure\" [class.highlighted]='!data.enabled' (click)='markDisabled()' tabindex=\"-1\">\r\n                <mat-icon class='icon'>tv_off</mat-icon>\r\n            </button>\r\n            <!-- Print button-->\r\n            <button id = 'print-btn' *ngIf='canBePrinted()' class='btn' mat-icon-button title=\"Print Result In Console\" [class.highlighted]='data.print' (click)='markPrint()' tabindex=\"-1\">\r\n                <mat-icon class='icon'>print</mat-icon>\r\n            </button>\r\n            <!-- help button-->\r\n            <button *ngIf='haveHelpText()' class='btn' mat-icon-button title=\"Help\" tabindex=\"-1\" (click)='emitHelpText(undefined)'>\r\n                <mat-icon class='icon'>help</mat-icon>\r\n            </button>\r\n        </div>\r\n    </div>\r\n    <!-- list of child procedures (if the procedure has children) -->\r\n    <div *ngIf=\"data?.children\" class='container--nested'>\r\n        <procedure-item \r\n            *ngFor=\"let line of data?.children; let idx=index\" \r\n            [data]=\"line\"\r\n            (select)='selectChild($event, line)'\r\n            (delete)='deleteChild(idx)'\r\n            (helpText)='emitHelpText($event)'></procedure-item>\r\n    </div>\r\n</div>\r\n"

/***/ }),

/***/ "./src/app/views/view-editor/procedure-item/procedure-item.component.scss":
/*!********************************************************************************!*\
  !*** ./src/app/views/view-editor/procedure-item/procedure-item.component.scss ***!
  \********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".container--nested {\n  padding-left: 0px; }\n\n.container--line {\n  background-color: transparent;\n  font-size: 12px;\n  margin: 0px 5px 2px 8px;\n  padding: 0px;\n  padding-bottom: 1px;\n  padding-left: 2px;\n  border-bottom: 1px solid #999999;\n  border-left: 1px solid #999999;\n  color: #808080;\n  opacity: 1;\n  display: flex;\n  flex-flow: column nowrap;\n  justify-content: space-between;\n  flex-grow: 0;\n  flex-shrink: 0;\n  overflow-x: hidden;\n  width: calc(100% - 15px); }\n\n.container--line.disabled {\n    opacity: 0.5; }\n\n.container--line.disabled .btns {\n      display: inline-flex; }\n\n.container--line.disabled .btns #disable-btn {\n        display: flex;\n        justify-content: center; }\n\n.container--line.disabled .btns #disable-btn:hover {\n          color: #00006d; }\n\n.container--line.disabled.selected {\n      border-bottom: 2px solid #00006d; }\n\n.container--line.disabled:hover .btns #disable-btn {\n      order: 0; }\n\n.container--line.disabled .input--var, .container--line.disabled .input--arg {\n    border: 2px solid #E6E6E6 !important; }\n\n.container--line.selected {\n    border-bottom: 2px solid #00006d;\n    border-left: 2px solid #00006d;\n    padding-bottom: 0px;\n    padding-left: 1px; }\n\n.container--line.printing:not(.disabled) {\n    border-bottom: 2px solid #82BF6E;\n    border-left: 2px solid #82BF6E;\n    padding-bottom: 0px;\n    padding-left: 1px; }\n\n.container--line.printing:not(.disabled) #print-btn {\n      color: #82BF6E; }\n\n.container--line.printing:not(.disabled):hover {\n      background-color: #e6ffdd; }\n\n.container--line.printing:not(.disabled).selected {\n      border-bottom: 2px solid #00006d;\n      background-color: #e6ffdd; }\n\n.container--line.printing .btns {\n    display: inline-flex; }\n\n.container--line.printing .btns .btn {\n      background-color: inherit; }\n\n.container--line.printing .btns #print-btn {\n      display: flex;\n      justify-content: center; }\n\n.container--line.printing .btns #print-btn:hover {\n        color: #00006d; }\n\n.container--line.printing.selected {\n    border-bottom: 2px solid #00006d;\n    background-color: #e6ffdd; }\n\n.container--line.printing:hover .btns #print-btn {\n    order: 1; }\n\n.container--line.error:not(.disabled) {\n    border-bottom: 2px solid #E94858;\n    border-left: 2px solid #E94858;\n    padding-bottom: 0px;\n    padding-left: 1px; }\n\n.container--line.error:not(.disabled) .btn {\n      background-color: inherit; }\n\n.container--line.error:not(.disabled).selected {\n      border-bottom: 2px solid #00006d;\n      background-color: #ffdce0; }\n\n.container--line.error:not(.disabled):hover {\n      background-color: #ffdce0; }\n\n.container--line .input--var {\n    font-size: 12px;\n    min-width: 10px;\n    background-color: #fafafb;\n    margin-right: 5px;\n    border: 2px solid #E6E6E6;\n    padding-left: 2px; }\n\n.container--line .input--var.error {\n      border: 2px solid #E94858; }\n\n.container--line .input--var:focus, .container--line .input--var:hover {\n      border-color: #00006d;\n      background-color: white; }\n\n.container--line .input--arg {\n    font-size: 12px;\n    resize: horizontal;\n    min-width: 10px;\n    background-color: #fafafb;\n    margin-left: 5px;\n    border: 2px solid #E6E6E6;\n    padding-left: 2px; }\n\n.container--line .input--arg.error {\n      border: 2px solid #E94858; }\n\n.container--line .input--arg:focus, .container--line .input--arg:hover {\n      border-color: #00006d;\n      background-color: white; }\n\n.container--line:hover {\n    background-color: #E6E6E6; }\n\n.container--line:hover .btn {\n      background-color: inherit; }\n\n.container--item {\n  position: relative;\n  padding-bottom: 2px;\n  border: none;\n  display: inline-block;\n  width: 100%;\n  white-space: nowrap;\n  overflow-x: scroll; }\n\n.container--item::-webkit-scrollbar {\n    height: 3px; }\n\n.container--item::-webkit-scrollbar-track {\n    background: transparent; }\n\n.container--item::-webkit-scrollbar-thumb {\n    background: transparent; }\n\n.container--item::-webkit-scrollbar-thumb:hover {\n    background: #999999; }\n\n.container--item:hover::-webkit-scrollbar-thumb {\n    background: #CCCCCC; }\n\n.container--item:hover + .btn-container .btns {\n  display: inline-flex; }\n\n.container--item:hover + .btn-container .btns .btn {\n    display: flex;\n    justify-content: center;\n    background-color: inherit; }\n\n.btn-container {\n  position: relative;\n  width: 100%;\n  display: flex;\n  flex-flow: row nowrap;\n  background-color: inherit;\n  justify-content: flex-end;\n  order: -1;\n  z-index: 9999; }\n\n.btn-container:hover .btns {\n    display: inline-flex; }\n\n.btn-container:hover .btns .btn {\n      display: flex;\n      justify-content: center;\n      background-color: inherit; }\n\n.btns {\n  position: absolute;\n  display: none;\n  flex-flow: row-reverse nowrap;\n  justify-content: flex-end;\n  background-color: inherit; }\n\n.btns:hover {\n    display: inline-flex; }\n\n.btn {\n  width: 15px;\n  background-color: #fafafb;\n  border: none;\n  color: #808080;\n  display: none;\n  overflow: hidden;\n  vertical-align: center;\n  order: 4; }\n\n.btn:hover {\n    color: #00006d; }\n\n.icon {\n  vertical-align: center;\n  width: 15px;\n  height: 17px;\n  margin: 1px;\n  font-size: 12px; }\n\n.line--item {\n  color: #808080;\n  display: inline-block;\n  padding-right: 60px; }\n\n.line--blank {\n  height: 8px; }\n\n.line--blank:hover {\n    background-color: white;\n    border-color: #00006d; }\n\n/*\r\n.hasChildren::before{\r\n    content: '\\25B6';\r\n    position: absolute;\r\n    left: 3px;\r\n    font-size: 8px;\r\n}\r\n*/\n\n.function-text {\n  display: inline-block;\n  white-space: nowrap;\n  font-style: italic;\n  color: #be8c1e;\n  font-weight: 550;\n  text-align: center;\n  min-height: 17px; }\n\n.function-text .module-name {\n    color: #00006d; }\n\r\n/*# sourceMappingURL=data:application/json;base64, */"

/***/ }),

/***/ "./src/app/views/view-editor/procedure-item/procedure-item.component.ts":
/*!******************************************************************************!*\
  !*** ./src/app/views/view-editor/procedure-item/procedure-item.component.ts ***!
  \******************************************************************************/
/*! exports provided: ProcedureItemComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ProcedureItemComponent", function() { return ProcedureItemComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _models_procedure__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @models/procedure */ "./src/app/shared/models/procedure/index.ts");
/* harmony import */ var _shared_decorators__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @shared/decorators */ "./src/app/shared/decorators/index.ts");
/* harmony import */ var _toolset_toolset_inline__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../toolset/toolset.inline */ "./src/app/views/view-editor/toolset/toolset.inline.ts");
/* harmony import */ var _modules__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @modules */ "./src/app/core/modules/index.ts");
/* harmony import */ var _services__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @services */ "./src/app/core/services/index.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};






var canvas = document.createElement('canvas');
var ctx = canvas.getContext('2d');
ctx.font = '12px Arial';
var reservedWords = [
    'abstract', 'arguments', 'await', 'boolean',
    'break', 'byte', 'case', 'catch',
    'char', 'class', 'const', 'continue',
    'debugger', 'default', 'delete', 'do',
    'double', 'else', 'enum', 'eval',
    'export', 'extends', 'false', 'final',
    'finally', 'float', 'for', 'function',
    'goto', 'if', 'implements', 'import',
    'in', 'instanceof', 'int', 'interface',
    'let', 'long', 'native', 'new',
    'null', 'package', 'private', 'protected',
    'public', 'return', 'short', 'static',
    'super', 'switch', 'synchronized', 'this',
    'throw', 'throws', 'transient', 'true',
    'try', 'typeof', 'var', 'void',
    'volatile', 'while', 'with', 'yield',
    'Array', 'Date', 'hasOwnProperty', 'Infinity',
    'isFinite', 'isNaN', 'isPrototypeOf', 'length',
    'Math', 'NaN', 'name', 'Number', 'Object',
    'prototype', 'String', 'toString', 'undefined', 'valueOf'
];
var mathFuncs = [];
for (var _i = 0, inline_func_1 = _toolset_toolset_inline__WEBPACK_IMPORTED_MODULE_3__["inline_func"]; _i < inline_func_1.length; _i++) {
    var funcMod = inline_func_1[_i];
    for (var _a = 0, _b = funcMod[1]; _a < _b.length; _a++) {
        var func = _b[_a];
        mathFuncs.push(func[0].split('(')[0]);
    }
}
var ProcedureItemComponent = /** @class */ (function () {
    function ProcedureItemComponent(dataService) {
        this.dataService = dataService;
        this.delete = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        this.select = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        this.copied = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        this.pasteOn = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        this.helpText = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        this.ProcedureTypes = _models_procedure__WEBPACK_IMPORTED_MODULE_1__["ProcedureTypes"];
        this.keys = Object.keys(_models_procedure__WEBPACK_IMPORTED_MODULE_1__["ProcedureTypes"]);
        this.ProcedureTypesArr = this.keys.slice(this.keys.length / 2);
        this.ModuleDoc = _shared_decorators__WEBPACK_IMPORTED_MODULE_2__["ModuleDocList"];
    }
    ProcedureItemComponent_1 = ProcedureItemComponent;
    ProcedureItemComponent.modifyVarArg = function (value, arg) {
        var str = value.trim();
        str = str.replace(/ /g, '_');
        str = str.toLowerCase();
        if ((str.match(/\[/g) || []).length !== (str.match(/\]/g) || []).length) {
            arg.invalidVar = true;
            return str;
        }
        var strSplit = str.split(/[\@\[\]]/g);
        var teststr = str;
        for (var _i = 0, strSplit_1 = strSplit; _i < strSplit_1.length; _i++) {
            var i = strSplit_1[_i];
            if (i === '') {
                continue;
            }
            if (i === '0' || Number(i)) {
                var sStr = "[" + i + "]";
                var ind = teststr.indexOf(sStr);
                if (ind === -1) {
                    arg.invalidVar = true;
                    return str;
                }
                teststr = teststr.slice(0, ind) + teststr.slice(ind + sStr.length);
                continue;
            }
            try {
                if (i.substring(0, 1) === '_') {
                    arg.invalidVar = true;
                    return str;
                }
                for (var _a = 0, reservedWords_1 = reservedWords; _a < reservedWords_1.length; _a++) {
                    var reserved = reservedWords_1[_a];
                    if (i === reserved) {
                        arg.invalidVar = true;
                        return str;
                    }
                }
                for (var _b = 0, mathFuncs_1 = mathFuncs; _b < mathFuncs_1.length; _b++) {
                    var funcName = mathFuncs_1[_b];
                    if (i === funcName) {
                        arg.invalidVar = true;
                        return str;
                    }
                }
                var currentWindow = void 0;
                if (window.hasOwnProperty(i)) {
                    currentWindow = window[i];
                }
                var fn = new Function('', i + "=1;");
                fn();
                delete window[i];
                if (currentWindow) {
                    window[i] = currentWindow;
                }
                arg.invalidVar = false;
            }
            catch (ex) {
                // console.log(ex.message);
                arg.invalidVar = true;
                return str;
            }
        }
        return str;
    };
    // delete this procedure
    ProcedureItemComponent.prototype.emitDelete = function () {
        this.delete.emit();
    };
    // select this procedure
    ProcedureItemComponent.prototype.emitSelect = function (event, procedure) {
        event.stopPropagation();
        this.select.emit({ 'ctrl': event.ctrlKey, 'prod': procedure });
    };
    // delete child procedure (after receiving emitDelete from child procedure)
    ProcedureItemComponent.prototype.deleteChild = function (index) {
        this.data.children.splice(index, 1);
    };
    // select child procedure (after receiving emitSelect from child procedure)
    ProcedureItemComponent.prototype.selectChild = function (event, procedure) {
        this.select.emit(event);
    };
    ProcedureItemComponent.prototype.markPrint = function () {
        this.data.print = !this.data.print;
    };
    ProcedureItemComponent.prototype.markDisabled = function () {
        this.data.enabled = !this.data.enabled;
    };
    ProcedureItemComponent.prototype.canBePrinted = function () {
        return this.data.type === _models_procedure__WEBPACK_IMPORTED_MODULE_1__["ProcedureTypes"].Return ||
            (this.data.argCount > 0 && this.data.args[0].name === 'var_name');
    };
    ProcedureItemComponent.prototype.haveHelpText = function () {
        return (this.data.type === _models_procedure__WEBPACK_IMPORTED_MODULE_1__["ProcedureTypes"].Function || this.data.type === _models_procedure__WEBPACK_IMPORTED_MODULE_1__["ProcedureTypes"].Imported);
    };
    ProcedureItemComponent.prototype.emitHelpText = function ($event) {
        if ($event) {
            this.helpText.emit($event);
            return;
        }
        try {
            if (this.data.type === _models_procedure__WEBPACK_IMPORTED_MODULE_1__["ProcedureTypes"].Imported) {
                this.helpText.emit(this.data.meta.name);
                // this.helpText.emit(this.ModuleDoc[this.data.meta.module][this.data.meta.name]);
            }
            else {
                this.helpText.emit(this.ModuleDoc[this.data.meta.module][this.data.meta.name]);
            }
        }
        catch (ex) {
            this.helpText.emit('error');
        }
    };
    // stopPropagation to prevent cut/paste with input box focused
    ProcedureItemComponent.prototype.stopProp = function (event) {
        // event.stopPropagation();
    };
    // modify variable input: replace space " " with underscore "_"
    ProcedureItemComponent.prototype.varMod = function (event) {
        if (!event) {
            return event;
        }
        return ProcedureItemComponent_1.modifyVarArg(event, this.data.args[0]);
    };
    // modify argument input: check if input is valid
    ProcedureItemComponent.prototype.argMod = function (event, argIndex) {
        // this.dataService.focusedInput = [event.target, (<HTMLInputElement>event.target).selectionStart];
        this.dataService.focusedInput = event.target;
        if (!this.data.args[argIndex].value) {
            return;
        }
        this.data.args[argIndex].value = this.data.args[argIndex].value.replace(/\s*([\[\]])\s*/g, '$1').replace(
        // /([\+\-\*\/\%\[\]\{\}\(\)\,])/g, ' $1 ').trim().replace(/[ ]{2,}/g, ' ');
        /([\+\-\*\/\%\{\}\(\)\,\<\>\=\!])/g, ' $1 ')
            .replace(/([\<\>\=\!])\s+=/g, '$1=')
            .trim().replace(/\s{2,}/g, ' ');
        // /([\+\-\*\/\%\[\]\{\}\(\)\,])/g, ' $1 ').replace(
        // /@[a-z0-9]+\s\[\s/g, '[').trim().replace(/[ ]{2,}/g, ' ');
    };
    // argHighlight(value: any) {
    //     return value.replace(
    //         inline_fn_regEx, '<span class = "inline-function">' + value.match(inline_fn_regEx) + '</span>'
    //     );
    // }
    ProcedureItemComponent.prototype.inputSize = function (val) {
        return ctx.measureText(val).width + 2;
    };
    ProcedureItemComponent.prototype.checkEnum = function (param, index) {
        try {
            if (param.name.substring(0, 1) === '_') {
                return false;
            }
            // @ts-ignore
            var arg = this.ModuleDoc[this.data.meta.module][this.data.meta.name].parameters[index];
            if (arg.description.toLowerCase().indexOf('enum') === -1 || !_modules__WEBPACK_IMPORTED_MODULE_4__[this.data.meta.module][arg.type]) {
                return false;
            }
            return true;
        }
        catch (ex) {
            return false;
        }
    };
    ProcedureItemComponent.prototype.getEnum = function (index) {
        // @ts-ignore
        var enm = _modules__WEBPACK_IMPORTED_MODULE_4__[this.data.meta.module][this.ModuleDoc[this.data.meta.module][this.data.meta.name].parameters[index].type];
        var enumList = [];
        for (var i in enm) {
            if (!enm.hasOwnProperty(i)) {
                continue;
            }
            enumList.push(enm[i]);
        }
        return enumList;
    };
    var ProcedureItemComponent_1;
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", Object)
    ], ProcedureItemComponent.prototype, "data", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])(),
        __metadata("design:type", Object)
    ], ProcedureItemComponent.prototype, "delete", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])(),
        __metadata("design:type", Object)
    ], ProcedureItemComponent.prototype, "select", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])(),
        __metadata("design:type", Object)
    ], ProcedureItemComponent.prototype, "copied", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])(),
        __metadata("design:type", Object)
    ], ProcedureItemComponent.prototype, "pasteOn", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])(),
        __metadata("design:type", Object)
    ], ProcedureItemComponent.prototype, "helpText", void 0);
    ProcedureItemComponent = ProcedureItemComponent_1 = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'procedure-item',
            template: __webpack_require__(/*! ./procedure-item.component.html */ "./src/app/views/view-editor/procedure-item/procedure-item.component.html"),
            styles: [__webpack_require__(/*! ./procedure-item.component.scss */ "./src/app/views/view-editor/procedure-item/procedure-item.component.scss")]
        }),
        __metadata("design:paramtypes", [_services__WEBPACK_IMPORTED_MODULE_5__["DataService"]])
    ], ProcedureItemComponent);
    return ProcedureItemComponent;
}());



/***/ }),

/***/ "./src/app/views/view-editor/toolset/toolset.component.html":
/*!******************************************************************!*\
  !*** ./src/app/views/view-editor/toolset/toolset.component.html ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<h2 (click)='openNodeMenu($event)'><span id='node--name' title='{{getNode().name}}'>{{getNode().name}}</span><span id='node--arr'>▾</span></h2>\r\n\r\n<div id=\"nodeMenu\">\r\n    <div *ngFor='let nd of getFlowchart().nodes; let i = index;'>\r\n        <li (click)=\"changeNode(i)\"> \r\n            {{nd.name}}\r\n        </li>\r\n    </div>\r\n</div>\r\n\r\n<!--Divider-->\r\n<div class = \"divider\"></div>\r\n\r\n<div class = \"toolset--body\" (mouseover)='setCurrent($event)'>\r\n    <div [hidden]=\"getNode().type == 'start' && !getViewOutput()\">\r\n        <ng-container>\r\n            <!-- basic functions: variable, if, else, else if, for, while, continue, break -->\r\n        \r\n            <button id='basic-funcs' class=\"accordion\" \r\n            (click)='toggleAccordion(\"basic-funcs\")' >Basic</button>\r\n            <div class=\"panel\">\r\n                <ul class='toolset__basic'>\r\n                    <ng-container *ngFor=\"let type of ProcedureTypesArr\">\r\n                        <li *ngIf=\"8 > ProcedureTypes[type]\"\r\n                        class='tooltip'\r\n                        [class.invalid]='checkInvalid(type)'\r\n                        (click)='add(ProcedureTypes[type])'> \r\n                            {{type}}\r\n                        </li>\r\n                    </ng-container>\r\n                </ul>\r\n            </div>\r\n            \r\n            <!--Divider-->\r\n            <div class = \"divider\"></div>\r\n            <button id='Functions' class=\"accordion\"  (click)='toggleAccordionHead(\"Functions\")'>Functions\r\n            </button>\r\n            <!--Search Bar-->\r\n            <div class = 'searchbar--container'>\r\n                <input id='searchbarFunction' class='searchBar' placeholder='Search' (keyup)='searchFunction($event)'/>\r\n                <div class=\"panel\" [class.opened] = 'true' *ngIf='searchedFunctions.length > 0'>\r\n                    <ul class='toolset__functions--subset'>\r\n                        <ng-container *ngFor='let fn of searchedFunctions'>\r\n                            <li *ngIf='fn.type==\"function\"'\r\n                            (click)='add_function(fn.data)'>\r\n                                <span class='module-name'>{{fn.module}}.</span>{{fn.name}}\r\n                            </li>\r\n                            <li *ngIf='fn.type==\"imported\"'\r\n                            (click)='add_imported_function(fn.data)'>\r\n                                <span class='module-name'>user.</span>{{fn.name}}\r\n                            </li>\r\n                        </ng-container>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n            <div class=\"panel\">\r\n                                        \r\n                <!-- functions from core.modules -->\r\n                <ng-container *ngFor='let mod of Modules' >\r\n                    <button id='{{mod.module}}' class=\"accordion\" \r\n                    (click)='toggleAccordion(mod.module)' >{{ mod.module }}</button>\r\n                    <div class=\"panel\">\r\n                        <ul class='toolset__functions--subset'>\r\n                            <ng-container *ngFor='let fn of mod.functions'>\r\n                                <div class='tooltip'>\r\n                                    <li \r\n                                    (click)='add_function(fn)'> \r\n                                        {{fn.name}} \r\n                                    </li>\r\n                                    <span class=\"tooltiptext\" [innerHTML]='fn.doc'></span>\r\n                                </div>\r\n                            </ng-container>\r\n                            <!--Divider-->\r\n                            <div class = \"divider--in\"></div>\r\n                        </ul>\r\n                    </div>\r\n                </ng-container>\r\n                <!-- imported functions -->\r\n                <ng-container>\r\n                    <button id='imported' class=\"accordion\" \r\n                    (click)='toggleAccordion(\"imported\")' >user</button>\r\n                    <div class=\"panel\">\r\n                        <ul class='toolset__functions--subset'>\r\n                            <li class = 'user--add'>\r\n                                <button class = 'add-btn' onclick=\"document.getElementById('selectedFile').click();\" title=\"Import Function from File\">\r\n                                        Import\r\n                                        <!--<mat-icon class='add-icon'>open_in_browser</mat-icon>-->\r\n                                </button>\r\n                            </li>\r\n                            <div class='tooltip user--def' *ngFor='let fn of getFlowchart().functions'>\r\n                                <div class = 'user--def-lnContainer'>\r\n                                    <li (click)='add_imported_function(fn)'> {{fn.name}} \r\n                                    </li>\r\n                                    <div class = 'btn--container'>\r\n                                        <button class='importedFunc-btn' (click)='delete_imported_function(fn)'>\r\n                                            <mat-icon class='importedFunc-btn-icon'>close</mat-icon>\r\n                                        </button>\r\n                                        <button class='importedFunc-btn' (click)='downloadImported($event, fn)'>\r\n                                            <mat-icon class='importedFunc-btn-icon'>get_app</mat-icon>\r\n                                        </button>\r\n                                    </div>\r\n                                </div>\r\n                                <span class=\"tooltiptext\">\r\n                                    <p class='funcDesc'>{{fn.doc.description}}</p>\r\n                                    <p *ngIf='fn.doc.parameters?.length > 0'><span>Parameters: </span></p>\r\n                                    <p class='paramP' *ngFor='let param of fn.doc.parameters'><span>{{param.name}} - </span> {{param.description}}</p>\r\n                                    <p *ngIf='fn.doc.returns'><span>Returns: </span>{{fn.doc.returns}}</p>\r\n                                </span>\r\n                            </div>\r\n                            \r\n                        </ul>\r\n    \r\n                        <input type=\"file\" id=\"selectedFile\" (change)=\"import_function($event)\" style=\"display: none;\" />  \r\n                    </div>\r\n                </ng-container>\r\n            </div>\r\n            \r\n            <!--Divider-->\r\n            <div class = \"divider\"></div>\r\n            \r\n            <button id='Inline' class=\"accordion\"  (click)='toggleAccordionHead(\"Inline\")'>Inline\r\n            </button>\r\n            <!--Search Bar-->\r\n            <div class = 'searchbar--container'>\r\n                <input id='searchbarInline' class='searchBar' placeholder='Search' (keyup)='searchInline($event)'/>\r\n                <div class=\"panel\" [class.opened] = 'true' *ngIf='searchedInlines.length > 0'>\r\n                    <ul class='toolset__functions--subset inline_set'>\r\n                        <ng-container *ngFor='let fnString of searchedInlines'>\r\n                            <li (click)='add_inline(fnString)'>\r\n                                {{fnString}}\r\n                            </li>\r\n                        </ng-container>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n            <div class=\"panel\">\r\n                <button id='globals' class=\"accordion inline--cat\"  (click)='toggleAccordion(\"globals\")'>Globals</button>\r\n                <div class=\"panel\">\r\n                    <ul class='toolset__functions--subset inline_set'>\r\n                        <ng-container *ngFor='let cnst of getFlowchart().nodes[0].procedure'>\r\n                            <li *ngIf='cnst.type === 10' (click)='add_inline(cnst.args[cnst.argCount-2].value)'>\r\n                                {{cnst.args[cnst.argCount-2].value}}\r\n                            </li>\r\n                        </ng-container>\r\n                    </ul>\r\n                    <!--Divider-->\r\n                    <div class = \"divider--in\"></div>\r\n                </div>\r\n    \r\n                <button id='inlineExpr' class=\"accordion inline--cat\"  (click)='toggleAccordion(\"inlineExpr\")'>Expressions</button>\r\n                <div class=\"panel\">\r\n                    <button id='inlineQueryExpr' class=\"accordion\" (click)='toggleAccordion(\"inlineQueryExpr\")'>Inline Query Expr</button>\r\n                    <div class=\"panel\">\r\n                        <ul class='toolset__functions--subset inline_set'>\r\n                            <!-- <li *ngFor='let expr of inlineQueryExpr' (click)='add_inline(expr[0])' title='{{expr[1]}}'>\r\n                                {{expr[0]}}\r\n                            </li> -->\r\n                            <li *ngFor='let expr of inlineQueryExpr' (click)='add_inline(expr)' title='{{expr}}'>\r\n                                {{expr}}\r\n                            </li>\r\n                        </ul>\r\n                        <!--Divider-->\r\n                        <div class = \"divider--in\"></div>\r\n                    </div>\r\n                    <button id='inlineSortExpr' class=\"accordion\" (click)='toggleAccordion(\"inlineSortExpr\")'>Inline Sort Expr</button>\r\n                    <div class=\"panel\">\r\n                        <ul class='toolset__functions--subset inline_set'>\r\n                            <!-- <li *ngFor='let expr of inlineSortExpr' (click)='add_inline(expr[0])' title='{{expr[1]}}'>\r\n                                {{expr[0]}}\r\n                            </li> -->\r\n                            <li *ngFor='let expr of inlineSortExpr' (click)='add_inline(expr)' title='{{expr}}'>\r\n                                {{expr}}\r\n                            </li>\r\n                        </ul>\r\n                        <!--Divider-->\r\n                        <div class = \"divider--in\"></div>\r\n                    </div>\r\n                </div>\r\n    \r\n    \r\n                <button id='inlineFunc' class=\"accordion inline--cat\" (click)='toggleAccordion(\"inlineFunc\")'>Functions</button>\r\n                <div class=\"panel\">\r\n                    <ng-container *ngFor='let category of inlineFunc'>\r\n                        <button id='inlineFunc_{{category[0]}}' class=\"accordion\" (click)='toggleAccordion(\"inlineFunc_\"+category[0])'>{{category[0]}}</button>\r\n                        <div class=\"panel\">\r\n                            <ul class='toolset__functions--subset inline_set'>\r\n                                <li *ngFor='let funcString of category[1]' (click)='add_inline(funcString[0])' title='{{funcString[1]}}'>\r\n                                    {{funcString[0]}}\r\n                                </li>\r\n                                <!-- <li *ngFor='let funcString of category[1]' (click)='add_inline(funcString)' title='{{funcString}}'>\r\n                                    {{funcString}}\r\n                                </li> -->\r\n                            </ul>\r\n                            <!--Divider-->\r\n                            <div class = \"divider--in\"></div>\r\n                        </div>\r\n                    </ng-container>\r\n                </div>\r\n            </div>\r\n        </ng-container>\r\n        <div class = \"divider\"></div>\r\n    </div>\r\n    \r\n    <!-- functions for input nodes -->\r\n    <div id='toolset_inp' class = 'toolset' *ngIf=\"getNode().type == 'start'\">\r\n        <button id='startFuncs' class=\"accordion inline--cat\" (click)='toggleAccordion(\"startFuncs\")'>Parameters</button>\r\n        <div class=\"panel\">\r\n        <!-- <div class='toolset__functions'> -->\r\n            <section *ngFor='let type of ProcedureTypesArr' >\r\n                <div *ngIf='type.toUpperCase() == \"CONSTANT\"'>\r\n                    <ul class='toolset__functions--subset'>\r\n                        <li (click)='add(ProcedureTypes[type], 5)'> Constant </li>\r\n                        <li (click)='add(ProcedureTypes[type], 0)'> Simple Input </li>\r\n                        <li (click)='add(ProcedureTypes[type], 1)'> Slider </li>\r\n                        <li (click)='add(ProcedureTypes[type], 2)'> Checkbox </li>\r\n                        <li (click)='add(ProcedureTypes[type], 3)'> URL </li>\r\n                        <li (click)='add(ProcedureTypes[type], 4)'> File </li>\r\n                    </ul>\r\n                </div>\r\n                <!-- <div *ngIf='type.toUpperCase() == \"ADDDATA\"'>\r\n                    <ul class='toolset__functions--subset'>\r\n                        <li (click)='add(ProcedureTypes[type])'> Add Model </li>\r\n                    </ul>\r\n                </div> -->\r\n            </section>\r\n        </div>\r\n    </div>\r\n    \r\n</div>\r\n"

/***/ }),

/***/ "./src/app/views/view-editor/toolset/toolset.component.scss":
/*!******************************************************************!*\
  !*** ./src/app/views/view-editor/toolset/toolset.component.scss ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ":host {\n  overflow: hidden auto;\n  width: 100%;\n  background-color: transparent;\n  border: 1px; }\n\nh2 {\n  min-height: 30px;\n  color: #373737;\n  padding-left: 8px;\n  font-family: sans-serif;\n  line-height: 30px;\n  font-size: 12px;\n  font-weight: 550;\n  width: 100%;\n  display: flex;\n  flex-flow: row nowrap;\n  cursor: pointer; }\n\nh2 #node--name {\n    width: 80%;\n    text-overflow: ellipsis;\n    overflow: hidden;\n    white-space: nowrap; }\n\nh2 #node--arr {\n    width: 20%; }\n\n.toolset--body {\n  overflow: hidden; }\n\n.toolset--body:hover {\n    overflow-y: auto; }\n\n.toolset--body::-webkit-scrollbar {\n    width: 8px; }\n\n.toolset--body::-webkit-scrollbar-track {\n    background: #E6E6E6; }\n\n.toolset--body::-webkit-scrollbar-thumb {\n    background: #CCCCCC;\n    border-left: 2px solid #E6E6E6; }\n\n.toolset--body::-webkit-scrollbar-thumb:hover {\n    background: #999999; }\n\n.searchbar--container {\n  padding: 0px; }\n\n.searchBar {\n  width: 100%;\n  font-size: 12px;\n  padding: 0px 8px;\n  border: 0px;\n  height: 15px;\n  border-bottom: 5px solid white; }\n\nul {\n  list-style-type: none;\n  margin: 0px;\n  padding: 0px;\n  background-color: #E6E6E6;\n  overflow: hidden;\n  text-overflow: ellipsis; }\n\nul li {\n    -webkit-user-select: none;\n       -moz-user-select: none;\n        -ms-user-select: none;\n            user-select: none;\n    margin: 0px;\n    padding: 0px;\n    padding-left: 8px;\n    font-style: italic;\n    font-weight: 550;\n    color: #be8c1e;\n    font-size: 12px;\n    height: 18px;\n    line-height: 18px;\n    width: 100%;\n    box-sizing: border-box;\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis; }\n\nul .user--add {\n    margin-bottom: 8px; }\n\nul :hover {\n    background-color: #CCCCCC;\n    transition: 0.4s; }\n\n.user--def .user--def-lnContainer {\n  width: 100%;\n  display: flex;\n  flex-flow: row nowrap;\n  justify-content: space-between; }\n\n.user--def .user--def-lnContainer .btn--container {\n    display: flex;\n    flex-flow: row nowrap; }\n\n.importedFunc-btn {\n  background-color: transparent;\n  border: none;\n  width: 13px;\n  height: 13px;\n  height: 100%;\n  padding: 0px; }\n\n.importedFunc-btn .importedFunc-btn-icon {\n    font-size: 12px;\n    color: #373737;\n    width: 13px;\n    height: 13px;\n    line-height: 13px; }\n\n.importedFunc-btn:hover .importedFunc-btn-icon {\n    color: #00006d; }\n\n#nodeMenu {\n  display: none;\n  position: fixed;\n  transition: display 0.4s;\n  top: 70px;\n  width: 125px;\n  z-index: 1;\n  background-color: #fafafb;\n  border-right: 1px solid #999999;\n  border-bottom: 1px solid #999999;\n  border-top: 1px solid #999999;\n  cursor: pointer; }\n\n#nodeMenu button {\n    display: block;\n    background-color: #fafafb;\n    border: 0px;\n    margin: 0px;\n    padding: 0px;\n    line-height: 30px;\n    height: 30px;\n    font-size: 12px; }\n\n#nodeMenu li {\n    display: block;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n    line-height: 20px;\n    background-color: #fafafb;\n    font-weight: 550;\n    border: 0px;\n    margin: 0px;\n    padding: 0px 10px 0px 10px;\n    line-height: 30px;\n    height: 30px;\n    font-size: 12px;\n    color: #373737; }\n\n#nodeMenu li:hover {\n      color: #00006d; }\n\n.accordion {\n  background-color: #CCCCCC;\n  color: #373737;\n  cursor: pointer;\n  width: 100%;\n  height: 24px;\n  padding: 2px 8px 2px 8px;\n  border: none;\n  display: block;\n  text-align: left;\n  outline: none;\n  font-size: 12px;\n  transition: 0.4s;\n  font-weight: 550;\n  overflow: hidden;\n  text-overflow: ellipsis; }\n\n.active, .accordion:hover {\n  background-color: #B3B3B3; }\n\n.panel {\n  width: inherit;\n  padding: 0px;\n  display: none;\n  background-color: #E6E6E6;\n  overflow: hidden; }\n\n.panel button:not(.inline--cat) {\n    font-weight: 550;\n    color: #00006d;\n    font-style: italic;\n    white-space: nowrap; }\n\n.panel.opened {\n    display: block; }\n\n.tooltip {\n  display: block; }\n\n.tooltip.invalid {\n    opacity: 0.5;\n    pointer-events: none; }\n\n/* Tooltip text */\n\n.tooltip .tooltiptext {\n  width: 250px;\n  background-color: #CCCCCC;\n  border: 1px solid #CCCCCC;\n  color: #373737;\n  pointer-events: none;\n  padding: 0px 10px 0px 10px;\n  opacity: 0;\n  position: absolute;\n  float: left;\n  z-index: 1; }\n\n.tooltip .tooltiptext p {\n    font-family: sans-serif;\n    display: flex;\n    flex-flow: row nowrap; }\n\n.tooltip .tooltiptext p.funcDesc {\n      font-weight: 600; }\n\n.tooltip .tooltiptext p.paramP {\n      padding-left: 5px; }\n\n.tooltip .tooltiptext p.paramP ::before {\n        display: inline-block;\n        content: '';\n        border-radius: 0.25rem;\n        height: 0.25rem;\n        width: 0.25rem;\n        margin: 0rem 0.3rem 0.15rem 0rem;\n        background-color: #808080; }\n\n.tooltip .tooltiptext p span {\n      font-style: italic;\n      line-height: 15px;\n      white-space: nowrap;\n      margin-right: 2px; }\n\n/* Show the tooltip text when you mouse over the tooltip container */\n\n.tooltip:hover .tooltiptext {\n  transition-delay: 0.5s;\n  transition-duration: 0.3s;\n  opacity: 1; }\n\n.add-btn {\n  height: 20px;\n  margin: 0px;\n  padding: 0px;\n  border: 0px;\n  background-color: #E6E6E6;\n  color: #373737 !important;\n  font-style: normal !important;\n  font-weight: normal !important;\n  height: 18px;\n  width: 100%;\n  line-height: 18px;\n  text-align: left;\n  text-decoration: none;\n  font-size: 12px; }\n\n.divider, .divider--in {\n  background-color: #fafafb;\n  height: 8px; }\n\n.divider:hover, .divider--in:hover {\n    background-color: transparent !important; }\n\n.divider--in {\n  background-color: #E6E6E6; }\n\n.module-name {\n  color: #00006d; }\n\n.inline_set li {\n  color: #127e88; }\n\n/*# sourceMappingURL=data:application/json;base64, */"

/***/ }),

/***/ "./src/app/views/view-editor/toolset/toolset.component.ts":
/*!****************************************************************!*\
  !*** ./src/app/views/view-editor/toolset/toolset.component.ts ***!
  \****************************************************************/
/*! exports provided: ToolsetComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ToolsetComponent", function() { return ToolsetComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _models_procedure__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @models/procedure */ "./src/app/shared/models/procedure/index.ts");
/* harmony import */ var circular_json__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! circular-json */ "./node_modules/circular-json/build/circular-json.node.js");
/* harmony import */ var circular_json__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(circular_json__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _shared_decorators__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @shared/decorators */ "./src/app/shared/decorators/index.ts");
/* harmony import */ var _shared_components_file_download_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @shared/components/file/download.utils */ "./src/app/shared/components/file/download.utils.ts");
/* harmony import */ var _toolset_inline__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./toolset.inline */ "./src/app/views/view-editor/toolset/toolset.inline.ts");
/* harmony import */ var _services__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @services */ "./src/app/core/services/index.ts");
/* harmony import */ var _models_port__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @models/port */ "./src/app/shared/models/port/index.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (undefined && undefined.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};








var keys = Object.keys(_models_procedure__WEBPACK_IMPORTED_MODULE_1__["ProcedureTypes"]);
var inputEvent = new Event('input', {
    'bubbles': true,
    'cancelable': true
});
var ToolsetComponent = /** @class */ (function () {
    function ToolsetComponent(dataService) {
        this.dataService = dataService;
        this.selected = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        this.delete = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        this.imported = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        // @Input() functions: IFunction[];
        this.ProcedureTypes = _models_procedure__WEBPACK_IMPORTED_MODULE_1__["ProcedureTypes"];
        this.ProcedureTypesArr = keys.slice(keys.length / 2);
        this.searchedFunctions = [];
        this.searchedInlines = [];
        this.inlineQueryExpr = _toolset_inline__WEBPACK_IMPORTED_MODULE_5__["inline_query_expr"];
        this.inlineSortExpr = _toolset_inline__WEBPACK_IMPORTED_MODULE_5__["inline_sort_expr"];
        this.inlineFunc = _toolset_inline__WEBPACK_IMPORTED_MODULE_5__["inline_func"];
        this.Modules = [];
        this.ModuleDoc = _shared_decorators__WEBPACK_IMPORTED_MODULE_3__["ModuleDocList"];
    }
    ToolsetComponent.prototype.ngOnInit = function () {
        for (var _i = 0, ModuleList_1 = _shared_decorators__WEBPACK_IMPORTED_MODULE_3__["ModuleList"]; _i < ModuleList_1.length; _i++) {
            var mod = ModuleList_1[_i];
            if (mod.module.substring(0, 1) === '_') {
                continue;
            }
            var nMod = { 'module': mod.module, 'functions': [] };
            for (var _a = 0, _b = mod.functions; _a < _b.length; _a++) {
                var fn = _b[_a];
                if (fn.name.substring(0, 1) === '_') {
                    continue;
                }
                if (_shared_decorators__WEBPACK_IMPORTED_MODULE_3__["ModuleDocList"][mod.module] && _shared_decorators__WEBPACK_IMPORTED_MODULE_3__["ModuleDocList"][mod.module][fn.name]) {
                    fn['doc'] = _shared_decorators__WEBPACK_IMPORTED_MODULE_3__["ModuleDocList"][mod.module][fn.name];
                    var fnDocHtml = "<p class=\"funcDesc\">" + (fn.doc.summary || fn.doc.description) + "</p>";
                    if (fn.doc.parameters && fn.doc.parameters.length > 0) {
                        fnDocHtml += "<p><span>Parameters: </span></p>";
                        for (var _c = 0, _d = fn.doc.parameters; _c < _d.length; _c++) {
                            var param = _d[_c];
                            if (!param) {
                                continue;
                            }
                            fnDocHtml += "<p class=\"paramP\"><span>" + param.name + " - </span> " + param.description + "</p>";
                        }
                    }
                    if (fn.doc.returns) {
                        fnDocHtml += "<p><span>Returns: </span> " + fn.doc.returns + "</p>";
                    }
                    fn['doc'] = fnDocHtml;
                }
                else {
                    fn['doc'] = '<br>';
                }
                nMod.functions.push(fn);
            }
            this.Modules.push(nMod);
        }
    };
    // add selected basic function as a new procedure
    ToolsetComponent.prototype.add = function (type, data) {
        this.selected.emit({ type: type, data: data });
    };
    // add selected function from core.modules as a new procedure
    ToolsetComponent.prototype.add_function = function (fnData) {
        // create a fresh copy of the params to avoid linked objects
        // todo: figure out
        fnData.args = fnData.args.map(function (arg) {
            return { name: arg.name, value: arg.value, default: arg.default };
        });
        this.selected.emit({ type: _models_procedure__WEBPACK_IMPORTED_MODULE_1__["ProcedureTypes"].Function, data: fnData });
    };
    // add selected imported function as a new procedure
    ToolsetComponent.prototype.add_imported_function = function (fnData) {
        fnData.args = fnData.args.map(function (arg) {
            if (arg.type === _models_port__WEBPACK_IMPORTED_MODULE_7__["InputType"].Constant) {
                return { name: arg.name, value: arg.default, type: arg.type };
            }
            return { name: arg.name, value: arg.value, type: arg.type };
        });
        this.selected.emit({ type: _models_procedure__WEBPACK_IMPORTED_MODULE_1__["ProcedureTypes"].Imported, data: fnData });
    };
    ToolsetComponent.prototype.setCurrent = function (event) {
        if (document.activeElement.tagName === 'INPUT' && document.activeElement.className !== 'searchBar') {
            // this.dataService.focusedInput = [document.activeElement, (<HTMLInputElement>document.activeElement).selectionStart];
            this.dataService.focusedInput = document.activeElement;
        }
        else {
            // this.dataService.focusedInput = undefined;
        }
    };
    ToolsetComponent.prototype.add_inline = function (string) {
        if (!this.dataService.focusedInput) {
            return;
        }
        this.dataService.focusedInput.focus();
        var index = this.dataService.focusedInput.selectionDirection === 'backward' ?
            this.dataService.focusedInput.selectionStart : this.dataService.focusedInput.selectionEnd;
        this.dataService.focusedInput.value =
            this.dataService.focusedInput.value.slice(0, index) +
                string +
                this.dataService.focusedInput.value.slice(index);
        this.dataService.focusedInput.dispatchEvent(inputEvent);
        this.dataService.focusedInput.selectionStart = index + string.length;
        // this.dataService.focusedInput.trigger('input');
    };
    // delete imported function
    ToolsetComponent.prototype.delete_imported_function = function (fnData) {
        this.delete.emit(fnData);
    };
    // import a flowchart as function
    ToolsetComponent.prototype.import_function = function (event) {
        return __awaiter(this, void 0, void 0, function () {
            var p, fnc;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        p = new Promise(function (resolve) {
                            var reader = new FileReader();
                            reader.onload = function () {
                                // parse the flowchart
                                var fl = circular_json__WEBPACK_IMPORTED_MODULE_2__["parse"](reader.result.toString()).flowchart;
                                // create function and documentation of the function
                                var funcs = [];
                                var funcName = fl.name.replace(/[^A-Za-z0-9_]/g, '_');
                                if (funcName.match(/^[\d_]/)) {
                                    funcName = 'func' + funcName;
                                }
                                var documentation = {
                                    name: funcName,
                                    module: 'Imported',
                                    description: fl.description,
                                    summary: fl.description,
                                    parameters: [],
                                    returns: fl.returnDescription
                                };
                                var func = {
                                    flowchart: {
                                        name: fl.name,
                                        nodes: fl.nodes,
                                        edges: fl.edges
                                    },
                                    name: funcName,
                                    module: 'Imported',
                                    doc: documentation,
                                    importedFile: reader.result.toString()
                                };
                                func.args = [];
                                for (var _i = 0, _a = fl.nodes[0].procedure; _i < _a.length; _i++) {
                                    var prod = _a[_i];
                                    if (!prod.enabled || prod.type !== _models_procedure__WEBPACK_IMPORTED_MODULE_1__["ProcedureTypes"].Constant) {
                                        continue;
                                    }
                                    var v = prod.args[prod.argCount - 2].value || 'undefined';
                                    if (v.substring(0, 1) === '"' || v.substring(0, 1) === '\'') {
                                        v = v.substring(1, v.length - 1);
                                    }
                                    if (prod.meta.inputMode !== _models_port__WEBPACK_IMPORTED_MODULE_7__["InputType"].Constant) {
                                        documentation.parameters.push({
                                            name: v,
                                            description: prod.meta.description
                                        });
                                    }
                                    func.args.push({
                                        name: v,
                                        default: prod.args[prod.argCount - 1].default,
                                        value: undefined,
                                        type: prod.meta.inputMode,
                                    });
                                }
                                func.argCount = func.args.length;
                                /*
                                if (!func.argCount) {
                                    resolve('error');
                                }
                                */
                                // add func and all the imported functions of the imported flowchart to funcs
                                funcs.push(func);
                                for (var _b = 0, _c = fl.functions; _b < _c.length; _b++) {
                                    var i = _c[_b];
                                    funcs.push(i);
                                }
                                resolve(funcs);
                            };
                            reader.onerror = function () {
                                resolve('error');
                            };
                            reader.readAsText(event.target.files[0]);
                        });
                        return [4 /*yield*/, p];
                    case 1:
                        fnc = _a.sent();
                        document.getElementById('selectedFile').value = '';
                        if (fnc === 'error') {
                            console.warn('Error reading file');
                            return [2 /*return*/];
                        }
                        this.imported.emit(fnc);
                        return [2 /*return*/];
                }
            });
        });
    };
    ToolsetComponent.prototype.downloadImported = function (event, fnData) {
        event.stopPropagation();
        var fileString = fnData.importedFile;
        var fname = fnData.name + ".mob";
        var blob = new Blob([fileString], { type: 'application/json' });
        _shared_components_file_download_utils__WEBPACK_IMPORTED_MODULE_4__["DownloadUtils"].downloadFile(fname, blob);
    };
    ToolsetComponent.prototype.toggleAccordion = function (id) {
        if (this.dataService.focusedInput) {
            this.dataService.focusedInput.focus();
        }
        var acc = document.getElementById(id);
        // acc = document.getElementsByClassName("accordion");
        acc.classList.toggle('active');
        var panel = acc.nextElementSibling;
        if (panel.style.display === 'block') {
            panel.style.display = 'none';
        }
        else {
            panel.style.display = 'block';
        }
    };
    ToolsetComponent.prototype.toggleAccordionHead = function (id) {
        if (this.dataService.focusedInput) {
            this.dataService.focusedInput.focus();
        }
        var acc = document.getElementById(id);
        // acc = document.getElementsByClassName("accordion");
        acc.classList.toggle('active');
        var panel = acc.nextElementSibling;
        if (panel.className !== 'panel') {
            panel = panel.nextElementSibling;
        }
        if (panel.style.display === 'block') {
            panel.style.display = 'none';
        }
        else {
            panel.style.display = 'block';
        }
    };
    ToolsetComponent.prototype.openNodeMenu = function (e) {
        var stl = document.getElementById('nodeMenu').style;
        if (!stl.display || stl.display === 'none') {
            stl.display = 'block';
        }
        else {
            stl.display = 'none';
        }
        e.stopPropagation();
    };
    ToolsetComponent.prototype.changeNode = function (index) {
        this.dataService.flowchart.meta.selected_nodes = [index];
    };
    ToolsetComponent.prototype.checkInvalid = function (type) {
        var node = this.dataService.node;
        var tp = type.toUpperCase();
        if (tp === 'ELSE') {
            if (!node.state.procedure[0]) {
                return true;
            }
            if (node.state.procedure[0].type.toString() !== _models_procedure__WEBPACK_IMPORTED_MODULE_1__["ProcedureTypes"].If.toString()
                && node.state.procedure[0].type.toString() !== _models_procedure__WEBPACK_IMPORTED_MODULE_1__["ProcedureTypes"].Elseif.toString()) {
                return true;
            }
            var prods = void 0;
            if (node.state.procedure[0].parent) {
                prods = node.state.procedure[0].parent.children;
            }
            else {
                prods = node.procedure;
            }
            for (var i = 0; i < prods.length - 1; i++) {
                if (prods[i].ID === node.state.procedure[0].ID) {
                    if (prods[i + 1].type.toString() === _models_procedure__WEBPACK_IMPORTED_MODULE_1__["ProcedureTypes"].Elseif.toString() ||
                        prods[i + 1].type.toString() === _models_procedure__WEBPACK_IMPORTED_MODULE_1__["ProcedureTypes"].Else.toString()) {
                        return true;
                    }
                    return false;
                }
            }
            return false;
        }
        else if (tp === 'ELSEIF') {
            if (!node.state.procedure[0]) {
                return true;
            }
            return (node.state.procedure[0].type.toString() !== _models_procedure__WEBPACK_IMPORTED_MODULE_1__["ProcedureTypes"].If.toString()
                && node.state.procedure[0].type.toString() !== _models_procedure__WEBPACK_IMPORTED_MODULE_1__["ProcedureTypes"].Elseif.toString());
        }
        else {
            if (tp === 'BREAK' || tp === 'CONTINUE') {
                var checkNode = node.state.procedure[0];
                if (!checkNode) {
                    return true;
                }
                while (checkNode.parent) {
                    if (checkNode.parent.type.toString() === _models_procedure__WEBPACK_IMPORTED_MODULE_1__["ProcedureTypes"].Foreach.toString() ||
                        checkNode.parent.type.toString() === _models_procedure__WEBPACK_IMPORTED_MODULE_1__["ProcedureTypes"].While.toString()) {
                        return false;
                    }
                    checkNode = checkNode.parent;
                }
                return true;
            }
            if (node.state.procedure[0]) {
                var prods = void 0;
                if (node.state.procedure[0].parent) {
                    prods = node.state.procedure[0].parent.children;
                }
                else {
                    prods = node.procedure;
                }
                if (node.state.procedure[0].type.toString() === _models_procedure__WEBPACK_IMPORTED_MODULE_1__["ProcedureTypes"].If.toString()
                    || node.state.procedure[0].type.toString() === _models_procedure__WEBPACK_IMPORTED_MODULE_1__["ProcedureTypes"].Elseif.toString()) {
                    for (var i = 0; i < prods.length - 1; i++) {
                        if (prods[i].ID === node.state.procedure[0].ID) {
                            if (prods[i + 1].type.toString() === _models_procedure__WEBPACK_IMPORTED_MODULE_1__["ProcedureTypes"].Else.toString()
                                || prods[i + 1].type.toString() === _models_procedure__WEBPACK_IMPORTED_MODULE_1__["ProcedureTypes"].Elseif.toString()) {
                                return true;
                            }
                            return false;
                        }
                    }
                }
            }
        }
        return false;
    };
    ToolsetComponent.prototype.searchFunction = function (event) {
        var str = event.target.value.toLowerCase().replace(/ /g, '_');
        this.searchedFunctions = [];
        if (str.length === 0) {
            return;
        }
        for (var i = 0; i < 8; i++) {
            if (this.searchedFunctions.length >= 10) {
                break;
            }
            if (this.ProcedureTypesArr[i].toLowerCase().indexOf(str) !== -1) {
                this.searchedFunctions.push({
                    'type': 'basic',
                    'name': this.ProcedureTypesArr[i],
                });
            }
        }
        // @ts-ignore
        for (var _i = 0, _a = this.Modules; _i < _a.length; _i++) {
            var mod = _a[_i];
            if (this.searchedFunctions.length >= 10) {
                break;
            }
            if (mod.module.substring(0, 1) === '_' || mod.module === 'Input' || mod.module === 'Output') {
                continue;
            }
            for (var _b = 0, _c = mod.functions; _b < _c.length; _b++) {
                var func = _c[_b];
                if (this.searchedFunctions.length >= 10) {
                    break;
                }
                if (func.name.substring(0, 1) === '_') {
                    continue;
                }
                if (func.name.toLowerCase().indexOf(str) !== -1) {
                    this.searchedFunctions.push({
                        'type': 'function',
                        'name': func.name,
                        'module': mod.module,
                        'data': func
                    });
                }
            }
        }
        for (var _d = 0, _e = this.dataService.flowchart.functions; _d < _e.length; _d++) {
            var func = _e[_d];
            if (this.searchedFunctions.length >= 10) {
                break;
            }
            if (func.name.toLowerCase().indexOf(str) !== -1) {
                this.searchedFunctions.push({
                    'type': 'imported',
                    'name': func.name,
                    'data': func
                });
            }
        }
    };
    ToolsetComponent.prototype.searchInline = function (event) {
        var str = event.target.value.toLowerCase();
        this.searchedInlines = [];
        if (str.length === 0) {
            return;
        }
        for (var _i = 0, _a = this.dataService.flowchart.nodes[0].procedure; _i < _a.length; _i++) {
            var cnst = _a[_i];
            if (this.searchedInlines.length >= 10) {
                break;
            }
            if (cnst.type !== _models_procedure__WEBPACK_IMPORTED_MODULE_1__["ProcedureTypes"].Constant) {
                continue;
            }
            var cnstString = cnst.args[cnst.argCount - 2].value;
            if (cnstString.toLowerCase().indexOf(str) !== -1) {
                this.searchedInlines.push(cnstString);
            }
        }
        for (var _b = 0, _c = this.inlineQueryExpr; _b < _c.length; _b++) {
            var expr = _c[_b];
            if (this.searchedInlines.length >= 10) {
                break;
            }
            if (expr[0].toLowerCase().indexOf(str) !== -1) {
                this.searchedInlines.push(expr);
            }
        }
        for (var _d = 0, _e = this.inlineFunc; _d < _e.length; _d++) {
            var category = _e[_d];
            for (var _f = 0, _g = category[1]; _f < _g.length; _f++) {
                var funcString = _g[_f];
                if (this.searchedInlines.length >= 10) {
                    break;
                }
                if (funcString[0].toLowerCase().indexOf(str) !== -1) {
                    this.searchedInlines.push(funcString[0]);
                }
            }
            if (this.searchedInlines.length >= 10) {
                break;
            }
        }
    };
    ToolsetComponent.prototype.getViewOutput = function () {
        return this.dataService.getModelOutputView(this.dataService.node.id);
    };
    ToolsetComponent.prototype.getFlowchart = function () { return this.dataService.flowchart; };
    ToolsetComponent.prototype.getNode = function () { return this.dataService.node; };
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])(),
        __metadata("design:type", Object)
    ], ToolsetComponent.prototype, "selected", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])(),
        __metadata("design:type", Object)
    ], ToolsetComponent.prototype, "delete", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])(),
        __metadata("design:type", Object)
    ], ToolsetComponent.prototype, "imported", void 0);
    ToolsetComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'toolset',
            template: __webpack_require__(/*! ./toolset.component.html */ "./src/app/views/view-editor/toolset/toolset.component.html"),
            encapsulation: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewEncapsulation"].None,
            styles: [__webpack_require__(/*! ./toolset.component.scss */ "./src/app/views/view-editor/toolset/toolset.component.scss")]
        }),
        __metadata("design:paramtypes", [_services__WEBPACK_IMPORTED_MODULE_6__["DataService"]])
    ], ToolsetComponent);
    return ToolsetComponent;
}());



/***/ }),

/***/ "./src/app/views/view-editor/toolset/toolset.inline.ts":
/*!*************************************************************!*\
  !*** ./src/app/views/view-editor/toolset/toolset.inline.ts ***!
  \*************************************************************/
/*! exports provided: inline_query_expr, inline_sort_expr, inline_func */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "inline_query_expr", function() { return inline_query_expr; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "inline_sort_expr", function() { return inline_sort_expr; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "inline_func", function() { return inline_func; });
var inline_query_expr = [
    ['#@name == value', 'Search attributes equal to a given value'],
    ['#@name[i] == value', 'Search attribute index i equal to a given value'],
    ['#@name != value', 'Search attributes not equal to a given value'],
    ['#@name[i] != value', 'Search attribute index not equal to a given value'],
    ['#@name > value', 'Search attributes greater than a given value'],
    ['#@name[i] > value', 'Search attribute index greater than a given value'],
    ['#@name >= value', 'Search attributes greater than or equal to a given value'],
    ['#@name[i] >= value', 'Search attribute index greater than or equal to a given value'],
    ['#@name < value', 'Search attributes less than a given value'],
    ['#@name[i] < value', 'Search attribute index less than a given value'],
    ['#@name <= value', 'Search attributes less than or equal to a given value'],
    ['#@name[i] <= value', 'Search attribute index less than or equal to a given value']
];
var inline_sort_expr = [
    ['#@name', 'Sort based on attribute value'],
    ['#@name[i]', 'Sort based on attribute index value']
];
var constants = [
    ['PI', 'Generates a list of integers as a range'],
    ['XY', 'A plane at the origin, aligned with the XY plane'],
    ['YZ', 'A plane at the origin, aligned with the YZ plane'],
    ['ZX', 'A plane at the origin, aligned with the ZX plane'],
    ['YX', 'A plane at the origin, aligned with the YX plane'],
    ['ZY', 'A plane at the origin, aligned with the ZY plane'],
    ['XZ', 'A plane at the origin, aligned with the XZ plane']
];
var lists = [
    ['range(start, end)', 'Generates a list of integers as a range'],
    ['length(list)', 'Returns the number of items in the list'],
    ['shuffle(list)', 'Shuffles the items in a list in random order'],
    ['zip(lists)', 'Converts a set of lists from rows into columns, based on the shortest list.'],
    ['zip2(lists)', 'Converts a set of lists from rows into columns, based on the longest list.']
];
var vectors = [
    ['vecAdd(v1, v2)', 'Adds two vectors'],
    ['vecSub(v1, v2)', 'Subtracts vec2 from vec1'],
    ['vecDiv(v, num)', 'Divides a vector by a number'],
    ['vecMult(v, num)', 'Multiplies a vector by a number'],
    ['vecLen(v)', 'Calculates the magnitude of a vector'],
    ['vecSetLen(v, num)', 'Sets the magnitude of a vector'],
    ['vecNorm(v)', 'Sets the magnitude of a vector to 1'],
    ['vecRev(v)', 'Reverses the direction of a vector'],
    ['vecFromTo(pt1, pt2)', 'Creates a vector between two points'],
    ['vecAng(v1, v2)', 'Calculate the angle (0 to PI) between two vectors'],
    ['vecAng2(v1, v2, n)', 'Calculate the angle (0 to 2PI) between two vectors, relative to the plane normal'],
    ['vecDot(v1, v2)', 'Calculates the cross product of thre vectors'],
    ['vecCross(v1, v2)', 'Calculates the dot product of two vectors'],
    ['vecEqual(v1, v2, tol)', 'Returns true if the difference between two vectors is smaler than a specified tolerance']
];
var conversion = [
    ['boolean(val)', 'Converts the value to a boolean'],
    ['number(val)', 'Converts the value to a number'],
    ['string(val)', 'Converts the value to a string'],
    ['radToDeg(rad)', 'Converts radians to degrees'],
    ['degToRad(deg)', 'Converts degrees to radians']
];
var random = [
    ['rand(min, max)', 'Returns a random number in the specified range'],
    ['randInt(min, max)', 'Returns a random integer in the specified range'],
    ['randPick(list, num)', 'Returns a random set of items from the list']
];
var arithmetic = [
    ['abs(num)', 'Returns the absolute value of the number'],
    ['square(num)', 'Returns the square of the number'],
    ['cube(num)', 'Returns the cube of the number'],
    ['pow(numb, pow)', 'Returns the number to the specified power'],
    ['sqrt(num)', 'Returns the square root of the number'],
    ['exp(num)', 'Returns the value of E to the power of the number'],
    ['log(num)', 'Returns the natural logarithm (base E) of the number'],
    ['round(num)', 'Returns the value of the number rounded to its nearest integer'],
    ['ceil(num)', 'Returns the value of the number rounded up to its nearest integer'],
    ['floor(num)', 'Returns the value of the number rounded down to its nearest integer'],
    ['mod(num, num)', 'Converts the value to a boolean'],
    ['sum(list)', 'Returns the sum of all values in a list'],
    ['prod(list)', 'Returns the product of all values in a list'],
    ['hypot(list)', 'Returns the hypothenuse of all values in a list'],
    ['norm(list)', 'Returns the norm of a vector'],
    ['distance(list, list)', 'Returns the Eucledian distance between two locations (each as a list of xyz coordinates)']
];
var statistics = [
    ['min(list)', 'Returns the number with the lowest value'],
    ['max(list)', 'Returns the number with the highest value'],
    ['mad(list)', 'Returns the median absolute deviation of the list'],
    ['mean(list)', 'Returns the mean value of the list'],
    ['median(list)', 'Returns the median of the list'],
    ['mode(list)', 'Returns the mode of the list'],
    ['std(list)', 'Returns the standard deviation of the list'],
    ['vari(list)', 'Returns the variance of the list']
];
var trigonometry = [
    ['sin(rad)', 'Returns the sine of a value (in radians)'],
    ['asin(num)', 'Returns the inverse sine of a value (in radians)'],
    ['sinh(rad)', 'Returns the hyperbolic sine of a value (in radians)'],
    ['asinh(num)', 'Returns the hyperbolic arcsine of a value (in radians)'],
    ['cos(rad)', 'Returns the cosine of a value (in radians)'],
    ['acos(num)', 'Returns the inverse cosine of a value (in radians)'],
    ['cosh(rad)', 'Returns the hyperbolic cosine of a value (in radians)'],
    ['acosh(num)', 'Returns the hyperbolic arccos of a value (in radians)'],
    ['tan(rad)', 'Returns the tangent of a value (in radians)'],
    ['atan(num)', 'Returns the inverse tangent of a value (in radians)'],
    ['tanh(rad)', 'Returns the hyperbolic tangent of a value (in radians)'],
    ['atanh(num)', 'Returns the hyperbolic arctangent of a value (in radians)'],
    ['atan2(number1, number2)', 'Returns the inverse tangent function with two arguments, number1/number2']
];
var str = [
    ['replace(string,search_str,new_str)', 'Replace all instances of specified search with a new string']
];
var inline_func = [
    ['constants', constants],
    ['random', random],
    ['lists', lists],
    ['conversion', conversion],
    ['vectors', vectors],
    ['arithmetic', arithmetic],
    ['statistics', statistics],
    ['trigonometry', trigonometry]
];
// const inline_func_lst: string[][][] = inline_func.map(x => x[1]);
// const inline_func_lst = [
//     lists,
//     conversion,
//     arithmetic,
//     statistics,
//     trigonometry
// ];
// const inline_fn_names = [];
// for (let i = 0; i < inline_func_lst.length; i++) {
//     inline_func_lst[i].forEach((arr) => {
//         const mtch = arr[0].match(/^\w*(?=\()/);
//         let ret;
//         if (mtch !== null) {
//             ret = mtch[0];
//         } else {
//             ret = arr[0];
//         }
//         inline_fn_names.push(ret);
//     });
// }
// export const inline_fn_regEx = RegExp(inline_fn_names.join('|'), 'g');


/***/ }),

/***/ "./src/app/views/view-editor/view-editor-routing.module.ts":
/*!*****************************************************************!*\
  !*** ./src/app/views/view-editor/view-editor-routing.module.ts ***!
  \*****************************************************************/
/*! exports provided: ViewEditorRoutingModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ViewEditorRoutingModule", function() { return ViewEditorRoutingModule; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var _view_editor_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./view-editor.component */ "./src/app/views/view-editor/view-editor.component.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};



var routes = [
    {
        path: '',
        component: _view_editor_component__WEBPACK_IMPORTED_MODULE_2__["ViewEditorComponent"],
        children: [
        // {
        //   path: '',
        //   loadChildren: '../../mobius-viewer/mobius-viewer.module#MobiusViewerModule',
        // }
        ]
    }
];
var ViewEditorRoutingModule = /** @class */ (function () {
    function ViewEditorRoutingModule() {
    }
    ViewEditorRoutingModule = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["NgModule"])({
            imports: [_angular_router__WEBPACK_IMPORTED_MODULE_1__["RouterModule"].forChild(routes)],
            exports: [_angular_router__WEBPACK_IMPORTED_MODULE_1__["RouterModule"]]
        })
    ], ViewEditorRoutingModule);
    return ViewEditorRoutingModule;
}());



/***/ }),

/***/ "./src/app/views/view-editor/view-editor.component.html":
/*!**************************************************************!*\
  !*** ./src/app/views/view-editor/view-editor.component.html ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class='container'>\r\n    <as-split direction=\"horizontal\" (dragEnd)='setSplit($event)'>\r\n        <as-split-area [size]=\"100 - getSplit()\">\r\n            <panel-header [title]='getFlowchart().name'></panel-header>\r\n            <!-- viewchild content -->\r\n            <div class='content__panel'>\r\n\r\n                <!-- <div class='container--editor' (mouseenter)='activateCopyPaste()'  (mouseleave)='deactivateCopyPaste()' -->\r\n                <div class='container--editor'\r\n                (copy)='copyProd()' (cut)='cutProd($event)' (paste)='pasteProd($event)'>\r\n                \r\n                    <div class='container__content'>\r\n                        <!-- toolset on the left side -->\r\n                        <div class=\"container--toolset\">\r\n                            <toolset \r\n                            (delete)='deleteFunction($event)' \r\n                            (selected)='add($event)' \r\n                            (imported)='importFunction($event)'></toolset>\r\n                        </div>\r\n                        <!-- procedure editor on the right side -->\r\n                        <div id='procedure' class=\"container--procedure\" (click)='unselectAll($event)'>\r\n                            <!-- parameter-editor only for start/end node -->\r\n                            <parameter-editor *ngIf=\"getNode().type == 'start'\" \r\n                                [flowchart]='getFlowchart()' \r\n                                [node]='getNode()'\r\n                                [prodCheck]='false'></parameter-editor>\r\n\r\n                            <div id='modelViewButton--container' *ngIf=\"getNode().type !== 'start'\">\r\n                                <button (click)='setViewOutput()'>Viewing \r\n                                    <span *ngIf='!getViewOutput()'>Input Model</span>\r\n                                    <span *ngIf='getViewOutput()'>Output Model</span></button>\r\n                            </div>\r\n\r\n                            <div id='modelViewButton--container' *ngIf=\"getNode().type == 'start'\">\r\n                                <button (click)='setViewOutput()'>\r\n                                    <span *ngIf='getViewOutput()'>Viewing</span>\r\n                                    <span *ngIf='!getViewOutput()'>Hiding</span>\r\n                                Test Model</button>\r\n                            </div>\r\n                            \r\n                            <div class = 'procedureln--container' [ngClass]=\"{'procedureln--container-start': getNode().type == 'start'}\">\r\n                                <!-- list of procedure items for all nodes -->\r\n                                <div class = 'pro-container' [hidden]=\"getNode().type == 'start' && !getViewOutput()\">\r\n                                    <procedure-item \r\n                                    *ngFor=\"let line of getNode()?.procedure; let idx=index\" \r\n                                    [data]=\"line\"\r\n                                    (select)=\"selectProcedure($event,line)\"\r\n                                    (delete)=\"deleteChild(idx)\"\r\n                                    (helpText)='updateHelpView($event)'\r\n                                    ></procedure-item>\r\n                                </div>\r\n                                <div class = 'divider--container' *ngIf=\"getNode().type !== ''\">\r\n                                    <div class = 'divider' *ngIf=\"getNode().type == 'start'\"><span>Parameters</span></div>\r\n                                    <div class = 'divider' *ngIf=\"getNode().type == 'end'\"><span>Return</span></div>\r\n                                </div>\r\n                                <parameter-editor *ngIf=\"getNode().type !== ''\" \r\n                                [flowchart]='getFlowchart()' \r\n                                [node]='getNode()'\r\n                                [prodCheck]='true'></parameter-editor>\r\n                                <div id = 'spacer'></div>\r\n                                \r\n                            </div>\r\n                            <!-- <button class='modelViewButton' (click)='setViewOutput(true)'>View Output</button> -->\r\n\r\n                            <br>\r\n                            <br>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </as-split-area>\r\n\r\n        <as-split-area [size]=\"getSplit()\">\r\n            <!-- data viewers panel -->\r\n            <div class='content__viewer' >\r\n                <model-viewers-container [data]='viewerData()'></model-viewers-container>\r\n            </div>\r\n        </as-split-area>\r\n        \r\n    </as-split>\r\n\r\n<notification [message]='notificationMessage' [dummyTrigger]='notificationTrigger'></notification>\r\n\r\n</div>\r\n<spinner></spinner>\r\n\r\n\r\n"

/***/ }),

/***/ "./src/app/views/view-editor/view-editor.component.scss":
/*!**************************************************************!*\
  !*** ./src/app/views/view-editor/view-editor.component.scss ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".content__panel {\n  margin-top: 40px; }\n\n.container--editor {\n  display: block;\n  height: 100%;\n  width: 100%; }\n\n.container__heading {\n  display: block;\n  text-align: center;\n  width: 100%; }\n\n.container__content {\n  display: inline-flex;\n  width: 100%;\n  min-height: 100%;\n  overflow: inherit; }\n\n.container--toolset {\n  display: inline-flex;\n  width: 125px;\n  min-width: 125px;\n  max-width: 125px;\n  background-color: transparent;\n  height: calc(100vh - 40px);\n  overflow: hidden; }\n\n.container--toolset toolset {\n    display: flex;\n    flex-flow: column nowrap;\n    overflow: hidden;\n    width: 100%; }\n\n.pro-container {\n  height: auto; }\n\n.container--procedure {\n  width: calc(100% - 125px);\n  background-color: transparent;\n  padding: 0px; }\n\n.procedureln--container {\n  padding: 0px;\n  padding-bottom: 10px;\n  overflow: hidden;\n  margin: 0px 0px 5px 0px;\n  height: calc(100vh - 40px - 25px); }\n\n.procedureln--container #spacer {\n    height: 10px; }\n\n.procedureln--container:hover {\n    overflow: auto; }\n\n.procedureln--container-start {\n  height: calc(100vh - 40px - 25px - 56px); }\n\nhr {\n  border-top: 2px solid #E6E6E6;\n  width: 100%; }\n\nprocedure-item.ng-star-inserted {\n  max-height: 100%; }\n\n.divider--container {\n  height: 20px;\n  display: flex;\n  flex-flow: column nowrap;\n  padding-left: 8px;\n  padding-right: 5px;\n  width: 100%;\n  box-sizing: border-box;\n  margin: 10px 0px 2px 0px; }\n\n.divider--container .divider {\n    height: 100%;\n    padding-left: 2px;\n    padding-bottom: 2px;\n    border-bottom: 3px solid #999999; }\n\n.divider--container .divider span {\n      font-size: 12px;\n      font-weight: 550;\n      color: #00006d; }\n\n#modelViewButton--container {\n  padding: 0px 13px 0px 0px;\n  margin-bottom: 5px; }\n\n#modelViewButton--container button {\n    width: 100%;\n    margin: 0px 5px 2px 8px;\n    background-color: #E6E6E6;\n    color: #808080;\n    text-align: center;\n    text-decoration: none;\n    font-size: 12px;\n    transition: 0.4s;\n    border: 2px solid transparent; }\n\n#modelViewButton--container button span {\n      color: #00006d;\n      font-weight: 550; }\n\n#modelViewButton--container button:hover, #modelViewButton--container button:active {\n      background-color: #CCCCCC;\n      color: #373737; }\n\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdmlld3Mvdmlldy1lZGl0b3IvQzpcXFVzZXJzXFxha2liZHB0XFxEb2N1bWVudHNcXEFuZ3VsYXJcXG1vYml1cy1wYXJhbWV0cmljLW1vZGVsbGVyL3NyY1xcYXBwXFx2aWV3c1xcdmlldy1lZGl0b3JcXHZpZXctZWRpdG9yLmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC92aWV3cy92aWV3LWVkaXRvci9DOlxcVXNlcnNcXGFraWJkcHRcXERvY3VtZW50c1xcQW5ndWxhclxcbW9iaXVzLXBhcmFtZXRyaWMtbW9kZWxsZXIvc3JjXFxzY3NzXFx2YXJpYWJsZXMuc2NzcyIsInNyYy9hcHAvdmlld3Mvdmlldy1lZGl0b3IvQzpcXFVzZXJzXFxha2liZHB0XFxEb2N1bWVudHNcXEFuZ3VsYXJcXG1vYml1cy1wYXJhbWV0cmljLW1vZGVsbGVyL3NyY1xcc2Nzc1xcY29sb3JzLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBR0E7RUFDSSxpQkNGZ0IsRURHbkI7O0FBRUQ7RUFDSSxlQUFjO0VBQ2QsYUFBWTtFQUNaLFlBQVcsRUFDZDs7QUFFRDtFQUNJLGVBQWM7RUFDZCxtQkFBa0I7RUFDbEIsWUFBVyxFQUVkOztBQUVEO0VBQ0kscUJBQW9CO0VBQ3BCLFlBQVc7RUFDWCxpQkFBZ0I7RUFDaEIsa0JBQWlCLEVBQ3BCOztBQUVEO0VBQ0kscUJBQW9CO0VBQ3BCLGFBQVk7RUFDWixpQkFBZ0I7RUFDaEIsaUJBQWdCO0VBRWhCLDhCQUE2QjtFQUM3QiwyQkFBMEI7RUFDMUIsaUJBQWdCLEVBMkJuQjs7QUFuQ0Q7SUFVUSxjQUFhO0lBQ2IseUJBQXdCO0lBRXhCLGlCQUFlO0lBQ2YsWUFBVyxFQUlkOztBQWtCTDtFQUNJLGFBQVksRUFDZjs7QUFFRDtFQUNJLDBCQUF5QjtFQUN6Qiw4QkFBNkI7RUFDN0IsYUFBWSxFQUNmOztBQUVEO0VBQ0ksYUFBWTtFQUNaLHFCQUFvQjtFQUNwQixpQkFBZ0I7RUFDaEIsd0JBQXVCO0VBQ3ZCLGtDQUFpQyxFQU9wQzs7QUFaRDtJQU9RLGFBQVksRUFDZjs7QUFSTDtJQVVRLGVBQWEsRUFDaEI7O0FBR0w7RUFDSSx5Q0FBd0MsRUFDM0M7O0FBRUQ7RUFDSSw4QkV2Rlk7RUZ3RlosWUFBVSxFQUViOztBQUVEO0VBQ0ksaUJBQWdCLEVBQ25COztBQUVEO0VBQ0ksYUFBWTtFQUNaLGNBQWE7RUFDYix5QkFBd0I7RUFDeEIsa0JBQWlCO0VBQ2pCLG1CQUFrQjtFQUNsQixZQUFXO0VBQ1gsdUJBQXNCO0VBQ3RCLHlCQUF3QixFQVkzQjs7QUFwQkQ7SUFVUSxhQUFZO0lBQ1osa0JBQWlCO0lBQ2pCLG9CQUFtQjtJQUNuQixpQ0VoSFEsRUZzSFg7O0FBbkJMO01BZVksZ0JDL0dDO01EZ0hELGlCQUFnQjtNQUNoQixlRTFHbUIsRUYyR3RCOztBQUlUO0VBQ0ksMEJBQXlCO0VBQ3pCLG1CQUFrQixFQXlCckI7O0FBM0JEO0lBSVEsWUFBVztJQUNYLHdCQUF1QjtJQUV2QiwwQkU3SFE7SUY4SFIsZUVsSVE7SUZvSVIsbUJBQWtCO0lBQ2xCLHNCQUFxQjtJQUVyQixnQkNuSUs7SURvSUwsaUJBQWdCO0lBQ2hCLDhCQUE2QixFQVdoQzs7QUExQkw7TUFrQlksZUVqSW1CO01Ga0luQixpQkFBZ0IsRUFDbkI7O0FBcEJUO01BdUJZLDBCRTlJSTtNRitJSixlRXpJSSxFRjBJUCIsImZpbGUiOiJzcmMvYXBwL3ZpZXdzL3ZpZXctZWRpdG9yL3ZpZXctZWRpdG9yLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiQGltcG9ydCAnfnNjc3MvY29sb3JzJztcclxuQGltcG9ydCAnfnNjc3MvdmFyaWFibGVzJztcclxuXHJcbi5jb250ZW50X19wYW5lbHtcclxuICAgIG1hcmdpbi10b3A6ICRoZWFkZXItaGVpZ2h0O1xyXG59XHJcblxyXG4uY29udGFpbmVyLS1lZGl0b3J7XHJcbiAgICBkaXNwbGF5OiBibG9jazsgXHJcbiAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgICB3aWR0aDogMTAwJTtcclxufVxyXG5cclxuLmNvbnRhaW5lcl9faGVhZGluZ3tcclxuICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcblxyXG59XHJcblxyXG4uY29udGFpbmVyX19jb250ZW50e1xyXG4gICAgZGlzcGxheTogaW5saW5lLWZsZXg7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIG1pbi1oZWlnaHQ6IDEwMCU7XHJcbiAgICBvdmVyZmxvdzogaW5oZXJpdDtcclxufVxyXG5cclxuLmNvbnRhaW5lci0tdG9vbHNldHtcclxuICAgIGRpc3BsYXk6IGlubGluZS1mbGV4O1xyXG4gICAgd2lkdGg6IDEyNXB4O1xyXG4gICAgbWluLXdpZHRoOiAxMjVweDtcclxuICAgIG1heC13aWR0aDogMTI1cHg7XHJcbiAgICBcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xyXG4gICAgaGVpZ2h0OiBjYWxjKDEwMHZoIC0gNDBweCk7IC8vIDQwcHggPT09ICRoZWFkZXItaGVpZ2h0XHJcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xyXG4gICAgdG9vbHNldHtcclxuICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgIGZsZXgtZmxvdzogY29sdW1uIG5vd3JhcDtcclxuICAgICAgICBcclxuICAgICAgICBvdmVyZmxvdzpoaWRkZW47XHJcbiAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgLy8gJjpob3ZlcntcclxuICAgICAgICAvLyAgICAgb3ZlcmZsb3cteTogYXV0bztcclxuICAgICAgICAvLyB9XHJcbiAgICB9XHJcbiAgICAvLyB0b29sc2V0Ojotd2Via2l0LXNjcm9sbGJhciB7XHJcbiAgICAvLyAgICAgd2lkdGg6IDhweDtcclxuICAgIC8vIH1cclxuICAgIFxyXG4gICAgLy8gdG9vbHNldDo6LXdlYmtpdC1zY3JvbGxiYXItdHJhY2sge1xyXG4gICAgLy8gICAgIGJhY2tncm91bmQ6ICRjb2xvcjU7XHJcbiAgICAvLyB9XHJcbiAgICBcclxuICAgIC8vIHRvb2xzZXQ6Oi13ZWJraXQtc2Nyb2xsYmFyLXRodW1iIHtcclxuICAgIC8vICAgICBiYWNrZ3JvdW5kOiAkY29sb3I0OyBcclxuICAgIC8vICAgICBib3JkZXItbGVmdDogMnB4IHNvbGlkICRjb2xvcjU7XHJcbiAgICAvLyB9XHJcbiAgICBcclxuICAgIC8vIHRvb2xzZXQ6Oi13ZWJraXQtc2Nyb2xsYmFyLXRodW1iOmhvdmVyIHtcclxuICAgIC8vICAgICBiYWNrZ3JvdW5kOiAkY29sb3IyOyBcclxuICAgIC8vIH1cclxufVxyXG4ucHJvLWNvbnRhaW5lcntcclxuICAgIGhlaWdodDogYXV0bztcclxufVxyXG5cclxuLmNvbnRhaW5lci0tcHJvY2VkdXJle1xyXG4gICAgd2lkdGg6IGNhbGMoMTAwJSAtIDEyNXB4KTsgLy9taW4td2lkdGggdG9vbHNldFxyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XHJcbiAgICBwYWRkaW5nOiAwcHg7ICAgXHJcbn1cclxuXHJcbi5wcm9jZWR1cmVsbi0tY29udGFpbmVye1xyXG4gICAgcGFkZGluZzogMHB4O1xyXG4gICAgcGFkZGluZy1ib3R0b206IDEwcHg7XHJcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xyXG4gICAgbWFyZ2luOiAwcHggMHB4IDVweCAwcHg7XHJcbiAgICBoZWlnaHQ6IGNhbGMoMTAwdmggLSA0MHB4IC0gMjVweCk7IC8vIDQwcHggPT09ICRoZWFkZXItaGVpZ2h0IDI1cHggdG9wIG1hcmdpbiAmIGJ0biBoZWlnaHRcclxuICAgICNzcGFjZXJ7XHJcbiAgICAgICAgaGVpZ2h0OiAxMHB4O1xyXG4gICAgfVxyXG4gICAgJjpob3ZlcntcclxuICAgICAgICBvdmVyZmxvdzphdXRvO1xyXG4gICAgfSBcclxufVxyXG5cclxuLnByb2NlZHVyZWxuLS1jb250YWluZXItc3RhcnR7XHJcbiAgICBoZWlnaHQ6IGNhbGMoMTAwdmggLSA0MHB4IC0gMjVweCAtIDU2cHgpOyAvLyA0MHB4ID09PSAkaGVhZGVyLWhlaWdodCAyNXB4IHRvcCBtYXJnaW4gJiBidG4gaGVpZ2h0IDU2cHggZmxvd2NoYXJ0IGluZm9cclxufVxyXG5cclxuaHJ7XHJcbiAgICBib3JkZXItdG9wOiAycHggc29saWQgJGNvbG9yNTtcclxuICAgIHdpZHRoOjEwMCU7XHJcblxyXG59XHJcblxyXG5wcm9jZWR1cmUtaXRlbS5uZy1zdGFyLWluc2VydGVke1xyXG4gICAgbWF4LWhlaWdodDogMTAwJTtcclxufVxyXG5cclxuLmRpdmlkZXItLWNvbnRhaW5lcntcclxuICAgIGhlaWdodDogMjBweDtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBmbGV4LWZsb3c6IGNvbHVtbiBub3dyYXA7XHJcbiAgICBwYWRkaW5nLWxlZnQ6IDhweDtcclxuICAgIHBhZGRpbmctcmlnaHQ6IDVweDtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgYm94LXNpemluZzogYm9yZGVyLWJveDtcclxuICAgIG1hcmdpbjogMTBweCAwcHggMnB4IDBweDtcclxuICAgIC5kaXZpZGVye1xyXG4gICAgICAgIGhlaWdodDogMTAwJTtcclxuICAgICAgICBwYWRkaW5nLWxlZnQ6IDJweDtcclxuICAgICAgICBwYWRkaW5nLWJvdHRvbTogMnB4O1xyXG4gICAgICAgIGJvcmRlci1ib3R0b206IDNweCBzb2xpZCAkY29sb3IyO1xyXG4gICAgICAgIHNwYW57XHJcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogJGZzaXplMjtcclxuICAgICAgICAgICAgZm9udC13ZWlnaHQ6IDU1MDtcclxuICAgICAgICAgICAgY29sb3I6ICRzZWxlY3RlZC1jb2xvcjtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbn1cclxuXHJcbiNtb2RlbFZpZXdCdXR0b24tLWNvbnRhaW5lcntcclxuICAgIHBhZGRpbmc6IDBweCAxM3B4IDBweCAwcHg7XHJcbiAgICBtYXJnaW4tYm90dG9tOiA1cHg7XHJcbiAgICBidXR0b257XHJcbiAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgbWFyZ2luOiAwcHggNXB4IDJweCA4cHg7XHJcbiAgICBcclxuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkY29sb3I1O1xyXG4gICAgICAgIGNvbG9yOiAkY29sb3IxO1xyXG4gICAgXHJcbiAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcclxuICAgIFxyXG4gICAgICAgIGZvbnQtc2l6ZTogJGZzaXplMjtcclxuICAgICAgICB0cmFuc2l0aW9uOiAwLjRzO1xyXG4gICAgICAgIGJvcmRlcjogMnB4IHNvbGlkIHRyYW5zcGFyZW50O1xyXG4gICAgXHJcbiAgICAgICAgc3BhbntcclxuICAgICAgICAgICAgY29sb3I6ICRzZWxlY3RlZC1jb2xvcjtcclxuICAgICAgICAgICAgZm9udC13ZWlnaHQ6IDU1MDtcclxuICAgICAgICB9XHJcbiAgICAgICAgJjpob3ZlciwgJjphY3RpdmUge1xyXG4gICAgICAgICAgICAvLyBib3JkZXItY29sb3I6ICRzZWxlY3RlZC1jb2xvcjtcclxuICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJGNvbG9yNDtcclxuICAgICAgICAgICAgY29sb3I6ICRjb2xvcjg7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59IiwiJHBhZGRpbmc6IDQwcHg7IC8vID8gbm90IHVzZWRcclxuJHNtYWxsLXBhZGRpbmc6IDE1cHg7XHJcbiRoZWFkZXItaGVpZ2h0OiA0MHB4O1xyXG5cclxuJGZzaXplMTogMTVweDtcclxuJGZzaXplMjogMTJweDtcclxuJGZzaXplMzogMzBweDtcclxuXHJcbiRwb3J0LXNpemU6IDE1cHg7XHJcbiRkZWZhdWx0LXNpZGUtcGFkZGluZzogMTVweDtcclxuIiwiXHJcbiRjb2xvcjE6ICM4MDgwODA7XHJcbiRjb2xvcjI6ICM5OTk5OTk7XHJcbiRjb2xvcjM6ICNCM0IzQjM7IFxyXG4kY29sb3I0OiAjQ0NDQ0NDO1xyXG4kY29sb3I1OiAjRTZFNkU2O1xyXG4kY29sb3I1LTU6IHJnYigyNDUsIDI0NSwgMjQ1KTtcclxuJGNvbG9yNjogcmdiKDI1MCwgMjUwLCAyNTEpO1xyXG5cclxuJGNvbG9yNzogd2hpdGU7XHJcbiRjb2xvcjg6ICMzNzM3Mzc7XHJcblxyXG4kc2VsZWN0ZWQtY29sb3I6IHJnYigwLCAwLCAxMDkpO1xyXG4kaG92ZXItY29sb3I6ICRjb2xvcjI7XHJcblxyXG4kZXJyb3ItY29sb3I6ICNFOTQ4NTg7IC8vcGluay1yZWRcclxuJGVycm9yLWNvbG9yLWx0OiByZ2IoMjU1LCAyMjAsIDIyNCk7XHJcbiRwY29sb3IyOiAjRjNBMzJBOyAvL29yYW5nZS15ZWxsb3dcclxuJHByaW50LWNvbG9yOiAjODJCRjZFOyAvL2xpZ2h0Z3JlZW5cclxuJHByaW50LWNvbG9yLWx0OiByZ2IoMjMwLCAyNTUsIDIyMSk7XHJcblxyXG4vLyAkcHJvZC1iYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMjUwLDI1MCwyNTApO1xyXG4vLyAkYmFja2dyb3VuZC1jb2xvcjogcmdiKDIyMCwyMjAsMjIwKTtcclxuJGZ1bmN0aW9uLXRleHQtY29sb3I6IHJnYigxOTAsIDE0MCwgMzApO1xyXG4kZnVuY3Rpb24tdGV4dC1jb2xvcjI6IHJnYigxOCwgMTI2LCAxMzYpXHJcbiJdfQ== */"

/***/ }),

/***/ "./src/app/views/view-editor/view-editor.component.ts":
/*!************************************************************!*\
  !*** ./src/app/views/view-editor/view-editor.component.ts ***!
  \************************************************************/
/*! exports provided: ViewEditorComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ViewEditorComponent", function() { return ViewEditorComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _models_node__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @models/node */ "./src/app/shared/models/node/index.ts");
/* harmony import */ var _models_procedure__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @models/procedure */ "./src/app/shared/models/procedure/index.ts");
/* harmony import */ var _services__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @services */ "./src/app/core/services/index.ts");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var _shared_components_file_loadurl_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @shared/components/file/loadurl.component */ "./src/app/shared/components/file/loadurl.component.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};






var ViewEditorComponent = /** @class */ (function () {
    function ViewEditorComponent(dataService, router) {
        this.dataService = dataService;
        this.router = router;
        /*
        @Input() flowchart: IFlowchart;
        @Input() node: INode;
        */
        this.imported = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        this.delete_Function = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        this.notificationMessage = '';
        this.notificationTrigger = true;
        this.copyCheck = true;
        new _shared_components_file_loadurl_component__WEBPACK_IMPORTED_MODULE_5__["LoadUrlComponent"](this.dataService).loadStartUpURL(this.router.url);
    }
    // add a procedure
    ViewEditorComponent.prototype.add = function (data) {
        _models_node__WEBPACK_IMPORTED_MODULE_1__["NodeUtils"].add_procedure(this.dataService.node, data.type, data.data);
    };
    // delete a procedure
    ViewEditorComponent.prototype.deleteChild = function (index) {
        this.dataService.node.procedure.splice(index, 1);
        _models_node__WEBPACK_IMPORTED_MODULE_1__["NodeUtils"].deselect_procedure(this.dataService.node);
    };
    // select a procedure
    ViewEditorComponent.prototype.selectProcedure = function (event, line) {
        if (!event.ctrl && document.activeElement.tagName === 'INPUT') {
            return;
        }
        _models_node__WEBPACK_IMPORTED_MODULE_1__["NodeUtils"].select_procedure(this.dataService.node, event.prod, event.ctrl || false);
    };
    // copy selected procedures
    ViewEditorComponent.prototype.copyProd = function () {
        var node = this.dataService.node;
        var i = 0;
        while (i < node.state.procedure.length) {
            if (node.state.procedure[i].type === _models_procedure__WEBPACK_IMPORTED_MODULE_2__["ProcedureTypes"].Blank || node.state.procedure[i].type === _models_procedure__WEBPACK_IMPORTED_MODULE_2__["ProcedureTypes"].Return) {
                node.state.procedure[i].selected = false;
                node.state.procedure.splice(i, 1);
            }
            else {
                i += 1;
            }
        }
        if (!this.copyCheck || document.activeElement.nodeName === 'INPUT' || node.state.procedure.length === 0) {
            return;
        }
        // console.log('copying', node.state.procedure);
        this.dataService.copiedProd = node.state.procedure;
        this.notificationMessage = "Copied " + this.dataService.copiedProd.length + " Procedures";
        this.notificationTrigger = !this.notificationTrigger;
    };
    // cut selected procedures
    ViewEditorComponent.prototype.cutProd = function () {
        var node = this.dataService.node;
        var i = 0;
        while (i < node.state.procedure.length) {
            if (node.state.procedure[i].type === _models_procedure__WEBPACK_IMPORTED_MODULE_2__["ProcedureTypes"].Blank || node.state.procedure[i].type === _models_procedure__WEBPACK_IMPORTED_MODULE_2__["ProcedureTypes"].Return) {
                node.state.procedure[i].selected = false;
                node.state.procedure.splice(i, 1);
            }
            else {
                i += 1;
            }
        }
        if (!this.copyCheck || document.activeElement.nodeName === 'INPUT' || node.state.procedure.length === 0) {
            return;
        }
        // console.log('cutting', node.state.procedure);
        this.dataService.copiedProd = node.state.procedure;
        var parentArray;
        for (var _i = 0, _a = this.dataService.copiedProd; _i < _a.length; _i++) {
            var prod = _a[_i];
            if (prod.type === _models_procedure__WEBPACK_IMPORTED_MODULE_2__["ProcedureTypes"].Blank) {
                continue;
            }
            if (prod.parent) {
                parentArray = prod.parent.children;
            }
            else {
                parentArray = node.procedure;
            }
            for (var j = 0; j < parentArray.length; j++) {
                if (parentArray[j] === prod) {
                    parentArray.splice(j, 1);
                    break;
                }
            }
        }
        _models_node__WEBPACK_IMPORTED_MODULE_1__["NodeUtils"].deselect_procedure(node);
        this.notificationMessage = "Cut " + this.dataService.copiedProd.length + " Procedures";
        this.notificationTrigger = !this.notificationTrigger;
    };
    // paste copied procedures
    ViewEditorComponent.prototype.pasteProd = function () {
        var node = this.dataService.node;
        if (this.copyCheck
            && this.dataService.copiedProd
            && document.activeElement.nodeName !== 'INPUT'
            && document.activeElement.nodeName !== 'TEXTAREA') {
            var pastingPlace = node.state.procedure[0];
            var toBePasted = this.dataService.copiedProd;
            if (pastingPlace === undefined) {
                for (var i = 0; i < toBePasted.length; i++) {
                    if (toBePasted[i].type === _models_procedure__WEBPACK_IMPORTED_MODULE_2__["ProcedureTypes"].Blank ||
                        toBePasted[i].type === _models_procedure__WEBPACK_IMPORTED_MODULE_2__["ProcedureTypes"].Return) {
                        continue;
                    }
                    // console.log('pasting', toBePasted[i].ID);
                    _models_node__WEBPACK_IMPORTED_MODULE_1__["NodeUtils"].paste_procedure(node, toBePasted[i]);
                    node.state.procedure[0].selected = false;
                    node.state.procedure = [];
                }
            }
            else {
                for (var i = toBePasted.length - 1; i >= 0; i--) {
                    if (toBePasted[i].type === _models_procedure__WEBPACK_IMPORTED_MODULE_2__["ProcedureTypes"].Blank ||
                        toBePasted[i].type === _models_procedure__WEBPACK_IMPORTED_MODULE_2__["ProcedureTypes"].Return) {
                        continue;
                    }
                    // console.log('pasting', toBePasted[i].ID);
                    _models_node__WEBPACK_IMPORTED_MODULE_1__["NodeUtils"].paste_procedure(node, toBePasted[i]);
                    node.state.procedure[0].selected = false;
                    pastingPlace.selected = true;
                    node.state.procedure = [pastingPlace];
                }
            }
            // toBePasted = undefined;
            this.notificationMessage = "Pasted " + toBePasted.length + " Procedures";
            this.notificationTrigger = !this.notificationTrigger;
        }
    };
    // activate copying/cutting/pasting when the mouse hovers over the procedure list
    ViewEditorComponent.prototype.activateCopyPaste = function () {
        this.copyCheck = true;
    };
    // deactivate copying/cutting/pasting when the mouse exit the procedure list
    ViewEditorComponent.prototype.deactivateCopyPaste = function () {
        this.copyCheck = false;
    };
    // import a flowchart as function
    ViewEditorComponent.prototype.importFunction = function (event) {
        for (var _i = 0, event_1 = event; _i < event_1.length; _i++) {
            var func = event_1[_i];
            this.dataService.flowchart.functions.push(func);
        }
    };
    // delete an imported function
    ViewEditorComponent.prototype.deleteFunction = function (event) {
        for (var i = 0; i < this.dataService.flowchart.functions.length; i++) {
            if (this.dataService.flowchart.functions[i] === event) {
                this.dataService.flowchart.functions.splice(i, 1);
                break;
            }
        }
    };
    ViewEditorComponent.prototype.updateHelpView = function (event) {
        if (typeof (event) === 'string') {
            for (var _i = 0, _a = this.dataService.flowchart.functions; _i < _a.length; _i++) {
                var func = _a[_i];
                if (func.name === event) {
                    this.dataService.helpView = func.doc;
                }
            }
        }
        else {
            this.dataService.helpView = event;
        }
        this.dataService.toggleHelp(true);
    };
    ViewEditorComponent.prototype.setViewOutput = function () {
        this.dataService.setModelOutputView(this.dataService.node.id, !this.getViewOutput());
        // this.dataService.modelOutputView = !this.dataService.modelOutputView;
    };
    ViewEditorComponent.prototype.getViewOutput = function () {
        return this.dataService.getModelOutputView(this.dataService.node.id);
    };
    // setTestModel() {
    //     this.dataService.testModel = !this.dataService.testModel;
    //     this.dataService.modelOutputView = this.dataService.testModel;
    // }
    ViewEditorComponent.prototype.viewerData = function () {
        var node = this.dataService.flowchart.nodes[this.dataService.flowchart.meta.selected_nodes[0]];
        if (!node) {
            return '';
        }
        // if (node.type === 'output') { return node.input.value; }
        if (this.getViewOutput()) {
            return node.model;
        }
        return node.input.value;
    };
    ViewEditorComponent.prototype.setSplit = function (event) { this.dataService.splitVal = event.sizes[1]; };
    ViewEditorComponent.prototype.unselectAll = function (event) {
        if (event.ctrlKey) {
            return;
        }
        _models_node__WEBPACK_IMPORTED_MODULE_1__["NodeUtils"].deselect_procedure(this.dataService.node);
    };
    ViewEditorComponent.prototype.getSplit = function () { return this.dataService.splitVal; };
    ViewEditorComponent.prototype.getFlowchart = function () { return this.dataService.flowchart; };
    ViewEditorComponent.prototype.getNode = function () { return this.dataService.node; };
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])(),
        __metadata("design:type", Object)
    ], ViewEditorComponent.prototype, "imported", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])(),
        __metadata("design:type", Object)
    ], ViewEditorComponent.prototype, "delete_Function", void 0);
    ViewEditorComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'view-editor',
            template: __webpack_require__(/*! ./view-editor.component.html */ "./src/app/views/view-editor/view-editor.component.html"),
            styles: [__webpack_require__(/*! ./view-editor.component.scss */ "./src/app/views/view-editor/view-editor.component.scss")]
        }),
        __metadata("design:paramtypes", [_services__WEBPACK_IMPORTED_MODULE_3__["DataService"], _angular_router__WEBPACK_IMPORTED_MODULE_4__["Router"]])
    ], ViewEditorComponent);
    return ViewEditorComponent;
}());



/***/ }),

/***/ "./src/app/views/view-editor/view-editor.module.ts":
/*!*********************************************************!*\
  !*** ./src/app/views/view-editor/view-editor.module.ts ***!
  \*********************************************************/
/*! exports provided: ViewEditorModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ViewEditorModule", function() { return ViewEditorModule; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/fesm5/common.js");
/* harmony import */ var _shared_shared_module__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @shared/shared.module */ "./src/app/shared/shared.module.ts");
/* harmony import */ var _view_editor_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./view-editor.component */ "./src/app/views/view-editor/view-editor.component.ts");
/* harmony import */ var _procedure_item_procedure_item_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./procedure-item/procedure-item.component */ "./src/app/views/view-editor/procedure-item/procedure-item.component.ts");
/* harmony import */ var _toolset_toolset_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./toolset/toolset.component */ "./src/app/views/view-editor/toolset/toolset.component.ts");
/* harmony import */ var _parameter_editor_parameter_editor_component__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./parameter-editor/parameter-editor.component */ "./src/app/views/view-editor/parameter-editor/parameter-editor.component.ts");
/* harmony import */ var _parameter_editor_procedure_input_editor_procedure_input_editor_component__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./parameter-editor/procedure-input-editor/procedure-input-editor.component */ "./src/app/views/view-editor/parameter-editor/procedure-input-editor/procedure-input-editor.component.ts");
/* harmony import */ var _view_editor_routing_module__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./view-editor-routing.module */ "./src/app/views/view-editor/view-editor-routing.module.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};









var ViewEditorModule = /** @class */ (function () {
    function ViewEditorModule() {
    }
    ViewEditorModule = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["NgModule"])({
            declarations: [
                _view_editor_component__WEBPACK_IMPORTED_MODULE_3__["ViewEditorComponent"],
                _procedure_item_procedure_item_component__WEBPACK_IMPORTED_MODULE_4__["ProcedureItemComponent"],
                _toolset_toolset_component__WEBPACK_IMPORTED_MODULE_5__["ToolsetComponent"],
                _parameter_editor_parameter_editor_component__WEBPACK_IMPORTED_MODULE_6__["ParameterEditorComponent"],
                _parameter_editor_procedure_input_editor_procedure_input_editor_component__WEBPACK_IMPORTED_MODULE_7__["ProcedureInputEditorComponent"],
            ],
            entryComponents: [],
            imports: [
                _angular_common__WEBPACK_IMPORTED_MODULE_1__["CommonModule"],
                _shared_shared_module__WEBPACK_IMPORTED_MODULE_2__["SharedModule"],
                _view_editor_routing_module__WEBPACK_IMPORTED_MODULE_8__["ViewEditorRoutingModule"]
            ],
            exports: [
                _view_editor_component__WEBPACK_IMPORTED_MODULE_3__["ViewEditorComponent"],
            ],
            providers: []
        }),
        __metadata("design:paramtypes", [])
    ], ViewEditorModule);
    return ViewEditorModule;
}());



/***/ }),

/***/ "./src/app/views/view-flowchart/edge/edge.component.html":
/*!***************************************************************!*\
  !*** ./src/app/views/view-flowchart/edge/edge.component.html ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<!--the main line-->\r\n<svg:polyline \r\nid=\"main-edge\" \r\nclass = \"edge\" \r\n[class.selected] = \"edge.selected\"\r\n[attr.points] = \"(edge.source.parentNode.position.x + outputOffset[0]) + ',' +\r\n                    (edge.source.parentNode.position.y + outputOffset[1]+ 8) + ' ' +\r\n\r\n                    (edge.source.parentNode.position.x + outputOffset[0]) + ',' +\r\n                    (edge.source.parentNode.position.y + outputOffset[1] + 16) + ' ' +\r\n\r\n                    (edge.target.parentNode.position.x + inputOffset[0]) + ',' +\r\n                    (edge.target.parentNode.position.y + inputOffset[1] - 27) + ' ' +\r\n\r\n                    (edge.target.parentNode.position.x + inputOffset[0]) + ',' +\r\n                    (edge.target.parentNode.position.y + inputOffset[1] - 22)\" \r\n/>\r\n\r\n<!--a wider invisible line to make the wire easier to click-->\r\n<svg:polyline \r\nid=\"invisible-edge\" \r\nclass = \"inviEdge\" \r\n[attr.points] = \"(edge.source.parentNode.position.x + outputOffset[0]) + ',' +\r\n                    (edge.source.parentNode.position.y + outputOffset[1]+ 15) + ' ' +\r\n\r\n                    (edge.source.parentNode.position.x + outputOffset[0]) + ',' +\r\n                    (edge.source.parentNode.position.y + outputOffset[1] + 17) + ' ' +\r\n\r\n                    (edge.target.parentNode.position.x + inputOffset[0]) + ',' +\r\n                    (edge.target.parentNode.position.y + inputOffset[1] - 27) + ' ' +\r\n\r\n                    (edge.target.parentNode.position.x + inputOffset[0]) + ',' +\r\n                    (edge.target.parentNode.position.y + inputOffset[1] - 12)\" \r\n(click)='select($event)'/>\r\n    \r\n\r\n"

/***/ }),

/***/ "./src/app/views/view-flowchart/edge/edge.component.scss":
/*!***************************************************************!*\
  !*** ./src/app/views/view-flowchart/edge/edge.component.scss ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".edge {\n  fill: none;\n  stroke: #505050;\n  stroke-linecap: round;\n  stroke-linejoin: round;\n  stroke-width: 2px;\n  opacity: 1;\n  pointer-events: stroke;\n  marker-end: url(#arrow); }\n\n.inviEdge {\n  fill: none;\n  stroke: gray;\n  stroke-width: 30px;\n  opacity: 0;\n  pointer-events: stroke; }\n\n.selected {\n  stroke: #000096;\n  opacity: 1;\n  marker-end: url(#arrow_selected); }\n\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdmlld3Mvdmlldy1mbG93Y2hhcnQvZWRnZS9DOlxcVXNlcnNcXGFraWJkcHRcXERvY3VtZW50c1xcQW5ndWxhclxcbW9iaXVzLXBhcmFtZXRyaWMtbW9kZWxsZXIvc3JjXFxhcHBcXHZpZXdzXFx2aWV3LWZsb3djaGFydFxcZWRnZVxcZWRnZS5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLFdBQVU7RUFDVixnQkFBdUI7RUFDdkIsc0JBQXFCO0VBQ3JCLHVCQUFzQjtFQUN0QixrQkFBaUI7RUFDakIsV0FBVTtFQUNWLHVCQUFzQjtFQUN0Qix3QkFBdUIsRUFDMUI7O0FBQ0Q7RUFDSSxXQUFVO0VBQ1YsYUFBWTtFQUNaLG1CQUFrQjtFQUNsQixXQUFVO0VBQ1YsdUJBQXNCLEVBQ3pCOztBQUNEO0VBQ0ksZ0JBQXNCO0VBQ3RCLFdBQVU7RUFDVixpQ0FBZ0MsRUFDbkMiLCJmaWxlIjoic3JjL2FwcC92aWV3cy92aWV3LWZsb3djaGFydC9lZGdlL2VkZ2UuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuZWRnZXtcclxuICAgIGZpbGw6IG5vbmU7XHJcbiAgICBzdHJva2U6IHJnYig4MCwgODAsIDgwKTtcclxuICAgIHN0cm9rZS1saW5lY2FwOiByb3VuZDtcclxuICAgIHN0cm9rZS1saW5lam9pbjogcm91bmQ7XHJcbiAgICBzdHJva2Utd2lkdGg6IDJweDtcclxuICAgIG9wYWNpdHk6IDE7XHJcbiAgICBwb2ludGVyLWV2ZW50czogc3Ryb2tlO1xyXG4gICAgbWFya2VyLWVuZDogdXJsKCNhcnJvdyk7XHJcbn1cclxuLmludmlFZGdle1xyXG4gICAgZmlsbDogbm9uZTtcclxuICAgIHN0cm9rZTogZ3JheTtcclxuICAgIHN0cm9rZS13aWR0aDogMzBweDtcclxuICAgIG9wYWNpdHk6IDA7XHJcbiAgICBwb2ludGVyLWV2ZW50czogc3Ryb2tlO1xyXG59XHJcbi5zZWxlY3RlZHtcclxuICAgIHN0cm9rZTogcmdiKDAsIDAsIDE1MCk7XHJcbiAgICBvcGFjaXR5OiAxO1xyXG4gICAgbWFya2VyLWVuZDogdXJsKCNhcnJvd19zZWxlY3RlZCk7XHJcbn1cclxuIl19 */"

/***/ }),

/***/ "./src/app/views/view-flowchart/edge/edge.component.ts":
/*!*************************************************************!*\
  !*** ./src/app/views/view-flowchart/edge/edge.component.ts ***!
  \*************************************************************/
/*! exports provided: EdgeComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EdgeComponent", function() { return EdgeComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};

var EdgeComponent = /** @class */ (function () {
    function EdgeComponent() {
        this.delete = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        this.selected = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
    }
    // select a wire
    EdgeComponent.prototype.select = function (event) {
        event.preventDefault();
        event.stopPropagation();
        if (this.edge.selected) {
            this.selected.emit(event.ctrlKey);
        }
        else {
            if (event.ctrlKey) {
                this.selected.emit('ctrl');
            }
            else {
                this.selected.emit('single');
            }
        }
    };
    // delete a wire
    EdgeComponent.prototype.deleteEdge = function () {
        this.delete.emit();
    };
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"])('canvas'),
        __metadata("design:type", _angular_core__WEBPACK_IMPORTED_MODULE_0__["ElementRef"])
    ], EdgeComponent.prototype, "canvas", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", Object)
    ], EdgeComponent.prototype, "edge", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", Object)
    ], EdgeComponent.prototype, "inputOffset", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", Object)
    ], EdgeComponent.prototype, "outputOffset", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])(),
        __metadata("design:type", Object)
    ], EdgeComponent.prototype, "delete", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])(),
        __metadata("design:type", Object)
    ], EdgeComponent.prototype, "selected", void 0);
    EdgeComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: '[edge]',
            template: __webpack_require__(/*! ./edge.component.html */ "./src/app/views/view-flowchart/edge/edge.component.html"),
            styles: [__webpack_require__(/*! ./edge.component.scss */ "./src/app/views/view-flowchart/edge/edge.component.scss")]
        })
    ], EdgeComponent);
    return EdgeComponent;
}());



/***/ }),

/***/ "./src/app/views/view-flowchart/node/node.actions.ts":
/*!***********************************************************!*\
  !*** ./src/app/views/view-flowchart/node/node.actions.ts ***!
  \***********************************************************/
/*! exports provided: ACTIONS */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ACTIONS", function() { return ACTIONS; });
var ACTIONS;
(function (ACTIONS) {
    ACTIONS[ACTIONS["SELECT"] = 0] = "SELECT";
    ACTIONS[ACTIONS["DELETE"] = 1] = "DELETE";
    ACTIONS[ACTIONS["COPY"] = 2] = "COPY";
    ACTIONS[ACTIONS["CONNECT"] = 3] = "CONNECT";
    ACTIONS[ACTIONS["DRAGNODE"] = 4] = "DRAGNODE";
    ACTIONS[ACTIONS["DROPPORT"] = 5] = "DROPPORT";
    ACTIONS[ACTIONS["DRAGPORT"] = 6] = "DRAGPORT";
    ACTIONS[ACTIONS["PROCEDURE"] = 7] = "PROCEDURE";
})(ACTIONS || (ACTIONS = {}));


/***/ }),

/***/ "./src/app/views/view-flowchart/node/node.component.html":
/*!***************************************************************!*\
  !*** ./src/app/views/view-flowchart/node/node.component.html ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<!-- svg group for the selectable and draggable area of normal node -->\r\n<svg:g (click)='nodeSelect($event)' draggable=\"true\" \r\n(mousedown)='startDragNode($event)' \r\n(dblclick)='switchToProcedure($event)'\r\n*ngIf='node.type==\"\"'>\r\n\r\n    <!-- rectangular box with border -->\r\n    <rect class=\"node\" \r\n    width=\"100\" height=\"80\"\r\n    [class.node--selected]='selected'\r\n    [class.node--error]=\"node.hasError\"\r\n    [class.node--disabled]='!node.enabled'\r\n    [attr.x]=\"node.position.x\" \r\n    [attr.y]=\"node.position.y\"\r\n    />\r\n\r\n    <!-- node description inside the rectangular box -->\r\n    <svg:foreignObject [attr.x]=\"node.position.x\" [attr.y]=\"node.position.y + 3\" \r\n    width=\"100\" height = \"80\"\r\n    >\r\n        <xhtml:div class='textdiv'>\r\n            <xhtml:textarea \r\n                id={{node.id}}\r\n                autocomplete=off \r\n                [(ngModel)]='node.name'\r\n                [class.selected]='selected'\r\n                [class.disabled]='!node.enabled'\r\n                title={{node.name}}\r\n                style=\"font-weight: 600;\"\r\n                placeholder='Description of Node'/>  \r\n        </xhtml:div>\r\n    </svg:foreignObject>\r\n</svg:g>\r\n\r\n<!-- svg group for the selectable and draggable area of start node -->\r\n<svg:g (click)='nodeSelect($event)' draggable=\"true\" \r\n(mousedown)='startDragNode($event)' \r\n(dblclick)='switchToProcedure($event)'\r\n*ngIf='node.type==\"start\"'>\r\n\r\n    <!-- ellipse with border\r\n    <ellipse class=\"node\" \r\n        [class.node--selected]='selected'\r\n        [class.node--error]=\"node.hasError\"\r\n        [attr.cx]=\"node.position.x + inputOffset[0]\" \r\n        [attr.cy]=\"node.position.y + (inputOffset[1]+outputOffset[1])/2 + 10\"\r\n        [attr.rx]=\"40\"\r\n        [attr.ry]=\"30\"\r\n        />\r\n     -->\r\n\r\n    <!-- Triangle with border -->\r\n    <path class=\"node\" \r\n        [class.node--selected]='selected'\r\n        [class.node--error]=\"node.hasError\"\r\n        [attr.d]=\"'M'+node.position.x +' '+ (node.position.y + 30) +\r\n                 ' L'+ node.position.x +' '+ (node.position.y + 60) +\r\n                 ' L'+ (node.position.x + 50) +' '+ (node.position.y + 80) +\r\n                 ' L'+ (node.position.x + 100) +' '+ (node.position.y + 60) +\r\n                 ' L'+ (node.position.x + 100) +' '+ (node.position.y + 30) + ' Z'\" \r\n        />\r\n\r\n    <!-- circles as inputs of the node -->\r\n    <!-- <svg:circle\r\n    *ngFor=\"let prod of node.procedure; let i=index\"\r\n    r=3\r\n    [attr.cx]=\"node.position.x + (100 * (i+1) / (node.procedure.length + 1))\" \r\n    [attr.cy]=\"node.position.y + 22\"\r\n    class='inputPort'/> -->\r\n\r\n\r\n\r\n    <!-- node description inside the ellipse -->\r\n    <svg:foreignObject \r\n    [attr.x]=\"node.position.x\" [attr.y]=\"node.position.y + 38\" \r\n    width=\"100\" height = \"40\">\r\n        <xhtml:div class='textdiv'>\r\n            <xhtml:textarea \r\n                id={{node.id}}\r\n                class='textarea_startend'\r\n                autocomplete=off \r\n                [class.selected]='selected'\r\n                [(ngModel)]='node.name'/>  \r\n        </xhtml:div>\r\n    </svg:foreignObject>\r\n</svg:g>\r\n\r\n<!-- svg group for the selectable and draggable area of end node -->\r\n<svg:g (click)='nodeSelect($event)' draggable=\"true\" \r\n(mousedown)='startDragNode($event)' \r\n(dblclick)='switchToProcedure($event)'\r\n*ngIf='node.type==\"end\"'>\r\n\r\n    <!-- ellipse with border \r\n    <ellipse class=\"node\" \r\n        [class.node--selected]='selected'\r\n        [class.node--error]=\"node.hasError\"\r\n        [class.node--disabled]='!node.enabled'\r\n        [attr.cx]=\"node.position.x + inputOffset[0]\" \r\n        [attr.cy]=\"node.position.y + (inputOffset[1]+outputOffset[1])/2 - 10\"\r\n        [attr.rx]=\"40\"\r\n        [attr.ry]=\"30\"\r\n        />\r\n    -->\r\n    \r\n    <!-- Triangle with border -->\r\n    <path class=\"node\" \r\n        [class.node--selected]='selected'\r\n        [class.node--error]=\"node.hasError\"\r\n        [attr.d]=\"'M'+node.position.x +' '+ (node.position.y + 50) +\r\n                 ' L' + node.position.x +' '+ (node.position.y + 20) +\r\n                 ' L'+ (node.position.x + 50) +' '+ node.position.y +\r\n                 ' L'+ (node.position.x + 100) +' '+ (node.position.y + 20) +\r\n                 ' L'+ (node.position.x + 100) +' '+ (node.position.y + 50) + ' Z'\" \r\n        />\r\n\r\n    <!-- <svg:circle\r\n    *ngIf=\"node.procedure.length > 0\"\r\n    r=3\r\n    [attr.cx]=\"node.position.x + 50\" \r\n    [attr.cy]=\"node.position.y + 58\"\r\n    class='inputPort'/> -->\r\n    \r\n\r\n    <!-- node description inside the ellipse -->\r\n    <svg:foreignObject [attr.x]=\"node.position.x\" [attr.y]=\"node.position.y + 18\" \r\n    width=\"100\" height = \"40\">\r\n        <xhtml:div class='textdiv'>\r\n            <xhtml:textarea \r\n                id={{node.id}}\r\n                class='textarea_startend'\r\n                autocomplete=off \r\n                [class.selected]='selected'\r\n                [class.disabled]='!node.enabled'\r\n                [(ngModel)]='node.name'/>  \r\n        </xhtml:div>\r\n    </svg:foreignObject>\r\n</svg:g>\r\n\r\n\r\n\r\n<!-- circles as draggable input/output ports of the node -->\r\n<svg:circle\r\nr=3\r\n[attr.cx]=\"node.position.x + inputOffset[0]\" \r\n[attr.cy]=\"node.position.y + inputOffset[1]\"\r\n*ngIf=\"inputDraggable()\" \r\nclass='inputPort'\r\nid = 'node.input.id'\r\n(mousedown)='startDragPort($event, \"input\")'/>\r\n\r\n<svg:circle *ngIf=\"outputDraggable()\" \r\nclass='outputPort'\r\nid = 'node.output.id'\r\n(mousedown)='startDragPort($event, \"output\")' \r\n[attr.cx]=\"node.position.x + outputOffset[0]\" \r\n[attr.cy]=\"node.position.y + outputOffset[1]\" \r\npointer-events=\"all\"\r\nr=3\r\nfill=\"black\"/>\r\n\r\n"

/***/ }),

/***/ "./src/app/views/view-flowchart/node/node.component.scss":
/*!***************************************************************!*\
  !*** ./src/app/views/view-flowchart/node/node.component.scss ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".node {\n  fill: #fafafa;\n  stroke-width: 2px;\n  stroke: #808080;\n  stroke-opacity: 1;\n  stroke-linecap: round;\n  stroke-linejoin: round; }\n  .node.node--disabled {\n    stroke-opacity: 0.5;\n    fill-opacity: 0.5; }\n  .node.node--selected {\n    stroke: #00006d; }\n  .node.node--error {\n    stroke: red; }\n  .textdiv {\n  text-align: center;\n  width: 94px; }\n  .foreignObject {\n  width: 100;\n  height: 80; }\n  textarea {\n  cursor: pointer;\n  font-family: sans-serif;\n  background: transparent;\n  display: inline-block;\n  border: none;\n  font-size: 15px;\n  width: 100%;\n  height: 70px;\n  font-weight: 600;\n  text-align: center;\n  vertical-align: middle;\n  resize: none;\n  overflow: hidden;\n  color: #808080; }\n  textarea.selected {\n    color: #00006d; }\n  textarea.disabled {\n    opacity: 0.5; }\n  .textarea_startend {\n  font-size: 15px;\n  font-weight: 600;\n  color: #808080;\n  height: 20px;\n  pointer-events: none; }\n  .inputPort {\n  stroke: transparent;\n  stroke-width: 20px;\n  pointer-events: all;\n  fill: #808080; }\n  .outputPort {\n  stroke: transparent;\n  stroke-width: 20px;\n  pointer-events: all;\n  fill: #808080; }\n\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdmlld3Mvdmlldy1mbG93Y2hhcnQvbm9kZS9DOlxcVXNlcnNcXGFraWJkcHRcXERvY3VtZW50c1xcQW5ndWxhclxcbW9iaXVzLXBhcmFtZXRyaWMtbW9kZWxsZXIvc3JjXFxhcHBcXHZpZXdzXFx2aWV3LWZsb3djaGFydFxcbm9kZVxcbm9kZS5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvdmlld3Mvdmlldy1mbG93Y2hhcnQvbm9kZS9DOlxcVXNlcnNcXGFraWJkcHRcXERvY3VtZW50c1xcQW5ndWxhclxcbW9iaXVzLXBhcmFtZXRyaWMtbW9kZWxsZXIvc3JjXFxzY3NzXFxjb2xvcnMuc2NzcyIsInNyYy9hcHAvdmlld3Mvdmlldy1mbG93Y2hhcnQvbm9kZS9DOlxcVXNlcnNcXGFraWJkcHRcXERvY3VtZW50c1xcQW5ndWxhclxcbW9iaXVzLXBhcmFtZXRyaWMtbW9kZWxsZXIvc3JjXFxzY3NzXFx2YXJpYWJsZXMuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFNQTtFQUNJLGNBQXVCO0VBQ3ZCLGtCQUxjO0VBTWQsZ0JDUlk7RURTWixrQkFBaUI7RUFDakIsc0JBQXFCO0VBQ3JCLHVCQUFzQixFQWN6QjtFQXBCRDtJQVNRLG9CQUFtQjtJQUNuQixrQkFBaUIsRUFDcEI7RUFYTDtJQWFRLGdCQ1B1QixFRFExQjtFQWRMO0lBaUJRLFlBbkJTLEVBb0JaO0VBSUw7RUFDSSxtQkFBa0I7RUFDbEIsWUFBVyxFQUNkO0VBRUQ7RUFDSSxXQUFVO0VBQ1YsV0FBVSxFQUNiO0VBRUQ7RUFDSSxnQkFBZTtFQUNmLHdCQUF1QjtFQUN2Qix3QkFBdUI7RUFDdkIsc0JBQW9CO0VBQ3BCLGFBQVc7RUFDWCxnQkV4Q1M7RUZ5Q1QsWUFBVztFQUNYLGFBQVk7RUFDWixpQkFBZ0I7RUFDaEIsbUJBQWtCO0VBQ2xCLHVCQUFzQjtFQUN0QixhQUFZO0VBQ1osaUJBQWdCO0VBQ2hCLGVDbkRZLEVENERmO0VBdkJEO0lBaUJRLGVDM0N1QixFRDRDMUI7RUFsQkw7SUFxQlEsYUFBWSxFQUNmO0VBR0w7RUFDSSxnQkU1RFM7RUY2RFQsaUJBQWdCO0VBQ2hCLGVDakVZO0VEa0VaLGFBQVk7RUFDWixxQkFBb0IsRUFDdkI7RUFFRDtFQUNJLG9CQUFtQjtFQUNuQixtQkFBa0I7RUFDbEIsb0JBQW1CO0VBQ25CLGNDMUVZLEVENEVmO0VBQ0Q7RUFDSSxvQkFBbUI7RUFDbkIsbUJBQWtCO0VBQ2xCLG9CQUFtQjtFQUNuQixjQ2pGWSxFRG1GZiIsImZpbGUiOiJzcmMvYXBwL3ZpZXdzL3ZpZXctZmxvd2NoYXJ0L25vZGUvbm9kZS5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIkBpbXBvcnQgJ35zY3NzL2NvbG9ycyc7XHJcbkBpbXBvcnQgJ35zY3NzL3ZhcmlhYmxlcyc7XHJcblxyXG4kc3Ryb2tlLXdpZHRoOiAycHg7XHJcbiRlcnJvci1jb2xvcjogcmVkO1xyXG5cclxuLm5vZGV7XHJcbiAgICBmaWxsOnJnYigyNTAsIDI1MCwgMjUwKTtcclxuICAgIHN0cm9rZS13aWR0aDokc3Ryb2tlLXdpZHRoO1xyXG4gICAgc3Ryb2tlOiAkY29sb3IxO1xyXG4gICAgc3Ryb2tlLW9wYWNpdHk6IDE7XHJcbiAgICBzdHJva2UtbGluZWNhcDogcm91bmQ7XHJcbiAgICBzdHJva2UtbGluZWpvaW46IHJvdW5kO1xyXG5cclxuICAgICYubm9kZS0tZGlzYWJsZWR7XHJcbiAgICAgICAgc3Ryb2tlLW9wYWNpdHk6IDAuNTtcclxuICAgICAgICBmaWxsLW9wYWNpdHk6IDAuNTtcclxuICAgIH1cclxuICAgICYubm9kZS0tc2VsZWN0ZWR7XHJcbiAgICAgICAgc3Ryb2tlOiAkc2VsZWN0ZWQtY29sb3I7XHJcbiAgICB9XHJcblxyXG4gICAgJi5ub2RlLS1lcnJvcntcclxuICAgICAgICBzdHJva2U6ICRlcnJvci1jb2xvcjtcclxuICAgIH1cclxuXHJcbn1cclxuXHJcbi50ZXh0ZGl2e1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyOyBcclxuICAgIHdpZHRoOiA5NHB4O1xyXG59XHJcblxyXG4uZm9yZWlnbk9iamVjdHtcclxuICAgIHdpZHRoOiAxMDA7IFxyXG4gICAgaGVpZ2h0OiA4MDtcclxufVxyXG5cclxudGV4dGFyZWF7XHJcbiAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgICBmb250LWZhbWlseTogc2Fucy1zZXJpZjsgXHJcbiAgICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDsgXHJcbiAgICBkaXNwbGF5OmlubGluZS1ibG9jaztcclxuICAgIGJvcmRlcjpub25lOyBcclxuICAgIGZvbnQtc2l6ZTogJGZzaXplMTsgXHJcbiAgICB3aWR0aDogMTAwJTsgXHJcbiAgICBoZWlnaHQ6IDcwcHg7XHJcbiAgICBmb250LXdlaWdodDogNjAwOyBcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjsgXHJcbiAgICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xyXG4gICAgcmVzaXplOiBub25lOyBcclxuICAgIG92ZXJmbG93OiBoaWRkZW47XHJcbiAgICBjb2xvcjogJGNvbG9yMTtcclxuXHJcbiAgICAmLnNlbGVjdGVke1xyXG4gICAgICAgIGNvbG9yOiAkc2VsZWN0ZWQtY29sb3I7XHJcbiAgICB9XHJcblxyXG4gICAgJi5kaXNhYmxlZHtcclxuICAgICAgICBvcGFjaXR5OiAwLjU7XHJcbiAgICB9XHJcbn1cclxuXHJcbi50ZXh0YXJlYV9zdGFydGVuZHtcclxuICAgIGZvbnQtc2l6ZTogJGZzaXplMTsgXHJcbiAgICBmb250LXdlaWdodDogNjAwOyBcclxuICAgIGNvbG9yOiAkY29sb3IxO1xyXG4gICAgaGVpZ2h0OiAyMHB4O1xyXG4gICAgcG9pbnRlci1ldmVudHM6IG5vbmU7XHJcbn1cclxuXHJcbi5pbnB1dFBvcnR7XHJcbiAgICBzdHJva2U6IHRyYW5zcGFyZW50O1xyXG4gICAgc3Ryb2tlLXdpZHRoOiAyMHB4O1xyXG4gICAgcG9pbnRlci1ldmVudHM6IGFsbDtcclxuICAgIGZpbGw6JGNvbG9yMTtcclxuICAgIC8vZmlsbDptaWRuaWdodGJsdWU7XHJcbn1cclxuLm91dHB1dFBvcnR7XHJcbiAgICBzdHJva2U6IHRyYW5zcGFyZW50O1xyXG4gICAgc3Ryb2tlLXdpZHRoOiAyMHB4O1xyXG4gICAgcG9pbnRlci1ldmVudHM6IGFsbDtcclxuICAgIGZpbGw6JGNvbG9yMTtcclxuICAgIC8vZmlsbDogbWlkbmlnaHRibHVlO1xyXG59XHJcbiIsIlxyXG4kY29sb3IxOiAjODA4MDgwO1xyXG4kY29sb3IyOiAjOTk5OTk5O1xyXG4kY29sb3IzOiAjQjNCM0IzOyBcclxuJGNvbG9yNDogI0NDQ0NDQztcclxuJGNvbG9yNTogI0U2RTZFNjtcclxuJGNvbG9yNS01OiByZ2IoMjQ1LCAyNDUsIDI0NSk7XHJcbiRjb2xvcjY6IHJnYigyNTAsIDI1MCwgMjUxKTtcclxuXHJcbiRjb2xvcjc6IHdoaXRlO1xyXG4kY29sb3I4OiAjMzczNzM3O1xyXG5cclxuJHNlbGVjdGVkLWNvbG9yOiByZ2IoMCwgMCwgMTA5KTtcclxuJGhvdmVyLWNvbG9yOiAkY29sb3IyO1xyXG5cclxuJGVycm9yLWNvbG9yOiAjRTk0ODU4OyAvL3BpbmstcmVkXHJcbiRlcnJvci1jb2xvci1sdDogcmdiKDI1NSwgMjIwLCAyMjQpO1xyXG4kcGNvbG9yMjogI0YzQTMyQTsgLy9vcmFuZ2UteWVsbG93XHJcbiRwcmludC1jb2xvcjogIzgyQkY2RTsgLy9saWdodGdyZWVuXHJcbiRwcmludC1jb2xvci1sdDogcmdiKDIzMCwgMjU1LCAyMjEpO1xyXG5cclxuLy8gJHByb2QtYmFja2dyb3VuZC1jb2xvcjogcmdiKDI1MCwyNTAsMjUwKTtcclxuLy8gJGJhY2tncm91bmQtY29sb3I6IHJnYigyMjAsMjIwLDIyMCk7XHJcbiRmdW5jdGlvbi10ZXh0LWNvbG9yOiByZ2IoMTkwLCAxNDAsIDMwKTtcclxuJGZ1bmN0aW9uLXRleHQtY29sb3IyOiByZ2IoMTgsIDEyNiwgMTM2KVxyXG4iLCIkcGFkZGluZzogNDBweDsgLy8gPyBub3QgdXNlZFxyXG4kc21hbGwtcGFkZGluZzogMTVweDtcclxuJGhlYWRlci1oZWlnaHQ6IDQwcHg7XHJcblxyXG4kZnNpemUxOiAxNXB4O1xyXG4kZnNpemUyOiAxMnB4O1xyXG4kZnNpemUzOiAzMHB4O1xyXG5cclxuJHBvcnQtc2l6ZTogMTVweDtcclxuJGRlZmF1bHQtc2lkZS1wYWRkaW5nOiAxNXB4O1xyXG4iXX0= */"

/***/ }),

/***/ "./src/app/views/view-flowchart/node/node.component.ts":
/*!*************************************************************!*\
  !*** ./src/app/views/view-flowchart/node/node.component.ts ***!
  \*************************************************************/
/*! exports provided: NodeComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NodeComponent", function() { return NodeComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _node_actions__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node.actions */ "./src/app/views/view-flowchart/node/node.actions.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};


var NodeComponent = /** @class */ (function () {
    function NodeComponent() {
        this.action = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        this.last = [0, 0];
        this.isDown = false;
    }
    /*
    update the position of the node
    */
    NodeComponent.prototype.updatePosition = function (position) {
        this.node.position = position;
    };
    /*
    select a node
    */
    NodeComponent.prototype.nodeSelect = function (event) {
        event.stopPropagation();
        this.action.emit({ action: _node_actions__WEBPACK_IMPORTED_MODULE_1__["ACTIONS"].SELECT, ctrlKey: event.ctrlKey });
    };
    /*
    check if the input port of the node is draggable --> false only for start node, true otherwise
    */
    NodeComponent.prototype.inputDraggable = function () {
        return !(this.node.type === 'start');
    };
    /*
    check if the output port of the node is draggable --> false only for end node, true otherwise
    */
    NodeComponent.prototype.outputDraggable = function () {
        return !(this.node.type === 'end');
    };
    /*
    initiate dragging node when mousedown inside the node group
    */
    NodeComponent.prototype.startDragNode = function (event) {
        event.stopPropagation();
        // if (document.activeElement.tagName === 'TEXTAREA') { return; }
        event.preventDefault();
        this.action.emit({ action: _node_actions__WEBPACK_IMPORTED_MODULE_1__["ACTIONS"].DRAGNODE, data: event });
    };
    /*
    initiate dragging port when mousedown inside the port (inside the invisible stroke of the port)
    */
    NodeComponent.prototype.startDragPort = function (event, portType) {
        event.preventDefault();
        event.stopPropagation();
        var pos = this.node.position;
        var data;
        if (portType === 'input') {
            data = this.node.input;
            pos = [pos.x + this.inputOffset[0], pos.y + this.inputOffset[1]];
        }
        else {
            data = this.node.output;
            pos = [pos.x + this.outputOffset[0], pos.y + this.outputOffset[1]];
        }
        this.action.emit({ action: _node_actions__WEBPACK_IMPORTED_MODULE_1__["ACTIONS"].DRAGPORT, data: data, position: pos, type: portType });
    };
    /*
    focus on the description of the node when mouse down inside the node
    ** no stopPropagation to allow propagation to startDragNode --> node can still be dragged
    */
    NodeComponent.prototype.focusText = function (event) {
        document.getElementById(this.node.id).focus();
    };
    /*
    switch the viewchild of the appModule to the node's procedure view when double-click on the node
    */
    NodeComponent.prototype.switchToProcedure = function (event) {
        event.stopPropagation();
        this.action.emit({ action: _node_actions__WEBPACK_IMPORTED_MODULE_1__["ACTIONS"].PROCEDURE });
    };
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", Object)
    ], NodeComponent.prototype, "node", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", Boolean)
    ], NodeComponent.prototype, "selected", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", Object)
    ], NodeComponent.prototype, "inputOffset", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", Object)
    ], NodeComponent.prototype, "outputOffset", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])(),
        __metadata("design:type", Object)
    ], NodeComponent.prototype, "action", void 0);
    NodeComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: '[node]',
            template: __webpack_require__(/*! ./node.component.html */ "./src/app/views/view-flowchart/node/node.component.html"),
            styles: [__webpack_require__(/*! ./node.component.scss */ "./src/app/views/view-flowchart/node/node.component.scss")]
        })
    ], NodeComponent);
    return NodeComponent;
}());



/***/ }),

/***/ "./src/app/views/view-flowchart/view-flowchart-routing.module.ts":
/*!***********************************************************************!*\
  !*** ./src/app/views/view-flowchart/view-flowchart-routing.module.ts ***!
  \***********************************************************************/
/*! exports provided: ViewFlowchartRoutingModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ViewFlowchartRoutingModule", function() { return ViewFlowchartRoutingModule; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var _view_flowchart_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./view-flowchart.component */ "./src/app/views/view-flowchart/view-flowchart.component.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};



var routes = [
    {
        path: '',
        component: _view_flowchart_component__WEBPACK_IMPORTED_MODULE_2__["ViewFlowchartComponent"],
        children: [
        // {
        //   path: '',
        //   loadChildren: '../../mobius-viewer/mobius-viewer.module#MobiusViewerModule',
        // }
        ]
    }
];
var ViewFlowchartRoutingModule = /** @class */ (function () {
    function ViewFlowchartRoutingModule() {
    }
    ViewFlowchartRoutingModule = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["NgModule"])({
            imports: [_angular_router__WEBPACK_IMPORTED_MODULE_1__["RouterModule"].forChild(routes)],
            exports: [_angular_router__WEBPACK_IMPORTED_MODULE_1__["RouterModule"]]
        })
    ], ViewFlowchartRoutingModule);
    return ViewFlowchartRoutingModule;
}());



/***/ }),

/***/ "./src/app/views/view-flowchart/view-flowchart.component.html":
/*!********************************************************************!*\
  !*** ./src/app/views/view-flowchart/view-flowchart.component.html ***!
  \********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class='container'>\r\n    <as-split #flowchartSplit\r\n    direction=\"horizontal\" \r\n    (dragStart)='dragSplitStart($event)'\r\n    (dragEnd)='dragSplitEnd($event)'>\r\n        <as-split-area [size]=\"100 - getSplit()\">\r\n            <panel-header [title]='getFlowchart().name'></panel-header>\r\n            <!-- viewchild content -->\r\n            <div class='content__panel'>\r\n                <div id = 'flowchart-main-container' class='flowchart-container'>\r\n                        <!--\r\n                        -->\r\n                    \r\n                        <!-- svg component -->\r\n                        <!--\r\n                        (panstart)='panStart($event)'\r\n                        (panmove)='handleMouseMove($event)'\r\n                        (panend)='handleMouseUp($event)'\r\n                        -->\r\n                        <svg id=\"svg-canvas\" class = \"svgCanvas\" \r\n                        xmlns=\"http://www.w3.org/2000/svg\"\r\n\r\n                        [attr.viewBox]=\"viewbox\"\r\n                        (mouseenter)='activateKeyEvent()'\r\n                        (mouseleave)='deactivateKeyEvent($event)'\r\n                        (mousedown)='panStart($event)'\r\n                        (mousemove)='handleMouseMove($event)'\r\n                        (mouseup)='handleMouseUp($event)'\r\n                        (click)='deselectAll($event)'\r\n                        (wheel)='scale($event)'\r\n                        (dblclick)='addNode($event)'\r\n                        >\r\n                            <!-- definitions for svg: grid patterns, arrow head for connecting wire-->\r\n                            <defs>\r\n                                <!-- grid pattern -->\r\n                                <!-- <pattern id=\"smallGrid\" width=\"20\" height=\"20\" patternUnits=\"userSpaceOnUse\">\r\n                                    <path d=\"M 20 0 L 0 0 0 20\" fill=\"none\" stroke=\"gray\" stroke-width=\"0.5\"/>\r\n                                </pattern>\r\n                                <pattern id=\"grid\" width=\"100\" height=\"100\" patternUnits=\"userSpaceOnUse\">\r\n                                    <rect width=\"100\" height=\"100\" fill=\"url(#smallGrid)\"/>\r\n                                    <path d=\"M 100 0 L 0 0 0 100\" fill=\"none\" stroke=\"gray\" stroke-width=\"1\"/>\r\n                                </pattern> -->\r\n                    \r\n                                <!-- arrow head -->\r\n                                <marker id=\"arrow\" markerWidth=\"30\" markerHeight=\"30\" refX=\"0\" refY=\"4\" orient=\"auto\" markerUnits=\"strokeWidth\" viewBox=\"0 0 40 40\">\r\n                                    <path d=\"M0,0 L0,8 L9,4 z\" stroke=\"rgb(80, 80, 80)\" fill=\"transparent\" />\r\n                                </marker>\r\n                                <marker id=\"arrow_selected\" markerWidth=\"30\" markerHeight=\"30\" refX=\"0\" refY=\"4\" orient=\"auto\" markerUnits=\"strokeWidth\" viewBox=\"0 0 40 40\">\r\n                                    <path d=\"M0,0 L0,8 L9,4 z\" stroke=\"rgb(0, 0, 150)\" fill=\"transparent\"  />\r\n                                </marker>\r\n                            </defs>\r\n                    \r\n                            <!-- svg frame-->\r\n                            <rect width=\"100%\" height=\"100%\" fill=\"url(#grid)\" />\r\n                                        \r\n                    \r\n                            <!-- wires => edge.component -->\r\n                            <g edge *ngFor=\"let edge of getFlowchart().edges; let edge_index = index\" \r\n                            [edge]='edge'\r\n                            [inputOffset]='inputOffset'\r\n                            [outputOffset]='outputOffset'\r\n                            (selected)='selectEdge($event, edge_index)'\r\n                            />\r\n                    \r\n                            <!-- temporary wire while dragging port, default position to <(0,0),(0,0)>, modified when a port is being dragged -->\r\n                            <line id=\"temporary-wire\" class=\"temp-wire\" x1=\"0\" y1='0' x2='0' y2='0'></line>\r\n                    \r\n                            <!-- nodes => node.component -->\r\n                            <g node *ngFor=\"let node of getFlowchart().nodes; let node_index = index\" \r\n                            id='flw_node_{{node_index}}'\r\n                            [node]='node' \r\n                            [selected]='isSelected(node_index)'\r\n                            [inputOffset]='inputOffset'\r\n                            [outputOffset]='outputOffset'\r\n                            (action)='nodeAction($event, node_index)'\r\n                            />\r\n                        </svg>\r\n                    \r\n                        <!-- focus on flowchart button on the top right of the svg -->\r\n                        <button id='zoomToFit' class='btn resetViewer-button' mat-icon-button disableRipple='true' (click)='focusFlowchart()' title=\"Zoom to Fit\">\r\n                            <mat-icon svgIcon=\"cZoom\"></mat-icon>\r\n                        </button>\r\n                        \r\n                    \r\n                    </div>\r\n                        \r\n            </div>\r\n        </as-split-area>\r\n\r\n        <as-split-area [size]=\"getSplit()\">\r\n            <!-- data viewers panel -->\r\n            <div class='content__viewer' >\r\n                <model-viewers-container [data]='viewerData()'></model-viewers-container>\r\n            </div>\r\n        </as-split-area>\r\n        \r\n    </as-split>\r\n    <notification [message]='notificationMessage' [dummyTrigger]='notificationTrigger'></notification>\r\n\r\n</div>\r\n<spinner></spinner>\r\n\r\n\r\n"

/***/ }),

/***/ "./src/app/views/view-flowchart/view-flowchart.component.scss":
/*!********************************************************************!*\
  !*** ./src/app/views/view-flowchart/view-flowchart.component.scss ***!
  \********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".flowchart-container {\n  position: relative;\n  width: 100%;\n  height: 100%;\n  overflow: hidden;\n  background: transparent; }\n  .flowchart-container .svgCanvas .temp-wire {\n    stroke: #808080;\n    stroke-width: 2px;\n    stroke-dasharray: 10 15;\n    opacity: 0.5; }\n  .button-row {\n  position: absolute;\n  bottom: 50px;\n  left: 10px; }\n  .button-row button {\n    color: #808080;\n    background-color: transparent;\n    border: none;\n    height: 24px;\n    width: 24px;\n    text-align: center;\n    font-size: 24px;\n    padding: 0px; }\n  .resetViewer-button {\n  cursor: pointer;\n  z-index: 2;\n  background-color: transparent;\n  border: none;\n  position: absolute;\n  top: 0px;\n  right: 0px;\n  color: #808080;\n  border: none;\n  padding: 0px;\n  background-color: transparent;\n  width: 40px;\n  height: 40px; }\n\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdmlld3Mvdmlldy1mbG93Y2hhcnQvQzpcXFVzZXJzXFxha2liZHB0XFxEb2N1bWVudHNcXEFuZ3VsYXJcXG1vYml1cy1wYXJhbWV0cmljLW1vZGVsbGVyL3NyY1xcYXBwXFx2aWV3c1xcdmlldy1mbG93Y2hhcnRcXHZpZXctZmxvd2NoYXJ0LmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC92aWV3cy92aWV3LWZsb3djaGFydC9DOlxcVXNlcnNcXGFraWJkcHRcXERvY3VtZW50c1xcQW5ndWxhclxcbW9iaXVzLXBhcmFtZXRyaWMtbW9kZWxsZXIvc3JjXFxzY3NzXFxjb2xvcnMuc2NzcyIsInNyYy9hcHAvdmlld3Mvdmlldy1mbG93Y2hhcnQvQzpcXFVzZXJzXFxha2liZHB0XFxEb2N1bWVudHNcXEFuZ3VsYXJcXG1vYml1cy1wYXJhbWV0cmljLW1vZGVsbGVyL3NyY1xcc2Nzc1xcdmFyaWFibGVzLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBSUE7RUFDSSxtQkFBa0I7RUFDbEIsWUFBVztFQUNYLGFBQVk7RUFDWixpQkFBZ0I7RUFDaEIsd0JBQXVCLEVBYzFCO0VBbkJEO0lBWVksZ0JDZkk7SURnQkosa0JBQWlCO0lBQ2pCLHdCQUF1QjtJQUN2QixhQUFZLEVBQ2Y7RUFLVDtFQUNJLG1CQUFrQjtFQUNsQixhQUFZO0VBQ1osV0FBVSxFQVliO0VBZkQ7SUFNUSxlQzlCUTtJRCtCUiw4QkFBNkI7SUFDN0IsYUFBWTtJQUNaLGFBQVk7SUFDWixZQUFXO0lBQ1gsbUJBQWtCO0lBQ2xCLGdCQUFlO0lBQ2YsYUFBWSxFQUNmO0VBR0w7RUFDSSxnQkFBZTtFQUNmLFdBQVU7RUFDViw4QkFBNkI7RUFDN0IsYUFBWTtFQUNaLG1CQUFrQjtFQUNsQixTQUFRO0VBQ1IsV0FBVTtFQUNWLGVDakRZO0VEa0RaLGFBQVk7RUFDWixhQUFZO0VBQ1osOEJBQTZCO0VBQzdCLFlFcERnQjtFRnFEaEIsYUVyRGdCLEVGc0RuQiIsImZpbGUiOiJzcmMvYXBwL3ZpZXdzL3ZpZXctZmxvd2NoYXJ0L3ZpZXctZmxvd2NoYXJ0LmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiQGltcG9ydCAnfnNjc3MvY29sb3JzJztcclxuQGltcG9ydCAnfnNjc3MvdmFyaWFibGVzJztcclxuXHJcblxyXG4uZmxvd2NoYXJ0LWNvbnRhaW5lcntcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICAgIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50O1xyXG5cclxuICAgIC5zdmdDYW52YXN7XHJcbiAgICAgICAgLy8gd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgLy8gaGVpZ2h0OiAxMDAlO1xyXG4gICAgXHJcbiAgICAgICAgLnRlbXAtd2lyZXtcclxuICAgICAgICAgICAgc3Ryb2tlOiAkY29sb3IxO1xyXG4gICAgICAgICAgICBzdHJva2Utd2lkdGg6IDJweDtcclxuICAgICAgICAgICAgc3Ryb2tlLWRhc2hhcnJheTogMTAgMTU7XHJcbiAgICAgICAgICAgIG9wYWNpdHk6IDAuNTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICBcclxufVxyXG5cclxuLmJ1dHRvbi1yb3cge1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlOyBcclxuICAgIGJvdHRvbTogNTBweDsgXHJcbiAgICBsZWZ0OiAxMHB4O1xyXG5cclxuICAgIGJ1dHRvbntcclxuICAgICAgICBjb2xvcjogJGNvbG9yMTtcclxuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcclxuICAgICAgICBib3JkZXI6IG5vbmU7XHJcbiAgICAgICAgaGVpZ2h0OiAyNHB4O1xyXG4gICAgICAgIHdpZHRoOiAyNHB4O1xyXG4gICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgICAgICBmb250LXNpemU6IDI0cHg7XHJcbiAgICAgICAgcGFkZGluZzogMHB4O1xyXG4gICAgfVxyXG59XHJcblxyXG4ucmVzZXRWaWV3ZXItYnV0dG9ue1xyXG4gICAgY3Vyc29yOiBwb2ludGVyO1xyXG4gICAgei1pbmRleDogMjtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xyXG4gICAgYm9yZGVyOiBub25lO1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlOyBcclxuICAgIHRvcDogMHB4OyBcclxuICAgIHJpZ2h0OiAwcHg7XHJcbiAgICBjb2xvcjogJGNvbG9yMTtcclxuICAgIGJvcmRlcjogbm9uZTtcclxuICAgIHBhZGRpbmc6IDBweDtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xyXG4gICAgd2lkdGg6ICRoZWFkZXItaGVpZ2h0O1xyXG4gICAgaGVpZ2h0OiAkaGVhZGVyLWhlaWdodDtcclxufVxyXG4iLCJcclxuJGNvbG9yMTogIzgwODA4MDtcclxuJGNvbG9yMjogIzk5OTk5OTtcclxuJGNvbG9yMzogI0IzQjNCMzsgXHJcbiRjb2xvcjQ6ICNDQ0NDQ0M7XHJcbiRjb2xvcjU6ICNFNkU2RTY7XHJcbiRjb2xvcjUtNTogcmdiKDI0NSwgMjQ1LCAyNDUpO1xyXG4kY29sb3I2OiByZ2IoMjUwLCAyNTAsIDI1MSk7XHJcblxyXG4kY29sb3I3OiB3aGl0ZTtcclxuJGNvbG9yODogIzM3MzczNztcclxuXHJcbiRzZWxlY3RlZC1jb2xvcjogcmdiKDAsIDAsIDEwOSk7XHJcbiRob3Zlci1jb2xvcjogJGNvbG9yMjtcclxuXHJcbiRlcnJvci1jb2xvcjogI0U5NDg1ODsgLy9waW5rLXJlZFxyXG4kZXJyb3ItY29sb3ItbHQ6IHJnYigyNTUsIDIyMCwgMjI0KTtcclxuJHBjb2xvcjI6ICNGM0EzMkE7IC8vb3JhbmdlLXllbGxvd1xyXG4kcHJpbnQtY29sb3I6ICM4MkJGNkU7IC8vbGlnaHRncmVlblxyXG4kcHJpbnQtY29sb3ItbHQ6IHJnYigyMzAsIDI1NSwgMjIxKTtcclxuXHJcbi8vICRwcm9kLWJhY2tncm91bmQtY29sb3I6IHJnYigyNTAsMjUwLDI1MCk7XHJcbi8vICRiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMjIwLDIyMCwyMjApO1xyXG4kZnVuY3Rpb24tdGV4dC1jb2xvcjogcmdiKDE5MCwgMTQwLCAzMCk7XHJcbiRmdW5jdGlvbi10ZXh0LWNvbG9yMjogcmdiKDE4LCAxMjYsIDEzNilcclxuIiwiJHBhZGRpbmc6IDQwcHg7IC8vID8gbm90IHVzZWRcclxuJHNtYWxsLXBhZGRpbmc6IDE1cHg7XHJcbiRoZWFkZXItaGVpZ2h0OiA0MHB4O1xyXG5cclxuJGZzaXplMTogMTVweDtcclxuJGZzaXplMjogMTJweDtcclxuJGZzaXplMzogMzBweDtcclxuXHJcbiRwb3J0LXNpemU6IDE1cHg7XHJcbiRkZWZhdWx0LXNpZGUtcGFkZGluZzogMTVweDtcclxuIl19 */"

/***/ }),

/***/ "./src/app/views/view-flowchart/view-flowchart.component.ts":
/*!******************************************************************!*\
  !*** ./src/app/views/view-flowchart/view-flowchart.component.ts ***!
  \******************************************************************/
/*! exports provided: ViewFlowchartComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ViewFlowchartComponent", function() { return ViewFlowchartComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _models_node__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @models/node */ "./src/app/shared/models/node/index.ts");
/* harmony import */ var _node_node_actions__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./node/node.actions */ "./src/app/views/view-flowchart/node/node.actions.ts");
/* harmony import */ var circular_json__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! circular-json */ "./node_modules/circular-json/build/circular-json.node.js");
/* harmony import */ var circular_json__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(circular_json__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm5/index.js");
/* harmony import */ var _services__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @services */ "./src/app/core/services/index.ts");
/* harmony import */ var _models_flowchart__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @models/flowchart */ "./src/app/shared/models/flowchart/index.ts");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var angular_split__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! angular-split */ "./node_modules/angular-split/fesm5/angular-split.js");
/* harmony import */ var _shared_components_file_loadurl_component__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @shared/components/file/loadurl.component */ "./src/app/shared/components/file/loadurl.component.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};






// import size of the canvas




var ViewFlowchartComponent = /** @class */ (function () {
    function ViewFlowchartComponent(dataService, router) {
        this.dataService = dataService;
        this.router = router;
        this.switch = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        this.viewbox = "0 0 " + _models_flowchart__WEBPACK_IMPORTED_MODULE_6__["canvasSize"] + " " + _models_flowchart__WEBPACK_IMPORTED_MODULE_6__["canvasSize"];
        this.starTxyzs = [];
        // variable for flowchart zooming
        this.mousePos = [0, 0];
        this.zoom = 10;
        this.minZoom = 5;
        this.maxZoom = 25;
        this.zoomFactor = 1;
        // variable for edge
        this.edge = { source: undefined, target: undefined, selected: false };
        this.selectedEdge = [];
        // listener for events, only activated when the mouse is hovering over the svg component
        this.keydownListener = Object(rxjs__WEBPACK_IMPORTED_MODULE_4__["fromEvent"])(document, 'keydown');
        this.copyListener = Object(rxjs__WEBPACK_IMPORTED_MODULE_4__["fromEvent"])(document, 'copy');
        this.pasteListener = Object(rxjs__WEBPACK_IMPORTED_MODULE_4__["fromEvent"])(document, 'paste');
        this.listenerActive = false;
        this.notificationMessage = '';
        this.notificationTrigger = true;
        // constants for offset positions of input/output port relative to the node's position
        this.inputOffset = [50, -8];
        this.outputOffset = [50, 88];
        new _shared_components_file_loadurl_component__WEBPACK_IMPORTED_MODULE_9__["LoadUrlComponent"](this.dataService).loadStartUpURL(this.router.url);
    }
    ViewFlowchartComponent_1 = ViewFlowchartComponent;
    ViewFlowchartComponent.enableNode = function (node) {
        for (var _i = 0, _a = node.input.edges; _i < _a.length; _i++) {
            var edge = _a[_i];
            if (!edge.source.parentNode.enabled) {
                return;
            }
        }
        node.enabled = true;
        for (var _b = 0, _c = node.output.edges; _b < _c.length; _b++) {
            var edge = _c[_b];
            ViewFlowchartComponent_1.enableNode(edge.target.parentNode);
        }
    };
    ViewFlowchartComponent.disableNode = function (node) {
        node.enabled = false;
        for (var _i = 0, _a = node.output.edges; _i < _a.length; _i++) {
            var edge = _a[_i];
            ViewFlowchartComponent_1.disableNode(edge.target.parentNode);
        }
    };
    ViewFlowchartComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.canvas = document.getElementById('svg-canvas');
        // const panZoom = svgPanZoom(this.canvas);
        var bRect = this.canvas.getBoundingClientRect();
        var boundingDiv = document.getElementById('flowchart-main-container').getBoundingClientRect();
        this.offset = [bRect.left, bRect.top];
        /*
        */
        // transform
        if (!this.dataService.flowchartPos) {
            this.dataService.flowchartPos = 'matrix(' + this.zoom + ', 0, 0,' + this.zoom + ', -' +
                boundingDiv.width * this.zoom / 2 + ', -' + boundingDiv.width * this.zoom / 2 + ')';
        }
        else {
            this.zoom = Number(this.dataService.flowchartPos.split(',')[0].split('(')[1]);
        }
        this.canvas.style.transformOrigin = "top left";
        this.canvas.style.transition = 'transform 0ms ease-in';
        this.canvas.style.transform = this.dataService.flowchartPos;
        // copy: copy node
        this.copySub = this.copyListener.subscribe(function (val) {
            // || document.activeElement.tagName === 'TEXTAREA'
            if (!_this.listenerActive) {
                return;
            }
            var node = _this.dataService.node;
            if (node.type === '') {
                // console.log('copied node:', node);
                var cp = circular_json__WEBPACK_IMPORTED_MODULE_3__["parse"](circular_json__WEBPACK_IMPORTED_MODULE_3__["stringify"](node));
                _this.copied = circular_json__WEBPACK_IMPORTED_MODULE_3__["stringify"](cp);
                _this.notificationMessage = "Copied Last Selected Node";
                _this.notificationTrigger = !_this.notificationTrigger;
            }
        });
        // paste: paste copied node
        this.pasteSub = this.pasteListener.subscribe(function (val) {
            //
            if (!_this.listenerActive || document.activeElement.tagName === 'TEXTAREA') {
                return;
            }
            if (_this.copied) {
                event.preventDefault();
                var newNode = circular_json__WEBPACK_IMPORTED_MODULE_3__["parse"](_this.copied);
                var pt = _this.canvas.createSVGPoint();
                pt.x = 20;
                pt.y = 100;
                var svgP = _this.convertCoord(pt);
                _models_node__WEBPACK_IMPORTED_MODULE_1__["NodeUtils"].updateNode(newNode, svgP);
                _this.dataService.flowchart.nodes.push(newNode);
                // console.log('pasting node:', newNode);
                _this.notificationMessage = "Pasted Node";
                _this.notificationTrigger = !_this.notificationTrigger;
                _this.dataService.registerAction({ 'type': 'add', 'nodes': [newNode] });
            }
        });
        // delete: delete selected edge(s)
        this.keydownSub = this.keydownListener.subscribe(function (event) {
            if (!_this.listenerActive) {
                return;
            }
            if (event.key === 'Delete') {
                if (_this.selectedEdge.length > 0) {
                    _this.deleteSelectedEdges();
                }
                else {
                    if (document.activeElement.id !== _this.dataService.node.id) {
                        _this.deleteSelectedNodes();
                    }
                }
            }
            else if (event.key.toLowerCase() === 'z' && event.ctrlKey === true) {
                var act = void 0;
                if (event.shiftKey) {
                    act = _this.dataService.redo();
                }
                else {
                    act = _this.dataService.undo();
                }
                if (!act) {
                    return;
                }
                if ((act.type === 'add') !== event.shiftKey) {
                    if (act.edges) {
                        for (var _i = 0, _a = act.edges; _i < _a.length; _i++) {
                            var tbrEdge = _a[_i];
                            for (var i = 0; i < _this.dataService.flowchart.edges.length; i++) {
                                if (_this.dataService.flowchart.edges[i] === tbrEdge) {
                                    _this.deleteEdge(i);
                                    break;
                                }
                            }
                        }
                    }
                    if (!act.nodes) {
                        return;
                    }
                    for (var _b = 0, _c = act.nodes; _b < _c.length; _b++) {
                        var tbrNode = _c[_b];
                        var nodeIndex = void 0;
                        for (var i = 0; i < _this.dataService.flowchart.nodes.length; i++) {
                            var node = _this.dataService.flowchart.nodes[i];
                            if (tbrNode.id === node.id) {
                                nodeIndex = i;
                                _this.dataService.flowchart.nodes.splice(i, 1);
                                break;
                            }
                        }
                        var tbrSel = void 0;
                        for (var j = 0; j < _this.dataService.flowchart.meta.selected_nodes.length; j++) {
                            if (tbrSel) {
                                _this.dataService.flowchart.meta.selected_nodes[j] -= 1;
                            }
                            if (_this.dataService.flowchart.meta.selected_nodes[j] === nodeIndex) {
                                tbrSel = nodeIndex;
                            }
                        }
                        _this.dataService.flowchart.meta.selected_nodes.splice(tbrSel, 1);
                    }
                }
                else {
                    if (act.nodes) {
                        for (var _d = 0, _e = act.nodes; _d < _e.length; _d++) {
                            var tbaNode = _e[_d];
                            _this.dataService.flowchart.nodes.push(tbaNode);
                        }
                    }
                    if (!act.edges) {
                        return;
                    }
                    for (var _f = 0, _g = act.edges; _f < _g.length; _f++) {
                        var tbaEdge = _g[_f];
                        _this.dataService.flowchart.edges.push(tbaEdge);
                        tbaEdge.target.edges.push(tbaEdge);
                        tbaEdge.source.edges.push(tbaEdge);
                        tbaEdge.selected = false;
                        if (tbaEdge.source.parentNode.enabled) {
                            tbaEdge.target.parentNode.enabled = true;
                        }
                    }
                    while (true) {
                        var check = false;
                        for (var _h = 0, _j = _this.dataService.flowchart.nodes; _h < _j.length; _h++) {
                            var node = _j[_h];
                            if (node.enabled) {
                                continue;
                            }
                            for (var _k = 0, _l = node.input.edges; _k < _l.length; _k++) {
                                var inp = _l[_k];
                                if (inp.source.parentNode.enabled) {
                                    node.enabled = true;
                                    check = true;
                                    break;
                                }
                            }
                        }
                        if (!check) {
                            break;
                        }
                    }
                }
            }
        });
    };
    ViewFlowchartComponent.prototype.convertCoord = function (pt) {
        var isFirefox = typeof InstallTrigger !== 'undefined';
        if (isFirefox) {
            var ctm = this.canvas.getScreenCTM();
            var bRect = this.canvas.getBoundingClientRect();
            ctm.a = ctm.a * this.zoom;
            ctm.d = ctm.d * this.zoom;
            ctm.e = bRect.x;
            ctm.f = bRect.y;
            return pt.matrixTransform(ctm.inverse());
        }
        else {
            return pt.matrixTransform(this.canvas.getScreenCTM().inverse());
        }
    };
    ViewFlowchartComponent.prototype.ngAfterViewInit = function () {
        if (this.dataService.newFlowchart) {
            this.focusFlowchart();
            this.dataService.newFlowchart = false;
        }
    };
    /*
    handle event received from node component
    */
    ViewFlowchartComponent.prototype.nodeAction = function (event, node_index) {
        switch (event.action) {
            // switch the viewchild of the appModule to the node's procedure view when double-click on the node
            case _node_node_actions__WEBPACK_IMPORTED_MODULE_2__["ACTIONS"].PROCEDURE:
                this.router.navigate(['/editor']);
                // this.switch.emit('editor');
                this.deactivateKeyEvent();
                break;
            // select a node
            case _node_node_actions__WEBPACK_IMPORTED_MODULE_2__["ACTIONS"].SELECT:
                var selectedNode = this.dataService.flowchart.nodes[node_index];
                if (event.ctrlKey) {
                    document.getElementById('executeButton').focus();
                    var index = this.dataService.flowchart.meta.selected_nodes.indexOf(node_index);
                    if (index === -1) {
                        this.dataService.flowchart.meta.selected_nodes = [node_index].concat(this.dataService.flowchart.meta.selected_nodes);
                    }
                    else {
                        if (this.dataService.flowchart.meta.selected_nodes.length > 1) {
                            this.dataService.flowchart.meta.selected_nodes.splice(index, 1);
                        }
                    }
                }
                else {
                    if (selectedNode.type === ''
                        && this.dataService.flowchart.meta.selected_nodes.length === 1
                        && this.dataService.flowchart.meta.selected_nodes[0] === node_index) {
                        if (document.activeElement.id !== selectedNode.id) {
                            var textarea = document.getElementById(selectedNode.id);
                            textarea.focus();
                            textarea.select();
                        }
                    }
                    else {
                        document.getElementById('executeButton').focus();
                    }
                    this.dataService.flowchart.meta.selected_nodes = [node_index];
                }
                break;
            // initiate dragging node
            case _node_node_actions__WEBPACK_IMPORTED_MODULE_2__["ACTIONS"].DRAGNODE:
                this.element = this.dataService.flowchart.nodes[node_index];
                var pt = this.canvas.createSVGPoint();
                // get current mouse position in the page
                pt.x = event.data.pageX;
                pt.y = event.data.pageY;
                // convert mouse position to svg position (special procedure for firefox)
                var svgP = this.convertCoord(pt);
                // save the svg position as starTxyzs
                this.starTxyzs = [
                    svgP.x,
                    svgP.y
                ];
                if (this.starTxyzs[0] === NaN) {
                    this.starTxyzs = [0, 0];
                }
                // mark the dragging mode as dragNode
                this.isDown = 2;
                break;
            // initiate dragging input/output port
            case _node_node_actions__WEBPACK_IMPORTED_MODULE_2__["ACTIONS"].DRAGPORT:
                // create a new edge
                this.edge = { source: undefined, target: undefined, selected: false };
                // assign the port to the edge's input/output accordingly
                if (event.type === 'input') {
                    this.edge.target = event.data;
                }
                else {
                    this.edge.source = event.data;
                }
                this.startType = event.type;
                // modify the temporary-edge's coordinate
                this.element = document.getElementById('temporary-wire');
                this.element.setAttribute('x1', event.position[0]);
                this.element.setAttribute('y1', event.position[1]);
                this.element.setAttribute('x2', event.position[0]);
                this.element.setAttribute('y2', event.position[1]);
                this.isDown = 3;
                break;
        }
    };
    // check if the node at node_index is selected
    ViewFlowchartComponent.prototype.isSelected = function (node_index) {
        return this.dataService.flowchart.meta.selected_nodes.indexOf(node_index) > -1;
    };
    // add a new node
    ViewFlowchartComponent.prototype.addNode = function (event) {
        // create a new node
        var newNode = _models_node__WEBPACK_IMPORTED_MODULE_1__["NodeUtils"].getNewNode();
        // the new node's position would be (20,100) relative to the current view
        var pt = this.canvas.createSVGPoint();
        pt.x = event.pageX - 40;
        pt.y = event.pageY - 35;
        // convert the position to svg position
        var svgP = this.convertCoord(pt);
        // assign the position to the new node and add it to the flowchart
        newNode.position.x = svgP.x;
        newNode.position.y = svgP.y;
        this.dataService.flowchart.nodes.splice(this.dataService.flowchart.nodes.length - 1, 0, newNode);
        this.dataService.registerAction({ 'type': 'add', 'nodes': [newNode] });
    };
    // activate event listener for copy (ctrl+c), paste (ctrl+v), delete (Delete) when mouse hover over the svg component
    ViewFlowchartComponent.prototype.activateKeyEvent = function () {
        this.listenerActive = true;
    };
    // deactivate the event listeners when the mouse exit the svg component
    ViewFlowchartComponent.prototype.deactivateKeyEvent = function (event) {
        this.listenerActive = false;
        if (this.isDown) {
            this.handleMouseUp(event);
        }
    };
    // delete selected node
    ViewFlowchartComponent.prototype.deleteSelectedNodes = function () {
        var deletedNodes = [];
        var deletedEdges = [];
        this.dataService.flowchart.meta.selected_nodes = this.dataService.flowchart.meta.selected_nodes.sort();
        // for each of the selected node
        while (this.dataService.flowchart.meta.selected_nodes.length > 0) {
            var node_index = this.dataService.flowchart.meta.selected_nodes.pop();
            var node = this.dataService.flowchart.nodes[node_index];
            // continue if the node is a start/end node
            if (node.type !== '') {
                continue;
            }
            deletedNodes.push(node);
            var edge_index = 0;
            // delete all the edges connected to the node
            while (edge_index < this.dataService.flowchart.edges.length) {
                var tbrEdge = this.dataService.flowchart.edges[edge_index];
                if (tbrEdge.target.parentNode === node || tbrEdge.source.parentNode === node) {
                    deletedEdges.push(tbrEdge);
                    this.deleteEdge(edge_index);
                    continue;
                }
                edge_index += 1;
            }
            // remove the node from the flowchart
            this.dataService.flowchart.nodes.splice(Number(node_index), 1);
        }
        var nodes = this.dataService.flowchart.nodes;
        for (var i = 0; i < nodes.length; i++) {
            if (nodes[i].type === 'end') {
                this.dataService.flowchart.meta.selected_nodes = [i];
                break;
            }
        }
        this.dataService.registerAction({ 'type': 'del', 'nodes': deletedNodes, 'edges': deletedEdges });
    };
    // delete an edge with a known index
    ViewFlowchartComponent.prototype.deleteEdge = function (edge_index) {
        var tbrEdge = this.dataService.flowchart.edges[edge_index];
        // remove the edge from the target node's list of edges
        for (var i in this.dataService.flowchart.edges) {
            if (tbrEdge.target.edges[i] === tbrEdge) {
                tbrEdge.target.edges.splice(Number(i), 1);
                break;
            }
        }
        // remove the edge from the source node's list of edges
        for (var i in tbrEdge.source.edges) {
            if (tbrEdge.source.edges[i] === tbrEdge) {
                tbrEdge.source.edges.splice(Number(i), 1);
                break;
            }
        }
        tbrEdge.target.parentNode.enabled = false;
        for (var _i = 0, _a = tbrEdge.target.edges; _i < _a.length; _i++) {
            var remainingEdge = _a[_i];
            if (remainingEdge.source.parentNode.enabled) {
                tbrEdge.target.parentNode.enabled = true;
                break;
            }
        }
        /*
        if (tbrEdge.target.parentNode.input.edges.length === 0 && deletedNode !== tbrEdge.target.parentNode.id) {
            ViewFlowchartComponent.disableNode(tbrEdge.target.parentNode);
        } else {
            ViewFlowchartComponent.enableNode(tbrEdge.target.parentNode);
        }
        */
        // remove the edge from the general list of edges
        this.dataService.flowchart.edges.splice(edge_index, 1);
        this.dataService.flowchart.ordered = false;
    };
    // delete all the selected edges
    ViewFlowchartComponent.prototype.deleteSelectedEdges = function () {
        this.selectedEdge.sort().reverse();
        var deletedEdges = [];
        for (var _i = 0, _a = this.selectedEdge; _i < _a.length; _i++) {
            var edge_index = _a[_i];
            deletedEdges.push(this.dataService.flowchart.edges[edge_index]);
            this.deleteEdge(edge_index);
        }
        this.dataService.registerAction({ 'type': 'del', 'edges': deletedEdges });
        this.selectedEdge = [];
    };
    // select an edge
    ViewFlowchartComponent.prototype.selectEdge = function (event, edge_index) {
        // if ctrl is pressed, add the edge into the list of selected edges
        if (event === 'ctrl') {
            this.selectedEdge.push(edge_index);
            this.dataService.flowchart.edges[edge_index].selected = true;
        }
        else if (event === 'single' || (event === false && this.selectedEdge.length > 1)) {
            if (this.selectedEdge.length > 0) {
                for (var _i = 0, _a = this.selectedEdge; _i < _a.length; _i++) {
                    var e = _a[_i];
                    this.dataService.flowchart.edges[e].selected = false;
                }
            }
            this.selectedEdge = [edge_index];
            this.dataService.flowchart.edges[edge_index].selected = true;
        }
        else {
            this.dataService.flowchart.edges[edge_index].selected = false;
            for (var i = 0; i < this.selectedEdge.length; i++) {
                if (this.selectedEdge[i] === edge_index) {
                    this.selectedEdge.splice(i, 1);
                    break;
                }
            }
        }
    };
    // focus view onto the flowchart
    ViewFlowchartComponent.prototype.focusFlowchart = function () {
        // find the frame of the flowchart: frame = [minX, minY, maxX, maxY]
        var frame = [this.dataService.flowchart.nodes[0].position.x, this.dataService.flowchart.nodes[0].position.y,
            this.dataService.flowchart.nodes[0].position.x, this.dataService.flowchart.nodes[0].position.y];
        for (var _i = 0, _a = this.dataService.flowchart.nodes; _i < _a.length; _i++) {
            var node = _a[_i];
            if (node.position.x < frame[0]) {
                frame[0] = node.position.x;
            }
            else if (node.position.x > frame[2]) {
                frame[2] = node.position.x;
            }
            if (node.position.y < frame[1]) {
                frame[1] = node.position.y;
            }
            else if (node.position.y > frame[3]) {
                frame[3] = node.position.y;
            }
        }
        frame[2] += 100;
        frame[3] += 100;
        // calculate the zoom to fit the whole flowchart
        var bRect = this.canvas.getBoundingClientRect();
        var zoom = _models_flowchart__WEBPACK_IMPORTED_MODULE_6__["canvasSize"] / (frame[2] - frame[0]);
        var heightZoom = _models_flowchart__WEBPACK_IMPORTED_MODULE_6__["canvasSize"] / (frame[3] - frame[1]);
        zoom = Math.min(zoom, heightZoom, this.maxZoom);
        zoom = Math.max(zoom, this.minZoom);
        var boundingDiv = document.getElementById('flowchart-main-container').getBoundingClientRect();
        var ctm = this.zoom * boundingDiv.width / _models_flowchart__WEBPACK_IMPORTED_MODULE_6__["canvasSize"];
        var nX = (boundingDiv.width - (frame[2] + frame[0]) * ctm * zoom / this.zoom) / 2;
        var nY = (boundingDiv.height - (frame[3] + frame[1]) * ctm * zoom / this.zoom) / 2;
        /*
        frame[0] = -( frame[0] * ctm.a * zoom / this.zoom );
        frame[1] = -( frame[1] * ctm.a * zoom / this.zoom );
        */
        // -( frame[0] * ctm.a * zoom / this.zoom )
        /*
        // calculate the difference between height and width, if height is bigger than width,
        // centering the flowchart based on the difference
        const height_width_diff = ((frame[3] - frame[1]) - (frame[2] - frame[0])) / 2;
        if (height_width_diff > 0) {
            frame[0] -= height_width_diff;
        }
        */
        // if the minX or minY goes below 0 (outside of svg frame), change them back to 0
        if (nX > 0) {
            nX = 0;
        }
        if (nY > 0) {
            nY = 0;
        }
        // transform
        /*
        this.dataService.flowchartPos = `matrix(${zoom},0,0,${zoom},${
            -frame[0] * ctm.a * zoom / this.zoom},${-frame[1] * ctm.a * zoom / this.zoom})`;
            */
        this.dataService.flowchartPos = "matrix(" + zoom + ",0,0," + zoom + "," + nX + "," + nY + ")";
        this.canvas.style.transform = this.dataService.flowchartPos;
        this.zoom = zoom;
    };
    // scale view on mouse wheel
    ViewFlowchartComponent.prototype.scale = function (event) {
        event.preventDefault();
        event.stopPropagation();
        // calculate new zoom value
        var value = this.zoom - (Math.sign(event.deltaY)) * this.zoomFactor;
        // limit the zoom value to be between 1 and 2.5
        if (value >= this.minZoom && value <= this.maxZoom) {
            value = Number((value).toPrecision(5));
        }
        else {
            return;
        }
        /*
        // VER 1: translate before and after re-scaling
        this.mousePos = [event.pageX - this.offset[0], event.pageY - this.offset[1]];

        const bRect = <DOMRect>this.canvas.getBoundingClientRect();
        const beforeX = this.mousePos[0] - bRect.x + this.offset[0];
        const beforeY = this.mousePos[1] - bRect.y + this.offset[1];

        const afterX = beforeX / value + this.mousePos[0] * (value - this.zoom);
        const afterY = beforeY / value + this.mousePos[1] * (value - this.zoom);

        // find transformation matrix
        const m = this.canvas.createSVGMatrix()
        .translate(beforeX / this.zoom, beforeY / this.zoom)
        .scale(value)
        .translate(-afterX, -afterY);

        this.dataService.flowchartPos = 'matrix(' + m.a + ',' + m.b + ',' + m.c + ',' + m.d + ',' + m.e + ',' + m.f + ')';
        */
        /*
        // VER 2 : transform relative to the top-left of the bounding box of the canvas and adjust based on mouse position

        this.mousePos = [event.pageX - this.offset[0], event.pageY - this.offset[1]];

        const bRect = <DOMRect>this.canvas.getBoundingClientRect();
        let newX = (bRect.left - this.offset[0] - this.mousePos[0] * (value - this.zoom)) / this.zoom;
        let newY = (bRect.top - this.offset[1]  - this.mousePos[1] * (value - this.zoom)) / this.zoom;
        const boundingDiv = <DOMRect>document.getElementById('flowchart-main-container').getBoundingClientRect();

        const m = this.canvas.createSVGMatrix()
        .scale(value)
        .translate(newX, newY);

        newX = m.e;
        newY = m.f;

        if (newX > 0) {
            newX = 0;
        } else if (boundingDiv.width - newX > bRect.width * value / this.zoom) {
            newX = boundingDiv.width - bRect.width * value / this.zoom;
        }
        if (newY > 0) {
            newY = 0;
        } else if (boundingDiv.height - newY > bRect.height * value / this.zoom) {
            newY = boundingDiv.height - bRect.height * value / this.zoom;
        }
        if (newY > 0) { newY = 0; }


        this.dataService.flowchartPos = 'matrix(' + value + ', 0, 0,' + value + ',' + newX + ',' + newY + ')';
        */
        /*
        // VER 3: transform relative to the center of the canvas

        const bRect = <DOMRect>this.canvas.getBoundingClientRect();
        const boundingDiv = <DOMRect>document.getElementById('flowchart-main-container').getBoundingClientRect();

        let newX = (bRect.left - this.offset[0]) / this.zoom;
        let newY = (bRect.top - this.offset[1] ) / this.zoom;


        const m = this.canvas.createSVGMatrix()
        .scale(value)
        .translate(newX, newY);

        newX = m.e - boundingDiv.width * (value - this.zoom) / (2 * this.zoom);
        newY = m.f - boundingDiv.width * (value - this.zoom) / (2 * this.zoom);

        if (newX > 0) {
            newX = 0;
        } else if (boundingDiv.width - newX > bRect.width * value / this.zoom) {
            newX = boundingDiv.width - bRect.width * value / this.zoom;
        }
        if (newY > 0) {
            newY = 0;
        } else if (boundingDiv.height - newY > bRect.height * value / this.zoom) {
            newY = boundingDiv.height - bRect.height * value / this.zoom;
        }
        if (newY > 0) { newY = 0; }
        */
        // VER 4: transform relative to the mouse position
        this.mousePos = [event.pageX - this.offset[0], event.pageY - this.offset[1]];
        var bRect = this.canvas.getBoundingClientRect();
        var boundingDiv = document.getElementById('flowchart-main-container').getBoundingClientRect();
        var newX = ((bRect.left - this.offset[0]) * value - this.mousePos[0] * (value - this.zoom)) / this.zoom;
        var newY = ((bRect.top - this.offset[1]) * value - this.mousePos[1] * (value - this.zoom)) / this.zoom;
        // snapping back the x and y coordinates if the zoom goes out of the bounding box
        if (newX > 0) {
            newX = 0;
        }
        else if (boundingDiv.width - newX > bRect.width * value / this.zoom) {
            newX = boundingDiv.width - bRect.width * value / this.zoom;
        }
        if (newY > 0) {
            newY = 0;
        }
        else if (boundingDiv.height - newY > bRect.height * value / this.zoom) {
            newY = boundingDiv.height - bRect.height * value / this.zoom;
        }
        if (newY > 0) {
            newY = 0;
        }
        this.dataService.flowchartPos = 'matrix(' + value + ', 0, 0,' + value + ',' + newX + ',' + newY + ')';
        // transform
        this.canvas.style.transform = this.dataService.flowchartPos;
        this.zoom = value;
    };
    // initiate dragging the view window
    ViewFlowchartComponent.prototype.panStart = function (event) {
        event.preventDefault();
        var bRect = this.canvas.getBoundingClientRect();
        // set start coords to current view window position
        this.starTxyzs = [
            event.clientX - (bRect.left - this.offset[0]),
            event.clientY - (bRect.top - this.offset[1])
            // event.deltaX - (bRect.left - this.offset[0]),
            // event.deltaY - (bRect.top - this.offset[1])
        ];
        // set drag mode to drag view
        this.isDown = 1;
    };
    // handle mouse move for dragging view/node/port
    ViewFlowchartComponent.prototype.handleMouseMove = function (event) {
        // return if no dragging initiated
        if (!this.isDown) {
            return;
            // if drag view
        }
        else if (this.isDown === 1) {
            event.preventDefault();
            var bRect = this.canvas.getBoundingClientRect();
            var x = Number(event.clientX - this.starTxyzs[0]);
            var y = Number(event.clientY - this.starTxyzs[1]);
            // let x = Number(event.deltaX - this.starTxyzs[0]);
            // let y = Number(event.deltaY - this.starTxyzs[1]);
            var boundingDiv = document.getElementById('flowchart-main-container').getBoundingClientRect();
            if (x > 0 || bRect.width < boundingDiv.width) {
                x = 0;
            }
            else if (boundingDiv.width - x > bRect.width) {
                x = boundingDiv.width - bRect.width;
            }
            if (y > 0 || bRect.height < boundingDiv.height) {
                y = 0;
            }
            else if (boundingDiv.height - y > bRect.height) {
                y = boundingDiv.height - bRect.height;
            }
            this.dataService.flowchartPos = 'matrix(' + this.zoom + ',0,0,' + this.zoom + ',' + x + ',' + y + ')';
            this.canvas.style.transform = this.dataService.flowchartPos;
            // if drag node
        }
        else if (this.isDown === 2) {
            var pt = this.canvas.createSVGPoint();
            pt.x = event.pageX;
            pt.y = event.pageY;
            var svgP = this.convertCoord(pt);
            var xDiff = this.starTxyzs[0] - svgP.x;
            var yDiff = this.starTxyzs[1] - svgP.y;
            this.starTxyzs[0] = svgP.x;
            this.starTxyzs[1] = svgP.y;
            this.element.position.x -= xDiff;
            this.element.position.y -= yDiff;
            // if drag port
        }
        else if (this.isDown === 3) {
            event.preventDefault();
            var pt = this.canvas.createSVGPoint();
            pt.x = event.pageX;
            pt.y = event.pageY;
            var svgP = this.convertCoord(pt);
            this.element.setAttribute('x2', svgP.x);
            this.element.setAttribute('y2', svgP.y);
        }
    };
    ViewFlowchartComponent.prototype.handleMouseUp = function (event) {
        this.element = undefined;
        if (this.isDown === 3) {
            var pt = this.canvas.createSVGPoint();
            pt.x = event.pageX;
            pt.y = event.pageY;
            var svgP = this.convertCoord(pt);
            // reset temporary edge position to <(0,0),(0,0)>
            var tempLine = document.getElementById('temporary-wire');
            tempLine.setAttribute('x1', '0');
            tempLine.setAttribute('y1', '0');
            tempLine.setAttribute('x2', '0');
            tempLine.setAttribute('y2', '0');
            // go through all of the nodes' input/output ports
            for (var _i = 0, _a = this.dataService.flowchart.nodes; _i < _a.length; _i++) {
                var n = _a[_i];
                var pPos = void 0;
                // find the node's corresponding port and its position
                if (this.startType === 'input') {
                    if (this.edge.target.parentNode === n || n.type === 'end') {
                        continue;
                    }
                    this.edge.source = n.output;
                    pPos = [n.position.x + this.outputOffset[0], n.position.y + this.outputOffset[1]];
                }
                else {
                    if (this.edge.source.parentNode === n || n.type === 'start') {
                        continue;
                    }
                    this.edge.target = n.input;
                    pPos = [n.position.x + this.inputOffset[0], n.position.y + this.inputOffset[1]];
                }
                // if the distance between the port's position and the dropped position is bigger than 15px, continue
                if (Math.abs(pPos[0] - svgP.x) > this.maxZoom || Math.abs(pPos[1] - svgP.y) > this.maxZoom) {
                    continue;
                }
                // if there is already an existing edge with the same source and target as the new edge, return
                for (var _b = 0, _c = this.dataService.flowchart.edges; _b < _c.length; _b++) {
                    var edge = _c[_b];
                    if (edge.target === this.edge.target && edge.source === this.edge.source) {
                        this.isDown = 0;
                        return;
                    }
                }
                this.edge.target.edges.push(this.edge);
                this.edge.source.edges.push(this.edge);
                this.dataService.flowchart.edges.push(this.edge);
                this.dataService.flowchart.ordered = false;
                if (this.edge.source.parentNode.enabled) {
                    this.edge.target.parentNode.enabled = true;
                }
                /*
                try {
                    if (this.edge.source.parentNode.enabled) {
                        ViewFlowchartComponent.enableNode(this.edge.target.parentNode);
                    } else {
                        ViewFlowchartComponent.disableNode(this.edge.target.parentNode);
                    }
                } catch (ex) {
                    this.edge.target.parentNode.hasError = true;
                    this.edge.source.parentNode.hasError = true;
                }
                */
                break;
            }
            this.dataService.registerAction({ 'type': 'add', 'edges': [this.edge] });
        }
        this.isDown = 0;
    };
    ViewFlowchartComponent.prototype.newfile = function () {
        document.getElementById('newfile').click();
        this.focusFlowchart();
    };
    ViewFlowchartComponent.prototype.viewerData = function () {
        var node = this.dataService.flowchart.nodes[this.dataService.flowchart.meta.selected_nodes[0]];
        if (!node) {
            return '';
        }
        // if (node.type === 'output') { return node.input.value; }
        return node.model;
    };
    ViewFlowchartComponent.prototype.dragSplitStart = function (e) {
        var _this = this;
        var currentTransf = this.dataService.flowchartPos.split(',');
        currentTransf[5] = currentTransf[5].split(')')[0];
        // this.canvas.style.transition = 'transform 0ms linear';
        // @ts-ignore
        var dragProcess = this.flowchartSplit.dragProgress$ || this.flowchartSplit.dragProgress;
        this.splitDragSub = dragProcess.subscribe(function (x) {
            var nX = currentTransf[4] * x.sizes[0] / e.sizes[0];
            var nY = currentTransf[5] * x.sizes[0] / e.sizes[0];
            _this.dataService.flowchartPos = currentTransf[0] + ', 0, 0,' + currentTransf[3] + ',' + nX + ',' + nY + ')';
            _this.canvas.style.transform = _this.dataService.flowchartPos;
        });
    };
    ViewFlowchartComponent.prototype.dragSplitEnd = function (e) {
        this.splitDragSub.unsubscribe();
        // this.canvas.style.transition = 'transform 0ms ease-in';
        this.dataService.splitVal = e.sizes[1];
    };
    ViewFlowchartComponent.prototype.deselectAll = function (e) {
        if (e.ctrlKey) {
            return;
        }
        document.getElementById('executeButton').focus();
        this.dataService.flowchart.meta.selected_nodes.splice(1, this.dataService.flowchart.meta.selected_nodes.length - 1);
        for (var _i = 0, _a = this.selectedEdge; _i < _a.length; _i++) {
            var edgeIndex = _a[_i];
            this.dataService.flowchart.edges[edgeIndex].selected = false;
        }
        this.selectedEdge = [];
    };
    ViewFlowchartComponent.prototype.getSplit = function () { return this.dataService.splitVal; };
    ViewFlowchartComponent.prototype.getFlowchart = function () { return this.dataService.flowchart; };
    var ViewFlowchartComponent_1;
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])(),
        __metadata("design:type", Object)
    ], ViewFlowchartComponent.prototype, "switch", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"])('flowchartSplit'),
        __metadata("design:type", angular_split__WEBPACK_IMPORTED_MODULE_8__["SplitComponent"])
    ], ViewFlowchartComponent.prototype, "flowchartSplit", void 0);
    ViewFlowchartComponent = ViewFlowchartComponent_1 = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'view-flowchart',
            template: __webpack_require__(/*! ./view-flowchart.component.html */ "./src/app/views/view-flowchart/view-flowchart.component.html"),
            styles: [__webpack_require__(/*! ./view-flowchart.component.scss */ "./src/app/views/view-flowchart/view-flowchart.component.scss")]
        }),
        __metadata("design:paramtypes", [_services__WEBPACK_IMPORTED_MODULE_5__["DataService"], _angular_router__WEBPACK_IMPORTED_MODULE_7__["Router"]])
    ], ViewFlowchartComponent);
    return ViewFlowchartComponent;
}());



/***/ }),

/***/ "./src/app/views/view-flowchart/view-flowchart.module.ts":
/*!***************************************************************!*\
  !*** ./src/app/views/view-flowchart/view-flowchart.module.ts ***!
  \***************************************************************/
/*! exports provided: ViewFlowchartModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ViewFlowchartModule", function() { return ViewFlowchartModule; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/fesm5/common.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm5/forms.js");
/* harmony import */ var _view_flowchart_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./view-flowchart.component */ "./src/app/views/view-flowchart/view-flowchart.component.ts");
/* harmony import */ var _node_node_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./node/node.component */ "./src/app/views/view-flowchart/node/node.component.ts");
/* harmony import */ var _edge_edge_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./edge/edge.component */ "./src/app/views/view-flowchart/edge/edge.component.ts");
/* harmony import */ var _shared_shared_module__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @shared/shared.module */ "./src/app/shared/shared.module.ts");
/* harmony import */ var _view_flowchart_routing_module__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./view-flowchart-routing.module */ "./src/app/views/view-flowchart/view-flowchart-routing.module.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
// import @angular stuff



// import app components





/**
 * ViewFlowchartModule
 */
var ViewFlowchartModule = /** @class */ (function () {
    function ViewFlowchartModule() {
    }
    ViewFlowchartModule = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["NgModule"])({
            declarations: [
                _view_flowchart_component__WEBPACK_IMPORTED_MODULE_3__["ViewFlowchartComponent"],
                _node_node_component__WEBPACK_IMPORTED_MODULE_4__["NodeComponent"],
                _edge_edge_component__WEBPACK_IMPORTED_MODULE_5__["EdgeComponent"],
            ],
            exports: [_view_flowchart_component__WEBPACK_IMPORTED_MODULE_3__["ViewFlowchartComponent"]],
            imports: [
                _angular_common__WEBPACK_IMPORTED_MODULE_1__["CommonModule"],
                _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormsModule"],
                _shared_shared_module__WEBPACK_IMPORTED_MODULE_6__["SharedModule"],
                _view_flowchart_routing_module__WEBPACK_IMPORTED_MODULE_7__["ViewFlowchartRoutingModule"]
            ],
            entryComponents: [],
            providers: []
        }),
        __metadata("design:paramtypes", [])
    ], ViewFlowchartModule);
    return ViewFlowchartModule;
}());



/***/ }),

/***/ "./src/app/views/view-gallery/simple-name.pipe.ts":
/*!********************************************************!*\
  !*** ./src/app/views/view-gallery/simple-name.pipe.ts ***!
  \********************************************************/
/*! exports provided: SimpleNamePipe */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SimpleNamePipe", function() { return SimpleNamePipe; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};

/*
 * Shortens a name to a certain length and appends "..." infront of it
 * Usage:
 *   value | length:number
 * Example:
 *   {{ "some_very_long_string" | length:7 }}
 *   formats to: some_ve...
*/
var SimpleNamePipe = /** @class */ (function () {
    function SimpleNamePipe() {
    }
    SimpleNamePipe.prototype.transform = function (value) {
        if (value.endsWith('.mob')) {
            value = value.substr(0, value.length - 4);
        }
        value = value.split('_').join(' ');
        value = value.split('-').join(' ');
        return value;
    };
    SimpleNamePipe = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Pipe"])({ name: 'simplename' })
    ], SimpleNamePipe);
    return SimpleNamePipe;
}());



/***/ }),

/***/ "./src/app/views/view-gallery/view-gallery-routing.module.ts":
/*!*******************************************************************!*\
  !*** ./src/app/views/view-gallery/view-gallery-routing.module.ts ***!
  \*******************************************************************/
/*! exports provided: ViewGalleryRoutingModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ViewGalleryRoutingModule", function() { return ViewGalleryRoutingModule; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var _view_gallery_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./view-gallery.component */ "./src/app/views/view-gallery/view-gallery.component.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};



var routes = [
    {
        path: '',
        component: _view_gallery_component__WEBPACK_IMPORTED_MODULE_2__["ViewGalleryComponent"],
        children: []
    }
];
var ViewGalleryRoutingModule = /** @class */ (function () {
    function ViewGalleryRoutingModule() {
    }
    ViewGalleryRoutingModule = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["NgModule"])({
            imports: [_angular_router__WEBPACK_IMPORTED_MODULE_1__["RouterModule"].forChild(routes)],
            exports: [_angular_router__WEBPACK_IMPORTED_MODULE_1__["RouterModule"]]
        })
    ], ViewGalleryRoutingModule);
    return ViewGalleryRoutingModule;
}());



/***/ }),

/***/ "./src/app/views/view-gallery/view-gallery.component.html":
/*!****************************************************************!*\
  !*** ./src/app/views/view-gallery/view-gallery.component.html ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class='container'>\r\n    <as-split direction=\"horizontal\" (dragEnd)='setSplit($event)'>\r\n        <as-split-area [size]=\"100 - getSplit()\">\r\n            <panel-header [title]='getFlowchart().name'></panel-header>\r\n            <!-- viewchild content -->\r\n            <div class='content__panel'>\r\n                <h3 id = 'gallery-tab' (click)='openGalleryMenu($event)'>{{getActiveGallery().name}}<span>▾</span></h3>\r\n                <div id=\"galleryMenu\">\r\n                    <div *ngFor='let galleryName of allGalleries;'>\r\n                        <li (click)=\"switchGallery(galleryName)\">\r\n                            {{galleryName}}\r\n                        </li>\r\n                    </div>\r\n                </div>\r\n                <div class = 'content--container'>\r\n                    <div class=\"container__element container__element--project-container\">\r\n                        <div class=\"project-container__project\" *ngFor=\"let f of getActiveGallery().files\">\r\n                            <div class=\"tile--contents\" (click)='loadFile(getActiveGallery().link + f)'>\r\n                                <img src ='{{getActiveGallery().link+\"imgs/\"+f+\".JPG\"}}' alt = 'project image'>\r\n                            </div>\r\n                            <span class = 'project__title'>{{ f | simplename }}</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </as-split-area>\r\n\r\n        <as-split-area [size]=\"getSplit()\">\r\n            <!-- data viewers panel -->\r\n            <div class='content__viewer' >\r\n                <model-viewers-container [data]='viewerData()'></model-viewers-container>\r\n            </div>\r\n        </as-split-area>\r\n        \r\n    </as-split>\r\n\r\n</div>\r\n<spinner></spinner>\r\n"

/***/ }),

/***/ "./src/app/views/view-gallery/view-gallery.component.scss":
/*!****************************************************************!*\
  !*** ./src/app/views/view-gallery/view-gallery.component.scss ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".content__panel {\n  margin-top: 40px;\n  margin-left: 11px;\n  height: calc(100vh - 40px);\n  overflow: hidden;\n  overflow-y: hidden; }\n\n.content--container {\n  display: inline-block;\n  box-sizing: border-box;\n  width: 100%;\n  margin-left: -11px;\n  height: calc(100vh - 70px);\n  overflow: hidden;\n  overflow-y: auto; }\n\n.container__element--project-container {\n  display: flex;\n  flex-flow: row wrap;\n  padding: 15px 19px 15px 30px;\n  font-size: 30px;\n  line-height: 32px;\n  font-weight: 300;\n  width: -webkit-fit-content;\n  width: -moz-fit-content;\n  width: fit-content;\n  box-sizing: border-box; }\n\n.project-container__project {\n  position: relative;\n  margin: 10px;\n  width: 200px;\n  display: flex;\n  flex-flow: column nowrap; }\n\n.project-container__project .tile--contents {\n    height: 150px;\n    width: inherit;\n    box-sizing: border-box;\n    display: flex;\n    flex-flow: column nowrap;\n    justify-content: center;\n    border: 1px solid #808080;\n    padding: 1px; }\n\n.project-container__project .tile--contents img {\n      height: 100%;\n      width: 100%;\n      transition: 0.4s; }\n\n.project-container__project .tile--contents:hover {\n      border: 2px solid #00006d;\n      opacity: 1;\n      padding: 0px; }\n\n.project-container__project .project__title {\n    width: 100%;\n    font-size: 12px;\n    line-height: 15px;\n    overflow: hidden; }\n\nh2 {\n  color: #CCCCCC;\n  background-color: #999999;\n  text-align: left;\n  padding-left: 15px;\n  font-size: 12px;\n  line-height: 19px; }\n\nh4 {\n  color: #808080;\n  text-align: left;\n  padding-left: 15px;\n  font-size: 12px;\n  line-height: 16px; }\n\np {\n  color: #808080;\n  text-align: left;\n  padding-left: 15px;\n  font-size: 12px;\n  line-height: 14px; }\n\nhr {\n  border-top: 2px solid #E6E6E6;\n  margin: 0px; }\n\nh3 {\n  cursor: pointer; }\n\n#gallery-tab {\n  line-height: 30px;\n  height: 30px;\n  color: #373737; }\n\n#galleryMenu {\n  display: none;\n  position: absolute;\n  width: -webkit-fit-content;\n  width: -moz-fit-content;\n  width: fit-content;\n  left: 0px;\n  transition: display 0.4s;\n  z-index: 1;\n  background-color: #fafafb;\n  border-bottom: 1px solid #808080; }\n\n#galleryMenu button {\n    cursor: pointer;\n    display: block;\n    min-width: 100px;\n    max-width: 200px;\n    background-color: #fafafb;\n    border: 0px;\n    margin: 0px;\n    padding: 0px;\n    line-height: 30px;\n    height: 30px;\n    font-size: 12px; }\n\n#galleryMenu li {\n    cursor: pointer;\n    display: block;\n    min-width: 100px;\n    max-width: 300px;\n    overflow: hidden;\n    line-height: 20px;\n    background-color: #fafafb;\n    border: 0px;\n    margin: 0px;\n    padding: 0px 10px 0px 10px;\n    line-height: 30px;\n    height: 30px;\n    font-size: 12px;\n    color: #373737; }\n\n#galleryMenu li:hover {\n      color: #00006d; }\n\n/*# sourceMappingURL=data:application/json;base64, */"

/***/ }),

/***/ "./src/app/views/view-gallery/view-gallery.component.ts":
/*!**************************************************************!*\
  !*** ./src/app/views/view-gallery/view-gallery.component.ts ***!
  \**************************************************************/
/*! exports provided: ViewGalleryComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ViewGalleryComponent", function() { return ViewGalleryComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _shared_components_file_loadurl_component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @shared/components/file/loadurl.component */ "./src/app/shared/components/file/loadurl.component.ts");
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/common/http */ "./node_modules/@angular/common/fesm5/http.js");
/* harmony import */ var _view_gallery_config__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./view-gallery.config */ "./src/app/views/view-gallery/view-gallery.config.ts");
/* harmony import */ var _services__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @services */ "./src/app/core/services/index.ts");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var _assets_gallery_config_json__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @assets/gallery/__config__.json */ "./src/assets/gallery/__config__.json");
var _assets_gallery_config_json__WEBPACK_IMPORTED_MODULE_6___namespace = /*#__PURE__*/__webpack_require__.t(/*! @assets/gallery/__config__.json */ "./src/assets/gallery/__config__.json", 1);
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};




// import {Router} from '@angular/router';



var ViewGalleryComponent = /** @class */ (function () {
    /*
    constructor(private http: HttpClient, private dataService: DataService, private router: Router) {
        this.allFiles = this.getFilesFromURL();
    }

    */
    function ViewGalleryComponent(http, dataService, router) {
        this.http = http;
        this.dataService = dataService;
        this.router = router;
        // private allFiles: Observable<any>;
        this.allGalleries = [];
        this.switch = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        this.allGalleries = _assets_gallery_config_json__WEBPACK_IMPORTED_MODULE_6__["data"].map(function (gallery) { return gallery.name; });
        if (!this.dataService.activeGallery || !this.switchGallery(this.dataService.activeGallery.name)) {
            this.dataService.activeGallery = _assets_gallery_config_json__WEBPACK_IMPORTED_MODULE_6__["data"][0];
        }
        /*
        if (!this.dataService.galleryFiles) {
            this.dataService.galleryFiles = this.getFilesFromURL();
        }
        */
        new _shared_components_file_loadurl_component__WEBPACK_IMPORTED_MODULE_1__["LoadUrlComponent"](this.dataService).loadStartUpURL(this.router.url);
    }
    ViewGalleryComponent.prototype.getFilesFromURL = function () {
        return this.http.get(_view_gallery_config__WEBPACK_IMPORTED_MODULE_3__["Constants"].GALLERY_URL, { responseType: 'json' });
    };
    ViewGalleryComponent.prototype.openGalleryMenu = function (e) {
        var stl = document.getElementById('galleryMenu').style;
        if (!stl.display || stl.display === 'none') {
            stl.display = 'block';
        }
        else {
            stl.display = 'none';
        }
        e.stopPropagation();
    };
    ViewGalleryComponent.prototype.switchGallery = function (galleryName) {
        for (var _i = 0, _a = _assets_gallery_config_json__WEBPACK_IMPORTED_MODULE_6__["data"]; _i < _a.length; _i++) {
            var gallery = _a[_i];
            if (gallery.name === galleryName) {
                this.dataService.activeGallery = gallery;
                return true;
            }
        }
        return false;
    };
    ViewGalleryComponent.prototype.loadFile = function (fileLink) {
        new _shared_components_file_loadurl_component__WEBPACK_IMPORTED_MODULE_1__["LoadUrlComponent"](this.dataService).loadURL(fileLink + '.mob');
        this.router.navigate(['/dashboard']);
        // const stream = Observable.create(observer => {
        //     const request = new XMLHttpRequest();
        //     request.open('GET', fileLink + '.mob');
        //     request.onload = () => {
        //         if (request.status === 200) {
        //             const f = circularJSON.parse(request.responseText);
        //             const file: IMobius = {
        //                 name: f.name,
        //                 author: f.author,
        //                 flowchart: f.flowchart,
        //                 last_updated: f.last_updated,
        //                 version: f.version
        //             };
        //             observer.next(file);
        //             observer.complete();
        //         } else {
        //             observer.error('error happened');
        //         }
        //     };
        //     request.onerror = () => {
        //     observer.error('error happened');
        //     };
        //     request.send();
        // });
        // stream.subscribe(loadeddata => {
        //     this.dataService.file = loadeddata;
        //     this.dataService.newFlowchart = true;
        //     if (this.dataService.node.type !== 'end') {
        //         for (let i = 0; i < loadeddata.flowchart.nodes.length; i++) {
        //             if (loadeddata.flowchart.nodes[i].type === 'end') {
        //                 loadeddata.flowchart.meta.selected_nodes = [i];
        //                 break;
        //             }
        //         }
        //     }
        //     this.router.navigate(['/dashboard']);
        //     document.getElementById('executeButton').click();
        // });
    };
    ViewGalleryComponent.prototype.viewerData = function () {
        var node = this.dataService.flowchart.nodes[this.dataService.flowchart.meta.selected_nodes[0]];
        if (!node) {
            return '';
        }
        // if (node.type === 'output') { return node.input.value; }
        return node.model;
    };
    ViewGalleryComponent.prototype.setSplit = function (e) { this.dataService.splitVal = e.sizes[1]; };
    ViewGalleryComponent.prototype.getSplit = function () { return this.dataService.splitVal; };
    ViewGalleryComponent.prototype.getFlowchart = function () { return this.dataService.flowchart; };
    ViewGalleryComponent.prototype.getActiveGallery = function () { return this.dataService.activeGallery; };
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])(),
        __metadata("design:type", Object)
    ], ViewGalleryComponent.prototype, "switch", void 0);
    ViewGalleryComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'view-gallery',
            template: __webpack_require__(/*! ./view-gallery.component.html */ "./src/app/views/view-gallery/view-gallery.component.html"),
            styles: [__webpack_require__(/*! ./view-gallery.component.scss */ "./src/app/views/view-gallery/view-gallery.component.scss")]
        }),
        __metadata("design:paramtypes", [_angular_common_http__WEBPACK_IMPORTED_MODULE_2__["HttpClient"], _services__WEBPACK_IMPORTED_MODULE_4__["DataService"], _angular_router__WEBPACK_IMPORTED_MODULE_5__["Router"]])
    ], ViewGalleryComponent);
    return ViewGalleryComponent;
}());



/***/ }),

/***/ "./src/app/views/view-gallery/view-gallery.config.ts":
/*!***********************************************************!*\
  !*** ./src/app/views/view-gallery/view-gallery.config.ts ***!
  \***********************************************************/
/*! exports provided: Constants */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Constants", function() { return Constants; });
var Constants = /** @class */ (function () {
    function Constants() {
    }
    Object.defineProperty(Constants, "GALLERY_URL", {
        get: function () {
            return 'https://api.github.com/repos/design-automation/mobius-parametric-modeller/contents/src/assets/gallery?ref=master';
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Constants, "FILE_URL", {
        get: function () {
            return 'https://raw.githubusercontent.com/design-automation/mobius-gallery/master/examples/';
        },
        enumerable: true,
        configurable: true
    });
    return Constants;
}());



/***/ }),

/***/ "./src/app/views/view-gallery/view-gallery.module.ts":
/*!***********************************************************!*\
  !*** ./src/app/views/view-gallery/view-gallery.module.ts ***!
  \***********************************************************/
/*! exports provided: ViewGalleryModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ViewGalleryModule", function() { return ViewGalleryModule; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/fesm5/common.js");
/* harmony import */ var _shared_shared_module__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @shared/shared.module */ "./src/app/shared/shared.module.ts");
/* harmony import */ var _view_gallery_routing_module__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./view-gallery-routing.module */ "./src/app/views/view-gallery/view-gallery-routing.module.ts");
/* harmony import */ var _view_gallery_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./view-gallery.component */ "./src/app/views/view-gallery/view-gallery.component.ts");
/* harmony import */ var _simple_name_pipe__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./simple-name.pipe */ "./src/app/views/view-gallery/simple-name.pipe.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};






var ViewGalleryModule = /** @class */ (function () {
    function ViewGalleryModule() {
    }
    ViewGalleryModule = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["NgModule"])({
            declarations: [
                _view_gallery_component__WEBPACK_IMPORTED_MODULE_4__["ViewGalleryComponent"],
                _simple_name_pipe__WEBPACK_IMPORTED_MODULE_5__["SimpleNamePipe"]
            ],
            exports: [],
            imports: [
                _angular_common__WEBPACK_IMPORTED_MODULE_1__["CommonModule"],
                _view_gallery_routing_module__WEBPACK_IMPORTED_MODULE_3__["ViewGalleryRoutingModule"],
                _shared_shared_module__WEBPACK_IMPORTED_MODULE_2__["SharedModule"]
            ],
            entryComponents: [],
            providers: []
        }),
        __metadata("design:paramtypes", [])
    ], ViewGalleryModule);
    return ViewGalleryModule;
}());



/***/ }),

/***/ "./src/assets/gallery/__config__.json":
/*!********************************************!*\
  !*** ./src/assets/gallery/__config__.json ***!
  \********************************************/
/*! exports provided: data, default */
/***/ (function(module) {

module.exports = {"data":[{"name":"Getting Started","files":["box_with_holes","geometry_with_attribs","pig_head","point_line_polygon_with_attribs","point_line_polygon","rubber_toy","torus_with_holes","two_polygons_with_holes"],"link":"https://raw.githubusercontent.com/design-automation/mobius-parametric-modeller/master/src/assets/gallery/beginner/"},{"name":"Create","files":["calc_area_normal","calc_distance_length","close_polyline","create_attribute","create_extrusion","create_grid","create_line_extrusion","create_loft","create_posi_extrusion","create_rectangle","create_arc","create_polygon","create_polyline","move_polyline"],"link":"https://raw.githubusercontent.com/design-automation/mobius-parametric-modeller/master/src/assets/gallery/create/"},{"name":"Queries","files":["query_simple"],"link":"https://raw.githubusercontent.com/design-automation/mobius-parametric-modeller/master/src/assets/gallery/queries/"},{"name":"Test","files":["box_with_holes","pig_head","longlonglonglonglonglonglonglonglonglonglonglonglonglonglonglonglonglonglonglonglonglong"],"link":"https://raw.githubusercontent.com/design-automation/mobius-parametric-modeller/master/src/assets/gallery/test/"}]};

/***/ }),

/***/ "./src/assets/typedoc-json/doc.json":
/*!******************************************!*\
  !*** ./src/assets/typedoc-json/doc.json ***!
  \******************************************/
/*! exports provided: id, name, kind, flags, children, groups, default */
/***/ (function(module) {

module.exports = {"id":0,"name":"mobius-parametric-modeller","kind":0,"flags":{},"children":[{"id":1094,"name":"\"app/core/modules/_check_args\"","kind":1,"kindString":"External module","flags":{"isExported":true},"originalName":"C:/Dropbox/Files/Software/GitHub/design-automation/mobius-parametric-modeller/src/app/core/modules/_check_args.ts","children":[{"id":1100,"name":"checkAttribNameValue","kind":64,"kindString":"Function","flags":{"isExported":true},"signatures":[{"id":1101,"name":"checkAttribNameValue","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1102,"name":"fn_name","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":1103,"name":"attrib_name","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":1104,"name":"attrib_value","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}},{"id":1105,"name":"attrib_index","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"app/core/modules/_check_args.ts","line":21,"character":36}]},{"id":1226,"name":"checkCommTypes","kind":64,"kindString":"Function","flags":{"isExported":true},"signatures":[{"id":1227,"name":"checkCommTypes","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1228,"name":"fn_name","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":1229,"name":"arg_name","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":1230,"name":"arg","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}},{"id":1231,"name":"check_fns","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}}],"type":{"type":"union","types":[{"type":"intrinsic","name":"void"},{"type":"reference","name":"TEntTypeIdx","id":208},{"type":"array","elementType":{"type":"reference","name":"TEntTypeIdx","id":208}},{"type":"array","elementType":{"type":"array","elementType":{"type":"reference","name":"TEntTypeIdx","id":208}}}]}}],"sources":[{"fileName":"app/core/modules/_check_args.ts","line":304,"character":30}]},{"id":1239,"name":"checkIDnTypes","kind":64,"kindString":"Function","flags":{"isExported":true},"signatures":[{"id":1240,"name":"checkIDnTypes","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1241,"name":"fn_name","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":1242,"name":"arg_name","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":1243,"name":"arg","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}},{"id":1244,"name":"check_fns","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"id":1245,"name":"IDchecks","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"union","types":[{"type":"array","elementType":{"type":"intrinsic","name":"string"}},{"type":"intrinsic","name":"null"}]}}],"type":{"type":"union","types":[{"type":"reference","name":"TEntTypeIdx","id":208},{"type":"array","elementType":{"type":"reference","name":"TEntTypeIdx","id":208}},{"type":"array","elementType":{"type":"array","elementType":{"type":"reference","name":"TEntTypeIdx","id":208}}}]}}],"sources":[{"fileName":"app/core/modules/_check_args.ts","line":350,"character":29}]},{"id":1232,"name":"checkIDs","kind":64,"kindString":"Function","flags":{"isExported":true},"signatures":[{"id":1233,"name":"checkIDs","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1234,"name":"fn_name","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":1235,"name":"arg_name","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":1236,"name":"arg","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}},{"id":1237,"name":"check_fns","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"id":1238,"name":"IDchecks","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"union","types":[{"type":"array","elementType":{"type":"intrinsic","name":"string"}},{"type":"intrinsic","name":"null"}]}}],"type":{"type":"union","types":[{"type":"reference","name":"TEntTypeIdx","id":208},{"type":"array","elementType":{"type":"reference","name":"TEntTypeIdx","id":208}},{"type":"array","elementType":{"type":"array","elementType":{"type":"reference","name":"TEntTypeIdx","id":208}}}]}}],"sources":[{"fileName":"app/core/modules/_check_args.ts","line":326,"character":24}]},{"id":1258,"name":"isAnyArg","kind":64,"kindString":"Function","flags":{},"signatures":[{"id":1259,"name":"isAnyArg","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1260,"name":"fn_name","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":1261,"name":"arg_name","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":1262,"name":"arg","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"app/core/modules/_check_args.ts","line":402,"character":17}]},{"id":1285,"name":"isIntArg","kind":64,"kindString":"Function","flags":{},"signatures":[{"id":1286,"name":"isIntArg","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1287,"name":"fn_name","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":1288,"name":"arg_name","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":1289,"name":"arg","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"app/core/modules/_check_args.ts","line":441,"character":17}]},{"id":1290,"name":"isIntListArg","kind":64,"kindString":"Function","flags":{},"signatures":[{"id":1291,"name":"isIntListArg","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1292,"name":"fn_name","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":1293,"name":"arg_name","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":1294,"name":"arg_list","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"app/core/modules/_check_args.ts","line":447,"character":21}]},{"id":1246,"name":"isListArg","kind":64,"kindString":"Function","flags":{},"signatures":[{"id":1247,"name":"isListArg","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1248,"name":"fn_name","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":1249,"name":"arg_name","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":1250,"name":"arg","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}},{"id":1251,"name":"typ","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"app/core/modules/_check_args.ts","line":389,"character":18}]},{"id":1252,"name":"isListLenArg","kind":64,"kindString":"Function","flags":{},"signatures":[{"id":1253,"name":"isListLenArg","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1254,"name":"fn_name","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":1255,"name":"arg_name","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":1256,"name":"arg_list","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}},{"id":1257,"name":"len","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"app/core/modules/_check_args.ts","line":395,"character":21}]},{"id":1275,"name":"isNumberArg","kind":64,"kindString":"Function","flags":{},"signatures":[{"id":1276,"name":"isNumberArg","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1277,"name":"fn_name","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":1278,"name":"arg_name","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":1279,"name":"arg","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"app/core/modules/_check_args.ts","line":426,"character":20}]},{"id":1280,"name":"isNumberListArg","kind":64,"kindString":"Function","flags":{},"signatures":[{"id":1281,"name":"isNumberListArg","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1282,"name":"fn_name","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":1283,"name":"arg_name","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":1284,"name":"arg_list","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"app/core/modules/_check_args.ts","line":432,"character":24}]},{"id":1263,"name":"isStringArg","kind":64,"kindString":"Function","flags":{},"signatures":[{"id":1264,"name":"isStringArg","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1265,"name":"fn_name","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":1266,"name":"arg_name","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":1267,"name":"arg","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}},{"id":1268,"name":"typ","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"app/core/modules/_check_args.ts","line":409,"character":20}]},{"id":1269,"name":"isStringListArg","kind":64,"kindString":"Function","flags":{},"signatures":[{"id":1270,"name":"isStringListArg","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1271,"name":"fn_name","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":1272,"name":"arg_name","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":1273,"name":"arg_list","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}},{"id":1274,"name":"typ","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"app/core/modules/_check_args.ts","line":415,"character":24}]},{"id":1095,"name":"isValidName","kind":64,"kindString":"Function","flags":{},"signatures":[{"id":1096,"name":"isValidName","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1097,"name":"fn_name","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":1098,"name":"arg_name","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":1099,"name":"arg","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"app/core/modules/_check_args.ts","line":8,"character":20}]},{"id":1207,"name":"IDcheckObj","kind":2097152,"kindString":"Object literal","flags":{"isConst":true},"children":[{"id":1208,"name":"isID","kind":64,"kindString":"Function","flags":{},"signatures":[{"id":1209,"name":"isID","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1210,"name":"fn_name","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":1211,"name":"arg_name","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":1212,"name":"arg","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}},{"id":1213,"name":"ent_type_strs","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"union","types":[{"type":"array","elementType":{"type":"intrinsic","name":"string"}},{"type":"intrinsic","name":"null"}]}}],"type":{"type":"reference","name":"TEntTypeIdx","id":208}}],"sources":[{"fileName":"app/core/modules/_check_args.ts","line":248,"character":8}]},{"id":1214,"name":"isIDList","kind":64,"kindString":"Function","flags":{},"signatures":[{"id":1215,"name":"isIDList","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1216,"name":"fn_name","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":1217,"name":"arg_name","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":1218,"name":"arg_list","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}},{"id":1219,"name":"ent_type_strs","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"union","types":[{"type":"array","elementType":{"type":"intrinsic","name":"string"}},{"type":"intrinsic","name":"null"}]}}],"type":{"type":"array","elementType":{"type":"reference","name":"TEntTypeIdx","id":208}}}],"sources":[{"fileName":"app/core/modules/_check_args.ts","line":267,"character":12}]},{"id":1220,"name":"isIDList_list","kind":64,"kindString":"Function","flags":{},"signatures":[{"id":1221,"name":"isIDList_list","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1222,"name":"fn_name","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":1223,"name":"arg_name","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":1224,"name":"arg_list","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}},{"id":1225,"name":"ent_type_strs","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"union","types":[{"type":"array","elementType":{"type":"intrinsic","name":"string"}},{"type":"intrinsic","name":"null"}]}}],"type":{"type":"array","elementType":{"type":"array","elementType":{"type":"reference","name":"TEntTypeIdx","id":208}}}}],"sources":[{"fileName":"app/core/modules/_check_args.ts","line":293,"character":17}]}],"groups":[{"title":"Functions","kind":64,"children":[1208,1214,1220]}],"sources":[{"fileName":"app/core/modules/_check_args.ts","line":244,"character":16}],"type":{"type":"intrinsic","name":"object"}},{"id":1106,"name":"typeCheckObj","kind":2097152,"kindString":"Object literal","flags":{"isConst":true},"children":[{"id":1117,"name":"isAny","kind":64,"kindString":"Function","flags":{},"signatures":[{"id":1118,"name":"isAny","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1119,"name":"fn_name","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":1120,"name":"arg_name","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":1121,"name":"arg","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"app/core/modules/_check_args.ts","line":151,"character":9}]},{"id":1167,"name":"isCoord","kind":64,"kindString":"Function","flags":{},"signatures":[{"id":1168,"name":"isCoord","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1169,"name":"fn_name","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":1170,"name":"arg_name","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":1171,"name":"arg","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"tuple","elements":[{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"number"}]}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"app/core/modules/_check_args.ts","line":199,"character":11}]},{"id":1172,"name":"isCoordList","kind":64,"kindString":"Function","flags":{},"signatures":[{"id":1173,"name":"isCoordList","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1174,"name":"fn_name","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":1175,"name":"arg_name","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":1176,"name":"arg_list","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"array","elementType":{"type":"tuple","elements":[{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"number"}]}}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"app/core/modules/_check_args.ts","line":205,"character":15}]},{"id":1107,"name":"isEntity","kind":64,"kindString":"Function","flags":{},"signatures":[{"id":1108,"name":"isEntity","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1109,"name":"fn_name","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":1110,"name":"arg_name","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":1111,"name":"arg","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"app/core/modules/_check_args.ts","line":139,"character":12}]},{"id":1112,"name":"isEntityList","kind":64,"kindString":"Function","flags":{},"signatures":[{"id":1113,"name":"isEntityList","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1114,"name":"fn_name","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":1115,"name":"arg_name","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":1116,"name":"arg_list","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"app/core/modules/_check_args.ts","line":146,"character":16}]},{"id":1147,"name":"isInt","kind":64,"kindString":"Function","flags":{},"signatures":[{"id":1148,"name":"isInt","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1149,"name":"fn_name","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":1150,"name":"arg_name","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":1151,"name":"arg","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"app/core/modules/_check_args.ts","line":178,"character":9}]},{"id":1122,"name":"isList","kind":64,"kindString":"Function","flags":{},"signatures":[{"id":1123,"name":"isList","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1124,"name":"fn_name","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":1125,"name":"arg_name","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":1126,"name":"arg","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"app/core/modules/_check_args.ts","line":156,"character":10}]},{"id":1137,"name":"isNumber","kind":64,"kindString":"Function","flags":{},"signatures":[{"id":1138,"name":"isNumber","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1139,"name":"fn_name","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":1140,"name":"arg_name","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":1141,"name":"arg","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"app/core/modules/_check_args.ts","line":170,"character":12}]},{"id":1142,"name":"isNumberList","kind":64,"kindString":"Function","flags":{},"signatures":[{"id":1143,"name":"isNumberList","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1144,"name":"fn_name","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":1145,"name":"arg_name","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":1146,"name":"arg_list","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"app/core/modules/_check_args.ts","line":174,"character":16}]},{"id":1187,"name":"isOrigin","kind":64,"kindString":"Function","flags":{},"signatures":[{"id":1188,"name":"isOrigin","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1189,"name":"fn_name","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":1190,"name":"arg_name","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":1191,"name":"arg","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}}],"type":{"type":"reference","name":"TEntTypeIdx","id":208}}],"sources":[{"fileName":"app/core/modules/_check_args.ts","line":220,"character":12}]},{"id":1192,"name":"isPlane","kind":64,"kindString":"Function","flags":{},"signatures":[{"id":1193,"name":"isPlane","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1194,"name":"fn_name","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":1195,"name":"arg_name","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":1196,"name":"arg_list","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"array","elementType":{"type":"tuple","elements":[{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"number"}]}}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"app/core/modules/_check_args.ts","line":223,"character":11}]},{"id":1197,"name":"isPlaneList","kind":64,"kindString":"Function","flags":{},"signatures":[{"id":1198,"name":"isPlaneList","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1199,"name":"fn_name","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":1200,"name":"arg_name","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":1201,"name":"arg_list","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"array","elementType":{"type":"array","elementType":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}}}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"app/core/modules/_check_args.ts","line":233,"character":15}]},{"id":1202,"name":"isRay","kind":64,"kindString":"Function","flags":{},"signatures":[{"id":1203,"name":"isRay","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1204,"name":"fn_name","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":1205,"name":"arg_name","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":1206,"name":"arg_list","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"array","elementType":{"type":"tuple","elements":[{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"number"}]}}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"app/core/modules/_check_args.ts","line":236,"character":9}]},{"id":1127,"name":"isString","kind":64,"kindString":"Function","flags":{},"signatures":[{"id":1128,"name":"isString","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1129,"name":"fn_name","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":1130,"name":"arg_name","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":1131,"name":"arg","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"app/core/modules/_check_args.ts","line":161,"character":12}]},{"id":1132,"name":"isStringList","kind":64,"kindString":"Function","flags":{},"signatures":[{"id":1133,"name":"isStringList","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1134,"name":"fn_name","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":1135,"name":"arg_name","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":1136,"name":"arg_list","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"app/core/modules/_check_args.ts","line":165,"character":16}]},{"id":1177,"name":"isVector","kind":64,"kindString":"Function","flags":{},"signatures":[{"id":1178,"name":"isVector","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1179,"name":"fn_name","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":1180,"name":"arg_name","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":1181,"name":"arg_list","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"tuple","elements":[{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"number"}]}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"app/core/modules/_check_args.ts","line":213,"character":12}]},{"id":1182,"name":"isVectorList","kind":64,"kindString":"Function","flags":{},"signatures":[{"id":1183,"name":"isVectorList","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1184,"name":"fn_name","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":1185,"name":"arg_name","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":1186,"name":"arg_list","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"app/core/modules/_check_args.ts","line":217,"character":16}]},{"id":1162,"name":"isXYZlist","kind":64,"kindString":"Function","flags":{},"signatures":[{"id":1163,"name":"isXYZlist","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1164,"name":"fn_name","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":1165,"name":"arg_name","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":1166,"name":"arg_list","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"tuple","elements":[{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"number"}]}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"app/core/modules/_check_args.ts","line":194,"character":13}]},{"id":1152,"name":"isXYlist","kind":64,"kindString":"Function","flags":{},"signatures":[{"id":1153,"name":"isXYlist","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1154,"name":"fn_name","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":1155,"name":"arg_name","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":1156,"name":"arg_list","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"tuple","elements":[{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"number"}]}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"app/core/modules/_check_args.ts","line":182,"character":12}]},{"id":1157,"name":"isXYlistInt","kind":64,"kindString":"Function","flags":{},"signatures":[{"id":1158,"name":"isXYlistInt","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1159,"name":"fn_name","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":1160,"name":"arg_name","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":1161,"name":"arg_list","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"tuple","elements":[{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"number"}]}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"app/core/modules/_check_args.ts","line":188,"character":15}]}],"groups":[{"title":"Functions","kind":64,"children":[1117,1167,1172,1107,1112,1147,1122,1137,1142,1187,1192,1197,1202,1127,1132,1177,1182,1162,1152,1157]}],"sources":[{"fileName":"app/core/modules/_check_args.ts","line":137,"character":18}],"type":{"type":"intrinsic","name":"object"}}],"groups":[{"title":"Functions","kind":64,"children":[1100,1226,1239,1232,1258,1285,1290,1246,1252,1275,1280,1263,1269,1095]},{"title":"Object literals","kind":2097152,"children":[1207,1106]}],"sources":[{"fileName":"app/core/modules/_check_args.ts","line":1,"character":0}]},{"id":1982,"name":"\"app/core/modules/_constants\"","kind":1,"kindString":"External module","flags":{"isExported":true},"originalName":"C:/Dropbox/Files/Software/GitHub/design-automation/mobius-parametric-modeller/src/app/core/modules/_constants.ts","children":[{"id":1983,"name":"XY","kind":32,"kindString":"Variable","flags":{"isExported":true,"isConst":true},"sources":[{"fileName":"app/core/modules/_constants.ts","line":3,"character":15}],"type":{"type":"intrinsic","name":"Object"},"defaultValue":" XYPLANE"},{"id":1988,"name":"XZ","kind":32,"kindString":"Variable","flags":{"isExported":true,"isConst":true},"sources":[{"fileName":"app/core/modules/_constants.ts","line":9,"character":15}],"type":{"type":"intrinsic","name":"Object"},"defaultValue":" XZPLANE"},{"id":1986,"name":"YX","kind":32,"kindString":"Variable","flags":{"isExported":true,"isConst":true},"sources":[{"fileName":"app/core/modules/_constants.ts","line":7,"character":15}],"type":{"type":"intrinsic","name":"Object"},"defaultValue":" YXPLANE"},{"id":1984,"name":"YZ","kind":32,"kindString":"Variable","flags":{"isExported":true,"isConst":true},"sources":[{"fileName":"app/core/modules/_constants.ts","line":4,"character":15}],"type":{"type":"intrinsic","name":"Object"},"defaultValue":" YZPLANE"},{"id":1985,"name":"ZX","kind":32,"kindString":"Variable","flags":{"isExported":true,"isConst":true},"sources":[{"fileName":"app/core/modules/_constants.ts","line":5,"character":15}],"type":{"type":"intrinsic","name":"Object"},"defaultValue":" ZXPLANE"},{"id":1987,"name":"ZY","kind":32,"kindString":"Variable","flags":{"isExported":true,"isConst":true},"sources":[{"fileName":"app/core/modules/_constants.ts","line":8,"character":15}],"type":{"type":"intrinsic","name":"Object"},"defaultValue":" ZYPLANE"}],"groups":[{"title":"Variables","kind":32,"children":[1983,1988,1986,1984,1985,1987]}],"sources":[{"fileName":"app/core/modules/_constants.ts","line":1,"character":0}]},{"id":1975,"name":"\"app/core/modules/_conversion\"","kind":1,"kindString":"External module","flags":{"isExported":true},"originalName":"C:/Dropbox/Files/Software/GitHub/design-automation/mobius-parametric-modeller/src/app/core/modules/_conversion.ts","children":[{"id":1979,"name":"degToRad","kind":64,"kindString":"Function","flags":{"isExported":true},"signatures":[{"id":1980,"name":"degToRad","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1981,"name":"deg","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"number"}}],"sources":[{"fileName":"app/core/modules/_conversion.ts","line":4,"character":24}]},{"id":1976,"name":"radToDeg","kind":64,"kindString":"Function","flags":{"isExported":true},"signatures":[{"id":1977,"name":"radToDeg","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1978,"name":"rad","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"number"}}],"sources":[{"fileName":"app/core/modules/_conversion.ts","line":1,"character":24}]}],"groups":[{"title":"Functions","kind":64,"children":[1979,1976]}],"sources":[{"fileName":"app/core/modules/_conversion.ts","line":1,"character":0}]},{"id":1958,"name":"\"app/core/modules/_list\"","kind":1,"kindString":"External module","flags":{"isExported":true},"originalName":"C:/Dropbox/Files/Software/GitHub/design-automation/mobius-parametric-modeller/src/app/core/modules/_list.ts","children":[{"id":1963,"name":"length","kind":64,"kindString":"Function","flags":{"isExported":true},"signatures":[{"id":1964,"name":"length","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1965,"name":"list","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"type":{"type":"intrinsic","name":"number"}}],"sources":[{"fileName":"app/core/modules/_list.ts","line":14,"character":22}]},{"id":1959,"name":"range","kind":64,"kindString":"Function","flags":{"isExported":true},"signatures":[{"id":1960,"name":"range","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"list functions that obtain and return information from an input list. Does not modify input list."},"parameters":[{"id":1961,"name":"min","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":1962,"name":"max","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}}],"sources":[{"fileName":"app/core/modules/_list.ts","line":6,"character":21}]},{"id":1966,"name":"shuffle","kind":64,"kindString":"Function","flags":{"isExported":true},"signatures":[{"id":1967,"name":"shuffle","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1968,"name":"list","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"sources":[{"fileName":"app/core/modules/_list.ts","line":19,"character":23}]},{"id":1969,"name":"zip","kind":64,"kindString":"Function","flags":{"isExported":true},"signatures":[{"id":1970,"name":"zip","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1971,"name":"lists","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"array","elementType":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"sources":[{"fileName":"app/core/modules/_list.ts","line":25,"character":19}]},{"id":1972,"name":"zip2","kind":64,"kindString":"Function","flags":{"isExported":true},"signatures":[{"id":1973,"name":"zip2","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1974,"name":"lists","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"array","elementType":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"sources":[{"fileName":"app/core/modules/_list.ts","line":32,"character":20}]}],"groups":[{"title":"Functions","kind":64,"children":[1963,1959,1966,1969,1972]}],"sources":[{"fileName":"app/core/modules/_list.ts","line":1,"character":0}]},{"id":1909,"name":"\"app/core/modules/_mathjs\"","kind":1,"kindString":"External module","flags":{"isExported":true},"originalName":"C:/Dropbox/Files/Software/GitHub/design-automation/mobius-parametric-modeller/src/app/core/modules/_mathjs.ts","children":[{"id":1910,"name":"boolean","kind":32,"kindString":"Variable","flags":{"isExported":true,"isConst":true},"sources":[{"fileName":"app/core/modules/_mathjs.ts","line":3,"character":20}],"type":{"type":"intrinsic","name":"any"},"defaultValue":" Mathjs.boolean"},{"id":1925,"name":"cube","kind":32,"kindString":"Variable","flags":{"isExported":true,"isConst":true},"sources":[{"fileName":"app/core/modules/_mathjs.ts","line":18,"character":17}],"type":{"type":"intrinsic","name":"any"},"defaultValue":" Mathjs.cube"},{"id":1926,"name":"distance","kind":32,"kindString":"Variable","flags":{"isExported":true,"isConst":true},"sources":[{"fileName":"app/core/modules/_mathjs.ts","line":19,"character":21}],"type":{"type":"intrinsic","name":"any"},"defaultValue":" Mathjs.distance"},{"id":1921,"name":"hypot","kind":32,"kindString":"Variable","flags":{"isExported":true,"isConst":true},"sources":[{"fileName":"app/core/modules/_mathjs.ts","line":14,"character":18}],"type":{"type":"intrinsic","name":"any"},"defaultValue":" Mathjs.hypot"},{"id":1913,"name":"mad","kind":32,"kindString":"Variable","flags":{"isExported":true,"isConst":true},"sources":[{"fileName":"app/core/modules/_mathjs.ts","line":6,"character":16}],"type":{"type":"intrinsic","name":"any"},"defaultValue":" Mathjs.mad"},{"id":1914,"name":"mean","kind":32,"kindString":"Variable","flags":{"isExported":true,"isConst":true},"sources":[{"fileName":"app/core/modules/_mathjs.ts","line":7,"character":17}],"type":{"type":"intrinsic","name":"any"},"defaultValue":" Mathjs.mean"},{"id":1915,"name":"median","kind":32,"kindString":"Variable","flags":{"isExported":true,"isConst":true},"sources":[{"fileName":"app/core/modules/_mathjs.ts","line":8,"character":19}],"type":{"type":"intrinsic","name":"any"},"defaultValue":" Mathjs.median"},{"id":1923,"name":"mod","kind":32,"kindString":"Variable","flags":{"isExported":true,"isConst":true},"sources":[{"fileName":"app/core/modules/_mathjs.ts","line":16,"character":16}],"type":{"type":"intrinsic","name":"any"},"defaultValue":" Mathjs.mod"},{"id":1916,"name":"mode","kind":32,"kindString":"Variable","flags":{"isExported":true,"isConst":true},"sources":[{"fileName":"app/core/modules/_mathjs.ts","line":9,"character":17}],"type":{"type":"intrinsic","name":"any"},"defaultValue":" Mathjs.mode"},{"id":1922,"name":"norm","kind":32,"kindString":"Variable","flags":{"isExported":true,"isConst":true},"sources":[{"fileName":"app/core/modules/_mathjs.ts","line":15,"character":17}],"type":{"type":"intrinsic","name":"any"},"defaultValue":" Mathjs.norm"},{"id":1911,"name":"number","kind":32,"kindString":"Variable","flags":{"isExported":true,"isConst":true},"sources":[{"fileName":"app/core/modules/_mathjs.ts","line":4,"character":19}],"type":{"type":"intrinsic","name":"any"},"defaultValue":" Mathjs.number"},{"id":1929,"name":"pickRandom","kind":32,"kindString":"Variable","flags":{"isExported":true,"isConst":true},"sources":[{"fileName":"app/core/modules/_mathjs.ts","line":22,"character":23}],"type":{"type":"intrinsic","name":"any"},"defaultValue":" Mathjs.pickRandom"},{"id":1917,"name":"prod","kind":32,"kindString":"Variable","flags":{"isExported":true,"isConst":true},"sources":[{"fileName":"app/core/modules/_mathjs.ts","line":10,"character":17}],"type":{"type":"intrinsic","name":"any"},"defaultValue":" Mathjs.prod"},{"id":1927,"name":"random","kind":32,"kindString":"Variable","flags":{"isExported":true,"isConst":true},"sources":[{"fileName":"app/core/modules/_mathjs.ts","line":20,"character":19}],"type":{"type":"intrinsic","name":"any"},"defaultValue":" Mathjs.random"},{"id":1928,"name":"randomInt","kind":32,"kindString":"Variable","flags":{"isExported":true,"isConst":true},"sources":[{"fileName":"app/core/modules/_mathjs.ts","line":21,"character":22}],"type":{"type":"intrinsic","name":"any"},"defaultValue":" Mathjs.randomInt"},{"id":1924,"name":"square","kind":32,"kindString":"Variable","flags":{"isExported":true,"isConst":true},"sources":[{"fileName":"app/core/modules/_mathjs.ts","line":17,"character":19}],"type":{"type":"intrinsic","name":"any"},"defaultValue":" Mathjs.square"},{"id":1918,"name":"std","kind":32,"kindString":"Variable","flags":{"isExported":true,"isConst":true},"sources":[{"fileName":"app/core/modules/_mathjs.ts","line":11,"character":16}],"type":{"type":"intrinsic","name":"any"},"defaultValue":" Mathjs.std"},{"id":1912,"name":"string","kind":32,"kindString":"Variable","flags":{"isExported":true,"isConst":true},"sources":[{"fileName":"app/core/modules/_mathjs.ts","line":5,"character":19}],"type":{"type":"intrinsic","name":"any"},"defaultValue":" Mathjs.string"},{"id":1920,"name":"sum","kind":32,"kindString":"Variable","flags":{"isExported":true,"isConst":true},"sources":[{"fileName":"app/core/modules/_mathjs.ts","line":13,"character":16}],"type":{"type":"intrinsic","name":"any"},"defaultValue":" Mathjs.sum"},{"id":1919,"name":"vari","kind":32,"kindString":"Variable","flags":{"isExported":true,"isConst":true},"sources":[{"fileName":"app/core/modules/_mathjs.ts","line":12,"character":17}],"type":{"type":"intrinsic","name":"any"},"defaultValue":" Mathjs.var"}],"groups":[{"title":"Variables","kind":32,"children":[1910,1925,1926,1921,1913,1914,1915,1923,1916,1922,1911,1929,1917,1927,1928,1924,1918,1912,1920,1919]}],"sources":[{"fileName":"app/core/modules/_mathjs.ts","line":1,"character":0}]},{"id":1353,"name":"\"app/core/modules/_model\"","kind":1,"kindString":"External module","flags":{"isExported":true},"originalName":"C:/Dropbox/Files/Software/GitHub/design-automation/mobius-parametric-modeller/src/app/core/modules/_model.ts","children":[{"id":1382,"name":"__getAttrib__","kind":64,"kindString":"Function","flags":{"isExported":true},"signatures":[{"id":1383,"name":"__getAttrib__","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Gets an attribute from the model."},"parameters":[{"id":1384,"name":"__model__","kind":32768,"kindString":"Parameter","flags":{},"comment":{"shortText":"\n"},"type":{"type":"reference","name":"GIModel","id":1047}},{"id":1385,"name":"entities","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"union","types":[{"type":"reference","name":"TId","id":212},{"type":"array","elementType":{"type":"reference","name":"TId","id":212}}]}},{"id":1386,"name":"attrib_name","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":1387,"name":"attrib_index","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"union","types":[{"type":"reference","name":"TAttribDataTypes","id":228},{"type":"array","elementType":{"type":"reference","name":"TAttribDataTypes","id":228}}]}}],"sources":[{"fileName":"app/core/modules/_model.ts","line":103,"character":29}]},{"id":1362,"name":"__merge__","kind":64,"kindString":"Function","flags":{"isExported":true},"signatures":[{"id":1363,"name":"__merge__","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Merges the second model into the first model. The geometry, attribues, and groups are all merged.\nIf the models contain contain groups with the same names, then the groups will be merged."},"parameters":[{"id":1364,"name":"model1","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"The model to merge into."},"type":{"type":"reference","name":"GIModel","id":1047}},{"id":1365,"name":"model2","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"The model to merge from    .\n"},"type":{"type":"reference","name":"GIModel","id":1047}}],"type":{"type":"reference","name":"IGeomPack","id":68}}],"sources":[{"fileName":"app/core/modules/_model.ts","line":48,"character":25}]},{"id":1354,"name":"__new__","kind":64,"kindString":"Function","flags":{"isExported":true},"signatures":[{"id":1355,"name":"__new__","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Creates a new empty model.","returns":"New model empty.\n"},"type":{"type":"reference","name":"GIModel","id":1047}}],"sources":[{"fileName":"app/core/modules/_model.ts","line":14,"character":23}]},{"id":1359,"name":"__postprocess__","kind":64,"kindString":"Function","flags":{"isExported":true},"signatures":[{"id":1360,"name":"__postprocess__","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"A function to postprocess the model, after it enters the node."},"parameters":[{"id":1361,"name":"__model__","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"GIModel","id":1047}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"app/core/modules/_model.ts","line":36,"character":31}]},{"id":1356,"name":"__preprocess__","kind":64,"kindString":"Function","flags":{"isExported":true},"signatures":[{"id":1357,"name":"__preprocess__","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"A function to preprocess the model, before it enters the node.\nIn cases where there is more than one model connected to a node,\nthe preprocess function will be called before the merge function."},"parameters":[{"id":1358,"name":"__model__","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"GIModel","id":1047}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"app/core/modules/_model.ts","line":27,"character":30}]},{"id":1369,"name":"__setAttrib__","kind":64,"kindString":"Function","flags":{"isExported":true},"signatures":[{"id":1370,"name":"__setAttrib__","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Sets an attribute in the model."},"parameters":[{"id":1371,"name":"__model__","kind":32768,"kindString":"Parameter","flags":{},"comment":{"shortText":"\n"},"type":{"type":"reference","name":"GIModel","id":1047}},{"id":1372,"name":"entities","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"union","types":[{"type":"reference","name":"TId","id":212},{"type":"array","elementType":{"type":"reference","name":"TId","id":212}}]}},{"id":1373,"name":"attrib_name","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":1374,"name":"attrib_value","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"TAttribDataTypes","id":228}},{"id":1375,"name":"attrib_index","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"app/core/modules/_model.ts","line":64,"character":29}]},{"id":1366,"name":"__stringify__","kind":64,"kindString":"Function","flags":{"isExported":true},"signatures":[{"id":1367,"name":"__stringify__","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Returns a string representation of this model."},"parameters":[{"id":1368,"name":"__model__","kind":32768,"kindString":"Parameter","flags":{},"comment":{"shortText":"\n"},"type":{"type":"reference","name":"GIModel","id":1047}}],"type":{"type":"intrinsic","name":"string"}}],"sources":[{"fileName":"app/core/modules/_model.ts","line":56,"character":29}]},{"id":1376,"name":"_getAttrib","kind":64,"kindString":"Function","flags":{},"signatures":[{"id":1377,"name":"_getAttrib","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1378,"name":"__model__","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"GIModel","id":1047}},{"id":1379,"name":"ents_arr","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"union","types":[{"type":"reference","name":"TEntTypeIdx","id":208},{"type":"array","elementType":{"type":"reference","name":"TEntTypeIdx","id":208}}]}},{"id":1380,"name":"attrib_name","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":1381,"name":"attrib_index","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"union","types":[{"type":"reference","name":"TAttribDataTypes","id":228},{"type":"array","elementType":{"type":"reference","name":"TAttribDataTypes","id":228}}]}}],"sources":[{"fileName":"app/core/modules/_model.ts","line":85,"character":19}]}],"groups":[{"title":"Functions","kind":64,"children":[1382,1362,1354,1359,1356,1369,1366,1376]}],"sources":[{"fileName":"app/core/modules/_model.ts","line":1,"character":0}]},{"id":1994,"name":"\"app/core/modules/_parameterTypes\"","kind":1,"kindString":"External module","flags":{"isExported":true},"originalName":"C:/Dropbox/Files/Software/GitHub/design-automation/mobius-parametric-modeller/src/app/core/modules/_parameterTypes.ts","children":[{"id":2009,"name":"_varString","kind":32,"kindString":"Variable","flags":{"isExported":true,"isConst":true},"sources":[{"fileName":"app/core/modules/_parameterTypes.ts","line":25,"character":23}],"type":{"type":"stringLiteral","value":"\nPI = Math.PI;\nXY = __modules__._constants.XY;\nYZ = __modules__._constants.YZ;\nZX = __modules__._constants.ZX;\nYX = __modules__._constants.YX;\nZY = __modules__._constants.ZY;\nXZ = __modules__._constants.XZ;\nmin = Math.min;\nmax = Math.max;\npow = Math.pow;\nsqrt = Math.sqrt;\nexp = Math.exp;\nlog = Math.log;\nround = Math.round;\nceil = Math.ceil;\nfloor = Math.floor;\nabs = Math.abs;\nsin = Math.sin;\nasin = Math.asin;\nsinh = Math.sinh;\nasinh = Math.asinh;\ncos = Math.cos;\nacos = Math.acos;\ncosh = Math.cosh;\nacosh = Math.acosh;\ntan = Math.tan;\natan = Math.atan;\ntanh = Math.tanh;\natanh = Math.atanh;\natan2 = Math.atan2;\nboolean = __modules__._mathjs.boolean;\nnumber = __modules__._mathjs.number;\nstring = __modules__._mathjs.string;\nmad = __modules__._mathjs.mad;\nmean = __modules__._mathjs.mean;\nmedian = __modules__._mathjs.median;\nmode = __modules__._mathjs.mode;\nprod = __modules__._mathjs.prod;\nstd = __modules__._mathjs.std;\nvari = __modules__._mathjs.var;\nsum = __modules__._mathjs.sum;\nhypot = __modules__._mathjs.hypot;\nnorm = __modules__._mathjs.norm;\nmod = __modules__._mathjs.mod;\nsquare = __modules__._mathjs.square;\ncube = __modules__._mathjs.cube;\ndistance = __modules__._mathjs.distance;\nrange = __modules__._list.range;\nlength = __modules__._list.length;\nshuffle = __modules__._list.shuffle;\nzip = __modules__._list.zip;\nzip2 = __modules__._list.zip2;\nvecsAdd = __modules__._vec.vecAdd;\nvecSub = __modules__._vec.vecSub;\nvecDiv = __modules__._vec.vecDiv;\nvecMult = __modules__._vec.vecMult;\nvecLen = __modules__._vec.vecLen;\nvecSetLen = __modules__._vec.vecSetLen;\nvecNorm = __modules__._vec.vecNorm;\nvecRev = __modules__._vec.vecRev;\nvecFromTo = __modules__._vec.vecFromTo;\nvecAng = __modules__._vec.vecAng;\nvecAng2 = __modules__._vec.vecAng2;\nvecDot = __modules__._vec.vecDot;\nvecCross = __modules__._vec.vecCross;\nvecEqual = __modules__._vec.vecEqual;\nradToDeg = __modules__._conversion.radToDeg;\ndegToRad = __modules__._conversion.degToRad;\nrand = __modules__._rand.rand;\nrandInt = __modules__._rand.randInt;\nrandPick = __modules__._rand.randPick;\n"},"defaultValue":" `\r\nPI = Math.PI;\r\nXY = __modules__._constants.XY;\r\nYZ = __modules__._constants.YZ;\r\nZX = __modules__._constants.ZX;\r\nYX = __modules__._constants.YX;\r\nZY = __modules__._constants.ZY;\r\nXZ = __modules__._constants.XZ;\r\nmin = Math.min;\r\nmax = Math.max;\r\npow = Math.pow;\r\nsqrt = Math.sqrt;\r\nexp = Math.exp;\r\nlog = Math.log;\r\nround = Math.round;\r\nceil = Math.ceil;\r\nfloor = Math.floor;\r\nabs = Math.abs;\r\nsin = Math.sin;\r\nasin = Math.asin;\r\nsinh = Math.sinh;\r\nasinh = Math.asinh;\r\ncos = Math.cos;\r\nacos = Math.acos;\r\ncosh = Math.cosh;\r\nacosh = Math.acosh;\r\ntan = Math.tan;\r\natan = Math.atan;\r\ntanh = Math.tanh;\r\natanh = Math.atanh;\r\natan2 = Math.atan2;\r\nboolean = __modules__._mathjs.boolean;\r\nnumber = __modules__._mathjs.number;\r\nstring = __modules__._mathjs.string;\r\nmad = __modules__._mathjs.mad;\r\nmean = __modules__._mathjs.mean;\r\nmedian = __modules__._mathjs.median;\r\nmode = __modules__._mathjs.mode;\r\nprod = __modules__._mathjs.prod;\r\nstd = __modules__._mathjs.std;\r\nvari = __modules__._mathjs.var;\r\nsum = __modules__._mathjs.sum;\r\nhypot = __modules__._mathjs.hypot;\r\nnorm = __modules__._mathjs.norm;\r\nmod = __modules__._mathjs.mod;\r\nsquare = __modules__._mathjs.square;\r\ncube = __modules__._mathjs.cube;\r\ndistance = __modules__._mathjs.distance;\r\nrange = __modules__._list.range;\r\nlength = __modules__._list.length;\r\nshuffle = __modules__._list.shuffle;\r\nzip = __modules__._list.zip;\r\nzip2 = __modules__._list.zip2;\r\nvecsAdd = __modules__._vec.vecAdd;\r\nvecSub = __modules__._vec.vecSub;\r\nvecDiv = __modules__._vec.vecDiv;\r\nvecMult = __modules__._vec.vecMult;\r\nvecLen = __modules__._vec.vecLen;\r\nvecSetLen = __modules__._vec.vecSetLen;\r\nvecNorm = __modules__._vec.vecNorm;\r\nvecRev = __modules__._vec.vecRev;\r\nvecFromTo = __modules__._vec.vecFromTo;\r\nvecAng = __modules__._vec.vecAng;\r\nvecAng2 = __modules__._vec.vecAng2;\r\nvecDot = __modules__._vec.vecDot;\r\nvecCross = __modules__._vec.vecCross;\r\nvecEqual = __modules__._vec.vecEqual;\r\nradToDeg = __modules__._conversion.radToDeg;\r\ndegToRad = __modules__._conversion.degToRad;\r\nrand = __modules__._rand.rand;\r\nrandInt = __modules__._rand.randInt;\r\nrandPick = __modules__._rand.randPick;\r\n`"},{"id":1995,"name":"_parameterTypes","kind":2097152,"kindString":"Object literal","flags":{"isExported":true,"isConst":true},"children":[{"id":2003,"name":"addData","kind":32,"kindString":"Variable","flags":{"isExported":true},"sources":[{"fileName":"app/core/modules/_parameterTypes.ts","line":14,"character":11}],"type":{"type":"intrinsic","name":"string"},"defaultValue":"\"_model.addGiData\""},{"id":1996,"name":"constList","kind":32,"kindString":"Variable","flags":{"isExported":true},"sources":[{"fileName":"app/core/modules/_parameterTypes.ts","line":4,"character":13}],"type":{"type":"intrinsic","name":"string"},"defaultValue":"\"__constList__\""},{"id":2007,"name":"getattrib","kind":32,"kindString":"Variable","flags":{"isExported":true},"sources":[{"fileName":"app/core/modules/_parameterTypes.ts","line":20,"character":13}],"type":{"type":"intrinsic","name":"string"},"defaultValue":"\"_model.__getAttrib__\""},{"id":1998,"name":"input","kind":32,"kindString":"Variable","flags":{"isExported":true},"sources":[{"fileName":"app/core/modules/_parameterTypes.ts","line":6,"character":9}],"type":{"type":"intrinsic","name":"string"},"defaultValue":"\"__input__\""},{"id":2001,"name":"merge","kind":32,"kindString":"Variable","flags":{"isExported":true},"sources":[{"fileName":"app/core/modules/_parameterTypes.ts","line":11,"character":9}],"type":{"type":"intrinsic","name":"string"},"defaultValue":"\"_model.__merge__\""},{"id":2002,"name":"mergeFn","kind":32,"kindString":"Variable","flags":{"isExported":true},"sources":[{"fileName":"app/core/modules/_parameterTypes.ts","line":12,"character":11}],"type":{"type":"reference","name":"__merge__","id":1362},"defaultValue":" __merge__"},{"id":1997,"name":"model","kind":32,"kindString":"Variable","flags":{"isExported":true},"sources":[{"fileName":"app/core/modules/_parameterTypes.ts","line":5,"character":9}],"type":{"type":"intrinsic","name":"string"},"defaultValue":"\"__model__\""},{"id":1999,"name":"new","kind":32,"kindString":"Variable","flags":{"isExported":true},"sources":[{"fileName":"app/core/modules/_parameterTypes.ts","line":8,"character":7}],"type":{"type":"intrinsic","name":"string"},"defaultValue":"\"_model.__new__\""},{"id":2000,"name":"newFn","kind":32,"kindString":"Variable","flags":{"isExported":true},"sources":[{"fileName":"app/core/modules/_parameterTypes.ts","line":9,"character":9}],"type":{"type":"reference","name":"__new__","id":1354},"defaultValue":" __new__"},{"id":2005,"name":"postprocess","kind":32,"kindString":"Variable","flags":{"isExported":true},"sources":[{"fileName":"app/core/modules/_parameterTypes.ts","line":17,"character":15}],"type":{"type":"intrinsic","name":"string"},"defaultValue":"\"_model.__postprocess__\""},{"id":2004,"name":"preprocess","kind":32,"kindString":"Variable","flags":{"isExported":true},"sources":[{"fileName":"app/core/modules/_parameterTypes.ts","line":16,"character":14}],"type":{"type":"intrinsic","name":"string"},"defaultValue":"\"_model.__preprocess__\""},{"id":2008,"name":"return","kind":32,"kindString":"Variable","flags":{"isExported":true},"sources":[{"fileName":"app/core/modules/_parameterTypes.ts","line":22,"character":10}],"type":{"type":"intrinsic","name":"string"},"defaultValue":"\"_Output.Return\""},{"id":2006,"name":"setattrib","kind":32,"kindString":"Variable","flags":{"isExported":true},"sources":[{"fileName":"app/core/modules/_parameterTypes.ts","line":19,"character":13}],"type":{"type":"intrinsic","name":"string"},"defaultValue":"\"_model.__setAttrib__\""}],"groups":[{"title":"Variables","kind":32,"children":[2003,1996,2007,1998,2001,2002,1997,1999,2000,2005,2004,2008,2006]}],"sources":[{"fileName":"app/core/modules/_parameterTypes.ts","line":3,"character":28}],"type":{"type":"intrinsic","name":"object"}}],"groups":[{"title":"Variables","kind":32,"children":[2009]},{"title":"Object literals","kind":2097152,"children":[1995]}],"sources":[{"fileName":"app/core/modules/_parameterTypes.ts","line":1,"character":0}]},{"id":1930,"name":"\"app/core/modules/_rand\"","kind":1,"kindString":"External module","flags":{"isExported":true},"originalName":"C:/Dropbox/Files/Software/GitHub/design-automation/mobius-parametric-modeller/src/app/core/modules/_rand.ts","children":[{"id":1931,"name":"rand","kind":64,"kindString":"Function","flags":{"isExported":true},"signatures":[{"id":1932,"name":"rand","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1933,"name":"min","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":1934,"name":"max","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"number"}}],"sources":[{"fileName":"app/core/modules/_rand.ts","line":3,"character":20}]},{"id":1935,"name":"randInt","kind":64,"kindString":"Function","flags":{"isExported":true},"signatures":[{"id":1936,"name":"randInt","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1937,"name":"min","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":1938,"name":"max","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"number"}}],"sources":[{"fileName":"app/core/modules/_rand.ts","line":6,"character":23}]},{"id":1939,"name":"randPick","kind":64,"kindString":"Function","flags":{"isExported":true},"signatures":[{"id":1940,"name":"randPick","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1941,"name":"list","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}},{"id":1942,"name":"num","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"number"}}],"sources":[{"fileName":"app/core/modules/_rand.ts","line":9,"character":24}]}],"groups":[{"title":"Functions","kind":64,"children":[1931,1935,1939]}],"sources":[{"fileName":"app/core/modules/_rand.ts","line":1,"character":0}]},{"id":1943,"name":"\"app/core/modules/_vec\"","kind":1,"kindString":"External module","flags":{"isExported":true},"originalName":"C:/Dropbox/Files/Software/GitHub/design-automation/mobius-parametric-modeller/src/app/core/modules/_vec.ts","children":[{"id":1944,"name":"vecAdd","kind":32,"kindString":"Variable","flags":{"isExported":true,"isConst":true},"sources":[{"fileName":"app/core/modules/_vec.ts","line":3,"character":19}],"type":{"type":"reference","name":"vecAdd","id":760},"defaultValue":" vec.vecAdd"},{"id":1953,"name":"vecAng","kind":32,"kindString":"Variable","flags":{"isExported":true,"isConst":true},"sources":[{"fileName":"app/core/modules/_vec.ts","line":12,"character":19}],"type":{"type":"reference","name":"vecAng","id":789},"defaultValue":" vec.vecAng"},{"id":1954,"name":"vecAng2","kind":32,"kindString":"Variable","flags":{"isExported":true,"isConst":true},"sources":[{"fileName":"app/core/modules/_vec.ts","line":13,"character":20}],"type":{"type":"reference","name":"vecAng2","id":793},"defaultValue":" vec.vecAng2"},{"id":1956,"name":"vecCross","kind":32,"kindString":"Variable","flags":{"isExported":true,"isConst":true},"sources":[{"fileName":"app/core/modules/_vec.ts","line":15,"character":21}],"type":{"type":"reference","name":"vecCross","id":777},"defaultValue":" vec.vecCross"},{"id":1946,"name":"vecDiv","kind":32,"kindString":"Variable","flags":{"isExported":true,"isConst":true},"sources":[{"fileName":"app/core/modules/_vec.ts","line":5,"character":19}],"type":{"type":"reference","name":"vecDiv","id":769},"defaultValue":" vec.vecDiv"},{"id":1955,"name":"vecDot","kind":32,"kindString":"Variable","flags":{"isExported":true,"isConst":true},"sources":[{"fileName":"app/core/modules/_vec.ts","line":14,"character":19}],"type":{"type":"reference","name":"vecDot","id":782},"defaultValue":" vec.vecDot"},{"id":1957,"name":"vecEqual","kind":32,"kindString":"Variable","flags":{"isExported":true,"isConst":true},"sources":[{"fileName":"app/core/modules/_vec.ts","line":16,"character":21}],"type":{"type":"reference","name":"vecEqual","id":750},"defaultValue":" vec.vecEqual"},{"id":1952,"name":"vecFromTo","kind":32,"kindString":"Variable","flags":{"isExported":true,"isConst":true},"sources":[{"fileName":"app/core/modules/_vec.ts","line":11,"character":22}],"type":{"type":"reference","name":"vecFromTo","id":808},"defaultValue":" vec.vecFromTo"},{"id":1948,"name":"vecLen","kind":32,"kindString":"Variable","flags":{"isExported":true,"isConst":true},"sources":[{"fileName":"app/core/modules/_vec.ts","line":7,"character":19}],"type":{"type":"reference","name":"vecLen","id":798},"defaultValue":" vec.vecLen"},{"id":1947,"name":"vecMult","kind":32,"kindString":"Variable","flags":{"isExported":true,"isConst":true},"sources":[{"fileName":"app/core/modules/_vec.ts","line":6,"character":20}],"type":{"type":"reference","name":"vecMult","id":773},"defaultValue":" vec.vecMult"},{"id":1950,"name":"vecNorm","kind":32,"kindString":"Variable","flags":{"isExported":true,"isConst":true},"sources":[{"fileName":"app/core/modules/_vec.ts","line":9,"character":20}],"type":{"type":"reference","name":"vecNorm","id":786},"defaultValue":" vec.vecNorm"},{"id":1951,"name":"vecRev","kind":32,"kindString":"Variable","flags":{"isExported":true,"isConst":true},"sources":[{"fileName":"app/core/modules/_vec.ts","line":10,"character":19}],"type":{"type":"reference","name":"vecRev","id":805},"defaultValue":" vec.vecRev"},{"id":1949,"name":"vecSetLen","kind":32,"kindString":"Variable","flags":{"isExported":true,"isConst":true},"sources":[{"fileName":"app/core/modules/_vec.ts","line":8,"character":22}],"type":{"type":"reference","name":"vecSetLen","id":801},"defaultValue":" vec.vecSetLen"},{"id":1945,"name":"vecSub","kind":32,"kindString":"Variable","flags":{"isExported":true,"isConst":true},"sources":[{"fileName":"app/core/modules/_vec.ts","line":4,"character":19}],"type":{"type":"reference","name":"vecSub","id":755},"defaultValue":" vec.vecSub"}],"groups":[{"title":"Variables","kind":32,"children":[1944,1953,1954,1956,1946,1955,1957,1952,1948,1947,1950,1951,1949,1945]}],"sources":[{"fileName":"app/core/modules/_vec.ts","line":1,"character":0}]},{"id":1295,"name":"\"app/core/modules/calc\"","kind":1,"kindString":"External module","flags":{"isExported":true},"originalName":"C:/Dropbox/Files/Software/GitHub/design-automation/mobius-parametric-modeller/src/app/core/modules/calc.ts","children":[{"id":1296,"name":"_EDistanceMethod","kind":4,"kindString":"Enumeration","flags":{"isExported":true},"children":[{"id":1298,"name":"MIN_DISTANCE","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"app/core/modules/calc.ts","line":14,"character":16}],"defaultValue":"\"min_distance\""},{"id":1297,"name":"P_P_DISTANCE","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"app/core/modules/calc.ts","line":13,"character":16}],"defaultValue":"\"p_to_p_distance\""}],"groups":[{"title":"Enumeration members","kind":16,"children":[1298,1297]}],"sources":[{"fileName":"app/core/modules/calc.ts","line":12,"character":28}]},{"id":1319,"name":"Area","kind":64,"kindString":"Function","flags":{"isExported":true},"signatures":[{"id":1320,"name":"Area","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Calculates the area of a surface or a list of surfaces.\nTODO: allow for a list of surfaces","returns":"Area.","tags":[{"tag":"example","text":"area1 = calc.Area (surface1)\n"}]},"parameters":[{"id":1321,"name":"__model__","kind":32768,"kindString":"Parameter","flags":{},"comment":{},"type":{"type":"reference","name":"GIModel","id":1047}},{"id":1322,"name":"entities","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"A polygon, a face, a closed polyline, or a closed wire."},"type":{"type":"reference","name":"TId","id":212}}],"type":{"type":"intrinsic","name":"number"}}],"sources":[{"fileName":"app/core/modules/calc.ts","line":105,"character":20}]},{"id":1331,"name":"Centroid","kind":64,"kindString":"Function","flags":{"isExported":true},"signatures":[{"id":1332,"name":"Centroid","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Calculates the centroid of a list of any entity.","returns":"Centroid.","tags":[{"tag":"example","text":"centroid1 = calc.Centroid (polygon1)\n"}]},"parameters":[{"id":1333,"name":"__model__","kind":32768,"kindString":"Parameter","flags":{},"comment":{},"type":{"type":"reference","name":"GIModel","id":1047}},{"id":1334,"name":"entities","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"List of positions, vertices, points, edges, wires, polylines, faces, polygons, or collections."},"type":{"type":"union","types":[{"type":"reference","name":"TId","id":212},{"type":"array","elementType":{"type":"reference","name":"TId","id":212}}]}}],"type":{"type":"reference","name":"Txyz","id":216}}],"sources":[{"fileName":"app/core/modules/calc.ts","line":181,"character":24}]},{"id":1309,"name":"Distance","kind":64,"kindString":"Function","flags":{"isExported":true},"signatures":[{"id":1310,"name":"Distance","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Calculates the distance between two positions.","returns":"Distance, or list of distances (if position2 is a list).","tags":[{"tag":"example","text":"distance1 = calc.Distance (position1, position2, p_to_p_distance)"},{"tag":"example_info","text":"position1 = [0,0,0], position2 = [[0,0,10],[0,0,20]]\nExpected value of distance is [10,20].\n"}]},"parameters":[{"id":1311,"name":"__model__","kind":32768,"kindString":"Parameter","flags":{},"comment":{},"type":{"type":"reference","name":"GIModel","id":1047}},{"id":1312,"name":"position1","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"First position."},"type":{"type":"reference","name":"TId","id":212}},{"id":1313,"name":"position2","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"Second position, or list of positions."},"type":{"type":"union","types":[{"type":"reference","name":"TId","id":212},{"type":"array","elementType":{"type":"reference","name":"TId","id":212}}]}},{"id":1314,"name":"method","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"Enum; distance or min_distance."},"type":{"type":"reference","name":"_EDistanceMethod","id":1296}}],"type":{"type":"union","types":[{"type":"intrinsic","name":"number"},{"type":"array","elementType":{"type":"intrinsic","name":"number"}}]}}],"sources":[{"fileName":"app/core/modules/calc.ts","line":46,"character":24}]},{"id":1315,"name":"Length","kind":64,"kindString":"Function","flags":{"isExported":true},"signatures":[{"id":1316,"name":"Length","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Calculates the length of a line or a list of lines.","returns":"Length.","tags":[{"tag":"example","text":"length1 = calc.Length (line1)\n"}]},"parameters":[{"id":1317,"name":"__model__","kind":32768,"kindString":"Parameter","flags":{},"comment":{},"type":{"type":"reference","name":"GIModel","id":1047}},{"id":1318,"name":"lines","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"Edge, wire or polyline."},"type":{"type":"union","types":[{"type":"reference","name":"TId","id":212},{"type":"array","elementType":{"type":"reference","name":"TId","id":212}}]}}],"type":{"type":"intrinsic","name":"number"}}],"sources":[{"fileName":"app/core/modules/calc.ts","line":66,"character":22}]},{"id":1339,"name":"Normal","kind":64,"kindString":"Function","flags":{"isExported":true},"signatures":[{"id":1340,"name":"Normal","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Calculates the normal of a list of positions, a polygon, a face, a closed polyline, a closed wire, or a plane..","returns":"Vector.","tags":[{"tag":"example","text":"normal1 = calc.Normal (polygon1)"},{"tag":"example_info","text":"If the input is non-planar, the output vector will be an average of all normal vector of the triangulated surfaces.\n"}]},"parameters":[{"id":1341,"name":"__model__","kind":32768,"kindString":"Parameter","flags":{},"comment":{},"type":{"type":"reference","name":"GIModel","id":1047}},{"id":1342,"name":"entities","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"List of positions, a polygon, a face, a closed polyline, a closed wire, or a plane."},"type":{"type":"union","types":[{"type":"reference","name":"TId","id":212},{"type":"array","elementType":{"type":"reference","name":"TId","id":212}}]}}],"type":{"type":"union","types":[{"type":"reference","name":"Txyz","id":216},{"type":"array","elementType":{"type":"reference","name":"Txyz","id":216}}]}}],"sources":[{"fileName":"app/core/modules/calc.ts","line":251,"character":22}]},{"id":1343,"name":"ParamTToXyz","kind":64,"kindString":"Function","flags":{"isExported":true},"signatures":[{"id":1344,"name":"ParamTToXyz","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Calculates the position on a linear entity, given a t parameter.","returns":"Set of XYZ coordinates.","tags":[{"tag":"example","text":"coord1 = calc.ParamTToXyz (polyline1, 0.23)\n"}]},"parameters":[{"id":1345,"name":"__model__","kind":32768,"kindString":"Parameter","flags":{},"comment":{},"type":{"type":"reference","name":"GIModel","id":1047}},{"id":1346,"name":"line","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"Edge, wire, or polyline."},"type":{"type":"reference","name":"TId","id":212}},{"id":1347,"name":"t_param","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"A value between 0 to 1."},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"union","types":[{"type":"reference","name":"Txyz","id":216},{"type":"array","elementType":{"type":"reference","name":"Txyz","id":216}}]}}],"sources":[{"fileName":"app/core/modules/calc.ts","line":268,"character":27}]},{"id":1348,"name":"ParamXyzToT","kind":64,"kindString":"Function","flags":{"isExported":true},"signatures":[{"id":1349,"name":"ParamXyzToT","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Calculates a location on a line to get t parameter.","tags":[{"tag":"example","text":"coord1 = calc.ParamXyzToT (polyline1, [1,2,3])\n"}]},"parameters":[{"id":1350,"name":"__model__","kind":32768,"kindString":"Parameter","flags":{},"comment":{},"type":{"type":"reference","name":"GIModel","id":1047}},{"id":1351,"name":"lines","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"List of edges, wires, or polylines."},"type":{"type":"union","types":[{"type":"reference","name":"TId","id":212},{"type":"array","elementType":{"type":"reference","name":"TId","id":212}}]}},{"id":1352,"name":"locations","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"List of positions, vertices, points, or coordinates."},"type":{"type":"union","types":[{"type":"reference","name":"TId","id":212},{"type":"array","elementType":{"type":"reference","name":"TId","id":212}},{"type":"reference","name":"Txyz","id":216},{"type":"array","elementType":{"type":"reference","name":"Txyz","id":216}}]}}],"type":{"type":"union","types":[{"type":"intrinsic","name":"number"},{"type":"array","elementType":{"type":"intrinsic","name":"number"}}]}}],"sources":[{"fileName":"app/core/modules/calc.ts","line":328,"character":27}]},{"id":1323,"name":"Vector","kind":64,"kindString":"Function","flags":{"isExported":true},"signatures":[{"id":1324,"name":"Vector","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Returns a vector along an edge.","returns":"The vector from the start point of an edge to the end point of an edge\n"},"parameters":[{"id":1325,"name":"__model__","kind":32768,"kindString":"Parameter","flags":{},"comment":{},"type":{"type":"reference","name":"GIModel","id":1047}},{"id":1326,"name":"edge","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"An edge"},"type":{"type":"reference","name":"TId","id":212}}],"type":{"type":"reference","name":"Txyz","id":216}}],"sources":[{"fileName":"app/core/modules/calc.ts","line":154,"character":22}]},{"id":1327,"name":"_centroid","kind":64,"kindString":"Function","flags":{},"signatures":[{"id":1328,"name":"_centroid","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1329,"name":"__model__","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"GIModel","id":1047}},{"id":1330,"name":"ents_arr","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"array","elementType":{"type":"reference","name":"TEntTypeIdx","id":208}}}],"type":{"type":"reference","name":"Txyz","id":216}}],"sources":[{"fileName":"app/core/modules/calc.ts","line":165,"character":18}]},{"id":1299,"name":"_distanceMin","kind":64,"kindString":"Function","flags":{},"signatures":[{"id":1300,"name":"_distanceMin","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1301,"name":"__model__","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"GIModel","id":1047}},{"id":1302,"name":"ent_arr1","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"TEntTypeIdx","id":208}},{"id":1303,"name":"ents_arr2","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"union","types":[{"type":"reference","name":"TEntTypeIdx","id":208},{"type":"array","elementType":{"type":"reference","name":"TEntTypeIdx","id":208}}]}}],"type":{"type":"union","types":[{"type":"intrinsic","name":"number"},{"type":"array","elementType":{"type":"intrinsic","name":"number"}}]}}],"sources":[{"fileName":"app/core/modules/calc.ts","line":16,"character":21}]},{"id":1304,"name":"_distancePtoP","kind":64,"kindString":"Function","flags":{},"signatures":[{"id":1305,"name":"_distancePtoP","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1306,"name":"__model__","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"GIModel","id":1047}},{"id":1307,"name":"ent_arr1","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"TEntTypeIdx","id":208}},{"id":1308,"name":"ents_arr2","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"union","types":[{"type":"reference","name":"TEntTypeIdx","id":208},{"type":"array","elementType":{"type":"reference","name":"TEntTypeIdx","id":208}}]}}],"type":{"type":"union","types":[{"type":"intrinsic","name":"number"},{"type":"array","elementType":{"type":"intrinsic","name":"number"}}]}}],"sources":[{"fileName":"app/core/modules/calc.ts","line":24,"character":22}]},{"id":1335,"name":"_normal","kind":64,"kindString":"Function","flags":{"isExported":true},"signatures":[{"id":1336,"name":"_normal","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1337,"name":"__model__","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"GIModel","id":1047}},{"id":1338,"name":"ents_arr","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"union","types":[{"type":"reference","name":"TEntTypeIdx","id":208},{"type":"array","elementType":{"type":"reference","name":"TEntTypeIdx","id":208}}]}}],"type":{"type":"union","types":[{"type":"reference","name":"Txyz","id":216},{"type":"array","elementType":{"type":"reference","name":"Txyz","id":216}}]}}],"sources":[{"fileName":"app/core/modules/calc.ts","line":191,"character":23}]}],"groups":[{"title":"Enumerations","kind":4,"children":[1296]},{"title":"Functions","kind":64,"children":[1319,1331,1309,1315,1339,1343,1348,1323,1327,1299,1304,1335]}],"sources":[{"fileName":"app/core/modules/calc.ts","line":1,"character":0}]},{"id":2010,"name":"\"app/core/modules/index\"","kind":1,"kindString":"External module","flags":{"isExported":true},"originalName":"C:/Dropbox/Files/Software/GitHub/design-automation/mobius-parametric-modeller/src/app/core/modules/index.ts","sources":[{"fileName":"app/core/modules/index.ts","line":1,"character":0}]},{"id":1711,"name":"\"app/core/modules/isect\"","kind":1,"kindString":"External module","flags":{"isExported":true},"originalName":"C:/Dropbox/Files/Software/GitHub/design-automation/mobius-parametric-modeller/src/app/core/modules/isect.ts","children":[{"id":1712,"name":"_EKnifeKeep","kind":4,"kindString":"Enumeration","flags":{"isExported":true},"children":[{"id":1713,"name":"KEEP_ABOVE","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"app/core/modules/isect.ts","line":25,"character":14}],"defaultValue":"\"keep above the plane\""},{"id":1715,"name":"KEEP_ALL","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"app/core/modules/isect.ts","line":27,"character":12}],"defaultValue":"\"keep all\""},{"id":1714,"name":"KEEP_BELOW","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"app/core/modules/isect.ts","line":26,"character":14}],"defaultValue":"\"keep below the plane\""}],"groups":[{"title":"Enumeration members","kind":16,"children":[1713,1715,1714]}],"sources":[{"fileName":"app/core/modules/isect.ts","line":24,"character":23}]},{"id":1716,"name":"Intersect","kind":64,"kindString":"Function","flags":{"isExported":true},"signatures":[{"id":1717,"name":"Intersect","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Adds positions by intersecting polylines, planes, and polygons.","returns":"List of positions.","tags":[{"tag":"example","text":"intersect1 = isect.Intersect (object1, object2)"},{"tag":"example_info","text":"Returns a list of positions at the intersections between both objects.\n"}]},"parameters":[{"id":1718,"name":"__model__","kind":32768,"kindString":"Parameter","flags":{},"comment":{},"type":{"type":"reference","name":"GIModel","id":1047}},{"id":1719,"name":"entities1","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"First polyline, plane, face, or polygon."},"type":{"type":"reference","name":"TId","id":212}},{"id":1720,"name":"entities2","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"Second polyline, plane face, or polygon."},"type":{"type":"reference","name":"TId","id":212}}],"type":{"type":"array","elementType":{"type":"reference","name":"TId","id":212}}}],"sources":[{"fileName":"app/core/modules/isect.ts","line":15,"character":25}]},{"id":1721,"name":"Knife","kind":64,"kindString":"Function","flags":{"isExported":true},"signatures":[{"id":1722,"name":"Knife","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Separates a list of points, polylines or polygons into two lists with a plane.","returns":"List, or list of two lists, of points, polylines or polygons.","tags":[{"tag":"example","text":"knife1 = isect.Knife ([p1,p2,p3,p4,p5], plane1, keepabove)"},{"tag":"example_info","text":"Returns [[p1,p2,p3],[p4,p5]] if p1, p2, p3 are points above the plane and p4, p5 are points below the plane.\n"}]},"parameters":[{"id":1723,"name":"__model__","kind":32768,"kindString":"Parameter","flags":{},"comment":{},"type":{"type":"reference","name":"GIModel","id":1047}},{"id":1724,"name":"geometry","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"List of points, polylines or polygons."},"type":{"type":"array","elementType":{"type":"reference","name":"TId","id":212}}},{"id":1725,"name":"plane","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"Knife."},"type":{"type":"reference","name":"TPlane","id":210}},{"id":1726,"name":"keep","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"Keep above, keep below, or keep both lists of separated points, polylines or polygons."},"type":{"type":"reference","name":"_EKnifeKeep","id":1712}}],"type":{"type":"array","elementType":{"type":"reference","name":"TId","id":212}}}],"sources":[{"fileName":"app/core/modules/isect.ts","line":39,"character":21}]},{"id":1727,"name":"Split","kind":64,"kindString":"Function","flags":{"isExported":true},"signatures":[{"id":1728,"name":"Split","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Splits a polyline or polygon with a polyline.","returns":"List of two lists containing polylines or polygons.","tags":[{"tag":"example","text":"splitresult = isect.Split (pl1, pl2)"},{"tag":"example_info","text":"Returns [[pl1A],[pl1B]], where pl1A and pl1B are polylines resulting from the split occurring where pl1 and pl2 intersect.\n"}]},"parameters":[{"id":1729,"name":"__model__","kind":32768,"kindString":"Parameter","flags":{},"comment":{},"type":{"type":"reference","name":"GIModel","id":1047}},{"id":1730,"name":"geometry","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"A list of polylines or polygons to be split."},"type":{"type":"array","elementType":{"type":"reference","name":"TId","id":212}}},{"id":1731,"name":"polyline","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"Splitter."},"type":{"type":"reference","name":"TId","id":212}}],"type":{"type":"array","elementType":{"type":"reference","name":"TId","id":212}}}],"sources":[{"fileName":"app/core/modules/isect.ts","line":56,"character":21}]}],"groups":[{"title":"Enumerations","kind":4,"children":[1712]},{"title":"Functions","kind":64,"children":[1716,1721,1727]}],"sources":[{"fileName":"app/core/modules/isect.ts","line":1,"character":0}]},{"id":1828,"name":"\"app/core/modules/list\"","kind":1,"kindString":"External module","flags":{"isExported":true},"originalName":"C:/Dropbox/Files/Software/GitHub/design-automation/mobius-parametric-modeller/src/app/core/modules/list.ts","children":[{"id":1832,"name":"_EAppendMethod","kind":4,"kindString":"Enumeration","flags":{"isExported":true},"comment":{"shortText":"================================================================================================\nlist functions that modify the original input list. Return void."},"children":[{"id":1834,"name":"TO_END","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"app/core/modules/list.ts","line":159,"character":10}],"defaultValue":"\"to_end\""},{"id":1833,"name":"TO_START","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"app/core/modules/list.ts","line":158,"character":12}],"defaultValue":"\"to_start\""}],"groups":[{"title":"Enumeration members","kind":16,"children":[1834,1833]}],"sources":[{"fileName":"app/core/modules/list.ts","line":157,"character":26}]},{"id":1829,"name":"_EIndexOfMethod","kind":4,"kindString":"Enumeration","flags":{"isExported":true},"comment":{"shortText":"================================================================================================\nlist functions that obtain and return information from an input list. Does not modify input list."},"children":[{"id":1830,"name":"SEARCH_ALL","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"app/core/modules/list.ts","line":9,"character":14}],"defaultValue":"\"search_all\""},{"id":1831,"name":"SEARCH_FIRST","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"app/core/modules/list.ts","line":10,"character":16}],"defaultValue":"\"search_first\""}],"groups":[{"title":"Enumeration members","kind":16,"children":[1830,1831]}],"sources":[{"fileName":"app/core/modules/list.ts","line":8,"character":27}]},{"id":1835,"name":"_ERemoveValueMethod","kind":4,"kindString":"Enumeration","flags":{"isExported":true},"children":[{"id":1836,"name":"REMOVE_ALL","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"app/core/modules/list.ts","line":202,"character":14}],"defaultValue":"\"remove_all\""},{"id":1837,"name":"REMOVE_FIRST","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"app/core/modules/list.ts","line":203,"character":16}],"defaultValue":"\"remove_first\""}],"groups":[{"title":"Enumeration members","kind":16,"children":[1836,1837]}],"sources":[{"fileName":"app/core/modules/list.ts","line":201,"character":31}]},{"id":1838,"name":"_EReplaceValueMethod","kind":4,"kindString":"Enumeration","flags":{"isExported":true},"children":[{"id":1839,"name":"REPLACE_ALL","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"app/core/modules/list.ts","line":232,"character":15}],"defaultValue":"\"replace_all\""},{"id":1840,"name":"REPLACE_FIRST","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"app/core/modules/list.ts","line":233,"character":17}],"defaultValue":"\"replace_first\""}],"groups":[{"title":"Enumeration members","kind":16,"children":[1839,1840]}],"sources":[{"fileName":"app/core/modules/list.ts","line":231,"character":32}]},{"id":1841,"name":"_ESortMethod","kind":4,"kindString":"Enumeration","flags":{"isExported":true},"children":[{"id":1842,"name":"ALPHA","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"app/core/modules/list.ts","line":279,"character":11}],"defaultValue":"\"alpha_descending\""},{"id":1844,"name":"NUM","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"app/core/modules/list.ts","line":281,"character":9}],"defaultValue":"\"numeric_descending\""},{"id":1848,"name":"RANDOM","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"app/core/modules/list.ts","line":285,"character":12}],"defaultValue":"\"random\""},{"id":1843,"name":"REV_ALPHA","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"app/core/modules/list.ts","line":280,"character":15}],"defaultValue":"\"alpha_ascending\""},{"id":1845,"name":"REV_NUM","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"app/core/modules/list.ts","line":282,"character":13}],"defaultValue":"\"numeric_ascending\""},{"id":1847,"name":"REV_SHIFT","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"app/core/modules/list.ts","line":284,"character":15}],"defaultValue":"\"reverse_shift_1\""},{"id":1846,"name":"SHIFT","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"app/core/modules/list.ts","line":283,"character":11}],"defaultValue":"\"shift_1\""}],"groups":[{"title":"Enumeration members","kind":16,"children":[1842,1844,1848,1843,1845,1847,1846]}],"sources":[{"fileName":"app/core/modules/list.ts","line":278,"character":24}]},{"id":1876,"name":"Append","kind":64,"kindString":"Function","flags":{"isExported":true},"signatures":[{"id":1877,"name":"Append","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Adds one value to the end of an list.\nIf value is an list, the entire list will be appended as one value.","tags":[{"tag":"example","text":"append = list.Append(list, 4, 'at_end')"},{"tag":"example_info","text":"where list = [1,2,3]\nExpected value of list is [1,2,3,4].\n"}]},"parameters":[{"id":1878,"name":"list","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"List to add to."},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}},{"id":1879,"name":"value","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"Item to add."},"type":{"type":"intrinsic","name":"any"}},{"id":1880,"name":"method","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"Enum, append to start or end."},"type":{"type":"reference","name":"_EAppendMethod","id":1832}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"app/core/modules/list.ts","line":172,"character":22}]},{"id":1861,"name":"Concat","kind":64,"kindString":"Function","flags":{"isExported":true},"signatures":[{"id":1862,"name":"Concat","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Creates a new list by combining two lists into a new list.","returns":"Combined list (list1 first, followed by list2).","tags":[{"tag":"example","text":"newlist = list.Concat(list1,list2)"},{"tag":"example_info","text":"where list1 = [1,2,3]\nand list2 = [9,0]\nExpected value of newlist is [1,2,3,9,0].\n"}]},"parameters":[{"id":1863,"name":"list1","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"First list."},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}},{"id":1864,"name":"list2","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"Second list."},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"sources":[{"fileName":"app/core/modules/list.ts","line":103,"character":22}]},{"id":1858,"name":"Copy","kind":64,"kindString":"Function","flags":{"isExported":true},"signatures":[{"id":1859,"name":"Copy","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Creates a new list by creating a new list by making a copy of an existing list.","returns":"New duplicated list.","tags":[{"tag":"example","text":"copy1 = list.Copy(list)"},{"tag":"example_info","text":"where list = [1,2,3]\nExpected value of copy is [1,2,3].\n"}]},"parameters":[{"id":1860,"name":"list","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"List to copy."},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"sources":[{"fileName":"app/core/modules/list.ts","line":86,"character":20}]},{"id":1865,"name":"Flatten","kind":64,"kindString":"Function","flags":{"isExported":true},"signatures":[{"id":1866,"name":"Flatten","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Creates a new list by flattening an n-dimensional list into a one-dimensional list.","returns":"Flattened list.","tags":[{"tag":"example","text":"flatten = list.Flatten(list)"},{"tag":"example_info","text":"where list = [1,2,3,[4,5]]\nExpected value of flatten is [1,2,3,4,5].\n"}]},"parameters":[{"id":1867,"name":"list","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"List to flatten."},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"sources":[{"fileName":"app/core/modules/list.ts","line":120,"character":23}]},{"id":1854,"name":"Includes","kind":64,"kindString":"Function","flags":{"isExported":true},"signatures":[{"id":1855,"name":"Includes","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Searches for a value in an list and returns true if found.\nItems must match both the value and type of specified value.","text":"Returns false if no values in list match specified value.\n","returns":"Returns true if value can be found in list, false if value cannot be found.","tags":[{"tag":"example","text":"exists = list.Includes(list,2)"},{"tag":"example_info","text":"where list = [6,2,2,7]\nExpected value of exists is true.\n"}]},"parameters":[{"id":1856,"name":"list","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"List."},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}},{"id":1857,"name":"value","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"Value to search for."},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"boolean"}}],"sources":[{"fileName":"app/core/modules/list.ts","line":60,"character":24}]},{"id":1849,"name":"IndexOf","kind":64,"kindString":"Function","flags":{"isExported":true},"signatures":[{"id":1850,"name":"IndexOf","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Searches for a value in a list and returns the index position if found.\nItems must match both the value and type of specified value.","text":"Returns -1 if no values in list match specified value.\n","returns":"Index position or list of index positions containing specified value.","tags":[{"tag":"example","text":"positions = list.IndexOf(list,2,true)"},{"tag":"example_info","text":"where list = [6,2,2,7]\nExpected value of positions is [1,2].\n"}]},"parameters":[{"id":1851,"name":"list","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"List."},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}},{"id":1852,"name":"value","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"Value to search for."},"type":{"type":"intrinsic","name":"any"}},{"id":1853,"name":"method","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"Enum, specifies whether to search all occurances or only the first."},"type":{"type":"reference","name":"_EIndexOfMethod","id":1829}}],"type":{"type":"union","types":[{"type":"intrinsic","name":"number"},{"type":"array","elementType":{"type":"intrinsic","name":"number"}}]}}],"sources":[{"fileName":"app/core/modules/list.ts","line":26,"character":23}]},{"id":1881,"name":"RemoveIndex","kind":64,"kindString":"Function","flags":{"isExported":true},"signatures":[{"id":1882,"name":"RemoveIndex","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Removes the value at the specified index from a list.","tags":[{"tag":"example","text":"remove = list.RemoveIndex(list,1)"},{"tag":"example_info","text":"where list = [1,2,3]\nExpected value of remove is [1,3].\n"}]},"parameters":[{"id":1883,"name":"list","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"List to remove value from."},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}},{"id":1884,"name":"index","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"Zero-based index number of value to remove."},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"app/core/modules/list.ts","line":193,"character":27}]},{"id":1885,"name":"RemoveValue","kind":64,"kindString":"Function","flags":{"isExported":true},"signatures":[{"id":1886,"name":"RemoveValue","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Removes values that matches specified value from a list.\nItems must match both the value and type of specified value.","text":"Returns original list if no values in list match specified value.\n","tags":[{"tag":"example","text":"remove = list.RemoveValue(list,2,'remove_all')"},{"tag":"example_info","text":"where list = [1,2,2,3]\nExpected value of remove is [1,3].\n"}]},"parameters":[{"id":1887,"name":"list","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"List to remove value from."},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}},{"id":1888,"name":"value","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"Value to search for."},"type":{"type":"intrinsic","name":"any"}},{"id":1889,"name":"method","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"Enum; specifies whether to remove all occurances or only the first."},"type":{"type":"reference","name":"_ERemoveValueMethod","id":1835}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"app/core/modules/list.ts","line":218,"character":27}]},{"id":1890,"name":"ReplaceValue","kind":64,"kindString":"Function","flags":{"isExported":true},"signatures":[{"id":1891,"name":"ReplaceValue","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Replaces values that matches specified value from an list with a new value\nItems must match both the value and type of specified value","text":"Returns original list if no value in list matches specified value.\n","tags":[{"tag":"example","text":"replace = list.ReplaceValue(list,2,9,'replace_all')"},{"tag":"example_info","text":"where list = [1,2,2,3]\nExpected value of replace is [1,9,9,3].\n"}]},"parameters":[{"id":1892,"name":"list","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"List to remove value from."},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}},{"id":1893,"name":"value1","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"Value to search for."},"type":{"type":"intrinsic","name":"any"}},{"id":1894,"name":"value2","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"Value to replace existing value with."},"type":{"type":"intrinsic","name":"any"}},{"id":1895,"name":"method","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"Enum; specifies whether to replace all occurances or only the first."},"type":{"type":"reference","name":"_EReplaceValueMethod","id":1838}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"app/core/modules/list.ts","line":249,"character":28}]},{"id":1896,"name":"Reverse","kind":64,"kindString":"Function","flags":{"isExported":true},"signatures":[{"id":1897,"name":"Reverse","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Reverses the order of values in a list and returns a new list.","returns":"New reversed list.","tags":[{"tag":"example","text":"result = list.Reverse(list1)"},{"tag":"example_info","text":"where list1 = [1,2,3]\nExpected value of result is [3,2,1].\n"}]},"parameters":[{"id":1898,"name":"list","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"List to reverse."},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"app/core/modules/list.ts","line":272,"character":23}]},{"id":1871,"name":"Slice","kind":64,"kindString":"Function","flags":{"isExported":true},"signatures":[{"id":1872,"name":"Slice","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Creates a new list by copying a portion of an existing list, from start index to end index (end not included).","returns":"A new list.","tags":[{"tag":"example","text":"result = list.Slice(list,1,3)"},{"tag":"example_info","text":"where list = [1,2,3,4,5]\nExpected value of result is [2,3].\n"}]},"parameters":[{"id":1873,"name":"list","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"List to slice."},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}},{"id":1874,"name":"start","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"Zero-based index at which to begin slicing.\n     A negative index can be used, indicating an offset from the end of the sequence.\n     If start is undefined, slice begins from index 0."},"type":{"type":"intrinsic","name":"number"}},{"id":1875,"name":"end","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"Zero-based index before which to end slicing. Slice extracts up to but not including end.\n     A negative index can be used, indicating an offset from the end of the sequence.\n     If end is undefined, slice extracts through the end of the sequence."},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"sources":[{"fileName":"app/core/modules/list.ts","line":144,"character":21}]},{"id":1899,"name":"Sort","kind":64,"kindString":"Function","flags":{"isExported":true},"signatures":[{"id":1900,"name":"Sort","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Sorts an list of values.","text":"For alphabetical sort, values are sorted according to string Unicode code points\n(character by character, numbers before upper case alphabets, upper case alphabets before lower case alphabets)\n","tags":[{"tag":"example","text":"sort = list.Sort(list, 'alpha')"},{"tag":"example_info","text":"where list = [\"1\",\"2\",\"10\",\"Orange\",\"apple\"]\nExpected value of list is [\"1\",\"10\",\"2\",\"Orange\",\"apple\"]."},{"tag":"example","text":"sort = list.Sort(list, 'numeric')"},{"tag":"example_info","text":"where list = [56,6,48]\nExpected value of list is [6,48,56].\n"}]},"parameters":[{"id":1901,"name":"list","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"List to sort."},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}},{"id":1902,"name":"method","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"Enum; specifies the sort method to use."},"type":{"type":"reference","name":"_ESortMethod","id":1841}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"app/core/modules/list.ts","line":302,"character":20}]},{"id":1903,"name":"Splice","kind":64,"kindString":"Function","flags":{"isExported":true},"signatures":[{"id":1904,"name":"Splice","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Adds and/or removes values to/from a list.","text":"If no values_to_add are specified, then values are only removed.\nIf num_to_remove is 0, then values are only added.\n","tags":[{"tag":"example","text":"result = list.Splice(list1, 1, 3, [2.2, 3.3])"},{"tag":"example_info","text":"where list1 = [10, 20, 30, 40, 50]\nExpected value of result is [10, 2.2, 3.2, 50]. New values were added where the values were removed.\n"}]},"parameters":[{"id":1905,"name":"list","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"List to splice."},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}},{"id":1906,"name":"index","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"Zero-based index at which to add/remove values. (Items are added/removed after specified index)"},"type":{"type":"intrinsic","name":"number"}},{"id":1907,"name":"num_to_remove","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"Number of values to remove."},"type":{"type":"intrinsic","name":"number"}},{"id":1908,"name":"values_to_add","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"List of values to add."},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"app/core/modules/list.ts","line":349,"character":22}]},{"id":1868,"name":"_flattenDeep","kind":64,"kindString":"Function","flags":{},"signatures":[{"id":1869,"name":"_flattenDeep","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1870,"name":"list","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"sources":[{"fileName":"app/core/modules/list.ts","line":126,"character":21}]}],"groups":[{"title":"Enumerations","kind":4,"children":[1832,1829,1835,1838,1841]},{"title":"Functions","kind":64,"children":[1876,1861,1858,1865,1854,1849,1881,1885,1890,1896,1871,1899,1903,1868]}],"sources":[{"fileName":"app/core/modules/list.ts","line":1,"character":0}]},{"id":1461,"name":"\"app/core/modules/make\"","kind":1,"kindString":"External module","flags":{"isExported":true},"originalName":"C:/Dropbox/Files/Software/GitHub/design-automation/mobius-parametric-modeller/src/app/core/modules/make.ts","children":[{"id":1462,"name":"_EClose","kind":4,"kindString":"Enumeration","flags":{"isExported":true},"children":[{"id":1463,"name":"CLOSE","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"app/core/modules/make.ts","line":72,"character":9}],"defaultValue":"\"close\""},{"id":1464,"name":"OPEN","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"app/core/modules/make.ts","line":73,"character":8}],"defaultValue":"\"open\""}],"groups":[{"title":"Enumeration members","kind":16,"children":[1463,1464]}],"sources":[{"fileName":"app/core/modules/make.ts","line":71,"character":19}]},{"id":1465,"name":"_ECopyAttribues","kind":4,"kindString":"Enumeration","flags":{"isExported":true},"children":[{"id":1466,"name":"COPY_ATTRIBUTES","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"app/core/modules/make.ts","line":217,"character":19}],"defaultValue":"\"copy_attributes\""},{"id":1467,"name":"NO_ATTRIBUTES","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"app/core/modules/make.ts","line":218,"character":17}],"defaultValue":"\"no_attributes\""}],"groups":[{"title":"Enumeration members","kind":16,"children":[1466,1467]}],"sources":[{"fileName":"app/core/modules/make.ts","line":216,"character":27}]},{"id":1471,"name":"_EDivideMethod","kind":4,"kindString":"Enumeration","flags":{"isExported":true},"children":[{"id":1473,"name":"BY_LENGTH","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"app/core/modules/make.ts","line":415,"character":13}],"defaultValue":"\"by_length\""},{"id":1472,"name":"BY_NUMBER","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"app/core/modules/make.ts","line":414,"character":13}],"defaultValue":"\"by_number\""}],"groups":[{"title":"Enumeration members","kind":16,"children":[1473,1472]}],"sources":[{"fileName":"app/core/modules/make.ts","line":413,"character":26}]},{"id":1468,"name":"_ELoftMethod","kind":4,"kindString":"Enumeration","flags":{"isExported":true},"children":[{"id":1470,"name":"CLOSED","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"app/core/modules/make.ts","line":247,"character":10}],"defaultValue":"\"closed\""},{"id":1469,"name":"OPEN","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"app/core/modules/make.ts","line":246,"character":8}],"defaultValue":"\"open\""}],"groups":[{"title":"Enumeration members","kind":16,"children":[1470,1469]}],"sources":[{"fileName":"app/core/modules/make.ts","line":245,"character":24}]},{"id":1513,"name":"Collection","kind":64,"kindString":"Function","flags":{"isExported":true},"signatures":[{"id":1514,"name":"Collection","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Adds a new collection to the model.","returns":"New collection if successful, null if unsuccessful or on error.","tags":[{"tag":"example","text":"collection1 = make.Collection([point1,polyine1,polygon1])"},{"tag":"example_info","text":"Creates a collection containing point1, polyline1, polygon1.\n"}]},"parameters":[{"id":1515,"name":"__model__","kind":32768,"kindString":"Parameter","flags":{},"comment":{},"type":{"type":"reference","name":"GIModel","id":1047}},{"id":1516,"name":"parent_coll","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"Collection"},"type":{"type":"reference","name":"TId","id":212}},{"id":1517,"name":"geometry","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"List of points, polylines, polygons."},"type":{"type":"union","types":[{"type":"reference","name":"TId","id":212},{"type":"array","elementType":{"type":"reference","name":"TId","id":212}}]}}],"type":{"type":"reference","name":"TId","id":212}}],"sources":[{"fileName":"app/core/modules/make.ts","line":153,"character":26}]},{"id":1528,"name":"Copy","kind":64,"kindString":"Function","flags":{"isExported":true},"signatures":[{"id":1529,"name":"Copy","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Adds a new copy of specified entities to the model.","returns":"New copy if successful, null if unsuccessful or on error.","tags":[{"tag":"example","text":"copy1 = make.Copy([position1,polyine1,polygon1], copy_positions, copy_attributes)"},{"tag":"example_info","text":"Creates a list containing a copy of the entities in sequence of input.\n"}]},"parameters":[{"id":1530,"name":"__model__","kind":32768,"kindString":"Parameter","flags":{},"comment":{},"type":{"type":"reference","name":"GIModel","id":1047}},{"id":1531,"name":"entities","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"Position, point, polyline, polygon, collection to be copied."},"type":{"type":"union","types":[{"type":"reference","name":"TId","id":212},{"type":"array","elementType":{"type":"reference","name":"TId","id":212}}]}},{"id":1532,"name":"copy_attributes","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"Enum to copy attributes or to have no attributes copied."},"type":{"type":"reference","name":"_ECopyAttribues","id":1465}}],"type":{"type":"union","types":[{"type":"reference","name":"TId","id":212},{"type":"array","elementType":{"type":"reference","name":"TId","id":212}}]}}],"sources":[{"fileName":"app/core/modules/make.ts","line":230,"character":20}]},{"id":1571,"name":"Divide","kind":64,"kindString":"Function","flags":{"isExported":true},"signatures":[{"id":1572,"name":"Divide","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Divides edge, wire or polyline by length or by number of segments.\nIf object is not exact multiple of length, length of last segment will be the remainder.","returns":"List of new edges (segments of original edges), null if unsuccessful or on error.","tags":[{"tag":"example","text":"segments1 = make.Divide(edge1, 5, by_number)"},{"tag":"example_info","text":"Creates a list of 5 equal segments from edge1."},{"tag":"example","text":"segments2 = make.Divide(edge1, 5, by_length)"},{"tag":"example_info","text":"If edge1 has length 13, creates from edge a list of two segments of length 5 and one segment of length 3.\n"}]},"parameters":[{"id":1573,"name":"__model__","kind":32768,"kindString":"Parameter","flags":{},"comment":{},"type":{"type":"reference","name":"GIModel","id":1047}},{"id":1574,"name":"edge","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"Edge, wire, or polyline(s) to be divided."},"type":{"type":"union","types":[{"type":"reference","name":"TId","id":212},{"type":"array","elementType":{"type":"reference","name":"TId","id":212}}]}},{"id":1575,"name":"divisor","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"Segment length or number of segments."},"type":{"type":"intrinsic","name":"number"}},{"id":1576,"name":"method","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"Enum to choose which method."},"type":{"type":"reference","name":"_EDivideMethod","id":1471}}],"type":{"type":"array","elementType":{"type":"reference","name":"TId","id":212}}}],"sources":[{"fileName":"app/core/modules/make.ts","line":471,"character":22}]},{"id":1549,"name":"Extrude","kind":64,"kindString":"Function","flags":{"isExported":true},"signatures":[{"id":1550,"name":"Extrude","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Extrudes geometry by distance (in default direction = z-axis) or by vector.\n- Extrusion of location produces a line;\n- Extrusion of line produces a polygon;\n- Extrusion of surface produces a list of surfaces.","returns":"Extrusion of entities if successful, null if unsuccessful or on error.","tags":[{"tag":"example","text":"extrusion1 = make.Extrude(point1, 10, 2)"},{"tag":"example_info","text":"Creates a list of 2 lines of total length 10 (length 5 each) in the z-direction.\nIf point1 = [0,0,0], extrusion1[0] is a line between [0,0,0] and [0,0,5]; extrusion1[1] is a line between [0,0,5] and [0,0,10]."},{"tag":"example","text":"extrusion2 = make.Extrude(polygon1, [0,5,0], 1)"},{"tag":"example_info","text":"Extrudes polygon1 by 5 in the y-direction, creating a list of surfaces.\n"}]},"parameters":[{"id":1551,"name":"__model__","kind":32768,"kindString":"Parameter","flags":{},"comment":{},"type":{"type":"reference","name":"GIModel","id":1047}},{"id":1552,"name":"entities","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"Vertex, edge, wire, face, position, point, polyline, polygon, collection."},"type":{"type":"union","types":[{"type":"reference","name":"TId","id":212},{"type":"array","elementType":{"type":"reference","name":"TId","id":212}}]}},{"id":1553,"name":"distance","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"Number or vector. If number, assumed to be [0,0,value] (i.e. extrusion distance in z-direction)."},"type":{"type":"union","types":[{"type":"intrinsic","name":"number"},{"type":"reference","name":"Txyz","id":216}]}},{"id":1554,"name":"divisions","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"Number of divisions to divide extrusion by. Minimum is 1."},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"union","types":[{"type":"reference","name":"TId","id":212},{"type":"array","elementType":{"type":"reference","name":"TId","id":212}}]}}],"sources":[{"fileName":"app/core/modules/make.ts","line":385,"character":23}]},{"id":1555,"name":"Join","kind":64,"kindString":"Function","flags":{"isExported":true},"signatures":[{"id":1556,"name":"Join","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Joins polylines to polylines or polygons to polygons.","returns":"New joined polyline or polygon if successful, null if unsuccessful or on error.","tags":[{"tag":"example","text":"joined1 = make.Join([polyline1,polyline2])"},{"tag":"example_info","text":"Creates a new polyline by joining polyline1 and polyline2. Geometries must be of the same type.\n"}]},"parameters":[{"id":1557,"name":"__model__","kind":32768,"kindString":"Parameter","flags":{},"comment":{},"type":{"type":"reference","name":"GIModel","id":1047}},{"id":1558,"name":"geometry","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"Polylines or polygons."},"type":{"type":"array","elementType":{"type":"reference","name":"TId","id":212}}}],"type":{"type":"reference","name":"TId","id":212}}],"sources":[{"fileName":"app/core/modules/make.ts","line":405,"character":20}]},{"id":1538,"name":"Loft","kind":64,"kindString":"Function","flags":{"isExported":true},"signatures":[{"id":1539,"name":"Loft","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Lofts between edges.","returns":"Lofted polygons between edges if successful, null if unsuccessful or on error.","tags":[{"tag":"example","text":"surface1 = make.Loft([polyline1,polyline2,polyline3], closed)"},{"tag":"example_info","text":"Creates a list of polygons lofting between polyline1, polyline2, polyline3, and polyline1.\n"}]},"parameters":[{"id":1540,"name":"__model__","kind":32768,"kindString":"Parameter","flags":{},"comment":{},"type":{"type":"reference","name":"GIModel","id":1047}},{"id":1541,"name":"entities","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"Edges (or wires, polylines or polygons with the same number of edges)."},"type":{"type":"array","elementType":{"type":"reference","name":"TId","id":212}}},{"id":1542,"name":"method","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"Enum, if 'closed', then close the loft back to the first edge in the input."},"type":{"type":"reference","name":"_ELoftMethod","id":1468}}],"type":{"type":"array","elementType":{"type":"reference","name":"TId","id":212}}}],"sources":[{"fileName":"app/core/modules/make.ts","line":286,"character":20}]},{"id":1486,"name":"Point","kind":64,"kindString":"Function","flags":{"isExported":true},"signatures":[{"id":1487,"name":"Point","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Adds a new point to the model. If a list of positions is provided as the input, then a list of points is generated.","returns":"New point if successful, null if unsuccessful or on error.","tags":[{"tag":"example_info","text":"Creates a point at position1."},{"tag":"example","text":"point1 = make.Point(position1)"},{"tag":"example_info","text":"Creates a point at position1.\n"}]},"parameters":[{"id":1488,"name":"__model__","kind":32768,"kindString":"Parameter","flags":{},"comment":{},"type":{"type":"reference","name":"GIModel","id":1047}},{"id":1489,"name":"positions","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"Position of point."},"type":{"type":"union","types":[{"type":"reference","name":"TId","id":212},{"type":"array","elementType":{"type":"reference","name":"TId","id":212}}]}}],"type":{"type":"union","types":[{"type":"reference","name":"TId","id":212},{"type":"array","elementType":{"type":"reference","name":"TId","id":212}}]}}],"sources":[{"fileName":"app/core/modules/make.ts","line":61,"character":21}]},{"id":1504,"name":"Polygon","kind":64,"kindString":"Function","flags":{"isExported":true},"signatures":[{"id":1505,"name":"Polygon","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Adds a new polygon to the model.","returns":"New polygon if successful, null if unsuccessful or on error.","tags":[{"tag":"example","text":"polygon1 = make.Polygon([position1,position2,position3])"},{"tag":"example_info","text":"Creates a polygon with vertices position1, position2, position3 in sequence.\n"}]},"parameters":[{"id":1506,"name":"__model__","kind":32768,"kindString":"Parameter","flags":{},"comment":{},"type":{"type":"reference","name":"GIModel","id":1047}},{"id":1507,"name":"positions","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"List of positions."},"type":{"type":"union","types":[{"type":"array","elementType":{"type":"reference","name":"TId","id":212}},{"type":"array","elementType":{"type":"array","elementType":{"type":"reference","name":"TId","id":212}}}]}}],"type":{"type":"union","types":[{"type":"reference","name":"TId","id":212},{"type":"array","elementType":{"type":"reference","name":"TId","id":212}}]}}],"sources":[{"fileName":"app/core/modules/make.ts","line":120,"character":23}]},{"id":1495,"name":"Polyline","kind":64,"kindString":"Function","flags":{"isExported":true},"signatures":[{"id":1496,"name":"Polyline","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Adds a new polyline to the model.","returns":"New polyline if successful, null if unsuccessful or on error.","tags":[{"tag":"example","text":"polyline1 = make.Polyline([position1,position2,position3], close)"},{"tag":"example_info","text":"Creates a closed polyline with vertices position1, position2, position3 in sequence.\n"}]},"parameters":[{"id":1497,"name":"__model__","kind":32768,"kindString":"Parameter","flags":{},"comment":{},"type":{"type":"reference","name":"GIModel","id":1047}},{"id":1498,"name":"positions","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"List of positions."},"type":{"type":"union","types":[{"type":"array","elementType":{"type":"reference","name":"TId","id":212}},{"type":"array","elementType":{"type":"array","elementType":{"type":"reference","name":"TId","id":212}}}]}},{"id":1499,"name":"close","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"Enum of 'close' or 'open'."},"type":{"type":"reference","name":"_EClose","id":1462}}],"type":{"type":"union","types":[{"type":"reference","name":"TId","id":212},{"type":"array","elementType":{"type":"reference","name":"TId","id":212}}]}}],"sources":[{"fileName":"app/core/modules/make.ts","line":94,"character":24}]},{"id":1478,"name":"Position","kind":64,"kindString":"Function","flags":{"isExported":true},"signatures":[{"id":1479,"name":"Position","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Adds a new position to the model.","returns":"New position if successful, null if unsuccessful or on error.","tags":[{"tag":"example","text":"position1 = make.Position([1,2,3])"},{"tag":"example_info","text":"Creates a position with coordinates x=1, y=2, z=3.\n"}]},"parameters":[{"id":1480,"name":"__model__","kind":32768,"kindString":"Parameter","flags":{},"comment":{},"type":{"type":"reference","name":"GIModel","id":1047}},{"id":1481,"name":"coords","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"XYZ coordinates as a list of three numbers."},"type":{"type":"union","types":[{"type":"reference","name":"Txyz","id":216},{"type":"array","elementType":{"type":"reference","name":"Txyz","id":216}},{"type":"array","elementType":{"type":"array","elementType":{"type":"reference","name":"Txyz","id":216}}}]}}],"type":{"type":"union","types":[{"type":"reference","name":"TId","id":212},{"type":"array","elementType":{"type":"reference","name":"TId","id":212}},{"type":"array","elementType":{"type":"array","elementType":{"type":"reference","name":"TId","id":212}}}]}}],"sources":[{"fileName":"app/core/modules/make.ts","line":34,"character":24}]},{"id":1577,"name":"Unweld","kind":64,"kindString":"Function","flags":{"isExported":true},"signatures":[{"id":1578,"name":"Unweld","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Unweld vertices so that they do not share positions.\nFor the vertices of the specified entities, if they share positions with other entities in the model,\nthen those positions will be replaced with new positions.\nThis function performs a simple unweld.\nThat is, the vertices within the set of specified entities are not unwelded.","returns":"The newly created positions resulting from the unweld.","tags":[{"tag":"example","text":"mod.Unweld(polyline1)"},{"tag":"example_info","text":"Unwelds polyline1 from all ther entities that shares the same position.\n"}]},"parameters":[{"id":1579,"name":"__model__","kind":32768,"kindString":"Parameter","flags":{},"comment":{},"type":{"type":"reference","name":"GIModel","id":1047}},{"id":1580,"name":"entities","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"Vertex, edge, wire, face, point, polyline, polygon, collection."},"type":{"type":"union","types":[{"type":"reference","name":"TId","id":212},{"type":"array","elementType":{"type":"reference","name":"TId","id":212}}]}}],"type":{"type":"array","elementType":{"type":"reference","name":"TId","id":212}}}],"sources":[{"fileName":"app/core/modules/make.ts","line":495,"character":22}]},{"id":1508,"name":"_collection","kind":64,"kindString":"Function","flags":{"isExported":true},"signatures":[{"id":1509,"name":"_collection","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1510,"name":"__model__","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"GIModel","id":1047}},{"id":1511,"name":"parent_index","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":1512,"name":"ents_arr","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"union","types":[{"type":"reference","name":"TEntTypeIdx","id":208},{"type":"array","elementType":{"type":"reference","name":"TEntTypeIdx","id":208}}]}}],"type":{"type":"reference","name":"TEntTypeIdx","id":208}}],"sources":[{"fileName":"app/core/modules/make.ts","line":129,"character":27}]},{"id":1518,"name":"_copyGeom","kind":64,"kindString":"Function","flags":{},"signatures":[{"id":1519,"name":"_copyGeom","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1520,"name":"__model__","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"GIModel","id":1047}},{"id":1521,"name":"ents_arr","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"union","types":[{"type":"reference","name":"TEntTypeIdx","id":208},{"type":"array","elementType":{"type":"reference","name":"TEntTypeIdx","id":208}}]}},{"id":1522,"name":"copy_attributes","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"boolean"}}],"type":{"type":"union","types":[{"type":"reference","name":"TEntTypeIdx","id":208},{"type":"array","elementType":{"type":"reference","name":"TEntTypeIdx","id":208}}]}}],"sources":[{"fileName":"app/core/modules/make.ts","line":171,"character":18}]},{"id":1523,"name":"_copyGeomPosis","kind":64,"kindString":"Function","flags":{},"signatures":[{"id":1524,"name":"_copyGeomPosis","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1525,"name":"__model__","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"GIModel","id":1047}},{"id":1526,"name":"ents_arr","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"union","types":[{"type":"reference","name":"TEntTypeIdx","id":208},{"type":"array","elementType":{"type":"reference","name":"TEntTypeIdx","id":208}}]}},{"id":1527,"name":"copy_attributes","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"boolean"}}],"type":{"type":"array","elementType":{"type":"reference","name":"TEntTypeIdx","id":208}}}],"sources":[{"fileName":"app/core/modules/make.ts","line":188,"character":23}]},{"id":1565,"name":"_divide","kind":64,"kindString":"Function","flags":{},"signatures":[{"id":1566,"name":"_divide","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1567,"name":"__model__","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"GIModel","id":1047}},{"id":1568,"name":"ents_arr","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"union","types":[{"type":"reference","name":"TEntTypeIdx","id":208},{"type":"array","elementType":{"type":"reference","name":"TEntTypeIdx","id":208}}]}},{"id":1569,"name":"divisor","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":1570,"name":"method","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"_EDivideMethod","id":1471}}],"type":{"type":"array","elementType":{"type":"reference","name":"TEntTypeIdx","id":208}}}],"sources":[{"fileName":"app/core/modules/make.ts","line":439,"character":16}]},{"id":1559,"name":"_divideEdge","kind":64,"kindString":"Function","flags":{},"signatures":[{"id":1560,"name":"_divideEdge","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1561,"name":"__model__","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"GIModel","id":1047}},{"id":1562,"name":"edge_i","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":1563,"name":"divisor","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":1564,"name":"method","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"_EDivideMethod","id":1471}}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}}],"sources":[{"fileName":"app/core/modules/make.ts","line":417,"character":20}]},{"id":1543,"name":"_extrude","kind":64,"kindString":"Function","flags":{},"signatures":[{"id":1544,"name":"_extrude","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1545,"name":"__model__","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"GIModel","id":1047}},{"id":1546,"name":"ents_arr","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"union","types":[{"type":"reference","name":"TEntTypeIdx","id":208},{"type":"array","elementType":{"type":"reference","name":"TEntTypeIdx","id":208}}]}},{"id":1547,"name":"distance","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"union","types":[{"type":"intrinsic","name":"number"},{"type":"reference","name":"Txyz","id":216}]}},{"id":1548,"name":"divisions","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"union","types":[{"type":"reference","name":"TEntTypeIdx","id":208},{"type":"array","elementType":{"type":"reference","name":"TEntTypeIdx","id":208}}]}}],"sources":[{"fileName":"app/core/modules/make.ts","line":295,"character":17}]},{"id":1533,"name":"_loft","kind":64,"kindString":"Function","flags":{},"signatures":[{"id":1534,"name":"_loft","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1535,"name":"__model__","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"GIModel","id":1047}},{"id":1536,"name":"ents_arr","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"array","elementType":{"type":"reference","name":"TEntTypeIdx","id":208}}},{"id":1537,"name":"method","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"_ELoftMethod","id":1468}}],"type":{"type":"array","elementType":{"type":"reference","name":"TEntTypeIdx","id":208}}}],"sources":[{"fileName":"app/core/modules/make.ts","line":249,"character":14}]},{"id":1482,"name":"_point","kind":64,"kindString":"Function","flags":{},"signatures":[{"id":1483,"name":"_point","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1484,"name":"__model__","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"GIModel","id":1047}},{"id":1485,"name":"ents_arr","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"union","types":[{"type":"reference","name":"TEntTypeIdx","id":208},{"type":"array","elementType":{"type":"reference","name":"TEntTypeIdx","id":208}}]}}],"type":{"type":"union","types":[{"type":"reference","name":"TEntTypeIdx","id":208},{"type":"array","elementType":{"type":"reference","name":"TEntTypeIdx","id":208}}]}}],"sources":[{"fileName":"app/core/modules/make.ts","line":43,"character":15}]},{"id":1500,"name":"_polygon","kind":64,"kindString":"Function","flags":{},"signatures":[{"id":1501,"name":"_polygon","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1502,"name":"__model__","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"GIModel","id":1047}},{"id":1503,"name":"ents_arr","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"union","types":[{"type":"array","elementType":{"type":"reference","name":"TEntTypeIdx","id":208}},{"type":"array","elementType":{"type":"array","elementType":{"type":"reference","name":"TEntTypeIdx","id":208}}}]}}],"type":{"type":"union","types":[{"type":"reference","name":"TEntTypeIdx","id":208},{"type":"array","elementType":{"type":"reference","name":"TEntTypeIdx","id":208}}]}}],"sources":[{"fileName":"app/core/modules/make.ts","line":103,"character":17}]},{"id":1490,"name":"_polyline","kind":64,"kindString":"Function","flags":{},"signatures":[{"id":1491,"name":"_polyline","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1492,"name":"__model__","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"GIModel","id":1047}},{"id":1493,"name":"ents_arr","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"union","types":[{"type":"array","elementType":{"type":"reference","name":"TEntTypeIdx","id":208}},{"type":"array","elementType":{"type":"array","elementType":{"type":"reference","name":"TEntTypeIdx","id":208}}}]}},{"id":1494,"name":"close","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"_EClose","id":1462}}],"type":{"type":"union","types":[{"type":"reference","name":"TEntTypeIdx","id":208},{"type":"array","elementType":{"type":"reference","name":"TEntTypeIdx","id":208}}]}}],"sources":[{"fileName":"app/core/modules/make.ts","line":75,"character":18}]},{"id":1474,"name":"_position","kind":64,"kindString":"Function","flags":{},"signatures":[{"id":1475,"name":"_position","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1476,"name":"__model__","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"GIModel","id":1047}},{"id":1477,"name":"coords","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"union","types":[{"type":"reference","name":"Txyz","id":216},{"type":"array","elementType":{"type":"reference","name":"Txyz","id":216}},{"type":"array","elementType":{"type":"array","elementType":{"type":"reference","name":"Txyz","id":216}}}]}}],"type":{"type":"union","types":[{"type":"reference","name":"TEntTypeIdx","id":208},{"type":"array","elementType":{"type":"reference","name":"TEntTypeIdx","id":208}},{"type":"array","elementType":{"type":"array","elementType":{"type":"reference","name":"TEntTypeIdx","id":208}}}]}}],"sources":[{"fileName":"app/core/modules/make.ts","line":11,"character":18}]}],"groups":[{"title":"Enumerations","kind":4,"children":[1462,1465,1471,1468]},{"title":"Functions","kind":64,"children":[1513,1528,1571,1549,1555,1538,1486,1504,1495,1478,1577,1508,1518,1523,1565,1559,1543,1533,1482,1500,1490,1474]}],"sources":[{"fileName":"app/core/modules/make.ts","line":1,"character":0}]},{"id":1638,"name":"\"app/core/modules/modify\"","kind":1,"kindString":"External module","flags":{"isExported":true},"originalName":"C:/Dropbox/Files/Software/GitHub/design-automation/mobius-parametric-modeller/src/app/core/modules/modify.ts","children":[{"id":1644,"name":"_EPromoteAttribTypes","kind":4,"kindString":"Enumeration","flags":{"isExported":true},"children":[{"id":1653,"name":"COLLS","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"app/core/modules/modify.ts","line":280,"character":9}],"defaultValue":"\"collections\""},{"id":1647,"name":"EDGES","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"app/core/modules/modify.ts","line":274,"character":9}],"defaultValue":"\"edges\""},{"id":1649,"name":"FACES","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"app/core/modules/modify.ts","line":276,"character":9}],"defaultValue":"\"faces\""},{"id":1652,"name":"PGONS","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"app/core/modules/modify.ts","line":279,"character":9}],"defaultValue":"\"pgons\""},{"id":1651,"name":"PLINES","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"app/core/modules/modify.ts","line":278,"character":10}],"defaultValue":"\"plines\""},{"id":1650,"name":"POINTS","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"app/core/modules/modify.ts","line":277,"character":10}],"defaultValue":"\"points\""},{"id":1645,"name":"POSIS","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"app/core/modules/modify.ts","line":272,"character":9}],"defaultValue":"\"positions\""},{"id":1646,"name":"VERTS","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"app/core/modules/modify.ts","line":273,"character":9}],"defaultValue":"\"vertices\""},{"id":1648,"name":"WIRES","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"app/core/modules/modify.ts","line":275,"character":9}],"defaultValue":"\"wires\""}],"groups":[{"title":"Enumeration members","kind":16,"children":[1653,1647,1649,1652,1651,1650,1645,1646,1648]}],"sources":[{"fileName":"app/core/modules/modify.ts","line":271,"character":32}]},{"id":1639,"name":"_EPromoteMethod","kind":4,"kindString":"Enumeration","flags":{"isExported":true},"children":[{"id":1642,"name":"MAX","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"app/core/modules/modify.ts","line":267,"character":7}],"defaultValue":"\"max\""},{"id":1640,"name":"MEAN","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"app/core/modules/modify.ts","line":265,"character":8}],"defaultValue":"\"mean\""},{"id":1641,"name":"MIN","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"app/core/modules/modify.ts","line":266,"character":7}],"defaultValue":"\"min\""},{"id":1643,"name":"NONE","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"app/core/modules/modify.ts","line":268,"character":8}],"defaultValue":"\"none\""}],"groups":[{"title":"Enumeration members","kind":16,"children":[1642,1640,1641,1643]}],"sources":[{"fileName":"app/core/modules/modify.ts","line":264,"character":27}]},{"id":1692,"name":"Close","kind":64,"kindString":"Function","flags":{"isExported":true},"signatures":[{"id":1693,"name":"Close","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Closes polyline(s) if open.","returns":"Modifies the input polyline(s).","tags":[{"tag":"example","text":"modify.Close([polyline1,polyline2,...])"},{"tag":"example_info","text":"If open, polylines are changed to closed; if already closed, nothing happens.\n"}]},"parameters":[{"id":1694,"name":"__model__","kind":32768,"kindString":"Parameter","flags":{},"comment":{},"type":{"type":"reference","name":"GIModel","id":1047}},{"id":1695,"name":"lines","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"Polyline(s)."},"type":{"type":"union","types":[{"type":"reference","name":"TId","id":212},{"type":"array","elementType":{"type":"reference","name":"TId","id":212}}]}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"app/core/modules/modify.ts","line":256,"character":21}]},{"id":1707,"name":"Delete","kind":64,"kindString":"Function","flags":{"isExported":true},"signatures":[{"id":1708,"name":"Delete","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Deletes entities.","returns":"Modifies the input entities.","tags":[{"tag":"example","text":"modify.Delete(polygon1)"},{"tag":"example_info","text":"Deletes polygon1 from the model.\n"}]},"parameters":[{"id":1709,"name":"__model__","kind":32768,"kindString":"Parameter","flags":{},"comment":{},"type":{"type":"reference","name":"GIModel","id":1047}},{"id":1710,"name":"entities","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"Position, point, polyline, polygon, collection. Can be a list."},"type":{"type":"union","types":[{"type":"reference","name":"TId","id":212},{"type":"array","elementType":{"type":"reference","name":"TId","id":212}}]}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"app/core/modules/modify.ts","line":324,"character":22}]},{"id":1672,"name":"Mirror","kind":64,"kindString":"Function","flags":{"isExported":true},"signatures":[{"id":1673,"name":"Mirror","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Mirrors entities across plane.","returns":"Modifies the input entities.","tags":[{"tag":"example","text":"modify.Mirror(polygon1, plane1)"},{"tag":"example_info","text":"Mirrors polygon1 across plane1.\n"}]},"parameters":[{"id":1674,"name":"__model__","kind":32768,"kindString":"Parameter","flags":{},"comment":{},"type":{"type":"reference","name":"GIModel","id":1047}},{"id":1675,"name":"entities","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"Vertex, edge, wire, face, plane, position, point, polyline, polygon, collection."},"type":{"type":"union","types":[{"type":"reference","name":"TId","id":212},{"type":"array","elementType":{"type":"reference","name":"TId","id":212}}]}},{"id":1676,"name":"origin","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"Position, vertex, point, list of three numbers."},"type":{"type":"union","types":[{"type":"reference","name":"Txyz","id":216},{"type":"reference","name":"TId","id":212}]}},{"id":1677,"name":"direction","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"Vector or a list of three numbers."},"type":{"type":"reference","name":"Txyz","id":216}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"app/core/modules/modify.ts","line":143,"character":22}]},{"id":1654,"name":"Move","kind":64,"kindString":"Function","flags":{"isExported":true},"signatures":[{"id":1655,"name":"Move","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Moves entities by vector.","returns":"Modifies the input entities.","tags":[{"tag":"example","text":"modify.Move(position1, [1,1,1])"},{"tag":"example_info","text":"Moves position1 by [1,1,1].\n"}]},"parameters":[{"id":1656,"name":"__model__","kind":32768,"kindString":"Parameter","flags":{},"comment":{},"type":{"type":"reference","name":"GIModel","id":1047}},{"id":1657,"name":"entities","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"Position, vertex, edge, wire, face, point, polyline, polygon, collection."},"type":{"type":"union","types":[{"type":"reference","name":"TId","id":212},{"type":"array","elementType":{"type":"reference","name":"TId","id":212}}]}},{"id":1658,"name":"vector","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"List of three numbers."},"type":{"type":"reference","name":"Txyz","id":216}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"app/core/modules/modify.ts","line":20,"character":20}]},{"id":1696,"name":"Promote","kind":64,"kindString":"Function","flags":{"isExported":true},"signatures":[{"id":1697,"name":"Promote","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Promotes or demotes an attribute from one geometry level to another.","returns":"Promotes or demotes the attribute.","tags":[{"tag":"example","text":"promote1 = modify.Promote (colour, positions, faces, sum)\n"}]},"parameters":[{"id":1698,"name":"__model__","kind":32768,"kindString":"Parameter","flags":{},"comment":{},"type":{"type":"reference","name":"GIModel","id":1047}},{"id":1699,"name":"attrib_name","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"Attribute name to be promoted or demoted."},"type":{"type":"intrinsic","name":"string"}},{"id":1700,"name":"from","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"Enum; Positions, vertices, edges, wires, faces or collections."},"type":{"type":"reference","name":"_EPromoteAttribTypes","id":1644}},{"id":1701,"name":"to","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"Enum; Positions, vertices, edges, wires, faces or collections."},"type":{"type":"reference","name":"_EPromoteAttribTypes","id":1644}},{"id":1702,"name":"method","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"Enum; Maximum, minimum, average, mode, median, sum, sum of squares, root mean square, first match or last match."},"type":{"type":"reference","name":"_EPromoteMethod","id":1639}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"app/core/modules/modify.ts","line":292,"character":23}]},{"id":1684,"name":"Reverse","kind":64,"kindString":"Function","flags":{"isExported":true},"signatures":[{"id":1685,"name":"Reverse","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Reverses direction of entities.","returns":"Modifies the input entities.","tags":[{"tag":"example","text":"modify.Reverse(face1)"},{"tag":"example_info","text":"Flips face1 and reverses its normal."},{"tag":"example","text":"modify.Reverse(polyline1)"},{"tag":"example_info","text":"Reverses the order of vertices to reverse the direction of the polyline.\n"}]},"parameters":[{"id":1686,"name":"__model__","kind":32768,"kindString":"Parameter","flags":{},"comment":{},"type":{"type":"reference","name":"GIModel","id":1047}},{"id":1687,"name":"entities","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"Wire, face, polyline, polygon."},"type":{"type":"union","types":[{"type":"reference","name":"TId","id":212},{"type":"array","elementType":{"type":"reference","name":"TId","id":212}}]}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"app/core/modules/modify.ts","line":225,"character":23}]},{"id":1659,"name":"Rotate","kind":64,"kindString":"Function","flags":{"isExported":true},"signatures":[{"id":1660,"name":"Rotate","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Rotates entities on plane by angle.","returns":"Modifies the input entities.","tags":[{"tag":"example","text":"modify.Rotate(polyline1, plane1, PI)"},{"tag":"example_info","text":"Rotates polyline1 on plane1 by PI (i.e. 180 degrees).\n"}]},"parameters":[{"id":1661,"name":"__model__","kind":32768,"kindString":"Parameter","flags":{},"comment":{},"type":{"type":"reference","name":"GIModel","id":1047}},{"id":1662,"name":"entities","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"Vertex, edge, wire, face, plane, position, point, polyline, polygon, collection."},"type":{"type":"union","types":[{"type":"reference","name":"TId","id":212},{"type":"array","elementType":{"type":"reference","name":"TId","id":212}}]}},{"id":1663,"name":"origin","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"A list of three numbers (or a position, point, or vertex)."},"type":{"type":"union","types":[{"type":"reference","name":"Txyz","id":216},{"type":"reference","name":"TId","id":212}]}},{"id":1664,"name":"axis","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"A list of three numbers."},"type":{"type":"reference","name":"Txyz","id":216}},{"id":1665,"name":"angle","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"Angle (in radians)."},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"app/core/modules/modify.ts","line":54,"character":22}]},{"id":1666,"name":"Scale","kind":64,"kindString":"Function","flags":{"isExported":true},"signatures":[{"id":1667,"name":"Scale","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Scales entities on plane by factor.","returns":"Modifies the input entities.","tags":[{"tag":"example","text":"modify.Scale(entities, plane1, 0.5)"},{"tag":"example_info","text":"Scales entities by 0.5 on plane1.\n"}]},"parameters":[{"id":1668,"name":"__model__","kind":32768,"kindString":"Parameter","flags":{},"comment":{},"type":{"type":"reference","name":"GIModel","id":1047}},{"id":1669,"name":"entities","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"Vertex, edge, wire, face, plane, position, point, polyline, polygon, collection."},"type":{"type":"union","types":[{"type":"reference","name":"TId","id":212},{"type":"array","elementType":{"type":"reference","name":"TId","id":212}}]}},{"id":1670,"name":"origin","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"Position, point, vertex, list of three numbers, plane."},"type":{"type":"union","types":[{"type":"reference","name":"TId","id":212},{"type":"reference","name":"Txyz","id":216},{"type":"reference","name":"TPlane","id":210}]}},{"id":1671,"name":"scale","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"Scale factor."},"type":{"type":"union","types":[{"type":"intrinsic","name":"number"},{"type":"reference","name":"Txyz","id":216}]}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"app/core/modules/modify.ts","line":97,"character":21}]},{"id":1703,"name":"Weld","kind":64,"kindString":"Function","flags":{"isExported":true},"signatures":[{"id":1704,"name":"Weld","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Welds entities together.","returns":"Modifies the input entities.","tags":[{"tag":"example","text":"modify.Weld([polyline1,polyline2])"},{"tag":"example_info","text":"Welds both polyline1 and polyline2 together. Entities must be of the same type.\n"}]},"parameters":[{"id":1705,"name":"__model__","kind":32768,"kindString":"Parameter","flags":{},"comment":{},"type":{"type":"reference","name":"GIModel","id":1047}},{"id":1706,"name":"entities","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"Vertex, edge, wire, face, position, point, polyline, polygon, collection."},"type":{"type":"array","elementType":{"type":"reference","name":"TId","id":212}}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"app/core/modules/modify.ts","line":308,"character":20}]},{"id":1678,"name":"XForm","kind":64,"kindString":"Function","flags":{"isExported":true},"signatures":[{"id":1679,"name":"XForm","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Transforms entities from one construction plane to another.","returns":"Modifies the input entities.","tags":[{"tag":"example","text":"modify.XForm(polygon1, plane1, plane2)"},{"tag":"example_info","text":"Transforms polygon1 from plane1 to plane2.\n"}]},"parameters":[{"id":1680,"name":"__model__","kind":32768,"kindString":"Parameter","flags":{},"comment":{},"type":{"type":"reference","name":"GIModel","id":1047}},{"id":1681,"name":"entities","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"Vertex, edge, wire, face, position, point, polyline, polygon, collection."},"type":{"type":"union","types":[{"type":"reference","name":"TId","id":212},{"type":"array","elementType":{"type":"reference","name":"TId","id":212}}]}},{"id":1682,"name":"from","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"Plane defining target construction plane."},"type":{"type":"reference","name":"TPlane","id":210}},{"id":1683,"name":"to","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"Plane defining destination construction plane."},"type":{"type":"reference","name":"TPlane","id":210}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"app/core/modules/modify.ts","line":187,"character":21}]},{"id":1688,"name":"_close","kind":64,"kindString":"Function","flags":{},"signatures":[{"id":1689,"name":"_close","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1690,"name":"__model__","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"GIModel","id":1047}},{"id":1691,"name":"ents_arr","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"union","types":[{"type":"reference","name":"TEntTypeIdx","id":208},{"type":"array","elementType":{"type":"reference","name":"TEntTypeIdx","id":208}}]}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"app/core/modules/modify.ts","line":232,"character":15}]}],"groups":[{"title":"Enumerations","kind":4,"children":[1644,1639]},{"title":"Functions","kind":64,"children":[1692,1707,1672,1654,1696,1684,1659,1666,1703,1678,1688]}],"sources":[{"fileName":"app/core/modules/modify.ts","line":1,"character":0}]},{"id":1989,"name":"\"app/core/modules/output\"","kind":1,"kindString":"External module","flags":{"isExported":true},"originalName":"C:/Dropbox/Files/Software/GitHub/design-automation/mobius-parametric-modeller/src/app/core/modules/output.ts","children":[{"id":1990,"name":"Return","kind":64,"kindString":"Function","flags":{"isExported":true},"signatures":[{"id":1991,"name":"Return","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Return certain value from the model for the flowchart's end node","returns":"Value\n","tags":[{"tag":"summary","text":"Return a specific value"}]},"parameters":[{"id":1992,"name":"__model__","kind":32768,"kindString":"Parameter","flags":{},"comment":{"shortText":"Model of the node."},"type":{"type":"reference","name":"GIModel","id":1047}},{"id":1993,"name":"value","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"Index of the value to be returned."},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"any"}}],"sources":[{"fileName":"app/core/modules/output.ts","line":10,"character":22}]}],"groups":[{"title":"Functions","kind":64,"children":[1990]}],"sources":[{"fileName":"app/core/modules/output.ts","line":1,"character":0}]},{"id":1759,"name":"\"app/core/modules/pattern\"","kind":1,"kindString":"External module","flags":{"isExported":true},"originalName":"C:/Dropbox/Files/Software/GitHub/design-automation/mobius-parametric-modeller/src/app/core/modules/pattern.ts","children":[{"id":1760,"name":"_EGridMethod","kind":4,"kindString":"Enumeration","flags":{"isExported":true},"children":[{"id":1762,"name":"COLUMNS","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"app/core/modules/pattern.ts","line":57,"character":11}],"defaultValue":"\"columns\""},{"id":1761,"name":"FLAT","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"app/core/modules/pattern.ts","line":56,"character":8}],"defaultValue":"\"flat\""},{"id":1763,"name":"ROWS","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"app/core/modules/pattern.ts","line":58,"character":8}],"defaultValue":"\"rows\""},{"id":1764,"name":"SQUARES","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"app/core/modules/pattern.ts","line":59,"character":11}],"defaultValue":"\"squares\""}],"groups":[{"title":"Enumeration members","kind":16,"children":[1762,1761,1763,1764]}],"sources":[{"fileName":"app/core/modules/pattern.ts","line":55,"character":24}]},{"id":1765,"name":"Arc","kind":64,"kindString":"Function","flags":{"isExported":true},"signatures":[{"id":1766,"name":"Arc","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Creates a list of XYZ coordinates in an arc arrangement.","returns":"XYZ coordinates if successful, null if unsuccessful or on error.","tags":[{"tag":"example","text":"coordinates1 = pattern.Arc([0,0,0], 10, 12, PI)"},{"tag":"example_info","text":"Creates a list of 12 XYZ coordinates distributed equally along a semicircle of radius 10.\n"}]},"parameters":[{"id":1767,"name":"__model__","kind":32768,"kindString":"Parameter","flags":{},"comment":{},"type":{"type":"reference","name":"GIModel","id":1047}},{"id":1768,"name":"origin","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"XYZ coordinates as a list of three numbers."},"type":{"type":"union","types":[{"type":"reference","name":"Txyz","id":216},{"type":"reference","name":"TPlane","id":210}]}},{"id":1769,"name":"radius","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"Radius of circle as a number."},"type":{"type":"intrinsic","name":"number"}},{"id":1770,"name":"num_positions","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"Number of XYZ coordinates distributed equally along the arc."},"type":{"type":"intrinsic","name":"number"}},{"id":1771,"name":"arc_angle","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"Angle of arc (in radians)."},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"array","elementType":{"type":"reference","name":"TId","id":212}}}],"sources":[{"fileName":"app/core/modules/pattern.ts","line":21,"character":19}]},{"id":1772,"name":"Grid","kind":64,"kindString":"Function","flags":{"isExported":true},"signatures":[{"id":1773,"name":"Grid","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Creates a list of XYZ coordinates in a grid arrangement.","returns":"XYZ coordinates if successful, null if unsuccessful or on error.","tags":[{"tag":"example","text":"coordinates1 = pattern.Grid([0,0,0], 10, 3)"},{"tag":"example_info","text":"Creates a list of 9 XYZ coordinates on a 3x3 square grid of length 10."},{"tag":"example","text":"coordinates1 = pattern.Grid([0,0,0], [10,20], [2,4])"},{"tag":"example_info","text":"Creates a list of 8 XYZ coordinates on a 2x4 grid of length 10 by 20.\n"}]},"parameters":[{"id":1774,"name":"__model__","kind":32768,"kindString":"Parameter","flags":{},"comment":{},"type":{"type":"reference","name":"GIModel","id":1047}},{"id":1775,"name":"origin","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"XYZ coordinates as a list of three numbers."},"type":{"type":"union","types":[{"type":"reference","name":"Txyz","id":216},{"type":"reference","name":"TPlane","id":210}]}},{"id":1776,"name":"size","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"Size of grid. If number, assume square grid of that length; if list of two numbers, x and y lengths respectively."},"type":{"type":"union","types":[{"type":"intrinsic","name":"number"},{"type":"tuple","elements":[{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"number"}]}]}},{"id":1777,"name":"num_positions","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"Number of XYZ coordinates."},"type":{"type":"union","types":[{"type":"intrinsic","name":"number"},{"type":"tuple","elements":[{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"number"}]}]}},{"id":1778,"name":"method","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"Enum, define the way the coords will be return as lists.\nIf integer, same number for x and y; if list of two numbers, number for x and y respectively."},"type":{"type":"reference","name":"_EGridMethod","id":1760}}],"type":{"type":"union","types":[{"type":"array","elementType":{"type":"reference","name":"TId","id":212}},{"type":"array","elementType":{"type":"array","elementType":{"type":"reference","name":"TId","id":212}}}]}}],"sources":[{"fileName":"app/core/modules/pattern.ts","line":75,"character":20}]},{"id":1779,"name":"Rectangle","kind":64,"kindString":"Function","flags":{"isExported":true},"signatures":[{"id":1780,"name":"Rectangle","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Creates a list of XYZ coordinates in a rectangular arrangement.","returns":"XYZ coordinates if successful, null if unsuccessful or on error.","tags":[{"tag":"example","text":"coordinates1 = pattern.Rectangle([0,0,0], 10)"},{"tag":"example_info","text":"Creates a list of 4 coords, being the vertices of a 10 by 10 square."},{"tag":"example","text":"coordinates1 = pattern.Rectangle([0,0,0], [10,20])"},{"tag":"example_info","text":"Creates a list of 4 coords, being the vertices of a 10 by 20 rectangle.\n"}]},"parameters":[{"id":1781,"name":"__model__","kind":32768,"kindString":"Parameter","flags":{},"comment":{},"type":{"type":"reference","name":"GIModel","id":1047}},{"id":1782,"name":"origin","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"XYZ coordinates as a list of three numbers."},"type":{"type":"union","types":[{"type":"reference","name":"Txyz","id":216},{"type":"reference","name":"TPlane","id":210}]}},{"id":1783,"name":"size","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"Size of rectangle. If number, assume square of that length; if list of two numbers, x and y lengths respectively."},"type":{"type":"union","types":[{"type":"intrinsic","name":"number"},{"type":"tuple","elements":[{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"number"}]}]}}],"type":{"type":"array","elementType":{"type":"reference","name":"TId","id":212}}}],"sources":[{"fileName":"app/core/modules/pattern.ts","line":161,"character":25}]}],"groups":[{"title":"Enumerations","kind":4,"children":[1760]},{"title":"Functions","kind":64,"children":[1765,1772,1779]}],"sources":[{"fileName":"app/core/modules/pattern.ts","line":1,"character":0}]},{"id":1388,"name":"\"app/core/modules/query\"","kind":1,"kindString":"External module","flags":{"isExported":true},"originalName":"C:/Dropbox/Files/Software/GitHub/design-automation/mobius-parametric-modeller/src/app/core/modules/query.ts","children":[{"id":1389,"name":"_EQuerySelect","kind":4,"kindString":"Enumeration","flags":{"isExported":true},"children":[{"id":1401,"name":"ALL","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"app/core/modules/query.ts","line":26,"character":7}],"defaultValue":"\"all\""},{"id":1398,"name":"COLL","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"app/core/modules/query.ts","line":23,"character":8}],"defaultValue":"\"collections\""},{"id":1392,"name":"EDGE","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"app/core/modules/query.ts","line":17,"character":8}],"defaultValue":"\"edges\""},{"id":1394,"name":"FACE","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"app/core/modules/query.ts","line":19,"character":8}],"defaultValue":"\"faces\""},{"id":1399,"name":"OBJS","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"app/core/modules/query.ts","line":24,"character":8}],"defaultValue":"\"objects\""},{"id":1397,"name":"PGON","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"app/core/modules/query.ts","line":22,"character":8}],"defaultValue":"\"polygons\""},{"id":1396,"name":"PLINE","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"app/core/modules/query.ts","line":21,"character":9}],"defaultValue":"\"polylines\""},{"id":1395,"name":"POINT","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"app/core/modules/query.ts","line":20,"character":9}],"defaultValue":"\"points\""},{"id":1390,"name":"POSI","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"app/core/modules/query.ts","line":15,"character":8}],"defaultValue":"\"positions\""},{"id":1400,"name":"TOPOS","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"app/core/modules/query.ts","line":25,"character":9}],"defaultValue":"\"topologies\""},{"id":1391,"name":"VERT","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"app/core/modules/query.ts","line":16,"character":8}],"defaultValue":"\"vertices\""},{"id":1393,"name":"WIRE","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"app/core/modules/query.ts","line":18,"character":8}],"defaultValue":"\"wires\""}],"groups":[{"title":"Enumeration members","kind":16,"children":[1401,1398,1392,1394,1399,1397,1396,1395,1390,1400,1391,1393]}],"sources":[{"fileName":"app/core/modules/query.ts","line":14,"character":25}]},{"id":1402,"name":"_ESortMethod","kind":4,"kindString":"Enumeration","flags":{"isExported":true},"children":[{"id":1404,"name":"ASCENDING","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"app/core/modules/query.ts","line":225,"character":15}],"defaultValue":"\"ascending\""},{"id":1403,"name":"DESCENDING","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"app/core/modules/query.ts","line":224,"character":16}],"defaultValue":"\"descending\""}],"groups":[{"title":"Enumeration members","kind":16,"children":[1404,1403]}],"sources":[{"fileName":"app/core/modules/query.ts","line":223,"character":24}]},{"id":1420,"name":"Count","kind":64,"kindString":"Function","flags":{"isExported":true},"signatures":[{"id":1421,"name":"Count","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Returns the number of entities based on a query expression.\nThe query expression should use the following format: #@name == value,\nwhere 'name' is the attribute name, and 'value' is the attribute value.\nIf the attribute value is a string, then in must be in qoutes, as follows: #@name == 'str_value'.\nThe '==' is the comparison operator. The other comparison operators are: !=, >, >=, <, =<.\nEntities can be search using multiple query expressions, as follows:  #@name1 == value1 &&  #@name2 == value2.\nQuery expressions can be combine with either && (and) and || (or), where\n&& takes precedence over ||.","returns":"Number of entities.","tags":[{"tag":"example","text":"num_ents = query.Count(positions, polyline1, #@xyz[2]>10)"},{"tag":"example_info","text":"Returns the number of positions defined by polyline1 where the z-coordinate is more than 10.\n"}]},"parameters":[{"id":1422,"name":"__model__","kind":32768,"kindString":"Parameter","flags":{},"comment":{},"type":{"type":"reference","name":"GIModel","id":1047}},{"id":1423,"name":"select","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"Enum, specifies what type of entities are to be counted."},"type":{"type":"reference","name":"_EQuerySelect","id":1389}},{"id":1424,"name":"entities","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"List of entities to be searched. If 'null' (without quotes), list of all entities in the model."},"type":{"type":"union","types":[{"type":"reference","name":"TId","id":212},{"type":"array","elementType":{"type":"reference","name":"TId","id":212}}]}},{"id":1425,"name":"query_expr","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"Attribute condition. If 'null' (without quotes), no condition is set; list of all search entities is returned."},"type":{"type":"reference","name":"TQuery","id":211}}],"type":{"type":"intrinsic","name":"number"}}],"sources":[{"fileName":"app/core/modules/query.ts","line":155,"character":21}]},{"id":1414,"name":"Get","kind":64,"kindString":"Function","flags":{"isExported":true},"signatures":[{"id":1415,"name":"Get","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Returns a list of entities based on a query expression.\nThe query expression should use the following format: #@name == value,\nwhere 'name' is the attribute name, and 'value' is the attribute value that you are searching for.\nIf the attribute value is a string, then in must be in quotes, as follows: #@name == 'str_value'.\nThe '==' is the comparison operator. The other comparison operators are: !=, >, >=, <, =<.\nEntities can be search using multiple query expressions, as follows:  #@name1 == value1 &&  #@name2 == value2.\nQuery expressions can be combined with either && (and) and || (or), where\n&& takes precedence over ||.","returns":"List of entities whose type matches the type specified in 'select'.","tags":[{"tag":"example","text":"positions = query.Get(positions, polyline1, #@xyz[2]>10)"},{"tag":"example_info","text":"Returns a list of positions defined by polyline1 where the z-coordinate is more than 10.\n"}]},"parameters":[{"id":1416,"name":"__model__","kind":32768,"kindString":"Parameter","flags":{},"comment":{},"type":{"type":"reference","name":"GIModel","id":1047}},{"id":1417,"name":"select","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"Enum, specifies what type of entities will be returned."},"type":{"type":"reference","name":"_EQuerySelect","id":1389}},{"id":1418,"name":"entities","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"List of entities to be searched. If 'null' (without quotes), all entities in the model will be searched."},"type":{"type":"union","types":[{"type":"reference","name":"TId","id":212},{"type":"array","elementType":{"type":"reference","name":"TId","id":212}}]}},{"id":1419,"name":"query_expr","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"Attribute condition. If 'null' (without quotes), no condition is set; all found entities are returned."},"type":{"type":"reference","name":"TQuery","id":211}}],"type":{"type":"array","elementType":{"type":"reference","name":"TId","id":212}}}],"sources":[{"fileName":"app/core/modules/query.ts","line":124,"character":19}]},{"id":1452,"name":"IsClosed","kind":64,"kindString":"Function","flags":{"isExported":true},"signatures":[{"id":1453,"name":"IsClosed","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Checks if polyline(s) or wire(s) are closed.","returns":"Boolean or list of boolean in input sequence of lines.","tags":[{"tag":"example","text":"mod.IsClosed([polyline1,polyline2,polyline3])"},{"tag":"example_info","text":"Returns list [true,true,false] if polyline1 and polyline2 are closed but polyline3 is open.\n"}]},"parameters":[{"id":1454,"name":"__model__","kind":32768,"kindString":"Parameter","flags":{},"comment":{},"type":{"type":"reference","name":"GIModel","id":1047}},{"id":1455,"name":"lines","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"Polyline(s) or wire(s)."},"type":{"type":"union","types":[{"type":"reference","name":"TId","id":212},{"type":"array","elementType":{"type":"reference","name":"TId","id":212}}]}}],"type":{"type":"union","types":[{"type":"intrinsic","name":"boolean"},{"type":"array","elementType":{"type":"intrinsic","name":"boolean"}}]}}],"sources":[{"fileName":"app/core/modules/query.ts","line":272,"character":24}]},{"id":1431,"name":"Neighbours","kind":64,"kindString":"Function","flags":{"isExported":true},"signatures":[{"id":1432,"name":"Neighbours","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Returns a list of welded neighbours of any entity","returns":"A list of welded neighbours","tags":[{"tag":"example","text":"mod.Neighbours([polyline1,polyline2,polyline3])"},{"tag":"example_info","text":"Returns list of entities that are welded to polyline1 and polyline2.\n"}]},"parameters":[{"id":1433,"name":"__model__","kind":32768,"kindString":"Parameter","flags":{},"comment":{},"type":{"type":"reference","name":"GIModel","id":1047}},{"id":1434,"name":"select","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"Enum, select the types of neighbours to return"},"type":{"type":"reference","name":"_EQuerySelect","id":1389}},{"id":1435,"name":"entities","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"List of entities."},"type":{"type":"union","types":[{"type":"reference","name":"TId","id":212},{"type":"array","elementType":{"type":"reference","name":"TId","id":212}}]}}],"type":{"type":"array","elementType":{"type":"reference","name":"TId","id":212}}}],"sources":[{"fileName":"app/core/modules/query.ts","line":195,"character":26}]},{"id":1442,"name":"Sort","kind":64,"kindString":"Function","flags":{"isExported":true},"signatures":[{"id":1443,"name":"Sort","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Sorts entities based on a sort expression.\nThe sort expression should use the following format: #@name, where 'name' is the attribute name.\nEntities can be sorted using multiple sort expresssions as follows: #@name1 && #@name2.\nIf the attribute is a list, and index can also be specified as follows: #@name1[index].","returns":"Sorted entities.","tags":[{"tag":"example","text":"sorted_list = query.Sort( [pos1, pos2, pos3], #@xyz[2], descending)"},{"tag":"example_info","text":"Returns a list of three positions, sorted according to the descending z value.\n"}]},"parameters":[{"id":1444,"name":"__model__","kind":32768,"kindString":"Parameter","flags":{},"comment":{},"type":{"type":"reference","name":"GIModel","id":1047}},{"id":1445,"name":"entities","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"List of two or more entities to be sorted, all of the same entity type."},"type":{"type":"array","elementType":{"type":"reference","name":"TId","id":212}}},{"id":1446,"name":"sort_expr","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"Attribute condition. If 'null' (without quotes), entities will be sorted based on their ID."},"type":{"type":"reference","name":"TQuery","id":211}},{"id":1447,"name":"method","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"Enum, sort descending or ascending."},"type":{"type":"reference","name":"_ESortMethod","id":1402}}],"type":{"type":"array","elementType":{"type":"reference","name":"TId","id":212}}}],"sources":[{"fileName":"app/core/modules/query.ts","line":240,"character":20}]},{"id":1456,"name":"_IsPlanar","kind":64,"kindString":"Function","flags":{"isExported":true},"signatures":[{"id":1457,"name":"_IsPlanar","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Checks if a wire, polyline, face, or polygon is planar.","returns":"Boolean or list of boolean in input sequence of lines.","tags":[{"tag":"example","text":"mod.IsPlanar([polyline1,polyline2,polyline3])"},{"tag":"example_info","text":"Returns list [true,true,false] if polyline1 and polyline2 are planar but polyline3 is not planar.\n"}]},"parameters":[{"id":1458,"name":"__model__","kind":32768,"kindString":"Parameter","flags":{},"comment":{},"type":{"type":"reference","name":"GIModel","id":1047}},{"id":1459,"name":"entities","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"Wire, polyline, face, or polygon."},"type":{"type":"union","types":[{"type":"reference","name":"TId","id":212},{"type":"array","elementType":{"type":"reference","name":"TId","id":212}}]}},{"id":1460,"name":"tolerance","kind":32768,"kindString":"Parameter","flags":{},"comment":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"union","types":[{"type":"intrinsic","name":"boolean"},{"type":"array","elementType":{"type":"intrinsic","name":"boolean"}}]}}],"sources":[{"fileName":"app/core/modules/query.ts","line":288,"character":25}]},{"id":1405,"name":"_convertSelectToEEntTypeStr","kind":64,"kindString":"Function","flags":{},"signatures":[{"id":1406,"name":"_convertSelectToEEntTypeStr","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1407,"name":"select","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"_EQuerySelect","id":1389}}],"type":{"type":"union","types":[{"type":"reference","name":"EEntType","id":74},{"type":"array","elementType":{"type":"reference","name":"EEntType","id":74}}]}}],"sources":[{"fileName":"app/core/modules/query.ts","line":28,"character":36}]},{"id":1408,"name":"_get","kind":64,"kindString":"Function","flags":{},"signatures":[{"id":1409,"name":"_get","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1410,"name":"__model__","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"GIModel","id":1047}},{"id":1411,"name":"select_ent_types","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"union","types":[{"type":"reference","name":"EEntType","id":74},{"type":"array","elementType":{"type":"reference","name":"EEntType","id":74}}]}},{"id":1412,"name":"ents_arr","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"union","types":[{"type":"reference","name":"TEntTypeIdx","id":208},{"type":"array","elementType":{"type":"reference","name":"TEntTypeIdx","id":208}}]}},{"id":1413,"name":"query_expr","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"TQuery","id":211}}],"type":{"type":"array","elementType":{"type":"reference","name":"TEntTypeIdx","id":208}}}],"sources":[{"fileName":"app/core/modules/query.ts","line":78,"character":13}]},{"id":1448,"name":"_isClosed","kind":64,"kindString":"Function","flags":{},"signatures":[{"id":1449,"name":"_isClosed","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1450,"name":"__model__","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"GIModel","id":1047}},{"id":1451,"name":"ents_arr","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"union","types":[{"type":"reference","name":"TEntTypeIdx","id":208},{"type":"array","elementType":{"type":"reference","name":"TEntTypeIdx","id":208}}]}}],"type":{"type":"union","types":[{"type":"intrinsic","name":"boolean"},{"type":"array","elementType":{"type":"intrinsic","name":"boolean"}}]}}],"sources":[{"fileName":"app/core/modules/query.ts","line":250,"character":18}]},{"id":1426,"name":"_neighbours","kind":64,"kindString":"Function","flags":{"isExported":true},"signatures":[{"id":1427,"name":"_neighbours","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1428,"name":"__model__","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"GIModel","id":1047}},{"id":1429,"name":"select_ent_types","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"union","types":[{"type":"reference","name":"EEntType","id":74},{"type":"array","elementType":{"type":"reference","name":"EEntType","id":74}}]}},{"id":1430,"name":"ents_arr","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"union","types":[{"type":"reference","name":"TEntTypeIdx","id":208},{"type":"array","elementType":{"type":"reference","name":"TEntTypeIdx","id":208}}]}}],"type":{"type":"array","elementType":{"type":"reference","name":"TEntTypeIdx","id":208}}}],"sources":[{"fileName":"app/core/modules/query.ts","line":164,"character":27}]},{"id":1436,"name":"_sort","kind":64,"kindString":"Function","flags":{},"signatures":[{"id":1437,"name":"_sort","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1438,"name":"__model__","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"GIModel","id":1047}},{"id":1439,"name":"ents_arr","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"array","elementType":{"type":"reference","name":"TEntTypeIdx","id":208}}},{"id":1440,"name":"sort_expr","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"TQuery","id":211}},{"id":1441,"name":"method","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"ESort","id":139}}],"type":{"type":"array","elementType":{"type":"reference","name":"TEntTypeIdx","id":208}}}],"sources":[{"fileName":"app/core/modules/query.ts","line":207,"character":14}]}],"groups":[{"title":"Enumerations","kind":4,"children":[1389,1402]},{"title":"Functions","kind":64,"children":[1420,1414,1452,1431,1442,1456,1405,1408,1448,1426,1436]}],"sources":[{"fileName":"app/core/modules/query.ts","line":1,"character":0}]},{"id":1745,"name":"\"app/core/modules/util\"","kind":1,"kindString":"External module","flags":{"isExported":true},"originalName":"C:/Dropbox/Files/Software/GitHub/design-automation/mobius-parametric-modeller/src/app/core/modules/util.ts","children":[{"id":1746,"name":"_EIODataFormat","kind":4,"kindString":"Enumeration","flags":{"isExported":true},"children":[{"id":1747,"name":"GI","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"app/core/modules/util.ts","line":13,"character":6}],"defaultValue":"\"gi\""},{"id":1748,"name":"OBJ","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"app/core/modules/util.ts","line":14,"character":7}],"defaultValue":"\"obj\""}],"groups":[{"title":"Enumeration members","kind":16,"children":[1747,1748]}],"sources":[{"fileName":"app/core/modules/util.ts","line":12,"character":26}]},{"id":1754,"name":"ExportData","kind":64,"kindString":"Function","flags":{"isExported":true},"signatures":[{"id":1755,"name":"ExportData","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Export data from the model as a file.\nThis will result in a popup in your browser, asking you to save the filel.","returns":"Boolean.","tags":[{"tag":"example","text":"util.ExportData ('my_model.obj', obj)"},{"tag":"example_info","text":"Exports all the data in the model as an OBJ.\n"}]},"parameters":[{"id":1756,"name":"__model__","kind":32768,"kindString":"Parameter","flags":{},"comment":{},"type":{"type":"reference","name":"GIModel","id":1047}},{"id":1757,"name":"filename","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"Name of the file as a string."},"type":{"type":"intrinsic","name":"string"}},{"id":1758,"name":"data_format","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"Enum, the file format."},"type":{"type":"reference","name":"_EIODataFormat","id":1746}}],"type":{"type":"intrinsic","name":"boolean"}}],"sources":[{"fileName":"app/core/modules/util.ts","line":60,"character":26}]},{"id":1749,"name":"ImportData","kind":64,"kindString":"Function","flags":{"isExported":true},"signatures":[{"id":1750,"name":"ImportData","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Imports data into the model.\nIn order to get the model data from a file, you need to define the File or URL parameter\nin the Start node of the flowchart.","returns":"A list of the positions, points, polylines, polygons and collections added to the model.","tags":[{"tag":"example","text":"util.ImportData (file1_data, obj)"},{"tag":"example_info","text":"Imports the data from file1 (defining the .obj file uploaded in 'Start' node).\n"}]},"parameters":[{"id":1751,"name":"__model__","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"GIModel","id":1047}},{"id":1752,"name":"model_data","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"The model data"},"type":{"type":"intrinsic","name":"string"}},{"id":1753,"name":"data_format","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"Enum, the file format."},"type":{"type":"reference","name":"_EIODataFormat","id":1746}}],"type":{"type":"array","elementType":{"type":"reference","name":"TId","id":212}}}],"sources":[{"fileName":"app/core/modules/util.ts","line":27,"character":26}]}],"groups":[{"title":"Enumerations","kind":4,"children":[1746]},{"title":"Functions","kind":64,"children":[1754,1749]}],"sources":[{"fileName":"app/core/modules/util.ts","line":1,"character":0}]},{"id":1784,"name":"\"app/core/modules/virtual\"","kind":1,"kindString":"External module","flags":{"isExported":true},"originalName":"C:/Dropbox/Files/Software/GitHub/design-automation/mobius-parametric-modeller/src/app/core/modules/virtual.ts","children":[{"id":1814,"name":"GetPlane","kind":64,"kindString":"Function","flags":{"isExported":true},"signatures":[{"id":1815,"name":"GetPlane","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Returns a plane from a set of positions.","returns":"The plane.\n"},"parameters":[{"id":1816,"name":"__model__","kind":32768,"kindString":"Parameter","flags":{},"comment":{},"type":{"type":"reference","name":"GIModel","id":1047}},{"id":1817,"name":"entities","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"Any entities"},"type":{"type":"union","types":[{"type":"reference","name":"TId","id":212},{"type":"array","elementType":{"type":"reference","name":"TId","id":212}}]}}],"type":{"type":"union","types":[{"type":"reference","name":"TPlane","id":210},{"type":"array","elementType":{"type":"reference","name":"TPlane","id":210}}]}}],"sources":[{"fileName":"app/core/modules/virtual.ts","line":141,"character":24}]},{"id":1806,"name":"GetRay","kind":64,"kindString":"Function","flags":{"isExported":true},"signatures":[{"id":1807,"name":"GetRay","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Returns a plane of a face.","returns":"The face plane.\n"},"parameters":[{"id":1808,"name":"__model__","kind":32768,"kindString":"Parameter","flags":{},"comment":{},"type":{"type":"reference","name":"GIModel","id":1047}},{"id":1809,"name":"edge","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"The id of an edge"},"type":{"type":"union","types":[{"type":"reference","name":"TId","id":212},{"type":"array","elementType":{"type":"reference","name":"TId","id":212}}]}}],"type":{"type":"union","types":[{"type":"reference","name":"TRay","id":209},{"type":"array","elementType":{"type":"reference","name":"TRay","id":209}}]}}],"sources":[{"fileName":"app/core/modules/virtual.ts","line":110,"character":22}]},{"id":1790,"name":"Plane","kind":64,"kindString":"Function","flags":{"isExported":true},"signatures":[{"id":1791,"name":"Plane","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Creates a plane, centered at the origin.\nA plane is define by a list of three lists, as folows: [origin, x_vector, y_vector].","returns":": [[x,y,z],[x',y',z'],[x\",y\",z\"]]","tags":[{"tag":"example","text":"virtual.Plane ([1,2,3],[4,3,2],[3,3,9])"},{"tag":"example_info","text":"Creates a plane with its origin positioned at [1,2,3] and two vectors [4,3,2] and [3,3,9] lie on it.\n"}]},"parameters":[{"id":1792,"name":"__model__","kind":32768,"kindString":"Parameter","flags":{},"comment":{},"type":{"type":"reference","name":"GIModel","id":1047}},{"id":1793,"name":"origin","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"Origin of plane: Position, Vertex, Point, or a list of three numbers"},"type":{"type":"union","types":[{"type":"reference","name":"TId","id":212},{"type":"reference","name":"Txyz","id":216}]}},{"id":1794,"name":"x_vec","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"X vector of the plane: List of three numbers"},"type":{"type":"reference","name":"Txyz","id":216}},{"id":1795,"name":"xy_vec","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"A vector in the xy plane (parallel to teh x vector): List of three numbers"},"type":{"type":"reference","name":"Txyz","id":216}}],"type":{"type":"reference","name":"TPlane","id":210}}],"sources":[{"fileName":"app/core/modules/virtual.ts","line":50,"character":21}]},{"id":1785,"name":"Ray","kind":64,"kindString":"Function","flags":{"isExported":true},"signatures":[{"id":1786,"name":"Ray","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Creates a ray, centered at the origin.\nA ray is defined by a list of two lists, as follows: [origin, direction_vector].","returns":": [[x,y,z],[x',y',z']]","tags":[{"tag":"example","text":"virtual.Ray([1,2,3],[4,3,2])"},{"tag":"example_info","text":"Creates a ray from [1,2,3] with the vector [4,3,2].\n\n"}]},"parameters":[{"id":1787,"name":"__model__","kind":32768,"kindString":"Parameter","flags":{},"comment":{},"type":{"type":"reference","name":"GIModel","id":1047}},{"id":1788,"name":"origin","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"Origin of ray: Position, Vertex, Point, or a list of three numbers"},"type":{"type":"union","types":[{"type":"reference","name":"TId","id":212},{"type":"reference","name":"Txyz","id":216}]}},{"id":1789,"name":"dir_vec","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"Direction of Ray: Vector, or list of three numbers"},"type":{"type":"reference","name":"Txyz","id":216}}],"type":{"type":"reference","name":"TRay","id":209}}],"sources":[{"fileName":"app/core/modules/virtual.ts","line":21,"character":19}]},{"id":1799,"name":"RayFromPlane","kind":64,"kindString":"Function","flags":{"isExported":true},"signatures":[{"id":1800,"name":"RayFromPlane","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Create a ray, from a plane.\nThe direction will be along the z axis.\nA plane is define by a list of three lists, as folows: [origin, x_vector, y_vector].\nA ray is defined by a list of two lists, as follows: [origin, direction_vector].","returns":"Ray or list of rays.\n"},"parameters":[{"id":1801,"name":"plane","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"Plane or list of planes."},"type":{"type":"union","types":[{"type":"reference","name":"TPlane","id":210},{"type":"array","elementType":{"type":"reference","name":"TPlane","id":210}}]}}],"type":{"type":"union","types":[{"type":"reference","name":"TRay","id":209},{"type":"array","elementType":{"type":"reference","name":"TRay","id":209}}]}}],"sources":[{"fileName":"app/core/modules/virtual.ts","line":86,"character":28}]},{"id":1823,"name":"VisPlane","kind":64,"kindString":"Function","flags":{"isExported":true},"signatures":[{"id":1824,"name":"VisPlane","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Visualises a plane by adding geometry to the model.","returns":"A points, a polygon and two polyline representing the plane. (The point is the origin of the plane.)","tags":[{"tag":"example","text":"plane1 = virtual.visPlane(position1, vector1, [0,1,0])"},{"tag":"example_info","text":"Creates a plane with position1 on it and normal = cross product of vector1 with y-axis.\n"}]},"parameters":[{"id":1825,"name":"__model__","kind":32768,"kindString":"Parameter","flags":{},"comment":{},"type":{"type":"reference","name":"GIModel","id":1047}},{"id":1826,"name":"plane","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"A list of lists"},"type":{"type":"reference","name":"TPlane","id":210}},{"id":1827,"name":"scale","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"array","elementType":{"type":"reference","name":"TId","id":212}}}],"sources":[{"fileName":"app/core/modules/virtual.ts","line":189,"character":24}]},{"id":1818,"name":"VisRay","kind":64,"kindString":"Function","flags":{"isExported":true},"signatures":[{"id":1819,"name":"VisRay","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Visualises a ray by adding geometry to the model.","returns":"A points and a line representing the ray. (The point is tha start point of the ray.)","tags":[{"tag":"example","text":"ray1 = virtual.visRay([[1,2,3],[0,0,1]])\n"}]},"parameters":[{"id":1820,"name":"__model__","kind":32768,"kindString":"Parameter","flags":{},"comment":{},"type":{"type":"reference","name":"GIModel","id":1047}},{"id":1821,"name":"ray","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"A list of two list of three coordinates [origin, vector]: [[x,y,z],[x',y',z']]"},"type":{"type":"reference","name":"TRay","id":209}},{"id":1822,"name":"scale","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"array","elementType":{"type":"reference","name":"TId","id":212}}}],"sources":[{"fileName":"app/core/modules/virtual.ts","line":157,"character":22}]},{"id":1810,"name":"_getPlane","kind":64,"kindString":"Function","flags":{},"signatures":[{"id":1811,"name":"_getPlane","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1812,"name":"__model__","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"GIModel","id":1047}},{"id":1813,"name":"ents_arr","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"union","types":[{"type":"reference","name":"TEntTypeIdx","id":208},{"type":"array","elementType":{"type":"reference","name":"TEntTypeIdx","id":208}}]}}],"type":{"type":"union","types":[{"type":"reference","name":"TPlane","id":210},{"type":"array","elementType":{"type":"reference","name":"TPlane","id":210}}]}}],"sources":[{"fileName":"app/core/modules/virtual.ts","line":118,"character":18}]},{"id":1802,"name":"_getRay","kind":64,"kindString":"Function","flags":{},"signatures":[{"id":1803,"name":"_getRay","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1804,"name":"__model__","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"GIModel","id":1047}},{"id":1805,"name":"ents_arr","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"union","types":[{"type":"reference","name":"TEntTypeIdx","id":208},{"type":"array","elementType":{"type":"reference","name":"TEntTypeIdx","id":208}}]}}],"type":{"type":"union","types":[{"type":"reference","name":"TRay","id":209},{"type":"array","elementType":{"type":"reference","name":"TRay","id":209}}]}}],"sources":[{"fileName":"app/core/modules/virtual.ts","line":94,"character":16}]},{"id":1796,"name":"_rayFromPlane","kind":64,"kindString":"Function","flags":{},"signatures":[{"id":1797,"name":"_rayFromPlane","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1798,"name":"planes","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"union","types":[{"type":"reference","name":"TPlane","id":210},{"type":"array","elementType":{"type":"reference","name":"TPlane","id":210}}]}}],"type":{"type":"union","types":[{"type":"reference","name":"TRay","id":209},{"type":"array","elementType":{"type":"reference","name":"TRay","id":209}}]}}],"sources":[{"fileName":"app/core/modules/virtual.ts","line":69,"character":22}]}],"groups":[{"title":"Functions","kind":64,"children":[1814,1806,1790,1785,1799,1823,1818,1810,1802,1796]}],"sources":[{"fileName":"app/core/modules/virtual.ts","line":1,"character":0}]},{"id":1740,"name":"\"libs/filesys/download\"","kind":1,"kindString":"External module","flags":{"isExported":true,"isExternal":true},"originalName":"C:/Dropbox/Files/Software/GitHub/design-automation/mobius-parametric-modeller/src/libs/filesys/download.ts","children":[{"id":1741,"name":"download","kind":64,"kindString":"Function","flags":{"isExported":true,"isExternal":true},"signatures":[{"id":1742,"name":"download","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Download a file."},"parameters":[{"id":1743,"name":"data","kind":32768,"kindString":"Parameter","flags":{},"comment":{},"type":{"type":"intrinsic","name":"string"}},{"id":1744,"name":"filename","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"\n"},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"boolean"}}],"sources":[{"fileName":"libs/filesys/download.ts","line":6,"character":24}]}],"groups":[{"title":"Functions","kind":64,"children":[1741]}],"sources":[{"fileName":"libs/filesys/download.ts","line":1,"character":0}]},{"id":1,"name":"\"libs/geo-info/GIAttribMap\"","kind":1,"kindString":"External module","flags":{"isExported":true,"isExternal":true},"originalName":"C:/Dropbox/Files/Software/GitHub/design-automation/mobius-parametric-modeller/src/libs/geo-info/GIAttribMap.ts","children":[{"id":2,"name":"GIAttribMap","kind":128,"kindString":"Class","flags":{"isExported":true,"isExternal":true},"comment":{"shortText":"Geo-info attribute class for one attribute.\nThe attributs stores key-value pairs.\nMultiple keys point to the same value.\nSo for example, [[1,3], \"a\"],[[0,4], \"b\"] can be converted into sequential arrays.\nThe values would be [\"a\", \"b\"]\nThe keys would be [1,0,,0,1] (Note the undefined value in the middle.)"},"children":[{"id":11,"name":"constructor","kind":512,"kindString":"Constructor","flags":{"isExported":true,"isExternal":true},"comment":{"shortText":"Creates an attribute."},"signatures":[{"id":12,"name":"new GIAttribMap","kind":16384,"kindString":"Constructor signature","flags":{},"comment":{"shortText":"Creates an attribute."},"parameters":[{"id":13,"name":"name","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":14,"name":"data_type","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"EAttribDataTypeStrs","id":170}},{"id":15,"name":"data_size","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","name":"GIAttribMap","id":2}}],"sources":[{"fileName":"libs/geo-info/GIAttribMap.ts","line":21,"character":53}]},{"id":5,"name":"_data_size","kind":1024,"kindString":"Property","flags":{"isPrivate":true,"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/GIAttribMap.ts","line":15,"character":22}],"type":{"type":"intrinsic","name":"number"}},{"id":4,"name":"_data_type","kind":1024,"kindString":"Property","flags":{"isPrivate":true,"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/GIAttribMap.ts","line":14,"character":22}],"type":{"type":"reference","name":"EAttribDataTypeStrs","id":170}},{"id":10,"name":"_map_ent_i_to_val_i","kind":1024,"kindString":"Property","flags":{"isPrivate":true,"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/GIAttribMap.ts","line":21,"character":31}],"type":{"type":"reference","name":"Map","typeArguments":[{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"number"}]}},{"id":9,"name":"_map_val_i_to_ents_i","kind":1024,"kindString":"Property","flags":{"isPrivate":true,"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/GIAttribMap.ts","line":20,"character":32}],"type":{"type":"reference","name":"Map","typeArguments":[{"type":"intrinsic","name":"number"},{"type":"array","elementType":{"type":"intrinsic","name":"number"}}]}},{"id":8,"name":"_map_val_i_to_val","kind":1024,"kindString":"Property","flags":{"isPrivate":true,"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/GIAttribMap.ts","line":19,"character":29}],"type":{"type":"reference","name":"Map","typeArguments":[{"type":"intrinsic","name":"number"},{"type":"reference","name":"TAttribDataTypes","id":228}]}},{"id":7,"name":"_map_val_k_to_val_i","kind":1024,"kindString":"Property","flags":{"isPrivate":true,"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/GIAttribMap.ts","line":18,"character":31}],"type":{"type":"reference","name":"Map","typeArguments":[{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"}]},{"type":"intrinsic","name":"number"}]}},{"id":3,"name":"_name","kind":1024,"kindString":"Property","flags":{"isPrivate":true,"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/GIAttribMap.ts","line":13,"character":17}],"type":{"type":"intrinsic","name":"string"}},{"id":6,"name":"_num_vals","kind":1024,"kindString":"Property","flags":{"isPrivate":true,"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/GIAttribMap.ts","line":17,"character":21}],"type":{"type":"intrinsic","name":"number"}},{"id":62,"name":"_compare","kind":2048,"kindString":"Method","flags":{"isPrivate":true,"isExported":true,"isExternal":true},"signatures":[{"id":63,"name":"_compare","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Compare two values"},"parameters":[{"id":64,"name":"operator","kind":32768,"kindString":"Parameter","flags":{},"comment":{},"type":{"type":"reference","name":"EQueryOperatorTypes","id":123}},{"id":65,"name":"val1","kind":32768,"kindString":"Parameter","flags":{},"comment":{},"type":{"type":"intrinsic","name":"any"}},{"id":66,"name":"val2","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"\n"},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"boolean"}}],"sources":[{"fileName":"libs/geo-info/GIAttribMap.ts","line":286,"character":20}]},{"id":59,"name":"_valToValkey","kind":2048,"kindString":"Method","flags":{"isPrivate":true,"isExported":true,"isExternal":true},"signatures":[{"id":60,"name":"_valToValkey","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Convert a value into a map key"},"parameters":[{"id":61,"name":"val","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"TAttribDataTypes","id":228}}],"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"}]}}],"sources":[{"fileName":"libs/geo-info/GIAttribMap.ts","line":263,"character":24}]},{"id":18,"name":"addData","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":19,"name":"addData","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Adds ent_ities to this attribute from JSON data.\nThe existing attribute data in the model is not deleted."},"parameters":[{"id":20,"name":"attrib_data","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"The JSON data for the new ent_ities.\n"},"type":{"type":"reference","name":"IAttribData","id":184}},{"id":21,"name":"ent_i_offset","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"libs/geo-info/GIAttribMap.ts","line":58,"character":18}]},{"id":16,"name":"getData","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":17,"name":"getData","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Returns the JSON data for this attribute."},"type":{"type":"reference","name":"IAttribData","id":184}}],"sources":[{"fileName":"libs/geo-info/GIAttribMap.ts","line":40,"character":18}]},{"id":26,"name":"getDataSize","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":27,"name":"getDataSize","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Returns the data size of this attribute."},"type":{"type":"intrinsic","name":"number"}}],"sources":[{"fileName":"libs/geo-info/GIAttribMap.ts","line":87,"character":22}]},{"id":24,"name":"getDataType","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":25,"name":"getDataType","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Returns the data type of this attribute."},"type":{"type":"reference","name":"EAttribDataTypeStrs","id":170}}],"sources":[{"fileName":"libs/geo-info/GIAttribMap.ts","line":81,"character":22}]},{"id":38,"name":"getEntVal","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":39,"name":"getEntVal","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Gets the value for a given entity.\nReturns undefined if the entity does not exist"},"parameters":[{"id":40,"name":"ent_i","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"\n"},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","name":"TAttribDataTypes","id":228}}],"sources":[{"fileName":"libs/geo-info/GIAttribMap.ts","line":129,"character":20}]},{"id":41,"name":"getEntsFromVal","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":42,"name":"getEntsFromVal","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Gets all the keys that have a given value\nIf the value does not exist an empty array is returned"},"parameters":[{"id":43,"name":"val","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"\n"},"type":{"type":"reference","name":"TAttribDataTypes","id":228}}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}}],"sources":[{"fileName":"libs/geo-info/GIAttribMap.ts","line":139,"character":25}]},{"id":50,"name":"getEntsVals","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":51,"name":"getEntsVals","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Gets an array of values, given an array of entity indicies"},"parameters":[{"id":52,"name":"ents_i","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}}],"type":{"type":"array","elementType":{"type":"reference","name":"TAttribDataTypes","id":228}}}],"sources":[{"fileName":"libs/geo-info/GIAttribMap.ts","line":159,"character":22}]},{"id":47,"name":"getEntsWithVal","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":48,"name":"getEntsWithVal","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Returns an array of entity indicies which have a value (not undefined)"},"parameters":[{"id":49,"name":"ents_i","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}}],"sources":[{"fileName":"libs/geo-info/GIAttribMap.ts","line":153,"character":25}]},{"id":44,"name":"getEntsWithoutVal","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":45,"name":"getEntsWithoutVal","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Returns an array of entity indicies which do not have a value (undefined)"},"parameters":[{"id":46,"name":"ents_i","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}}],"sources":[{"fileName":"libs/geo-info/GIAttribMap.ts","line":147,"character":28}]},{"id":22,"name":"getName","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":23,"name":"getName","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Returns the name of this attribute."},"type":{"type":"intrinsic","name":"string"}}],"sources":[{"fileName":"libs/geo-info/GIAttribMap.ts","line":75,"character":18}]},{"id":31,"name":"hasEnt","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":32,"name":"hasEnt","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Returns true if thereis an entity that has a value (i.e. the value is not undefined)."},"parameters":[{"id":33,"name":"ent_i","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"boolean"}}],"sources":[{"fileName":"libs/geo-info/GIAttribMap.ts","line":99,"character":17}]},{"id":28,"name":"hasVal","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":29,"name":"hasVal","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Returns true if this value exists in the attributes."},"parameters":[{"id":30,"name":"val","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"TAttribDataTypes","id":228}}],"type":{"type":"intrinsic","name":"boolean"}}],"sources":[{"fileName":"libs/geo-info/GIAttribMap.ts","line":93,"character":17}]},{"id":53,"name":"queryVal","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":54,"name":"queryVal","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Executes a query"},"parameters":[{"id":55,"name":"ents_i","kind":32768,"kindString":"Parameter","flags":{},"comment":{},"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}},{"id":56,"name":"val_arr_index","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"The index of the value in the array"},"type":{"type":"intrinsic","name":"number"}},{"id":57,"name":"operator","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"The relational operator, ==, !=, <=, >=, etc"},"type":{"type":"reference","name":"EQueryOperatorTypes","id":123}},{"id":58,"name":"val_k","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"The string version of the value.\n"},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}}],"sources":[{"fileName":"libs/geo-info/GIAttribMap.ts","line":179,"character":19}]},{"id":34,"name":"setEntVal","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":35,"name":"setEntVal","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Sets the value for a given entity or ent_ities."},"parameters":[{"id":36,"name":"ent_i","kind":32768,"kindString":"Parameter","flags":{},"comment":{},"type":{"type":"union","types":[{"type":"intrinsic","name":"number"},{"type":"array","elementType":{"type":"intrinsic","name":"number"}}]}},{"id":37,"name":"val","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"\n"},"type":{"type":"reference","name":"TAttribDataTypes","id":228}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"libs/geo-info/GIAttribMap.ts","line":107,"character":20}]}],"groups":[{"title":"Constructors","kind":512,"children":[11]},{"title":"Properties","kind":1024,"children":[5,4,10,9,8,7,3,6]},{"title":"Methods","kind":2048,"children":[62,59,18,16,26,24,38,41,50,47,44,22,31,28,53,34]}],"sources":[{"fileName":"libs/geo-info/GIAttribMap.ts","line":12,"character":24}]}],"groups":[{"title":"Classes","kind":128,"children":[2]}],"sources":[{"fileName":"libs/geo-info/GIAttribMap.ts","line":1,"character":0}]},{"id":967,"name":"\"libs/geo-info/GIAttribs\"","kind":1,"kindString":"External module","flags":{"isExported":true,"isExternal":true},"originalName":"C:/Dropbox/Files/Software/GitHub/design-automation/mobius-parametric-modeller/src/libs/geo-info/GIAttribs.ts","children":[{"id":968,"name":"GIAttribs","kind":128,"kindString":"Class","flags":{"isExported":true,"isExternal":true},"comment":{"shortText":"Class for attributes."},"children":[{"id":983,"name":"constructor","kind":512,"kindString":"Constructor","flags":{"isExported":true,"isExternal":true},"comment":{"shortText":"Creates an object to store the attribute data."},"signatures":[{"id":984,"name":"new GIAttribs","kind":16384,"kindString":"Constructor signature","flags":{},"comment":{"shortText":"Creates an object to store the attribute data."},"parameters":[{"id":985,"name":"model","kind":32768,"kindString":"Parameter","flags":{},"comment":{"shortText":"The JSON data\n"},"type":{"type":"reference","name":"GIModel","id":1047}}],"type":{"type":"reference","name":"GIAttribs","id":968}}],"sources":[{"fileName":"libs/geo-info/GIAttribs.ts","line":27,"character":37}]},{"id":969,"name":"_model","kind":1024,"kindString":"Property","flags":{"isPrivate":true,"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/GIAttribs.ts","line":11,"character":18}],"type":{"type":"reference","name":"GIModel","id":1047}},{"id":980,"name":"add","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true,"isPublic":true},"sources":[{"fileName":"libs/geo-info/GIAttribs.ts","line":25,"character":14}],"type":{"type":"reference","name":"GIAttribsAdd","id":838}},{"id":981,"name":"query","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true,"isPublic":true},"sources":[{"fileName":"libs/geo-info/GIAttribs.ts","line":26,"character":16}],"type":{"type":"reference","name":"GIAttribsQuery","id":899}},{"id":982,"name":"threejs","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true,"isPublic":true},"sources":[{"fileName":"libs/geo-info/GIAttribs.ts","line":27,"character":18}],"type":{"type":"reference","name":"GIAttribsThreejs","id":877}},{"id":986,"name":"getData","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":987,"name":"getData","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Returns the JSON data for this model."},"type":{"type":"reference","name":"IAttribsData","id":189}}],"sources":[{"fileName":"libs/geo-info/GIAttribs.ts","line":42,"character":18}]},{"id":970,"name":"_attribs_maps","kind":2097152,"kindString":"Object literal","flags":{"isPrivate":true,"isExported":true,"isExternal":true},"children":[{"id":973,"name":"_e","kind":32,"kindString":"Variable","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/GIAttribs.ts","line":16,"character":10}],"type":{"type":"reference","name":"Map","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"reference","name":"GIAttribMap","id":2}]},"defaultValue":" new Map()"},{"id":975,"name":"_f","kind":32,"kindString":"Variable","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/GIAttribs.ts","line":18,"character":10}],"type":{"type":"reference","name":"Map","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"reference","name":"GIAttribMap","id":2}]},"defaultValue":" new Map()"},{"id":972,"name":"_v","kind":32,"kindString":"Variable","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/GIAttribs.ts","line":15,"character":10}],"type":{"type":"reference","name":"Map","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"reference","name":"GIAttribMap","id":2}]},"defaultValue":" new Map()"},{"id":974,"name":"_w","kind":32,"kindString":"Variable","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/GIAttribs.ts","line":17,"character":10}],"type":{"type":"reference","name":"Map","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"reference","name":"GIAttribMap","id":2}]},"defaultValue":" new Map()"},{"id":979,"name":"co","kind":32,"kindString":"Variable","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/GIAttribs.ts","line":22,"character":10}],"type":{"type":"reference","name":"Map","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"reference","name":"GIAttribMap","id":2}]},"defaultValue":" new Map()"},{"id":978,"name":"pg","kind":32,"kindString":"Variable","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/GIAttribs.ts","line":21,"character":10}],"type":{"type":"reference","name":"Map","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"reference","name":"GIAttribMap","id":2}]},"defaultValue":" new Map()"},{"id":977,"name":"pl","kind":32,"kindString":"Variable","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/GIAttribs.ts","line":20,"character":10}],"type":{"type":"reference","name":"Map","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"reference","name":"GIAttribMap","id":2}]},"defaultValue":" new Map()"},{"id":971,"name":"ps","kind":32,"kindString":"Variable","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/GIAttribs.ts","line":14,"character":10}],"type":{"type":"reference","name":"Map","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"reference","name":"GIAttribMap","id":2}]},"defaultValue":" new Map()"},{"id":976,"name":"pt","kind":32,"kindString":"Variable","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/GIAttribs.ts","line":19,"character":10}],"type":{"type":"reference","name":"Map","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"reference","name":"GIAttribMap","id":2}]},"defaultValue":" new Map()"}],"groups":[{"title":"Variables","kind":32,"children":[973,975,972,974,979,978,977,971,976]}],"sources":[{"fileName":"libs/geo-info/GIAttribs.ts","line":13,"character":25}],"type":{"type":"intrinsic","name":"object"}}],"groups":[{"title":"Constructors","kind":512,"children":[983]},{"title":"Properties","kind":1024,"children":[969,980,981,982]},{"title":"Methods","kind":2048,"children":[986]},{"title":"Object literals","kind":2097152,"children":[970]}],"sources":[{"fileName":"libs/geo-info/GIAttribs.ts","line":10,"character":22}]}],"groups":[{"title":"Classes","kind":128,"children":[968]}],"sources":[{"fileName":"libs/geo-info/GIAttribs.ts","line":1,"character":0}]},{"id":837,"name":"\"libs/geo-info/GIAttribsAdd\"","kind":1,"kindString":"External module","flags":{"isExported":true,"isExternal":true},"originalName":"C:/Dropbox/Files/Software/GitHub/design-automation/mobius-parametric-modeller/src/libs/geo-info/GIAttribsAdd.ts","children":[{"id":838,"name":"GIAttribsAdd","kind":128,"kindString":"Class","flags":{"isExported":true,"isExternal":true},"comment":{"shortText":"Class for attributes."},"children":[{"id":841,"name":"constructor","kind":512,"kindString":"Constructor","flags":{"isExported":true,"isExternal":true},"comment":{"shortText":"Creates an object to store the attribute data."},"signatures":[{"id":842,"name":"new GIAttribsAdd","kind":16384,"kindString":"Constructor signature","flags":{},"comment":{"shortText":"Creates an object to store the attribute data."},"parameters":[{"id":843,"name":"model","kind":32768,"kindString":"Parameter","flags":{},"comment":{"shortText":"The JSON data\n"},"type":{"type":"reference","name":"GIModel","id":1047}},{"id":844,"name":"attribs_maps","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"IAttribsMaps","id":107}}],"type":{"type":"reference","name":"GIAttribsAdd","id":838}}],"sources":[{"fileName":"libs/geo-info/GIAttribsAdd.ts","line":12,"character":40}]},{"id":840,"name":"_attribs_maps","kind":1024,"kindString":"Property","flags":{"isPrivate":true,"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/GIAttribsAdd.ts","line":12,"character":25}],"type":{"type":"reference","name":"IAttribsMaps","id":107}},{"id":839,"name":"_model","kind":1024,"kindString":"Property","flags":{"isPrivate":true,"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/GIAttribsAdd.ts","line":11,"character":18}],"type":{"type":"reference","name":"GIModel","id":1047}},{"id":873,"name":"_checkDataTypeSize","kind":2048,"kindString":"Method","flags":{"isPrivate":true,"isExported":true,"isExternal":true},"signatures":[{"id":874,"name":"_checkDataTypeSize","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Utility method to check the data type and size of a value"},"parameters":[{"id":875,"name":"value","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"\n"},"type":{"type":"reference","name":"TAttribDataTypes","id":228}}],"type":{"type":"tuple","elements":[{"type":"reference","name":"EAttribDataTypeStrs","id":170},{"type":"intrinsic","name":"number"}]}}],"sources":[{"fileName":"libs/geo-info/GIAttribsAdd.ts","line":159,"character":30}]},{"id":848,"name":"addAttrib","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":849,"name":"addAttrib","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Creates a new attribte."},"parameters":[{"id":850,"name":"ent_type","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"The level at which to create the attribute."},"type":{"type":"reference","name":"EEntType","id":74}},{"id":851,"name":"name","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"The name of the attribute."},"type":{"type":"intrinsic","name":"string"}},{"id":852,"name":"data_type","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"The data type of the attribute."},"type":{"type":"reference","name":"EAttribDataTypeStrs","id":170}},{"id":853,"name":"data_size","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"The data size of the attribute. For example, an XYZ vector has size=3.\n"},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","name":"GIAttribMap","id":2}}],"sources":[{"fileName":"libs/geo-info/GIAttribsAdd.ts","line":93,"character":20}]},{"id":845,"name":"addData","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":846,"name":"addData","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Adds data to this model from JSON data.\nThe existing data in the model is not deleted."},"parameters":[{"id":847,"name":"model_data","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"The JSON data for the model.\n"},"type":{"type":"reference","name":"IModelData","id":199}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"libs/geo-info/GIAttribsAdd.ts","line":26,"character":18}]},{"id":868,"name":"copyAttribs","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":869,"name":"copyAttribs","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Copy attribs from one entity to another entity"},"parameters":[{"id":870,"name":"ent_type","kind":32768,"kindString":"Parameter","flags":{},"comment":{},"type":{"type":"reference","name":"EEntType","id":74}},{"id":871,"name":"from_ent_i","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":872,"name":"to_ent_i","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"libs/geo-info/GIAttribsAdd.ts","line":140,"character":22}]},{"id":864,"name":"movePosiCoords","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":865,"name":"movePosiCoords","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Move the xyz position by index"},"parameters":[{"id":866,"name":"index","kind":32768,"kindString":"Parameter","flags":{},"comment":{},"type":{"type":"intrinsic","name":"number"}},{"id":867,"name":"xyz","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Txyz","id":216}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"libs/geo-info/GIAttribsAdd.ts","line":130,"character":25}]},{"id":854,"name":"setAttribValue","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":855,"name":"setAttribValue","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Set an entity attrib value"},"parameters":[{"id":856,"name":"ent_type","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"EEntType","id":74}},{"id":857,"name":"index","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":858,"name":"name","kind":32768,"kindString":"Parameter","flags":{},"comment":{},"type":{"type":"intrinsic","name":"string"}},{"id":859,"name":"value","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"\n"},"type":{"type":"reference","name":"TAttribDataTypes","id":228}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"libs/geo-info/GIAttribsAdd.ts","line":108,"character":25}]},{"id":860,"name":"setPosiCoords","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":861,"name":"setPosiCoords","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Set the xyz position by index"},"parameters":[{"id":862,"name":"index","kind":32768,"kindString":"Parameter","flags":{},"comment":{},"type":{"type":"intrinsic","name":"number"}},{"id":863,"name":"xyz","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Txyz","id":216}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"libs/geo-info/GIAttribsAdd.ts","line":122,"character":24}]}],"groups":[{"title":"Constructors","kind":512,"children":[841]},{"title":"Properties","kind":1024,"children":[840,839]},{"title":"Methods","kind":2048,"children":[873,848,845,868,864,854,860]}],"sources":[{"fileName":"libs/geo-info/GIAttribsAdd.ts","line":10,"character":25}]}],"groups":[{"title":"Classes","kind":128,"children":[838]}],"sources":[{"fileName":"libs/geo-info/GIAttribsAdd.ts","line":1,"character":0}]},{"id":898,"name":"\"libs/geo-info/GIAttribsQuery\"","kind":1,"kindString":"External module","flags":{"isExported":true,"isExternal":true},"originalName":"C:/Dropbox/Files/Software/GitHub/design-automation/mobius-parametric-modeller/src/libs/geo-info/GIAttribsQuery.ts","children":[{"id":899,"name":"GIAttribsQuery","kind":128,"kindString":"Class","flags":{"isExported":true,"isExternal":true},"comment":{"shortText":"Class for attributes."},"children":[{"id":902,"name":"constructor","kind":512,"kindString":"Constructor","flags":{"isExported":true,"isExternal":true},"comment":{"shortText":"Creates an object to store the attribute data."},"signatures":[{"id":903,"name":"new GIAttribsQuery","kind":16384,"kindString":"Constructor signature","flags":{},"comment":{"shortText":"Creates an object to store the attribute data."},"parameters":[{"id":904,"name":"model","kind":32768,"kindString":"Parameter","flags":{},"comment":{"shortText":"The JSON data\n"},"type":{"type":"reference","name":"GIModel","id":1047}},{"id":905,"name":"attribs_maps","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"IAttribsMaps","id":107}}],"type":{"type":"reference","name":"GIAttribsQuery","id":899}}],"sources":[{"fileName":"libs/geo-info/GIAttribsQuery.ts","line":11,"character":40}]},{"id":901,"name":"_attribs_maps","kind":1024,"kindString":"Property","flags":{"isPrivate":true,"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/GIAttribsQuery.ts","line":11,"character":25}],"type":{"type":"reference","name":"IAttribsMaps","id":107}},{"id":900,"name":"_model","kind":1024,"kindString":"Property","flags":{"isPrivate":true,"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/GIAttribsQuery.ts","line":10,"character":18}],"type":{"type":"reference","name":"GIModel","id":1047}},{"id":941,"name":"getAllPosisCoords","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":942,"name":"getAllPosisCoords","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Shortcut for getting all coordinates"},"type":{"type":"array","elementType":{"type":"reference","name":"Txyz","id":216}}}],"sources":[{"fileName":"libs/geo-info/GIAttribsQuery.ts","line":182,"character":28}]},{"id":946,"name":"getAllVertsCoords","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":947,"name":"getAllVertsCoords","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Shortcut for getting coords for all verts"},"parameters":[{"id":948,"name":"attrib_name","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"\n"},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"array","elementType":{"type":"reference","name":"Txyz","id":216}}}],"sources":[{"fileName":"libs/geo-info/GIAttribsQuery.ts","line":199,"character":28}]},{"id":923,"name":"getAttrib","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":924,"name":"getAttrib","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Get attrib"},"parameters":[{"id":925,"name":"ent_type","kind":32768,"kindString":"Parameter","flags":{},"comment":{},"type":{"type":"reference","name":"EEntType","id":74}},{"id":926,"name":"name","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"\n"},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","name":"GIAttribMap","id":2}}],"sources":[{"fileName":"libs/geo-info/GIAttribsQuery.ts","line":66,"character":20}]},{"id":920,"name":"getAttribNames","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":921,"name":"getAttribNames","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Get all the attribute names for an entity type"},"parameters":[{"id":922,"name":"ent_type","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"\n"},"type":{"type":"reference","name":"EEntType","id":74}}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}}],"sources":[{"fileName":"libs/geo-info/GIAttribsQuery.ts","line":56,"character":25}]},{"id":906,"name":"getAttribValue","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":907,"name":"getAttribValue","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Get an entity attrib value"},"parameters":[{"id":908,"name":"ent_type","kind":32768,"kindString":"Parameter","flags":{},"comment":{},"type":{"type":"reference","name":"EEntType","id":74}},{"id":909,"name":"name","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"\n"},"type":{"type":"intrinsic","name":"string"}},{"id":910,"name":"index","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","name":"TAttribDataTypes","id":228}}],"sources":[{"fileName":"libs/geo-info/GIAttribsQuery.ts","line":25,"character":25}]},{"id":911,"name":"getAttribValues","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":912,"name":"getAttribValues","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Get attrib values for multiple entities"},"parameters":[{"id":913,"name":"ent_type","kind":32768,"kindString":"Parameter","flags":{},"comment":{},"type":{"type":"reference","name":"EEntType","id":74}},{"id":914,"name":"name","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"\n"},"type":{"type":"intrinsic","name":"string"}},{"id":915,"name":"ents_i","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}}],"type":{"type":"array","elementType":{"type":"reference","name":"TAttribDataTypes","id":228}}}],"sources":[{"fileName":"libs/geo-info/GIAttribsQuery.ts","line":36,"character":26}]},{"id":938,"name":"getPosiCoords","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":939,"name":"getPosiCoords","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Shortcut for getting a coordinate from a numeric position index (i.e. this is not an ID)"},"parameters":[{"id":940,"name":"posi_i","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"\n"},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","name":"Txyz","id":216}}],"sources":[{"fileName":"libs/geo-info/GIAttribsQuery.ts","line":174,"character":24}]},{"id":943,"name":"getVertCoords","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":944,"name":"getVertCoords","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Shortcut for getting a coordinate from a numeric vertex index (i.e. this is not an ID)"},"parameters":[{"id":945,"name":"vert_i","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"\n"},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","name":"Txyz","id":216}}],"sources":[{"fileName":"libs/geo-info/GIAttribsQuery.ts","line":191,"character":24}]},{"id":916,"name":"hasAttrib","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":917,"name":"hasAttrib","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Check if attribute exists"},"parameters":[{"id":918,"name":"ent_type","kind":32768,"kindString":"Parameter","flags":{},"comment":{},"type":{"type":"reference","name":"EEntType","id":74}},{"id":919,"name":"name","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"\n"},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"boolean"}}],"sources":[{"fileName":"libs/geo-info/GIAttribsQuery.ts","line":47,"character":20}]},{"id":927,"name":"queryAttribs","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":928,"name":"queryAttribs","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Query the model using a query strings.\nReturns a list of entities in the model."},"parameters":[{"id":929,"name":"ent_type","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"The type of the entities being search for"},"type":{"type":"reference","name":"EEntType","id":74}},{"id":930,"name":"query_str","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"The query string, e.g. '#@name == value'"},"type":{"type":"intrinsic","name":"string"}},{"id":931,"name":"indicies","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"The indicies of entites in the model. These are assumed to be of type ent_type.\n"},"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}}],"sources":[{"fileName":"libs/geo-info/GIAttribsQuery.ts","line":78,"character":23}]},{"id":932,"name":"sortByAttribs","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":933,"name":"sortByAttribs","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Query the model using a sort strings.\nReturns a list of entities in the model."},"parameters":[{"id":934,"name":"ent_type","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"The type of the entities being search for"},"type":{"type":"reference","name":"EEntType","id":74}},{"id":935,"name":"indicies","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"The indicies of entites in the model. These are assumed to be of type ent_type.\n"},"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}},{"id":936,"name":"sort_str","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"The sort string, e.g. '#@name && #@name2[3]'"},"type":{"type":"intrinsic","name":"string"}},{"id":937,"name":"method","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"ESort","id":139}}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}}],"sources":[{"fileName":"libs/geo-info/GIAttribsQuery.ts","line":123,"character":24}]}],"groups":[{"title":"Constructors","kind":512,"children":[902]},{"title":"Properties","kind":1024,"children":[901,900]},{"title":"Methods","kind":2048,"children":[941,946,923,920,906,911,938,943,916,927,932]}],"sources":[{"fileName":"libs/geo-info/GIAttribsQuery.ts","line":9,"character":27}]},{"id":964,"name":"_parse_name_str","kind":64,"kindString":"Function","flags":{"isExternal":true},"signatures":[{"id":965,"name":"_parse_name_str","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Parese the attribute name. Handles names with indexes, e.g. 'name[2]'\nSplit the name into the string name and the numeric index"},"parameters":[{"id":966,"name":"value_str","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"tuple","elements":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"}]}}],"sources":[{"fileName":"libs/geo-info/GIAttribsQuery.ts","line":312,"character":24}]},{"id":952,"name":"_parse_query_component","kind":64,"kindString":"Function","flags":{"isExternal":true},"signatures":[{"id":953,"name":"_parse_query_component","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Parse a query component string."},"parameters":[{"id":954,"name":"query_component","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","name":"IQueryComponent","id":131}}],"sources":[{"fileName":"libs/geo-info/GIAttribsQuery.ts","line":229,"character":31}]},{"id":958,"name":"_parse_sort_component","kind":64,"kindString":"Function","flags":{"isExternal":true},"signatures":[{"id":959,"name":"_parse_sort_component","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Parse a query component string."},"parameters":[{"id":960,"name":"sort_component","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","name":"ISortComponent","id":136}}],"sources":[{"fileName":"libs/geo-info/GIAttribsQuery.ts","line":283,"character":30}]},{"id":961,"name":"_parse_value_str","kind":64,"kindString":"Function","flags":{"isExternal":true},"signatures":[{"id":962,"name":"_parse_value_str","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Parse the attribute value. Handles sting with quotes, e.g. 'this' and \"that\".\nRemove quotes from value string"},"parameters":[{"id":963,"name":"value_str","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"string"}}],"sources":[{"fileName":"libs/geo-info/GIAttribsQuery.ts","line":303,"character":25}]},{"id":949,"name":"parseQuery","kind":64,"kindString":"Function","flags":{"isExternal":true},"signatures":[{"id":950,"name":"parseQuery","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Parse a query string.\n&& takes precedence over ||\n[ [ query1 && query2 ] || [ query3 && query4 ] ]"},"parameters":[{"id":951,"name":"query_str","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"array","elementType":{"type":"array","elementType":{"type":"reference","name":"IQueryComponent","id":131}}}}],"sources":[{"fileName":"libs/geo-info/GIAttribsQuery.ts","line":214,"character":19}]},{"id":955,"name":"parseSort","kind":64,"kindString":"Function","flags":{"isExternal":true},"signatures":[{"id":956,"name":"parseSort","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Parse a sort string. #@name1 && #@name2\nRerurns an array,[ query1, query2 ]"},"parameters":[{"id":957,"name":"sort_str","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"array","elementType":{"type":"reference","name":"ISortComponent","id":136}}}],"sources":[{"fileName":"libs/geo-info/GIAttribsQuery.ts","line":268,"character":18}]}],"groups":[{"title":"Classes","kind":128,"children":[899]},{"title":"Functions","kind":64,"children":[964,952,958,961,949,955]}],"sources":[{"fileName":"libs/geo-info/GIAttribsQuery.ts","line":1,"character":0}]},{"id":876,"name":"\"libs/geo-info/GIAttribsThreejs\"","kind":1,"kindString":"External module","flags":{"isExported":true,"isExternal":true},"originalName":"C:/Dropbox/Files/Software/GitHub/design-automation/mobius-parametric-modeller/src/libs/geo-info/GIAttribsThreejs.ts","children":[{"id":877,"name":"GIAttribsThreejs","kind":128,"kindString":"Class","flags":{"isExported":true,"isExternal":true},"comment":{"shortText":"Class for attributes."},"children":[{"id":880,"name":"constructor","kind":512,"kindString":"Constructor","flags":{"isExported":true,"isExternal":true},"comment":{"shortText":"Creates an object to store the attribute data."},"signatures":[{"id":881,"name":"new GIAttribsThreejs","kind":16384,"kindString":"Constructor signature","flags":{},"comment":{"shortText":"Creates an object to store the attribute data."},"parameters":[{"id":882,"name":"model","kind":32768,"kindString":"Parameter","flags":{},"comment":{"shortText":"The JSON data\n"},"type":{"type":"reference","name":"GIModel","id":1047}},{"id":883,"name":"attribs_maps","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"IAttribsMaps","id":107}}],"type":{"type":"reference","name":"GIAttribsThreejs","id":877}}],"sources":[{"fileName":"libs/geo-info/GIAttribsThreejs.ts","line":10,"character":40}]},{"id":879,"name":"_attribs_maps","kind":1024,"kindString":"Property","flags":{"isPrivate":true,"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/GIAttribsThreejs.ts","line":10,"character":25}],"type":{"type":"reference","name":"IAttribsMaps","id":107}},{"id":878,"name":"_model","kind":1024,"kindString":"Property","flags":{"isPrivate":true,"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/GIAttribsThreejs.ts","line":9,"character":18}],"type":{"type":"reference","name":"GIModel","id":1047}},{"id":886,"name":"get3jsSeqVertsAttrib","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":887,"name":"get3jsSeqVertsAttrib","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Get a flat array of attribute values for all the vertices.\nVerts that have been deleted will not be included"},"parameters":[{"id":888,"name":"attrib_name","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"The name of the vertex attribute. Either NORMAL or COLOR.\n"},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}}],"sources":[{"fileName":"libs/geo-info/GIAttribsThreejs.ts","line":43,"character":31}]},{"id":884,"name":"get3jsSeqVertsCoords","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":885,"name":"get3jsSeqVertsCoords","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Get a flat array of all the coordinates of all the vertices.\nVerts that have been deleted will not be included"},"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}}],"sources":[{"fileName":"libs/geo-info/GIAttribsThreejs.ts","line":29,"character":31}]},{"id":889,"name":"getAttribsForTable","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":890,"name":"getAttribsForTable","kind":4096,"kindString":"Call signature","flags":{},"comment":{},"parameters":[{"id":891,"name":"ent_type","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"\n"},"type":{"type":"reference","name":"EEntType","id":74}}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"sources":[{"fileName":"libs/geo-info/GIAttribsThreejs.ts","line":56,"character":29}]},{"id":892,"name":"getEntsVals","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":893,"name":"getEntsVals","kind":4096,"kindString":"Call signature","flags":{},"comment":{},"parameters":[{"id":894,"name":"selected_ents","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Map","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"}]}},{"id":895,"name":"ent_type","kind":32768,"kindString":"Parameter","flags":{},"comment":{},"type":{"type":"reference","name":"EEntType","id":74}}],"type":{"type":"array","elementType":{"type":"reflection","declaration":{"id":896,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":897,"name":"id","kind":32,"kindString":"Variable","flags":{"isExternal":true},"sources":[{"fileName":"libs/geo-info/GIAttribsThreejs.ts","line":92,"character":45}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Variables","kind":32,"children":[897]}]}}}}],"sources":[{"fileName":"libs/geo-info/GIAttribsThreejs.ts","line":89,"character":22}]}],"groups":[{"title":"Constructors","kind":512,"children":[880]},{"title":"Properties","kind":1024,"children":[879,878]},{"title":"Methods","kind":2048,"children":[886,884,889,892]}],"sources":[{"fileName":"libs/geo-info/GIAttribsThreejs.ts","line":8,"character":29}]}],"groups":[{"title":"Classes","kind":128,"children":[877]}],"sources":[{"fileName":"libs/geo-info/GIAttribsThreejs.ts","line":1,"character":0}]},{"id":1004,"name":"\"libs/geo-info/GIGeom\"","kind":1,"kindString":"External module","flags":{"isExported":true,"isExternal":true},"originalName":"C:/Dropbox/Files/Software/GitHub/design-automation/mobius-parametric-modeller/src/libs/geo-info/GIGeom.ts","children":[{"id":1005,"name":"GIGeom","kind":128,"kindString":"Class","flags":{"isExported":true,"isExternal":true},"comment":{"shortText":"Class for geometry."},"children":[{"id":1033,"name":"constructor","kind":512,"kindString":"Constructor","flags":{"isExported":true,"isExternal":true},"comment":{"shortText":"Creates an object to store the geometry data."},"signatures":[{"id":1034,"name":"new GIGeom","kind":16384,"kindString":"Constructor signature","flags":{},"comment":{"shortText":"Creates an object to store the geometry data."},"parameters":[{"id":1035,"name":"model","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"GIModel","id":1047}}],"type":{"type":"reference","name":"GIGeom","id":1005}}],"sources":[{"fileName":"libs/geo-info/GIGeom.ts","line":40,"character":34}]},{"id":1030,"name":"add","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true,"isPublic":true},"sources":[{"fileName":"libs/geo-info/GIGeom.ts","line":38,"character":14}],"type":{"type":"reference","name":"GIGeomAdd","id":455}},{"id":1006,"name":"model","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true,"isPublic":true},"sources":[{"fileName":"libs/geo-info/GIGeom.ts","line":11,"character":16}],"type":{"type":"reference","name":"GIModel","id":1047}},{"id":1031,"name":"query","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true,"isPublic":true},"sources":[{"fileName":"libs/geo-info/GIGeom.ts","line":39,"character":16}],"type":{"type":"reference","name":"GIGeomQuery","id":597}},{"id":1032,"name":"threejs","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true,"isPublic":true},"sources":[{"fileName":"libs/geo-info/GIGeom.ts","line":40,"character":18}],"type":{"type":"reference","name":"GIGeomThreejs","id":989}},{"id":1036,"name":"getData","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":1037,"name":"getData","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Returns the JSON data for this model."},"type":{"type":"reference","name":"IGeomData","id":173}}],"sources":[{"fileName":"libs/geo-info/GIGeom.ts","line":54,"character":18}]},{"id":1007,"name":"_geom_arrays","kind":2097152,"kindString":"Object literal","flags":{"isPrivate":true,"isExported":true,"isExternal":true},"children":[{"id":1017,"name":"dn_colls_objs","kind":32,"kindString":"Variable","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/GIGeom.ts","line":23,"character":21}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"undefined"}},"defaultValue":" []"},{"id":1011,"name":"dn_edges_verts","kind":32,"kindString":"Variable","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/GIGeom.ts","line":17,"character":22}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"undefined"}},"defaultValue":" []"},{"id":1013,"name":"dn_faces_wirestris","kind":32,"kindString":"Variable","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/GIGeom.ts","line":19,"character":26}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"undefined"}},"defaultValue":" []"},{"id":1016,"name":"dn_pgons_faces","kind":32,"kindString":"Variable","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/GIGeom.ts","line":22,"character":22}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"undefined"}},"defaultValue":" []"},{"id":1015,"name":"dn_plines_wires","kind":32,"kindString":"Variable","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/GIGeom.ts","line":21,"character":23}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"undefined"}},"defaultValue":" []"},{"id":1014,"name":"dn_points_verts","kind":32,"kindString":"Variable","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/GIGeom.ts","line":20,"character":23}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"undefined"}},"defaultValue":" []"},{"id":1010,"name":"dn_tris_verts","kind":32,"kindString":"Variable","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/GIGeom.ts","line":16,"character":21}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"undefined"}},"defaultValue":" []"},{"id":1009,"name":"dn_verts_posis","kind":32,"kindString":"Variable","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/GIGeom.ts","line":15,"character":22}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"undefined"}},"defaultValue":" []"},{"id":1012,"name":"dn_wires_edges","kind":32,"kindString":"Variable","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/GIGeom.ts","line":18,"character":22}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"undefined"}},"defaultValue":" []"},{"id":1008,"name":"num_posis","kind":32,"kindString":"Variable","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/GIGeom.ts","line":14,"character":17}],"type":{"type":"intrinsic","name":"number"},"defaultValue":"0"},{"id":1023,"name":"up_edges_wires","kind":32,"kindString":"Variable","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/GIGeom.ts","line":29,"character":22}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"undefined"}},"defaultValue":" []"},{"id":1026,"name":"up_faces_pgons","kind":32,"kindString":"Variable","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/GIGeom.ts","line":32,"character":22}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"undefined"}},"defaultValue":" []"},{"id":1029,"name":"up_pgons_colls","kind":32,"kindString":"Variable","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/GIGeom.ts","line":35,"character":22}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"undefined"}},"defaultValue":" []"},{"id":1028,"name":"up_plines_colls","kind":32,"kindString":"Variable","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/GIGeom.ts","line":34,"character":23}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"undefined"}},"defaultValue":" []"},{"id":1027,"name":"up_points_colls","kind":32,"kindString":"Variable","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/GIGeom.ts","line":33,"character":23}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"undefined"}},"defaultValue":" []"},{"id":1018,"name":"up_posis_verts","kind":32,"kindString":"Variable","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/GIGeom.ts","line":24,"character":22}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"undefined"}},"defaultValue":" []"},{"id":1019,"name":"up_tris_faces","kind":32,"kindString":"Variable","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/GIGeom.ts","line":25,"character":21}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"undefined"}},"defaultValue":" []"},{"id":1020,"name":"up_verts_edges","kind":32,"kindString":"Variable","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/GIGeom.ts","line":26,"character":22}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"undefined"}},"defaultValue":" []"},{"id":1022,"name":"up_verts_points","kind":32,"kindString":"Variable","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/GIGeom.ts","line":28,"character":23}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"undefined"}},"defaultValue":" []"},{"id":1021,"name":"up_verts_tris","kind":32,"kindString":"Variable","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/GIGeom.ts","line":27,"character":21}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"undefined"}},"defaultValue":" []"},{"id":1024,"name":"up_wires_faces","kind":32,"kindString":"Variable","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/GIGeom.ts","line":30,"character":22}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"undefined"}},"defaultValue":" []"},{"id":1025,"name":"up_wires_plines","kind":32,"kindString":"Variable","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/GIGeom.ts","line":31,"character":23}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"undefined"}},"defaultValue":" []"}],"groups":[{"title":"Variables","kind":32,"children":[1017,1011,1013,1016,1015,1014,1010,1009,1012,1008,1023,1026,1029,1028,1027,1018,1019,1020,1022,1021,1024,1025]}],"sources":[{"fileName":"libs/geo-info/GIGeom.ts","line":13,"character":24}],"type":{"type":"intrinsic","name":"object"}}],"groups":[{"title":"Constructors","kind":512,"children":[1033]},{"title":"Properties","kind":1024,"children":[1030,1006,1031,1032]},{"title":"Methods","kind":2048,"children":[1036]},{"title":"Object literals","kind":2097152,"children":[1007]}],"sources":[{"fileName":"libs/geo-info/GIGeom.ts","line":10,"character":19}]}],"groups":[{"title":"Classes","kind":128,"children":[1005]}],"sources":[{"fileName":"libs/geo-info/GIGeom.ts","line":1,"character":0}]},{"id":454,"name":"\"libs/geo-info/GIGeomAdd\"","kind":1,"kindString":"External module","flags":{"isExported":true,"isExternal":true},"originalName":"C:/Dropbox/Files/Software/GitHub/design-automation/mobius-parametric-modeller/src/libs/geo-info/GIGeomAdd.ts","children":[{"id":455,"name":"GIGeomAdd","kind":128,"kindString":"Class","flags":{"isExported":true,"isExternal":true},"comment":{"shortText":"Class for geometry."},"children":[{"id":458,"name":"constructor","kind":512,"kindString":"Constructor","flags":{"isExported":true,"isExternal":true},"comment":{"shortText":"Creates an object to store the geometry data."},"signatures":[{"id":459,"name":"new GIGeomAdd","kind":16384,"kindString":"Constructor signature","flags":{},"comment":{"shortText":"Creates an object to store the geometry data."},"parameters":[{"id":460,"name":"geom","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"GIGeom","id":1005}},{"id":461,"name":"geom_arrays","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"IGeomArrays","id":142}}],"type":{"type":"reference","name":"GIGeomAdd","id":455}}],"sources":[{"fileName":"libs/geo-info/GIGeomAdd.ts","line":11,"character":38}]},{"id":456,"name":"_geom","kind":1024,"kindString":"Property","flags":{"isPrivate":true,"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/GIGeomAdd.ts","line":10,"character":17}],"type":{"type":"reference","name":"GIGeom","id":1005}},{"id":457,"name":"_geom_arrays","kind":1024,"kindString":"Property","flags":{"isPrivate":true,"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/GIGeomAdd.ts","line":11,"character":24}],"type":{"type":"reference","name":"IGeomArrays","id":142}},{"id":470,"name":"_addEdge","kind":2048,"kindString":"Method","flags":{"isPrivate":true,"isExported":true,"isExternal":true},"signatures":[{"id":471,"name":"_addEdge","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Adds an edge and updates the arrays."},"parameters":[{"id":472,"name":"vert_i1","kind":32768,"kindString":"Parameter","flags":{},"comment":{},"type":{"type":"intrinsic","name":"number"}},{"id":473,"name":"vert_i2","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"\n"},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"number"}}],"sources":[{"fileName":"libs/geo-info/GIGeomAdd.ts","line":239,"character":20}]},{"id":481,"name":"_addFace","kind":2048,"kindString":"Method","flags":{"isPrivate":true,"isExported":true,"isExternal":true},"signatures":[{"id":482,"name":"_addFace","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Adds a face and updates the arrays.\nWires are assumed to be closed!\nThis also calls addTris()\nNo holes yet... TODO"},"parameters":[{"id":483,"name":"wire_i","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"\n"},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"number"}}],"sources":[{"fileName":"libs/geo-info/GIGeomAdd.ts","line":303,"character":20}]},{"id":478,"name":"_addTris","kind":2048,"kindString":"Method","flags":{"isPrivate":true,"isExported":true,"isExternal":true},"signatures":[{"id":479,"name":"_addTris","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Adds trangles and updates the arrays.\nWires are assumed to be closed!\nNo holes yet... TODO"},"parameters":[{"id":480,"name":"wire_i","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"\n"},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}}],"sources":[{"fileName":"libs/geo-info/GIGeomAdd.ts","line":273,"character":20}]},{"id":467,"name":"_addVertex","kind":2048,"kindString":"Method","flags":{"isPrivate":true,"isExported":true,"isExternal":true},"signatures":[{"id":468,"name":"_addVertex","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Adds a vertex and updates the arrays."},"parameters":[{"id":469,"name":"posi_i","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"\n"},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"number"}}],"sources":[{"fileName":"libs/geo-info/GIGeomAdd.ts","line":223,"character":22}]},{"id":474,"name":"_addWire","kind":2048,"kindString":"Method","flags":{"isPrivate":true,"isExported":true,"isExternal":true},"signatures":[{"id":475,"name":"_addWire","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Adds a wire and updates the arrays.\nEdges are assumed to be sequential!"},"parameters":[{"id":476,"name":"edges_i","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"\n"},"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}},{"id":477,"name":"close","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"boolean"},"defaultValue":"false"}],"type":{"type":"intrinsic","name":"number"}}],"sources":[{"fileName":"libs/geo-info/GIGeomAdd.ts","line":259,"character":20}]},{"id":465,"name":"_updateRevArrays","kind":2048,"kindString":"Method","flags":{"isPrivate":true,"isExported":true,"isExternal":true},"signatures":[{"id":466,"name":"_updateRevArrays","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Updates the rev arrays the create the reveres links."},"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"libs/geo-info/GIGeomAdd.ts","line":127,"character":28}]},{"id":496,"name":"addColl","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":497,"name":"addColl","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Adds a collection and updates the rev array using numeric indicies."},"parameters":[{"id":498,"name":"parent_i","kind":32768,"kindString":"Parameter","flags":{},"comment":{},"type":{"type":"intrinsic","name":"number"}},{"id":499,"name":"points_i","kind":32768,"kindString":"Parameter","flags":{},"comment":{},"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}},{"id":500,"name":"plines_i","kind":32768,"kindString":"Parameter","flags":{},"comment":{},"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}},{"id":501,"name":"pgons_i","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"\n"},"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}}],"type":{"type":"intrinsic","name":"number"}}],"sources":[{"fileName":"libs/geo-info/GIGeomAdd.ts","line":384,"character":18}]},{"id":462,"name":"addData","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":463,"name":"addData","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Adds data to this model from JSON data.\nThe existing data in the model is not deleted."},"parameters":[{"id":464,"name":"geom_data","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"The JSON data\n"},"type":{"type":"reference","name":"IGeomData","id":173}}],"type":{"type":"reference","name":"IGeomPack","id":68}}],"sources":[{"fileName":"libs/geo-info/GIGeomAdd.ts","line":25,"character":18}]},{"id":493,"name":"addPgon","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":494,"name":"addPgon","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Adds a new polygon entity to the model using numeric indicies."},"parameters":[{"id":495,"name":"posis_i","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}}],"type":{"type":"intrinsic","name":"number"}}],"sources":[{"fileName":"libs/geo-info/GIGeomAdd.ts","line":362,"character":18}]},{"id":489,"name":"addPline","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":490,"name":"addPline","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Adds a new pline entity to the model using numeric indicies."},"parameters":[{"id":491,"name":"posis_i","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"\n"},"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}},{"id":492,"name":"close","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"boolean"},"defaultValue":"false"}],"type":{"type":"intrinsic","name":"number"}}],"sources":[{"fileName":"libs/geo-info/GIGeomAdd.ts","line":342,"character":19}]},{"id":486,"name":"addPoint","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":487,"name":"addPoint","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Adds a new point entity to the model."},"parameters":[{"id":488,"name":"posi_i","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"The position for the point.\n"},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"number"}}],"sources":[{"fileName":"libs/geo-info/GIGeomAdd.ts","line":330,"character":19}]},{"id":484,"name":"addPosition","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":485,"name":"addPosition","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Adds a new position to the model and returns the index to that position."},"type":{"type":"intrinsic","name":"number"}}],"sources":[{"fileName":"libs/geo-info/GIGeomAdd.ts","line":322,"character":22}]},{"id":515,"name":"closeWire","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":516,"name":"closeWire","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Close a wire"},"parameters":[{"id":517,"name":"wire_i","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"The wire to close.\n"},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"libs/geo-info/GIGeomAdd.ts","line":512,"character":20}]},{"id":511,"name":"copyColls","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":512,"name":"copyColls","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Copy an object (point, polyline, polygon).\nTODO Copy attribs of object and topo entities"},"parameters":[{"id":513,"name":"coll_i","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"union","types":[{"type":"intrinsic","name":"number"},{"type":"array","elementType":{"type":"intrinsic","name":"number"}}]}},{"id":514,"name":"copy_attribs","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"\n"},"type":{"type":"intrinsic","name":"boolean"}}],"type":{"type":"union","types":[{"type":"intrinsic","name":"number"},{"type":"array","elementType":{"type":"intrinsic","name":"number"}}]}}],"sources":[{"fileName":"libs/geo-info/GIGeomAdd.ts","line":482,"character":20}]},{"id":506,"name":"copyObjs","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":507,"name":"copyObjs","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Copy an object (point, polyline, polygon).\nTODO copy attribs of topo entities"},"parameters":[{"id":508,"name":"ent_type","kind":32768,"kindString":"Parameter","flags":{},"comment":{},"type":{"type":"reference","name":"EEntType","id":74}},{"id":509,"name":"ent_i","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"union","types":[{"type":"intrinsic","name":"number"},{"type":"array","elementType":{"type":"intrinsic","name":"number"}}]}},{"id":510,"name":"copy_attribs","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"\n"},"type":{"type":"intrinsic","name":"boolean"}}],"type":{"type":"union","types":[{"type":"intrinsic","name":"number"},{"type":"array","elementType":{"type":"intrinsic","name":"number"}}]}}],"sources":[{"fileName":"libs/geo-info/GIGeomAdd.ts","line":441,"character":19}]},{"id":502,"name":"copyPosis","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":503,"name":"copyPosis","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Copy positions."},"parameters":[{"id":504,"name":"posis_i","kind":32768,"kindString":"Parameter","flags":{},"comment":{},"type":{"type":"union","types":[{"type":"intrinsic","name":"number"},{"type":"array","elementType":{"type":"intrinsic","name":"number"}}]}},{"id":505,"name":"copy_attribs","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"\n"},"type":{"type":"intrinsic","name":"boolean"}}],"type":{"type":"union","types":[{"type":"intrinsic","name":"number"},{"type":"array","elementType":{"type":"intrinsic","name":"number"}}]}}],"sources":[{"fileName":"libs/geo-info/GIGeomAdd.ts","line":415,"character":20}]},{"id":522,"name":"deleteVertWire","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":523,"name":"deleteVertWire","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Delete a vertex from a wire"},"parameters":[{"id":524,"name":"edge_i","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":525,"name":"posi_i","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"libs/geo-info/GIGeomAdd.ts","line":551,"character":25}]},{"id":518,"name":"insertVertIntoEdge","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":519,"name":"insertVertIntoEdge","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Insert a vertex into an edge and updates the wire with the new edge"},"parameters":[{"id":520,"name":"edge_i","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":521,"name":"posi_i","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"number"}}],"sources":[{"fileName":"libs/geo-info/GIGeomAdd.ts","line":532,"character":29}]},{"id":526,"name":"replacePosis","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":527,"name":"replacePosis","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Replace positions"},"parameters":[{"id":528,"name":"ent_type","kind":32768,"kindString":"Parameter","flags":{},"comment":{},"type":{"type":"reference","name":"EEntType","id":74}},{"id":529,"name":"ent_i","kind":32768,"kindString":"Parameter","flags":{},"comment":{},"type":{"type":"intrinsic","name":"number"}},{"id":530,"name":"new_posis_i","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"\n"},"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"libs/geo-info/GIGeomAdd.ts","line":560,"character":23}]},{"id":531,"name":"unweldVerts","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":532,"name":"unweldVerts","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Unweld the vertices"},"parameters":[{"id":533,"name":"verts_i","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"\n"},"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}}],"sources":[{"fileName":"libs/geo-info/GIGeomAdd.ts","line":573,"character":22}]}],"groups":[{"title":"Constructors","kind":512,"children":[458]},{"title":"Properties","kind":1024,"children":[456,457]},{"title":"Methods","kind":2048,"children":[470,481,478,467,474,465,496,462,493,489,486,484,515,511,506,502,522,518,526,531]}],"sources":[{"fileName":"libs/geo-info/GIGeomAdd.ts","line":9,"character":22}]}],"groups":[{"title":"Classes","kind":128,"children":[455]}],"sources":[{"fileName":"libs/geo-info/GIGeomAdd.ts","line":1,"character":0}]},{"id":596,"name":"\"libs/geo-info/GIGeomQuery\"","kind":1,"kindString":"External module","flags":{"isExported":true,"isExternal":true},"originalName":"C:/Dropbox/Files/Software/GitHub/design-automation/mobius-parametric-modeller/src/libs/geo-info/GIGeomQuery.ts","children":[{"id":597,"name":"GIGeomQuery","kind":128,"kindString":"Class","flags":{"isExported":true,"isExternal":true},"comment":{"shortText":"Class for geometry."},"children":[{"id":600,"name":"constructor","kind":512,"kindString":"Constructor","flags":{"isExported":true,"isExternal":true},"comment":{"shortText":"Creates an object to store the geometry data."},"signatures":[{"id":601,"name":"new GIGeomQuery","kind":16384,"kindString":"Constructor signature","flags":{},"comment":{"shortText":"Creates an object to store the geometry data."},"parameters":[{"id":602,"name":"geom","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"GIGeom","id":1005}},{"id":603,"name":"geom_arrays","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"IGeomArrays","id":142}}],"type":{"type":"reference","name":"GIGeomQuery","id":597}}],"sources":[{"fileName":"libs/geo-info/GIGeomQuery.ts","line":10,"character":38}]},{"id":598,"name":"_geom","kind":1024,"kindString":"Property","flags":{"isPrivate":true,"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/GIGeomQuery.ts","line":9,"character":17}],"type":{"type":"reference","name":"GIGeom","id":1005}},{"id":599,"name":"_geom_arrays","kind":1024,"kindString":"Property","flags":{"isPrivate":true,"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/GIGeomQuery.ts","line":10,"character":24}],"type":{"type":"reference","name":"IGeomArrays","id":142}},{"id":613,"name":"entExists","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":614,"name":"entExists","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Check if an entity exists"},"parameters":[{"id":615,"name":"ent_type","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"EEntType","id":74}},{"id":616,"name":"index","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"\n"},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"boolean"}}],"sources":[{"fileName":"libs/geo-info/GIGeomQuery.ts","line":67,"character":20}]},{"id":623,"name":"getCollParent","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":624,"name":"getCollParent","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Get the parent of a collection."},"parameters":[{"id":625,"name":"coll_i","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"number"}}],"sources":[{"fileName":"libs/geo-info/GIGeomQuery.ts","line":104,"character":24}]},{"id":604,"name":"getEnts","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":605,"name":"getEnts","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":606,"name":"ent_type","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"EEntType","id":74}}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}}],"sources":[{"fileName":"libs/geo-info/GIGeomQuery.ts","line":22,"character":18}]},{"id":620,"name":"getWireVerts","kind":2048,"kindString":"Method","flags":{"isPrivate":true,"isExported":true,"isExternal":true},"signatures":[{"id":621,"name":"getWireVerts","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Returns the vertices.\nFor a closed wire, #vertices = #edges\nFor an open wire, #vertices = #edges + 1"},"parameters":[{"id":622,"name":"wire_i","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}}],"sources":[{"fileName":"libs/geo-info/GIGeomQuery.ts","line":91,"character":24}]},{"id":617,"name":"istWireClosed","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":618,"name":"istWireClosed","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Check if a wire is closed."},"parameters":[{"id":619,"name":"wire_i","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"\n"},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"boolean"}}],"sources":[{"fileName":"libs/geo-info/GIGeomQuery.ts","line":75,"character":24}]},{"id":737,"name":"navAnyToAny","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":738,"name":"navAnyToAny","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Navigate from any level down to the positions"},"parameters":[{"id":739,"name":"from_ets","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"EEntType","id":74}},{"id":740,"name":"to_ets","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"EEntType","id":74}},{"id":741,"name":"index","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"\n"},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}}],"sources":[{"fileName":"libs/geo-info/GIGeomQuery.ts","line":398,"character":22}]},{"id":701,"name":"navAnyToColl","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":702,"name":"navAnyToColl","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Navigate from any level to the colls"},"parameters":[{"id":703,"name":"ent_type","kind":32768,"kindString":"Parameter","flags":{},"comment":{},"type":{"type":"reference","name":"EEntType","id":74}},{"id":704,"name":"index","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"\n"},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}}],"sources":[{"fileName":"libs/geo-info/GIGeomQuery.ts","line":196,"character":23}]},{"id":725,"name":"navAnyToEdge","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":726,"name":"navAnyToEdge","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Navigate from any level to the edges"},"parameters":[{"id":727,"name":"ent_type","kind":32768,"kindString":"Parameter","flags":{},"comment":{},"type":{"type":"reference","name":"EEntType","id":74}},{"id":728,"name":"index","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"\n"},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}}],"sources":[{"fileName":"libs/geo-info/GIGeomQuery.ts","line":310,"character":23}]},{"id":717,"name":"navAnyToFace","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":718,"name":"navAnyToFace","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Navigate from any level to the faces"},"parameters":[{"id":719,"name":"ent_type","kind":32768,"kindString":"Parameter","flags":{},"comment":{},"type":{"type":"reference","name":"EEntType","id":74}},{"id":720,"name":"index","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"\n"},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}}],"sources":[{"fileName":"libs/geo-info/GIGeomQuery.ts","line":241,"character":23}]},{"id":705,"name":"navAnyToPgon","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":706,"name":"navAnyToPgon","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Navigate from any level to the pgons"},"parameters":[{"id":707,"name":"ent_type","kind":32768,"kindString":"Parameter","flags":{},"comment":{},"type":{"type":"reference","name":"EEntType","id":74}},{"id":708,"name":"index","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"\n"},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}}],"sources":[{"fileName":"libs/geo-info/GIGeomQuery.ts","line":211,"character":23}]},{"id":709,"name":"navAnyToPline","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":710,"name":"navAnyToPline","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Navigate from any level to the plines"},"parameters":[{"id":711,"name":"ent_type","kind":32768,"kindString":"Parameter","flags":{},"comment":{},"type":{"type":"reference","name":"EEntType","id":74}},{"id":712,"name":"index","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"\n"},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}}],"sources":[{"fileName":"libs/geo-info/GIGeomQuery.ts","line":221,"character":24}]},{"id":713,"name":"navAnyToPoint","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":714,"name":"navAnyToPoint","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Navigate from any level to the points"},"parameters":[{"id":715,"name":"ent_type","kind":32768,"kindString":"Parameter","flags":{},"comment":{},"type":{"type":"reference","name":"EEntType","id":74}},{"id":716,"name":"index","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"\n"},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}}],"sources":[{"fileName":"libs/geo-info/GIGeomQuery.ts","line":231,"character":24}]},{"id":733,"name":"navAnyToPosi","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":734,"name":"navAnyToPosi","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Navigate from any level to the positions"},"parameters":[{"id":735,"name":"ent_type","kind":32768,"kindString":"Parameter","flags":{},"comment":{},"type":{"type":"reference","name":"EEntType","id":74}},{"id":736,"name":"index","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"\n"},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}}],"sources":[{"fileName":"libs/geo-info/GIGeomQuery.ts","line":385,"character":23}]},{"id":729,"name":"navAnyToVert","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":730,"name":"navAnyToVert","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Navigate from any level to the vertices"},"parameters":[{"id":731,"name":"ent_type","kind":32768,"kindString":"Parameter","flags":{},"comment":{},"type":{"type":"reference","name":"EEntType","id":74}},{"id":732,"name":"index","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"\n"},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}}],"sources":[{"fileName":"libs/geo-info/GIGeomQuery.ts","line":347,"character":23}]},{"id":721,"name":"navAnyToWire","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":722,"name":"navAnyToWire","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Navigate from any level to the wires"},"parameters":[{"id":723,"name":"ent_type","kind":32768,"kindString":"Parameter","flags":{},"comment":{},"type":{"type":"reference","name":"EEntType","id":74}},{"id":724,"name":"index","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"\n"},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}}],"sources":[{"fileName":"libs/geo-info/GIGeomQuery.ts","line":274,"character":23}]},{"id":662,"name":"navCollToColl","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":663,"name":"navCollToColl","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":664,"name":"coll_i","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"number"}}],"sources":[{"fileName":"libs/geo-info/GIGeomQuery.ts","line":146,"character":24}]},{"id":659,"name":"navCollToPgon","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":660,"name":"navCollToPgon","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":661,"name":"coll_i","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}}],"sources":[{"fileName":"libs/geo-info/GIGeomQuery.ts","line":143,"character":24}]},{"id":656,"name":"navCollToPline","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":657,"name":"navCollToPline","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":658,"name":"coll_i","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}}],"sources":[{"fileName":"libs/geo-info/GIGeomQuery.ts","line":140,"character":25}]},{"id":653,"name":"navCollToPoint","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":654,"name":"navCollToPoint","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":655,"name":"coll_i","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}}],"sources":[{"fileName":"libs/geo-info/GIGeomQuery.ts","line":137,"character":25}]},{"id":632,"name":"navEdgeToVert","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":633,"name":"navEdgeToVert","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":634,"name":"edge_i","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}}],"sources":[{"fileName":"libs/geo-info/GIGeomQuery.ts","line":116,"character":24}]},{"id":677,"name":"navEdgeToWire","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":678,"name":"navEdgeToWire","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":679,"name":"edge_i","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"number"}}],"sources":[{"fileName":"libs/geo-info/GIGeomQuery.ts","line":164,"character":24}]},{"id":689,"name":"navFaceToPgon","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":690,"name":"navFaceToPgon","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":691,"name":"face","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"number"}}],"sources":[{"fileName":"libs/geo-info/GIGeomQuery.ts","line":176,"character":24}]},{"id":641,"name":"navFaceToTri","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":642,"name":"navFaceToTri","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":643,"name":"face_i","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}}],"sources":[{"fileName":"libs/geo-info/GIGeomQuery.ts","line":125,"character":23}]},{"id":638,"name":"navFaceToWire","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":639,"name":"navFaceToWire","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":640,"name":"face_i","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}}],"sources":[{"fileName":"libs/geo-info/GIGeomQuery.ts","line":122,"character":24}]},{"id":698,"name":"navPgonToColl","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":699,"name":"navPgonToColl","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":700,"name":"pgon_i","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}}],"sources":[{"fileName":"libs/geo-info/GIGeomQuery.ts","line":185,"character":24}]},{"id":650,"name":"navPgonToFace","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":651,"name":"navPgonToFace","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":652,"name":"pgon_i","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"number"}}],"sources":[{"fileName":"libs/geo-info/GIGeomQuery.ts","line":134,"character":24}]},{"id":695,"name":"navPlineToColl","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":696,"name":"navPlineToColl","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":697,"name":"line_i","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}}],"sources":[{"fileName":"libs/geo-info/GIGeomQuery.ts","line":182,"character":25}]},{"id":647,"name":"navPlineToWire","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":648,"name":"navPlineToWire","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":649,"name":"line_i","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"number"}}],"sources":[{"fileName":"libs/geo-info/GIGeomQuery.ts","line":131,"character":25}]},{"id":692,"name":"navPointToColl","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":693,"name":"navPointToColl","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":694,"name":"point_i","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}}],"sources":[{"fileName":"libs/geo-info/GIGeomQuery.ts","line":179,"character":25}]},{"id":644,"name":"navPointToVert","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":645,"name":"navPointToVert","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":646,"name":"point_i","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"number"}}],"sources":[{"fileName":"libs/geo-info/GIGeomQuery.ts","line":128,"character":25}]},{"id":665,"name":"navPosiToVert","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":666,"name":"navPosiToVert","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":667,"name":"posi_i","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}}],"sources":[{"fileName":"libs/geo-info/GIGeomQuery.ts","line":152,"character":24}]},{"id":674,"name":"navTriToFace","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":675,"name":"navTriToFace","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":676,"name":"tri_i","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"number"}}],"sources":[{"fileName":"libs/geo-info/GIGeomQuery.ts","line":161,"character":23}]},{"id":629,"name":"navTriToVert","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":630,"name":"navTriToVert","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":631,"name":"tri_i","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}}],"sources":[{"fileName":"libs/geo-info/GIGeomQuery.ts","line":113,"character":23}]},{"id":671,"name":"navVertToEdge","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":672,"name":"navVertToEdge","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":673,"name":"vert_i","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}}],"sources":[{"fileName":"libs/geo-info/GIGeomQuery.ts","line":158,"character":24}]},{"id":683,"name":"navVertToPoint","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":684,"name":"navVertToPoint","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":685,"name":"vert_i","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"number"}}],"sources":[{"fileName":"libs/geo-info/GIGeomQuery.ts","line":170,"character":25}]},{"id":626,"name":"navVertToPosi","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":627,"name":"navVertToPosi","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":628,"name":"vert_i","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"number"}}],"sources":[{"fileName":"libs/geo-info/GIGeomQuery.ts","line":110,"character":24}]},{"id":668,"name":"navVertToTri","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":669,"name":"navVertToTri","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":670,"name":"vert_i","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}}],"sources":[{"fileName":"libs/geo-info/GIGeomQuery.ts","line":155,"character":23}]},{"id":635,"name":"navWireToEdge","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":636,"name":"navWireToEdge","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":637,"name":"wire_i","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}}],"sources":[{"fileName":"libs/geo-info/GIGeomQuery.ts","line":119,"character":24}]},{"id":680,"name":"navWireToFace","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":681,"name":"navWireToFace","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":682,"name":"wire_i","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"number"}}],"sources":[{"fileName":"libs/geo-info/GIGeomQuery.ts","line":167,"character":24}]},{"id":686,"name":"navWireToPline","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":687,"name":"navWireToPline","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":688,"name":"wire_i","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"number"}}],"sources":[{"fileName":"libs/geo-info/GIGeomQuery.ts","line":173,"character":25}]},{"id":742,"name":"neighbours","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":743,"name":"neighbours","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Get the welded neighbour vertices of a set of vertices."},"parameters":[{"id":744,"name":"from_ets","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"EEntType","id":74}},{"id":745,"name":"to_ets","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"EEntType","id":74}},{"id":746,"name":"index","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"\n"},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}}],"sources":[{"fileName":"libs/geo-info/GIGeomQuery.ts","line":433,"character":21}]},{"id":610,"name":"nextEntIndex","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":611,"name":"nextEntIndex","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Returns the number of entities, including deleted entities"},"parameters":[{"id":612,"name":"ent_type","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"\n"},"type":{"type":"reference","name":"EEntType","id":74}}],"type":{"type":"intrinsic","name":"number"}}],"sources":[{"fileName":"libs/geo-info/GIGeomQuery.ts","line":51,"character":23}]},{"id":607,"name":"numEnts","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":608,"name":"numEnts","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Returns the number of entities, excluding deleted entities"},"parameters":[{"id":609,"name":"ent_type","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"\n"},"type":{"type":"reference","name":"EEntType","id":74}}],"type":{"type":"intrinsic","name":"number"}}],"sources":[{"fileName":"libs/geo-info/GIGeomQuery.ts","line":44,"character":18}]}],"groups":[{"title":"Constructors","kind":512,"children":[600]},{"title":"Properties","kind":1024,"children":[598,599]},{"title":"Methods","kind":2048,"children":[613,623,604,620,617,737,701,725,717,705,709,713,733,729,721,662,659,656,653,632,677,689,641,638,698,650,695,647,692,644,665,674,629,671,683,626,668,635,680,686,742,610,607]}],"sources":[{"fileName":"libs/geo-info/GIGeomQuery.ts","line":8,"character":24}]}],"groups":[{"title":"Classes","kind":128,"children":[597]}],"sources":[{"fileName":"libs/geo-info/GIGeomQuery.ts","line":1,"character":0}]},{"id":988,"name":"\"libs/geo-info/GIGeomThreejs\"","kind":1,"kindString":"External module","flags":{"isExported":true,"isExternal":true},"originalName":"C:/Dropbox/Files/Software/GitHub/design-automation/mobius-parametric-modeller/src/libs/geo-info/GIGeomThreejs.ts","children":[{"id":989,"name":"GIGeomThreejs","kind":128,"kindString":"Class","flags":{"isExported":true,"isExternal":true},"comment":{"shortText":"Class for geometry."},"children":[{"id":992,"name":"constructor","kind":512,"kindString":"Constructor","flags":{"isExported":true,"isExternal":true},"comment":{"shortText":"Creates an object to store the geometry data."},"signatures":[{"id":993,"name":"new GIGeomThreejs","kind":16384,"kindString":"Constructor signature","flags":{},"comment":{"shortText":"Creates an object to store the geometry data."},"parameters":[{"id":994,"name":"geom","kind":32768,"kindString":"Parameter","flags":{},"comment":{"shortText":"The GIGeom obect"},"type":{"type":"reference","name":"GIGeom","id":1005}},{"id":995,"name":"geom_arrays","kind":32768,"kindString":"Parameter","flags":{},"comment":{"shortText":"The geometry arrays\n"},"type":{"type":"reference","name":"IGeomArrays","id":142}}],"type":{"type":"reference","name":"GIGeomThreejs","id":989}}],"sources":[{"fileName":"libs/geo-info/GIGeomThreejs.ts","line":10,"character":38}]},{"id":990,"name":"_geom","kind":1024,"kindString":"Property","flags":{"isPrivate":true,"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/GIGeomThreejs.ts","line":9,"character":17}],"type":{"type":"reference","name":"GIGeom","id":1005}},{"id":991,"name":"_geom_arrays","kind":1024,"kindString":"Property","flags":{"isPrivate":true,"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/GIGeomThreejs.ts","line":10,"character":24}],"type":{"type":"reference","name":"IGeomArrays","id":142}},{"id":1000,"name":"get3jsEdges","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":1001,"name":"get3jsEdges","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Returns a flat list of the sequence of verices for all the edges.\nThis list will be assumed to be in pairs.\nThe indices in the list point to the vertices."},"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}}],"sources":[{"fileName":"libs/geo-info/GIGeomThreejs.ts","line":48,"character":22}]},{"id":1002,"name":"get3jsPoints","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":1003,"name":"get3jsPoints","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Returns a flat list of the sequence of verices for all the points.\nThe indices in the list point to the vertices."},"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}}],"sources":[{"fileName":"libs/geo-info/GIGeomThreejs.ts","line":57,"character":23}]},{"id":998,"name":"get3jsTris","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":999,"name":"get3jsTris","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Returns a flat list of the sequence of verices for all the triangles.\nThis list will be assumed to be in pairs.\nThe indices in the list point to the vertices."},"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}}],"sources":[{"fileName":"libs/geo-info/GIGeomThreejs.ts","line":38,"character":21}]},{"id":996,"name":"get3jsVerts","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":997,"name":"get3jsVerts","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Returns a flat list of all vertices.\nThe indices in the list point to the sequential coordinates."},"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}}],"sources":[{"fileName":"libs/geo-info/GIGeomThreejs.ts","line":30,"character":22}]}],"groups":[{"title":"Constructors","kind":512,"children":[992]},{"title":"Properties","kind":1024,"children":[990,991]},{"title":"Methods","kind":2048,"children":[1000,1002,998,996]}],"sources":[{"fileName":"libs/geo-info/GIGeomThreejs.ts","line":8,"character":26}]}],"groups":[{"title":"Classes","kind":128,"children":[989]}],"sources":[{"fileName":"libs/geo-info/GIGeomThreejs.ts","line":1,"character":0}]},{"id":1046,"name":"\"libs/geo-info/GIModel\"","kind":1,"kindString":"External module","flags":{"isExported":true,"isExternal":true},"originalName":"C:/Dropbox/Files/Software/GitHub/design-automation/mobius-parametric-modeller/src/libs/geo-info/GIModel.ts","children":[{"id":1047,"name":"GIModel","kind":128,"kindString":"Class","flags":{"isExported":true,"isExternal":true},"comment":{"shortText":"Geo-info model class."},"indexSignature":{"id":1048,"name":"__index","kind":8192,"kindString":"Index signature","flags":{},"comment":{"shortText":"Geo-info model class."},"parameters":[{"id":1049,"name":"x","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"any"}},"children":[{"id":1052,"name":"constructor","kind":512,"kindString":"Constructor","flags":{"isExported":true,"isExternal":true},"comment":{"shortText":"Creates a model."},"signatures":[{"id":1053,"name":"new GIModel","kind":16384,"kindString":"Constructor signature","flags":{},"comment":{"shortText":"Creates a model."},"parameters":[{"id":1054,"name":"model_data","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"comment":{"shortText":"The JSON data\n"},"type":{"type":"reference","name":"IModelData","id":199}}],"type":{"type":"reference","name":"GIModel","id":1047}}],"sources":[{"fileName":"libs/geo-info/GIModel.ts","line":11,"character":31}]},{"id":1051,"name":"attribs","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true,"isPublic":true},"sources":[{"fileName":"libs/geo-info/GIModel.ts","line":11,"character":19}],"type":{"type":"reference","name":"GIAttribs","id":968}},{"id":1050,"name":"geom","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true,"isPublic":true},"sources":[{"fileName":"libs/geo-info/GIModel.ts","line":10,"character":16}],"type":{"type":"reference","name":"GIGeom","id":1005}},{"id":1067,"name":"_generateColors","kind":2048,"kindString":"Method","flags":{"isPrivate":true,"isExported":true,"isExternal":true},"signatures":[{"id":1068,"name":"_generateColors","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Generate a default color if none exists."},"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}}],"sources":[{"fileName":"libs/geo-info/GIModel.ts","line":64,"character":27}]},{"id":1069,"name":"_generateNormals","kind":2048,"kindString":"Method","flags":{"isPrivate":true,"isExported":true,"isExternal":true},"signatures":[{"id":1070,"name":"_generateNormals","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Generate default normals if non exist."},"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}}],"sources":[{"fileName":"libs/geo-info/GIModel.ts","line":75,"character":28}]},{"id":1055,"name":"addData","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":1056,"name":"addData","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Sets the data in this model from JSON data.\nThe existing data in the model is deleted."},"parameters":[{"id":1057,"name":"model_data","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"The JSON data.\n"},"type":{"type":"reference","name":"IModelData","id":199}}],"type":{"type":"reference","name":"IGeomPack","id":68}}],"sources":[{"fileName":"libs/geo-info/GIModel.ts","line":28,"character":18}]},{"id":1071,"name":"get3jsData","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":1072,"name":"get3jsData","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Returns arrays for visualization in Threejs."},"type":{"type":"reference","name":"IThreeJS","id":1039}}],"sources":[{"fileName":"libs/geo-info/GIModel.ts","line":86,"character":21}]},{"id":1065,"name":"getAttribsData","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":1066,"name":"getAttribsData","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Returns the JSON data for the attributes in this model."},"type":{"type":"reference","name":"IAttribsData","id":189}}],"sources":[{"fileName":"libs/geo-info/GIModel.ts","line":58,"character":25}]},{"id":1061,"name":"getData","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":1062,"name":"getData","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Returns the JSON data for this model."},"type":{"type":"reference","name":"IModelData","id":199}}],"sources":[{"fileName":"libs/geo-info/GIModel.ts","line":43,"character":18}]},{"id":1063,"name":"getGeomData","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":1064,"name":"getGeomData","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Returns the JSON data for the geometry in this model."},"type":{"type":"reference","name":"IGeomData","id":173}}],"sources":[{"fileName":"libs/geo-info/GIModel.ts","line":52,"character":22}]},{"id":1058,"name":"merge","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":1059,"name":"merge","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Adds data to this model from a GI model.\nThe existing data in the model is not deleted."},"parameters":[{"id":1060,"name":"model","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"GIModel","id":1047}}],"type":{"type":"reference","name":"IGeomPack","id":68}}],"sources":[{"fileName":"libs/geo-info/GIModel.ts","line":37,"character":16}]}],"groups":[{"title":"Constructors","kind":512,"children":[1052]},{"title":"Properties","kind":1024,"children":[1051,1050]},{"title":"Methods","kind":2048,"children":[1067,1069,1055,1071,1065,1061,1063,1058]}],"sources":[{"fileName":"libs/geo-info/GIModel.ts","line":8,"character":20}]}],"groups":[{"title":"Classes","kind":128,"children":[1047]}],"sources":[{"fileName":"libs/geo-info/GIModel.ts","line":1,"character":0}]},{"id":1038,"name":"\"libs/geo-info/ThreejsJSON\"","kind":1,"kindString":"External module","flags":{"isExported":true,"isExternal":true},"originalName":"C:/Dropbox/Files/Software/GitHub/design-automation/mobius-parametric-modeller/src/libs/geo-info/ThreejsJSON.ts","children":[{"id":1039,"name":"IThreeJS","kind":256,"kindString":"Interface","flags":{"isExported":true,"isExternal":true},"children":[{"id":1042,"name":"colors","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/ThreejsJSON.ts","line":4,"character":10}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}},{"id":1044,"name":"edge_indices","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/ThreejsJSON.ts","line":6,"character":16}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}},{"id":1041,"name":"normals","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/ThreejsJSON.ts","line":3,"character":11}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}},{"id":1043,"name":"point_indices","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/ThreejsJSON.ts","line":5,"character":17}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}},{"id":1040,"name":"positions","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/ThreejsJSON.ts","line":2,"character":13}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}},{"id":1045,"name":"triangle_indices","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/ThreejsJSON.ts","line":7,"character":20}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}}],"groups":[{"title":"Properties","kind":1024,"children":[1042,1044,1041,1043,1040,1045]}],"sources":[{"fileName":"libs/geo-info/ThreejsJSON.ts","line":1,"character":25}]}],"groups":[{"title":"Interfaces","kind":256,"children":[1039]}],"sources":[{"fileName":"libs/geo-info/ThreejsJSON.ts","line":1,"character":0}]},{"id":67,"name":"\"libs/geo-info/common\"","kind":1,"kindString":"External module","flags":{"isExported":true,"isExternal":true},"originalName":"C:/Dropbox/Files/Software/GitHub/design-automation/mobius-parametric-modeller/src/libs/geo-info/common.ts","children":[{"id":170,"name":"EAttribDataTypeStrs","kind":4,"kindString":"Enumeration","flags":{"isExported":true,"isExternal":true},"children":[{"id":171,"name":"FLOAT","kind":16,"kindString":"Enumeration member","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":199,"character":9}],"defaultValue":"\"Float\""},{"id":172,"name":"STRING","kind":16,"kindString":"Enumeration member","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":200,"character":10}],"defaultValue":"\"String\""}],"groups":[{"title":"Enumeration members","kind":16,"children":[171,172]}],"sources":[{"fileName":"libs/geo-info/common.ts","line":197,"character":31}]},{"id":117,"name":"EAttribNames","kind":4,"kindString":"Enumeration","flags":{"isExported":true,"isExternal":true},"children":[{"id":120,"name":"COLOR","kind":16,"kindString":"Enumeration member","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":107,"character":9}],"defaultValue":"\"color\""},{"id":118,"name":"COORDS","kind":16,"kindString":"Enumeration member","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":105,"character":10}],"defaultValue":"\"xyz\""},{"id":122,"name":"NAME","kind":16,"kindString":"Enumeration member","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":109,"character":8}],"defaultValue":"\"name\""},{"id":119,"name":"NORMAL","kind":16,"kindString":"Enumeration member","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":106,"character":10}],"defaultValue":"\"normal\""},{"id":121,"name":"TEXTURE","kind":16,"kindString":"Enumeration member","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":108,"character":11}],"defaultValue":"\"texture\""}],"groups":[{"title":"Enumeration members","kind":16,"children":[120,118,122,119,121]}],"sources":[{"fileName":"libs/geo-info/common.ts","line":104,"character":24}]},{"id":96,"name":"EEntStrToGeomArray","kind":4,"kindString":"Enumeration","flags":{"isExported":true,"isExternal":true},"children":[{"id":106,"name":"dn_colls_objs","kind":16,"kindString":"Enumeration member","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":71,"character":19}]},{"id":100,"name":"dn_edges_verts","kind":16,"kindString":"Enumeration member","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":65,"character":20}]},{"id":102,"name":"dn_faces_wirestris","kind":16,"kindString":"Enumeration member","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":67,"character":24}]},{"id":105,"name":"dn_pgons_faces","kind":16,"kindString":"Enumeration member","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":70,"character":20}]},{"id":104,"name":"dn_plines_wires","kind":16,"kindString":"Enumeration member","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":69,"character":21}]},{"id":103,"name":"dn_points_verts","kind":16,"kindString":"Enumeration member","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":68,"character":21}]},{"id":98,"name":"dn_tris_verts","kind":16,"kindString":"Enumeration member","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":63,"character":19}]},{"id":99,"name":"dn_verts_posis","kind":16,"kindString":"Enumeration member","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":64,"character":20}]},{"id":101,"name":"dn_wires_edges","kind":16,"kindString":"Enumeration member","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":66,"character":20}]},{"id":97,"name":"posis","kind":16,"kindString":"Enumeration member","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":62,"character":11}]}],"groups":[{"title":"Enumeration members","kind":16,"children":[106,100,102,105,104,103,98,99,101,97]}],"sources":[{"fileName":"libs/geo-info/common.ts","line":61,"character":30}]},{"id":74,"name":"EEntType","kind":4,"kindString":"Enumeration","flags":{"isExported":true,"isExternal":true},"children":[{"id":84,"name":"COLL","kind":16,"kindString":"Enumeration member","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":44,"character":8}]},{"id":78,"name":"EDGE","kind":16,"kindString":"Enumeration member","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":38,"character":8}]},{"id":80,"name":"FACE","kind":16,"kindString":"Enumeration member","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":40,"character":8}]},{"id":83,"name":"PGON","kind":16,"kindString":"Enumeration member","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":43,"character":8}]},{"id":82,"name":"PLINE","kind":16,"kindString":"Enumeration member","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":42,"character":9}]},{"id":81,"name":"POINT","kind":16,"kindString":"Enumeration member","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":41,"character":9}]},{"id":75,"name":"POSI","kind":16,"kindString":"Enumeration member","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":35,"character":8}]},{"id":76,"name":"TRI","kind":16,"kindString":"Enumeration member","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":36,"character":7}]},{"id":77,"name":"VERT","kind":16,"kindString":"Enumeration member","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":37,"character":8}]},{"id":79,"name":"WIRE","kind":16,"kindString":"Enumeration member","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":39,"character":8}]}],"groups":[{"title":"Enumeration members","kind":16,"children":[84,78,80,83,82,81,75,76,77,79]}],"sources":[{"fileName":"libs/geo-info/common.ts","line":34,"character":20}]},{"id":85,"name":"EEntTypeStr","kind":4,"kindString":"Enumeration","flags":{"isExported":true,"isExternal":true},"children":[{"id":89,"name":"_e","kind":16,"kindString":"Enumeration member","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":52,"character":8}]},{"id":91,"name":"_f","kind":16,"kindString":"Enumeration member","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":54,"character":8}]},{"id":87,"name":"_t","kind":16,"kindString":"Enumeration member","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":50,"character":8}]},{"id":88,"name":"_v","kind":16,"kindString":"Enumeration member","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":51,"character":8}]},{"id":90,"name":"_w","kind":16,"kindString":"Enumeration member","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":53,"character":8}]},{"id":95,"name":"co","kind":16,"kindString":"Enumeration member","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":58,"character":8}]},{"id":94,"name":"pg","kind":16,"kindString":"Enumeration member","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":57,"character":8}]},{"id":93,"name":"pl","kind":16,"kindString":"Enumeration member","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":56,"character":8}]},{"id":86,"name":"ps","kind":16,"kindString":"Enumeration member","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":49,"character":8}]},{"id":92,"name":"pt","kind":16,"kindString":"Enumeration member","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":55,"character":8}]}],"groups":[{"title":"Enumeration members","kind":16,"children":[89,91,87,88,90,95,94,93,86,92]}],"sources":[{"fileName":"libs/geo-info/common.ts","line":48,"character":23}]},{"id":123,"name":"EQueryOperatorTypes","kind":4,"kindString":"Enumeration","flags":{"isExported":true,"isExternal":true},"comment":{"shortText":"The types of operators that can be used in a query."},"children":[{"id":130,"name":"EQUAL","kind":16,"kindString":"Enumeration member","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":122,"character":9}],"defaultValue":"\"=\""},{"id":124,"name":"IS_EQUAL","kind":16,"kindString":"Enumeration member","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":116,"character":12}],"defaultValue":"\"==\""},{"id":128,"name":"IS_GREATER","kind":16,"kindString":"Enumeration member","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":120,"character":14}],"defaultValue":"\">\""},{"id":126,"name":"IS_GREATER_OR_EQUAL","kind":16,"kindString":"Enumeration member","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":118,"character":23}],"defaultValue":"\">=\""},{"id":129,"name":"IS_LESS","kind":16,"kindString":"Enumeration member","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":121,"character":11}],"defaultValue":"\"<\""},{"id":127,"name":"IS_LESS_OR_EQUAL","kind":16,"kindString":"Enumeration member","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":119,"character":20}],"defaultValue":"\"<=\""},{"id":125,"name":"IS_NOT_EQUAL","kind":16,"kindString":"Enumeration member","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":117,"character":16}],"defaultValue":"\"!=\""}],"groups":[{"title":"Enumeration members","kind":16,"children":[130,124,128,126,129,127,125]}],"sources":[{"fileName":"libs/geo-info/common.ts","line":115,"character":31}]},{"id":139,"name":"ESort","kind":4,"kindString":"Enumeration","flags":{"isExported":true,"isExternal":true},"children":[{"id":141,"name":"ASCENDING","kind":16,"kindString":"Enumeration member","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":154,"character":15}],"defaultValue":"\"ascending\""},{"id":140,"name":"DESCENDING","kind":16,"kindString":"Enumeration member","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":153,"character":16}],"defaultValue":"\"descending\""}],"groups":[{"title":"Enumeration members","kind":16,"children":[141,140]}],"sources":[{"fileName":"libs/geo-info/common.ts","line":152,"character":17}]},{"id":184,"name":"IAttribData","kind":256,"kindString":"Interface","flags":{"isExported":true,"isExternal":true},"children":[{"id":188,"name":"data","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":236,"character":8}],"type":{"type":"reference","name":"TAttribValuesArr","id":229}},{"id":187,"name":"data_size","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":235,"character":13}],"type":{"type":"intrinsic","name":"number"}},{"id":186,"name":"data_type","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":234,"character":13}],"type":{"type":"reference","name":"EAttribDataTypeStrs","id":170}},{"id":185,"name":"name","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":233,"character":8}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","kind":1024,"children":[188,187,186,185]}],"sources":[{"fileName":"libs/geo-info/common.ts","line":232,"character":28}]},{"id":189,"name":"IAttribsData","kind":256,"kindString":"Interface","flags":{"isExported":true,"isExternal":true},"children":[{"id":198,"name":"collections","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":247,"character":15}],"type":{"type":"array","elementType":{"type":"reference","name":"IAttribData","id":184}}},{"id":192,"name":"edges","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":241,"character":9}],"type":{"type":"array","elementType":{"type":"reference","name":"IAttribData","id":184}}},{"id":194,"name":"faces","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":243,"character":9}],"type":{"type":"array","elementType":{"type":"reference","name":"IAttribData","id":184}}},{"id":195,"name":"points","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":244,"character":10}],"type":{"type":"array","elementType":{"type":"reference","name":"IAttribData","id":184}}},{"id":197,"name":"polygons","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":246,"character":12}],"type":{"type":"array","elementType":{"type":"reference","name":"IAttribData","id":184}}},{"id":196,"name":"polylines","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":245,"character":13}],"type":{"type":"array","elementType":{"type":"reference","name":"IAttribData","id":184}}},{"id":190,"name":"positions","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":239,"character":13}],"type":{"type":"array","elementType":{"type":"reference","name":"IAttribData","id":184}}},{"id":191,"name":"vertices","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":240,"character":12}],"type":{"type":"array","elementType":{"type":"reference","name":"IAttribData","id":184}}},{"id":193,"name":"wires","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":242,"character":9}],"type":{"type":"array","elementType":{"type":"reference","name":"IAttribData","id":184}}}],"groups":[{"title":"Properties","kind":1024,"children":[198,192,194,195,197,196,190,191,193]}],"sources":[{"fileName":"libs/geo-info/common.ts","line":238,"character":29}]},{"id":107,"name":"IAttribsMaps","kind":256,"kindString":"Interface","flags":{"isExported":true,"isExternal":true},"comment":{"shortText":"Attribute maps"},"children":[{"id":110,"name":"_e","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":80,"character":6}],"type":{"type":"reference","name":"Map","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"reference","name":"GIAttribMap","id":2}]}},{"id":112,"name":"_f","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":82,"character":6}],"type":{"type":"reference","name":"Map","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"reference","name":"GIAttribMap","id":2}]}},{"id":109,"name":"_v","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":79,"character":6}],"type":{"type":"reference","name":"Map","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"reference","name":"GIAttribMap","id":2}]}},{"id":111,"name":"_w","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":81,"character":6}],"type":{"type":"reference","name":"Map","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"reference","name":"GIAttribMap","id":2}]}},{"id":116,"name":"co","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":86,"character":6}],"type":{"type":"reference","name":"Map","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"reference","name":"GIAttribMap","id":2}]}},{"id":115,"name":"pg","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":85,"character":6}],"type":{"type":"reference","name":"Map","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"reference","name":"GIAttribMap","id":2}]}},{"id":114,"name":"pl","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":84,"character":6}],"type":{"type":"reference","name":"Map","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"reference","name":"GIAttribMap","id":2}]}},{"id":108,"name":"ps","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":78,"character":6}],"type":{"type":"reference","name":"Map","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"reference","name":"GIAttribMap","id":2}]}},{"id":113,"name":"pt","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":83,"character":6}],"type":{"type":"reference","name":"Map","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"reference","name":"GIAttribMap","id":2}]}}],"groups":[{"title":"Properties","kind":1024,"children":[110,112,109,111,116,115,114,108,113]}],"sources":[{"fileName":"libs/geo-info/common.ts","line":77,"character":29}]},{"id":142,"name":"IGeomArrays","kind":256,"kindString":"Interface","flags":{"isExported":true,"isExternal":true},"comment":{"shortText":"Geom arrays"},"children":[{"id":152,"name":"dn_colls_objs","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":170,"character":17}],"type":{"type":"array","elementType":{"type":"reference","name":"TColl","id":226}}},{"id":146,"name":"dn_edges_verts","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":164,"character":18}],"type":{"type":"array","elementType":{"type":"reference","name":"TEdge","id":220}}},{"id":148,"name":"dn_faces_wirestris","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":166,"character":22}],"type":{"type":"array","elementType":{"type":"reference","name":"TFace","id":222}}},{"id":151,"name":"dn_pgons_faces","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":169,"character":18}],"type":{"type":"array","elementType":{"type":"reference","name":"TPgon","id":225}}},{"id":150,"name":"dn_plines_wires","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":168,"character":19}],"type":{"type":"array","elementType":{"type":"reference","name":"TPline","id":224}}},{"id":149,"name":"dn_points_verts","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":167,"character":19}],"type":{"type":"array","elementType":{"type":"reference","name":"TPoint","id":223}}},{"id":145,"name":"dn_tris_verts","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":163,"character":17}],"type":{"type":"array","elementType":{"type":"reference","name":"TTri","id":218}}},{"id":144,"name":"dn_verts_posis","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":162,"character":18}],"type":{"type":"array","elementType":{"type":"reference","name":"TVert","id":219}}},{"id":147,"name":"dn_wires_edges","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":165,"character":18}],"type":{"type":"array","elementType":{"type":"reference","name":"TWire","id":221}}},{"id":143,"name":"num_posis","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":161,"character":13}],"type":{"type":"intrinsic","name":"number"}},{"id":158,"name":"up_edges_wires","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":176,"character":18}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}},{"id":161,"name":"up_faces_pgons","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":179,"character":18}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}},{"id":164,"name":"up_pgons_colls","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":182,"character":18}],"type":{"type":"array","elementType":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}}},{"id":163,"name":"up_plines_colls","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":181,"character":19}],"type":{"type":"array","elementType":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}}},{"id":162,"name":"up_points_colls","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":180,"character":19}],"type":{"type":"array","elementType":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}}},{"id":153,"name":"up_posis_verts","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":171,"character":18}],"type":{"type":"array","elementType":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}}},{"id":154,"name":"up_tris_faces","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":172,"character":17}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}},{"id":155,"name":"up_verts_edges","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":173,"character":18}],"type":{"type":"array","elementType":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}}},{"id":157,"name":"up_verts_points","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":175,"character":19}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}},{"id":156,"name":"up_verts_tris","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":174,"character":17}],"type":{"type":"array","elementType":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}}},{"id":159,"name":"up_wires_faces","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":177,"character":18}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}},{"id":160,"name":"up_wires_plines","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":178,"character":19}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}}],"groups":[{"title":"Properties","kind":1024,"children":[152,146,148,151,150,149,145,144,147,143,158,161,164,163,162,153,154,155,157,156,159,160]}],"sources":[{"fileName":"libs/geo-info/common.ts","line":160,"character":28}]},{"id":165,"name":"IGeomCopy","kind":256,"kindString":"Interface","flags":{"isExported":true,"isExternal":true},"children":[{"id":169,"name":"colls","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":190,"character":9}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}},{"id":168,"name":"pgons","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":189,"character":9}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}},{"id":167,"name":"plines","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":188,"character":10}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}},{"id":166,"name":"points","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":187,"character":10}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}}],"groups":[{"title":"Properties","kind":1024,"children":[169,168,167,166]}],"sources":[{"fileName":"libs/geo-info/common.ts","line":186,"character":26}]},{"id":173,"name":"IGeomData","kind":256,"kindString":"Interface","flags":{"isExported":true,"isExternal":true},"children":[{"id":183,"name":"collections","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":230,"character":15}],"type":{"type":"array","elementType":{"type":"reference","name":"TColl","id":226}}},{"id":177,"name":"edges","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":224,"character":9}],"type":{"type":"array","elementType":{"type":"reference","name":"TEdge","id":220}}},{"id":179,"name":"faces","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":226,"character":9}],"type":{"type":"array","elementType":{"type":"reference","name":"TFace","id":222}}},{"id":174,"name":"num_positions","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":221,"character":17}],"type":{"type":"intrinsic","name":"number"}},{"id":180,"name":"points","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":227,"character":10}],"type":{"type":"array","elementType":{"type":"reference","name":"TPoint","id":223}}},{"id":182,"name":"polygons","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":229,"character":12}],"type":{"type":"array","elementType":{"type":"reference","name":"TPgon","id":225}}},{"id":181,"name":"polylines","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":228,"character":13}],"type":{"type":"array","elementType":{"type":"reference","name":"TPline","id":224}}},{"id":175,"name":"triangles","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":222,"character":13}],"type":{"type":"array","elementType":{"type":"reference","name":"TTri","id":218}}},{"id":176,"name":"vertices","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":223,"character":12}],"type":{"type":"array","elementType":{"type":"reference","name":"TVert","id":219}}},{"id":178,"name":"wires","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":225,"character":9}],"type":{"type":"array","elementType":{"type":"reference","name":"TWire","id":221}}}],"groups":[{"title":"Properties","kind":1024,"children":[183,177,179,174,180,182,181,175,176,178]}],"sources":[{"fileName":"libs/geo-info/common.ts","line":220,"character":26}]},{"id":68,"name":"IGeomPack","kind":256,"kindString":"Interface","flags":{"isExported":true,"isExternal":true},"children":[{"id":73,"name":"colls_i","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":21,"character":11}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}},{"id":72,"name":"pgons_i","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":20,"character":11}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}},{"id":71,"name":"plines_i","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":19,"character":12}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}},{"id":70,"name":"points_i","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":18,"character":12}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}},{"id":69,"name":"posis_i","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":17,"character":11}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}}],"groups":[{"title":"Properties","kind":1024,"children":[73,72,71,70,69]}],"sources":[{"fileName":"libs/geo-info/common.ts","line":16,"character":26}]},{"id":199,"name":"IModelData","kind":256,"kindString":"Interface","flags":{"isExported":true,"isExternal":true},"children":[{"id":201,"name":"attributes","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":251,"character":14}],"type":{"type":"reference","name":"IAttribsData","id":189}},{"id":200,"name":"geometry","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":250,"character":12}],"type":{"type":"reference","name":"IGeomData","id":173}}],"groups":[{"title":"Properties","kind":1024,"children":[201,200]}],"sources":[{"fileName":"libs/geo-info/common.ts","line":249,"character":27}]},{"id":131,"name":"IQueryComponent","kind":256,"kindString":"Interface","flags":{"isExported":true,"isExternal":true},"comment":{"shortText":"A query component.\nEach query can consist of multiple components.\nSome examples of queries","tags":[{"tag":"name","text":"== value"},{"tag":"name","text":"> value"},{"tag":"name[2]","text":"<= value\n"}]},"children":[{"id":133,"name":"attrib_index","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":135,"character":16}],"type":{"type":"intrinsic","name":"number"}},{"id":132,"name":"attrib_name","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":134,"character":15}],"type":{"type":"intrinsic","name":"string"}},{"id":134,"name":"attrib_value_str","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":136,"character":20}],"type":{"type":"intrinsic","name":"string"}},{"id":135,"name":"operator_type","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":137,"character":17}],"type":{"type":"reference","name":"EQueryOperatorTypes","id":123}}],"groups":[{"title":"Properties","kind":1024,"children":[133,132,134,135]}],"sources":[{"fileName":"libs/geo-info/common.ts","line":133,"character":32}]},{"id":136,"name":"ISortComponent","kind":256,"kindString":"Interface","flags":{"isExported":true,"isExternal":true},"comment":{"shortText":"A sort component.\nEach sort can consist of multiple components.\nSome examples of queries","tags":[{"tag":"name","text":""},{"tag":"name[2]","text":"\n"}]},"children":[{"id":138,"name":"attrib_index","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":149,"character":16}],"type":{"type":"intrinsic","name":"number"}},{"id":137,"name":"attrib_name","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":148,"character":15}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","kind":1024,"children":[138,137]}],"sources":[{"fileName":"libs/geo-info/common.ts","line":147,"character":31}]},{"id":228,"name":"TAttribDataTypes","kind":4194304,"kindString":"Type alias","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":216,"character":28}],"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"array","elementType":{"type":"intrinsic","name":"string"}},{"type":"intrinsic","name":"number"},{"type":"array","elementType":{"type":"intrinsic","name":"number"}}]}},{"id":229,"name":"TAttribValuesArr","kind":4194304,"kindString":"Type alias","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":217,"character":28}],"type":{"type":"reference","name":"Array","typeArguments":[{"type":"tuple","elements":[{"type":"array","elementType":{"type":"intrinsic","name":"number"}},{"type":"reference","name":"TAttribDataTypes","id":228}]}]}},{"id":226,"name":"TColl","kind":4194304,"kindString":"Type alias","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":214,"character":17}],"type":{"type":"tuple","elements":[{"type":"intrinsic","name":"number"},{"type":"array","elementType":{"type":"intrinsic","name":"number"}},{"type":"array","elementType":{"type":"intrinsic","name":"number"}},{"type":"array","elementType":{"type":"intrinsic","name":"number"}}]}},{"id":213,"name":"TColor","kind":4194304,"kindString":"Type alias","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":29,"character":18}],"type":{"type":"tuple","elements":[{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"number"}]}},{"id":220,"name":"TEdge","kind":4194304,"kindString":"Type alias","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":208,"character":17}],"type":{"type":"tuple","elements":[{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"number"}]}},{"id":208,"name":"TEntTypeIdx","kind":4194304,"kindString":"Type alias","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":13,"character":23}],"type":{"type":"tuple","elements":[{"type":"reference","name":"EEntType","id":74},{"type":"intrinsic","name":"number"}]}},{"id":227,"name":"TEntity","kind":4194304,"kindString":"Type alias","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":215,"character":19}],"type":{"type":"union","types":[{"type":"reference","name":"TTri","id":218},{"type":"reference","name":"TVert","id":219},{"type":"reference","name":"TEdge","id":220},{"type":"reference","name":"TWire","id":221},{"type":"reference","name":"TFace","id":222},{"type":"reference","name":"TPoint","id":223},{"type":"reference","name":"TPline","id":224},{"type":"reference","name":"TPgon","id":225},{"type":"reference","name":"TColl","id":226}]}},{"id":222,"name":"TFace","kind":4194304,"kindString":"Type alias","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":210,"character":17}],"type":{"type":"tuple","elements":[{"type":"array","elementType":{"type":"intrinsic","name":"number"}},{"type":"array","elementType":{"type":"intrinsic","name":"number"}}]}},{"id":212,"name":"TId","kind":4194304,"kindString":"Type alias","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":28,"character":15}],"type":{"type":"intrinsic","name":"string"}},{"id":214,"name":"TNormal","kind":4194304,"kindString":"Type alias","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":30,"character":19}],"type":{"type":"tuple","elements":[{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"number"}]}},{"id":225,"name":"TPgon","kind":4194304,"kindString":"Type alias","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":213,"character":17}],"type":{"type":"intrinsic","name":"number"}},{"id":210,"name":"TPlane","kind":4194304,"kindString":"Type alias","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":26,"character":18}],"type":{"type":"tuple","elements":[{"type":"reference","name":"Txyz","id":216},{"type":"reference","name":"Txyz","id":216},{"type":"reference","name":"Txyz","id":216}]}},{"id":224,"name":"TPline","kind":4194304,"kindString":"Type alias","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":212,"character":18}],"type":{"type":"intrinsic","name":"number"}},{"id":223,"name":"TPoint","kind":4194304,"kindString":"Type alias","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":211,"character":18}],"type":{"type":"intrinsic","name":"number"}},{"id":217,"name":"TPosi","kind":4194304,"kindString":"Type alias","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":205,"character":17}],"type":{"type":"intrinsic","name":"number"}},{"id":211,"name":"TQuery","kind":4194304,"kindString":"Type alias","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":27,"character":18}],"type":{"type":"intrinsic","name":"string"}},{"id":209,"name":"TRay","kind":4194304,"kindString":"Type alias","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":25,"character":16}],"type":{"type":"tuple","elements":[{"type":"reference","name":"Txyz","id":216},{"type":"reference","name":"Txyz","id":216}]}},{"id":215,"name":"TTexture","kind":4194304,"kindString":"Type alias","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":31,"character":20}],"type":{"type":"tuple","elements":[{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"number"}]}},{"id":218,"name":"TTri","kind":4194304,"kindString":"Type alias","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":206,"character":16}],"type":{"type":"tuple","elements":[{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"number"}]}},{"id":219,"name":"TVert","kind":4194304,"kindString":"Type alias","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":207,"character":17}],"type":{"type":"intrinsic","name":"number"}},{"id":221,"name":"TWire","kind":4194304,"kindString":"Type alias","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":209,"character":17}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}},{"id":216,"name":"Txyz","kind":4194304,"kindString":"Type alias","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":204,"character":16}],"type":{"type":"tuple","elements":[{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"number"}]}},{"id":202,"name":"XYPLANE","kind":32,"kindString":"Variable","flags":{"isExported":true,"isExternal":true,"isConst":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":4,"character":20}],"type":{"type":"reference","name":"TPlane","id":210},"defaultValue":" [[0, 0, 0], [1, 0, 0], [0, 1, 0]]"},{"id":207,"name":"XZPLANE","kind":32,"kindString":"Variable","flags":{"isExported":true,"isExternal":true,"isConst":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":10,"character":20}],"type":{"type":"reference","name":"TPlane","id":210},"defaultValue":" [[0, 0, 0], [1, 0, 0], [0, 0, 1]]"},{"id":205,"name":"YXPLANE","kind":32,"kindString":"Variable","flags":{"isExported":true,"isExternal":true,"isConst":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":8,"character":20}],"type":{"type":"reference","name":"TPlane","id":210},"defaultValue":" [[0, 0, 0], [0, 1, 0], [1, 0, 0]]"},{"id":203,"name":"YZPLANE","kind":32,"kindString":"Variable","flags":{"isExported":true,"isExternal":true,"isConst":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":5,"character":20}],"type":{"type":"reference","name":"TPlane","id":210},"defaultValue":" [[0, 0, 0], [0, 1, 0], [0, 0, 1]]"},{"id":204,"name":"ZXPLANE","kind":32,"kindString":"Variable","flags":{"isExported":true,"isExternal":true,"isConst":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":6,"character":20}],"type":{"type":"reference","name":"TPlane","id":210},"defaultValue":" [[0, 0, 0], [0, 0, 1], [1, 0, 0]]"},{"id":206,"name":"ZYPLANE","kind":32,"kindString":"Variable","flags":{"isExported":true,"isExternal":true,"isConst":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":9,"character":20}],"type":{"type":"reference","name":"TPlane","id":210},"defaultValue":" [[0, 0, 0], [0, 0, 1], [0, 1, 0]]"}],"groups":[{"title":"Enumerations","kind":4,"children":[170,117,96,74,85,123,139]},{"title":"Interfaces","kind":256,"children":[184,189,107,142,165,173,68,199,131,136]},{"title":"Type aliases","kind":4194304,"children":[228,229,226,213,220,208,227,222,212,214,225,210,224,223,217,211,209,215,218,219,221,216]},{"title":"Variables","kind":32,"children":[202,207,205,203,204,206]}],"sources":[{"fileName":"libs/geo-info/common.ts","line":1,"character":0}]},{"id":1732,"name":"\"libs/geo-info/export\"","kind":1,"kindString":"External module","flags":{"isExported":true,"isExternal":true},"originalName":"C:/Dropbox/Files/Software/GitHub/design-automation/mobius-parametric-modeller/src/libs/geo-info/export.ts","children":[{"id":1733,"name":"exportObj","kind":64,"kindString":"Function","flags":{"isExported":true,"isExternal":true},"signatures":[{"id":1734,"name":"exportObj","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Export to obj"},"parameters":[{"id":1735,"name":"model","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"GIModel","id":1047}}],"type":{"type":"intrinsic","name":"string"}}],"sources":[{"fileName":"libs/geo-info/export.ts","line":6,"character":25}]}],"groups":[{"title":"Functions","kind":64,"children":[1733]}],"sources":[{"fileName":"libs/geo-info/export.ts","line":1,"character":0}]},{"id":534,"name":"\"libs/geo-info/id\"","kind":1,"kindString":"External module","flags":{"isExported":true,"isExternal":true},"originalName":"C:/Dropbox/Files/Software/GitHub/design-automation/mobius-parametric-modeller/src/libs/geo-info/id.ts","children":[{"id":535,"name":"getArrDepth","kind":64,"kindString":"Function","flags":{"isExported":true,"isExternal":true},"signatures":[{"id":536,"name":"getArrDepth","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":537,"name":"arr","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"number"}}],"sources":[{"fileName":"libs/geo-info/id.ts","line":4,"character":27}]},{"id":548,"name":"idIndicies","kind":64,"kindString":"Function","flags":{"isExported":true,"isExternal":true},"signatures":[{"id":549,"name":"idIndicies","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":550,"name":"ents_arr","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"array","elementType":{"type":"reference","name":"TEntTypeIdx","id":208}}}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}}],"sources":[{"fileName":"libs/geo-info/id.ts","line":53,"character":26}]},{"id":545,"name":"idsBreak","kind":64,"kindString":"Function","flags":{"isExported":true,"isExternal":true},"signatures":[{"id":546,"name":"idsBreak","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":547,"name":"ids","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"union","types":[{"type":"reference","name":"TId","id":212},{"type":"array","elementType":{"type":"reference","name":"TId","id":212}},{"type":"array","elementType":{"type":"array","elementType":{"type":"reference","name":"TId","id":212}}}]}}],"type":{"type":"union","types":[{"type":"reference","name":"TEntTypeIdx","id":208},{"type":"array","elementType":{"type":"reference","name":"TEntTypeIdx","id":208}},{"type":"array","elementType":{"type":"array","elementType":{"type":"reference","name":"TEntTypeIdx","id":208}}}]}}],"sources":[{"fileName":"libs/geo-info/id.ts","line":37,"character":24}]},{"id":542,"name":"idsMake","kind":64,"kindString":"Function","flags":{"isExported":true,"isExternal":true},"signatures":[{"id":543,"name":"idsMake","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":544,"name":"ent_type_idxs","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"union","types":[{"type":"reference","name":"TEntTypeIdx","id":208},{"type":"array","elementType":{"type":"reference","name":"TEntTypeIdx","id":208}},{"type":"array","elementType":{"type":"array","elementType":{"type":"reference","name":"TEntTypeIdx","id":208}}}]}}],"type":{"type":"union","types":[{"type":"reference","name":"TId","id":212},{"type":"array","elementType":{"type":"reference","name":"TId","id":212}},{"type":"array","elementType":{"type":"array","elementType":{"type":"reference","name":"TId","id":212}}}]}}],"sources":[{"fileName":"libs/geo-info/id.ts","line":24,"character":23}]},{"id":538,"name":"idsMakeFromIndicies","kind":64,"kindString":"Function","flags":{"isExported":true,"isExternal":true},"signatures":[{"id":539,"name":"idsMakeFromIndicies","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":540,"name":"ent_type","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"EEntType","id":74}},{"id":541,"name":"idxs","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"union","types":[{"type":"intrinsic","name":"number"},{"type":"array","elementType":{"type":"intrinsic","name":"number"}},{"type":"array","elementType":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}}]}}],"type":{"type":"union","types":[{"type":"reference","name":"TId","id":212},{"type":"array","elementType":{"type":"reference","name":"TId","id":212}},{"type":"array","elementType":{"type":"array","elementType":{"type":"reference","name":"TId","id":212}}}]}}],"sources":[{"fileName":"libs/geo-info/id.ts","line":11,"character":35}]},{"id":578,"name":"isColl","kind":64,"kindString":"Function","flags":{"isExported":true,"isExternal":true},"signatures":[{"id":579,"name":"isColl","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":580,"name":"ent_type","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"EEntType","id":74}}],"type":{"type":"intrinsic","name":"boolean"}}],"sources":[{"fileName":"libs/geo-info/id.ts","line":84,"character":22}]},{"id":587,"name":"isDim0","kind":64,"kindString":"Function","flags":{"isExported":true,"isExternal":true},"signatures":[{"id":588,"name":"isDim0","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":589,"name":"ent_type","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"EEntType","id":74}}],"type":{"type":"intrinsic","name":"boolean"}}],"sources":[{"fileName":"libs/geo-info/id.ts","line":101,"character":22}]},{"id":590,"name":"isDim1","kind":64,"kindString":"Function","flags":{"isExported":true,"isExternal":true},"signatures":[{"id":591,"name":"isDim1","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":592,"name":"ent_type","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"EEntType","id":74}}],"type":{"type":"intrinsic","name":"boolean"}}],"sources":[{"fileName":"libs/geo-info/id.ts","line":107,"character":22}]},{"id":593,"name":"isDim2","kind":64,"kindString":"Function","flags":{"isExported":true,"isExternal":true},"signatures":[{"id":594,"name":"isDim2","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":595,"name":"ent_type","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"EEntType","id":74}}],"type":{"type":"intrinsic","name":"boolean"}}],"sources":[{"fileName":"libs/geo-info/id.ts","line":112,"character":22}]},{"id":560,"name":"isEdge","kind":64,"kindString":"Function","flags":{"isExported":true,"isExternal":true},"signatures":[{"id":561,"name":"isEdge","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":562,"name":"ent_type","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"EEntType","id":74}}],"type":{"type":"intrinsic","name":"boolean"}}],"sources":[{"fileName":"libs/geo-info/id.ts","line":66,"character":22}]},{"id":566,"name":"isFace","kind":64,"kindString":"Function","flags":{"isExported":true,"isExternal":true},"signatures":[{"id":567,"name":"isFace","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":568,"name":"ent_type","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"EEntType","id":74}}],"type":{"type":"intrinsic","name":"boolean"}}],"sources":[{"fileName":"libs/geo-info/id.ts","line":72,"character":22}]},{"id":584,"name":"isObj","kind":64,"kindString":"Function","flags":{"isExported":true,"isExternal":true},"signatures":[{"id":585,"name":"isObj","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":586,"name":"ent_type","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"EEntType","id":74}}],"type":{"type":"intrinsic","name":"boolean"}}],"sources":[{"fileName":"libs/geo-info/id.ts","line":95,"character":21}]},{"id":575,"name":"isPgon","kind":64,"kindString":"Function","flags":{"isExported":true,"isExternal":true},"signatures":[{"id":576,"name":"isPgon","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":577,"name":"ent_type","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"EEntType","id":74}}],"type":{"type":"intrinsic","name":"boolean"}}],"sources":[{"fileName":"libs/geo-info/id.ts","line":81,"character":22}]},{"id":572,"name":"isPline","kind":64,"kindString":"Function","flags":{"isExported":true,"isExternal":true},"signatures":[{"id":573,"name":"isPline","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":574,"name":"ent_type","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"EEntType","id":74}}],"type":{"type":"intrinsic","name":"boolean"}}],"sources":[{"fileName":"libs/geo-info/id.ts","line":78,"character":23}]},{"id":569,"name":"isPoint","kind":64,"kindString":"Function","flags":{"isExported":true,"isExternal":true},"signatures":[{"id":570,"name":"isPoint","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":571,"name":"ent_type","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"EEntType","id":74}}],"type":{"type":"intrinsic","name":"boolean"}}],"sources":[{"fileName":"libs/geo-info/id.ts","line":75,"character":23}]},{"id":551,"name":"isPosi","kind":64,"kindString":"Function","flags":{"isExported":true,"isExternal":true},"signatures":[{"id":552,"name":"isPosi","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":553,"name":"ent_type","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"EEntType","id":74}}],"type":{"type":"intrinsic","name":"boolean"}}],"sources":[{"fileName":"libs/geo-info/id.ts","line":57,"character":22}]},{"id":581,"name":"isTopo","kind":64,"kindString":"Function","flags":{"isExported":true,"isExternal":true},"signatures":[{"id":582,"name":"isTopo","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":583,"name":"ent_type","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"EEntType","id":74}}],"type":{"type":"intrinsic","name":"boolean"}}],"sources":[{"fileName":"libs/geo-info/id.ts","line":88,"character":22}]},{"id":557,"name":"isTri","kind":64,"kindString":"Function","flags":{"isExported":true,"isExternal":true},"signatures":[{"id":558,"name":"isTri","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":559,"name":"ent_type","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"EEntType","id":74}}],"type":{"type":"intrinsic","name":"boolean"}}],"sources":[{"fileName":"libs/geo-info/id.ts","line":63,"character":21}]},{"id":554,"name":"isVert","kind":64,"kindString":"Function","flags":{"isExported":true,"isExternal":true},"signatures":[{"id":555,"name":"isVert","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":556,"name":"ent_type","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"EEntType","id":74}}],"type":{"type":"intrinsic","name":"boolean"}}],"sources":[{"fileName":"libs/geo-info/id.ts","line":60,"character":22}]},{"id":563,"name":"isWire","kind":64,"kindString":"Function","flags":{"isExported":true,"isExternal":true},"signatures":[{"id":564,"name":"isWire","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":565,"name":"ent_type","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"EEntType","id":74}}],"type":{"type":"intrinsic","name":"boolean"}}],"sources":[{"fileName":"libs/geo-info/id.ts","line":69,"character":22}]}],"groups":[{"title":"Functions","kind":64,"children":[535,548,545,542,538,578,587,590,593,560,566,584,575,572,569,551,581,557,554,563]}],"sources":[{"fileName":"libs/geo-info/id.ts","line":1,"character":0}]},{"id":1736,"name":"\"libs/geo-info/import\"","kind":1,"kindString":"External module","flags":{"isExported":true,"isExternal":true},"originalName":"C:/Dropbox/Files/Software/GitHub/design-automation/mobius-parametric-modeller/src/libs/geo-info/import.ts","children":[{"id":1737,"name":"importObj","kind":64,"kindString":"Function","flags":{"isExported":true,"isExternal":true},"signatures":[{"id":1738,"name":"importObj","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Import to obj"},"parameters":[{"id":1739,"name":"obj_str","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","name":"GIModel","id":1047}}],"sources":[{"fileName":"libs/geo-info/import.ts","line":6,"character":25}]}],"groups":[{"title":"Functions","kind":64,"children":[1737]}],"sources":[{"fileName":"libs/geo-info/import.ts","line":1,"character":0}]},{"id":1073,"name":"\"libs/geom/distance\"","kind":1,"kindString":"External module","flags":{"isExported":true,"isExternal":true},"originalName":"C:/Dropbox/Files/Software/GitHub/design-automation/mobius-parametric-modeller/src/libs/geom/distance.ts","children":[{"id":1074,"name":"Txyz","kind":4194304,"kindString":"Type alias","flags":{"isExternal":true},"sources":[{"fileName":"libs/geom/distance.ts","line":2,"character":9}],"type":{"type":"tuple","elements":[{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"number"}]}},{"id":1075,"name":"EPS","kind":32,"kindString":"Variable","flags":{"isExternal":true,"isConst":true},"sources":[{"fileName":"libs/geom/distance.ts","line":3,"character":9}],"type":{"type":"unknown","name":"0.000001"},"defaultValue":"0.000001"},{"id":1076,"name":"distance","kind":64,"kindString":"Function","flags":{"isExported":true,"isExternal":true},"signatures":[{"id":1077,"name":"distance","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1078,"name":"v1","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Txyz","id":1074}},{"id":1079,"name":"v2","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Txyz","id":1074}}],"type":{"type":"intrinsic","name":"number"}}],"sources":[{"fileName":"libs/geom/distance.ts","line":5,"character":24}]}],"groups":[{"title":"Type aliases","kind":4194304,"children":[1074]},{"title":"Variables","kind":32,"children":[1075]},{"title":"Functions","kind":64,"children":[1076]}],"sources":[{"fileName":"libs/geom/distance.ts","line":1,"character":0}]},{"id":1581,"name":"\"libs/geom/matrix\"","kind":1,"kindString":"External module","flags":{"isExported":true,"isExternal":true},"originalName":"C:/Dropbox/Files/Software/GitHub/design-automation/mobius-parametric-modeller/src/libs/geom/matrix.ts","children":[{"id":1583,"name":"TPlane","kind":4194304,"kindString":"Type alias","flags":{"isExternal":true},"sources":[{"fileName":"libs/geom/matrix.ts","line":5,"character":11}],"type":{"type":"tuple","elements":[{"type":"reference","name":"Txyz","id":1582},{"type":"reference","name":"Txyz","id":1582},{"type":"reference","name":"Txyz","id":1582}]}},{"id":1582,"name":"Txyz","kind":4194304,"kindString":"Type alias","flags":{"isExternal":true},"sources":[{"fileName":"libs/geom/matrix.ts","line":4,"character":9}],"type":{"type":"tuple","elements":[{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"number"}]}},{"id":1584,"name":"EPS","kind":32,"kindString":"Variable","flags":{"isExternal":true,"isConst":true},"sources":[{"fileName":"libs/geom/matrix.ts","line":6,"character":9}],"type":{"type":"unknown","name":"0.000001"},"defaultValue":"0.000001"},{"id":1606,"name":"_crossVectors","kind":64,"kindString":"Function","flags":{"isExternal":true},"signatures":[{"id":1607,"name":"_crossVectors","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1608,"name":"v1","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Vector3"}},{"id":1609,"name":"v2","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Vector3"}},{"id":1610,"name":"norm","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"boolean"},"defaultValue":"false"}],"type":{"type":"reference","name":"Vector3"}}],"sources":[{"fileName":"libs/geom/matrix.ts","line":86,"character":22}]},{"id":1611,"name":"_dotVectors","kind":64,"kindString":"Function","flags":{"isExternal":true},"signatures":[{"id":1612,"name":"_dotVectors","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1613,"name":"v1","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Vector3"}},{"id":1614,"name":"v2","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Vector3"}}],"type":{"type":"intrinsic","name":"number"}}],"sources":[{"fileName":"libs/geom/matrix.ts","line":93,"character":20}]},{"id":1631,"name":"_matrixFromXYZ","kind":64,"kindString":"Function","flags":{"isExternal":true},"signatures":[{"id":1632,"name":"_matrixFromXYZ","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1633,"name":"pts","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"array","elementType":{"type":"reference","name":"Txyz","id":1582}}},{"id":1634,"name":"from_origin","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Txyz","id":1582}},{"id":1635,"name":"from_vectors","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"array","elementType":{"type":"reference","name":"Txyz","id":1582}}},{"id":1636,"name":"to_origin","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Txyz","id":1582}},{"id":1637,"name":"to_vectors","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"array","elementType":{"type":"reference","name":"Txyz","id":1582}}}],"type":{"type":"array","elementType":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}}}],"sources":[{"fileName":"libs/geom/matrix.ts","line":134,"character":23}]},{"id":1615,"name":"_xformMatrixFromXYZVectors","kind":64,"kindString":"Function","flags":{"isExternal":true},"signatures":[{"id":1616,"name":"_xformMatrixFromXYZVectors","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1617,"name":"o","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Txyz","id":1582}},{"id":1618,"name":"xaxis","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Txyz","id":1582}},{"id":1619,"name":"xyplane","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Txyz","id":1582}},{"id":1620,"name":"neg","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"boolean"}}],"type":{"type":"reference","name":"Matrix4"}}],"sources":[{"fileName":"libs/geom/matrix.ts","line":97,"character":35}]},{"id":1621,"name":"_xformMatrixNeg","kind":64,"kindString":"Function","flags":{"isExternal":true},"signatures":[{"id":1622,"name":"_xformMatrixNeg","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1623,"name":"o","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Vector3"}},{"id":1624,"name":"x","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Vector3"}},{"id":1625,"name":"y","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Vector3"}}],"type":{"type":"reference","name":"Matrix4"}}],"sources":[{"fileName":"libs/geom/matrix.ts","line":108,"character":24}]},{"id":1589,"name":"mirrorMatrix","kind":64,"kindString":"Function","flags":{"isExported":true,"isExternal":true},"signatures":[{"id":1590,"name":"mirrorMatrix","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1591,"name":"origin","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Txyz","id":1582}},{"id":1592,"name":"normal","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Txyz","id":1582}}],"type":{"type":"reference","name":"Matrix4"}}],"sources":[{"fileName":"libs/geom/matrix.ts","line":14,"character":28}]},{"id":1585,"name":"multMatrix","kind":64,"kindString":"Function","flags":{"isExported":true,"isExternal":true},"signatures":[{"id":1586,"name":"multMatrix","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1587,"name":"xyz","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Txyz","id":1582}},{"id":1588,"name":"m","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Matrix4"}}],"type":{"type":"reference","name":"Txyz","id":1582}}],"sources":[{"fileName":"libs/geom/matrix.ts","line":8,"character":26}]},{"id":1593,"name":"rotateMatrix","kind":64,"kindString":"Function","flags":{"isExported":true,"isExternal":true},"signatures":[{"id":1594,"name":"rotateMatrix","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1595,"name":"origin","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Txyz","id":1582}},{"id":1596,"name":"axis","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Txyz","id":1582}},{"id":1597,"name":"angle","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","name":"Matrix4"}}],"sources":[{"fileName":"libs/geom/matrix.ts","line":36,"character":28}]},{"id":1598,"name":"scaleMatrix","kind":64,"kindString":"Function","flags":{"isExported":true,"isExternal":true},"signatures":[{"id":1599,"name":"scaleMatrix","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1600,"name":"origin","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"union","types":[{"type":"reference","name":"Txyz","id":1582},{"type":"reference","name":"TPlane","id":1583}]}},{"id":1601,"name":"factor","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Txyz","id":1582}}],"type":{"type":"reference","name":"Matrix4"}}],"sources":[{"fileName":"libs/geom/matrix.ts","line":53,"character":27}]},{"id":1626,"name":"xformMatrixPos","kind":64,"kindString":"Function","flags":{"isExternal":true},"signatures":[{"id":1627,"name":"xformMatrixPos","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1628,"name":"o","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Vector3"}},{"id":1629,"name":"x","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Vector3"}},{"id":1630,"name":"y","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Vector3"}}],"type":{"type":"reference","name":"Matrix4"}}],"sources":[{"fileName":"libs/geom/matrix.ts","line":121,"character":23}]},{"id":1602,"name":"xfromSourceTargetMatrix","kind":64,"kindString":"Function","flags":{"isExported":true,"isExternal":true},"signatures":[{"id":1603,"name":"xfromSourceTargetMatrix","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1604,"name":"source_plane","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"TPlane","id":1583}},{"id":1605,"name":"target_plane","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"TPlane","id":1583}}],"type":{"type":"reference","name":"Matrix4"}}],"sources":[{"fileName":"libs/geom/matrix.ts","line":70,"character":39}]}],"groups":[{"title":"Type aliases","kind":4194304,"children":[1583,1582]},{"title":"Variables","kind":32,"children":[1584]},{"title":"Functions","kind":64,"children":[1606,1611,1631,1615,1621,1589,1585,1593,1598,1626,1602]}],"sources":[{"fileName":"libs/geom/matrix.ts","line":1,"character":0}]},{"id":1080,"name":"\"libs/geom/triangle\"","kind":1,"kindString":"External module","flags":{"isExported":true,"isExternal":true},"originalName":"C:/Dropbox/Files/Software/GitHub/design-automation/mobius-parametric-modeller/src/libs/geom/triangle.ts","children":[{"id":1081,"name":"Txyz","kind":4194304,"kindString":"Type alias","flags":{"isExternal":true},"sources":[{"fileName":"libs/geom/triangle.ts","line":3,"character":9}],"type":{"type":"tuple","elements":[{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"number"}]}},{"id":1082,"name":"EPS","kind":32,"kindString":"Variable","flags":{"isExternal":true,"isConst":true},"sources":[{"fileName":"libs/geom/triangle.ts","line":4,"character":9}],"type":{"type":"unknown","name":"0.000001"},"defaultValue":"0.000001"},{"id":1089,"name":"area","kind":64,"kindString":"Function","flags":{"isExported":true,"isExternal":true},"signatures":[{"id":1090,"name":"area","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1091,"name":"v1","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Txyz","id":1081}},{"id":1092,"name":"v2","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Txyz","id":1081}},{"id":1093,"name":"v3","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Txyz","id":1081}}],"type":{"type":"intrinsic","name":"number"}}],"sources":[{"fileName":"libs/geom/triangle.ts","line":19,"character":20}]},{"id":1083,"name":"normal","kind":64,"kindString":"Function","flags":{"isExported":true,"isExternal":true},"signatures":[{"id":1084,"name":"normal","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1085,"name":"v1","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Txyz","id":1081}},{"id":1086,"name":"v2","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Txyz","id":1081}},{"id":1087,"name":"v3","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Txyz","id":1081}},{"id":1088,"name":"norm","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"boolean"},"defaultValue":"false"}],"type":{"type":"reference","name":"Txyz","id":1081}}],"sources":[{"fileName":"libs/geom/triangle.ts","line":6,"character":22}]}],"groups":[{"title":"Type aliases","kind":4194304,"children":[1081]},{"title":"Variables","kind":32,"children":[1082]},{"title":"Functions","kind":64,"children":[1089,1083]}],"sources":[{"fileName":"libs/geom/triangle.ts","line":1,"character":0}]},{"id":747,"name":"\"libs/geom/vectors\"","kind":1,"kindString":"External module","flags":{"isExported":true,"isExternal":true},"originalName":"C:/Dropbox/Files/Software/GitHub/design-automation/mobius-parametric-modeller/src/libs/geom/vectors.ts","children":[{"id":748,"name":"Txyz","kind":4194304,"kindString":"Type alias","flags":{"isExternal":true},"sources":[{"fileName":"libs/geom/vectors.ts","line":3,"character":9}],"type":{"type":"tuple","elements":[{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"number"}]}},{"id":749,"name":"EPS","kind":32,"kindString":"Variable","flags":{"isExternal":true,"isConst":true},"sources":[{"fileName":"libs/geom/vectors.ts","line":4,"character":9}],"type":{"type":"unknown","name":"0.000001"},"defaultValue":"0.000001"},{"id":820,"name":"dist","kind":64,"kindString":"Function","flags":{"isExported":true,"isExternal":true},"signatures":[{"id":821,"name":"dist","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":822,"name":"p1","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Txyz","id":748}},{"id":823,"name":"p2","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Txyz","id":748}}],"type":{"type":"intrinsic","name":"number"}}],"sources":[{"fileName":"libs/geom/vectors.ts","line":130,"character":20}]},{"id":832,"name":"interpByLen","kind":64,"kindString":"Function","flags":{"isExported":true,"isExternal":true},"signatures":[{"id":833,"name":"interpByLen","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":834,"name":"pt1","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Txyz","id":748}},{"id":835,"name":"pt2","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Txyz","id":748}},{"id":836,"name":"len","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"array","elementType":{"type":"reference","name":"Txyz","id":748}}}],"sources":[{"fileName":"libs/geom/vectors.ts","line":164,"character":27}]},{"id":827,"name":"interpByNum","kind":64,"kindString":"Function","flags":{"isExported":true,"isExternal":true},"signatures":[{"id":828,"name":"interpByNum","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Create new points between two points."},"parameters":[{"id":829,"name":"pt1","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Txyz","id":748}},{"id":830,"name":"pt2","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Txyz","id":748}},{"id":831,"name":"num_points","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"array","elementType":{"type":"reference","name":"Txyz","id":748}}}],"sources":[{"fileName":"libs/geom/vectors.ts","line":153,"character":27}]},{"id":824,"name":"newellNorm","kind":64,"kindString":"Function","flags":{"isExported":true,"isExternal":true},"signatures":[{"id":825,"name":"newellNorm","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Finds the normal to a set of points using Newell's method"},"parameters":[{"id":826,"name":"pts","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"array","elementType":{"type":"reference","name":"Txyz","id":748}}}],"type":{"type":"reference","name":"Txyz","id":748}}],"sources":[{"fileName":"libs/geom/vectors.ts","line":137,"character":26}]},{"id":760,"name":"vecAdd","kind":64,"kindString":"Function","flags":{"isExported":true,"isExternal":true},"signatures":[{"id":761,"name":"vecAdd","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":762,"name":"v1","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Txyz","id":748}},{"id":763,"name":"v2","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Txyz","id":748}},{"id":764,"name":"norm","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"boolean"},"defaultValue":"false"}],"type":{"type":"reference","name":"Txyz","id":748}}],"sources":[{"fileName":"libs/geom/vectors.ts","line":26,"character":22}]},{"id":789,"name":"vecAng","kind":64,"kindString":"Function","flags":{"isExported":true,"isExternal":true},"signatures":[{"id":790,"name":"vecAng","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":791,"name":"v1","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Txyz","id":748}},{"id":792,"name":"v2","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Txyz","id":748}}],"type":{"type":"intrinsic","name":"number"}}],"sources":[{"fileName":"libs/geom/vectors.ts","line":80,"character":22}]},{"id":793,"name":"vecAng2","kind":64,"kindString":"Function","flags":{"isExported":true,"isExternal":true},"signatures":[{"id":794,"name":"vecAng2","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":795,"name":"v1","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Txyz","id":748}},{"id":796,"name":"v2","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Txyz","id":748}},{"id":797,"name":"n","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Txyz","id":748}}],"type":{"type":"intrinsic","name":"number"}}],"sources":[{"fileName":"libs/geom/vectors.ts","line":88,"character":23}]},{"id":816,"name":"vecCodir","kind":64,"kindString":"Function","flags":{"isExported":true,"isExternal":true},"signatures":[{"id":817,"name":"vecCodir","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":818,"name":"v1","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Txyz","id":748}},{"id":819,"name":"v2","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Txyz","id":748}}],"type":{"type":"intrinsic","name":"boolean"}}],"sources":[{"fileName":"libs/geom/vectors.ts","line":123,"character":24}]},{"id":777,"name":"vecCross","kind":64,"kindString":"Function","flags":{"isExported":true,"isExternal":true},"signatures":[{"id":778,"name":"vecCross","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":779,"name":"v1","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Txyz","id":748}},{"id":780,"name":"v2","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Txyz","id":748}},{"id":781,"name":"norm","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"boolean"},"defaultValue":"false"}],"type":{"type":"reference","name":"Txyz","id":748}}],"sources":[{"fileName":"libs/geom/vectors.ts","line":67,"character":24}]},{"id":769,"name":"vecDiv","kind":64,"kindString":"Function","flags":{"isExported":true,"isExternal":true},"signatures":[{"id":770,"name":"vecDiv","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":771,"name":"vec","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Txyz","id":748}},{"id":772,"name":"divisor","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","name":"Txyz","id":748}}],"sources":[{"fileName":"libs/geom/vectors.ts","line":51,"character":22}]},{"id":782,"name":"vecDot","kind":64,"kindString":"Function","flags":{"isExported":true,"isExternal":true},"signatures":[{"id":783,"name":"vecDot","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":784,"name":"v1","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Txyz","id":748}},{"id":785,"name":"v2","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Txyz","id":748}}],"type":{"type":"intrinsic","name":"number"}}],"sources":[{"fileName":"libs/geom/vectors.ts","line":71,"character":22}]},{"id":750,"name":"vecEqual","kind":64,"kindString":"Function","flags":{"isExported":true,"isExternal":true},"signatures":[{"id":751,"name":"vecEqual","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":752,"name":"v1","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Txyz","id":748}},{"id":753,"name":"v2","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Txyz","id":748}},{"id":754,"name":"tol","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"boolean"}}],"sources":[{"fileName":"libs/geom/vectors.ts","line":7,"character":24}]},{"id":808,"name":"vecFromTo","kind":64,"kindString":"Function","flags":{"isExported":true,"isExternal":true},"signatures":[{"id":809,"name":"vecFromTo","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":810,"name":"v1","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Txyz","id":748}},{"id":811,"name":"v2","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Txyz","id":748}}],"type":{"type":"reference","name":"Txyz","id":748}}],"sources":[{"fileName":"libs/geom/vectors.ts","line":115,"character":25}]},{"id":798,"name":"vecLen","kind":64,"kindString":"Function","flags":{"isExported":true,"isExternal":true},"signatures":[{"id":799,"name":"vecLen","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":800,"name":"v","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Txyz","id":748}}],"type":{"type":"intrinsic","name":"number"}}],"sources":[{"fileName":"libs/geom/vectors.ts","line":100,"character":22}]},{"id":812,"name":"vecMakeOrtho","kind":64,"kindString":"Function","flags":{"isExported":true,"isExternal":true},"signatures":[{"id":813,"name":"vecMakeOrtho","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":814,"name":"v1","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Txyz","id":748}},{"id":815,"name":"v2","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Txyz","id":748}}],"type":{"type":"reference","name":"Txyz","id":748}}],"sources":[{"fileName":"libs/geom/vectors.ts","line":119,"character":28}]},{"id":773,"name":"vecMult","kind":64,"kindString":"Function","flags":{"isExported":true,"isExternal":true},"signatures":[{"id":774,"name":"vecMult","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":775,"name":"vec","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Txyz","id":748}},{"id":776,"name":"multiplier","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","name":"Txyz","id":748}}],"sources":[{"fileName":"libs/geom/vectors.ts","line":59,"character":23}]},{"id":786,"name":"vecNorm","kind":64,"kindString":"Function","flags":{"isExported":true,"isExternal":true},"signatures":[{"id":787,"name":"vecNorm","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":788,"name":"v","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Txyz","id":748}}],"type":{"type":"reference","name":"Txyz","id":748}}],"sources":[{"fileName":"libs/geom/vectors.ts","line":75,"character":23}]},{"id":805,"name":"vecRev","kind":64,"kindString":"Function","flags":{"isExported":true,"isExternal":true},"signatures":[{"id":806,"name":"vecRev","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":807,"name":"v","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Txyz","id":748}}],"type":{"type":"reference","name":"Txyz","id":748}}],"sources":[{"fileName":"libs/geom/vectors.ts","line":107,"character":22}]},{"id":801,"name":"vecSetLen","kind":64,"kindString":"Function","flags":{"isExported":true,"isExternal":true},"signatures":[{"id":802,"name":"vecSetLen","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":803,"name":"v","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Txyz","id":748}},{"id":804,"name":"len","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","name":"Txyz","id":748}}],"sources":[{"fileName":"libs/geom/vectors.ts","line":103,"character":25}]},{"id":755,"name":"vecSub","kind":64,"kindString":"Function","flags":{"isExported":true,"isExternal":true},"signatures":[{"id":756,"name":"vecSub","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":757,"name":"v1","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Txyz","id":748}},{"id":758,"name":"v2","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Txyz","id":748}},{"id":759,"name":"norm","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"boolean"},"defaultValue":"false"}],"type":{"type":"reference","name":"Txyz","id":748}}],"sources":[{"fileName":"libs/geom/vectors.ts","line":14,"character":22}]},{"id":765,"name":"vecSum","kind":64,"kindString":"Function","flags":{"isExported":true,"isExternal":true},"signatures":[{"id":766,"name":"vecSum","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":767,"name":"vecs","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"array","elementType":{"type":"reference","name":"Txyz","id":748}}},{"id":768,"name":"norm","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"boolean"},"defaultValue":"false"}],"type":{"type":"reference","name":"Txyz","id":748}}],"sources":[{"fileName":"libs/geom/vectors.ts","line":38,"character":22}]}],"groups":[{"title":"Type aliases","kind":4194304,"children":[748]},{"title":"Variables","kind":32,"children":[749]},{"title":"Functions","kind":64,"children":[820,832,827,824,760,789,793,816,777,769,782,750,808,798,812,773,786,805,801,755,765]}],"sources":[{"fileName":"libs/geom/vectors.ts","line":1,"character":0}]},{"id":411,"name":"\"libs/triangulate/arr\"","kind":1,"kindString":"External module","flags":{"isExported":true,"isExternal":true},"originalName":"C:/Dropbox/Files/Software/GitHub/design-automation/mobius-parametric-modeller/src/libs/triangulate/arr.ts","children":[{"id":412,"name":"Arr","kind":128,"kindString":"Class","flags":{"isExported":true,"isExternal":true},"comment":{"shortText":"A set of static methods for working with arrays of simple types.\nThe arrays can be nested, but they do not contain any objects."},"children":[{"id":437,"name":"deepCopy","kind":2048,"kindString":"Method","flags":{"isStatic":true,"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":438,"name":"deepCopy","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Make a copy of an nD array.\nIf the input is not an array, then just return the same thing.\nA new array is returned. The input array remains unchanged.\nIf the input array is undefined, an empty array is returned.\nIf the input is s sparse array, then the output will alos be a sparse array.","returns":"The new nD array.\n"},"parameters":[{"id":439,"name":"arr","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"The nD array to copy."},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"sources":[{"fileName":"libs/triangulate/arr.ts","line":106,"character":26}]},{"id":444,"name":"deepCount","kind":2048,"kindString":"Method","flags":{"isStatic":true,"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":445,"name":"deepCount","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Counts the number of values in an nD array .\nThe input array remains unchanged.\nIf the input array is undefined, 0 is returned.\nThe input can be a sparse array. Undefined values are ignored.\nFor example, for [1, 2, , , 3], the count will be 3.","returns":"The number of elements in the nD array.\n"},"parameters":[{"id":446,"name":"arr","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"The nD array to count."},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"type":{"type":"intrinsic","name":"number"}}],"sources":[{"fileName":"libs/triangulate/arr.ts","line":150,"character":27}]},{"id":440,"name":"deepFill","kind":2048,"kindString":"Method","flags":{"isStatic":true,"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":441,"name":"deepFill","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Fills an nD array with new values (all the same value).\nThe input array is changed.\nIf the input array is undefined, an empty array is returned.\nThe input can be a sparse array."},"parameters":[{"id":442,"name":"arr","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"The nD array to fill."},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}},{"id":443,"name":"value","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"The value to insert into the array.\n"},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"libs/triangulate/arr.ts","line":129,"character":26}]},{"id":420,"name":"equal","kind":2048,"kindString":"Method","flags":{"isStatic":true,"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":421,"name":"equal","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Check if two nD arrays are equal (i.e. that all elements in the array are equal, ===.).\nIf the arrays are unequal in length, false is returned.\nElements in the array can have any value.","returns":"True or false.\n"},"parameters":[{"id":422,"name":"arr1","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"The first value."},"type":{"type":"intrinsic","name":"any"}},{"id":423,"name":"arr2","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"The second values."},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"boolean"}}],"sources":[{"fileName":"libs/triangulate/arr.ts","line":34,"character":23}]},{"id":433,"name":"flatten","kind":2048,"kindString":"Method","flags":{"isStatic":true,"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":434,"name":"flatten","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Take an nD array and flattens it.\nA new array is returned. The input array remains unchanged.\nFor example, [1, 2, [3, 4], [5, 6]] will become [1, 2, 3, 4, 5, 6].\nIf the input array is undefined, an empty array is returned.","returns":"A new 1D array.\n"},"parameters":[{"id":435,"name":"arr","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"The multidimensional array to flatten."},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}},{"id":436,"name":"depth","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"sources":[{"fileName":"libs/triangulate/arr.ts","line":86,"character":25}]},{"id":424,"name":"indexOf","kind":2048,"kindString":"Method","flags":{"isStatic":true,"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":425,"name":"indexOf","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Find the position of the first occurrence of a specified value in an array.\nThe value can be an array (which is not the case for Array.indexOf()).\nIf the value is not found or is undefined, return -1.\nIf the array is null or undefined, return -1.","returns":"The index in the array of the first occurance of the value.\n"},"parameters":[{"id":426,"name":"arr","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}},{"id":427,"name":"value","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"The value, can be a value or a 1D array of values."},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"number"}}],"sources":[{"fileName":"libs/triangulate/arr.ts","line":50,"character":25}]},{"id":413,"name":"make","kind":2048,"kindString":"Method","flags":{"isStatic":true,"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":414,"name":"make","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Make an array of numbers. All elements in the array will have the same value.","returns":"The resulting array.\n"},"parameters":[{"id":415,"name":"length","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"The length of the new array. If length is 0, then an empty array is returned."},"type":{"type":"intrinsic","name":"number"}},{"id":416,"name":"value","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"The values in the array."},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}}],"sources":[{"fileName":"libs/triangulate/arr.ts","line":13,"character":22}]},{"id":417,"name":"makeSeq","kind":2048,"kindString":"Method","flags":{"isStatic":true,"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":418,"name":"makeSeq","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Make an array of numbers. All elements in the array will be a numerical sequence, 0, 1, 2, 3....","returns":"The resulting array.\n"},"parameters":[{"id":419,"name":"length","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"The length of the new array. If length is 0, then an empty array is returned."},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}}],"sources":[{"fileName":"libs/triangulate/arr.ts","line":22,"character":25}]},{"id":428,"name":"replace","kind":2048,"kindString":"Method","flags":{"isStatic":true,"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":429,"name":"replace","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Replace all occurrences of a specified value in an array.\nThe input array is changed.\nThe value can be an array.\nIf the value is not found or is undefined, return -1."},"parameters":[{"id":430,"name":"arr","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"The array.\n"},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}},{"id":431,"name":"old_value","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"The old value to replace."},"type":{"type":"intrinsic","name":"any"}},{"id":432,"name":"new_value","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"The new value."},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"libs/triangulate/arr.ts","line":69,"character":25}]}],"groups":[{"title":"Methods","kind":2048,"children":[437,444,440,420,433,424,413,417,428]}],"sources":[{"fileName":"libs/triangulate/arr.ts","line":6,"character":16}]}],"groups":[{"title":"Classes","kind":128,"children":[412]}],"sources":[{"fileName":"libs/triangulate/arr.ts","line":1,"character":0}]},{"id":260,"name":"\"libs/triangulate/earcut\"","kind":1,"kindString":"External module","flags":{"isExported":true,"isExternal":true},"originalName":"C:/Dropbox/Files/Software/GitHub/design-automation/mobius-parametric-modeller/src/libs/triangulate/earcut.ts","children":[{"id":400,"name":"Node","kind":64,"kindString":"Function","flags":{"isExternal":true},"signatures":[{"id":401,"name":"Node","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":402,"name":"i","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}},{"id":403,"name":"x","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}},{"id":404,"name":"y","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"libs/triangulate/earcut.ts","line":769,"character":13}]},{"id":360,"name":"area","kind":64,"kindString":"Function","flags":{"isExternal":true},"signatures":[{"id":361,"name":"area","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":362,"name":"p","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}},{"id":363,"name":"q","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}},{"id":364,"name":"r","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"number"}}],"sources":[{"fileName":"libs/triangulate/earcut.ts","line":624,"character":13}]},{"id":315,"name":"compareX","kind":64,"kindString":"Function","flags":{"isExternal":true},"signatures":[{"id":316,"name":"compareX","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":317,"name":"a","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}},{"id":318,"name":"b","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"number"}}],"sources":[{"fileName":"libs/triangulate/earcut.ts","line":373,"character":17}]},{"id":296,"name":"cureLocalIntersections","kind":64,"kindString":"Function","flags":{"isExternal":true},"signatures":[{"id":297,"name":"cureLocalIntersections","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":298,"name":"start","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}},{"id":299,"name":"triangles","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}},{"id":300,"name":"dim","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"any"}}],"sources":[{"fileName":"libs/triangulate/earcut.ts","line":268,"character":31}]},{"id":278,"name":"earcutLinked","kind":64,"kindString":"Function","flags":{"isExternal":true},"signatures":[{"id":279,"name":"earcutLinked","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":280,"name":"ear","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}},{"id":281,"name":"triangles","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}},{"id":282,"name":"dim","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}},{"id":283,"name":"minX","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}},{"id":284,"name":"minY","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}},{"id":285,"name":"invSize","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}},{"id":286,"name":"pass","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"libs/triangulate/earcut.ts","line":117,"character":21}]},{"id":319,"name":"eliminateHole","kind":64,"kindString":"Function","flags":{"isExternal":true},"signatures":[{"id":320,"name":"eliminateHole","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":321,"name":"hole","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}},{"id":322,"name":"outerNode","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"libs/triangulate/earcut.ts","line":381,"character":22}]},{"id":309,"name":"eliminateHoles","kind":64,"kindString":"Function","flags":{"isExternal":true},"signatures":[{"id":310,"name":"eliminateHoles","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":311,"name":"data","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}},{"id":312,"name":"holeIndices","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}},{"id":313,"name":"outerNode","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}},{"id":314,"name":"dim","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"any"}}],"sources":[{"fileName":"libs/triangulate/earcut.ts","line":344,"character":23}]},{"id":365,"name":"equals","kind":64,"kindString":"Function","flags":{"isExternal":true},"signatures":[{"id":366,"name":"equals","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":367,"name":"p1","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}},{"id":368,"name":"p2","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"boolean"}}],"sources":[{"fileName":"libs/triangulate/earcut.ts","line":632,"character":15}]},{"id":274,"name":"filterPoints","kind":64,"kindString":"Function","flags":{"isExternal":true},"signatures":[{"id":275,"name":"filterPoints","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":276,"name":"start","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}},{"id":277,"name":"end","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"any"}}],"sources":[{"fileName":"libs/triangulate/earcut.ts","line":85,"character":21}]},{"id":323,"name":"findHoleBridge","kind":64,"kindString":"Function","flags":{"isExternal":true},"signatures":[{"id":324,"name":"findHoleBridge","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":325,"name":"hole","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}},{"id":326,"name":"outerNode","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"any"}}],"sources":[{"fileName":"libs/triangulate/earcut.ts","line":397,"character":23}]},{"id":343,"name":"getLeftmost","kind":64,"kindString":"Function","flags":{"isExternal":true},"signatures":[{"id":344,"name":"getLeftmost","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":345,"name":"start","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"any"}}],"sources":[{"fileName":"libs/triangulate/earcut.ts","line":588,"character":20}]},{"id":327,"name":"indexCurve","kind":64,"kindString":"Function","flags":{"isExternal":true},"signatures":[{"id":328,"name":"indexCurve","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":329,"name":"start","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}},{"id":330,"name":"minX","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}},{"id":331,"name":"minY","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}},{"id":332,"name":"invSize","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"libs/triangulate/earcut.ts","line":477,"character":19}]},{"id":391,"name":"insertNode","kind":64,"kindString":"Function","flags":{"isExternal":true},"signatures":[{"id":392,"name":"insertNode","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":393,"name":"i","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}},{"id":394,"name":"x","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}},{"id":395,"name":"y","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}},{"id":396,"name":"last","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"any"}}],"sources":[{"fileName":"libs/triangulate/earcut.ts","line":737,"character":19}]},{"id":369,"name":"intersects","kind":64,"kindString":"Function","flags":{"isExternal":true},"signatures":[{"id":370,"name":"intersects","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":371,"name":"p1","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}},{"id":372,"name":"q1","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}},{"id":373,"name":"p2","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}},{"id":374,"name":"q2","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"boolean"}}],"sources":[{"fileName":"libs/triangulate/earcut.ts","line":640,"character":19}]},{"id":375,"name":"intersectsPolygon","kind":64,"kindString":"Function","flags":{"isExternal":true},"signatures":[{"id":376,"name":"intersectsPolygon","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":377,"name":"a","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}},{"id":378,"name":"b","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"boolean"}}],"sources":[{"fileName":"libs/triangulate/earcut.ts","line":652,"character":26}]},{"id":287,"name":"isEar","kind":64,"kindString":"Function","flags":{"isExternal":true},"signatures":[{"id":288,"name":"isEar","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":289,"name":"ear","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"boolean"}}],"sources":[{"fileName":"libs/triangulate/earcut.ts","line":188,"character":14}]},{"id":290,"name":"isEarHashed","kind":64,"kindString":"Function","flags":{"isExternal":true},"signatures":[{"id":291,"name":"isEarHashed","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":292,"name":"ear","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}},{"id":293,"name":"minX","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}},{"id":294,"name":"minY","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}},{"id":295,"name":"invSize","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"boolean"}}],"sources":[{"fileName":"libs/triangulate/earcut.ts","line":215,"character":20}]},{"id":356,"name":"isValidDiagonal","kind":64,"kindString":"Function","flags":{"isExternal":true},"signatures":[{"id":357,"name":"isValidDiagonal","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":358,"name":"a","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}},{"id":359,"name":"b","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"boolean"}}],"sources":[{"fileName":"libs/triangulate/earcut.ts","line":615,"character":24}]},{"id":267,"name":"linkedList","kind":64,"kindString":"Function","flags":{"isExternal":true},"signatures":[{"id":268,"name":"linkedList","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":269,"name":"data","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}},{"id":270,"name":"start","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}},{"id":271,"name":"end","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}},{"id":272,"name":"dim","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}},{"id":273,"name":"clockwise","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"any"}}],"sources":[{"fileName":"libs/triangulate/earcut.ts","line":58,"character":19}]},{"id":379,"name":"locallyInside","kind":64,"kindString":"Function","flags":{"isExternal":true},"signatures":[{"id":380,"name":"locallyInside","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":381,"name":"a","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}},{"id":382,"name":"b","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"boolean"}}],"sources":[{"fileName":"libs/triangulate/earcut.ts","line":675,"character":22}]},{"id":383,"name":"middleInside","kind":64,"kindString":"Function","flags":{"isExternal":true},"signatures":[{"id":384,"name":"middleInside","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":385,"name":"a","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}},{"id":386,"name":"b","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"boolean"}}],"sources":[{"fileName":"libs/triangulate/earcut.ts","line":685,"character":21}]},{"id":346,"name":"pointInTriangle","kind":64,"kindString":"Function","flags":{"isExternal":true},"signatures":[{"id":347,"name":"pointInTriangle","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":348,"name":"ax","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}},{"id":349,"name":"ay","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}},{"id":350,"name":"bx","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}},{"id":351,"name":"by","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}},{"id":352,"name":"cx","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}},{"id":353,"name":"cy","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}},{"id":354,"name":"px","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}},{"id":355,"name":"py","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"boolean"}}],"sources":[{"fileName":"libs/triangulate/earcut.ts","line":605,"character":24}]},{"id":397,"name":"removeNode","kind":64,"kindString":"Function","flags":{"isExternal":true},"signatures":[{"id":398,"name":"removeNode","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":399,"name":"p","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"libs/triangulate/earcut.ts","line":759,"character":19}]},{"id":405,"name":"signedArea","kind":64,"kindString":"Function","flags":{"isExternal":true},"signatures":[{"id":406,"name":"signedArea","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":407,"name":"data","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}},{"id":408,"name":"start","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}},{"id":409,"name":"end","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}},{"id":410,"name":"dim","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"number"}}],"sources":[{"fileName":"libs/triangulate/earcut.ts","line":794,"character":19}]},{"id":333,"name":"sortLinked","kind":64,"kindString":"Function","flags":{"isExternal":true},"signatures":[{"id":334,"name":"sortLinked","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":335,"name":"list","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"any"}}],"sources":[{"fileName":"libs/triangulate/earcut.ts","line":500,"character":19}]},{"id":301,"name":"splitEarcut","kind":64,"kindString":"Function","flags":{"isExternal":true},"signatures":[{"id":302,"name":"splitEarcut","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":303,"name":"start","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}},{"id":304,"name":"triangles","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}},{"id":305,"name":"dim","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}},{"id":306,"name":"minX","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}},{"id":307,"name":"minY","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}},{"id":308,"name":"invSize","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"libs/triangulate/earcut.ts","line":301,"character":20}]},{"id":387,"name":"splitPolygon","kind":64,"kindString":"Function","flags":{"isExternal":true},"signatures":[{"id":388,"name":"splitPolygon","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":389,"name":"a","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}},{"id":390,"name":"b","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"any"}}],"sources":[{"fileName":"libs/triangulate/earcut.ts","line":712,"character":21}]},{"id":336,"name":"zOrder","kind":64,"kindString":"Function","flags":{"isExternal":true},"signatures":[{"id":337,"name":"zOrder","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":338,"name":"x","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}},{"id":339,"name":"y","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}},{"id":340,"name":"minX","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}},{"id":341,"name":"minY","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}},{"id":342,"name":"invSize","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"number"}}],"sources":[{"fileName":"libs/triangulate/earcut.ts","line":565,"character":15}]},{"id":261,"name":"Earcut","kind":2097152,"kindString":"Object literal","flags":{"isExternal":true,"isConst":true},"comment":{"tags":[{"tag":"author","text":"Mugen87 / https://github.com/Mugen87\nPort from https://github.com/mapbox/earcut (v2.1.2)\n"}]},"children":[{"id":262,"name":"triangulate","kind":64,"kindString":"Function","flags":{"isExternal":true},"signatures":[{"id":263,"name":"triangulate","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":264,"name":"data","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}},{"id":265,"name":"holeIndices","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"any"}},{"id":266,"name":"dim","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"sources":[{"fileName":"libs/triangulate/earcut.ts","line":8,"character":15}]}],"groups":[{"title":"Functions","kind":64,"children":[262]}],"sources":[{"fileName":"libs/triangulate/earcut.ts","line":6,"character":12}],"type":{"type":"intrinsic","name":"object"}}],"groups":[{"title":"Functions","kind":64,"children":[400,360,315,296,278,319,309,365,274,323,343,327,391,369,375,287,290,356,267,379,383,346,397,405,333,301,387,336]},{"title":"Object literals","kind":2097152,"children":[261]}],"sources":[{"fileName":"libs/triangulate/earcut.ts","line":1,"character":0}]},{"id":230,"name":"\"libs/triangulate/threex\"","kind":1,"kindString":"External module","flags":{"isExported":true,"isExternal":true},"originalName":"C:/Dropbox/Files/Software/GitHub/design-automation/mobius-parametric-modeller/src/libs/triangulate/threex.ts","children":[{"id":231,"name":"EPS","kind":32,"kindString":"Variable","flags":{"isExternal":true,"isConst":true},"sources":[{"fileName":"libs/triangulate/threex.ts","line":3,"character":9}],"type":{"type":"unknown","name":"0.000001"},"defaultValue":"0.000001"},{"id":250,"name":"addVectors","kind":64,"kindString":"Function","flags":{"isExported":true,"isExternal":true},"signatures":[{"id":251,"name":"addVectors","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":252,"name":"v1","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Vector3"}},{"id":253,"name":"v2","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Vector3"}},{"id":254,"name":"norm","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"boolean"},"defaultValue":"false"}],"type":{"type":"reference","name":"Vector3"}}],"sources":[{"fileName":"libs/triangulate/threex.ts","line":45,"character":26}]},{"id":255,"name":"crossVectors","kind":64,"kindString":"Function","flags":{"isExported":true,"isExternal":true},"signatures":[{"id":256,"name":"crossVectors","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":257,"name":"v1","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Vector3"}},{"id":258,"name":"v2","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Vector3"}},{"id":259,"name":"norm","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"boolean"},"defaultValue":"false"}],"type":{"type":"reference","name":"Vector3"}}],"sources":[{"fileName":"libs/triangulate/threex.ts","line":52,"character":28}]},{"id":242,"name":"matrixInv","kind":64,"kindString":"Function","flags":{"isExported":true,"isExternal":true},"signatures":[{"id":243,"name":"matrixInv","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":244,"name":"m","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Matrix4"}}],"type":{"type":"reference","name":"Matrix4"}}],"sources":[{"fileName":"libs/triangulate/threex.ts","line":31,"character":25}]},{"id":232,"name":"multVectorMatrix","kind":64,"kindString":"Function","flags":{"isExported":true,"isExternal":true},"signatures":[{"id":233,"name":"multVectorMatrix","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Utility functions for threejs."},"parameters":[{"id":234,"name":"v","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Vector3"}},{"id":235,"name":"m","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Matrix4"}}],"type":{"type":"reference","name":"Vector3"}}],"sources":[{"fileName":"libs/triangulate/threex.ts","line":10,"character":32}]},{"id":245,"name":"subVectors","kind":64,"kindString":"Function","flags":{"isExported":true,"isExternal":true},"signatures":[{"id":246,"name":"subVectors","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":247,"name":"v1","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Vector3"}},{"id":248,"name":"v2","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Vector3"}},{"id":249,"name":"norm","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"boolean"},"defaultValue":"false"}],"type":{"type":"reference","name":"Vector3"}}],"sources":[{"fileName":"libs/triangulate/threex.ts","line":38,"character":26}]},{"id":236,"name":"xformMatrix","kind":64,"kindString":"Function","flags":{"isExported":true,"isExternal":true},"signatures":[{"id":237,"name":"xformMatrix","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":238,"name":"o","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Vector3"}},{"id":239,"name":"x","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Vector3"}},{"id":240,"name":"y","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Vector3"}},{"id":241,"name":"z","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Vector3"}}],"type":{"type":"reference","name":"Matrix4"}}],"sources":[{"fileName":"libs/triangulate/threex.ts","line":16,"character":27}]}],"groups":[{"title":"Variables","kind":32,"children":[231]},{"title":"Functions","kind":64,"children":[250,255,242,232,245,236]}],"sources":[{"fileName":"libs/triangulate/threex.ts","line":1,"character":0}]},{"id":447,"name":"\"libs/triangulate/triangulate\"","kind":1,"kindString":"External module","flags":{"isExported":true,"isExternal":true},"originalName":"C:/Dropbox/Files/Software/GitHub/design-automation/mobius-parametric-modeller/src/libs/triangulate/triangulate.ts","children":[{"id":448,"name":"_makeVertices2D","kind":64,"kindString":"Function","flags":{"isExternal":true},"signatures":[{"id":449,"name":"_makeVertices2D","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Function to transform a set of vertices in 3d space onto the xy plane.\nThis function assumes that the vertices are co-planar.\nReturns a set of three Vectors that represent points on the xy plane."},"parameters":[{"id":450,"name":"points","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"array","elementType":{"type":"reference","name":"Vector3"}}}],"type":{"type":"array","elementType":{"type":"reference","name":"Vector3"}}}],"sources":[{"fileName":"libs/triangulate/triangulate.ts","line":15,"character":24}]},{"id":451,"name":"triangulate","kind":64,"kindString":"Function","flags":{"isExported":true,"isExternal":true},"signatures":[{"id":452,"name":"triangulate","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Triangulates a polygon"},"parameters":[{"id":453,"name":"coords","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"\n"},"type":{"type":"array","elementType":{"type":"reference","name":"Txyz","id":216}}}],"type":{"type":"array","elementType":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}}}],"sources":[{"fileName":"libs/triangulate/triangulate.ts","line":44,"character":27}]}],"groups":[{"title":"Functions","kind":64,"children":[448,451]}],"sources":[{"fileName":"libs/triangulate/triangulate.ts","line":1,"character":0}]}],"groups":[{"title":"External modules","kind":1,"children":[1094,1982,1975,1958,1909,1353,1994,1930,1943,1295,2010,1711,1828,1461,1638,1989,1759,1388,1745,1784,1740,1,967,837,898,876,1004,454,596,988,1046,1038,67,1732,534,1736,1073,1581,1080,747,411,260,230,447]}]};

/***/ }),

/***/ "./src/environments/environment.ts":
/*!*****************************************!*\
  !*** ./src/environments/environment.ts ***!
  \*****************************************/
/*! exports provided: environment */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "environment", function() { return environment; });
// The file contents for the current environment will overwrite these during build.
// The build system defaults to the dev environment which uses `environment.ts`, but if you do
// `ng build --env=prod` then `environment.prod.ts` will be used instead.
// The list of which env maps to which file can be found in `.angular-cli.json`.
var environment = {
    production: false
};


/***/ }),

/***/ "./src/libs/filesys/download.ts":
/*!**************************************!*\
  !*** ./src/libs/filesys/download.ts ***!
  \**************************************/
/*! exports provided: download */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "download", function() { return download; });
/**
 * Download a file.
 * @param data
 * @param filename
 */
function download(data, filename) {
    var data_type = 'text/plain;charset=utf-8';
    var data_bom = decodeURIComponent('%ef%bb%bf');
    if (window.navigator.msSaveBlob) {
        var blob = new Blob([data_bom + data], { type: data_type });
        window.navigator.msSaveBlob(blob, data);
    }
    else {
        var link = document.createElement('a');
        var content = data_bom + data;
        var uriScheme = ['data:', data_type, ','].join('');
        link.href = uriScheme + content;
        link.download = filename;
        // FF requires the link in actual DOM
        document.body.appendChild(link);
        link.click();
        document.body.removeChild(link);
    }
    return true;
}


/***/ }),

/***/ "./src/libs/geo-info/GIAttribMap.ts":
/*!******************************************!*\
  !*** ./src/libs/geo-info/GIAttribMap.ts ***!
  \******************************************/
/*! exports provided: GIAttribMap */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GIAttribMap", function() { return GIAttribMap; });
/* harmony import */ var _common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./common */ "./src/libs/geo-info/common.ts");

/**
 * Geo-info attribute class for one attribute.
 * The attributs stores key-value pairs.
 * Multiple keys point to the same value.
 * So for example, [[1,3], "a"],[[0,4], "b"] can be converted into sequential arrays.
 * The values would be ["a", "b"]
 * The keys would be [1,0,,0,1] (Note the undefined value in the middle.)
 *
 */
var GIAttribMap = /** @class */ (function () {
    /**
     * Creates an attribute.
     * @param attrib_data
     */
    function GIAttribMap(name, data_type, data_size) {
        this._name = name;
        this._data_type = data_type;
        this._data_size = data_size;
        // the maps
        this._num_vals = -1;
        this._map_val_k_to_val_i = new Map();
        this._map_val_i_to_val = new Map();
        this._map_val_i_to_ents_i = new Map();
        this._map_ent_i_to_val_i = new Map();
    }
    /**
     * Returns the JSON data for this attribute.
     */
    GIAttribMap.prototype.getData = function () {
        var _this = this;
        var _data = [];
        this._map_val_i_to_ents_i.forEach(function (ents_i, val_i) {
            var val = _this._map_val_i_to_val.get(val_i);
            _data.push([ents_i, val]);
        });
        return {
            name: this._name,
            data_type: this._data_type,
            data_size: this._data_size,
            data: _data
        };
    };
    /**
     * Adds ent_ities to this attribute from JSON data.
     * The existing attribute data in the model is not deleted.
     * @param attrib_data The JSON data for the new ent_ities.
     */
    GIAttribMap.prototype.addData = function (attrib_data, ent_i_offset) {
        var _this = this;
        if (this._name !== attrib_data.name ||
            this._data_type !== attrib_data.data_type ||
            this._data_size !== attrib_data.data_size) {
            throw Error('Attributes do not match.');
        }
        // increment all the keys by the number of ent_ities in the existing data
        attrib_data.data.forEach(function (keys_value) {
            var new_keys = keys_value[0].map(function (key) { return key + ent_i_offset; });
            var value = keys_value[1];
            _this.setEntVal(new_keys, value);
        });
    };
    /**
     * Returns the name of this attribute.
     */
    GIAttribMap.prototype.getName = function () {
        return this._name;
    };
    /**
     * Returns the data type of this attribute.
     */
    GIAttribMap.prototype.getDataType = function () {
        return this._data_type;
    };
    /**
     * Returns the data size of this attribute.
     */
    GIAttribMap.prototype.getDataSize = function () {
        return this._data_size;
    };
    /**
     * Returns true if this value exists in the attributes.
     */
    GIAttribMap.prototype.hasVal = function (val) {
        return this._map_val_k_to_val_i.has(this._valToValkey(val));
    };
    /**
     * Returns true if thereis an entity that has a value (i.e. the value is not undefined).
     */
    GIAttribMap.prototype.hasEnt = function (ent_i) {
        return this._map_ent_i_to_val_i.has(ent_i);
    };
    /**
     * Sets the value for a given entity or ent_ities.
     * @param ent_i
     * @param val
     */
    GIAttribMap.prototype.setEntVal = function (ent_i, val) {
        var _this = this;
        var val_k = this._valToValkey(val);
        var val_i;
        if (this._map_val_k_to_val_i.has(val_k)) {
            val_i = this._map_val_k_to_val_i.get(val_k);
        }
        else {
            this._num_vals += 1;
            val_i = this._num_vals;
            this._map_val_i_to_val.set(val_i, val);
            this._map_val_k_to_val_i.set(val_k, val_i);
            this._map_val_i_to_ents_i.set(val_i, []);
        }
        var ents_i = (Array.isArray(ent_i)) ? ent_i : [ent_i];
        ents_i.forEach(function (e) { return _this._map_ent_i_to_val_i.set(e, val_i); });
        var ents_i_union = Array.from(new Set(this._map_val_i_to_ents_i.get(val_i).concat(ents_i)));
        this._map_val_i_to_ents_i.set(val_i, ents_i_union);
    };
    /**
     * Gets the value for a given entity.
     * Returns undefined if the entity does not exist
     * @param ent_i
     */
    GIAttribMap.prototype.getEntVal = function (ent_i) {
        var val_i = this._map_ent_i_to_val_i.get(ent_i);
        if (val_i === undefined) {
            return undefined;
        }
        return this._map_val_i_to_val.get(val_i);
    };
    /**
     * Gets all the keys that have a given value
     * If the value does not exist an empty array is returned
     * @param val
     */
    GIAttribMap.prototype.getEntsFromVal = function (val) {
        var val_i = this._map_val_k_to_val_i.get(this._valToValkey(val));
        if (val_i === undefined) {
            return [];
        }
        return this._map_val_i_to_ents_i.get(val_i);
    };
    /**
     * Returns an array of entity indicies which do not have a value (undefined)
     */
    GIAttribMap.prototype.getEntsWithoutVal = function (ents_i) {
        var _this = this;
        return ents_i.filter(function (ent_i) { return !_this._map_ent_i_to_val_i.has(ent_i); });
    };
    /**
     * Returns an array of entity indicies which have a value (not undefined)
     */
    GIAttribMap.prototype.getEntsWithVal = function (ents_i) {
        var _this = this;
        return ents_i.filter(function (ent_i) { return _this._map_ent_i_to_val_i.has(ent_i); });
    };
    /**
     * Gets an array of values, given an array of entity indicies
     */
    GIAttribMap.prototype.getEntsVals = function (ents_i) {
        var _this = this;
        var vals = [];
        ents_i.forEach(function (ent_i) {
            var val_i = _this._map_ent_i_to_val_i.get(ent_i);
            if (val_i === undefined) {
                vals.push(null);
            }
            else {
                var val = _this._map_val_i_to_val.get(val_i);
                vals.push(val);
            }
        });
        return vals;
    };
    /**
     * Executes a query
     * @param ents_i
     * @param val_arr_index The index of the value in the array
     * @param operator The relational operator, ==, !=, <=, >=, etc
     * @param val_k The string version of the value.
     */
    GIAttribMap.prototype.queryVal = function (ents_i, val_arr_index, operator, val_k) {
        // check the val_arr_index
        var indexed = (val_arr_index !== null && val_arr_index !== undefined);
        if (indexed) {
            if (!Number.isInteger(val_arr_index)) {
                throw new Error('Query index "' + val_arr_index + '" cannot be converted to an integer: ' + val_arr_index);
            }
            if (!(this._data_size > 0)) {
                throw new Error('Query attribute ' + this._name + ' is not a list.');
            }
        }
        // search
        var re_spaces = /\s+/g;
        if (val_arr_index === null || val_arr_index === undefined) {
            // in these cases we just leave value_str as a string, but we clean it up
            val_k = val_k.replace(re_spaces, '');
            // in this case we can only use == or !=
            if (operator !== _common__WEBPACK_IMPORTED_MODULE_0__["EQueryOperatorTypes"].IS_EQUAL && operator !== _common__WEBPACK_IMPORTED_MODULE_0__["EQueryOperatorTypes"].IS_NOT_EQUAL) {
                {
                    throw new Error('Query operator "' + operator + '" and query "' + val_k + '" value are incompatible.');
                }
            }
            if (val_k === 'null' && operator === _common__WEBPACK_IMPORTED_MODULE_0__["EQueryOperatorTypes"].IS_EQUAL) {
                return this.getEntsWithoutVal(ents_i);
            }
            else if (val_k === 'null' && operator === _common__WEBPACK_IMPORTED_MODULE_0__["EQueryOperatorTypes"].IS_NOT_EQUAL) {
                return this.getEntsWithVal(ents_i);
            }
            else if (operator === _common__WEBPACK_IMPORTED_MODULE_0__["EQueryOperatorTypes"].IS_EQUAL) {
                var found_keys_1 = this.getEntsFromVal(val_k);
                if (found_keys_1 === undefined) {
                    return [];
                }
                return ents_i.filter(function (ent_i) { return found_keys_1.indexOf(ent_i) !== -1; });
            }
            else if (operator === _common__WEBPACK_IMPORTED_MODULE_0__["EQueryOperatorTypes"].IS_NOT_EQUAL) {
                var found_keys_2 = this.getEntsFromVal(val_k);
                if (found_keys_2 === undefined) {
                    return [];
                }
                return ents_i.filter(function (ent_i) { return found_keys_2.indexOf(ent_i) === -1; });
            }
        }
        else { // value_index is defined, so this query is indexing a value in an array
            if (!(this._data_size > 0)) {
                {
                    throw new Error('Query with [index] can only be used on attributes whose data type is a list.');
                }
            }
            if (this._data_type === _common__WEBPACK_IMPORTED_MODULE_0__["EAttribDataTypeStrs"].FLOAT) {
                // a number from an array of numbers
                var val_num = void 0;
                // first deal with null case
                if (val_k === 'null') { // TODO change to constant
                    if (operator !== _common__WEBPACK_IMPORTED_MODULE_0__["EQueryOperatorTypes"].IS_EQUAL && operator !== _common__WEBPACK_IMPORTED_MODULE_0__["EQueryOperatorTypes"].IS_NOT_EQUAL) {
                        {
                            throw new Error('Query operator ' + operator + ' and query "null" value are incompatible.');
                        }
                    }
                    val_num = null;
                }
                else { // value_str must be a number
                    val_num = Number.parseFloat(val_k);
                    if (isNaN(val_num)) {
                        throw new Error('Query value "' + val_k + '" cannot be converted to a number: ' + val_k);
                    }
                }
                // do the search
                var found_keys = [];
                for (var _i = 0, ents_i_1 = ents_i; _i < ents_i_1.length; _i++) {
                    var ent_i = ents_i_1[_i];
                    var search_value_arr = this.getEntVal(ent_i);
                    if ((search_value_arr !== undefined) &&
                        this._compare(operator, search_value_arr[val_arr_index], val_num)) {
                        found_keys.push(ent_i);
                    }
                }
                return found_keys;
            }
            else if (this._data_type === _common__WEBPACK_IMPORTED_MODULE_0__["EAttribDataTypeStrs"].STRING) {
                // a string from a list of strings
                if (operator !== _common__WEBPACK_IMPORTED_MODULE_0__["EQueryOperatorTypes"].IS_EQUAL && operator !== _common__WEBPACK_IMPORTED_MODULE_0__["EQueryOperatorTypes"].IS_NOT_EQUAL) {
                    {
                        throw new Error('Query operator and query value are incompatible.');
                    }
                }
                // clean up the string
                var value_str_clean = val_k.replace(re_spaces, '');
                // do the search
                var found_keys = [];
                for (var _a = 0, ents_i_2 = ents_i; _a < ents_i_2.length; _a++) {
                    var ent_i = ents_i_2[_a];
                    var search_value_arr = this.getEntVal(ent_i);
                    if (this._compare(operator, value_str_clean, search_value_arr[val_arr_index])) {
                        found_keys.push(ent_i);
                    }
                }
            }
        }
    };
    //  ===============================================================================================================
    //  Private methods
    //  ===============================================================================================================
    /**
     * Convert a value into a map key
     */
    GIAttribMap.prototype._valToValkey = function (val) {
        if (this._data_size === 1 && this._data_type === _common__WEBPACK_IMPORTED_MODULE_0__["EAttribDataTypeStrs"].STRING) {
            if (typeof val === 'string') {
                return val;
            }
            else {
                return String(val);
            }
        }
        if (this._data_size === 1 && this._data_type === _common__WEBPACK_IMPORTED_MODULE_0__["EAttribDataTypeStrs"].FLOAT) {
            if (typeof val === 'string') {
                return parseFloat(val);
            }
            else {
                return val;
            }
        }
        return JSON.stringify(val);
    };
    /**
     * Compare two values
     * @param operator
     * @param val1
     * @param val2
     */
    GIAttribMap.prototype._compare = function (operator, val1, val2) {
        if (val1 === undefined) {
            val1 = null;
        }
        if (val2 === undefined) {
            val2 = null;
        }
        switch (operator) {
            // ==
            case _common__WEBPACK_IMPORTED_MODULE_0__["EQueryOperatorTypes"].IS_EQUAL:
                return val1 === val2;
            // !=
            case _common__WEBPACK_IMPORTED_MODULE_0__["EQueryOperatorTypes"].IS_NOT_EQUAL:
                return val1 !== val2;
            // >
            case _common__WEBPACK_IMPORTED_MODULE_0__["EQueryOperatorTypes"].IS_GREATER:
                return val1 > val2;
            // >=
            case _common__WEBPACK_IMPORTED_MODULE_0__["EQueryOperatorTypes"].IS_GREATER_OR_EQUAL:
                return val1 >= val2;
            // <
            case _common__WEBPACK_IMPORTED_MODULE_0__["EQueryOperatorTypes"].IS_LESS:
                return val1 < val2;
            // <=
            case _common__WEBPACK_IMPORTED_MODULE_0__["EQueryOperatorTypes"].IS_LESS_OR_EQUAL:
                return val1 <= val2;
            default:
                throw new Error('Query operator not found: ' + operator);
        }
    };
    return GIAttribMap;
}());



/***/ }),

/***/ "./src/libs/geo-info/GIAttribs.ts":
/*!****************************************!*\
  !*** ./src/libs/geo-info/GIAttribs.ts ***!
  \****************************************/
/*! exports provided: GIAttribs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GIAttribs", function() { return GIAttribs; });
/* harmony import */ var _GIAttribsAdd__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./GIAttribsAdd */ "./src/libs/geo-info/GIAttribsAdd.ts");
/* harmony import */ var _GIAttribsThreejs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./GIAttribsThreejs */ "./src/libs/geo-info/GIAttribsThreejs.ts");
/* harmony import */ var _GIAttribsQuery__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./GIAttribsQuery */ "./src/libs/geo-info/GIAttribsQuery.ts");
/* harmony import */ var _common__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./common */ "./src/libs/geo-info/common.ts");




/**
 * Class for attributes.
 */
var GIAttribs = /** @class */ (function () {
    /**
      * Creates an object to store the attribute data.
      * @param model The JSON data
      */
    function GIAttribs(model) {
        // maps, the key is the name, the value is the attrib map clas
        this._attribs_maps = {
            ps: new Map(),
            _v: new Map(),
            _e: new Map(),
            _w: new Map(),
            _f: new Map(),
            pt: new Map(),
            pl: new Map(),
            pg: new Map(),
            co: new Map()
        };
        this._model = model;
        this.add = new _GIAttribsAdd__WEBPACK_IMPORTED_MODULE_0__["GIAttribsAdd"](model, this._attribs_maps);
        this.query = new _GIAttribsQuery__WEBPACK_IMPORTED_MODULE_2__["GIAttribsQuery"](model, this._attribs_maps);
        this.threejs = new _GIAttribsThreejs__WEBPACK_IMPORTED_MODULE_1__["GIAttribsThreejs"](model, this._attribs_maps);
        this.add.addAttrib(_common__WEBPACK_IMPORTED_MODULE_3__["EEntType"].POSI, _common__WEBPACK_IMPORTED_MODULE_3__["EAttribNames"].COORDS, _common__WEBPACK_IMPORTED_MODULE_3__["EAttribDataTypeStrs"].FLOAT, 3);
    }
    /**
     * Returns the JSON data for this model.
     */
    GIAttribs.prototype.getData = function () {
        return {
            positions: Array.from(this._attribs_maps.ps.values()).map(function (attrib) { return attrib.getData(); }),
            vertices: Array.from(this._attribs_maps._v.values()).map(function (attrib) { return attrib.getData(); }),
            edges: Array.from(this._attribs_maps._e.values()).map(function (attrib) { return attrib.getData(); }),
            wires: Array.from(this._attribs_maps._w.values()).map(function (attrib) { return attrib.getData(); }),
            faces: Array.from(this._attribs_maps._f.values()).map(function (attrib) { return attrib.getData(); }),
            points: Array.from(this._attribs_maps.pt.values()).map(function (attrib) { return attrib.getData(); }),
            polylines: Array.from(this._attribs_maps.pl.values()).map(function (attrib) { return attrib.getData(); }),
            polygons: Array.from(this._attribs_maps.pg.values()).map(function (attrib) { return attrib.getData(); }),
            collections: Array.from(this._attribs_maps.co.values()).map(function (attrib) { return attrib.getData(); })
        };
    };
    return GIAttribs;
}());



/***/ }),

/***/ "./src/libs/geo-info/GIAttribsAdd.ts":
/*!*******************************************!*\
  !*** ./src/libs/geo-info/GIAttribsAdd.ts ***!
  \*******************************************/
/*! exports provided: GIAttribsAdd */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GIAttribsAdd", function() { return GIAttribsAdd; });
/* harmony import */ var _common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./common */ "./src/libs/geo-info/common.ts");
/* harmony import */ var _GIAttribMap__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./GIAttribMap */ "./src/libs/geo-info/GIAttribMap.ts");
/* harmony import */ var _libs_geom_vectors__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @libs/geom/vectors */ "./src/libs/geom/vectors.ts");



/**
 * Class for attributes.
 */
var GIAttribsAdd = /** @class */ (function () {
    /**
      * Creates an object to store the attribute data.
      * @param model The JSON data
      */
    function GIAttribsAdd(model, attribs_maps) {
        this._model = model;
        this._attribs_maps = attribs_maps;
    }
    /**
     * Adds data to this model from JSON data.
     * The existing data in the model is not deleted.
     * @param model_data The JSON data for the model.
     */
    GIAttribsAdd.prototype.addData = function (model_data) {
        // helper function to ddd attributes to model
        function _addAttribData(exist_attribs_maps, new_attribs_data, num_existing_entities) {
            // loop through all attributes, adding data
            new_attribs_data.forEach(function (new_attrib_data) {
                if (!exist_attribs_maps.has(new_attrib_data.name)) {
                    exist_attribs_maps.set(new_attrib_data.name, new _GIAttribMap__WEBPACK_IMPORTED_MODULE_1__["GIAttribMap"](new_attrib_data.name, new_attrib_data.data_type, new_attrib_data.data_size));
                }
                exist_attribs_maps.get(new_attrib_data.name).addData(new_attrib_data, num_existing_entities);
            });
        }
        // data for all the new atttributes
        var attribs_data = model_data.attributes;
        var geom_data = model_data.geometry;
        // add the attribute data
        // exist_attribs_maps, new_attribs_data, num_existing_entities, num_new_entities
        if (attribs_data.positions !== undefined) {
            _addAttribData(this._attribs_maps.ps, attribs_data.positions, this._model.geom.query.nextEntIndex(_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].POSI));
        }
        if (attribs_data.vertices !== undefined) {
            _addAttribData(this._attribs_maps._v, attribs_data.vertices, this._model.geom.query.nextEntIndex(_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].VERT));
        }
        if (attribs_data.edges !== undefined) {
            _addAttribData(this._attribs_maps._e, attribs_data.edges, this._model.geom.query.nextEntIndex(_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].EDGE));
        }
        if (attribs_data.wires !== undefined) {
            _addAttribData(this._attribs_maps._w, attribs_data.wires, this._model.geom.query.nextEntIndex(_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].WIRE));
        }
        if (attribs_data.faces !== undefined) {
            _addAttribData(this._attribs_maps._f, attribs_data.faces, this._model.geom.query.nextEntIndex(_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].FACE));
        }
        if (attribs_data.points !== undefined) {
            _addAttribData(this._attribs_maps.pt, attribs_data.points, this._model.geom.query.nextEntIndex(_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].POINT));
        }
        if (attribs_data.polylines !== undefined) {
            _addAttribData(this._attribs_maps.pl, attribs_data.polylines, this._model.geom.query.nextEntIndex(_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].PLINE));
        }
        if (attribs_data.polygons !== undefined) {
            _addAttribData(this._attribs_maps.pg, attribs_data.polygons, this._model.geom.query.nextEntIndex(_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].PGON));
        }
        if (attribs_data.collections !== undefined) {
            _addAttribData(this._attribs_maps.co, attribs_data.collections, this._model.geom.query.nextEntIndex(_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].COLL));
        }
    };
    /**
     * Creates a new attribte.
     * @param ent_type The level at which to create the attribute.
     * @param name The name of the attribute.
     * @param data_type The data type of the attribute.
     * @param data_size The data size of the attribute. For example, an XYZ vector has size=3.
     */
    GIAttribsAdd.prototype.addAttrib = function (ent_type, name, data_type, data_size) {
        var attribs_maps_key = _common__WEBPACK_IMPORTED_MODULE_0__["EEntTypeStr"][ent_type];
        var attribs = this._attribs_maps[attribs_maps_key];
        if (!attribs.has(name)) {
            var attrib = new _GIAttribMap__WEBPACK_IMPORTED_MODULE_1__["GIAttribMap"](name, data_type, data_size);
            attribs.set(name, attrib);
        }
        return attribs[name];
    };
    /**
     * Set an entity attrib value
     * @param id
     * @param name
     * @param value
     */
    GIAttribsAdd.prototype.setAttribValue = function (ent_type, index, name, value) {
        var attribs_maps_key = _common__WEBPACK_IMPORTED_MODULE_0__["EEntTypeStr"][ent_type];
        var attribs = this._attribs_maps[attribs_maps_key];
        if (attribs.get(name) === undefined) {
            var _a = this._checkDataTypeSize(value), data_type = _a[0], data_size = _a[1];
            this.addAttrib(ent_type, name, data_type, data_size);
        }
        attribs.get(name).setEntVal(index, value);
    };
    /**
     * Set the xyz position by index
     * @param index
     * @param value
     */
    GIAttribsAdd.prototype.setPosiCoords = function (index, xyz) {
        this._attribs_maps.ps.get(_common__WEBPACK_IMPORTED_MODULE_0__["EAttribNames"].COORDS).setEntVal(index, xyz);
    };
    /**
     * Move the xyz position by index
     * @param index
     * @param value
     */
    GIAttribsAdd.prototype.movePosiCoords = function (index, xyz) {
        var old_xyz = this._attribs_maps.ps.get(_common__WEBPACK_IMPORTED_MODULE_0__["EAttribNames"].COORDS).getEntVal(index);
        var new_xyz = Object(_libs_geom_vectors__WEBPACK_IMPORTED_MODULE_2__["vecAdd"])(old_xyz, xyz);
        this._attribs_maps.ps.get(_common__WEBPACK_IMPORTED_MODULE_0__["EAttribNames"].COORDS).setEntVal(index, new_xyz);
    };
    /**
     * Copy attribs from one entity to another entity
     * @param ent_type
     * @param name
     */
    GIAttribsAdd.prototype.copyAttribs = function (ent_type, from_ent_i, to_ent_i) {
        // get the attrib names
        var attribs_maps_key = _common__WEBPACK_IMPORTED_MODULE_0__["EEntTypeStr"][ent_type];
        var attribs = this._attribs_maps[attribs_maps_key];
        var attrib_names = Array.from(attribs.keys());
        // copy each attrib
        for (var _i = 0, attrib_names_1 = attrib_names; _i < attrib_names_1.length; _i++) {
            var attrib_name = attrib_names_1[_i];
            var attrib = attribs.get(name);
            var attrib_value = attrib.getEntVal(from_ent_i);
            attrib.setEntVal(to_ent_i, attrib_value);
        }
    };
    // ============================================================================
    // Private methods
    // ============================================================================
    /**
     * Utility method to check the data type and size of a value
     * @param value
     */
    GIAttribsAdd.prototype._checkDataTypeSize = function (value) {
        var data_size;
        var first_value = null;
        if (Array.isArray(value)) {
            var values = value;
            if (values.length === 1) {
                throw new Error('An array data type must have more than one value.');
            }
            first_value = values[0];
            data_size = values.length;
        }
        else {
            first_value = value;
            data_size = 1;
        }
        var data_type = null;
        if (typeof first_value === 'number') {
            data_type = _common__WEBPACK_IMPORTED_MODULE_0__["EAttribDataTypeStrs"].FLOAT;
        }
        else if (typeof first_value === 'string') {
            data_type = _common__WEBPACK_IMPORTED_MODULE_0__["EAttribDataTypeStrs"].STRING;
        }
        else {
            throw new Error('Data type for new attribute not recognised.');
        }
        return [data_type, data_size];
    };
    return GIAttribsAdd;
}());



/***/ }),

/***/ "./src/libs/geo-info/GIAttribsQuery.ts":
/*!*********************************************!*\
  !*** ./src/libs/geo-info/GIAttribsQuery.ts ***!
  \*********************************************/
/*! exports provided: GIAttribsQuery */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GIAttribsQuery", function() { return GIAttribsQuery; });
/* harmony import */ var _common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./common */ "./src/libs/geo-info/common.ts");

/**
 * Class for attributes.
 */
var GIAttribsQuery = /** @class */ (function () {
    /**
      * Creates an object to store the attribute data.
      * @param model The JSON data
      */
    function GIAttribsQuery(model, attribs_maps) {
        this._model = model;
        this._attribs_maps = attribs_maps;
    }
    /**
     * Get an entity attrib value
     * @param ent_type
     * @param name
     */
    GIAttribsQuery.prototype.getAttribValue = function (ent_type, name, index) {
        var attribs_maps_key = _common__WEBPACK_IMPORTED_MODULE_0__["EEntTypeStr"][ent_type];
        var attribs = this._attribs_maps[attribs_maps_key];
        if (attribs.get(name) === undefined) {
            throw new Error('Attribute does not exist.');
        }
        return attribs.get(name).getEntVal(index);
    };
    /**
     * Get attrib values for multiple entities
     * @param ent_type
     * @param name
     */
    GIAttribsQuery.prototype.getAttribValues = function (ent_type, name, ents_i) {
        var attribs_maps_key = _common__WEBPACK_IMPORTED_MODULE_0__["EEntTypeStr"][ent_type];
        var attribs = this._attribs_maps[attribs_maps_key];
        if (attribs.get(name) === undefined) {
            throw new Error('Attribute does not exist.');
        }
        return attribs.get(name).getEntsVals(ents_i);
    };
    /**
     * Check if attribute exists
     * @param ent_type
     * @param name
     */
    GIAttribsQuery.prototype.hasAttrib = function (ent_type, name) {
        var attribs_maps_key = _common__WEBPACK_IMPORTED_MODULE_0__["EEntTypeStr"][ent_type];
        var attribs = this._attribs_maps[attribs_maps_key];
        return attribs.has(name);
    };
    /**
     * Get all the attribute names for an entity type
     * @param ent_type
     */
    GIAttribsQuery.prototype.getAttribNames = function (ent_type) {
        var attribs_maps_key = _common__WEBPACK_IMPORTED_MODULE_0__["EEntTypeStr"][ent_type];
        var attribs = this._attribs_maps[attribs_maps_key];
        return Array.from(attribs.keys());
    };
    /**
     * Get attrib
     * @param ent_type
     * @param name
     */
    GIAttribsQuery.prototype.getAttrib = function (ent_type, name) {
        var attribs_maps_key = _common__WEBPACK_IMPORTED_MODULE_0__["EEntTypeStr"][ent_type];
        var attribs = this._attribs_maps[attribs_maps_key];
        return attribs.get(name);
    };
    /**
     * Query the model using a query strings.
     * Returns a list of entities in the model.
     * @param ent_type The type of the entities being search for
     * @param query_str The query string, e.g. '#@name == value'
     * @param indicies The indicies of entites in the model. These are assumed to be of type ent_type.
     */
    GIAttribsQuery.prototype.queryAttribs = function (ent_type, query_str, indicies) {
        // get the map that contains all the ettributes for the ent_type
        var attribs_maps_key = _common__WEBPACK_IMPORTED_MODULE_0__["EEntTypeStr"][ent_type];
        var attribs = this._attribs_maps[attribs_maps_key];
        // parse the query
        var queries = parseQuery(query_str);
        if (!queries) {
            return [];
        }
        // do the query, one by one
        // [[query1 && query2] || [query3 && query4]]
        var union_query_results = [];
        for (var _i = 0, queries_1 = queries; _i < queries_1.length; _i++) {
            var and_queries = queries_1[_i];
            // get the ents_i to start the '&&' query
            var query_ents_i = null;
            if (indicies !== null && indicies !== undefined) {
                query_ents_i = indicies;
            }
            else {
                query_ents_i = this._model.geom.query.getEnts(ent_type);
            }
            // do the '&&' queries
            for (var _a = 0, and_queries_1 = and_queries; _a < and_queries_1.length; _a++) {
                var and_query = and_queries_1[_a];
                if (attribs && attribs.has(and_query.attrib_name)) {
                    var attrib = attribs.get(and_query.attrib_name);
                    query_ents_i = attrib.queryVal(query_ents_i, and_query.attrib_index, and_query.operator_type, and_query.attrib_value_str);
                }
            }
            // combine the results of the '&&' queries
            if (query_ents_i !== null) {
                union_query_results = Array.from(new Set(union_query_results.concat(query_ents_i)));
            }
        }
        // return the result
        return union_query_results;
    };
    /**
     * Query the model using a sort strings.
     * Returns a list of entities in the model.
     * @param ent_type The type of the entities being search for
     * @param sort_str The sort string, e.g. '#@name && #@name2[3]'
     * @param indicies The indicies of entites in the model. These are assumed to be of type ent_type.
     */
    GIAttribsQuery.prototype.sortByAttribs = function (ent_type, indicies, sort_str, method) {
        // get the map that contains all the ettributes for the ent_type
        var attribs_maps_key = _common__WEBPACK_IMPORTED_MODULE_0__["EEntTypeStr"][ent_type];
        var attribs = this._attribs_maps[attribs_maps_key];
        if (!attribs) {
            throw new Error('Bad sort: Attribute does not exist.');
        }
        // parse the query
        var sorts = parseSort(sort_str);
        if (!sorts) {
            return [];
        }
        // create the sort copmapre function
        function _sortCompare(ent1_i, ent2_i) {
            // do the '&&' sorts
            for (var _i = 0, sorts_1 = sorts; _i < sorts_1.length; _i++) {
                var sort = sorts_1[_i];
                if (!attribs.has(sort.attrib_name)) {
                    throw new Error('Bad sort: Attribute does not exist.');
                }
                var attrib = attribs.get(sort.attrib_name);
                var data_size = attrib.getDataSize();
                if (sort.attrib_index !== undefined && data_size === 1) {
                    throw new Error('Bad sort: Attribute with index must have a size greater than 1.');
                }
                var val1 = attrib.getEntVal(ent1_i);
                var val2 = attrib.getEntVal(ent2_i);
                if (sort.attrib_index !== undefined && sort.attrib_index !== null) {
                    if (val1 !== undefined && val1 !== null) {
                        val1 = val1[sort.attrib_index];
                    }
                    if (val2 !== undefined && val2 !== null) {
                        val2 = val2[sort.attrib_index];
                    }
                }
                if (method === _common__WEBPACK_IMPORTED_MODULE_0__["ESort"].DESCENDING) {
                    if (val1 < val2) {
                        return -1;
                    }
                    if (val1 > val2) {
                        return 1;
                    }
                }
                else {
                    if (val1 < val2) {
                        return 1;
                    }
                    if (val1 > val2) {
                        return -1;
                    }
                }
            }
            return 0;
        }
        // do the sort
        indicies.sort(_sortCompare);
        return indicies;
    };
    // ============================================================================
    // Shortcuts for getting xyz
    // ============================================================================
    /**
     * Shortcut for getting a coordinate from a numeric position index (i.e. this is not an ID)
     * @param posi_i
     */
    GIAttribsQuery.prototype.getPosiCoords = function (posi_i) {
        var result = this._attribs_maps.ps.get(_common__WEBPACK_IMPORTED_MODULE_0__["EAttribNames"].COORDS).getEntVal(posi_i);
        return result;
    };
    /**
     * Shortcut for getting all coordinates
     * @param posi_i
     */
    GIAttribsQuery.prototype.getAllPosisCoords = function () {
        var posis_i = this._model.geom.query.getEnts(_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].POSI);
        var coords_map = this._attribs_maps.ps.get(_common__WEBPACK_IMPORTED_MODULE_0__["EAttribNames"].COORDS);
        return coords_map.getEntsVals(posis_i);
    };
    /**
     * Shortcut for getting a coordinate from a numeric vertex index (i.e. this is not an ID)
     * @param vert_i
     */
    GIAttribsQuery.prototype.getVertCoords = function (vert_i) {
        var posi_i = this._model.geom.query.navVertToPosi(vert_i);
        return this._attribs_maps.ps.get(_common__WEBPACK_IMPORTED_MODULE_0__["EAttribNames"].COORDS).getEntVal(posi_i);
    };
    /**
     * Shortcut for getting coords for all verts
     * @param attrib_name
     */
    GIAttribsQuery.prototype.getAllVertsCoords = function (attrib_name) {
        var _this = this;
        var verts_i = this._model.geom.query.getEnts(_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].VERT);
        var posis_i = verts_i.map(function (vert_i) { return _this._model.geom.query.navVertToPosi(vert_i); });
        var coords_map = this._attribs_maps.ps.get(_common__WEBPACK_IMPORTED_MODULE_0__["EAttribNames"].COORDS);
        return coords_map.getEntsVals(posis_i);
    };
    return GIAttribsQuery;
}());

// ================================================================================================
// Functions for parsing queries
// ================================================================================================
/**
 * Parse a query string.
 * && takes precedence over ||
 * [ [ query1 && query2 ] || [ query3 && query4 ] ]
 */
function parseQuery(query_str) {
    if (!query_str.startsWith('#')) {
        throw new Error('Bad query, query string must start with #.');
    }
    var query_str_clean = query_str.replace(/\s/g, '');
    var or_query_strs = query_str_clean.split('||');
    var query_list = [];
    or_query_strs.forEach(function (or_query_str) {
        var and_query_strs = or_query_str.split('&&');
        query_list.push(and_query_strs.map(function (and_query_str) { return _parse_query_component(and_query_str); }));
    });
    return query_list;
}
/**
 * Parse a query component string.
 */
function _parse_query_component(query_component) {
    var attrib_name_str = '';
    var attrib_value_str = '';
    var operator_type = null;
    // split the query at the @ sign
    var _a = query_component.split('@'), _ = _a[0], attrib_name_value_str = _a[1];
    if (!attrib_name_value_str) {
        throw new Error('Bad query.');
    }
    // split the attrib_name_value_str based on operator, ==, !=, etc...
    for (var _i = 0, _b = Object.keys(_common__WEBPACK_IMPORTED_MODULE_0__["EQueryOperatorTypes"]); _i < _b.length; _i++) {
        var key = _b[_i];
        var split_query = attrib_name_value_str.split(_common__WEBPACK_IMPORTED_MODULE_0__["EQueryOperatorTypes"][key]);
        if (split_query.length === 2) {
            attrib_name_str = split_query[0];
            attrib_value_str = split_query[1];
            operator_type = _common__WEBPACK_IMPORTED_MODULE_0__["EQueryOperatorTypes"][key];
            break;
        }
    }
    // check
    if (!attrib_name_str) {
        throw new Error('Bad attribute name in query.');
    }
    if (!attrib_value_str) {
        throw new Error('Bad attribute value in query.');
    }
    if (!operator_type) {
        throw new Error('Bad operator in query.');
    }
    // parse the name
    var attrib_name_index = _parse_name_str(attrib_name_str);
    var attrib_name = attrib_name_index[0];
    var attrib_index = attrib_name_index[1];
    // parse the value
    attrib_value_str = _parse_value_str(attrib_value_str);
    // return the data for the query component as an object
    return {
        attrib_name: attrib_name,
        attrib_index: attrib_index,
        attrib_value_str: attrib_value_str,
        operator_type: operator_type
    };
}
/**
 * Parse a sort string. #@name1 && #@name2
 * Rerurns an array,[ query1, query2 ]
 */
function parseSort(sort_str) {
    if (!sort_str.startsWith('#')) {
        throw new Error('Bad sort, sort string must start with #.');
    }
    if (sort_str.indexOf('||') !== -1) {
        throw new Error('Bad sort, sort string cannot contain || conditions.');
    }
    var sort_str_clean = sort_str.replace(/\s/g, '');
    var component_strs = sort_str_clean.split('&&');
    var sort_list = [];
    component_strs.forEach(function (component_str) {
        sort_list.push(_parse_sort_component(component_str));
    });
    return sort_list;
}
/**
 * Parse a query component string.
 */
function _parse_sort_component(sort_component) {
    // split the query at the @ sign
    var _a = sort_component.split('@'), _ = _a[0], attrib_name_str = _a[1];
    // check
    if (!attrib_name_str) {
        throw new Error('Bad attribute name in query.');
    }
    // parse the name
    var attrib_name_index = _parse_name_str(attrib_name_str);
    var attrib_name = attrib_name_index[0];
    var attrib_index = attrib_name_index[1];
    // return the data for the query component as an object
    return {
        attrib_name: attrib_name,
        attrib_index: attrib_index
    };
}
/**
 * Parse the attribute value. Handles sting with quotes, e.g. 'this' and "that".
 * Remove quotes from value string
 */
function _parse_value_str(value_str) {
    var first_char = value_str.slice(0, 1);
    if (first_char === '\'' || first_char === '"') {
        return value_str.slice(1, -1);
    }
    return value_str;
}
/**
 * Parese the attribute name. Handles names with indexes, e.g. 'name[2]'
 * Split the name into the string name and the numeric index
 */
function _parse_name_str(value_str) {
    var last_char = value_str.slice(-1);
    if (last_char === ']') {
        var _a = value_str.slice(0, -1).split('['), name_str = _a[0], index_str = _a[1];
        var index = Number(index_str);
        if (isNaN(index)) {
            throw new Error('Bad query');
        }
        return [name_str, index];
    }
    return [value_str, null];
}


/***/ }),

/***/ "./src/libs/geo-info/GIAttribsThreejs.ts":
/*!***********************************************!*\
  !*** ./src/libs/geo-info/GIAttribsThreejs.ts ***!
  \***********************************************/
/*! exports provided: GIAttribsThreejs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GIAttribsThreejs", function() { return GIAttribsThreejs; });
/* harmony import */ var _common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./common */ "./src/libs/geo-info/common.ts");

/**
 * Class for attributes.
 */
var GIAttribsThreejs = /** @class */ (function () {
    /**
      * Creates an object to store the attribute data.
      * @param model The JSON data
      */
    function GIAttribsThreejs(model, attribs_maps) {
        this._model = model;
        this._attribs_maps = attribs_maps;
    }
    // ============================================================================
    // Threejs
    // For methods to get the array of edges and triangles, see the geom class
    // get3jsTris() and get3jsEdges()
    // ============================================================================
    /**
     * Get a flat array of all the coordinates of all the vertices.
     * Verts that have been deleted will not be included
     * @param verts An array of vertex indicies pointing to the positio.
     */
    GIAttribsThreejs.prototype.get3jsSeqVertsCoords = function () {
        var _this = this;
        var verts_i = this._model.geom.query.getEnts(_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].VERT);
        var posis_i = verts_i.map(function (vert_i) { return _this._model.geom.query.navVertToPosi(vert_i); });
        var coords_attrib = this._attribs_maps.ps.get(_common__WEBPACK_IMPORTED_MODULE_0__["EAttribNames"].COORDS);
        // @ts-ignore
        return coords_attrib.getEntsVals(posis_i).flat(1);
        // return [].concat(...coords_attrib.getEntsVals(posis_i));
    };
    /**
     * Get a flat array of attribute values for all the vertices.
     * Verts that have been deleted will not be included
     * @param attrib_name The name of the vertex attribute. Either NORMAL or COLOR.
     */
    GIAttribsThreejs.prototype.get3jsSeqVertsAttrib = function (attrib_name) {
        if (!this._attribs_maps._v.has(attrib_name)) {
            return null;
        }
        var verts_i = this._model.geom.query.getEnts(_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].VERT);
        var verts_attrib = this._attribs_maps._v.get(attrib_name);
        // @ts-ignore
        return verts_attrib.getEntsVals(verts_i).flat(1);
        // return [].concat(...verts_attrib.getEntsVals(verts_i));
    };
    /**
     *
     * @param ent_type
     */
    GIAttribsThreejs.prototype.getAttribsForTable = function (ent_type) {
        // get the attribs map for this ent type
        var attribs_maps_key = _common__WEBPACK_IMPORTED_MODULE_0__["EEntTypeStr"][ent_type];
        var attribs = this._attribs_maps[attribs_maps_key];
        // create a map of objects to store the data
        var data_obj_map = new Map();
        // create the ID for each table row
        var ents_i = this._model.geom.query.getEnts(ent_type);
        for (var _i = 0, ents_i_1 = ents_i; _i < ents_i_1.length; _i++) {
            var ent_i = ents_i_1[_i];
            data_obj_map.set(ent_i, { id: "" + attribs_maps_key + ent_i });
        }
        // loop through all the attributes
        attribs.forEach(function (attrib, attrib_name) {
            var data_size = attrib.getDataSize();
            var _loop_1 = function (ent_i) {
                var attrib_value = attrib.getEntVal(ent_i);
                if (data_size > 1) {
                    attrib_value.forEach(function (v, i) {
                        data_obj_map.get(ent_i)[attrib_name + "[" + i + "]"] = v;
                    });
                }
                else {
                    data_obj_map.get(ent_i)["" + attrib_name] = attrib_value;
                }
            };
            for (var _i = 0, ents_i_2 = ents_i; _i < ents_i_2.length; _i++) {
                var ent_i = ents_i_2[_i];
                _loop_1(ent_i);
            }
        });
        return Array.from(data_obj_map.values());
    };
    /**
     * @param ent_type
     * @param ents_i
     */
    GIAttribsThreejs.prototype.getEntsVals = function (selected_ents, ent_type) {
        var attribs_maps_key = _common__WEBPACK_IMPORTED_MODULE_0__["EEntTypeStr"][ent_type];
        var attribs = this._attribs_maps[attribs_maps_key];
        var data_obj_map = new Map();
        if (!selected_ents || selected_ents === undefined) {
            return [];
        }
        selected_ents.forEach(function (ent) {
            data_obj_map.set(ent, { id: "" + attribs_maps_key + ent });
        });
        attribs.forEach(function (attrib, attrib_name) {
            var data_size = attrib.getDataSize();
            var _loop_2 = function (ent_i) {
                var attrib_value = attrib.getEntVal(ent_i);
                if (data_size > 1) {
                    attrib_value.forEach(function (v, i) {
                        data_obj_map.get(ent_i)[attrib_name + "[" + i + "]"] = v;
                    });
                }
                else {
                    data_obj_map.get(ent_i)["" + attrib_name] = attrib_value;
                }
            };
            for (var _i = 0, _a = Array.from(selected_ents.values()); _i < _a.length; _i++) {
                var ent_i = _a[_i];
                _loop_2(ent_i);
            }
        });
        return Array.from(data_obj_map.values());
    };
    return GIAttribsThreejs;
}());



/***/ }),

/***/ "./src/libs/geo-info/GIGeom.ts":
/*!*************************************!*\
  !*** ./src/libs/geo-info/GIGeom.ts ***!
  \*************************************/
/*! exports provided: GIGeom */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GIGeom", function() { return GIGeom; });
/* harmony import */ var _GIGeomAdd__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./GIGeomAdd */ "./src/libs/geo-info/GIGeomAdd.ts");
/* harmony import */ var _GIGeomQuery__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./GIGeomQuery */ "./src/libs/geo-info/GIGeomQuery.ts");
/* harmony import */ var _GIGeomThreejs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./GIGeomThreejs */ "./src/libs/geo-info/GIGeomThreejs.ts");



/**
 * Class for geometry.
 */
var GIGeom = /** @class */ (function () {
    /**
     * Creates an object to store the geometry data.
     * @param geom_data The JSON data
     */
    function GIGeom(model) {
        //  all arrays
        this._geom_arrays = {
            num_posis: 0,
            dn_verts_posis: [],
            dn_tris_verts: [],
            dn_edges_verts: [],
            dn_wires_edges: [],
            dn_faces_wirestris: [],
            dn_points_verts: [],
            dn_plines_wires: [],
            dn_pgons_faces: [],
            dn_colls_objs: [],
            up_posis_verts: [],
            up_tris_faces: [],
            up_verts_edges: [],
            up_verts_tris: [],
            up_verts_points: [],
            up_edges_wires: [],
            up_wires_faces: [],
            up_wires_plines: [],
            up_faces_pgons: [],
            up_points_colls: [],
            up_plines_colls: [],
            up_pgons_colls: []
        };
        this.model = model;
        this.add = new _GIGeomAdd__WEBPACK_IMPORTED_MODULE_0__["GIGeomAdd"](this, this._geom_arrays);
        this.query = new _GIGeomQuery__WEBPACK_IMPORTED_MODULE_1__["GIGeomQuery"](this, this._geom_arrays);
        this.threejs = new _GIGeomThreejs__WEBPACK_IMPORTED_MODULE_2__["GIGeomThreejs"](this, this._geom_arrays);
    }
    /**
     * Returns the JSON data for this model.
     */
    GIGeom.prototype.getData = function () {
        return {
            num_positions: this._geom_arrays.num_posis,
            triangles: this._geom_arrays.dn_tris_verts,
            vertices: this._geom_arrays.dn_verts_posis,
            edges: this._geom_arrays.dn_edges_verts,
            wires: this._geom_arrays.dn_wires_edges,
            faces: this._geom_arrays.dn_faces_wirestris,
            points: this._geom_arrays.dn_points_verts,
            polylines: this._geom_arrays.dn_plines_wires,
            polygons: this._geom_arrays.dn_pgons_faces,
            collections: this._geom_arrays.dn_colls_objs
        };
    };
    return GIGeom;
}());



/***/ }),

/***/ "./src/libs/geo-info/GIGeomAdd.ts":
/*!****************************************!*\
  !*** ./src/libs/geo-info/GIGeomAdd.ts ***!
  \****************************************/
/*! exports provided: GIGeomAdd */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GIGeomAdd", function() { return GIGeomAdd; });
/* harmony import */ var _common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./common */ "./src/libs/geo-info/common.ts");
/* harmony import */ var _triangulate_triangulate__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../triangulate/triangulate */ "./src/libs/triangulate/triangulate.ts");


/**
 * Class for geometry.
 */
var GIGeomAdd = /** @class */ (function () {
    /**
     * Creates an object to store the geometry data.
     * @param geom_data The JSON data
     */
    function GIGeomAdd(geom, geom_arrays) {
        this._geom = geom;
        this._geom_arrays = geom_arrays;
    }
    /**
     * Adds data to this model from JSON data.
     * The existing data in the model is not deleted.
     * @param geom_data The JSON data
     */
    GIGeomAdd.prototype.addData = function (geom_data) {
        // get lengths before we start adding stuff
        var num_posis = this._geom_arrays.num_posis;
        var num_verts = this._geom_arrays.dn_verts_posis.length;
        var num_tris = this._geom_arrays.dn_tris_verts.length;
        var num_edges = this._geom_arrays.dn_edges_verts.length;
        var num_wires = this._geom_arrays.dn_wires_edges.length;
        var num_faces = this._geom_arrays.dn_faces_wirestris.length;
        var num_points = this._geom_arrays.dn_points_verts.length;
        var num_plines = this._geom_arrays.dn_plines_wires.length;
        var num_pgons = this._geom_arrays.dn_pgons_faces.length;
        var num_colls = this._geom_arrays.dn_colls_objs.length;
        // Add vertices to model
        var new_verts = geom_data.vertices.map(function (p) { return p + num_posis; });
        for (var _i = 0, new_verts_1 = new_verts; _i < new_verts_1.length; _i++) {
            var v = new_verts_1[_i];
            this._geom_arrays.dn_verts_posis.push(v);
        }
        // Add triangles to model
        var new_triangles = geom_data.triangles.map(function (t) { return t.map(function (v) { return v + num_verts; }); });
        // this._geom_arrays.dn_tris_verts.push( ...new_triangles );
        for (var _a = 0, new_triangles_1 = new_triangles; _a < new_triangles_1.length; _a++) {
            var v = new_triangles_1[_a];
            this._geom_arrays.dn_tris_verts.push(v);
        }
        // Add edges to model
        var new_edges = geom_data.edges.map(function (e) { return e.map(function (v) { return v + num_verts; }); });
        // this._geom_arrays.dn_edges_verts.push( ...new_edges );
        for (var _b = 0, new_edges_1 = new_edges; _b < new_edges_1.length; _b++) {
            var v = new_edges_1[_b];
            this._geom_arrays.dn_edges_verts.push(v);
        }
        // Add wires to model
        var new_wires = geom_data.wires.map(function (w) { return w.map(function (e) { return e + num_edges; }); });
        // this._geom_arrays.dn_wires_edges.push( ...new_wires );
        for (var _c = 0, new_wires_1 = new_wires; _c < new_wires_1.length; _c++) {
            var v = new_wires_1[_c];
            this._geom_arrays.dn_wires_edges.push(v);
        }
        // Add faces to model
        var new_faces = geom_data.faces.map(function (f) { return [
            f[0].map(function (w) { return w + num_wires; }),
            f[1].map(function (t) { return t + num_tris; })
        ]; });
        // this._geom_arrays.dn_faces_wirestris.push( ...new_faces );
        for (var _d = 0, new_faces_1 = new_faces; _d < new_faces_1.length; _d++) {
            var v = new_faces_1[_d];
            this._geom_arrays.dn_faces_wirestris.push(v);
        }
        // Add points to model
        var new_points = geom_data.points.map(function (v) { return v + num_verts; });
        // this._geom_arrays.dn_points_verts.push( ...new_points );
        for (var _e = 0, new_points_1 = new_points; _e < new_points_1.length; _e++) {
            var v = new_points_1[_e];
            this._geom_arrays.dn_points_verts.push(v);
        }
        // Add lines to model
        var new_plines = geom_data.polylines.map(function (w) { return w + num_wires; });
        // this._geom_arrays.dn_plines_wires.push( ...new_plines );
        for (var _f = 0, new_plines_1 = new_plines; _f < new_plines_1.length; _f++) {
            var v = new_plines_1[_f];
            this._geom_arrays.dn_plines_wires.push(v);
        }
        // Add pgons to model
        var new_pgons = geom_data.polygons.map(function (f) { return f + num_faces; });
        // this._geom_arrays.dn_pgons_faces.push( ...new_pgons );
        for (var _g = 0, new_pgons_1 = new_pgons; _g < new_pgons_1.length; _g++) {
            var v = new_pgons_1[_g];
            this._geom_arrays.dn_pgons_faces.push(v);
        }
        // Add collections to model
        var new_colls = geom_data.collections.map(function (c) { return [
            c[0] === -1 ? -1 : c[0] + num_colls,
            c[1].map(function (point) { return point + num_points; }),
            c[2].map(function (line) { return line + num_plines; }),
            c[3].map(function (pgon) { return pgon + num_pgons; })
        ]; });
        // this._geom_arrays.dn_colls_objs.push( ...new_colls );
        for (var _h = 0, new_colls_1 = new_colls; _h < new_colls_1.length; _h++) {
            var v = new_colls_1[_h];
            this._geom_arrays.dn_colls_objs.push(v);
        }
        // Update the reverse arrays
        this._updateRevArrays();
        // update the positions array
        this._geom_arrays.num_posis += geom_data.num_positions;
        // return
        var num_new_posis = 0;
        // if (new_verts.length > 0) { num_new_posis = Math.max(...new_verts); }
        if (new_verts.length > 0) {
            new_verts.map(function (val) {
                if (val > num_new_posis) {
                    num_new_posis = val;
                }
            });
        }
        return {
            posis_i: Array.from(Array(num_new_posis).keys()).map(function (k) { return k + num_posis; }),
            points_i: Array.from(Array(new_points.length).keys()).map(function (k) { return k + num_points; }),
            plines_i: Array.from(Array(new_plines.length).keys()).map(function (k) { return k + num_plines; }),
            pgons_i: Array.from(Array(new_pgons.length).keys()).map(function (k) { return k + num_pgons; }),
            colls_i: Array.from(Array(new_colls.length).keys()).map(function (k) { return k + num_colls; })
        };
    };
    // ============================================================================
    // Private method to update the reverse arrays after addData()
    // ============================================================================
    /**
     * Updates the rev arrays the create the reveres links.
     */
    GIGeomAdd.prototype._updateRevArrays = function () {
        var _this = this;
        // posis->verts
        this._geom_arrays.up_posis_verts = [];
        this._geom_arrays.dn_verts_posis.forEach(function (pos_i, vert_i) {
            if (_this._geom_arrays.up_posis_verts[pos_i] === undefined) {
                _this._geom_arrays.up_posis_verts[pos_i] = [];
            }
            _this._geom_arrays.up_posis_verts[pos_i].push(vert_i);
        });
        // verts->tris, one to many
        this._geom_arrays.up_verts_tris = [];
        this._geom_arrays.dn_tris_verts.forEach(function (vert_i_arr, tri_i) {
            vert_i_arr.forEach(function (vert_i) {
                if (_this._geom_arrays.up_verts_tris[vert_i] === undefined) {
                    _this._geom_arrays.up_verts_tris[vert_i] = [];
                }
                _this._geom_arrays.up_verts_tris[vert_i].push(tri_i);
            });
        });
        // verts->edges, one to two
        this._geom_arrays.up_verts_edges = [];
        this._geom_arrays.dn_edges_verts.forEach(function (vert_i_arr, edge_i) {
            vert_i_arr.forEach(function (vert_i) {
                if (_this._geom_arrays.up_verts_edges[vert_i] === undefined) {
                    _this._geom_arrays.up_verts_edges[vert_i] = [];
                }
                _this._geom_arrays.up_verts_edges[vert_i].push(edge_i);
            });
        });
        // edges->wires
        this._geom_arrays.up_edges_wires = [];
        this._geom_arrays.dn_wires_edges.forEach(function (edge_i_arr, wire_i) {
            edge_i_arr.forEach(function (edge_i) {
                _this._geom_arrays.up_edges_wires[edge_i] = wire_i;
            });
        });
        // wires->faces, tris->faces, faces->wirestris
        this._geom_arrays.up_wires_faces = [];
        this._geom_arrays.up_tris_faces = [];
        this._geom_arrays.dn_faces_wirestris.forEach(function (_a, face_i) {
            var wire_i_arr = _a[0], tri_i_arr = _a[1];
            wire_i_arr.forEach(function (wire_i) {
                _this._geom_arrays.up_wires_faces[wire_i] = face_i;
            });
            tri_i_arr.forEach(function (tri_i) {
                _this._geom_arrays.up_tris_faces[tri_i] = face_i;
            });
        });
        // points, lines, polygons
        this._geom_arrays.up_verts_points = [];
        this._geom_arrays.dn_points_verts.forEach(function (vert_i, point_i) {
            _this._geom_arrays.up_verts_points[vert_i] = point_i;
        });
        this._geom_arrays.up_wires_plines = [];
        this._geom_arrays.dn_plines_wires.forEach(function (wire_i, line_i) {
            _this._geom_arrays.up_wires_plines[wire_i] = line_i;
        });
        this._geom_arrays.up_faces_pgons = [];
        this._geom_arrays.dn_pgons_faces.forEach(function (face_i, pgon_i) {
            _this._geom_arrays.up_faces_pgons[face_i] = pgon_i;
        });
        // collections of points, polylines, polygons
        this._geom_arrays.up_points_colls = [];
        this._geom_arrays.up_plines_colls = [];
        this._geom_arrays.up_pgons_colls = [];
        this._geom_arrays.dn_colls_objs.forEach(function (_a, coll_i) {
            var parent = _a[0], point_i_arr = _a[1], pline_i_arr = _a[2], pgon_i_arr = _a[3];
            point_i_arr.forEach(function (point_i) {
                if (_this._geom_arrays.up_points_colls[point_i] === undefined) {
                    _this._geom_arrays.up_points_colls[point_i] = [coll_i];
                }
                else {
                    _this._geom_arrays.up_points_colls[point_i].push(coll_i);
                }
            });
            pline_i_arr.forEach(function (pline_i) {
                if (_this._geom_arrays.up_plines_colls[pline_i] === undefined) {
                    _this._geom_arrays.up_plines_colls[pline_i] = [coll_i];
                }
                else {
                    _this._geom_arrays.up_plines_colls[pline_i].push(coll_i);
                }
            });
            pgon_i_arr.forEach(function (pgon_i) {
                if (_this._geom_arrays.up_pgons_colls[pgon_i] === undefined) {
                    _this._geom_arrays.up_pgons_colls[pgon_i] = [coll_i];
                }
                else {
                    _this._geom_arrays.up_pgons_colls[pgon_i].push(coll_i);
                }
            });
        });
    };
    // ============================================================================
    // Private methods to create the topological entities
    // ============================================================================
    /**
     * Adds a vertex and updates the arrays.
     * @param posi_i
     */
    GIGeomAdd.prototype._addVertex = function (posi_i) {
        // update down arrays
        var vert_i = this._geom_arrays.dn_verts_posis.push(posi_i) - 1;
        // u[date up arrays]
        if (this._geom_arrays.up_posis_verts[posi_i] === undefined) {
            this._geom_arrays.up_posis_verts[posi_i] = [];
        }
        this._geom_arrays.up_posis_verts[posi_i].push(vert_i);
        // return the numeric index of the vertex
        return vert_i;
    };
    /**
     * Adds an edge and updates the arrays.
     * @param vert_i1
     * @param vert_i2
     */
    GIGeomAdd.prototype._addEdge = function (vert_i1, vert_i2) {
        // update down arrays
        var edge_i = this._geom_arrays.dn_edges_verts.push([vert_i1, vert_i2]) - 1;
        // update up arrays
        if (this._geom_arrays.up_verts_edges[vert_i1] === undefined) {
            this._geom_arrays.up_verts_edges[vert_i1] = [];
        }
        this._geom_arrays.up_verts_edges[vert_i1].push(edge_i);
        if (this._geom_arrays.up_verts_edges[vert_i2] === undefined) {
            this._geom_arrays.up_verts_edges[vert_i2] = [];
        }
        this._geom_arrays.up_verts_edges[vert_i2].push(edge_i);
        // return the numeric index pf teh edge
        return edge_i;
    };
    /**
     * Adds a wire and updates the arrays.
     * Edges are assumed to be sequential!
     * @param edges_i
     */
    GIGeomAdd.prototype._addWire = function (edges_i, close) {
        var _this = this;
        if (close === void 0) { close = false; }
        // update down arrays
        var wire_i = this._geom_arrays.dn_wires_edges.push(edges_i) - 1;
        // update up arrays
        edges_i.forEach(function (edge_i) { return _this._geom_arrays.up_edges_wires[edge_i] = wire_i; });
        // return the numeric index of the wire
        return wire_i;
    };
    /**
     * Adds trangles and updates the arrays.
     * Wires are assumed to be closed!
     * No holes yet... TODO
     * @param wire_i
     */
    GIGeomAdd.prototype._addTris = function (wire_i) {
        var _this = this;
        // create the triangles
        var wire_verts_i = this._geom.query.navAnyToVert(_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].WIRE, wire_i);
        var wire_posis_i = wire_verts_i.map(function (vert_i) { return _this._geom_arrays.dn_verts_posis[vert_i]; });
        var wire_coords = wire_posis_i.map(function (posi_i) { return _this._geom.model.attribs.query.getPosiCoords(posi_i); });
        var tris_corners = Object(_triangulate_triangulate__WEBPACK_IMPORTED_MODULE_1__["triangulate"])(wire_coords);
        var tris_verts_i = tris_corners.map(function (tri_corners) { return tri_corners.map(function (corner) { return wire_verts_i[corner]; }); });
        // update down arrays
        var tris_i = tris_verts_i.map(function (tri_verts_i) { return _this._geom_arrays.dn_tris_verts.push(tri_verts_i) - 1; });
        // update up arrays
        for (var i = 0; i < tris_verts_i.length; i++) {
            var tri_verts_i = tris_verts_i[i];
            var tri_i = tris_i[i];
            for (var _i = 0, tri_verts_i_1 = tri_verts_i; _i < tri_verts_i_1.length; _i++) {
                var tri_vert_i = tri_verts_i_1[_i];
                if (this._geom_arrays.up_verts_tris[tri_vert_i] === undefined) {
                    this._geom_arrays.up_verts_tris[tri_vert_i] = [];
                }
                this._geom_arrays.up_verts_tris[tri_vert_i].push(tri_i);
            }
        }
        // return an array of numeric indicies of the triangles
        return tris_i;
    };
    /**
     * Adds a face and updates the arrays.
     * Wires are assumed to be closed!
     * This also calls addTris()
     * No holes yet... TODO
     * @param wire_i
     */
    GIGeomAdd.prototype._addFace = function (wire_i) {
        var _this = this;
        // create the triangles
        var tris_i = this._addTris(wire_i);
        // create the face
        var face = [[wire_i], tris_i];
        // update down arrays
        var face_i = this._geom_arrays.dn_faces_wirestris.push(face) - 1;
        // update up arrays
        this._geom_arrays.up_wires_faces[wire_i] = face_i;
        tris_i.forEach(function (tri_i) { return _this._geom_arrays.up_tris_faces[tri_i] = face_i; });
        // return the numeric index of the face
        return face_i;
    };
    // ============================================================================
    // Create geometry
    // ============================================================================
    /**
     * Adds a new position to the model and returns the index to that position.
     */
    GIGeomAdd.prototype.addPosition = function () {
        this._geom_arrays.num_posis += 1;
        return this._geom_arrays.num_posis - 1;
    };
    /**
     * Adds a new point entity to the model.
     * @param posi_i The position for the point.
     */
    GIGeomAdd.prototype.addPoint = function (posi_i) {
        // create verts
        var vert_i = this._addVertex(posi_i);
        // create point
        var point_i = this._geom_arrays.dn_points_verts.push(vert_i) - 1;
        this._geom_arrays.up_verts_points[vert_i] = point_i;
        return point_i;
    };
    /**
     * Adds a new pline entity to the model using numeric indicies.
     * @param posis_i
     */
    GIGeomAdd.prototype.addPline = function (posis_i, close) {
        var _this = this;
        if (close === void 0) { close = false; }
        // create verts, edges, wires
        var vert_i_arr = posis_i.map(function (posi_i) { return _this._addVertex(posi_i); });
        var edges_i_arr = [];
        for (var i = 0; i < vert_i_arr.length - 1; i++) {
            edges_i_arr.push(this._addEdge(vert_i_arr[i], vert_i_arr[i + 1]));
        }
        if (close) {
            edges_i_arr.push(this._addEdge(vert_i_arr[vert_i_arr.length - 1], vert_i_arr[0]));
        }
        var wire_i = this._addWire(edges_i_arr, close);
        // create pline
        var pline_i = this._geom_arrays.dn_plines_wires.push(wire_i) - 1;
        this._geom_arrays.up_wires_plines[wire_i] = pline_i;
        return pline_i;
    };
    /**
     * Adds a new polygon entity to the model using numeric indicies.
     * @param posis_id
     */
    GIGeomAdd.prototype.addPgon = function (posis_i) {
        var _this = this;
        // create verts, edges, wires, faces
        var vert_i_arr = posis_i.map(function (posi_i) { return _this._addVertex(posi_i); });
        var edges_i_arr = [];
        for (var i = 0; i < vert_i_arr.length - 1; i++) {
            edges_i_arr.push(this._addEdge(vert_i_arr[i], vert_i_arr[i + 1]));
        }
        edges_i_arr.push(this._addEdge(vert_i_arr[vert_i_arr.length - 1], vert_i_arr[0]));
        var wire_i = this._addWire(edges_i_arr, true);
        var face_i = this._addFace(wire_i);
        // create polygon
        var pgon_i = this._geom_arrays.dn_pgons_faces.push(face_i) - 1;
        this._geom_arrays.up_faces_pgons[face_i] = pgon_i;
        return pgon_i;
    };
    /**
     * Adds a collection and updates the rev array using numeric indicies.
     * @param parent_i
     * @param points_i
     * @param plines_i
     * @param pgons_i
     */
    GIGeomAdd.prototype.addColl = function (parent_i, points_i, plines_i, pgons_i) {
        // create collection
        var coll_i = this._geom_arrays.dn_colls_objs.push([parent_i, points_i, plines_i, pgons_i]) - 1;
        for (var _i = 0, points_i_1 = points_i; _i < points_i_1.length; _i++) {
            var point_i = points_i_1[_i];
            if (this._geom_arrays.up_points_colls[point_i] === undefined) {
                this._geom_arrays.up_points_colls[point_i] = [coll_i];
            }
            else {
                this._geom_arrays.up_points_colls[point_i].push(coll_i);
            }
        }
        for (var _a = 0, plines_i_1 = plines_i; _a < plines_i_1.length; _a++) {
            var pline_i = plines_i_1[_a];
            if (this._geom_arrays.up_points_colls[pline_i] === undefined) {
                this._geom_arrays.up_points_colls[pline_i] = [coll_i];
            }
            else {
                this._geom_arrays.up_points_colls[pline_i].push(coll_i);
            }
        }
        for (var _b = 0, pgons_i_1 = pgons_i; _b < pgons_i_1.length; _b++) {
            var pgon_i = pgons_i_1[_b];
            if (this._geom_arrays.up_points_colls[pgon_i] === undefined) {
                this._geom_arrays.up_points_colls[pgon_i] = [coll_i];
            }
            else {
                this._geom_arrays.up_points_colls[pgon_i].push(coll_i);
            }
        }
        return coll_i;
    };
    /**
     * Copy positions.
     * @param posis_i
     * @param copy_attribs
     */
    GIGeomAdd.prototype.copyPosis = function (posis_i, copy_attribs) {
        var _this = this;
        if (!Array.isArray(posis_i)) {
            var xyz = this._geom.model.attribs.query.getPosiCoords(posis_i);
            var new_posi_i = this.addPosition();
            this._geom.model.attribs.add.setPosiCoords(new_posi_i, xyz);
            if (copy_attribs) {
                var attrib_names = this._geom.model.attribs.query.getAttribNames(_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].POSI);
                for (var _i = 0, attrib_names_1 = attrib_names; _i < attrib_names_1.length; _i++) {
                    var attrib_name = attrib_names_1[_i];
                    var value = this._geom.model.attribs.query.getAttribValue(_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].POSI, attrib_name, posis_i);
                    this._geom.model.attribs.add.setAttribValue(_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].POSI, new_posi_i, attrib_name, value);
                }
            }
            return new_posi_i;
        }
        else {
            return posis_i.map(function (posi_i) { return _this.copyPosis(posi_i, copy_attribs); });
        }
    };
    /**
     * Copy an object (point, polyline, polygon).
     * TODO copy attribs of topo entities
     * @param ent_type
     * @param index
     * @param copy_posis
     * @param copy_attribs
     */
    GIGeomAdd.prototype.copyObjs = function (ent_type, ent_i, copy_attribs) {
        var _this = this;
        // make copies
        if (!Array.isArray(ent_i)) {
            var original_posis_i = this._geom.query.navAnyToPosi(ent_type, ent_i);
            var posis_i = original_posis_i;
            switch (ent_type) {
                case _common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].POINT:
                    var point_i = this.addPoint(posis_i[0]);
                    if (copy_attribs) {
                        this._geom.model.attribs.add.copyAttribs(ent_type, ent_i, point_i);
                    }
                    return point_i;
                case _common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].PLINE:
                    var wire_i = this._geom.query.navPlineToWire(ent_i);
                    var is_closed = this._geom.query.istWireClosed(wire_i);
                    var pline_i = this.addPline(posis_i, is_closed);
                    if (copy_attribs) {
                        this._geom.model.attribs.add.copyAttribs(ent_type, ent_i, pline_i);
                    }
                    return pline_i;
                case _common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].PGON:
                    var pgon_i = this.addPgon(posis_i);
                    if (copy_attribs) {
                        this._geom.model.attribs.add.copyAttribs(ent_type, ent_i, pgon_i);
                    }
                    return pgon_i;
                default:
                    throw new Error('Cannot copy entity of this type: ' + ent_type);
            }
        }
        else { // AN array of ent_i
            return ent_i.map(function (one_ent_i) { return _this.copyObjs(ent_type, one_ent_i, copy_attribs); });
        }
    };
    /**
      * Copy an object (point, polyline, polygon).
      * TODO Copy attribs of object and topo entities
      * @param ent_type
      * @param index
      * @param copy_posis
      * @param copy_attribs
      */
    GIGeomAdd.prototype.copyColls = function (coll_i, copy_attribs) {
        var _this = this;
        // make copies
        if (!Array.isArray(coll_i)) {
            // Make a deep copy of the objects in the collection
            var points_i = this._geom.query.navCollToPoint(coll_i);
            var res1 = this.copyObjs(_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].POINT, points_i, copy_attribs);
            var plines_i = this._geom.query.navCollToPline(coll_i);
            var res2 = this.copyObjs(_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].PLINE, plines_i, copy_attribs);
            var pgons_i = this._geom.query.navCollToPgon(coll_i);
            var res3 = this.copyObjs(_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].PGON, pgons_i, copy_attribs);
            var parent_1 = this._geom.query.getCollParent(coll_i);
            // add the new collection
            var new_coll_i = this.addColl(parent_1, res1, res2, res3);
            // copy the attributes from old collection to new collection
            if (copy_attribs) {
                this._geom.model.attribs.add.copyAttribs(_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].COLL, coll_i, new_coll_i);
            }
            // return the new collection
            return new_coll_i;
        }
        else {
            return coll_i.map(function (one_coll_i) { return _this.copyColls(one_coll_i, copy_attribs); });
        }
    };
    // ============================================================================
    // Modify geometry
    // ============================================================================
    /**
     * Close a wire
     * @param wire_i The wire to close.
     */
    GIGeomAdd.prototype.closeWire = function (wire_i) {
        // get the wire start and end verts
        var wire = this._geom_arrays.dn_wires_edges[wire_i];
        var num_edges = wire.length;
        var start_edge_i = wire[0];
        var end_edge_i = wire[num_edges - 1];
        var start_vert_i = this._geom.query.navEdgeToVert(start_edge_i)[0];
        var end_vert_i = this._geom.query.navEdgeToVert(end_edge_i)[1];
        if (start_vert_i === end_vert_i) {
            return;
        }
        // add the edge to the model
        var new_edge_i = this._addEdge(end_vert_i, start_vert_i);
        // update the down arrays
        this._geom_arrays.dn_wires_edges[wire_i].push(new_edge_i);
        // update the up arrays
        this._geom_arrays.up_edges_wires[new_edge_i] = wire_i;
    };
    /**
     * Insert a vertex into an edge and updates the wire with the new edge
     * @param wire_i The wire to close.
     */
    GIGeomAdd.prototype.insertVertIntoEdge = function (edge_i, posi_i) {
        var wire_i = this._geom.query.navEdgeToWire(edge_i);
        var wire = this._geom_arrays.dn_wires_edges[wire_i];
        var old_edge = this._geom_arrays.dn_edges_verts[edge_i];
        // create one new vertex and one new edge
        var new_vert_i = this._addVertex(posi_i);
        var new_edge_i = this._addEdge(new_vert_i, old_edge[1]);
        // update the down arrays
        old_edge[1] = new_vert_i;
        wire.splice(wire.indexOf(edge_i), 1, edge_i, new_edge_i);
        // update the up arrays
        this._geom_arrays.up_edges_wires[new_edge_i] = wire_i;
        // return the new edge
        return new_edge_i;
    };
    /**
     * Delete a vertex from a wire
     * @param wire_i The wire to close.
     */
    GIGeomAdd.prototype.deleteVertWire = function (edge_i, posi_i) {
        throw new Error("Not implemented.");
    };
    /**
     * Replace positions
     * @param ent_type
     * @param ent_i
     * @param new_posis_i
     */
    GIGeomAdd.prototype.replacePosis = function (ent_type, ent_i, new_posis_i) {
        var verts_i = this._geom.query.navAnyToVert(ent_type, ent_i);
        if (verts_i.length !== new_posis_i.length) {
            throw new Error('Replacing positions operation failed due to incorrect number of positions.');
        }
        for (var i = 0; i < verts_i.length; i++) {
            this._geom_arrays.dn_verts_posis[verts_i[i]] = new_posis_i[i];
        }
    };
    /**
     * Unweld the vertices
     * @param verts_i
     */
    GIGeomAdd.prototype.unweldVerts = function (verts_i) {
        var _this = this;
        var exist_posis_i_map = new Map(); // posi_i -> count
        for (var _i = 0, verts_i_1 = verts_i; _i < verts_i_1.length; _i++) {
            var vert_i = verts_i_1[_i];
            var posi_i = this._geom.query.navVertToPosi(vert_i);
            if (!exist_posis_i_map.has(posi_i)) {
                exist_posis_i_map.set(posi_i, 0);
            }
            var vert_count = exist_posis_i_map.get(posi_i);
            exist_posis_i_map.set(posi_i, vert_count + 1);
        }
        // copy positions on the perimeter and make a map
        var old_to_new_posis_i_map = new Map();
        exist_posis_i_map.forEach(function (vert_count, old_posi_i) {
            var all_old_verts_i = _this._geom.query.navPosiToVert(old_posi_i);
            var all_vert_count = all_old_verts_i.length;
            if (vert_count !== all_vert_count) {
                if (!old_to_new_posis_i_map.has(old_posi_i)) {
                    var new_posi_i = _this.copyPosis(old_posi_i, true);
                    old_to_new_posis_i_map.set(old_posi_i, new_posi_i);
                }
            }
        });
        // now go through the geom again and rewire to the new posis
        for (var _a = 0, verts_i_2 = verts_i; _a < verts_i_2.length; _a++) {
            var vert_i = verts_i_2[_a];
            var old_posi_i = this._geom.query.navVertToPosi(vert_i);
            var new_posi_i = old_posi_i;
            if (old_to_new_posis_i_map.has(old_posi_i)) {
                new_posi_i = old_to_new_posis_i_map.get(old_posi_i);
            }
            // update the down arrays
            this._geom_arrays.dn_verts_posis[vert_i] = new_posi_i;
            // update the up arrays
            if (this._geom_arrays.up_posis_verts[new_posi_i] === undefined) {
                this._geom_arrays.up_posis_verts[new_posi_i] = [];
            }
            this._geom_arrays.up_posis_verts[new_posi_i].push(new_posi_i);
        }
        // return all the new positions
        return Array.from(old_to_new_posis_i_map.values());
    };
    return GIGeomAdd;
}());



/***/ }),

/***/ "./src/libs/geo-info/GIGeomQuery.ts":
/*!******************************************!*\
  !*** ./src/libs/geo-info/GIGeomQuery.ts ***!
  \******************************************/
/*! exports provided: GIGeomQuery */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GIGeomQuery", function() { return GIGeomQuery; });
/* harmony import */ var _common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./common */ "./src/libs/geo-info/common.ts");
/* harmony import */ var _id__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./id */ "./src/libs/geo-info/id.ts");


/**
 * Class for geometry.
 */
var GIGeomQuery = /** @class */ (function () {
    /**
     * Creates an object to store the geometry data.
     * @param geom_data The JSON data
     */
    function GIGeomQuery(geom, geom_arrays) {
        this._geom = geom;
        this._geom_arrays = geom_arrays;
    }
    // ============================================================================
    // Get entity indicies, and num ents
    // ============================================================================
    GIGeomQuery.prototype.getEnts = function (ent_type) {
        if (Object(_id__WEBPACK_IMPORTED_MODULE_1__["isPosi"])(ent_type)) {
            // TODO how to handle deleted positions
            return Array.from(Array(this._geom_arrays.num_posis).keys());
        }
        var geom_array_key = _common__WEBPACK_IMPORTED_MODULE_0__["EEntStrToGeomArray"][ent_type];
        var geom_array = this._geom_arrays[geom_array_key];
        // console.log("ent_type", ent_type);
        // console.log("geom_array_key", geom_array_key);
        // console.log("geom_array", geom_array);
        var ents_i = [];
        geom_array.forEach(function (entity, index) {
            if (entity !== null && entity !== undefined) { // skips deleted entities
                ents_i.push(index);
            }
        });
        return ents_i;
    };
    /**
     * Returns the number of entities, excluding deleted entities
     * @param ent_type
     */
    GIGeomQuery.prototype.numEnts = function (ent_type) {
        return this.getEnts(ent_type).length;
    };
    /**
     * Returns the number of entities, including deleted entities
     * @param ent_type
     */
    GIGeomQuery.prototype.nextEntIndex = function (ent_type) {
        if (Object(_id__WEBPACK_IMPORTED_MODULE_1__["isPosi"])(ent_type)) {
            // TODO how to handle deleted positions
            return this._geom_arrays.num_posis;
        }
        var geom_array_key = _common__WEBPACK_IMPORTED_MODULE_0__["EEntStrToGeomArray"][ent_type];
        var geom_array = this._geom_arrays[geom_array_key];
        return geom_array.length;
    };
    // ============================================================================
    // Util
    // ============================================================================
    /**
     * Check if an entity exists
     * @param index
     */
    GIGeomQuery.prototype.entExists = function (ent_type, index) {
        var geom_arrays_key = _common__WEBPACK_IMPORTED_MODULE_0__["EEntStrToGeomArray"][ent_type];
        return (this._geom_arrays[geom_arrays_key][index] !== undefined);
    };
    /**
     * Check if a wire is closed.
     * @param wire_i
     */
    GIGeomQuery.prototype.istWireClosed = function (wire_i) {
        // get the wire start and end verts
        var wire = this._geom_arrays.dn_wires_edges[wire_i];
        var num_edges = wire.length;
        var start_edge_i = wire[0];
        var end_edge_i = wire[num_edges - 1];
        var start_vert_i = this._geom.query.navEdgeToVert(start_edge_i)[0];
        var end_vert_i = this._geom.query.navEdgeToVert(end_edge_i)[1];
        // if start and end verts are the same, then wire is closed
        return (start_vert_i === end_vert_i);
    };
    /**
     * Returns the vertices.
     * For a closed wire, #vertices = #edges
     * For an open wire, #vertices = #edges + 1
     */
    GIGeomQuery.prototype.getWireVerts = function (wire_i) {
        var _this = this;
        var edges_i = this._geom_arrays.dn_wires_edges[wire_i];
        var verts_i = edges_i.map(function (edge_i) { return _this._geom_arrays.dn_edges_verts[edge_i][0]; });
        // if wire is open, then add final vertex
        if (this._geom_arrays.dn_edges_verts[edges_i[0]][0] !== this._geom_arrays.dn_edges_verts[edges_i[edges_i.length - 1]][1]) {
            verts_i.push(this._geom_arrays.dn_edges_verts[edges_i[edges_i.length - 1]][1]);
        }
        return verts_i;
    };
    /**
     * Get the parent of a collection.
     * @param wire_i
     */
    GIGeomQuery.prototype.getCollParent = function (coll_i) {
        return this._geom_arrays.dn_colls_objs[coll_i][0];
    };
    // ============================================================================
    // Navigate down the hierarchy
    // ============================================================================
    GIGeomQuery.prototype.navVertToPosi = function (vert_i) {
        return this._geom_arrays.dn_verts_posis[vert_i];
    };
    GIGeomQuery.prototype.navTriToVert = function (tri_i) {
        return this._geom_arrays.dn_tris_verts[tri_i];
    };
    GIGeomQuery.prototype.navEdgeToVert = function (edge_i) {
        return this._geom_arrays.dn_edges_verts[edge_i];
    };
    GIGeomQuery.prototype.navWireToEdge = function (wire_i) {
        return this._geom_arrays.dn_wires_edges[wire_i];
    };
    GIGeomQuery.prototype.navFaceToWire = function (face_i) {
        return this._geom_arrays.dn_faces_wirestris[face_i][0];
    };
    GIGeomQuery.prototype.navFaceToTri = function (face_i) {
        return this._geom_arrays.dn_faces_wirestris[face_i][1];
    };
    GIGeomQuery.prototype.navPointToVert = function (point_i) {
        return this._geom_arrays.dn_points_verts[point_i];
    };
    GIGeomQuery.prototype.navPlineToWire = function (line_i) {
        return this._geom_arrays.dn_plines_wires[line_i];
    };
    GIGeomQuery.prototype.navPgonToFace = function (pgon_i) {
        return this._geom_arrays.dn_pgons_faces[pgon_i];
    };
    GIGeomQuery.prototype.navCollToPoint = function (coll_i) {
        return this._geom_arrays.dn_colls_objs[coll_i][1]; // coll points
    };
    GIGeomQuery.prototype.navCollToPline = function (coll_i) {
        return this._geom_arrays.dn_colls_objs[coll_i][2]; // coll lines
    };
    GIGeomQuery.prototype.navCollToPgon = function (coll_i) {
        return this._geom_arrays.dn_colls_objs[coll_i][3]; // coll pgons
    };
    GIGeomQuery.prototype.navCollToColl = function (coll_i) {
        return coll_i[0]; // coll parent
    };
    // ============================================================================
    // Navigate up the hierarchy
    // ============================================================================
    GIGeomQuery.prototype.navPosiToVert = function (posi_i) {
        return this._geom_arrays.up_posis_verts[posi_i];
    };
    GIGeomQuery.prototype.navVertToTri = function (vert_i) {
        return this._geom_arrays.up_verts_tris[vert_i];
    };
    GIGeomQuery.prototype.navVertToEdge = function (vert_i) {
        return this._geom_arrays.up_verts_edges[vert_i];
    };
    GIGeomQuery.prototype.navTriToFace = function (tri_i) {
        return this._geom_arrays.up_tris_faces[tri_i];
    };
    GIGeomQuery.prototype.navEdgeToWire = function (edge_i) {
        return this._geom_arrays.up_edges_wires[edge_i];
    };
    GIGeomQuery.prototype.navWireToFace = function (wire_i) {
        return this._geom_arrays.up_wires_faces[wire_i];
    };
    GIGeomQuery.prototype.navVertToPoint = function (vert_i) {
        return this._geom_arrays.up_verts_points[vert_i];
    };
    GIGeomQuery.prototype.navWireToPline = function (wire_i) {
        return this._geom_arrays.up_wires_plines[wire_i];
    };
    GIGeomQuery.prototype.navFaceToPgon = function (face) {
        return this._geom_arrays.up_faces_pgons[face];
    };
    GIGeomQuery.prototype.navPointToColl = function (point_i) {
        return this._geom_arrays.up_points_colls[point_i];
    };
    GIGeomQuery.prototype.navPlineToColl = function (line_i) {
        return this._geom_arrays.up_plines_colls[line_i];
    };
    GIGeomQuery.prototype.navPgonToColl = function (pgon_i) {
        return this._geom_arrays.up_pgons_colls[pgon_i];
    };
    // ============================================================================
    // Navigate from any level to ? (up or down)
    // ============================================================================
    /**
     * Navigate from any level to the colls
     * @param ent_type
     * @param index
     */
    GIGeomQuery.prototype.navAnyToColl = function (ent_type, index) {
        var _this = this;
        if (Object(_id__WEBPACK_IMPORTED_MODULE_1__["isColl"])(ent_type)) {
            return [index];
        }
        var points_i = this.navAnyToPoint(ent_type, index);
        var colls1_i = [].concat.apply([], points_i.map(function (point_i) { return _this.navPointToColl(point_i); }));
        var plines_i = this.navAnyToPline(ent_type, index);
        var colls2_i = [].concat.apply([], plines_i.map(function (pline_i) { return _this.navPlineToColl(pline_i); }));
        var pgons_i = this.navAnyToPgon(ent_type, index);
        var colls3_i = [].concat.apply([], pgons_i.map(function (pgon_i) { return _this.navPgonToColl(pgon_i); }));
        return Array.from(new Set(colls1_i.concat(colls2_i, colls3_i))).filter(function (coll_i) { return coll_i !== undefined; }); // remove duplicates
    };
    /**
     * Navigate from any level to the pgons
     * @param ent_type
     * @param index
     */
    GIGeomQuery.prototype.navAnyToPgon = function (ent_type, index) {
        var _this = this;
        if (Object(_id__WEBPACK_IMPORTED_MODULE_1__["isPgon"])(ent_type)) {
            return [index];
        }
        var faces_i = this.navAnyToFace(ent_type, index);
        return faces_i.map(function (face_i) { return _this.navFaceToPgon(face_i); }).filter(function (pgon_i) { return pgon_i !== undefined; });
    };
    /**
     * Navigate from any level to the plines
     * @param ent_type
     * @param index
     */
    GIGeomQuery.prototype.navAnyToPline = function (ent_type, index) {
        var _this = this;
        if (Object(_id__WEBPACK_IMPORTED_MODULE_1__["isPline"])(ent_type)) {
            return [index];
        }
        var wires_i = this.navAnyToWire(ent_type, index);
        return wires_i.map(function (wire_i) { return _this.navWireToPline(wire_i); }).filter(function (pline_i) { return pline_i !== undefined; });
    };
    /**
     * Navigate from any level to the points
     * @param ent_type
     * @param index
     */
    GIGeomQuery.prototype.navAnyToPoint = function (ent_type, index) {
        var _this = this;
        if (Object(_id__WEBPACK_IMPORTED_MODULE_1__["isPoint"])(ent_type)) {
            return [index];
        }
        var verts_i = this.navAnyToVert(ent_type, index);
        return verts_i.map(function (vert_i) { return _this.navVertToPoint(vert_i); }).filter(function (point_i) { return point_i !== undefined; });
    };
    /**
     * Navigate from any level to the faces
     * @param ent_type
     * @param index
     */
    GIGeomQuery.prototype.navAnyToFace = function (ent_type, index) {
        var _this = this;
        if (Object(_id__WEBPACK_IMPORTED_MODULE_1__["isPosi"])(ent_type)) {
            var verts_i = this.navPosiToVert(index);
            return [].concat.apply([], verts_i.map(function (vert_i) { return _this.navAnyToFace(_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].VERT, vert_i); }));
        }
        else if (Object(_id__WEBPACK_IMPORTED_MODULE_1__["isVert"])(ent_type)) {
            var edges_i = this.navVertToEdge(index);
            return [].concat.apply([], edges_i.map(function (edge_i) { return _this.navAnyToFace(_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].EDGE, edge_i); }));
        }
        else if (Object(_id__WEBPACK_IMPORTED_MODULE_1__["isTri"])(ent_type)) {
            return [this.navTriToFace(index)];
        }
        else if (Object(_id__WEBPACK_IMPORTED_MODULE_1__["isEdge"])(ent_type)) {
            var wire_i = this.navEdgeToWire(index);
            return this.navAnyToFace(_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].WIRE, wire_i);
        }
        else if (Object(_id__WEBPACK_IMPORTED_MODULE_1__["isWire"])(ent_type)) {
            return [this.navWireToFace(index)];
        }
        else if (Object(_id__WEBPACK_IMPORTED_MODULE_1__["isFace"])(ent_type)) { // target
            return [index];
        }
        else if (Object(_id__WEBPACK_IMPORTED_MODULE_1__["isPoint"])(ent_type)) {
            return [];
        }
        else if (Object(_id__WEBPACK_IMPORTED_MODULE_1__["isPline"])(ent_type)) {
            return [];
        }
        else if (Object(_id__WEBPACK_IMPORTED_MODULE_1__["isPgon"])(ent_type)) {
            return [this.navPgonToFace(index)];
        }
        else if (Object(_id__WEBPACK_IMPORTED_MODULE_1__["isColl"])(ent_type)) {
            var pgons_i = this.navCollToPgon(index);
            return pgons_i.map(function (pgon_i) { return _this.navPgonToFace(pgon_i); });
        }
        throw new Error('Bad navigation: ' + ent_type + index);
    };
    /**
     * Navigate from any level to the wires
     * @param ent_type
     * @param index
     */
    GIGeomQuery.prototype.navAnyToWire = function (ent_type, index) {
        var _this = this;
        if (Object(_id__WEBPACK_IMPORTED_MODULE_1__["isPosi"])(ent_type)) {
            var verts_i = this.navPosiToVert(index);
            return [].concat.apply([], verts_i.map(function (vert_i) { return _this.navAnyToWire(_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].VERT, vert_i); }));
        }
        else if (Object(_id__WEBPACK_IMPORTED_MODULE_1__["isVert"])(ent_type)) {
            var edges_i = this.navVertToEdge(index);
            return [].concat.apply([], edges_i.map(function (edge_i) { return _this.navEdgeToWire(edge_i); }));
        }
        else if (Object(_id__WEBPACK_IMPORTED_MODULE_1__["isTri"])(ent_type)) {
            return [];
        }
        else if (Object(_id__WEBPACK_IMPORTED_MODULE_1__["isEdge"])(ent_type)) {
            return [this.navEdgeToWire(index)];
        }
        else if (Object(_id__WEBPACK_IMPORTED_MODULE_1__["isWire"])(ent_type)) { // target
            return [index];
        }
        else if (Object(_id__WEBPACK_IMPORTED_MODULE_1__["isFace"])(ent_type)) {
            return this.navFaceToWire(index);
        }
        else if (Object(_id__WEBPACK_IMPORTED_MODULE_1__["isPoint"])(ent_type)) {
            return [];
        }
        else if (Object(_id__WEBPACK_IMPORTED_MODULE_1__["isPline"])(ent_type)) {
            return [this.navPlineToWire(index)];
        }
        else if (Object(_id__WEBPACK_IMPORTED_MODULE_1__["isPgon"])(ent_type)) {
            var face_i = this.navPgonToFace(index);
            return this.navFaceToWire(face_i);
        }
        else if (Object(_id__WEBPACK_IMPORTED_MODULE_1__["isColl"])(ent_type)) {
            var plines_i = this.navCollToPline(index);
            var wires1_i = [].concat.apply([], plines_i.map(function (pline_i) { return _this.navAnyToWire(_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].PLINE, pline_i); }));
            var pgons_i = this.navCollToPgon(index);
            var wires2_i = [].concat.apply([], pgons_i.map(function (pgon_i) { return _this.navAnyToWire(_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].PGON, pgon_i); }));
            return wires1_i.concat(wires2_i);
        }
        throw new Error('Bad navigation: ' + ent_type + index);
    };
    /**
     * Navigate from any level to the edges
     * @param ent_type
     * @param index
     */
    GIGeomQuery.prototype.navAnyToEdge = function (ent_type, index) {
        var _this = this;
        if (Object(_id__WEBPACK_IMPORTED_MODULE_1__["isPosi"])(ent_type)) {
            var verts_i = this.navPosiToVert(index);
            return [].concat.apply([], verts_i.map(function (vert_i) { return _this.navVertToEdge(vert_i); }));
        }
        else if (Object(_id__WEBPACK_IMPORTED_MODULE_1__["isVert"])(ent_type)) {
            return this.navVertToEdge(index);
        }
        else if (Object(_id__WEBPACK_IMPORTED_MODULE_1__["isTri"])(ent_type)) {
            return [];
        }
        else if (Object(_id__WEBPACK_IMPORTED_MODULE_1__["isEdge"])(ent_type)) {
            return [index];
        }
        else if (Object(_id__WEBPACK_IMPORTED_MODULE_1__["isWire"])(ent_type)) {
            return this.navWireToEdge(index);
        }
        else if (Object(_id__WEBPACK_IMPORTED_MODULE_1__["isFace"])(ent_type)) {
            var wires_i = this.navFaceToWire(index);
            return [].concat.apply([], wires_i.map(function (wire_i) { return _this.navWireToEdge(wire_i); }));
        }
        else if (Object(_id__WEBPACK_IMPORTED_MODULE_1__["isPoint"])(ent_type)) {
            return [];
        }
        else if (Object(_id__WEBPACK_IMPORTED_MODULE_1__["isPline"])(ent_type)) {
            var wire_i = this.navPlineToWire(index);
            return this.navAnyToEdge(_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].WIRE, wire_i);
        }
        else if (Object(_id__WEBPACK_IMPORTED_MODULE_1__["isPgon"])(ent_type)) {
            var face_i = this.navPgonToFace(index);
            return this.navAnyToEdge(_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].FACE, face_i);
        }
        else if (Object(_id__WEBPACK_IMPORTED_MODULE_1__["isColl"])(ent_type)) {
            var plines_i = this.navCollToPline(index);
            var edges1_i = [].concat(plines_i.map(function (pline_i) { return _this.navAnyToEdge(_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].PLINE, pline_i); }));
            var pgons_i = this.navCollToPgon(index);
            var edges2_i = [].concat(pgons_i.map(function (pgon_i) { return _this.navAnyToEdge(_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].PGON, pgon_i); }));
            return edges1_i.concat(edges2_i);
        }
        throw new Error('Bad navigation: ' + ent_type + index);
    };
    /**
     * Navigate from any level to the vertices
     * @param ent_type
     * @param index
     */
    GIGeomQuery.prototype.navAnyToVert = function (ent_type, index) {
        var _this = this;
        if (Object(_id__WEBPACK_IMPORTED_MODULE_1__["isPosi"])(ent_type)) {
            return this.navPosiToVert(index);
        }
        else if (Object(_id__WEBPACK_IMPORTED_MODULE_1__["isVert"])(ent_type)) {
            return [index];
        }
        else if (Object(_id__WEBPACK_IMPORTED_MODULE_1__["isTri"])(ent_type)) {
            return this.navTriToVert(index);
        }
        else if (Object(_id__WEBPACK_IMPORTED_MODULE_1__["isEdge"])(ent_type)) {
            return this.navEdgeToVert(index);
        }
        else if (Object(_id__WEBPACK_IMPORTED_MODULE_1__["isWire"])(ent_type)) {
            return this.getWireVerts(index); // avoids duplicate verts
        }
        else if (Object(_id__WEBPACK_IMPORTED_MODULE_1__["isFace"])(ent_type)) {
            var wires_i = this.navFaceToWire(index);
            return [].concat.apply([], wires_i.map(function (wire_i) { return _this.getWireVerts(wire_i); })); // avoids duplicate verts
        }
        else if (Object(_id__WEBPACK_IMPORTED_MODULE_1__["isPoint"])(ent_type)) {
            return [this.navPointToVert(index)];
        }
        else if (Object(_id__WEBPACK_IMPORTED_MODULE_1__["isPline"])(ent_type)) {
            var wire_i = this.navPlineToWire(index);
            return this.navAnyToVert(_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].WIRE, wire_i);
        }
        else if (Object(_id__WEBPACK_IMPORTED_MODULE_1__["isPgon"])(ent_type)) {
            var face_i = this.navPgonToFace(index);
            return this.navAnyToVert(_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].FACE, face_i);
        }
        else if (Object(_id__WEBPACK_IMPORTED_MODULE_1__["isColl"])(ent_type)) {
            var points_i = this.navCollToPoint(index);
            var verts1_i = [].concat(points_i.map(function (point_i) { return _this.navAnyToVert(_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].POINT, point_i); }));
            var plines_i = this.navCollToPline(index);
            var verts2_i = [].concat(plines_i.map(function (pline_i) { return _this.navAnyToVert(_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].PLINE, pline_i); }));
            var pgons_i = this.navCollToPgon(index);
            var verts3_i = [].concat(pgons_i.map(function (pgon_i) { return _this.navAnyToVert(_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].PGON, pgon_i); }));
            return verts1_i.concat(verts2_i, verts3_i);
        }
        throw new Error('Bad navigation: ' + ent_type + index);
    };
    /**
     * Navigate from any level to the positions
     * @param ent_type
     * @param index
     */
    GIGeomQuery.prototype.navAnyToPosi = function (ent_type, index) {
        var _this = this;
        if (Object(_id__WEBPACK_IMPORTED_MODULE_1__["isPosi"])(ent_type)) {
            return [index];
        }
        var verts_i = this.navAnyToVert(ent_type, index);
        var posis_i = verts_i.map(function (vert_i) { return _this.navVertToPosi(vert_i); });
        return Array.from(new Set(posis_i)); // remove duplicates
    };
    // ============================================================================
    // Navigate from any to any, general method
    // ============================================================================
    /**
     * Navigate from any level down to the positions
     * @param index
     */
    GIGeomQuery.prototype.navAnyToAny = function (from_ets, to_ets, index) {
        // same level
        if (from_ets === to_ets) {
            return [index];
        }
        // from -> to
        switch (to_ets) {
            case _common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].POSI:
                return this.navAnyToPosi(from_ets, index);
            case _common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].VERT:
                return this.navAnyToVert(from_ets, index);
            case _common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].EDGE:
                return this.navAnyToEdge(from_ets, index);
            case _common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].WIRE:
                return this.navAnyToWire(from_ets, index);
            case _common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].FACE:
                return this.navAnyToFace(from_ets, index);
            case _common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].POINT:
                return this.navAnyToPoint(from_ets, index);
            case _common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].PLINE:
                return this.navAnyToPline(from_ets, index);
            case _common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].PGON:
                return this.navAnyToPgon(from_ets, index);
            case _common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].COLL:
                return this.navAnyToColl(from_ets, index);
            default:
                throw new Error('Bad navigation: ' + to_ets + index);
        }
    };
    // ============================================================================
    // Other methods
    // ============================================================================
    /**
     * Get the welded neighbour vertices of a set of vertices.
     * @param ent_type
     * @param index
     */
    GIGeomQuery.prototype.neighbours = function (from_ets, to_ets, index) {
        var verts_i = this.navAnyToVert(from_ets, index);
        var posis_i = this.navAnyToPosi(from_ets, index);
        var neighbour_ents_i = new Set();
        for (var _i = 0, posis_i_1 = posis_i; _i < posis_i_1.length; _i++) {
            var posi_i = posis_i_1[_i];
            var found_verts_i = this.navPosiToVert(posi_i);
            for (var _a = 0, found_verts_i_1 = found_verts_i; _a < found_verts_i_1.length; _a++) {
                var found_vert_i = found_verts_i_1[_a];
                if (verts_i.indexOf(found_vert_i) === -1) {
                    var found_ents_i = this.navAnyToAny(_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].VERT, to_ets, found_vert_i);
                    found_ents_i.forEach(function (found_ent_i) { return neighbour_ents_i.add(found_ent_i); });
                }
            }
        }
        return Array.from(neighbour_ents_i);
    };
    return GIGeomQuery;
}());



/***/ }),

/***/ "./src/libs/geo-info/GIGeomThreejs.ts":
/*!********************************************!*\
  !*** ./src/libs/geo-info/GIGeomThreejs.ts ***!
  \********************************************/
/*! exports provided: GIGeomThreejs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GIGeomThreejs", function() { return GIGeomThreejs; });
/**
 * Class for geometry.
 */
var GIGeomThreejs = /** @class */ (function () {
    /**
     * Creates an object to store the geometry data.
     * @param geom The GIGeom obect
     * @param geom_arrays The geometry arrays
     */
    function GIGeomThreejs(geom, geom_arrays) {
        this._geom = geom;
        this._geom_arrays = geom_arrays;
    }
    // ============================================================================
    // ThreeJS
    // Get arrays for threejs, these retrun arrays of indexes to positions
    // For a method to get the array of positions, see the attrib class
    // getSeqCoords()
    // ============================================================================
    /**
     * Returns a flat list of all vertices.
     * The indices in the list point to the sequential coordinates.
     */
    GIGeomThreejs.prototype.get3jsVerts = function () {
        return this._geom_arrays.dn_verts_posis;
    };
    /**
     * Returns a flat list of the sequence of verices for all the triangles.
     * This list will be assumed to be in pairs.
     * The indices in the list point to the vertices.
     */
    GIGeomThreejs.prototype.get3jsTris = function () {
        // @ts-ignore
        return this._geom_arrays.dn_tris_verts.flat(1);
        // return [].concat(...this._geom_arrays.dn_tris_verts);
    };
    /**
     * Returns a flat list of the sequence of verices for all the edges.
     * This list will be assumed to be in pairs.
     * The indices in the list point to the vertices.
     */
    GIGeomThreejs.prototype.get3jsEdges = function () {
        // @ts-ignore
        return this._geom_arrays.dn_edges_verts.flat(1);
        // return [].concat(...this._geom_arrays.dn_edges_verts);
    };
    /**
     * Returns a flat list of the sequence of verices for all the points.
     * The indices in the list point to the vertices.
     */
    GIGeomThreejs.prototype.get3jsPoints = function () {
        return this._geom_arrays.dn_points_verts;
    };
    return GIGeomThreejs;
}());



/***/ }),

/***/ "./src/libs/geo-info/GIModel.ts":
/*!**************************************!*\
  !*** ./src/libs/geo-info/GIModel.ts ***!
  \**************************************/
/*! exports provided: GIModel */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GIModel", function() { return GIModel; });
/* harmony import */ var _GIGeom__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./GIGeom */ "./src/libs/geo-info/GIGeom.ts");
/* harmony import */ var _GIAttribs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./GIAttribs */ "./src/libs/geo-info/GIAttribs.ts");
/* harmony import */ var _common__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./common */ "./src/libs/geo-info/common.ts");



/**
 * Geo-info model class.
 */
var GIModel = /** @class */ (function () {
    /**
     * Creates a model.
     * @param model_data The JSON data
     */
    function GIModel(model_data) {
        this.geom = new _GIGeom__WEBPACK_IMPORTED_MODULE_0__["GIGeom"](this);
        this.attribs = new _GIAttribs__WEBPACK_IMPORTED_MODULE_1__["GIAttribs"](this);
        if (model_data) {
            this.addData(model_data);
        }
    }
    /**
     * Sets the data in this model from JSON data.
     * The existing data in the model is deleted.
     * @param model_data The JSON data.
     */
    GIModel.prototype.addData = function (model_data) {
        this.attribs.add.addData(model_data); // warning: must be before this.geom.add.addData()
        return this.geom.add.addData(model_data.geometry);
    };
    /**
     * Adds data to this model from a GI model.
     * The existing data in the model is not deleted.
     * @param model_data The GI model.
     */
    GIModel.prototype.merge = function (model) {
        return this.addData(model.getData());
    };
    /**
     * Returns the JSON data for this model.
     */
    GIModel.prototype.getData = function () {
        return {
            geometry: this.geom.getData(),
            attributes: this.attribs.getData()
        };
    };
    /**
     * Returns the JSON data for the geometry in this model.
     */
    GIModel.prototype.getGeomData = function () {
        return this.geom.getData();
    };
    /**
     * Returns the JSON data for the attributes in this model.
     */
    GIModel.prototype.getAttribsData = function () {
        return this.attribs.getData();
    };
    /**
     * Generate a default color if none exists.
     */
    GIModel.prototype._generateColors = function () {
        var colors = [];
        var numEnts = this.geom.query.numEnts(_common__WEBPACK_IMPORTED_MODULE_2__["EEntType"].VERT);
        for (var index = 0; index < numEnts; index++) {
            colors.push(1, 1, 1);
        }
        return colors;
    };
    /**
     * Generate default normals if non exist.
     */
    GIModel.prototype._generateNormals = function () {
        var normals = [];
        var numEnts = this.geom.query.numEnts(_common__WEBPACK_IMPORTED_MODULE_2__["EEntType"].VERT);
        for (var index = 0; index < numEnts; index++) {
            normals.push(0, 0, 0);
        }
        return normals;
    };
    /**
     * Returns arrays for visualization in Threejs.
     */
    GIModel.prototype.get3jsData = function () {
        // get the attribs at the vertex level
        var coords_values = this.attribs.threejs.get3jsSeqVertsCoords();
        var normals_values = this.attribs.threejs.get3jsSeqVertsAttrib(_common__WEBPACK_IMPORTED_MODULE_2__["EAttribNames"].NORMAL);
        var colors_values = this.attribs.threejs.get3jsSeqVertsAttrib(_common__WEBPACK_IMPORTED_MODULE_2__["EAttribNames"].COLOR);
        // add normals and colours
        if (!normals_values) {
            normals_values = this._generateNormals();
        }
        if (!colors_values) {
            colors_values = this._generateColors();
        }
        // get the indices of the vertices for edges, points and triangles
        var tris_verts_i = this.geom.threejs.get3jsTris();
        var edges_verts_i = this.geom.threejs.get3jsEdges();
        var points_verts_i = this.geom.threejs.get3jsPoints();
        // return an object containing all the data
        return {
            positions: coords_values,
            normals: normals_values,
            colors: colors_values,
            point_indices: points_verts_i,
            edge_indices: edges_verts_i,
            triangle_indices: tris_verts_i
        };
    };
    return GIModel;
}());



/***/ }),

/***/ "./src/libs/geo-info/common.ts":
/*!*************************************!*\
  !*** ./src/libs/geo-info/common.ts ***!
  \*************************************/
/*! exports provided: XYPLANE, YZPLANE, ZXPLANE, YXPLANE, ZYPLANE, XZPLANE, EEntType, EEntTypeStr, EEntStrToGeomArray, EAttribNames, EQueryOperatorTypes, ESort, EAttribDataTypeStrs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "XYPLANE", function() { return XYPLANE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "YZPLANE", function() { return YZPLANE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ZXPLANE", function() { return ZXPLANE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "YXPLANE", function() { return YXPLANE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ZYPLANE", function() { return ZYPLANE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "XZPLANE", function() { return XZPLANE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EEntType", function() { return EEntType; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EEntTypeStr", function() { return EEntTypeStr; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EEntStrToGeomArray", function() { return EEntStrToGeomArray; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EAttribNames", function() { return EAttribNames; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EQueryOperatorTypes", function() { return EQueryOperatorTypes; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ESort", function() { return ESort; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EAttribDataTypeStrs", function() { return EAttribDataTypeStrs; });
// some constants
var XYPLANE = [[0, 0, 0], [1, 0, 0], [0, 1, 0]];
var YZPLANE = [[0, 0, 0], [0, 1, 0], [0, 0, 1]];
var ZXPLANE = [[0, 0, 0], [0, 0, 1], [1, 0, 0]];
var YXPLANE = [[0, 0, 0], [0, 1, 0], [1, 0, 0]];
var ZYPLANE = [[0, 0, 0], [0, 0, 1], [0, 1, 0]];
var XZPLANE = [[0, 0, 0], [1, 0, 0], [0, 0, 1]];
// Types of entities
var EEntType;
(function (EEntType) {
    EEntType[EEntType["POSI"] = 0] = "POSI";
    EEntType[EEntType["TRI"] = 1] = "TRI";
    EEntType[EEntType["VERT"] = 2] = "VERT";
    EEntType[EEntType["EDGE"] = 3] = "EDGE";
    EEntType[EEntType["WIRE"] = 4] = "WIRE";
    EEntType[EEntType["FACE"] = 5] = "FACE";
    EEntType[EEntType["POINT"] = 6] = "POINT";
    EEntType[EEntType["PLINE"] = 7] = "PLINE";
    EEntType[EEntType["PGON"] = 8] = "PGON";
    EEntType[EEntType["COLL"] = 9] = "COLL";
})(EEntType || (EEntType = {}));
// Types of entities
var EEntTypeStr;
(function (EEntTypeStr) {
    EEntTypeStr[EEntTypeStr["ps"] = 0] = "ps";
    EEntTypeStr[EEntTypeStr["_t"] = 1] = "_t";
    EEntTypeStr[EEntTypeStr["_v"] = 2] = "_v";
    EEntTypeStr[EEntTypeStr["_e"] = 3] = "_e";
    EEntTypeStr[EEntTypeStr["_w"] = 4] = "_w";
    EEntTypeStr[EEntTypeStr["_f"] = 5] = "_f";
    EEntTypeStr[EEntTypeStr["pt"] = 6] = "pt";
    EEntTypeStr[EEntTypeStr["pl"] = 7] = "pl";
    EEntTypeStr[EEntTypeStr["pg"] = 8] = "pg";
    EEntTypeStr[EEntTypeStr["co"] = 9] = "co";
})(EEntTypeStr || (EEntTypeStr = {}));
var EEntStrToGeomArray;
(function (EEntStrToGeomArray) {
    EEntStrToGeomArray[EEntStrToGeomArray["posis"] = 0] = "posis";
    EEntStrToGeomArray[EEntStrToGeomArray["dn_tris_verts"] = 1] = "dn_tris_verts";
    EEntStrToGeomArray[EEntStrToGeomArray["dn_verts_posis"] = 2] = "dn_verts_posis";
    EEntStrToGeomArray[EEntStrToGeomArray["dn_edges_verts"] = 3] = "dn_edges_verts";
    EEntStrToGeomArray[EEntStrToGeomArray["dn_wires_edges"] = 4] = "dn_wires_edges";
    EEntStrToGeomArray[EEntStrToGeomArray["dn_faces_wirestris"] = 5] = "dn_faces_wirestris";
    EEntStrToGeomArray[EEntStrToGeomArray["dn_points_verts"] = 6] = "dn_points_verts";
    EEntStrToGeomArray[EEntStrToGeomArray["dn_plines_wires"] = 7] = "dn_plines_wires";
    EEntStrToGeomArray[EEntStrToGeomArray["dn_pgons_faces"] = 8] = "dn_pgons_faces";
    EEntStrToGeomArray[EEntStrToGeomArray["dn_colls_objs"] = 9] = "dn_colls_objs";
})(EEntStrToGeomArray || (EEntStrToGeomArray = {}));
// export interface IGIAttribMap {
//     // TODO
// }
// export enum EEntStrToAttribMap {
//     ps = 'posis',
//     _v = 'verts',
//     _e = 'edges',
//     _w = 'wires',
//     _f = 'faces',
//     pt = 'points',
//     pl = 'plines',
//     pg = 'pgons',
//     co = 'colls'
// }
// Names of attributes
var EAttribNames;
(function (EAttribNames) {
    EAttribNames["COORDS"] = "xyz";
    EAttribNames["NORMAL"] = "normal";
    EAttribNames["COLOR"] = "color";
    EAttribNames["TEXTURE"] = "texture";
    EAttribNames["NAME"] = "name";
})(EAttribNames || (EAttribNames = {}));
/**
 * The types of operators that can be used in a query.
 */
var EQueryOperatorTypes;
(function (EQueryOperatorTypes) {
    EQueryOperatorTypes["IS_EQUAL"] = "==";
    EQueryOperatorTypes["IS_NOT_EQUAL"] = "!=";
    EQueryOperatorTypes["IS_GREATER_OR_EQUAL"] = ">=";
    EQueryOperatorTypes["IS_LESS_OR_EQUAL"] = "<=";
    EQueryOperatorTypes["IS_GREATER"] = ">";
    EQueryOperatorTypes["IS_LESS"] = "<";
    EQueryOperatorTypes["EQUAL"] = "=";
})(EQueryOperatorTypes || (EQueryOperatorTypes = {}));
var ESort;
(function (ESort) {
    ESort["DESCENDING"] = "descending";
    ESort["ASCENDING"] = "ascending";
})(ESort || (ESort = {}));
// ================================================================================================
// JSON DATA
// ================================================================================================
// enums
var EAttribDataTypeStrs;
(function (EAttribDataTypeStrs) {
    // INT = 'Int',
    EAttribDataTypeStrs["FLOAT"] = "Float";
    EAttribDataTypeStrs["STRING"] = "String";
})(EAttribDataTypeStrs || (EAttribDataTypeStrs = {}));


/***/ }),

/***/ "./src/libs/geo-info/export.ts":
/*!*************************************!*\
  !*** ./src/libs/geo-info/export.ts ***!
  \*************************************/
/*! exports provided: exportObj */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "exportObj", function() { return exportObj; });
/* harmony import */ var _common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./common */ "./src/libs/geo-info/common.ts");

/**
 * Export to obj
 */
function exportObj(model) {
    var h_str = '# File generated by Mobius.\n';
    // the order of data is 1) vertex, 2) texture, 3) normal
    var v_str = '';
    var vt_str = '';
    var vn_str = '';
    var f_str = '';
    var l_str = '';
    // do we have color, texture, normal?
    var has_color_attrib = model.attribs.query.hasAttrib(_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].VERT, _common__WEBPACK_IMPORTED_MODULE_0__["EAttribNames"].COLOR);
    var has_normal_attrib = model.attribs.query.hasAttrib(_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].VERT, _common__WEBPACK_IMPORTED_MODULE_0__["EAttribNames"].NORMAL);
    var has_texture_attrib = model.attribs.query.hasAttrib(_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].VERT, _common__WEBPACK_IMPORTED_MODULE_0__["EAttribNames"].TEXTURE);
    var posis_i = model.geom.query.getEnts(_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].POSI);
    var verts_i = model.geom.query.getEnts(_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].VERT);
    // positions
    if (has_color_attrib) {
        for (var _i = 0, verts_i_1 = verts_i; _i < verts_i_1.length; _i++) {
            var vert_i = verts_i_1[_i];
            var color = model.attribs.query.getAttribValue(_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].VERT, _common__WEBPACK_IMPORTED_MODULE_0__["EAttribNames"].COLOR, vert_i);
            var coord = model.attribs.query.getVertCoords(vert_i);
            v_str += 'v ' + coord.map(function (v) { return v.toString(); }).join(' ') + color.map(function (c) { return c.toString(); }).join(' ') + '\n';
        }
    }
    else {
        for (var _a = 0, posis_i_1 = posis_i; _a < posis_i_1.length; _a++) {
            var posi_i = posis_i_1[_a];
            var coord = model.attribs.query.getPosiCoords(posi_i);
            v_str += 'v ' + coord.map(function (v) { return v.toString(); }).join(' ') + '\n';
        }
    }
    // textures, vt
    if (has_texture_attrib) {
        for (var _b = 0, verts_i_2 = verts_i; _b < verts_i_2.length; _b++) {
            var vert_i = verts_i_2[_b];
            var texture = model.attribs.query.getAttribValue(_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].VERT, _common__WEBPACK_IMPORTED_MODULE_0__["EAttribNames"].TEXTURE, vert_i);
            vt_str += 'v ' + texture.map(function (v) { return v.toString(); }).join(' ') + '\n';
        }
    }
    // normals, vn
    if (has_normal_attrib) {
        for (var _c = 0, verts_i_3 = verts_i; _c < verts_i_3.length; _c++) {
            var vert_i = verts_i_3[_c];
            var normal = model.attribs.query.getAttribValue(_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].VERT, _common__WEBPACK_IMPORTED_MODULE_0__["EAttribNames"].NORMAL, vert_i);
            vn_str += 'v ' + normal.map(function (v) { return v.toString(); }).join(' ') + '\n';
        }
    }
    // polygons, f
    var pgons_i = model.geom.query.getEnts(_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].PGON);
    for (var _d = 0, pgons_i_1 = pgons_i; _d < pgons_i_1.length; _d++) {
        var pgon_i = pgons_i_1[_d];
        var pgon_verts_i_outer = model.geom.query.navAnyToVert(_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].PGON, pgon_i);
        // const verts_i_outer = verts_i[0];
        // TODO what about holes
        if (has_texture_attrib) {
            // TODO
        }
        if (has_normal_attrib) {
            // TODO
        }
        if (has_color_attrib) {
            f_str += 'f ' + pgon_verts_i_outer.map(function (vert_i) { return (vert_i + 1).toString(); }).join(' ') + '\n';
        }
        else {
            f_str += 'f ' + pgon_verts_i_outer.map(function (vert_i) { return (model.geom.query.navVertToPosi(vert_i) + 1).toString(); }).join(' ') + '\n';
        }
    }
    // polylines, l
    var plines_i = model.geom.query.getEnts(_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].PLINE);
    for (var _e = 0, plines_i_1 = plines_i; _e < plines_i_1.length; _e++) {
        var pline_i = plines_i_1[_e];
        var pline_verts_i = model.geom.query.navAnyToVert(_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].PLINE, pline_i);
        l_str += 'l ' + pline_verts_i.map(function (vert_i) { return (vert_i + 1).toString(); }).join(' ') + '\n';
    }
    // result
    return h_str + v_str + v_str + vt_str + vn_str + f_str + l_str;
}


/***/ }),

/***/ "./src/libs/geo-info/id.ts":
/*!*********************************!*\
  !*** ./src/libs/geo-info/id.ts ***!
  \*********************************/
/*! exports provided: getArrDepth, idsMakeFromIndicies, idsMake, idsBreak, idIndicies, isPosi, isVert, isTri, isEdge, isWire, isFace, isPoint, isPline, isPgon, isColl, isTopo, isObj, isDim0, isDim1, isDim2 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getArrDepth", function() { return getArrDepth; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "idsMakeFromIndicies", function() { return idsMakeFromIndicies; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "idsMake", function() { return idsMake; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "idsBreak", function() { return idsBreak; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "idIndicies", function() { return idIndicies; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isPosi", function() { return isPosi; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isVert", function() { return isVert; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isTri", function() { return isTri; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isEdge", function() { return isEdge; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isWire", function() { return isWire; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isFace", function() { return isFace; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isPoint", function() { return isPoint; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isPline", function() { return isPline; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isPgon", function() { return isPgon; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isColl", function() { return isColl; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isTopo", function() { return isTopo; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isObj", function() { return isObj; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isDim0", function() { return isDim0; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isDim1", function() { return isDim1; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isDim2", function() { return isDim2; });
/* harmony import */ var _common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./common */ "./src/libs/geo-info/common.ts");

// ============================================================================
function getArrDepth(arr) {
    if (Array.isArray(arr)) {
        return 1 + getArrDepth(arr[0]);
    }
    return 0;
}
// ============================================================================
function idsMakeFromIndicies(ent_type, idxs) {
    var depth = getArrDepth(idxs);
    if (depth === 0) {
        var idx = idxs;
        return _common__WEBPACK_IMPORTED_MODULE_0__["EEntTypeStr"][ent_type] + idx;
    }
    else if (depth === 1) {
        var idxs_arr = idxs;
        return idxs_arr.map(function (idx) { return idsMakeFromIndicies(ent_type, idx); });
    }
    else { // depth === 2
        var idxs_arrs = idxs;
        return idxs_arrs.map(function (idxs_arr) { return idsMakeFromIndicies(ent_type, idxs_arr); });
    }
}
function idsMake(ent_type_idxs) {
    var depth = getArrDepth(ent_type_idxs);
    if (depth === 1) {
        var ent_type_idx = ent_type_idxs;
        return _common__WEBPACK_IMPORTED_MODULE_0__["EEntTypeStr"][ent_type_idx[0]] + ent_type_idx[1];
    }
    else if (depth === 2) {
        var ent_type_idxs_arr = ent_type_idxs;
        return ent_type_idxs_arr.map(function (ent_type_idx) { return idsMake(ent_type_idx); });
    }
    else { // depth === 3
        var ent_type_idxs_arrs = ent_type_idxs;
        return ent_type_idxs_arrs.map(function (ent_type_idxs_arr) { return idsMake(ent_type_idxs_arr); });
    }
}
function idsBreak(ids) {
    var depth = getArrDepth(ids);
    if (depth === 0) {
        var id = ids;
        var ent_type_str = id.slice(0, 2);
        var ent_type = _common__WEBPACK_IMPORTED_MODULE_0__["EEntTypeStr"][ent_type_str];
        var index = Number(id.slice(2));
        return [ent_type, index];
    }
    else if (depth === 1) {
        var ids_arr = ids;
        return ids_arr.map(function (id) { return idsBreak(id); });
    }
    else { // depth === 2
        var ids_arr = ids;
        return ids_arr.map(function (id) { return idsBreak(id); });
    }
}
function idIndicies(ents_arr) {
    return ents_arr.map(function (ents) { return ents[1]; });
}
// ============================================================================
function isPosi(ent_type) {
    return ent_type === _common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].POSI;
}
function isVert(ent_type) {
    return ent_type === _common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].VERT;
}
function isTri(ent_type) {
    return ent_type === _common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].TRI;
}
function isEdge(ent_type) {
    return ent_type === _common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].EDGE;
}
function isWire(ent_type) {
    return ent_type === _common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].WIRE;
}
function isFace(ent_type) {
    return ent_type === _common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].FACE;
}
function isPoint(ent_type) {
    return ent_type === _common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].POINT;
}
function isPline(ent_type) {
    return ent_type === _common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].PLINE;
}
function isPgon(ent_type) {
    return ent_type === _common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].PGON;
}
function isColl(ent_type) {
    return ent_type === _common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].COLL;
}
// more general test
function isTopo(ent_type) {
    if (ent_type === _common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].VERT) {
        return true;
    }
    if (ent_type === _common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].EDGE) {
        return true;
    }
    if (ent_type === _common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].WIRE) {
        return true;
    }
    if (ent_type === _common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].FACE) {
        return true;
    }
    return false;
}
function isObj(ent_type) {
    if (ent_type === _common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].PGON) {
        return true;
    }
    if (ent_type === _common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].PLINE) {
        return true;
    }
    if (ent_type === _common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].POINT) {
        return true;
    }
    return false;
}
function isDim0(ent_type) {
    if (ent_type === _common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].POSI) {
        return true;
    }
    if (ent_type === _common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].VERT) {
        return true;
    }
    if (ent_type === _common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].POINT) {
        return true;
    }
    return false;
}
function isDim1(ent_type) {
    if (ent_type === _common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].EDGE) {
        return true;
    }
    if (ent_type === _common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].PLINE) {
        return true;
    }
    return false;
}
function isDim2(ent_type) {
    if (ent_type === _common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].FACE) {
        return true;
    }
    if (ent_type === _common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].PGON) {
        return true;
    }
    return false;
}


/***/ }),

/***/ "./src/libs/geo-info/import.ts":
/*!*************************************!*\
  !*** ./src/libs/geo-info/import.ts ***!
  \*************************************/
/*! exports provided: importObj */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "importObj", function() { return importObj; });
/* harmony import */ var _GIModel__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./GIModel */ "./src/libs/geo-info/GIModel.ts");
/* harmony import */ var _common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./common */ "./src/libs/geo-info/common.ts");


/**
 * Import to obj
 */
function importObj(obj_str) {
    var model = new _GIModel__WEBPACK_IMPORTED_MODULE_0__["GIModel"]();
    var EObjLine;
    (function (EObjLine) {
        EObjLine["OBJ_COMMENT"] = "#";
        EObjLine["OBJ_COORD"] = "v ";
        EObjLine["OBJ_TEXTURE"] = "vt ";
        EObjLine["OBJ_NORMAL"] = "vn ";
        EObjLine["OBJ_FACE"] = "f ";
        EObjLine["OBJ_LINE"] = "l ";
    })(EObjLine || (EObjLine = {}));
    var obj_lines = obj_str.split(/\r?\n/);
    var coords = [];
    var normals = [];
    var textures = [];
    var faces = [];
    var plines = [];
    var _loop_1 = function (obj_line) {
        if (obj_line.startsWith(EObjLine.OBJ_COMMENT)) {
            // Do not do anything
        }
        else if (obj_line.startsWith(EObjLine.OBJ_COORD)) {
            var coord = obj_line.split(' ').slice(1, 4).map(function (v) { return parseFloat(v); });
            coords.push(coord);
        }
        else if (obj_line.startsWith(EObjLine.OBJ_TEXTURE)) {
            var normal = obj_line.split(' ').slice(1, 4).map(function (v) { return parseFloat(v); });
            normals.push(normal);
        }
        else if (obj_line.startsWith(EObjLine.OBJ_NORMAL)) {
            var texture = obj_line.split(' ').slice(1, 3).map(function (v) { return parseFloat(v); });
            textures.push(texture);
        }
        else if (obj_line.startsWith(EObjLine.OBJ_FACE)) {
            var face_strs = obj_line.split(' ').slice(1);
            var v_indexes_1 = [];
            var t_indexes_1 = [];
            var n_indexes_1 = [];
            face_strs.forEach(function (face_str) {
                var face_sub_indexes = face_str.split('/').map(function (str) { return parseInt(str, 10) - 1; });
                v_indexes_1.push(face_sub_indexes[0]);
                t_indexes_1.push(face_sub_indexes[1]);
                n_indexes_1.push(face_sub_indexes[2]);
            });
            faces.push([v_indexes_1, t_indexes_1, n_indexes_1]);
        }
        else if (obj_line.startsWith(EObjLine.OBJ_LINE)) {
            var pline = obj_line.split(' ').slice(1).map(function (v) { return parseInt(v, 10) - 1; });
            plines.push(pline);
        }
        else {
            console.log('Found unrecognised line of data in OBJ file');
        }
    };
    for (var _i = 0, obj_lines_1 = obj_lines; _i < obj_lines_1.length; _i++) {
        var obj_line = obj_lines_1[_i];
        _loop_1(obj_line);
    }
    for (var _a = 0, coords_1 = coords; _a < coords_1.length; _a++) {
        var coord = coords_1[_a];
        var posi_i = model.geom.add.addPosition();
        model.attribs.add.setAttribValue(_common__WEBPACK_IMPORTED_MODULE_1__["EEntType"].POSI, posi_i, _common__WEBPACK_IMPORTED_MODULE_1__["EAttribNames"].COORDS, coord);
    }
    for (var _b = 0, faces_1 = faces; _b < faces_1.length; _b++) {
        var face = faces_1[_b];
        console.log(face[0]);
        var face_i = model.geom.add.addPgon(face[0]);
        // TODO: texture uv
        // TODO: normals
    }
    return model;
}


/***/ }),

/***/ "./src/libs/geo-info/index.ts":
/*!************************************!*\
  !*** ./src/libs/geo-info/index.ts ***!
  \************************************/
/*! exports provided: GIAttribs, GIModel, GICommon */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _GIAttribs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./GIAttribs */ "./src/libs/geo-info/GIAttribs.ts");
/* harmony reexport (module object) */ __webpack_require__.d(__webpack_exports__, "GIAttribs", function() { return _GIAttribs__WEBPACK_IMPORTED_MODULE_0__; });
/* harmony import */ var _GIModel__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./GIModel */ "./src/libs/geo-info/GIModel.ts");
/* harmony reexport (module object) */ __webpack_require__.d(__webpack_exports__, "GIModel", function() { return _GIModel__WEBPACK_IMPORTED_MODULE_1__; });
/* harmony import */ var _common__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./common */ "./src/libs/geo-info/common.ts");
/* harmony reexport (module object) */ __webpack_require__.d(__webpack_exports__, "GICommon", function() { return _common__WEBPACK_IMPORTED_MODULE_2__; });






/***/ }),

/***/ "./src/libs/geom/distance.ts":
/*!***********************************!*\
  !*** ./src/libs/geom/distance.ts ***!
  \***********************************/
/*! exports provided: distance */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "distance", function() { return distance; });
var EPS = 1e-6;
function distance(v1, v2) {
    var vec = [
        v1[0] - v2[0],
        v1[1] - v2[1],
        v1[2] - v2[2],
    ];
    return Math.hypot.apply(Math, vec);
}


/***/ }),

/***/ "./src/libs/geom/matrix.ts":
/*!*********************************!*\
  !*** ./src/libs/geom/matrix.ts ***!
  \*********************************/
/*! exports provided: multMatrix, mirrorMatrix, rotateMatrix, scaleMatrix, xfromSourceTargetMatrix */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "multMatrix", function() { return multMatrix; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "mirrorMatrix", function() { return mirrorMatrix; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "rotateMatrix", function() { return rotateMatrix; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "scaleMatrix", function() { return scaleMatrix; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "xfromSourceTargetMatrix", function() { return xfromSourceTargetMatrix; });
/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! three */ "./node_modules/three/build/three.module.js");
/* harmony import */ var _vectors__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./vectors */ "./src/libs/geom/vectors.ts");


var EPS = 1e-6;
function multMatrix(xyz, m) {
    var _a;
    var v2 = new ((_a = three__WEBPACK_IMPORTED_MODULE_0__["Vector3"]).bind.apply(_a, [void 0].concat(xyz)))();
    v2.applyMatrix4(m);
    return v2.toArray();
}
function mirrorMatrix(origin, normal) {
    // plane normal
    var _a = Object(_vectors__WEBPACK_IMPORTED_MODULE_1__["vecNorm"])(normal), a = _a[0], b = _a[1], c = _a[2];
    // rotation matrix
    var matrix_mirror = new three__WEBPACK_IMPORTED_MODULE_0__["Matrix4"]();
    matrix_mirror.set(1 - (2 * a * a), -2 * a * b, -2 * a * c, 0, -2 * a * b, 1 - (2 * b * b), -2 * b * c, 0, -2 * a * c, -2 * b * c, 1 - (2 * c * c), 0, 0, 0, 0, 1);
    // translation matrix
    var matrix_trn1 = new three__WEBPACK_IMPORTED_MODULE_0__["Matrix4"]();
    matrix_trn1.makeTranslation(-origin[0], -origin[1], -origin[2]);
    var matrix_trn2 = new three__WEBPACK_IMPORTED_MODULE_0__["Matrix4"]();
    matrix_trn2.makeTranslation(origin[0], origin[1], origin[2]);
    // final matrix
    var move_mirror_move = matrix_trn2.multiply(matrix_mirror.multiply(matrix_trn1));
    // do the xform
    return move_mirror_move;
}
function rotateMatrix(origin, axis, angle) {
    var _a;
    // norm the axis
    axis = Object(_vectors__WEBPACK_IMPORTED_MODULE_1__["vecNorm"])(axis);
    // rotation matrix
    var matrix_rot = new three__WEBPACK_IMPORTED_MODULE_0__["Matrix4"]();
    matrix_rot.makeRotationAxis(new ((_a = three__WEBPACK_IMPORTED_MODULE_0__["Vector3"]).bind.apply(_a, [void 0].concat(axis)))(), angle);
    // translation matrix
    var matrix_trn1 = new three__WEBPACK_IMPORTED_MODULE_0__["Matrix4"]();
    matrix_trn1.makeTranslation(-origin[0], -origin[1], -origin[2]);
    var matrix_trn2 = new three__WEBPACK_IMPORTED_MODULE_0__["Matrix4"]();
    matrix_trn2.makeTranslation(origin[0], origin[1], origin[2]);
    // final matrix
    var move_rot_move = matrix_trn2.multiply(matrix_rot.multiply(matrix_trn1));
    // do the xform
    return move_rot_move;
}
function scaleMatrix(origin, factor) {
    var origin_point = (Array.isArray(origin[0])) ? origin[0] : origin;
    // TODO deal with the case where origin is a plane
    // scale matrix
    var matrix_scale = new three__WEBPACK_IMPORTED_MODULE_0__["Matrix4"]();
    matrix_scale.makeScale(factor[0], factor[1], factor[2]);
    // translation matrix
    var matrix_trn1 = new three__WEBPACK_IMPORTED_MODULE_0__["Matrix4"]();
    matrix_trn1.makeTranslation(-origin_point[0], -origin_point[1], -origin_point[2]);
    var matrix_trn2 = new three__WEBPACK_IMPORTED_MODULE_0__["Matrix4"]();
    matrix_trn2.makeTranslation(origin_point[0], origin_point[1], origin_point[2]);
    // final matrix
    var move_scale_move = matrix_trn2.multiply(matrix_scale.multiply(matrix_trn1));
    // do the xform
    return move_scale_move;
}
function xfromSourceTargetMatrix(source_plane, target_plane) {
    // matrix to xform from source to gcs, then from gcs to target
    var matrix_source_to_gcs = _xformMatrixFromXYZVectors(source_plane[0], source_plane[1], source_plane[2], true);
    var matrix_gcs_to_target = _xformMatrixFromXYZVectors(target_plane[0], target_plane[1], target_plane[2], false);
    // final matrix
    var xform = matrix_gcs_to_target.multiply(matrix_source_to_gcs);
    // return the matrix
    return xform;
}
// ================================================================================================
// Helper functions
// ================================================================================================
function _crossVectors(v1, v2, norm) {
    if (norm === void 0) { norm = false; }
    var v3 = new three__WEBPACK_IMPORTED_MODULE_0__["Vector3"]();
    v3.crossVectors(v1, v2);
    if (norm) {
        v3.normalize();
    }
    return v3;
}
function _dotVectors(v1, v2) {
    return v1.dot(v2);
}
function _xformMatrixFromXYZVectors(o, xaxis, xyplane, neg) {
    var _a, _b, _c, _d;
    var x_vec = new ((_a = three__WEBPACK_IMPORTED_MODULE_0__["Vector3"]).bind.apply(_a, [void 0].concat(xaxis)))().normalize();
    var xyplane_vec = new ((_b = three__WEBPACK_IMPORTED_MODULE_0__["Vector3"]).bind.apply(_b, [void 0].concat(xyplane)))().normalize();
    var z_vec = _crossVectors(x_vec, xyplane_vec);
    var y_vec = _crossVectors(z_vec, x_vec);
    if (neg) {
        return _xformMatrixNeg(new ((_c = three__WEBPACK_IMPORTED_MODULE_0__["Vector3"]).bind.apply(_c, [void 0].concat(o)))(), x_vec, y_vec);
    }
    return xformMatrixPos(new ((_d = three__WEBPACK_IMPORTED_MODULE_0__["Vector3"]).bind.apply(_d, [void 0].concat(o)))(), x_vec, y_vec);
}
function _xformMatrixNeg(o, x, y) {
    var m1 = new three__WEBPACK_IMPORTED_MODULE_0__["Matrix4"]();
    var o_neg = o.clone().negate();
    m1.setPosition(o_neg);
    var m2 = new three__WEBPACK_IMPORTED_MODULE_0__["Matrix4"]();
    m2.makeBasis(x.normalize(), y.normalize(), _crossVectors(x, y, true));
    m2.getInverse(m2);
    var m3 = new three__WEBPACK_IMPORTED_MODULE_0__["Matrix4"]();
    // first translate to (0,0,0), then xform, so m1 x m2
    m3.multiplyMatrices(m2, m1);
    return m3;
}
function xformMatrixPos(o, x, y) {
    var m1 = new three__WEBPACK_IMPORTED_MODULE_0__["Matrix4"]();
    m1.setPosition(o);
    var m2 = new three__WEBPACK_IMPORTED_MODULE_0__["Matrix4"]();
    m2.makeBasis(x.normalize(), y.normalize(), _crossVectors(x, y, true));
    var m3 = new three__WEBPACK_IMPORTED_MODULE_0__["Matrix4"]();
    // first xform, then translate to origin, so m1 x m2
    m3.multiplyMatrices(m1, m2);
    return m3;
}
// ---------------------------------------------------------------------------------
function _matrixFromXYZ(pts, from_origin, from_vectors, to_origin, to_vectors) {
    var e1 = new three__WEBPACK_IMPORTED_MODULE_0__["Vector3"](from_vectors[0][0]).normalize();
    var e2 = new three__WEBPACK_IMPORTED_MODULE_0__["Vector3"](from_vectors[0][1]).normalize();
    var e3 = new three__WEBPACK_IMPORTED_MODULE_0__["Vector3"](from_vectors[0][2]).normalize();
    var b1 = new three__WEBPACK_IMPORTED_MODULE_0__["Vector3"](to_vectors[0][0]).normalize();
    var b2 = new three__WEBPACK_IMPORTED_MODULE_0__["Vector3"](to_vectors[0][1]).normalize();
    var b3 = new three__WEBPACK_IMPORTED_MODULE_0__["Vector3"](to_vectors[0][2]).normalize();
    if (e1.dot(e2) === 0) {
        throw new Error('Orthonormal initial basis required');
    }
    if (e1.dot(e3) === 0) {
        throw new Error('Orthonormal initial basis required');
    }
    if (e2.dot(e3) === 0) {
        throw new Error('Orthonormal initial basis required');
    }
    if (b1.dot(b2) === 0) {
        throw new Error('Orthonormal initial basis required');
    }
    if (b1.dot(b3) === 0) {
        throw new Error('Orthonormal initial basis required');
    }
    if (b2.dot(b3) === 0) {
        throw new Error('Orthonormal initial basis required');
    }
    var matrix = new three__WEBPACK_IMPORTED_MODULE_0__["Matrix3"]();
    matrix.set(e1.dot(b1), e1.dot(b2), e1.dot(b3), e2.dot(b1), e2.dot(b2), e2.dot(b3), e3.dot(b1), e3.dot(b2), e3.dot(b3));
    var t_x = to_origin[0] - from_origin[0];
    var t_y = to_origin[1] - from_origin[1];
    var t_z = to_origin[2] - from_origin[2];
    return [[e1.dot(b1), e1.dot(b2), e1.dot(b3), t_x],
        [e2.dot(b1), e2.dot(b2), e2.dot(b3), t_y],
        [e3.dot(b1), e3.dot(b2), e3.dot(b3), t_z],
        [0, 0, 0, 1]];
}


/***/ }),

/***/ "./src/libs/geom/triangle.ts":
/*!***********************************!*\
  !*** ./src/libs/geom/triangle.ts ***!
  \***********************************/
/*! exports provided: normal, area */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "normal", function() { return normal; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "area", function() { return area; });
/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! three */ "./node_modules/three/build/three.module.js");

var EPS = 1e-6;
function normal(v1, v2, v3, norm) {
    if (norm === void 0) { norm = false; }
    var _v1 = new (three__WEBPACK_IMPORTED_MODULE_0__["Vector3"].bind.apply(three__WEBPACK_IMPORTED_MODULE_0__["Vector3"], [void 0].concat(v1)))();
    var _v2 = new (three__WEBPACK_IMPORTED_MODULE_0__["Vector3"].bind.apply(three__WEBPACK_IMPORTED_MODULE_0__["Vector3"], [void 0].concat(v2)))();
    var _v3 = new (three__WEBPACK_IMPORTED_MODULE_0__["Vector3"].bind.apply(three__WEBPACK_IMPORTED_MODULE_0__["Vector3"], [void 0].concat(v3)))();
    var t = new three__WEBPACK_IMPORTED_MODULE_0__["Triangle"](_v1, _v2, _v3);
    var _normal = new three__WEBPACK_IMPORTED_MODULE_0__["Vector3"]();
    t.getNormal(_normal);
    if (norm) {
        _normal.normalize();
    }
    return _normal.toArray();
}
function area(v1, v2, v3) {
    var _v1 = new (three__WEBPACK_IMPORTED_MODULE_0__["Vector3"].bind.apply(three__WEBPACK_IMPORTED_MODULE_0__["Vector3"], [void 0].concat(v1)))();
    var _v2 = new (three__WEBPACK_IMPORTED_MODULE_0__["Vector3"].bind.apply(three__WEBPACK_IMPORTED_MODULE_0__["Vector3"], [void 0].concat(v2)))();
    var _v3 = new (three__WEBPACK_IMPORTED_MODULE_0__["Vector3"].bind.apply(three__WEBPACK_IMPORTED_MODULE_0__["Vector3"], [void 0].concat(v3)))();
    var t = new three__WEBPACK_IMPORTED_MODULE_0__["Triangle"](_v1, _v2, _v3);
    return t.getArea();
}


/***/ }),

/***/ "./src/libs/geom/vectors.ts":
/*!**********************************!*\
  !*** ./src/libs/geom/vectors.ts ***!
  \**********************************/
/*! exports provided: vecEqual, vecSub, vecAdd, vecSum, vecDiv, vecMult, vecCross, vecDot, vecNorm, vecAng, vecAng2, vecLen, vecSetLen, vecRev, vecFromTo, vecMakeOrtho, vecCodir, dist, newellNorm, interpByNum, interpByLen */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "vecEqual", function() { return vecEqual; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "vecSub", function() { return vecSub; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "vecAdd", function() { return vecAdd; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "vecSum", function() { return vecSum; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "vecDiv", function() { return vecDiv; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "vecMult", function() { return vecMult; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "vecCross", function() { return vecCross; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "vecDot", function() { return vecDot; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "vecNorm", function() { return vecNorm; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "vecAng", function() { return vecAng; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "vecAng2", function() { return vecAng2; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "vecLen", function() { return vecLen; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "vecSetLen", function() { return vecSetLen; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "vecRev", function() { return vecRev; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "vecFromTo", function() { return vecFromTo; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "vecMakeOrtho", function() { return vecMakeOrtho; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "vecCodir", function() { return vecCodir; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "dist", function() { return dist; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "newellNorm", function() { return newellNorm; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "interpByNum", function() { return interpByNum; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "interpByLen", function() { return interpByLen; });
/* harmony import */ var mathjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! mathjs */ "./node_modules/mathjs/index.js");
/* harmony import */ var mathjs__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(mathjs__WEBPACK_IMPORTED_MODULE_0__);

var EPS = 1e-6;
//  Vectors using Txyz =======================================================================================================
function vecEqual(v1, v2, tol) {
    if (Math.abs(v1[0] - v2[0]) > tol) {
        return false;
    }
    if (Math.abs(v1[1] - v2[1]) > tol) {
        return false;
    }
    if (Math.abs(v1[2] - v2[2]) > tol) {
        return false;
    }
    return true;
}
function vecSub(v1, v2, norm) {
    if (norm === void 0) { norm = false; }
    var v3 = [
        v1[0] - v2[0],
        v1[1] - v2[1],
        v1[2] - v2[2],
    ];
    if (norm) {
        this.vectorNorm(v3);
    }
    return v3;
}
function vecAdd(v1, v2, norm) {
    if (norm === void 0) { norm = false; }
    var v3 = [
        v1[0] + v2[0],
        v1[1] + v2[1],
        v1[2] + v2[2],
    ];
    if (norm) {
        this.vectorNorm(v3);
    }
    return v3;
}
function vecSum(vecs, norm) {
    if (norm === void 0) { norm = false; }
    var vec_sum = [0, 0, 0];
    for (var _i = 0, vecs_1 = vecs; _i < vecs_1.length; _i++) {
        var vec = vecs_1[_i];
        vec_sum[0] += vec[0];
        vec_sum[1] += vec[1];
        vec_sum[2] += vec[2];
    }
    if (norm) {
        this.vectorNorm(vec_sum);
    }
    return vec_sum;
}
function vecDiv(vec, divisor) {
    return [
        vec[0] / divisor,
        vec[1] / divisor,
        vec[2] / divisor
    ];
}
function vecMult(vec, multiplier) {
    return [
        vec[0] * multiplier,
        vec[1] * multiplier,
        vec[2] * multiplier
    ];
}
function vecCross(v1, v2, norm) {
    if (norm === void 0) { norm = false; }
    return mathjs__WEBPACK_IMPORTED_MODULE_0__["cross"](v1, v2);
}
function vecDot(v1, v2) {
    return mathjs__WEBPACK_IMPORTED_MODULE_0__["dot"](v1, v2);
}
function vecNorm(v) {
    var length = Math.hypot.apply(Math, v);
    return [v[0] / length, v[1] / length, v[2] / length];
}
function vecAng(v1, v2) {
    var v1n = vecNorm(v1);
    var v2n = vecNorm(v2);
    var d = mathjs__WEBPACK_IMPORTED_MODULE_0__["dot"](v1n, v2n);
    if ((1 - Math.abs(d)) < EPS) {
        return 0;
    }
    return Math.acos(d);
}
function vecAng2(v1, v2, n) {
    var v1n = vecNorm(v1);
    var v2n = vecNorm(v2);
    var d = mathjs__WEBPACK_IMPORTED_MODULE_0__["dot"](v1n, v2n);
    if ((1 - Math.abs(d)) < EPS) {
        return 0;
    }
    var angle = Math.acos(d);
    var c = mathjs__WEBPACK_IMPORTED_MODULE_0__["cross"](v1n, v2n);
    angle = angle * mathjs__WEBPACK_IMPORTED_MODULE_0__["compare"](mathjs__WEBPACK_IMPORTED_MODULE_0__["dot"](n, c), 0);
    if (angle < 0) {
        angle = angle + (Math.PI * 2);
    }
    return angle;
}
function vecLen(v) {
    return Math.hypot.apply(Math, v);
}
function vecSetLen(v, len) {
    var fac = len / Math.hypot.apply(Math, v);
    return [v[0] * fac, v[1] * fac, v[2] * fac];
}
function vecRev(v) {
    return [
        v[0] * -1,
        v[1] * -1,
        v[2] * -1
    ];
}
function vecFromTo(v1, v2) {
    return vecSub(v2, v1);
}
function vecMakeOrtho(v1, v2) {
    return vecCross(v2, vecCross(v1, v2));
}
function vecCodir(v1, v2) {
    v1 = vecNorm(v1);
    v2 = vecNorm(v2);
    if (Math.abs(1 - mathjs__WEBPACK_IMPORTED_MODULE_0__["dot"](v1, v2)) > EPS) {
        return false;
    }
    return true;
}
function dist(p1, p2) {
    return mathjs__WEBPACK_IMPORTED_MODULE_0__["distance"](p1, p2);
}
/**
 * Finds the normal to a set of points using Newell's method
 */
function newellNorm(pts) {
    var normal = [0, 0, 0];
    for (var i = 0; i < pts.length - 1; i++) {
        var p0 = pts[i];
        var p1 = pts[i + 1];
        normal[0] += (p0[1] - p1[1]) * (p0[2] + p1[2]);
        normal[1] += (p0[2] - p1[2]) * (p0[0] + p1[0]);
        normal[2] += (p0[0] - p1[0]) * (p0[1] + p1[1]);
    }
    return vecNorm(normal);
}
/**
 * Create new points between two points.
 */
function interpByNum(pt1, pt2, num_points) {
    if (num_points < 1) {
        return [];
    }
    var sub_vec = vecDiv(vecSub(pt2, pt1), num_points + 1);
    var points = [];
    var next = pt1;
    for (var i = 0; i < num_points; i++) {
        next = vecAdd(next, sub_vec);
        points.push(next);
    }
    return points;
}
function interpByLen(pt1, pt2, len) {
    var vec = vecSub(pt2, pt1);
    var num_points = Math.floor(vecLen(vec) / len);
    var sub_vec = vecMult(vecNorm(vec), len);
    var points = [];
    var next = pt1;
    for (var i = 0; i < num_points; i++) {
        next = vecAdd(next, sub_vec);
        points.push(next);
    }
    return points;
}


/***/ }),

/***/ "./src/libs/triangulate/arr.ts":
/*!*************************************!*\
  !*** ./src/libs/triangulate/arr.ts ***!
  \*************************************/
/*! exports provided: Arr */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Arr", function() { return Arr; });
/**
 * A set of static methods for working with arrays of simple types.
 * The arrays can be nested, but they do not contain any objects.
 */
var Arr = /** @class */ (function () {
    function Arr() {
    }
    /**
     * Make an array of numbers. All elements in the array will have the same value.
     * @param length The length of the new array. If length is 0, then an empty array is returned.
     * @param value The values in the array.
     * @returns The resulting array.
     */
    Arr.make = function (length, value) {
        if (length === 0) {
            return [];
        }
        return Array.apply(0, new Array(length)).map(function (v, i) { return value; });
    };
    /**
     * Make an array of numbers. All elements in the array will be a numerical sequence, 0, 1, 2, 3....
     * @param length  The length of the new array. If length is 0, then an empty array is returned.
     * @returns The resulting array.
     */
    Arr.makeSeq = function (length) {
        if (length === 0) {
            return [];
        }
        return Array.apply(0, new Array(length)).map(function (v, i) { return i; });
    };
    /**
     * Check if two nD arrays are equal (i.e. that all elements in the array are equal, ===.).
     * If the arrays are unequal in length, false is returned.
     * Elements in the array can have any value.
     * @param arr1 The first value.
     * @param arr2 The second values.
     * @returns True or false.
     */
    Arr.equal = function (arr1, arr2) {
        if (!Array.isArray(arr1) || !Array.isArray(arr2)) {
            return arr1 === arr2;
        }
        if (arr1.length !== arr2.length) {
            return false;
        }
        for (var i = 0; i < arr1.length; i++) {
            if (!this.equal(arr1[i], arr2[i])) {
                return false;
            }
        }
        return true;
    };
    /**
     * Find the position of the first occurrence of a specified value in an array.
     * The value can be an array (which is not the case for Array.indexOf()).
     * If the value is not found or is undefined, return -1.
     * If the array is null or undefined, return -1.
     * @param value The value, can be a value or a 1D array of values.
     * @returns The index in the array of the first occurance of the value.
     */
    Arr.indexOf = function (arr, value) {
        if (!Array.isArray(arr)) {
            throw new Error('First argument must be a array.');
        }
        if (!Array.isArray(value)) {
            return arr.indexOf(value);
        }
        for (var i = 0; i < arr.length; i++) {
            if (Array.isArray(arr[i]) && this.equal(value, arr[i])) {
                return i;
            }
        }
        return -1;
    };
    /**
     * Replace all occurrences of a specified value in an array.
     * The input array is changed.
     * The value can be an array.
     * If the value is not found or is undefined, return -1.
     * @param old_value The old value to replace.
     * @param new_value The new value.
     * @param arr The array.
     */
    Arr.replace = function (arr, old_value, new_value) {
        if (!Array.isArray(arr)) {
            throw new Error('First argument must be a array.');
        }
        for (var i = 0; i < arr.length; i++) {
            if (this.equal(arr[i], old_value)) {
                arr[i] = new_value;
            }
        }
    };
    /**
     * Take an nD array and flattens it.
     * A new array is returned. The input array remains unchanged.
     * For example, [1, 2, [3, 4], [5, 6]] will become [1, 2, 3, 4, 5, 6].
     * If the input array is undefined, an empty array is returned.
     * @param arr The multidimensional array to flatten.
     * @returns A new 1D array.
     */
    Arr.flatten = function (arr, depth) {
        if (arr === undefined) {
            return [];
        }
        return arr.reduce(function (flat, toFlatten) {
            if (depth === undefined) {
                return flat.concat(Array.isArray(toFlatten) ? Arr.flatten(toFlatten) : toFlatten);
            }
            else {
                return flat.concat((Array.isArray(toFlatten) && (depth !== 0)) ?
                    Arr.flatten(toFlatten, depth - 1) : toFlatten);
            }
        }, []);
    };
    /**
     * Make a copy of an nD array.
     * If the input is not an array, then just return the same thing.
     * A new array is returned. The input array remains unchanged.
     * If the input array is undefined, an empty array is returned.
     * If the input is s sparse array, then the output will alos be a sparse array.
     * @param arr The nD array to copy.
     * @returns The new nD array.
     */
    Arr.deepCopy = function (arr) {
        if (arr === undefined) {
            return [];
        }
        if (!Array.isArray(arr)) {
            return arr;
        }
        var arr2 = [];
        for (var i = 0; i < arr.length; i++) {
            if (Array.isArray(arr[i])) {
                arr2[i] = (Arr.deepCopy(arr[i]));
            }
            else {
                if (arr[i] !== undefined) {
                    arr2[i] = (arr[i]);
                }
            }
        }
        return arr2;
    };
    /**
     * Fills an nD array with new values (all the same value).
     * The input array is changed.
     * If the input array is undefined, an empty array is returned.
     * The input can be a sparse array.
     * @param arr The nD array to fill.
     * @param value The value to insert into the array.
     */
    Arr.deepFill = function (arr, value) {
        if (arr === undefined) {
            return;
        }
        for (var i = 0; i < arr.length; i++) {
            if (Array.isArray(arr[i])) {
                Arr.deepFill(arr[i], value);
            }
            else {
                if (arr[i] !== undefined) {
                    arr[i] = value;
                }
            }
        }
    };
    /**
     * Counts the number of values in an nD array .
     * The input array remains unchanged.
     * If the input array is undefined, 0 is returned.
     * The input can be a sparse array. Undefined values are ignored.
     * For example, for [1, 2, , , 3], the count will be 3.
     * @param arr The nD array to count.
     * @return The number of elements in the nD array.
     */
    Arr.deepCount = function (arr) {
        if (arr === undefined) {
            return 0;
        }
        var a = 0;
        for (var i in arr) {
            if (Array.isArray(arr[i])) {
                a = a + Arr.deepCount(arr[i]);
            }
            else {
                if (arr[i] !== undefined) {
                    a = a + 1;
                }
            }
        }
        return a;
    };
    return Arr;
}());



/***/ }),

/***/ "./src/libs/triangulate/earcut.ts":
/*!****************************************!*\
  !*** ./src/libs/triangulate/earcut.ts ***!
  \****************************************/
/*! exports provided: Earcut */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Earcut", function() { return Earcut; });
/**
 * @author Mugen87 / https://github.com/Mugen87
 * Port from https://github.com/mapbox/earcut (v2.1.2)
 */
var Earcut = {
    triangulate: function (data, holeIndices, dim) {
        dim = dim || 2;
        var hasHoles = holeIndices && holeIndices.length;
        var outerLen = hasHoles ? holeIndices[0] * dim : data.length;
        var outerNode = linkedList(data, 0, outerLen, dim, true);
        var triangles = [];
        if (!outerNode) {
            return triangles;
        }
        var minX, minY, maxX, maxY, x, y, invSize;
        if (hasHoles) {
            outerNode = eliminateHoles(data, holeIndices, outerNode, dim);
        }
        // if the shape is not too simple, we'll use z-order curve hash later; calculate polygon bbox
        if (data.length > 80 * dim) {
            minX = maxX = data[0];
            minY = maxY = data[1];
            for (var i = dim; i < outerLen; i += dim) {
                x = data[i];
                y = data[i + 1];
                if (x < minX) {
                    minX = x;
                }
                if (y < minY) {
                    minY = y;
                }
                if (x > maxX) {
                    maxX = x;
                }
                if (y > maxY) {
                    maxY = y;
                }
            }
            // minX, minY and invSize are later used to transform coords into integers for z-order calculation
            invSize = Math.max(maxX - minX, maxY - minY);
            invSize = invSize !== 0 ? 1 / invSize : 0;
        }
        earcutLinked(outerNode, triangles, dim, minX, minY, invSize);
        return triangles;
    }
};
// create a circular doubly linked list from polygon points in the specified winding order
function linkedList(data, start, end, dim, clockwise) {
    var i, last;
    if (clockwise === (signedArea(data, start, end, dim) > 0)) {
        for (i = start; i < end; i += dim) {
            last = insertNode(i, data[i], data[i + 1], last);
        }
    }
    else {
        for (i = end - dim; i >= start; i -= dim) {
            last = insertNode(i, data[i], data[i + 1], last);
        }
    }
    if (last && equals(last, last.next)) {
        removeNode(last);
        last = last.next;
    }
    return last;
}
// eliminate colinear or duplicate points
function filterPoints(start, end) {
    if (!start) {
        return start;
    }
    if (!end) {
        end = start;
    }
    var p = start, again;
    do {
        again = false;
        if (!p.steiner && (equals(p, p.next) || area(p.prev, p, p.next) === 0)) {
            removeNode(p);
            p = end = p.prev;
            if (p === p.next) {
                break;
            }
            again = true;
        }
        else {
            p = p.next;
        }
    } while (again || p !== end);
    return end;
}
// main ear slicing loop which triangulates a polygon (given as a linked list)
function earcutLinked(ear, triangles, dim, minX, minY, invSize, pass) {
    if (!ear) {
        return;
    }
    // interlink polygon nodes in z-order
    if (!pass && invSize) {
        indexCurve(ear, minX, minY, invSize);
    }
    var stop = ear, prev, next;
    // iterate through ears, slicing them one by one
    while (ear.prev !== ear.next) {
        prev = ear.prev;
        next = ear.next;
        if (invSize ? isEarHashed(ear, minX, minY, invSize) : isEar(ear)) {
            // cut off the triangle
            triangles.push(prev.i / dim);
            triangles.push(ear.i / dim);
            triangles.push(next.i / dim);
            removeNode(ear);
            // skipping the next vertice leads to less sliver triangles
            ear = next.next;
            stop = next.next;
            continue;
        }
        ear = next;
        // if we looped through the whole remaining polygon and can't find any more ears
        if (ear === stop) {
            // try filtering points and slicing again
            if (!pass) {
                earcutLinked(filterPoints(ear), triangles, dim, minX, minY, invSize, 1);
                // if this didn't work, try curing all small self-intersections locally
            }
            else if (pass === 1) {
                ear = cureLocalIntersections(ear, triangles, dim);
                earcutLinked(ear, triangles, dim, minX, minY, invSize, 2);
                // as a last resort, try splitting the remaining polygon into two
            }
            else if (pass === 2) {
                splitEarcut(ear, triangles, dim, minX, minY, invSize);
            }
            break;
        }
    }
}
// check whether a polygon node forms a valid ear with adjacent nodes
function isEar(ear) {
    var a = ear.prev, b = ear, c = ear.next;
    if (area(a, b, c) >= 0) {
        return false;
    } // reflex, can't be an ear
    // now make sure we don't have other points inside the potential ear
    var p = ear.next.next;
    while (p !== ear.prev) {
        if (pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y) && area(p.prev, p, p.next) >= 0) {
            return false;
        }
        p = p.next;
    }
    return true;
}
function isEarHashed(ear, minX, minY, invSize) {
    var a = ear.prev, b = ear, c = ear.next;
    if (area(a, b, c) >= 0) {
        return false;
    } // reflex, can't be an ear
    // triangle bbox; min & max are calculated like this for speed
    var minTX = a.x < b.x ? (a.x < c.x ? a.x : c.x) : (b.x < c.x ? b.x : c.x), minTY = a.y < b.y ? (a.y < c.y ? a.y : c.y) : (b.y < c.y ? b.y : c.y), maxTX = a.x > b.x ? (a.x > c.x ? a.x : c.x) : (b.x > c.x ? b.x : c.x), maxTY = a.y > b.y ? (a.y > c.y ? a.y : c.y) : (b.y > c.y ? b.y : c.y);
    // z-order range for the current triangle bbox;
    var minZ = zOrder(minTX, minTY, minX, minY, invSize), maxZ = zOrder(maxTX, maxTY, minX, minY, invSize);
    // first look for points inside the triangle in increasing z-order
    var p = ear.nextZ;
    while (p && p.z <= maxZ) {
        if (p !== ear.prev && p !== ear.next &&
            pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y) &&
            area(p.prev, p, p.next) >= 0) {
            return false;
        }
        p = p.nextZ;
    }
    // then look for points in decreasing z-order
    p = ear.prevZ;
    while (p && p.z >= minZ) {
        if (p !== ear.prev && p !== ear.next &&
            pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y) &&
            area(p.prev, p, p.next) >= 0) {
            return false;
        }
        p = p.prevZ;
    }
    return true;
}
// go through all polygon nodes and cure small local self-intersections
function cureLocalIntersections(start, triangles, dim) {
    var p = start;
    do {
        var a = p.prev, b = p.next.next;
        if (!equals(a, b) && intersects(a, p, p.next, b) && locallyInside(a, b) && locallyInside(b, a)) {
            triangles.push(a.i / dim);
            triangles.push(p.i / dim);
            triangles.push(b.i / dim);
            // remove two nodes involved
            removeNode(p);
            removeNode(p.next);
            p = start = b;
        }
        p = p.next;
    } while (p !== start);
    return p;
}
// try splitting polygon into two and triangulate them independently
function splitEarcut(start, triangles, dim, minX, minY, invSize) {
    // look for a valid diagonal that divides the polygon into two
    var a = start;
    do {
        var b = a.next.next;
        while (b !== a.prev) {
            if (a.i !== b.i && isValidDiagonal(a, b)) {
                // split the polygon in two by the diagonal
                var c = splitPolygon(a, b);
                // filter colinear points around the cuts
                a = filterPoints(a, a.next);
                c = filterPoints(c, c.next);
                // run earcut on each half
                earcutLinked(a, triangles, dim, minX, minY, invSize);
                earcutLinked(c, triangles, dim, minX, minY, invSize);
                return;
            }
            b = b.next;
        }
        a = a.next;
    } while (a !== start);
}
// link every hole into the outer loop, producing a single-ring polygon without holes
function eliminateHoles(data, holeIndices, outerNode, dim) {
    var queue = [], i, len, start, end, list;
    for (i = 0, len = holeIndices.length; i < len; i++) {
        start = holeIndices[i] * dim;
        end = i < len - 1 ? holeIndices[i + 1] * dim : data.length;
        list = linkedList(data, start, end, dim, false);
        if (list === list.next) {
            list.steiner = true;
        }
        queue.push(getLeftmost(list));
    }
    queue.sort(compareX);
    // process holes from left to right
    for (i = 0; i < queue.length; i++) {
        eliminateHole(queue[i], outerNode);
        outerNode = filterPoints(outerNode, outerNode.next);
    }
    return outerNode;
}
function compareX(a, b) {
    return a.x - b.x;
}
// find a bridge between vertices that connects hole with an outer ring and and link it
function eliminateHole(hole, outerNode) {
    outerNode = findHoleBridge(hole, outerNode);
    if (outerNode) {
        var b = splitPolygon(outerNode, hole);
        filterPoints(b, b.next);
    }
}
// David Eberly's algorithm for finding a bridge between hole and outer polygon
function findHoleBridge(hole, outerNode) {
    var p = outerNode;
    var hx = hole.x;
    var hy = hole.y;
    var qx = -Infinity;
    var m;
    // find a segment intersected by a ray from the hole's leftmost point to the left;
    // segment's endpoint with lesser x will be potential connection point
    do {
        if (hy <= p.y && hy >= p.next.y && p.next.y !== p.y) {
            var x = p.x + (hy - p.y) * (p.next.x - p.x) / (p.next.y - p.y);
            if (x <= hx && x > qx) {
                qx = x;
                if (x === hx) {
                    if (hy === p.y) {
                        return p;
                    }
                    if (hy === p.next.y) {
                        return p.next;
                    }
                }
                m = p.x < p.next.x ? p : p.next;
            }
        }
        p = p.next;
    } while (p !== outerNode);
    if (!m) {
        return null;
    }
    if (hx === qx) {
        return m.prev;
    } // hole touches outer segment; pick lower endpoint
    // look for points inside the triangle of hole point, segment intersection and endpoint;
    // if there are no points found, we have a valid connection;
    // otherwise choose the point of the minimum angle with the ray as connection point
    var stop = m;
    var mx = m.x;
    var my = m.y;
    var tanMin = Infinity;
    var tan;
    p = m.next;
    while (p !== stop) {
        if (hx >= p.x && p.x >= mx && hx !== p.x &&
            pointInTriangle(hy < my ? hx : qx, hy, mx, my, hy < my ? qx : hx, hy, p.x, p.y)) {
            tan = Math.abs(hy - p.y) / (hx - p.x); // tangential
            if ((tan < tanMin || (tan === tanMin && p.x > m.x)) && locallyInside(p, hole)) {
                m = p;
                tanMin = tan;
            }
        }
        p = p.next;
    }
    return m;
}
// interlink polygon nodes in z-order
function indexCurve(start, minX, minY, invSize) {
    var p = start;
    do {
        if (p.z === null) {
            p.z = zOrder(p.x, p.y, minX, minY, invSize);
        }
        p.prevZ = p.prev;
        p.nextZ = p.next;
        p = p.next;
    } while (p !== start);
    p.prevZ.nextZ = null;
    p.prevZ = null;
    sortLinked(p);
}
// Simon Tatham's linked list merge sort algorithm
// http://www.chiark.greenend.org.uk/~sgtatham/algorithms/listsort.html
function sortLinked(list) {
    var i, p, q, e, tail, numMerges, pSize, qSize, inSize = 1;
    do {
        p = list;
        list = null;
        tail = null;
        numMerges = 0;
        while (p) {
            numMerges++;
            q = p;
            pSize = 0;
            for (i = 0; i < inSize; i++) {
                pSize++;
                q = q.nextZ;
                if (!q) {
                    break;
                }
            }
            qSize = inSize;
            while (pSize > 0 || (qSize > 0 && q)) {
                if (pSize !== 0 && (qSize === 0 || !q || p.z <= q.z)) {
                    e = p;
                    p = p.nextZ;
                    pSize--;
                }
                else {
                    e = q;
                    q = q.nextZ;
                    qSize--;
                }
                if (tail) {
                    tail.nextZ = e;
                }
                else {
                    list = e;
                }
                e.prevZ = tail;
                tail = e;
            }
            p = q;
        }
        tail.nextZ = null;
        inSize *= 2;
    } while (numMerges > 1);
    return list;
}
// z-order of a point given coords and inverse of the longer side of data bbox
function zOrder(x, y, minX, minY, invSize) {
    // coords are transformed into non-negative 15-bit integer range
    x = 32767 * (x - minX) * invSize;
    y = 32767 * (y - minY) * invSize;
    x = (x | (x << 8)) & 0x00FF00FF;
    x = (x | (x << 4)) & 0x0F0F0F0F;
    x = (x | (x << 2)) & 0x33333333;
    x = (x | (x << 1)) & 0x55555555;
    y = (y | (y << 8)) & 0x00FF00FF;
    y = (y | (y << 4)) & 0x0F0F0F0F;
    y = (y | (y << 2)) & 0x33333333;
    y = (y | (y << 1)) & 0x55555555;
    return x | (y << 1);
}
// find the leftmost node of a polygon ring
function getLeftmost(start) {
    var p = start, leftmost = start;
    do {
        if (p.x < leftmost.x) {
            leftmost = p;
        }
        p = p.next;
    } while (p !== start);
    return leftmost;
}
// check if a point lies within a convex triangle
function pointInTriangle(ax, ay, bx, by, cx, cy, px, py) {
    return (cx - px) * (ay - py) - (ax - px) * (cy - py) >= 0 &&
        (ax - px) * (by - py) - (bx - px) * (ay - py) >= 0 &&
        (bx - px) * (cy - py) - (cx - px) * (by - py) >= 0;
}
// check if a diagonal between two polygon nodes is valid (lies in polygon interior)
function isValidDiagonal(a, b) {
    return a.next.i !== b.i && a.prev.i !== b.i && !intersectsPolygon(a, b) &&
        locallyInside(a, b) && locallyInside(b, a) && middleInside(a, b);
}
// signed area of a triangle
function area(p, q, r) {
    return (q.y - p.y) * (r.x - q.x) - (q.x - p.x) * (r.y - q.y);
}
// check if two points are equal
function equals(p1, p2) {
    return p1.x === p2.x && p1.y === p2.y;
}
// check if two segments intersect
function intersects(p1, q1, p2, q2) {
    if ((equals(p1, q1) && equals(p2, q2)) ||
        (equals(p1, q2) && equals(p2, q1))) {
        return true;
    }
    return area(p1, q1, p2) > 0 !== area(p1, q1, q2) > 0 &&
        area(p2, q2, p1) > 0 !== area(p2, q2, q1) > 0;
}
// check if a polygon diagonal intersects any polygon segments
function intersectsPolygon(a, b) {
    var p = a;
    do {
        if (p.i !== a.i && p.next.i !== a.i && p.i !== b.i && p.next.i !== b.i &&
            intersects(p, p.next, a, b)) {
            return true;
        }
        p = p.next;
    } while (p !== a);
    return false;
}
// check if a polygon diagonal is locally inside the polygon
function locallyInside(a, b) {
    return area(a.prev, a, a.next) < 0 ?
        area(a, b, a.next) >= 0 && area(a, a.prev, b) >= 0 :
        area(a, b, a.prev) < 0 || area(a, a.next, b) < 0;
}
// check if the middle point of a polygon diagonal is inside the polygon
function middleInside(a, b) {
    var p = a;
    var inside = false;
    var px = (a.x + b.x) / 2;
    var py = (a.y + b.y) / 2;
    do {
        if (((p.y > py) !== (p.next.y > py)) && p.next.y !== p.y &&
            (px < (p.next.x - p.x) * (py - p.y) / (p.next.y - p.y) + p.x)) {
            inside = !inside;
        }
        p = p.next;
    } while (p !== a);
    return inside;
}
// link two polygon vertices with a bridge; if the vertices belong to the same ring, it splits polygon into two;
// if one belongs to the outer ring and another to a hole, it merges it into a single ring
function splitPolygon(a, b) {
    var a2 = new Node(a.i, a.x, a.y), b2 = new Node(b.i, b.x, b.y), an = a.next, bp = b.prev;
    a.next = b;
    b.prev = a;
    a2.next = an;
    an.prev = a2;
    b2.next = a2;
    a2.prev = b2;
    bp.next = b2;
    b2.prev = bp;
    return b2;
}
// create a node and optionally link it with previous one (in a circular doubly linked list)
function insertNode(i, x, y, last) {
    var p = new Node(i, x, y);
    if (!last) {
        p.prev = p;
        p.next = p;
    }
    else {
        p.next = last.next;
        p.prev = last;
        last.next.prev = p;
        last.next = p;
    }
    return p;
}
function removeNode(p) {
    p.next.prev = p.prev;
    p.prev.next = p.next;
    if (p.prevZ) {
        p.prevZ.nextZ = p.nextZ;
    }
    if (p.nextZ) {
        p.nextZ.prevZ = p.prevZ;
    }
}
function Node(i, x, y) {
    // vertice index in coordinates array
    this.i = i;
    // vertex coordinates
    this.x = x;
    this.y = y;
    // previous and next vertice nodes in a polygon ring
    this.prev = null;
    this.next = null;
    // z-order curve value
    this.z = null;
    // previous and next nodes in z-order
    this.prevZ = null;
    this.nextZ = null;
    // indicates whether this is a steiner point
    this.steiner = false;
}
function signedArea(data, start, end, dim) {
    var sum = 0;
    for (var i = start, j = end - dim; i < end; i += dim) {
        sum += (data[j] - data[i]) * (data[i + 1] + data[j + 1]);
        j = i;
    }
    return sum;
}



/***/ }),

/***/ "./src/libs/triangulate/threex.ts":
/*!****************************************!*\
  !*** ./src/libs/triangulate/threex.ts ***!
  \****************************************/
/*! exports provided: multVectorMatrix, xformMatrix, matrixInv, subVectors, addVectors, crossVectors */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "multVectorMatrix", function() { return multVectorMatrix; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "xformMatrix", function() { return xformMatrix; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "matrixInv", function() { return matrixInv; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "subVectors", function() { return subVectors; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "addVectors", function() { return addVectors; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "crossVectors", function() { return crossVectors; });
/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! three */ "./node_modules/three/build/three.module.js");

var EPS = 1e-6;
/**
 * Utility functions for threejs.
 */
// Matrices ======================================================================================================
function multVectorMatrix(v, m) {
    var v2 = v.clone();
    v2.applyMatrix4(m);
    return v2;
}
function xformMatrix(o, x, y, z) {
    x.normalize();
    y.normalize();
    z.normalize();
    var m1 = new three__WEBPACK_IMPORTED_MODULE_0__["Matrix4"]();
    var o_neg = o.clone().negate();
    m1.setPosition(o_neg);
    var m2 = new three__WEBPACK_IMPORTED_MODULE_0__["Matrix4"]();
    m2.makeBasis(x, y, z);
    m2.getInverse(m2);
    var m3 = new three__WEBPACK_IMPORTED_MODULE_0__["Matrix4"]();
    m3.multiplyMatrices(m2, m1);
    return m3;
}
function matrixInv(m) {
    var m2 = new three__WEBPACK_IMPORTED_MODULE_0__["Matrix4"]();
    return m2.getInverse(m);
}
//  Vectors =======================================================================================================
function subVectors(v1, v2, norm) {
    if (norm === void 0) { norm = false; }
    var v3 = new three__WEBPACK_IMPORTED_MODULE_0__["Vector3"]();
    v3.subVectors(v1, v2);
    if (norm) {
        v3.normalize();
    }
    return v3;
}
function addVectors(v1, v2, norm) {
    if (norm === void 0) { norm = false; }
    var v3 = new three__WEBPACK_IMPORTED_MODULE_0__["Vector3"]();
    v3.addVectors(v1, v2);
    if (norm) {
        v3.normalize();
    }
    return v3;
}
function crossVectors(v1, v2, norm) {
    if (norm === void 0) { norm = false; }
    var v3 = new three__WEBPACK_IMPORTED_MODULE_0__["Vector3"]();
    v3.crossVectors(v1, v2);
    if (norm) {
        v3.normalize();
    }
    return v3;
}


/***/ }),

/***/ "./src/libs/triangulate/triangulate.ts":
/*!*********************************************!*\
  !*** ./src/libs/triangulate/triangulate.ts ***!
  \*********************************************/
/*! exports provided: triangulate */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "triangulate", function() { return triangulate; });
/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! three */ "./node_modules/three/build/three.module.js");
/* harmony import */ var _threex__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./threex */ "./src/libs/triangulate/threex.ts");
/* harmony import */ var _earcut__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./earcut */ "./src/libs/triangulate/earcut.ts");
/* harmony import */ var _arr__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./arr */ "./src/libs/triangulate/arr.ts");



 // TODO remove dependence on this
//  3D to 2D ======================================================================================================
/**
 * Function to transform a set of vertices in 3d space onto the xy plane.
 * This function assumes that the vertices are co-planar.
 * Returns a set of three Vectors that represent points on the xy plane.
 */
function _makeVertices2D(points) {
    var o = new three__WEBPACK_IMPORTED_MODULE_0__["Vector3"]();
    for (var _i = 0, points_1 = points; _i < points_1.length; _i++) {
        var v = points_1[_i];
        o.add(v);
    }
    o.divideScalar(points.length);
    var vx;
    var vz;
    var got_vx = false;
    for (var i = 0; i < points.length; i++) {
        if (!got_vx) {
            vx = _threex__WEBPACK_IMPORTED_MODULE_1__["subVectors"](points[i], o).normalize();
            if (vx.lengthSq() !== 0) {
                got_vx = true;
            }
        }
        else {
            vz = _threex__WEBPACK_IMPORTED_MODULE_1__["crossVectors"](vx, _threex__WEBPACK_IMPORTED_MODULE_1__["subVectors"](points[i], o).normalize()).normalize();
            if (vz.lengthSq() !== 0) {
                break;
            }
        }
        if (i === points.length - 1) {
            return null;
        }
    }
    var vy = _threex__WEBPACK_IMPORTED_MODULE_1__["crossVectors"](vz, vx);
    var m = _threex__WEBPACK_IMPORTED_MODULE_1__["xformMatrix"](o, vx, vy, vz);
    var points_2d = points.map(function (v) { return _threex__WEBPACK_IMPORTED_MODULE_1__["multVectorMatrix"](v, m); });
    return points_2d;
}
/**
 * Triangulates a polygon
 * @param coords
 */
function triangulate(coords) {
    var vects = _makeVertices2D(coords.map(function (coord) {
        var _a;
        return new ((_a = three__WEBPACK_IMPORTED_MODULE_0__["Vector3"]).bind.apply(_a, [void 0].concat(coord)))();
    }));
    if (vects === undefined || vects === null || vects.length === 0) {
        return [];
    }
    var flat_vert_xys = _arr__WEBPACK_IMPORTED_MODULE_3__["Arr"].flatten(vects.map(function (v) { return [v.x, v.y]; })); // TODO remove dependency
    var flat_tris_i = _earcut__WEBPACK_IMPORTED_MODULE_2__["Earcut"].triangulate(flat_vert_xys);
    var tris_i = [];
    for (var i = 0; i < flat_tris_i.length; i += 3) {
        tris_i.push([flat_tris_i[i], flat_tris_i[i + 1], flat_tris_i[i + 2]]);
    }
    return tris_i;
}


/***/ }),

/***/ "./src/main.ts":
/*!*********************!*\
  !*** ./src/main.ts ***!
  \*********************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_platform_browser_dynamic__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/platform-browser-dynamic */ "./node_modules/@angular/platform-browser-dynamic/fesm5/platform-browser-dynamic.js");
/* harmony import */ var _app_appmodule_app_module__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./app/appmodule/app.module */ "./src/app/appmodule/app.module.ts");
/* harmony import */ var _environments_environment__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./environments/environment */ "./src/environments/environment.ts");




if (_environments_environment__WEBPACK_IMPORTED_MODULE_3__["environment"].production) {
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["enableProdMode"])();
}
window['CESIUM_BASE_URL'] = 'assets/cesium';
Object(_angular_platform_browser_dynamic__WEBPACK_IMPORTED_MODULE_1__["platformBrowserDynamic"])().bootstrapModule(_app_appmodule_app_module__WEBPACK_IMPORTED_MODULE_2__["AppModule"])
    .catch(function (err) { return console.log(err); });


/***/ }),

/***/ 0:
/*!***************************!*\
  !*** multi ./src/main.ts ***!
  \***************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(/*! C:\Users\akibdpt\Documents\Angular\mobius-parametric-modeller\src\main.ts */"./src/main.ts");


/***/ })

},[[0,"runtime","vendor"]]]);
//# sourceMappingURL=main.js.map