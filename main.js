(window["webpackJsonp"] = window["webpackJsonp"] || []).push([["main"],{

/***/ "./src/$$_lazy_route_resource lazy recursive":
/*!**********************************************************!*\
  !*** ./src/$$_lazy_route_resource lazy namespace object ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function webpackEmptyAsyncContext(req) {
	// Here Promise.resolve().then() is used instead of new Promise() to prevent
	// uncaught exception popping up in devtools
	return Promise.resolve().then(function() {
		var e = new Error("Cannot find module '" + req + "'");
		e.code = 'MODULE_NOT_FOUND';
		throw e;
	});
}
webpackEmptyAsyncContext.keys = function() { return []; };
webpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;
module.exports = webpackEmptyAsyncContext;
webpackEmptyAsyncContext.id = "./src/$$_lazy_route_resource lazy recursive";

/***/ }),

/***/ "./src/app/appmodule/app-routing.module.ts":
/*!*************************************************!*\
  !*** ./src/app/appmodule/app-routing.module.ts ***!
  \*************************************************/
/*! exports provided: AppRoutingModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AppRoutingModule", function() { return AppRoutingModule; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var _views__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @views */ "./src/app/views/index.ts");
/**/
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};



// app-routing.module.ts (this file): for development purpose, will be used when running ng build, ng serve or npm start
// app-routing.module.prod.ts: for production purpose, will be used when running ng build --prod, ng serve --prod
// the app-routing.module.prod.ts must also be changed accordingly to any changes done in this file
var appRoutes = [
    { path: 'flowchart', loadChildren: function () { return _views__WEBPACK_IMPORTED_MODULE_2__["ViewFlowchartModule"]; } },
    { path: 'gallery', loadChildren: function () { return _views__WEBPACK_IMPORTED_MODULE_2__["ViewGalleryModule"]; } },
    { path: 'dashboard', loadChildren: function () { return _views__WEBPACK_IMPORTED_MODULE_2__["ViewDashboardModule"]; } },
    { path: 'publish', loadChildren: function () { return _views__WEBPACK_IMPORTED_MODULE_2__["ViewPublishModule"]; } },
    { path: 'editor', loadChildren: function () { return _views__WEBPACK_IMPORTED_MODULE_2__["ViewEditorModule"]; } },
    { path: 'about', loadChildren: function () { return _views__WEBPACK_IMPORTED_MODULE_2__["ViewAboutModule"]; } },
    { path: '', redirectTo: '/gallery', pathMatch: 'full' },
    { path: '**', component: _views__WEBPACK_IMPORTED_MODULE_2__["ViewGalleryModule"] }
];
var AppRoutingModule = /** @class */ (function () {
    function AppRoutingModule() {
    }
    AppRoutingModule = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["NgModule"])({
            imports: [
                _angular_router__WEBPACK_IMPORTED_MODULE_1__["RouterModule"].forRoot(appRoutes, { enableTracing: false } // <-- debugging purposes only
                )
            ],
            exports: [
                _angular_router__WEBPACK_IMPORTED_MODULE_1__["RouterModule"]
            ]
        })
    ], AppRoutingModule);
    return AppRoutingModule;
}());



/***/ }),

/***/ "./src/app/appmodule/app.component.html":
/*!**********************************************!*\
  !*** ./src/app/appmodule/app.component.html ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<router-outlet></router-outlet>"

/***/ }),

/***/ "./src/app/appmodule/app.component.scss":
/*!**********************************************!*\
  !*** ./src/app/appmodule/app.component.scss ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcG1vZHVsZS9hcHAuY29tcG9uZW50LnNjc3MifQ== */"

/***/ }),

/***/ "./src/app/appmodule/app.component.ts":
/*!********************************************!*\
  !*** ./src/app/appmodule/app.component.ts ***!
  \********************************************/
/*! exports provided: AppComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AppComponent", function() { return AppComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _services__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @services */ "./src/app/shared/services/index.ts");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/material */ "./node_modules/@angular/material/esm5/material.es5.js");
/* harmony import */ var _angular_platform_browser__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/platform-browser */ "./node_modules/@angular/platform-browser/fesm5/platform-browser.js");
/* harmony import */ var _shared_services_google_analytics__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @shared/services/google.analytics */ "./src/app/shared/services/google.analytics.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};





var AppComponent = /** @class */ (function () {
    function AppComponent(dataService, injector, matIconRegistry, domSanitizer, googleAnalyticsService) {
        this.dataService = dataService;
        this.injector = injector;
        this.matIconRegistry = matIconRegistry;
        this.domSanitizer = domSanitizer;
        this.googleAnalyticsService = googleAnalyticsService;
        this.matIconRegistry.addSvgIcon('settings', this.domSanitizer.bypassSecurityTrustResourceUrl('assets/Icons/Settings.svg'));
        this.matIconRegistry.addSvgIcon('select', this.domSanitizer.bypassSecurityTrustResourceUrl('assets/Icons/Select.svg'));
        this.matIconRegistry.addSvgIcon('c3D Viewer', this.domSanitizer.bypassSecurityTrustResourceUrl('assets/Icons/3D2.svg'));
        this.matIconRegistry.addSvgIcon('cGeo Viewer', this.domSanitizer.bypassSecurityTrustResourceUrl('assets/Icons/Geo.svg'));
        this.matIconRegistry.addSvgIcon('cMobius Cesium', this.domSanitizer.bypassSecurityTrustResourceUrl('assets/Icons/Geo2.svg'));
        this.matIconRegistry.addSvgIcon('cConsole', this.domSanitizer.bypassSecurityTrustResourceUrl('assets/Icons/Console.svg'));
        this.matIconRegistry.addSvgIcon('cHelp', this.domSanitizer.bypassSecurityTrustResourceUrl('assets/Icons/Help.svg'));
        this.matIconRegistry.addSvgIcon('cSummary', this.domSanitizer.bypassSecurityTrustResourceUrl('assets/Icons/Summary.svg'));
        this.matIconRegistry.addSvgIcon('cZoom', this.domSanitizer.bypassSecurityTrustResourceUrl('assets/Icons/Zoom.svg'));
        this.matIconRegistry.addSvgIcon('cfv', this.domSanitizer.bypassSecurityTrustResourceUrl('assets/Icons/Mobius favicon.svg'));
        this.matIconRegistry.addSvgIcon('cMenu', this.domSanitizer.bypassSecurityTrustResourceUrl('assets/Icons/Three Lines Menu.svg'));
        this.matIconRegistry.addSvgIcon('cGallery', this.domSanitizer.bypassSecurityTrustResourceUrl('assets/Icons/Home.svg'));
        this.matIconRegistry.addSvgIcon('cDashboard', this.domSanitizer.bypassSecurityTrustResourceUrl('assets/Icons/Dashboard.svg'));
        this.matIconRegistry.addSvgIcon('cFlowchart', this.domSanitizer.bypassSecurityTrustResourceUrl('assets/Icons/Flowchart.svg'));
        this.matIconRegistry.addSvgIcon('cEditor', this.domSanitizer.bypassSecurityTrustResourceUrl('assets/Icons/Node.svg'));
    }
    AppComponent.prototype.ngOnInit = function () {
        this.googleAnalyticsService.subscribe();
    };
    AppComponent.prototype.ngOnDestroy = function () {
        this.googleAnalyticsService.unsubscribe();
    };
    AppComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'app-root',
            template: __webpack_require__(/*! ./app.component.html */ "./src/app/appmodule/app.component.html"),
            styles: [__webpack_require__(/*! ./app.component.scss */ "./src/app/appmodule/app.component.scss")]
        }),
        __metadata("design:paramtypes", [_services__WEBPACK_IMPORTED_MODULE_1__["DataService"], _angular_core__WEBPACK_IMPORTED_MODULE_0__["Injector"],
            _angular_material__WEBPACK_IMPORTED_MODULE_2__["MatIconRegistry"], _angular_platform_browser__WEBPACK_IMPORTED_MODULE_3__["DomSanitizer"],
            _shared_services_google_analytics__WEBPACK_IMPORTED_MODULE_4__["GoogleAnalyticsService"]])
    ], AppComponent);
    return AppComponent;
}());



/***/ }),

/***/ "./src/app/appmodule/app.module.ts":
/*!*****************************************!*\
  !*** ./src/app/appmodule/app.module.ts ***!
  \*****************************************/
/*! exports provided: AppModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AppModule", function() { return AppModule; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_platform_browser__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/platform-browser */ "./node_modules/@angular/platform-browser/fesm5/platform-browser.js");
/* harmony import */ var _angular_platform_browser_animations__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/platform-browser/animations */ "./node_modules/@angular/platform-browser/fesm5/animations.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm5/forms.js");
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/common/http */ "./node_modules/@angular/common/fesm5/http.js");
/* harmony import */ var _services__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @services */ "./src/app/shared/services/index.ts");
/* harmony import */ var _model_viewers_all_viewers_gi_viewer_data_data_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../model-viewers/all-viewers/gi-viewer/data/data.service */ "./src/app/model-viewers/all-viewers/gi-viewer/data/data.service.ts");
/* harmony import */ var _shared_shared_module__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @shared/shared.module */ "./src/app/shared/shared.module.ts");
/* harmony import */ var _app_component__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./app.component */ "./src/app/appmodule/app.component.ts");
/* harmony import */ var _views__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @views */ "./src/app/views/index.ts");
/* harmony import */ var _app_routing_module__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./app-routing.module */ "./src/app/appmodule/app-routing.module.ts");
/* harmony import */ var _shared_services_google_analytics__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @shared/services/google.analytics */ "./src/app/shared/services/google.analytics.ts");
/* harmony import */ var _model_viewers_all_viewers_gi_cesium_viewer_data_data_cesium_service__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../model-viewers/all-viewers/gi-cesium-viewer/data/data.cesium.service */ "./src/app/model-viewers/all-viewers/gi-cesium-viewer/data/data.cesium.service.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
// import @angular stuff





// import app services


// import app modules
// import { CoreModule } from '@assets/core/core.module';

// import { AppRoutingModule } from './app-routing.module';
// import app components





// import { WebWorkerService } from 'ngx-web-worker';
/**
 * AppModule, the root module for the whole app.
 */
var AppModule = /** @class */ (function () {
    /**
     * constructor
     */
    function AppModule() {
        // Do nothing
    }
    AppModule = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["NgModule"])({
            declarations: [
                _app_component__WEBPACK_IMPORTED_MODULE_8__["AppComponent"],
            ],
            imports: [
                _angular_platform_browser__WEBPACK_IMPORTED_MODULE_1__["BrowserModule"],
                _angular_platform_browser_animations__WEBPACK_IMPORTED_MODULE_2__["BrowserAnimationsModule"],
                _angular_common_http__WEBPACK_IMPORTED_MODULE_4__["HttpClientModule"],
                _angular_forms__WEBPACK_IMPORTED_MODULE_3__["FormsModule"],
                _app_routing_module__WEBPACK_IMPORTED_MODULE_10__["AppRoutingModule"],
                _views__WEBPACK_IMPORTED_MODULE_9__["ViewGalleryModule"],
                _views__WEBPACK_IMPORTED_MODULE_9__["ViewEditorModule"],
                _views__WEBPACK_IMPORTED_MODULE_9__["ViewDashboardModule"],
                _views__WEBPACK_IMPORTED_MODULE_9__["ViewPublishModule"],
                _views__WEBPACK_IMPORTED_MODULE_9__["ViewFlowchartModule"],
                _views__WEBPACK_IMPORTED_MODULE_9__["ViewAboutModule"],
                _shared_shared_module__WEBPACK_IMPORTED_MODULE_7__["SharedModule"],
            ],
            entryComponents: [
                _views__WEBPACK_IMPORTED_MODULE_9__["ViewEditorComponent"],
                _views__WEBPACK_IMPORTED_MODULE_9__["ViewDashboardComponent"],
                _views__WEBPACK_IMPORTED_MODULE_9__["ViewPublishComponent"],
                _views__WEBPACK_IMPORTED_MODULE_9__["ViewFlowchartComponent"],
                _views__WEBPACK_IMPORTED_MODULE_9__["ViewGalleryComponent"],
                _views__WEBPACK_IMPORTED_MODULE_9__["ViewAboutComponent"],
            ],
            providers: [_services__WEBPACK_IMPORTED_MODULE_5__["DataService"], _model_viewers_all_viewers_gi_viewer_data_data_service__WEBPACK_IMPORTED_MODULE_6__["DataService"], _model_viewers_all_viewers_gi_cesium_viewer_data_data_cesium_service__WEBPACK_IMPORTED_MODULE_12__["DataCesiumService"], _shared_services_google_analytics__WEBPACK_IMPORTED_MODULE_11__["GoogleAnalyticsService"]],
            bootstrap: [_app_component__WEBPACK_IMPORTED_MODULE_8__["AppComponent"]]
        }),
        __metadata("design:paramtypes", [])
    ], AppModule);
    return AppModule;
}());



/***/ }),

/***/ "./src/app/model-viewers/all-viewers/console-viewer/console-viewer.component.html":
/*!****************************************************************************************!*\
  !*** ./src/app/model-viewers/all-viewers/console-viewer/console-viewer.component.html ***!
  \****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div id='console-container'>\r\n    <div class='container'>\r\n        <ng-container *ngFor='let text of logs'>\r\n            <div class = 'line-container'>\r\n                <p class='normalText line'  *ngFor='let splittedText of text.split(\"\\n\")' >{{splittedText}}</p>\r\n\r\n                <!-- <ng-container *ngIf='text.join(\" \").indexOf(\"Error\") !== -1; else default_template'>\r\n                    <p class='errorText line' *ngFor='let splittedText of text.join(\" \").split(\"\\n\")' >{{splittedText}}</p>\r\n                </ng-container>\r\n                <ng-template #default_template>\r\n                    <p class='normalText line'  *ngFor='let splittedText of text.join(\" \").split(\"\\n\")' >{{splittedText}}</p>\r\n                </ng-template> -->\r\n            </div>\r\n        </ng-container>\r\n    </div>\r\n    <button id=\"clearConsole\"\r\n        mat-icon-button\r\n        (click)=\"clearConsole()\"\r\n        title='Clear Console'>\r\n        <mat-icon>block</mat-icon>\r\n    </button> \r\n</div>\r\n"

/***/ }),

/***/ "./src/app/model-viewers/all-viewers/console-viewer/console-viewer.component.scss":
/*!****************************************************************************************!*\
  !*** ./src/app/model-viewers/all-viewers/console-viewer/console-viewer.component.scss ***!
  \****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "@import url(\"https://fonts.googleapis.com/css?family=Ubuntu+Mono\");\n:host {\n  height: 100%;\n  width: 100%; }\ndiv {\n  font-family: sans-serif;\n  color: #505050;\n  width: 100%;\n  padding-left: 10px; }\nh5 {\n  font-weight: 700;\n  font-size: 12px; }\n.funcDesc {\n  font-weight: 600; }\n.paramP {\n  padding-left: 5px; }\nspan {\n  font-weight: 550;\n  font-style: italic; }\n#console-container {\n  margin-top: 40px;\n  height: calc(100vh - 40px);\n  width: 100%;\n  padding: 0px;\n  overflow: auto; }\n.container {\n  padding: 0px 10px 10px 10px;\n  height: -webkit-fit-content;\n  height: -moz-fit-content;\n  height: fit-content;\n  width: 100%;\n  box-sizing: border-box;\n  display: flex;\n  flex-flow: column nowrap;\n  justify-content: flex-start; }\n.container .line-container {\n    border-bottom: 1px solid #E6E6E6;\n    padding: 2px 0px; }\n.container .line-container .line {\n      white-space: pre-wrap;\n      word-wrap: break-word;\n      font-family: 'Ubuntu Mono'; }\n.errorText {\n  color: #E94858; }\n.normalText {\n  color: #808080; }\n#clearConsole {\n  position: absolute;\n  background-color: transparent;\n  padding: 0px;\n  border: 0px;\n  margin: 0px;\n  top: 5px;\n  right: 10px;\n  color: #808080; }\n\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kZWwtdmlld2Vycy9hbGwtdmlld2Vycy9jb25zb2xlLXZpZXdlci9DOlxcRHJvcGJveFxcRmlsZXNcXFNvZnR3YXJlXFxHaXRIdWJcXGRlc2lnbi1hdXRvbWF0aW9uXFxtb2JpdXMtcGFyYW1ldHJpYy1tb2RlbGxlci9zcmNcXGFwcFxcbW9kZWwtdmlld2Vyc1xcYWxsLXZpZXdlcnNcXGNvbnNvbGUtdmlld2VyXFxjb25zb2xlLXZpZXdlci5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvbW9kZWwtdmlld2Vycy9hbGwtdmlld2Vycy9jb25zb2xlLXZpZXdlci9DOlxcRHJvcGJveFxcRmlsZXNcXFNvZnR3YXJlXFxHaXRIdWJcXGRlc2lnbi1hdXRvbWF0aW9uXFxtb2JpdXMtcGFyYW1ldHJpYy1tb2RlbGxlci9zcmNcXGFwcFxcbW9kZWwtdmlld2Vyc1xcYWxsLXZpZXdlcnNcXGdlbmVyYWwtdmlld2VyLnNjc3MiLCJzcmMvYXBwL21vZGVsLXZpZXdlcnMvYWxsLXZpZXdlcnMvY29uc29sZS12aWV3ZXIvQzpcXERyb3Bib3hcXEZpbGVzXFxTb2Z0d2FyZVxcR2l0SHViXFxkZXNpZ24tYXV0b21hdGlvblxcbW9iaXVzLXBhcmFtZXRyaWMtbW9kZWxsZXIvc3JjXFxzY3NzXFx2YXJpYWJsZXMuc2NzcyIsInNyYy9hcHAvbW9kZWwtdmlld2Vycy9hbGwtdmlld2Vycy9jb25zb2xlLXZpZXdlci9DOlxcRHJvcGJveFxcRmlsZXNcXFNvZnR3YXJlXFxHaXRIdWJcXGRlc2lnbi1hdXRvbWF0aW9uXFxtb2JpdXMtcGFyYW1ldHJpYy1tb2RlbGxlci9zcmNcXHNjc3NcXGNvbG9ycy5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUdBLGtFQUFZO0FDSFo7RUFDSSxZQUFZO0VBQ1osV0FBVyxFQUFBO0FBR2Y7RUFDSSx1QkFBdUI7RUFDdkIsY0FBb0I7RUFDcEIsV0FBVztFQUNYLGtCQUFpQixFQUFBO0FBR3JCO0VBQ0ksZ0JBQWdCO0VBQ2hCLGVDVFMsRUFBQTtBRFliO0VBQ0ksZ0JBQWdCLEVBQUE7QUFHcEI7RUFDSSxpQkFBaUIsRUFBQTtBQUdyQjtFQUNJLGdCQUFnQjtFQUNoQixrQkFBa0IsRUFBQTtBRHRCdEI7RUFDSSxnQkFBZ0I7RUFDaEIsMEJBQTBCO0VBQzFCLFdBQVc7RUFDWCxZQUFZO0VBQ1osY0FBYyxFQUFBO0FBRWxCO0VBQ0ksMkJBQTJCO0VBQzNCLDJCQUFtQjtFQUFuQix3QkFBbUI7RUFBbkIsbUJBQW1CO0VBQ25CLFdBQVc7RUFDWCxzQkFBc0I7RUFDdEIsYUFBYTtFQUNiLHdCQUF3QjtFQUN4QiwyQkFBMkIsRUFBQTtBQVAvQjtJQVNRLGdDR2hCUTtJSGlCUixnQkFBZ0IsRUFBQTtBQVZ4QjtNQVlZLHFCQUFxQjtNQUNyQixxQkFBcUI7TUFDckIsMEJBQTBCLEVBQUE7QUFLdEM7RUFDSSxjR2pCaUIsRUFBQTtBSG9CckI7RUFDSSxjR25DWSxFQUFBO0FIc0NoQjtFQUNJLGtCQUFrQjtFQUNsQiw2QkFBNkI7RUFDN0IsWUFBWTtFQUNaLFdBQVc7RUFDWCxXQUFXO0VBQ1gsUUFBUTtFQUNSLFdBQVc7RUFDWCxjRzlDWSxFQUFBIiwiZmlsZSI6InNyYy9hcHAvbW9kZWwtdmlld2Vycy9hbGwtdmlld2Vycy9jb25zb2xlLXZpZXdlci9jb25zb2xlLXZpZXdlci5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIkBpbXBvcnQgJ35zY3NzL2NvbG9ycyc7XHJcbkBpbXBvcnQgJ35zY3NzL3ZhcmlhYmxlcyc7XHJcbkBpbXBvcnQgJy4uL2dlbmVyYWwtdmlld2VyLnNjc3MnO1xyXG5AaW1wb3J0IHVybCgnaHR0cHM6Ly9mb250cy5nb29nbGVhcGlzLmNvbS9jc3M/ZmFtaWx5PVVidW50dStNb25vJyk7XHJcblxyXG4jY29uc29sZS1jb250YWluZXIge1xyXG4gICAgbWFyZ2luLXRvcDogNDBweDtcclxuICAgIGhlaWdodDogY2FsYygxMDB2aCAtIDQwcHgpOyAvLyRoZWFkZXItaGVpZ2h0XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIHBhZGRpbmc6IDBweDtcclxuICAgIG92ZXJmbG93OiBhdXRvO1xyXG59XHJcbi5jb250YWluZXJ7XHJcbiAgICBwYWRkaW5nOiAwcHggMTBweCAxMHB4IDEwcHg7XHJcbiAgICBoZWlnaHQ6IGZpdC1jb250ZW50O1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGZsZXgtZmxvdzogY29sdW1uIG5vd3JhcDtcclxuICAgIGp1c3RpZnktY29udGVudDogZmxleC1zdGFydDtcclxuICAgIC5saW5lLWNvbnRhaW5lcntcclxuICAgICAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgJGNvbG9yNTtcclxuICAgICAgICBwYWRkaW5nOiAycHggMHB4O1xyXG4gICAgICAgIC5saW5le1xyXG4gICAgICAgICAgICB3aGl0ZS1zcGFjZTogcHJlLXdyYXA7XHJcbiAgICAgICAgICAgIHdvcmQtd3JhcDogYnJlYWstd29yZDtcclxuICAgICAgICAgICAgZm9udC1mYW1pbHk6ICdVYnVudHUgTW9ubyc7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59XHJcblxyXG4uZXJyb3JUZXh0e1xyXG4gICAgY29sb3I6ICRlcnJvci1jb2xvcjtcclxufVxyXG5cclxuLm5vcm1hbFRleHR7XHJcbiAgICBjb2xvcjogJGNvbG9yMTtcclxufVxyXG5cclxuI2NsZWFyQ29uc29sZSB7XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcclxuICAgIHBhZGRpbmc6IDBweDtcclxuICAgIGJvcmRlcjogMHB4O1xyXG4gICAgbWFyZ2luOiAwcHg7XHJcbiAgICB0b3A6IDVweDtcclxuICAgIHJpZ2h0OiAxMHB4O1xyXG4gICAgY29sb3I6ICRjb2xvcjE7XHJcblxyXG59IiwiOmhvc3Qge1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbn1cclxuXHJcbmRpdiB7XHJcbiAgICBmb250LWZhbWlseTogc2Fucy1zZXJpZjtcclxuICAgIGNvbG9yOiByZ2IoODAsODAsODApO1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBwYWRkaW5nLWxlZnQ6MTBweDtcclxufVxyXG5cclxuaDUge1xyXG4gICAgZm9udC13ZWlnaHQ6IDcwMDtcclxuICAgIGZvbnQtc2l6ZTogJGZzaXplMjtcclxufVxyXG5cclxuLmZ1bmNEZXNjIHtcclxuICAgIGZvbnQtd2VpZ2h0OiA2MDA7XHJcbn1cclxuXHJcbi5wYXJhbVAge1xyXG4gICAgcGFkZGluZy1sZWZ0OiA1cHg7XHJcblxyXG59XHJcbnNwYW4ge1xyXG4gICAgZm9udC13ZWlnaHQ6IDU1MDtcclxuICAgIGZvbnQtc3R5bGU6IGl0YWxpYztcclxufVxyXG4iLCIkcGFkZGluZzogNDBweDsgLy8gPyBub3QgdXNlZFxyXG4kc21hbGwtcGFkZGluZzogMTVweDtcclxuJGhlYWRlci1oZWlnaHQ6IDQwcHg7XHJcblxyXG4kZnNpemUxOiAxNXB4O1xyXG4kZnNpemUyOiAxMnB4O1xyXG4kZnNpemUzOiAzMHB4O1xyXG5cclxuJHBvcnQtc2l6ZTogMTVweDtcclxuJGRlZmF1bHQtc2lkZS1wYWRkaW5nOiAxNXB4O1xyXG5cclxuJGRpc2FibGVkLW9wYWNpdHk6IDAuNDsiLCJcclxuJGNvbG9yMTogIzgwODA4MDtcclxuJGNvbG9yMjogIzk5OTk5OTtcclxuJGNvbG9yMzogI0IzQjNCMzsgXHJcbiRjb2xvcjQ6ICNDQ0NDQ0M7XHJcbiRjb2xvcjU6ICNFNkU2RTY7XHJcbiRjb2xvcjUtNTogcmdiKDI0NSwgMjQ1LCAyNDUpO1xyXG4kY29sb3I2OiByZ2IoMjUwLCAyNTAsIDI1MSk7XHJcblxyXG4kY29sb3I3OiB3aGl0ZTtcclxuJGNvbG9yODogIzM3MzczNztcclxuXHJcbiRzZWxlY3RlZC1jb2xvcjogcmdiKDAsIDAsIDEwOSk7XHJcbiRob3Zlci1jb2xvcjogJGNvbG9yMjtcclxuXHJcbiRlcnJvci1jb2xvcjogI0U5NDg1ODsgLy9waW5rLXJlZFxyXG4kZXJyb3ItY29sb3ItbHQ6IHJnYigyNTUsIDIyMCwgMjI0KTtcclxuJHBjb2xvcjI6ICNGM0EzMkE7IC8vb3JhbmdlLXllbGxvd1xyXG4kcHJpbnQtY29sb3I6IHJnYigxMzAsIDE5MSwgMTEwKTsgLy9saWdodGdyZWVuXHJcbiRwcmludC1jb2xvci1sdDogcmdiKDIzMCwgMjU1LCAyMjEpO1xyXG4kc2VsZWN0R2VvbS1jb2xvcjogcmdiKDI1NSwgMTc0LCAwKTsgLy8gbGlnaHQgb3JhbmdlXHJcbiRzZWxlY3RHZW9tLWNvbG9yLWx0OiByZ2IoMjU1LCAyMjUsIDE2MCk7XHJcblxyXG4vLyAkcHJvZC1iYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMjUwLDI1MCwyNTApO1xyXG4vLyAkYmFja2dyb3VuZC1jb2xvcjogcmdiKDIyMCwyMjAsMjIwKTtcclxuJGZ1bmN0aW9uLXRleHQtY29sb3I6IHJnYigxOTAsIDE0MCwgMzApO1xyXG4kZnVuY3Rpb24tdGV4dC1jb2xvcjI6IHJnYigxOCwgMTI2LCAxMzYpO1xyXG4kYmFzaWMtZnVuY3Rpb24tdGV4dC1jb2xvcjogcmdiKDIwMCwgNzAsIDE1MCk7XHJcbiRjb21tZW50LWNvbG9yOiBkYXJrZ3JlZW47XHJcbiJdfQ== */"

/***/ }),

/***/ "./src/app/model-viewers/all-viewers/console-viewer/console-viewer.component.ts":
/*!**************************************************************************************!*\
  !*** ./src/app/model-viewers/all-viewers/console-viewer/console-viewer.component.ts ***!
  \**************************************************************************************/
/*! exports provided: ConsoleViewerComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ConsoleViewerComponent", function() { return ConsoleViewerComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _services__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @services */ "./src/app/shared/services/index.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};


/**
 * ConsoleViewerComponent
 */
var ConsoleViewerComponent = /** @class */ (function () {
    /**
     * constructor
     */
    function ConsoleViewerComponent(dataService) {
        this.dataService = dataService;
    }
    ConsoleViewerComponent.prototype.ngOnDestroy = function () {
        var ct = document.getElementById('console-container');
        if (!ct) {
            return;
        }
        this.dataService.consoleScroll = ct.scrollTop;
    };
    /**
     * ngOnInit
     */
    ConsoleViewerComponent.prototype.ngOnInit = function () {
        this.text = this.dataService.getLog().join('\n');
    };
    /**
     * ngOnInit
     */
    ConsoleViewerComponent.prototype.ngAfterViewInit = function () {
        var ct = document.getElementById('console-container');
        if (!this.dataService.consoleScroll) {
            ct.scrollTop = ct.scrollHeight;
        }
        else {
            ct.scrollTop = this.dataService.consoleScroll;
        }
    };
    /**
     * ngDoCheck
     */
    ConsoleViewerComponent.prototype.ngDoCheck = function () {
        if (this.dataService.getLog().length > 500) {
            this.dataService.spliceLog(500);
        }
        var t = this.dataService.getLog().join('\n');
        this.logs = this.dataService.getLog();
        if (this.text !== t) {
            this.text = t;
            this.scrollcheck = true;
        }
    };
    ConsoleViewerComponent.prototype.ngAfterViewChecked = function () {
        if (this.dataService.consoleScroll) {
            this.dataService.consoleScroll = undefined;
        }
        else if (this.scrollcheck) {
            var ct = document.getElementById('console-container');
            ct.scrollTop = ct.scrollHeight;
            this.scrollcheck = false;
        }
    };
    ConsoleViewerComponent.prototype.clearConsole = function () {
        this.dataService.clearLog();
    };
    ConsoleViewerComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'console-viewer',
            template: __webpack_require__(/*! ./console-viewer.component.html */ "./src/app/model-viewers/all-viewers/console-viewer/console-viewer.component.html"),
            styles: [__webpack_require__(/*! ./console-viewer.component.scss */ "./src/app/model-viewers/all-viewers/console-viewer/console-viewer.component.scss")]
        }),
        __metadata("design:paramtypes", [_services__WEBPACK_IMPORTED_MODULE_1__["DataService"]])
    ], ConsoleViewerComponent);
    return ConsoleViewerComponent;
}());



/***/ }),

/***/ "./src/app/model-viewers/all-viewers/gi-cesium-viewer/cesium/cesium-viewer.component.html":
/*!************************************************************************************************!*\
  !*** ./src/app/model-viewers/all-viewers/gi-cesium-viewer/cesium/cesium-viewer.component.html ***!
  \************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div\r\n    id=\"cesium-container\"\r\n    (window:keydown)=\"onKeyDown($event)\"\r\n    (window:keyup)=\"onKeyUp($event)\"\r\n    (window:mousedown)=\"onMouseDown($event)\"\r\n    (window:mousemove)=\"onMouseMove($event)\"\r\n    (window:mouseup)=\"onMouseUp($event)\"\r\n>\r\n    <div\r\n        *ngIf=\"_model_error\"\r\n        style=\"position:absolute;color:red;margin-top: 50px;left:40%;text-align: center;font-family:sans-serif;font-size: 14px;background-color: white;\"\r\n    >\r\n        Error displaying model:{{text}}\r\n    </div>\r\n    <div\r\n        *ngIf=\"_no_model\"\r\n        style=\"position:absolute;color:red;margin-top: 50px;left:40%;text-align: center;font-family:sans-serif;font-size: 14px;background-color: white;\"\r\n    >\r\n        Model or Scene not defined.\r\n    </div>\r\n    <div class = \"messages\"\r\n        *ngIf=\"messageVisible\"\r\n    >\r\n        {{message}}\r\n    </div>\r\n\r\n</div>\r\n"

/***/ }),

/***/ "./src/app/model-viewers/all-viewers/gi-cesium-viewer/cesium/cesium-viewer.component.scss":
/*!************************************************************************************************!*\
  !*** ./src/app/model-viewers/all-viewers/gi-cesium-viewer/cesium/cesium-viewer.component.scss ***!
  \************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "button {\n  cursor: pointer; }\n  button:focus {\n    outline: none; }\n  :host {\n  width: 100%;\n  height: 100%;\n  background-color: green;\n  overflow: hidden; }\n  #cesium-container {\n  position: relative;\n  height: 100%;\n  width: 100%;\n  margin: 0px;\n  overflow: hidden;\n  font-family: sans-serif; }\n  #container-top-right-resize {\n  top: 0px;\n  right: 0px; }\n  #shownumber {\n  position: absolute;\n  bottom: 5px;\n  right: 5px;\n  background: rgba(255, 255, 255, 0.3);\n  padding: 10px;\n  color: #2a8ac5; }\n  /*#rotating{\r\n    width: 30px;\r\n    height: 25px;\r\n    font-size:15px;\r\n    right:0px; \r\n    text-align:center;\r\n    position: absolute;\r\n    top: 0px;\r\n    background-color:transparent;\r\n    border:0;\r\n}\r\n\r\n#paning{\r\n    width: 30px;\r\n    height: 25px;\r\n    font-size:15px;\r\n    right:0px; \r\n    text-align:center;\r\n    position: absolute;\r\n    top: 25px;\r\n    background-color:transparent;\r\n    border:0;\r\n}\r\n\r\n#zooming{\r\n    width: 30px;\r\n    height: 25px;\r\n    font-size:15px;\r\n    right:0px; \r\n    text-align:center;\r\n    position: absolute;\r\n    margin-top: 50px;\r\n    background-color:transparent;\r\n    border:0;\r\n}*/\n  /*#imagery{\r\n    width: 30px;\r\n    height: 25px;\r\n    font-size:14px;\r\n    right:0px; \r\n    text-align:center;\r\n    position: absolute;\r\n    margin-top: 10px;\r\n    background-color:transparent;\r\n    border:0;\r\n}*/\n  .messages {\n  position: absolute;\n  color: orange;\n  margin-top: 50px;\n  left: 40%;\n  padding: 10px;\n  text-align: center;\n  font-family: sans-serif;\n  font-size: 14px;\n  background-color: white;\n  box-shadow: 2px 2px 5px 0px #505050; }\n  #zoomingfit {\n  width: 40px;\n  height: 40px;\n  font-size: 15px;\n  position: absolute;\n  top: 0px;\n  right: 0px;\n  text-align: center;\n  color: #505050;\n  background-color: transparent;\n  border: 0; }\n  #EntitySelection {\n  width: 40px;\n  height: 40px;\n  font-size: 15px;\n  position: absolute;\n  top: 40px;\n  right: 0px;\n  text-align: center;\n  color: #505050;\n  background-color: transparent;\n  border: 0; }\n  .needSelect {\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 40px;\n  height: 40px;\n  border-radius: 50%;\n  background-color: white;\n  opacity: 0;\n  -webkit-animation: scaleIn 2s infinite cubic-bezier(0.36, 0.11, 0.89, 0.32);\n          animation: scaleIn 2s infinite cubic-bezier(0.36, 0.11, 0.89, 0.32); }\n  @-webkit-keyframes scaleIn {\n  from {\n    -webkit-transform: scale(0.8, 0.8);\n            transform: scale(0.8, 0.8);\n    opacity: .5; }\n  to {\n    -webkit-transform: scale(1.2, 1.2);\n            transform: scale(1.2, 1.2);\n    opacity: 0; } }\n  @keyframes scaleIn {\n  from {\n    -webkit-transform: scale(0.8, 0.8);\n            transform: scale(0.8, 0.8);\n    opacity: .5; }\n  to {\n    -webkit-transform: scale(1.2, 1.2);\n            transform: scale(1.2, 1.2);\n    opacity: 0; } }\n  #SelectingEntityType {\n  width: 40px;\n  font-size: 15px;\n  position: absolute;\n  text-align: center;\n  color: #505050;\n  top: 75px;\n  right: 0px;\n  cursor: pointer; }\n  #selectDropdown {\n  position: absolute;\n  top: 70px;\n  right: 5px; }\n  #selectDropdown button {\n    width: 30px;\n    height: 25px;\n    font: 15px bolder;\n    display: block;\n    background-color: transparent;\n    border: 1px solid transparent;\n    font-family: sans-serif;\n    color: #505050;\n    cursor: pointer; }\n  #selectDropdown button.active {\n      background-color: #f3f3f3; }\n  #selectDropdown button:hover {\n      background-color: #f9f9f9;\n      border-color: #bbbbbb; }\n  #setting {\n  width: 30px;\n  height: 25px;\n  font-size: 15px;\n  right: 0px;\n  text-align: center;\n  position: absolute;\n  top: 10px;\n  background-color: transparent;\n  border: 0; }\n  .visible {\n  color: grey; }\n  .selectvisible {\n  background-color: white !important;\n  color: #395d73; }\n  #mouse_label {\n  display: none;\n  position: fixed;\n  overflow: hidden;\n  font-style: italic;\n  background: rgba(255, 255, 255, 0.5);\n  padding: 5px; }\n\r\n/*# sourceMappingURL=data:application/json;base64, */"

/***/ }),

/***/ "./src/app/model-viewers/all-viewers/gi-cesium-viewer/cesium/cesium-viewer.component.ts":
/*!**********************************************************************************************!*\
  !*** ./src/app/model-viewers/all-viewers/gi-cesium-viewer/cesium/cesium-viewer.component.ts ***!
  \**********************************************************************************************/
/*! exports provided: CesiumViewerComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CesiumViewerComponent", function() { return CesiumViewerComponent; });
/* harmony import */ var _libs_geo_info_GIModel__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @libs/geo-info/GIModel */ "./src/assets/libs/geo-info/GIModel.ts");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _data_data_cesium_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../data/data.cesium.service */ "./src/app/model-viewers/all-viewers/gi-cesium-viewer/data/data.cesium.service.ts");
/* harmony import */ var _cesium_viewer_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./cesium-viewer.service */ "./src/app/model-viewers/all-viewers/gi-cesium-viewer/cesium/cesium-viewer.service.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (undefined && undefined.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};

// import @angular stuff



// import { IModel } from 'gs-json';
// import { DropdownMenuComponent } from '../html/dropdown-menu.component';
// import { CesiumViewerService } from './cesium-viewer.service';
/**
 * A cesium viewer for viewing geo-info (GI) models.
 * This component gets used in /app/model-viewers/all-viewers/gi-cesium-viewer/gi-cesium-viewer.component.html
 */
var CesiumViewerComponent = /** @class */ (function () {
    // the selectable type of entity by user, depends on the Attribute Tab
    // public selectable: number;
    // right selection dropdown
    // public needSelect = false;
    // current entity type enabled for selection
    // public SelectingEntityType: { id: string, name: string } = { id: EEntTypeStr[EEntType.FACE], name: 'Faces' };
    // public selectDropdownVisible = false;
    // public selections = [
    //     { id: EEntTypeStr[EEntType.POSI], name: 'Positions' }, { id: EEntTypeStr[EEntType.VERT], name: 'Vetex' },
    //     { id: EEntTypeStr[EEntType.EDGE], name: 'Edges' }, { id: EEntTypeStr[EEntType.WIRE], name: 'Wires' },
    //     { id: EEntTypeStr[EEntType.FACE], name: 'Faces' }, { id: EEntTypeStr[EEntType.POINT], name: 'Points' },
    //     { id: EEntTypeStr[EEntType.PLINE], name: 'Polylines' }, { id: EEntTypeStr[EEntType.PGON], name: 'Polygons' },
    //     { id: EEntTypeStr[EEntType.COLL], name: 'Collections' }
    // ];
    // public dropdownPosition = { x: 0, y: 0 };
    // private isDown = false;
    // private lastX: number;
    // private lastY: number;
    // private dragHash: number;
    // private shiftKeyPressed = false;
    // private mouse_label: HTMLElement;
    /**
     * Creates a new viewer,
     * @param injector
     * @param elem
     */
    function CesiumViewerComponent(injector, elem, cesiumViewerService) {
        this.cesiumViewerService = cesiumViewerService;
        this.eventClicked = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"]();
        // protected modalWindow: ModalService;
        this.container = null;
        // flags for displayinhg text in viewer, see html
        this._no_model = false;
        this._model_error = false;
        this.messageVisible = false;
        this._elem = elem;
        this.dataService = injector.get(_data_data_cesium_service__WEBPACK_IMPORTED_MODULE_2__["DataCesiumService"]);
        // this.modalWindow = injector.get(ModalService);
    }
    /**
     * Called when the viewer is initialised.
     */
    CesiumViewerComponent.prototype.ngOnInit = function () {
        this.container = this._elem.nativeElement.children.namedItem('cesium-container');
        // check for container
        if (!this.container) {
            console.error('No container in Cesium Viewer');
            return;
        }
        // size of window
        this._width = this.container.offsetWidth; // container.client_width;
        this._height = this.container.offsetHeight; // container.client_height;
        this._data_cesium = this.dataService.getCesiumScene();
        this.cesiumViewerService.data_cesium = this._data_cesium;
        // this.container.appendChild(this._data_cesium._renderer.domElement);
        // ??? What is happening here?
        var self = this;
        // this._data_cesium._controls.addEventListener('change', function () { self.render(self); });
        // self._data_cesium._renderer.render(self._data_cesium._scene, self._data_cesium._camera);
        if (localStorage.getItem('mpm_selecting_entity_type') === null) {
            // localStorage.setItem('mpm_selecting_entity_type', JSON.stringify(this.SelectingEntityType));
        }
        else {
            // this.getSelectingEntityType();
        }
    };
    /**
     * @param self
     */
    CesiumViewerComponent.prototype.render = function (self) {
        // self._data_cesium._renderer.render(self._data_cesium._scene, self._data_cesium._camera);
    };
    /**
     * Called when anything changes
     */
    CesiumViewerComponent.prototype.ngDoCheck = function () {
        if (!this.container) {
            console.error('No container in Cesium Viewer');
            return;
        }
        var width = this.container.offsetWidth;
        var height = this.container.offsetHeight;
        // this is when dimensions change
        if (width !== this._width || height !== this._height) {
            this._width = width;
            this._height = height;
            setTimeout(function () {
                // this._data_cesium._camera.aspect = this._width / this._height;
                // this._data_cesium._camera.updateProjectionMatrix();
                // this._data_cesium._renderer.setSize(this._width, this._height);
                // this.render(this);
            }, 10);
        }
    };
    // receive data -> model from gi-cesium-viewer component and update model in the scene
    CesiumViewerComponent.prototype.ngOnChanges = function (changes) {
        if (changes['model']) {
            if (this.model) {
                this.updateModel(this.model);
            }
        }
    };
    /**
     * Update the model in the viewer.
     */
    CesiumViewerComponent.prototype.updateModel = function (model) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                this._data_cesium = this.dataService.getCesiumScene();
                if (!model) {
                    console.warn('Model or Scene not defined.');
                    this._no_model = true;
                    return [2 /*return*/];
                }
                else {
                    if (model !== this._data_cesium._model) {
                        this._data_cesium._model = model;
                        try {
                            // add geometry to the scene
                            this._data_cesium.addGeometry(model, this.container);
                            this._model_error = false;
                            this._no_model = false;
                            // this.render(this);
                        }
                        catch (ex) {
                            console.error('Error displaying model:', ex);
                            this._model_error = true;
                            this._data_cesium._text = ex;
                        }
                    }
                }
                return [2 /*return*/];
            });
        });
    };
    CesiumViewerComponent.prototype.onMouseUp = function (event) {
        // do nothing for now
    };
    CesiumViewerComponent.prototype.onMouseMove = function (event) {
        // do nothing for now
    };
    CesiumViewerComponent.prototype.onMouseDown = function (event) {
        // do nothing for now
    };
    CesiumViewerComponent.prototype.onKeyDown = function (event) {
        // do nothing for now
    };
    CesiumViewerComponent.prototype.onKeyUp = function (event) {
        // do nothing for now
    };
    CesiumViewerComponent.prototype.onUserAction = function (event) {
        // do nothing for now
    };
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"])(),
        __metadata("design:type", Object)
    ], CesiumViewerComponent.prototype, "eventClicked", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        __metadata("design:type", _libs_geo_info_GIModel__WEBPACK_IMPORTED_MODULE_0__["GIModel"])
    ], CesiumViewerComponent.prototype, "model", void 0);
    CesiumViewerComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'cesium-viewer',
            template: __webpack_require__(/*! ./cesium-viewer.component.html */ "./src/app/model-viewers/all-viewers/gi-cesium-viewer/cesium/cesium-viewer.component.html"),
            styles: [__webpack_require__(/*! ./cesium-viewer.component.scss */ "./src/app/model-viewers/all-viewers/gi-cesium-viewer/cesium/cesium-viewer.component.scss")]
        }),
        __metadata("design:paramtypes", [_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injector"], _angular_core__WEBPACK_IMPORTED_MODULE_1__["ElementRef"], _cesium_viewer_service__WEBPACK_IMPORTED_MODULE_3__["CesiumViewerService"]])
    ], CesiumViewerComponent);
    return CesiumViewerComponent;
}());



/***/ }),

/***/ "./src/app/model-viewers/all-viewers/gi-cesium-viewer/cesium/cesium-viewer.service.ts":
/*!********************************************************************************************!*\
  !*** ./src/app/model-viewers/all-viewers/gi-cesium-viewer/cesium/cesium-viewer.service.ts ***!
  \********************************************************************************************/
/*! exports provided: CesiumViewerService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CesiumViewerService", function() { return CesiumViewerService; });
var CesiumViewerService = /** @class */ (function () {
    function CesiumViewerService() {
    }
    return CesiumViewerService;
}());



/***/ }),

/***/ "./src/app/model-viewers/all-viewers/gi-cesium-viewer/data/data.cesium.service.ts":
/*!****************************************************************************************!*\
  !*** ./src/app/model-viewers/all-viewers/gi-cesium-viewer/data/data.cesium.service.ts ***!
  \****************************************************************************************/
/*! exports provided: DataCesiumService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DataCesiumService", function() { return DataCesiumService; });
/* harmony import */ var _data_cesium__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./data.cesium */ "./src/app/model-viewers/all-viewers/gi-cesium-viewer/data/data.cesium.ts");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};

// import @angular stuff

/**
 * DataService
 * The data service for the Cesium viewer.
 */
var DataCesiumService = /** @class */ (function () {
    /**
     * Create a data service.
     */
    function DataCesiumService() {
    }
    /**
     * Get the Cesium Scene
     */
    DataCesiumService.prototype.getCesiumScene = function () {
        return this._data_cesium;
    };
    /**
     * Set the Cesium Scene
     */
    DataCesiumService.prototype.setCesiumScene = function (settings) {
        this._data_cesium = new _data_cesium__WEBPACK_IMPORTED_MODULE_0__["DataCesium"](settings);
    };
    DataCesiumService.prototype.createCesiumViewer = function () {
        this._data_cesium.createCesiumViewer();
    };
    DataCesiumService = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])(),
        __metadata("design:paramtypes", [])
    ], DataCesiumService);
    return DataCesiumService;
}());



/***/ }),

/***/ "./src/app/model-viewers/all-viewers/gi-cesium-viewer/data/data.cesium.ts":
/*!********************************************************************************!*\
  !*** ./src/app/model-viewers/all-viewers/gi-cesium-viewer/data/data.cesium.ts ***!
  \********************************************************************************/
/*! exports provided: DataCesium */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DataCesium", function() { return DataCesium; });
/* harmony import */ var _assets_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @assets/libs/geo-info/common */ "./src/assets/libs/geo-info/common.ts");

// import { HereMapsImageryProvider } from './HereMapsImageryProvider.js';
/**
 * Cesium data
 */
var DataCesium = /** @class */ (function () {
    // interaction and selection
    // text labels
    // number of cesium points, lines, triangles
    // grid
    // axes
    /**
     * Constructs a new data subscriber.
     */
    function DataCesium(settings) {
        this.settings = settings;
        // renderer
        // camera settings
        // orbit controls
        // mouse
        // selecting
        // add grid
        // add lights
    }
    // matrix points from xyz to long lat
    /**
     *
     */
    DataCesium.prototype.createCesiumViewer = function () {
        var _this = this;
        // add Cesium Access Token
        Cesium.Ion.defaultAccessToken = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9' +
            '.eyJqdGkiOiI2MGMxNGYwMS1jZjYyLTQyNjM' +
            'tOGNkYy1hOTRiYTk4ZGEzZDUiLCJpZCI6MTY' +
            '4MSwiaWF0IjoxNTI5NTY4OTc4fQ.lL2fzwOZ' +
            '6EQuL5BqXG5qIwlBn-P_DTbClhVYCIyCgS0';
        // create the viewer
        // https://cesiumjs.org/Cesium/Build/Documentation/Viewer.html
        // https://cesium.com/docs/tutorials/getting-started/
        // https://cesium.com/blog/2018/03/12/cesium-and-angular/
        var view_models = this._getImageryViewModels();
        this._viewer = new Cesium.Viewer(document.getElementById('cesium-container'), {
            shadows: true,
            terrainShadows: Cesium.ShadowMode.ENABLED,
            scene3DOnly: false,
            sceneModePicker: false,
            homeButton: true,
            navigationHelpButton: false,
            fullscreenButton: false,
            animation: false,
            timeline: false,
            geocoder: false,
            imageryProviderViewModels: view_models,
            selectedImageryProviderViewModel: view_models[0],
        });
        this._viewer.scene.globe.depthTestAgainstTerrain = true;
        this._viewer.clock.currentTime.secondsOfDay = 50000;
        this._viewer.shadowMap.maxmimumDistance = 10000.0;
        this._viewer.shadowMap.size = 2048;
        this._viewer.shadowMap.softShadows = false; // if true, causes some strange effects
        // document.getElementsByClassName('cesium-viewer-bottom')[0].remove();
        // prevent camera goes underground #375
        var handler = this._viewer.screenSpaceEventHandler;
        handler.setInputAction(function () {
            _this._viewer.camera._suspendTerrainAdjustment = false;
            _this._viewer.camera._adjustHeightForTerrain();
        }, Cesium.ScreenSpaceEventType.MIDDLE_DOWN);
        if (this._primitives) {
            this._viewer.scene.primitives.removeAll();
            for (var _i = 0, _a = this._primitives; _i < _a.length; _i++) {
                var primitive = _a[_i];
                this._viewer.scene.primitives.add(Cesium.clone(primitive));
            }
            this._viewer.camera.viewBoundingSphere(this._camera[0]);
            this._viewer.camera.direction = this._camera[1].direction;
            this._viewer.camera.position = this._camera[1].position;
            this._viewer.camera.right = this._camera[1].right;
            this._viewer.camera.up = this._camera[1].up;
            this._viewer.render();
        }
    };
    /**
     *
     * @param model
     * @param container
     */
    DataCesium.prototype.addGeometry = function (model, container) {
        this._viewer.scene.primitives.removeAll();
        // the origin of the model
        var longitude = 103.77575;
        var latitude = 1.30298;
        if (model.attribs.query.hasModelAttrib('longitude')) {
            var long_value = model.attribs.query.getModelAttribValue('longitude');
            if (typeof long_value !== 'number') {
                throw new Error('Longitude attribute must be a number.');
            }
            longitude = long_value;
            if (longitude < -180 || longitude > 180) {
                throw new Error('Longitude attribute must be between -180 and 180.');
            }
        }
        if (model.attribs.query.hasModelAttrib('latitude')) {
            var lat_value = model.attribs.query.getModelAttribValue('latitude');
            if (typeof lat_value !== 'number') {
                throw new Error('Latitude attribute must be a number');
            }
            latitude = lat_value;
            if (latitude < 0 || latitude > 90) {
                throw new Error('Latitude attribute must be between 0 and 90.');
            }
        }
        var origin = Cesium.Cartesian3.fromDegrees(longitude, latitude);
        // create a matrix to transform points
        var xform_matrix = Cesium.Matrix4.multiplyByTranslation(Cesium.Transforms.eastNorthUpToFixedFrame(origin), new Cesium.Cartesian3(0, 0, 1), new Cesium.Matrix4());
        // create all positions
        var posis_i = model.geom.query.getEnts(_assets_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].POSI, false);
        var posi_to_point_map = new Map();
        for (var _i = 0, posis_i_1 = posis_i; _i < posis_i_1.length; _i++) {
            var posi_i = posis_i_1[_i];
            if (!posi_to_point_map.has(posi_i)) {
                var xyz = model.attribs.query.getPosiCoords(posi_i);
                var pnt = Cesium.Cartesian3.fromArray(xyz);
                var xform_pnt = new Cesium.Cartesian3();
                Cesium.Matrix4.multiplyByPoint(xform_matrix, pnt, xform_pnt);
                posi_to_point_map.set(posi_i, xform_pnt);
            }
        }
        // add geom
        if (model) {
            // get each polygon
            var pgons_i = model.geom.query.getEnts(_assets_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].PGON, false);
            // get each triangle
            var lines_instances = [];
            var tris_instances = [];
            for (var _a = 0, pgons_i_1 = pgons_i; _a < pgons_i_1.length; _a++) {
                var pgon_i = pgons_i_1[_a];
                // get the colour of the vertices
                var pgon_colour = Cesium.Color.WHITE;
                if (model.attribs.query.hasAttrib(_assets_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].VERT, 'rgb')) {
                    var verts_i = model.geom.query.navAnyToVert(_assets_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].PGON, pgon_i);
                    var rgb_sum = [0, 0, 0];
                    for (var _b = 0, verts_i_1 = verts_i; _b < verts_i_1.length; _b++) {
                        var vert_i = verts_i_1[_b];
                        var vert_rgb = model.attribs.query.getAttribValue(_assets_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].VERT, 'rgb', vert_i);
                        if (!vert_rgb) {
                            vert_rgb = [1, 1, 1];
                        }
                        rgb_sum[0] = rgb_sum[0] + vert_rgb[0];
                        rgb_sum[1] = rgb_sum[1] + vert_rgb[1];
                        rgb_sum[2] = rgb_sum[2] + vert_rgb[2];
                    }
                    var num_verts = verts_i.length;
                    pgon_colour = new Cesium.Color(rgb_sum[0] / num_verts, rgb_sum[1] / num_verts, rgb_sum[2] / num_verts, 1.0);
                }
                // create the edges
                var wires_i = model.geom.query.navAnyToWire(_assets_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].PGON, pgon_i);
                for (var _c = 0, wires_i_1 = wires_i; _c < wires_i_1.length; _c++) {
                    var wire_i = wires_i_1[_c];
                    var wire_posis_i = model.geom.query.navAnyToPosi(_assets_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].WIRE, wire_i);
                    if (wire_posis_i.length > 2) {
                        // const wire_verts_i: number[] = model.geom.query.navAnyToVert(EEntType.WIRE, wire_i);
                        // const wire_posis_i: number[] = wire_verts_i.map( wire_vert_i => model.geom.query.navVertToPosi(wire_vert_i) );
                        var wire_points = wire_posis_i.map(function (wire_posi_i) { return posi_to_point_map.get(wire_posi_i); });
                        if (model.geom.query.istWireClosed(wire_i)) {
                            wire_points.push(wire_points[0]);
                        }
                        var line_geom = new Cesium.SimplePolylineGeometry({
                            positions: wire_points,
                            vertexFormat: Cesium.PerInstanceColorAppearance.VERTEX_FORMAT,
                            perPositionHeight: true,
                            // arcType: Cesium.ArcType.NONE,
                            width: 1.0
                        });
                        var line_instance = new Cesium.GeometryInstance({
                            geometry: line_geom,
                            attributes: {
                                color: Cesium.ColorGeometryInstanceAttribute.fromColor(Cesium.Color.BLACK)
                            }
                        });
                        lines_instances.push(line_instance);
                    }
                }
                // create the triangles
                var pgon_tris_i = model.geom.query.navAnyToTri(_assets_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].PGON, pgon_i);
                for (var _d = 0, pgon_tris_i_1 = pgon_tris_i; _d < pgon_tris_i_1.length; _d++) {
                    var pgon_tri_i = pgon_tris_i_1[_d];
                    // tris_i.push(pgon_tri_i);
                    var tri_posis_i = model.geom.query.navAnyToPosi(_assets_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].TRI, pgon_tri_i);
                    var tri_points = tri_posis_i.map(function (posi_i) { return posi_to_point_map.get(posi_i); });
                    var tri_geom = new Cesium.PolygonGeometry({
                        perPositionHeight: true,
                        polygonHierarchy: new Cesium.PolygonHierarchy(tri_points),
                        vertexFormat: Cesium.PerInstanceColorAppearance.VERTEX_FORMAT
                    });
                    var instance = new Cesium.GeometryInstance({
                        geometry: tri_geom,
                        attributes: {
                            color: Cesium.ColorGeometryInstanceAttribute.fromColor(pgon_colour)
                        }
                    });
                    tris_instances.push(instance);
                }
            }
            // get each polygon
            var plines_i = model.geom.query.getEnts(_assets_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].PLINE, false);
            // get each pline
            for (var _e = 0, plines_i_1 = plines_i; _e < plines_i_1.length; _e++) {
                var pline_i = plines_i_1[_e];
                var pline_colour = Cesium.Color.BLACK;
                if (model.attribs.query.hasAttrib(_assets_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].VERT, 'rgb')) {
                    var verts_i = model.geom.query.navAnyToVert(_assets_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].PLINE, pline_i);
                    var rgb_sum = [0, 0, 0];
                    for (var _f = 0, verts_i_2 = verts_i; _f < verts_i_2.length; _f++) {
                        var vert_i = verts_i_2[_f];
                        var vert_rgb = model.attribs.query.getAttribValue(_assets_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].VERT, 'rgb', vert_i);
                        if (!vert_rgb) {
                            vert_rgb = [0, 0, 0];
                        }
                        rgb_sum[0] = rgb_sum[0] + vert_rgb[0];
                        rgb_sum[1] = rgb_sum[1] + vert_rgb[1];
                        rgb_sum[2] = rgb_sum[2] + vert_rgb[2];
                    }
                    var num_verts = verts_i.length;
                    pline_colour = new Cesium.Color(rgb_sum[0] / num_verts, rgb_sum[1] / num_verts, rgb_sum[2] / num_verts, 1.0);
                }
                // create the edges
                var wire_i = model.geom.query.navPlineToWire(pline_i);
                var wire_posis_i = model.geom.query.navAnyToPosi(_assets_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].WIRE, wire_i);
                if (wire_posis_i.length > 1) {
                    var wire_points = wire_posis_i.map(function (wire_posi_i) { return posi_to_point_map.get(wire_posi_i); });
                    if (model.geom.query.istWireClosed(wire_i)) {
                        wire_points.push(wire_points[0]);
                    }
                    var line_geom = new Cesium.SimplePolylineGeometry({
                        positions: wire_points,
                        vertexFormat: Cesium.PerInstanceColorAppearance.VERTEX_FORMAT,
                        perPositionHeight: true,
                        // arcType: Cesium.ArcType.NONE,
                        width: 1.0
                    });
                    var line_instance = new Cesium.GeometryInstance({
                        geometry: line_geom,
                        attributes: {
                            color: Cesium.ColorGeometryInstanceAttribute.fromColor(pline_colour)
                        }
                    });
                    lines_instances.push(line_instance);
                }
            }
            var lines_primitive = new Cesium.Primitive({
                allowPicking: false,
                geometryInstances: lines_instances,
                shadows: Cesium.ShadowMode.DISABLED,
                appearance: new Cesium.PerInstanceColorAppearance({
                    flat: true,
                    translucent: false
                })
            });
            var tris_primitive = new Cesium.Primitive({
                allowPicking: true,
                geometryInstances: tris_instances,
                shadows: Cesium.ShadowMode.ENABLED,
                appearance: new Cesium.PerInstanceColorAppearance({
                    translucent: false
                })
            });
            this._primitives = [lines_primitive, tris_primitive];
            for (var _g = 0, _h = this._primitives; _g < _h.length; _g++) {
                var primitive = _h[_g];
                this._viewer.scene.primitives.add(Cesium.clone(primitive));
            }
            // const sphere = new Cesium.BoundingSphere(origin, 1e2);
            // this._viewer.camera.viewBoundingSphere(sphere);
            // this._camera = [sphere, this._viewer.camera];
            //if (!this._camera) {
            // set up the camera
            var sphere = new Cesium.BoundingSphere(origin, 1e2);
            this._viewer.camera.viewBoundingSphere(sphere);
            this._camera = [sphere, this._viewer.camera];
            //}
            var extent = new Cesium.Rectangle.fromDegrees(origin[0] - 0.1, origin[1] - 0.1, origin[0] + 0.1, origin[1] + 0.1); // 100.3, 5.4, 100.4, 5.5);
            // Cesium.Camera.DEFAULT_VIEW_RECTANGLE = extent;
            // Cesium.Camera.DEFAULT_VIEW_FACTOR = 0;
            this._viewer.render();
        }
    };
    // PRIVATE METHODS
    /**
     * Get a set of image layers
     */
    DataCesium.prototype._getImageryViewModels = function () {
        var view_models = [];
        // view_models.push(new Cesium.ProviderViewModel({
        //     name: 'Here Map',
        //     iconUrl: Cesium.buildModuleUrl('Widgets/Images/ImageryProviders/openStreetMap.png'),
        //     tooltip: 'OpenStreetMap (OSM) is a collaborative project to create a free editable \
        //          map of the world.\nhttp://www.openstreetmap.org',
        //     creationFunction: function () {
        //         return new Cesium.HereMapsImageryProvider({
        //             appId: 'r4wDXkIdwoefnLKzNBmn',
        //             appCode: 'VknnhofMzg10PmECHFXHaw'
        //         });
        //     },
        // }));
        view_models.push(new Cesium.ProviderViewModel({
            name: 'Open\u00adStreet\u00adMap',
            iconUrl: Cesium.buildModuleUrl('Widgets/Images/ImageryProviders/openStreetMap.png'),
            tooltip: 'OpenStreetMap (OSM) is a collaborative project to create a free editable \
                 map of the world.\nhttp://www.openstreetmap.org',
            creationFunction: function () {
                return Cesium.createOpenStreetMapImageryProvider({
                    url: 'https://a.tile.openstreetmap.org/',
                });
            },
        }));
        view_models.push(new Cesium.ProviderViewModel({
            name: 'Stamen Toner',
            iconUrl: Cesium.buildModuleUrl('Widgets/Images/ImageryProviders/stamenToner.png'),
            tooltip: 'A high contrast black and white map.\nhttp://www.maps.stamen.com/',
            creationFunction: function () {
                return Cesium.createOpenStreetMapImageryProvider({
                    url: 'https://stamen-tiles.a.ssl.fastly.net/toner/',
                });
            },
        }));
        view_models.push(new Cesium.ProviderViewModel({
            name: 'Stamen Toner(Lite)',
            iconUrl: Cesium.buildModuleUrl('Widgets/Images/ImageryProviders/stamenToner.png'),
            tooltip: 'A high contrast black and white map(Lite).\nhttp://www.maps.stamen.com/',
            creationFunction: function () {
                return Cesium.createOpenStreetMapImageryProvider({
                    url: 'https://stamen-tiles.a.ssl.fastly.net/toner-lite/',
                });
            },
        }));
        view_models.push(new Cesium.ProviderViewModel({
            name: 'Terrain(Standard)',
            iconUrl: Cesium.buildModuleUrl('Widgets/Images/TerrainProviders/CesiumWorldTerrain.png'),
            tooltip: 'A high contrast black and white map(Standard).\nhttp://www.maps.stamen.com/',
            creationFunction: function () {
                return Cesium.createOpenStreetMapImageryProvider({
                    url: 'https://stamen-tiles.a.ssl.fastly.net/terrain/',
                });
            },
        }));
        view_models.push(new Cesium.ProviderViewModel({
            name: 'Terrain(Background)',
            iconUrl: Cesium.buildModuleUrl('Widgets/Images/TerrainProviders/CesiumWorldTerrain.png'),
            tooltip: 'A high contrast black and white map(Background).\nhttp://www.maps.stamen.com/',
            creationFunction: function () {
                return Cesium.createOpenStreetMapImageryProvider({
                    url: 'https://stamen-tiles.a.ssl.fastly.net/terrain-background/',
                });
            },
        }));
        // view_models.push(new Cesium.ProviderViewModel({
        //     name: "Earth at Night",
        //     iconUrl: Cesium.buildModuleUrl("Widgets/Images/ImageryProviders/earthAtNight.png"),
        //     tooltip: "The lights of cities and villages trace the outlines of civilization \
        //              in this global view of the Earth at night as seen by NASA/NOAA\'s Suomi NPP satellite.",
        //     creationFunction: function () {
        //         return new Cesium.IonImageryProvider({ assetId: 3812 });
        //     },
        // }));
        // view_models.push(new Cesium.ProviderViewModel({
        //     name: "Natural Earth\u00a0II",
        //     iconUrl: Cesium.buildModuleUrl("Widgets/Images/ImageryProviders/naturalEarthII.png"),
        //     tooltip: "Natural Earth II, darkened for contrast.\nhttp://www.naturalearthdata.com/",
        //     creationFunction: function () {
        //         return Cesium.createTileMapServiceImageryProvider({
        //             url: Cesium.buildModuleUrl("Assets/Textures/NaturalEarthII"),
        //         });
        //     },
        // }));
        // view_models.push(new Cesium.ProviderViewModel({
        //     name: "Blue Marble",
        //     iconUrl: Cesium.buildModuleUrl("Widgets/Images/ImageryProviders/blueMarble.png"),
        //     tooltip: "Blue Marble Next Generation July, 2004 imagery from NASA.",
        //     creationFunction: function () {
        //         return new Cesium.IonImageryProvider({ assetId: 3845 });
        //     },
        // }));
        return view_models;
    };
    return DataCesium;
}());



/***/ }),

/***/ "./src/app/model-viewers/all-viewers/gi-cesium-viewer/gi-cesium-viewer.component.html":
/*!********************************************************************************************!*\
  !*** ./src/app/model-viewers/all-viewers/gi-cesium-viewer/gi-cesium-viewer.component.html ***!
  \********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div id=\"gi-viewer-container\">\r\n    <cesium-viewer [model]='data' (eventClicked)=\"childEventClicked($event)\"></cesium-viewer>\r\n</div>\r\n"

/***/ }),

/***/ "./src/app/model-viewers/all-viewers/gi-cesium-viewer/gi-cesium-viewer.component.scss":
/*!********************************************************************************************!*\
  !*** ./src/app/model-viewers/all-viewers/gi-cesium-viewer/gi-cesium-viewer.component.scss ***!
  \********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "#gi-viewer-container {\n  width: 100%;\n  height: 100%;\n  overflow: hidden; }\n\n.mat-tab-group {\n  margin-bottom: 0px; }\n\nas-split-area {\n  position: relative;\n  overflow: hidden auto !important; }\n\n#settings_button {\n  position: absolute;\n  top: 2px;\n  right: 10px;\n  cursor: pointer;\n  z-index: 800;\n  display: inline-block;\n  vertical-align: bottom;\n  background-color: transparent;\n  color: #808080;\n  border: none;\n  outline: none;\n  padding: 0px;\n  width: 40px;\n  height: 40px;\n  transition: 0.3s;\n  font-size: 14px; }\n\n#settings_button:hover {\n    color: #E6E6E6; }\n\n#settings_button.active {\n    color: #00006d; }\n\n#attrib {\n  overflow: hidden !important; }\n\n#attrib attribute {\n    height: calc(100% - 10px);\n    display: flex;\n    flex-flow: column nowrap;\n    justify-content: space-between; }\n\nmodal-window {\n  display: none; }\n\nmodal-window h1 {\n    font-size: 15px;\n    font-weight: 550;\n    line-height: 35px; }\n\nmodal-window dl {\n    margin: 20px 0;\n    padding: 0;\n    background-color: transparent; }\n\nmodal-window dl dd {\n      list-style: none;\n      padding: 8px 0;\n      margin-left: 20px;\n      margin-right: 20px;\n      background-color: inherit;\n      min-height: 12px;\n      box-sizing: content-box;\n      color: #373737;\n      font-size: 12px;\n      font-style: normal; }\n\nmodal-window dl dd .label {\n        float: left;\n        line-height: 15px;\n        width: 120px; }\n\nmodal-window dl dd .label + div {\n        float: left; }\n\nmodal-window dl dd .label, modal-window dl dd input {\n        color: #373737;\n        font-size: 12px;\n        font-style: normal; }\n\nmodal-window dl dd .label:hover, modal-window dl dd input:hover {\n          background-color: inherit; }\n\nmodal-window dl dd.colors hr {\n        margin: 20px 0px 0px; }\n\nmodal-window dl dd.colors .label {\n        line-height: 20px; }\n\nmodal-window dl dd.colors input {\n        padding-left: 5px;\n        margin-left: 0px !important;\n        border: 1px solid #E6E6E6;\n        width: 120px;\n        vertical-align: top;\n        text-transform: uppercase; }\n\nmodal-window dl dd.colors input.light {\n          color: #ffffff !important; }\n\nmodal-window .closebtn {\n    background: white;\n    border: 1px solid #CCCCCC;\n    box-sizing: border-box;\n    margin-left: 10px; }\n\nbody.modal-open {\n  overflow: hidden; }\n\n#settings_modal {\n  /* The slider itself */\n  /* Mouse-over effects */\n  /* The slider handle (use -webkit- (Chrome, Opera, Safari, Edge) and -moz- (Firefox) to override default look) */ }\n\n#settings_modal .filebtn.setting {\n    margin-top: 20px; }\n\n#settings_modal /deep/ .modal-window .modal-body {\n    background: #fafafb; }\n\n#settings_modal .onoffswitch {\n    position: relative;\n    width: 30px;\n    height: 15px;\n    box-sizing: border-box;\n    vertical-align: middle;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    -ms-user-select: none; }\n\n#settings_modal .onoffswitch-checkbox {\n    display: none; }\n\n#settings_modal .onoffswitch-label {\n    display: block;\n    overflow: hidden;\n    height: inherit;\n    background-color: #CCCCCC;\n    cursor: pointer; }\n\n#settings_modal .onoffswitch-switch {\n    position: absolute;\n    top: 1px;\n    left: 1px;\n    width: 13px;\n    height: 13px;\n    background: #E6E6E6; }\n\n#settings_modal .onoffswitch-checkbox:hover:not(:checked) + .onoffswitch-label {\n    background-color: rgba(0, 0, 109, 0.4); }\n\n#settings_modal .onoffswitch-checkbox:hover:not(:checked) + .onoffswitch-label .onoffswitch-switch {\n      box-shadow: 2px 0px 0px 0px; }\n\n#settings_modal .onoffswitch-checkbox:disabled + .onoffswitch-label {\n    background-color: #CCCCCC !important; }\n\n#settings_modal .onoffswitch-checkbox:disabled + .onoffswitch-label .onoffswitch-switch {\n      box-shadow: none !important; }\n\n#settings_modal .onoffswitch-checkbox:checked + .onoffswitch-label {\n    background-color: #00006d; }\n\n#settings_modal .onoffswitch-checkbox:checked + .onoffswitch-label .onoffswitch-switch {\n      right: 0px;\n      left: calc(100% - 2px);\n      -webkit-transform: translateX(-100%);\n              transform: translateX(-100%); }\n\n#settings_modal .onoffswitch-checkbox:disabled:checked + .onoffswitch-label .onoffswitch-inner,\n  #settings_modal .onoffswitch-checkbox:disabled:checked + .onoffswitch-label .onoffswitch-switch {\n    cursor: help; }\n\n#settings_modal .slidecontainer {\n    width: 100%;\n    /* Width of the outside container */\n    height: 15px; }\n\n#settings_modal .slidecontainer:hover {\n      background-color: transparent; }\n\n#settings_modal .slidecontainer.light {\n      width: calc(100% - 120px); }\n\n#settings_modal .slidecontainer.light .slider {\n        margin-left: 0px !important;\n        width: calc(100% - 80px); }\n\n#settings_modal .slidecontainer.light .slider + input[type='text'] {\n        margin-left: 15px !important; }\n\n#settings_modal .slider {\n    -webkit-appearance: none;\n    /* Override default CSS styles */\n    -moz-appearance: none;\n         appearance: none;\n    width: calc(100% - 230px);\n    max-width: 500px;\n    height: 15px;\n    /* Specified height */\n    background: whitesmoke;\n    /* Grey background */\n    box-sizing: border-box;\n    border: 2px solid #E6E6E6;\n    outline: none;\n    /* Remove outline */\n    opacity: 0.7;\n    /* Set transparency (for mouse-over effects on hover) */\n    /* 0.2 seconds transition on hover */\n    transition: opacity .2s;\n    margin: 0;\n    margin-left: 10px !important; }\n\n#settings_modal .slider:hover {\n    opacity: 1;\n    /* Fully shown on mouse-over */ }\n\n#settings_modal .slider::-webkit-slider-thumb {\n    -webkit-appearance: none;\n    appearance: none;\n    width: 5px;\n    height: 15px;\n    background: #CCCCCC;\n    border: 1px solid #808080;\n    cursor: pointer; }\n\n#settings_modal .slider::-webkit-slider-thumb:hover, #settings_modal .slider::-webkit-slider-thumb:active {\n      background: #00006d; }\n\n#settings_modal .slider::-moz-range-thumb {\n    width: 5px;\n    height: 15px;\n    background: #CCCCCC;\n    cursor: pointer; }\n\n#settings_modal .slider:disabled::-webkit-slider-thumb {\n    background: white; }\n\n#settings_modal .slider:disabled::-moz-range-thumb {\n    background: white; }\n\n#settings_modal .slider:disabled {\n    cursor: help; }\n\n#settings_modal input + input {\n    vertical-align: top;\n    border: none;\n    line-height: 20px;\n    background: transparent;\n    width: 60px;\n    margin-left: 10px !important;\n    height: 14px; }\n\n#settings_modal .number {\n    width: 100px;\n    padding-left: 5px;\n    border: 1px solid #dddddd; }\n\n#settings_modal .light-shadow {\n    width: 120px;\n    float: left; }\n\n/deep/ #settingsTab {\n  height: 100%;\n  width: 100%;\n  overflow-x: scroll; }\n\n/deep/ #settingsTab ul {\n    background-color: transparent;\n    margin: 0;\n    padding-left: 0px;\n    white-space: nowrap;\n    width: 100%;\n    min-width: -webkit-fit-content;\n    min-width: -moz-fit-content;\n    min-width: fit-content;\n    display: inline-flex; }\n\n/deep/ #settingsTab ul li {\n      list-style: none;\n      float: left;\n      min-width: 75px;\n      color: #808080;\n      overflow: visible;\n      cursor: pointer;\n      position: relative;\n      height: inherit;\n      padding: 0px; }\n\n/deep/ #settingsTab ul li span {\n        font-family: sans-serif;\n        margin-right: 2px;\n        font-weight: 550;\n        font-size: 12px;\n        line-height: 15px;\n        border: 1px solid transparent;\n        position: relative;\n        display: block;\n        padding: 2px 7px;\n        text-align: center;\n        width: inherit;\n        box-sizing: border-box;\n        width: 100%;\n        margin-top: -1px;\n        height: 21px; }\n\n/deep/ #settingsTab ul li:hover {\n        background-color: transparent; }\n\n/deep/ #settingsTab ul li:hover span {\n          color: #00006d;\n          background-color: transparent; }\n\n/deep/ #settingsTab ul li.active {\n        background-color: transparent; }\n\n/deep/ #settingsTab ul li.active span {\n          color: #00006d;\n          cursor: default;\n          background-color: #fafafb;\n          border: 1px solid #B3B3B3;\n          border-bottom: 0px; }\n\n/deep/ #settingsTab .pane {\n    margin-top: -1px;\n    border: 1px solid #B3B3B3; }\n\n/deep/ #settingsTab .pane .mat-elevation-z1 {\n      display: flex;\n      flex-flow: column nowrap;\n      justify-content: space-between;\n      box-shadow: none; }\n\n/deep/ #settingsTab hr {\n    border: 1px solid #dfdfdf;\n    background: #dfdfdf; }\n\n/*# sourceMappingURL=data:application/json;base64, */"

/***/ }),

/***/ "./src/app/model-viewers/all-viewers/gi-cesium-viewer/gi-cesium-viewer.component.ts":
/*!******************************************************************************************!*\
  !*** ./src/app/model-viewers/all-viewers/gi-cesium-viewer/gi-cesium-viewer.component.ts ***!
  \******************************************************************************************/
/*! exports provided: GICesiumViewerComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GICesiumViewerComponent", function() { return GICesiumViewerComponent; });
/* harmony import */ var _libs_geo_info_GIModel__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @libs/geo-info/GIModel */ "./src/assets/libs/geo-info/GIModel.ts");
/* harmony import */ var _gi_cesium_viewer_settings__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./gi-cesium-viewer.settings */ "./src/app/model-viewers/all-viewers/gi-cesium-viewer/gi-cesium-viewer.settings.ts");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _data_data_cesium_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./data/data.cesium.service */ "./src/app/model-viewers/all-viewers/gi-cesium-viewer/data/data.cesium.service.ts");
/* harmony import */ var _html_modal_window_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./html/modal-window.service */ "./src/app/model-viewers/all-viewers/gi-cesium-viewer/html/modal-window.service.ts");
/* harmony import */ var ngx_color_picker__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ngx-color-picker */ "./node_modules/ngx-color-picker/dist/ngx-color-picker.es5.js");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};


// import @angular stuff

// import app services



// import others
/**
 * GICesiumViewerComponent
 * This component is used in /app/model-viewers/model-viewers-container.component.html
 */
var GICesiumViewerComponent = /** @class */ (function () {
    /**
     * constructor
     * @param dataService
     */
    function GICesiumViewerComponent(dataService, modalService, cpService) {
        this.dataService = dataService;
        this.modalService = modalService;
        this.cpService = cpService;
        // const previous_settings = JSON.parse(localStorage.getItem('mpm_settings'));
        var singapore = _gi_cesium_viewer_settings__WEBPACK_IMPORTED_MODULE_1__["Locale"][0];
    }
    /**
     * ngOnInit
     */
    GICesiumViewerComponent.prototype.ngOnInit = function () {
        if (localStorage.getItem('mpm_settings') !== null) {
            // this.settings = JSON.parse(localStorage.getItem('mpm_settings'));
        }
        if (this.dataService.getCesiumScene() === undefined) {
            this.dataService.setCesiumScene(this.settings);
        }
        this.dataService.createCesiumViewer();
    };
    /**
     * childEventClicked
     * @param event
     */
    GICesiumViewerComponent.prototype.childEventClicked = function (event) {
        this.clickedEvent = event;
    };
    /**
     * settingOnChange
     * @param setting
     * @param value
     */
    GICesiumViewerComponent.prototype.settingOnChange = function (setting, value) {
        var scene = this.dataService.getCesiumScene();
        // scene._renderer.render(scene._scene, scene._camera);
    };
    /**
     *
     * @param id
     */
    GICesiumViewerComponent.prototype.openModal = function (id) {
        if (localStorage.getItem('mpm_settings') !== null) {
            // this.settings = JSON.parse(localStorage.getItem('mpm_settings'));
        }
        if (document.body.className === 'modal-open') {
            this.modalService.close(id);
        }
        else {
            this.modalService.open(id);
            var scene = this.dataService.getCesiumScene();
        }
    };
    /**
     *
     * @param id
     * @param save
     */
    GICesiumViewerComponent.prototype.closeModal = function (id, save) {
        if (save === void 0) { save = false; }
        this.modalService.close(id);
        if (save) {
            this.dataService.getCesiumScene().settings = this.settings;
            // localStorage.setItem('mpm_settings', JSON.stringify(this.settings));
            // document.getElementById('executeButton').click();
        }
    };
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_2__["Input"])(),
        __metadata("design:type", _libs_geo_info_GIModel__WEBPACK_IMPORTED_MODULE_0__["GIModel"])
    ], GICesiumViewerComponent.prototype, "data", void 0);
    GICesiumViewerComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_2__["Component"])({
            selector: 'gi-viewer',
            template: __webpack_require__(/*! ./gi-cesium-viewer.component.html */ "./src/app/model-viewers/all-viewers/gi-cesium-viewer/gi-cesium-viewer.component.html"),
            styles: [__webpack_require__(/*! ./gi-cesium-viewer.component.scss */ "./src/app/model-viewers/all-viewers/gi-cesium-viewer/gi-cesium-viewer.component.scss")]
        }),
        __metadata("design:paramtypes", [_data_data_cesium_service__WEBPACK_IMPORTED_MODULE_3__["DataCesiumService"], _html_modal_window_service__WEBPACK_IMPORTED_MODULE_4__["ModalService"], ngx_color_picker__WEBPACK_IMPORTED_MODULE_5__["ColorPickerService"]])
    ], GICesiumViewerComponent);
    return GICesiumViewerComponent;
}());



/***/ }),

/***/ "./src/app/model-viewers/all-viewers/gi-cesium-viewer/gi-cesium-viewer.module.ts":
/*!***************************************************************************************!*\
  !*** ./src/app/model-viewers/all-viewers/gi-cesium-viewer/gi-cesium-viewer.module.ts ***!
  \***************************************************************************************/
/*! exports provided: GICesiumViewerModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GICesiumViewerModule", function() { return GICesiumViewerModule; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_material_slider__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/material/slider */ "./node_modules/@angular/material/esm5/slider.es5.js");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/fesm5/common.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm5/forms.js");
/* harmony import */ var _angular_material_tooltip__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/material/tooltip */ "./node_modules/@angular/material/esm5/tooltip.es5.js");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/material */ "./node_modules/@angular/material/esm5/material.es5.js");
/* harmony import */ var _angular_material_expansion__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/material/expansion */ "./node_modules/@angular/material/esm5/expansion.es5.js");
/* harmony import */ var angular_split__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! angular-split */ "./node_modules/angular-split/fesm5/angular-split.js");
/* harmony import */ var ngx_pagination__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ngx-pagination */ "./node_modules/ngx-pagination/dist/ngx-pagination.js");
/* harmony import */ var ngx_color_picker__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ngx-color-picker */ "./node_modules/ngx-color-picker/dist/ngx-color-picker.es5.js");
/* harmony import */ var _gi_cesium_viewer_component__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./gi-cesium-viewer.component */ "./src/app/model-viewers/all-viewers/gi-cesium-viewer/gi-cesium-viewer.component.ts");
/* harmony import */ var _cesium_cesium_viewer_component__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./cesium/cesium-viewer.component */ "./src/app/model-viewers/all-viewers/gi-cesium-viewer/cesium/cesium-viewer.component.ts");
/* harmony import */ var _cesium_cesium_viewer_service__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./cesium/cesium-viewer.service */ "./src/app/model-viewers/all-viewers/gi-cesium-viewer/cesium/cesium-viewer.service.ts");
/* harmony import */ var _html_tab_component__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./html/tab.component */ "./src/app/model-viewers/all-viewers/gi-cesium-viewer/html/tab.component.ts");
/* harmony import */ var _html_tabs_component__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./html/tabs.component */ "./src/app/model-viewers/all-viewers/gi-cesium-viewer/html/tabs.component.ts");
/* harmony import */ var _html_dropdown_menu_component__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./html/dropdown-menu.component */ "./src/app/model-viewers/all-viewers/gi-cesium-viewer/html/dropdown-menu.component.ts");
/* harmony import */ var _html_modal_window_component__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./html/modal-window.component */ "./src/app/model-viewers/all-viewers/gi-cesium-viewer/html/modal-window.component.ts");
/* harmony import */ var _html_modal_window_service__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./html/modal-window.service */ "./src/app/model-viewers/all-viewers/gi-cesium-viewer/html/modal-window.service.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
// import @angular stuff







// import other modules



// import app components



// import html components





// import { AttributeComponent } from './attribute/attribute.component';
// import { ATabComponent } from './attribute/tab.component';
// import { ATabsComponent } from './attribute/tabs.component';
/**
 * GICesiumViewer
 * A viewer for Geo-Info models.
 */
var GICesiumViewerModule = /** @class */ (function () {
    function GICesiumViewerModule() {
    }
    GICesiumViewerModule_1 = GICesiumViewerModule;
    GICesiumViewerModule.forRoot = function () {
        return {
            ngModule: GICesiumViewerModule_1
        };
    };
    var GICesiumViewerModule_1;
    GICesiumViewerModule = GICesiumViewerModule_1 = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["NgModule"])({
            declarations: [
                _gi_cesium_viewer_component__WEBPACK_IMPORTED_MODULE_10__["GICesiumViewerComponent"],
                _cesium_cesium_viewer_component__WEBPACK_IMPORTED_MODULE_11__["CesiumViewerComponent"],
                _html_tab_component__WEBPACK_IMPORTED_MODULE_13__["TabComponent"],
                _html_tabs_component__WEBPACK_IMPORTED_MODULE_14__["TabsComponent"],
                _html_dropdown_menu_component__WEBPACK_IMPORTED_MODULE_15__["DropdownMenuComponent"],
                _html_modal_window_component__WEBPACK_IMPORTED_MODULE_16__["ModalWindowComponent"]
                // AttributeComponent,
                // ATabComponent,
                // ATabsComponent,
            ],
            exports: [
                _gi_cesium_viewer_component__WEBPACK_IMPORTED_MODULE_10__["GICesiumViewerComponent"]
            ],
            imports: [
                _angular_common__WEBPACK_IMPORTED_MODULE_2__["CommonModule"],
                angular_split__WEBPACK_IMPORTED_MODULE_7__["AngularSplitModule"],
                _angular_material_slider__WEBPACK_IMPORTED_MODULE_1__["MatSliderModule"],
                _angular_material__WEBPACK_IMPORTED_MODULE_5__["MatIconModule"],
                ngx_pagination__WEBPACK_IMPORTED_MODULE_8__["NgxPaginationModule"],
                _angular_material_expansion__WEBPACK_IMPORTED_MODULE_6__["MatExpansionModule"],
                _angular_material_tooltip__WEBPACK_IMPORTED_MODULE_4__["MatTooltipModule"],
                _angular_forms__WEBPACK_IMPORTED_MODULE_3__["FormsModule"],
                ngx_color_picker__WEBPACK_IMPORTED_MODULE_9__["ColorPickerModule"]
            ],
            providers: [
                _html_modal_window_service__WEBPACK_IMPORTED_MODULE_17__["ModalService"],
                _cesium_cesium_viewer_service__WEBPACK_IMPORTED_MODULE_12__["CesiumViewerService"]
            ]
        })
    ], GICesiumViewerModule);
    return GICesiumViewerModule;
}());



/***/ }),

/***/ "./src/app/model-viewers/all-viewers/gi-cesium-viewer/gi-cesium-viewer.settings.ts":
/*!*****************************************************************************************!*\
  !*** ./src/app/model-viewers/all-viewers/gi-cesium-viewer/gi-cesium-viewer.settings.ts ***!
  \*****************************************************************************************/
/*! exports provided: Locale */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Locale", function() { return Locale; });
var Locale = [{
        name: 'Singapore',
        zone: 'Asia/Singapore',
        lat: '1.35',
        long: '103.8'
    }];


/***/ }),

/***/ "./src/app/model-viewers/all-viewers/gi-cesium-viewer/gi-cesium-viewer.ts":
/*!********************************************************************************!*\
  !*** ./src/app/model-viewers/all-viewers/gi-cesium-viewer/gi-cesium-viewer.ts ***!
  \********************************************************************************/
/*! exports provided: GICesiumViewerModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _gi_cesium_viewer_module__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./gi-cesium-viewer.module */ "./src/app/model-viewers/all-viewers/gi-cesium-viewer/gi-cesium-viewer.module.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GICesiumViewerModule", function() { return _gi_cesium_viewer_module__WEBPACK_IMPORTED_MODULE_0__["GICesiumViewerModule"]; });




/***/ }),

/***/ "./src/app/model-viewers/all-viewers/gi-cesium-viewer/html/dropdown-menu.component.html":
/*!**********************************************************************************************!*\
  !*** ./src/app/model-viewers/all-viewers/gi-cesium-viewer/html/dropdown-menu.component.html ***!
  \**********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div\r\n    [hidden]=\"!visible\"\r\n    [style.left.px]='position.x'\r\n    [style.top.px]='position.y'\r\n>\r\n    <ul>\r\n        <ol>Please choose:</ol>\r\n        <ol *ngFor=\"let item of items\" (click)=\"selectItem(item)\">{{item.label}}</ol>\r\n    </ul>\r\n</div>\r\n"

/***/ }),

/***/ "./src/app/model-viewers/all-viewers/gi-cesium-viewer/html/dropdown-menu.component.scss":
/*!**********************************************************************************************!*\
  !*** ./src/app/model-viewers/all-viewers/gi-cesium-viewer/html/dropdown-menu.component.scss ***!
  \**********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "div {\n  position: absolute; }\n  div ul {\n    padding: 0;\n    border: 1px solid #eeeeee;\n    box-shadow: 1px 1px 3px 0px #bbbbbb; }\n  div ul ol {\n      cursor: pointer;\n      list-style: none;\n      background: #ffffff;\n      min-width: 20px;\n      padding: 5px 10px; }\n  div ul ol:hover {\n        background: #eeeeee; }\n  div ul:first-child {\n      background: #f9f9f9; }\n\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kZWwtdmlld2Vycy9hbGwtdmlld2Vycy9naS1jZXNpdW0tdmlld2VyL2h0bWwvQzpcXERyb3Bib3hcXEZpbGVzXFxTb2Z0d2FyZVxcR2l0SHViXFxkZXNpZ24tYXV0b21hdGlvblxcbW9iaXVzLXBhcmFtZXRyaWMtbW9kZWxsZXIvc3JjXFxhcHBcXG1vZGVsLXZpZXdlcnNcXGFsbC12aWV3ZXJzXFxnaS1jZXNpdW0tdmlld2VyXFxodG1sXFxkcm9wZG93bi1tZW51LmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksa0JBQWtCLEVBQUE7RUFEdEI7SUFHUSxVQUFVO0lBQ1YseUJBQXlCO0lBQ3pCLG1DQUFtQyxFQUFBO0VBTDNDO01BT1ksZUFBZTtNQUNmLGdCQUFnQjtNQUNoQixtQkFBbUI7TUFDbkIsZUFBZTtNQUNmLGlCQUFpQixFQUFBO0VBWDdCO1FBYWdCLG1CQUFtQixFQUFBO0VBYm5DO01BaUJZLG1CQUFtQixFQUFBIiwiZmlsZSI6InNyYy9hcHAvbW9kZWwtdmlld2Vycy9hbGwtdmlld2Vycy9naS1jZXNpdW0tdmlld2VyL2h0bWwvZHJvcGRvd24tbWVudS5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbImRpdntcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIHVse1xyXG4gICAgICAgIHBhZGRpbmc6IDA7XHJcbiAgICAgICAgYm9yZGVyOiAxcHggc29saWQgI2VlZWVlZTtcclxuICAgICAgICBib3gtc2hhZG93OiAxcHggMXB4IDNweCAwcHggI2JiYmJiYjtcclxuICAgICAgICBvbHtcclxuICAgICAgICAgICAgY3Vyc29yOiBwb2ludGVyO1xyXG4gICAgICAgICAgICBsaXN0LXN0eWxlOiBub25lO1xyXG4gICAgICAgICAgICBiYWNrZ3JvdW5kOiAjZmZmZmZmO1xyXG4gICAgICAgICAgICBtaW4td2lkdGg6IDIwcHg7XHJcbiAgICAgICAgICAgIHBhZGRpbmc6IDVweCAxMHB4O1xyXG4gICAgICAgICAgICAmOmhvdmVye1xyXG4gICAgICAgICAgICAgICAgYmFja2dyb3VuZDogI2VlZWVlZTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICAmOmZpcnN0LWNoaWxke1xyXG4gICAgICAgICAgICBiYWNrZ3JvdW5kOiAjZjlmOWY5O1xyXG4gICAgICAgIH1cclxuICAgIH1cclxufSJdfQ== */"

/***/ }),

/***/ "./src/app/model-viewers/all-viewers/gi-cesium-viewer/html/dropdown-menu.component.ts":
/*!********************************************************************************************!*\
  !*** ./src/app/model-viewers/all-viewers/gi-cesium-viewer/html/dropdown-menu.component.ts ***!
  \********************************************************************************************/
/*! exports provided: DropdownMenuComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DropdownMenuComponent", function() { return DropdownMenuComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};

var DropdownMenuComponent = /** @class */ (function () {
    function DropdownMenuComponent() {
        this.selected = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
    }
    DropdownMenuComponent.prototype.setItems = function (items, label) {
        var dropdownMenu = [];
        items.map(function (item) { return dropdownMenu.push({ id: item, label: "" + label + item }); });
        // console.log('dropdownMenu', dropdownMenu);
        this.items = dropdownMenu;
    };
    DropdownMenuComponent.prototype.selectItem = function (item) {
        this.visible = false;
        this.selected.emit(item.id);
    };
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])(),
        __metadata("design:type", Object)
    ], DropdownMenuComponent.prototype, "selected", void 0);
    DropdownMenuComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'dropdown-menu',
            template: __webpack_require__(/*! ./dropdown-menu.component.html */ "./src/app/model-viewers/all-viewers/gi-cesium-viewer/html/dropdown-menu.component.html"),
            styles: [__webpack_require__(/*! ./dropdown-menu.component.scss */ "./src/app/model-viewers/all-viewers/gi-cesium-viewer/html/dropdown-menu.component.scss")]
        })
    ], DropdownMenuComponent);
    return DropdownMenuComponent;
}());



/***/ }),

/***/ "./src/app/model-viewers/all-viewers/gi-cesium-viewer/html/modal-window.component.html":
/*!*********************************************************************************************!*\
  !*** ./src/app/model-viewers/all-viewers/gi-cesium-viewer/html/modal-window.component.html ***!
  \*********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"modal-window\" id=\"modal-window\">\r\n    <div class=\"modal-body\">\r\n        <ng-content></ng-content>\r\n    </div>\r\n</div>\r\n<div class=\"modal-background\"></div>"

/***/ }),

/***/ "./src/app/model-viewers/all-viewers/gi-cesium-viewer/html/modal-window.component.scss":
/*!*********************************************************************************************!*\
  !*** ./src/app/model-viewers/all-viewers/gi-cesium-viewer/html/modal-window.component.scss ***!
  \*********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "@charset \"UTF-8\";\n.modal-window {\n  max-width: 777px;\n  position: absolute;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  z-index: 1000;\n  overflow: auto;\n  -webkit-transition: transform 1s ease; }\n.modal-window.open {\n    -webkit-animation: slide 0.5s forwards;\n    animation: slide 0.5s forwards; }\n.modal-window     .modal-body {\n    padding: 20px;\n    background: #fff;\n    margin: 0;\n    min-height: calc(100% - 40px);\n    position: relative; }\n@-webkit-keyframes slide {\n  100% {\n    left: 0; } }\n@keyframes slide {\n  100% {\n    left: 0; } }\n.modal-background {\n  position: fixed;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  background-color: transparent;\n  opacity: 0.5;\n  z-index: 900; }\n\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kZWwtdmlld2Vycy9hbGwtdmlld2Vycy9naS1jZXNpdW0tdmlld2VyL2h0bWwvbW9kYWwtd2luZG93LmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC9tb2RlbC12aWV3ZXJzL2FsbC12aWV3ZXJzL2dpLWNlc2l1bS12aWV3ZXIvaHRtbC9DOlxcRHJvcGJveFxcRmlsZXNcXFNvZnR3YXJlXFxHaXRIdWJcXGRlc2lnbi1hdXRvbWF0aW9uXFxtb2JpdXMtcGFyYW1ldHJpYy1tb2RlbGxlci9zcmNcXGFwcFxcbW9kZWwtdmlld2Vyc1xcYWxsLXZpZXdlcnNcXGdpLWNlc2l1bS12aWV3ZXJcXGh0bWxcXG1vZGFsLXdpbmRvdy5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxnQkFBZ0I7QUNBaEI7RUFDSSxnQkFBZ0I7RUFDaEIsa0JBQWtCO0VBQ2xCLE1BQU07RUFDTixRQUFRO0VBQ1IsU0FBUztFQUVULGFBQWE7RUFDYixjQUFjO0VBQ2QscUNBQXFDLEVBQUE7QUFUekM7SUFXUSxzQ0FBc0M7SUFDdEMsOEJBQThCLEVBQUE7QUFadEM7SUFnQlEsYUFBYTtJQUNiLGdCQUFnQjtJQUNoQixTQUFTO0lBQ1QsNkJBQTZCO0lBSTdCLGtCQUFrQixFQUFBO0FBSzFCO0VBQ0k7SUFBTyxPQUFPLEVBQUEsRUFBQTtBQUdsQjtFQUNJO0lBQU8sT0FBTyxFQUFBLEVBQUE7QUFHbEI7RUFDSSxlQUFlO0VBQ2YsTUFBTTtFQUNOLFFBQVE7RUFDUixTQUFTO0VBQ1QsT0FBTztFQUNQLDZCQUE2QjtFQUM3QixZQUFZO0VBQ1osWUFBWSxFQUFBIiwiZmlsZSI6InNyYy9hcHAvbW9kZWwtdmlld2Vycy9hbGwtdmlld2Vycy9naS1jZXNpdW0tdmlld2VyL2h0bWwvbW9kYWwtd2luZG93LmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiQGNoYXJzZXQgXCJVVEYtOFwiO1xuLm1vZGFsLXdpbmRvdyB7XG4gIG1heC13aWR0aDogNzc3cHg7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiAwO1xuICByaWdodDogMDtcbiAgYm90dG9tOiAwO1xuICB6LWluZGV4OiAxMDAwO1xuICBvdmVyZmxvdzogYXV0bztcbiAgLXdlYmtpdC10cmFuc2l0aW9uOiB0cmFuc2Zvcm0gMXMgZWFzZTsgfVxuICAubW9kYWwtd2luZG93Lm9wZW4ge1xuICAgIC13ZWJraXQtYW5pbWF0aW9uOiBzbGlkZSAwLjVzIGZvcndhcmRzO1xuICAgIGFuaW1hdGlvbjogc2xpZGUgMC41cyBmb3J3YXJkczsgfVxuICAubW9kYWwtd2luZG93IMKgwqDCoMKgLm1vZGFsLWJvZHkge1xuICAgIHBhZGRpbmc6IDIwcHg7XG4gICAgYmFja2dyb3VuZDogI2ZmZjtcbiAgICBtYXJnaW46IDA7XG4gICAgbWluLWhlaWdodDogY2FsYygxMDAlIC0gNDBweCk7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlOyB9XG5cbkAtd2Via2l0LWtleWZyYW1lcyBzbGlkZSB7XG4gIDEwMCUge1xuICAgIGxlZnQ6IDA7IH0gfVxuXG5Aa2V5ZnJhbWVzIHNsaWRlIHtcbiAgMTAwJSB7XG4gICAgbGVmdDogMDsgfSB9XG5cbi5tb2RhbC1iYWNrZ3JvdW5kIHtcbiAgcG9zaXRpb246IGZpeGVkO1xuICB0b3A6IDA7XG4gIHJpZ2h0OiAwO1xuICBib3R0b206IDA7XG4gIGxlZnQ6IDA7XG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xuICBvcGFjaXR5OiAwLjU7XG4gIHotaW5kZXg6IDkwMDsgfVxuIiwiLm1vZGFsLXdpbmRvdyB7XHJcbiAgICBtYXgtd2lkdGg6IDc3N3B4O1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgdG9wOiAwO1xyXG4gICAgcmlnaHQ6IDA7XHJcbiAgICBib3R0b206IDA7XHJcbiAgICAvLyBsZWZ0OiAwO1xyXG4gICAgei1pbmRleDogMTAwMDtcclxuICAgIG92ZXJmbG93OiBhdXRvO1xyXG4gICAgLXdlYmtpdC10cmFuc2l0aW9uOiB0cmFuc2Zvcm0gMXMgZWFzZTtcclxuICAgICYub3BlbntcclxuICAgICAgICAtd2Via2l0LWFuaW1hdGlvbjogc2xpZGUgMC41cyBmb3J3YXJkcztcclxuICAgICAgICBhbmltYXRpb246IHNsaWRlIDAuNXMgZm9yd2FyZHM7XHJcbiAgICB9XHJcblxyXG7CoMKgwqDCoC5tb2RhbC1ib2R5IHtcclxuICAgICAgICBwYWRkaW5nOiAyMHB4O1xyXG4gICAgICAgIGJhY2tncm91bmQ6ICNmZmY7XHJcbiAgICAgICAgbWFyZ2luOiAwO1xyXG4gICAgICAgIG1pbi1oZWlnaHQ6IGNhbGMoMTAwJSAtIDQwcHgpO1xyXG4gICAgICAgIC8vIHdpZHRoOiA1MCU7XHJcbiAgICAgICAgLy8gbWFyZ2luLWxlZnQ6IDUwJTtcclxuICAgICAgICAvLyBsZWZ0OiAtMjUlO1xyXG4gICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgIH1cclxufVxyXG5cclxuXHJcbkAtd2Via2l0LWtleWZyYW1lcyBzbGlkZSB7XHJcbiAgICAxMDAlIHsgbGVmdDogMDsgfVxyXG59XHJcblxyXG5Aa2V5ZnJhbWVzIHNsaWRlIHtcclxuICAgIDEwMCUgeyBsZWZ0OiAwOyB9XHJcbn1cclxuXHJcbi5tb2RhbC1iYWNrZ3JvdW5kIHtcclxuICAgIHBvc2l0aW9uOiBmaXhlZDtcclxuICAgIHRvcDogMDtcclxuICAgIHJpZ2h0OiAwO1xyXG4gICAgYm90dG9tOiAwO1xyXG4gICAgbGVmdDogMDtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xyXG4gICAgb3BhY2l0eTogMC41O1xyXG4gICAgei1pbmRleDogOTAwO1xyXG59Il19 */"

/***/ }),

/***/ "./src/app/model-viewers/all-viewers/gi-cesium-viewer/html/modal-window.component.ts":
/*!*******************************************************************************************!*\
  !*** ./src/app/model-viewers/all-viewers/gi-cesium-viewer/html/modal-window.component.ts ***!
  \*******************************************************************************************/
/*! exports provided: ModalWindowComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ModalWindowComponent", function() { return ModalWindowComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _modal_window_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./modal-window.service */ "./src/app/model-viewers/all-viewers/gi-cesium-viewer/html/modal-window.service.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};


var ModalWindowComponent = /** @class */ (function () {
    function ModalWindowComponent(modalService, el) {
        this.modalService = modalService;
        this.el = el;
        this.element = el.nativeElement;
    }
    ModalWindowComponent.prototype.ngOnInit = function () {
        var modal = this;
        // ensure id attribute exists
        if (!this.id) {
            console.error('modal must have an id');
            return;
        }
        var leftContent = document.getElementsByClassName('content__panel')[0];
        this.containerWidth = leftContent.clientWidth;
        var modalWindow = this.element.querySelector('.modal-window');
        modalWindow.style.width = this.containerWidth + 11 + "px";
        modalWindow.style.left = -this.containerWidth - 11 + "px";
        // move element to bottom of page (just before </body>) so it can be displayed above everything else
        document.body.appendChild(this.element);
        // close modal on background click
        this.element.addEventListener('click', function (e) {
            if (e.target.className === 'modal-background') {
                modal.close();
            }
        });
        // add self (this modal instance) to the modal service so it's accessible from controllers
        this.modalService.add(this);
    };
    // remove self from modal service when directive is destroyed
    ModalWindowComponent.prototype.ngOnDestroy = function () {
        this.modalService.remove(this.id);
        this.element.remove();
    };
    // open modal
    ModalWindowComponent.prototype.open = function () {
        var modalWindow = document.getElementById('modal-window');
        // modalWindow.style.left = 0;
        modalWindow.classList.add('open');
        this.element.style.display = 'block';
        document.body.classList.add('modal-open');
    };
    // close modal
    ModalWindowComponent.prototype.close = function () {
        this.element.style.display = 'none';
        var modalWindow = this.element.querySelector('.modal-window');
        // modalWindow.style.left = `${-this.containerWidth - 11}px`;
        modalWindow.classList.remove('open');
        document.body.classList.remove('modal-open');
    };
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", String)
    ], ModalWindowComponent.prototype, "id", void 0);
    ModalWindowComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'modal-window',
            template: __webpack_require__(/*! ./modal-window.component.html */ "./src/app/model-viewers/all-viewers/gi-cesium-viewer/html/modal-window.component.html"),
            styles: [__webpack_require__(/*! ./modal-window.component.scss */ "./src/app/model-viewers/all-viewers/gi-cesium-viewer/html/modal-window.component.scss")]
        }),
        __metadata("design:paramtypes", [_modal_window_service__WEBPACK_IMPORTED_MODULE_1__["ModalService"], _angular_core__WEBPACK_IMPORTED_MODULE_0__["ElementRef"]])
    ], ModalWindowComponent);
    return ModalWindowComponent;
}());



/***/ }),

/***/ "./src/app/model-viewers/all-viewers/gi-cesium-viewer/html/modal-window.service.ts":
/*!*****************************************************************************************!*\
  !*** ./src/app/model-viewers/all-viewers/gi-cesium-viewer/html/modal-window.service.ts ***!
  \*****************************************************************************************/
/*! exports provided: ModalService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ModalService", function() { return ModalService; });
var ModalService = /** @class */ (function () {
    function ModalService() {
        this.modals = [];
    }
    ModalService.prototype.add = function (modal) {
        // add modal to array of active modals
        this.modals.push(modal);
    };
    ModalService.prototype.remove = function (id) {
        // remove modal from array of active modals
        this.modals = this.modals.filter(function (x) { return x.id !== id; });
    };
    ModalService.prototype.open = function (id) {
        var modal = this.modals.filter(function (x) { return x.id === id; })[0];
        modal.open();
    };
    ModalService.prototype.close = function (id) {
        // close modal specified by id
        var modal = this.modals.filter(function (x) { return x.id === id; })[0];
        modal.close();
    };
    return ModalService;
}());



/***/ }),

/***/ "./src/app/model-viewers/all-viewers/gi-cesium-viewer/html/tab.component.ts":
/*!**********************************************************************************!*\
  !*** ./src/app/model-viewers/all-viewers/gi-cesium-viewer/html/tab.component.ts ***!
  \**********************************************************************************/
/*! exports provided: TabComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TabComponent", function() { return TabComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};

var TabComponent = /** @class */ (function () {
    function TabComponent() {
        this.active = false;
    }
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])('tabTitle'),
        __metadata("design:type", String)
    ], TabComponent.prototype, "title", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", Object)
    ], TabComponent.prototype, "active", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])('index'),
        __metadata("design:type", Number)
    ], TabComponent.prototype, "index", void 0);
    TabComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'tab',
            template: "\n    <div [hidden]=\"!active\" class=\"pane\">\n      <ng-content></ng-content>\n    </div>\n  ",
            styles: ["\n    .pane{\n      padding: 0;\n    }\n  "]
        })
    ], TabComponent);
    return TabComponent;
}());



/***/ }),

/***/ "./src/app/model-viewers/all-viewers/gi-cesium-viewer/html/tabs.component.html":
/*!*************************************************************************************!*\
  !*** ./src/app/model-viewers/all-viewers/gi-cesium-viewer/html/tabs.component.html ***!
  \*************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<ul class=\"nav nav-tabs\">\r\n    <li\r\n        *ngFor=\"let tab of tabs;\"\r\n        (click)=\"selectTab(tab)\"\r\n        [class.active]=\"tab.active\"\r\n    >\r\n        <div>\r\n            <span>{{tab.title}}</span>\r\n        </div>\r\n    </li>\r\n    \r\n</ul>\r\n<ng-content></ng-content>\r\n"

/***/ }),

/***/ "./src/app/model-viewers/all-viewers/gi-cesium-viewer/html/tabs.component.scss":
/*!*************************************************************************************!*\
  !*** ./src/app/model-viewers/all-viewers/gi-cesium-viewer/html/tabs.component.scss ***!
  \*************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "/* Style The Dropdown Button */\n.dropbtn {\n  background-color: transparent;\n  color: #808080;\n  border: 1px solid transparent;\n  cursor: pointer;\n  font-family: sans-serif;\n  font-weight: 550;\n  font-size: 12px;\n  line-height: 15px;\n  outline: none;\n  text-align: center;\n  width: 100%;\n  height: 21px;\n  margin-top: -1px;\n  padding-right: 10px;\n  border-bottom: 2px solid transparent; }\n.dropbtn::after {\n  content: '';\n  width: 0;\n  height: 0;\n  border-left: 4px solid transparent;\n  border-right: 4px solid transparent;\n  border-top: 4px solid #505050;\n  border-bottom: none;\n  position: absolute;\n  top: 7px;\n  right: 6px; }\n/* The container <div> - needed to position the dropdown content */\n.dropdown {\n  position: absolute;\n  display: inline-block;\n  left: 0px;\n  width: 100%; }\n/* Dropdown Content (Hidden by Default) */\n.dropdown-content {\n  display: none;\n  position: absolute;\n  background-color: #ececec;\n  min-width: 85px;\n  box-shadow: 0px 8px 16px 0px rgba(0, 0, 0, 0.2);\n  z-index: 500;\n  top: 19px; }\n/* Links inside the dropdown */\n.dropdown-content div {\n  color: black;\n  padding: 6px 8px;\n  text-decoration: none; }\n/* Change color of dropdown links on hover */\n.dropdown-content div:hover {\n  background-color: #fefefe; }\n/* Show the dropdown menu on hover */\n/* Change the background color of the dropdown button when the dropdown content is shown */\n.dropdown:hover .dropbtn {\n  color: #00006d; }\n.nav-tabs li.active .dropbtn {\n  color: #00006d;\n  background-color: whitesmoke;\n  border: 1px solid #B3B3B3;\n  border-bottom: 2px solid whitesmoke; }\n.nav-tabs li.open .dropbtn::after {\n  content: '';\n  border-top: none;\n  border-bottom: 4px solid #505050; }\n#topology_dropdown, #object_dropdown {\n  display: none;\n  position: absolute;\n  width: -webkit-fit-content;\n  width: -moz-fit-content;\n  width: fit-content;\n  transition: display 0.4s;\n  z-index: 99999999;\n  background-color: #fafafb;\n  border: 1px solid #808080;\n  box-shadow: none; }\n#topology_dropdown div, #object_dropdown div {\n    cursor: pointer;\n    display: block;\n    min-width: 100px;\n    max-width: 300px;\n    overflow: hidden;\n    line-height: 20px;\n    background-color: #fafafb;\n    border: 0px;\n    margin: 0px;\n    padding: 0px 10px 0px 10px;\n    line-height: 30px;\n    height: 30px;\n    font-size: 12px;\n    color: #373737; }\n#topology_dropdown div:hover, #object_dropdown div:hover {\n      color: #00006d;\n      background-color: #E6E6E6; }\n\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kZWwtdmlld2Vycy9hbGwtdmlld2Vycy9naS1jZXNpdW0tdmlld2VyL2h0bWwvQzpcXERyb3Bib3hcXEZpbGVzXFxTb2Z0d2FyZVxcR2l0SHViXFxkZXNpZ24tYXV0b21hdGlvblxcbW9iaXVzLXBhcmFtZXRyaWMtbW9kZWxsZXIvc3JjXFxhcHBcXG1vZGVsLXZpZXdlcnNcXGFsbC12aWV3ZXJzXFxnaS1jZXNpdW0tdmlld2VyXFxodG1sXFx0YWJzLmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC9tb2RlbC12aWV3ZXJzL2FsbC12aWV3ZXJzL2dpLWNlc2l1bS12aWV3ZXIvaHRtbC9DOlxcRHJvcGJveFxcRmlsZXNcXFNvZnR3YXJlXFxHaXRIdWJcXGRlc2lnbi1hdXRvbWF0aW9uXFxtb2JpdXMtcGFyYW1ldHJpYy1tb2RlbGxlci9zcmNcXHNjc3NcXGNvbG9ycy5zY3NzIiwic3JjL2FwcC9tb2RlbC12aWV3ZXJzL2FsbC12aWV3ZXJzL2dpLWNlc2l1bS12aWV3ZXIvaHRtbC9DOlxcRHJvcGJveFxcRmlsZXNcXFNvZnR3YXJlXFxHaXRIdWJcXGRlc2lnbi1hdXRvbWF0aW9uXFxtb2JpdXMtcGFyYW1ldHJpYy1tb2RlbGxlci9zcmNcXHNjc3NcXHZhcmlhYmxlcy5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUdBLDhCQUFBO0FBQ0E7RUFDSSw2QkFBNkI7RUFDN0IsY0FBYztFQUNkLDZCQUE2QjtFQUM3QixlQUFlO0VBQ2YsdUJBQXVCO0VBQ3ZCLGdCQUFnQjtFQUNoQixlQUFlO0VBQ2YsaUJBQWlCO0VBQ2pCLGFBQWE7RUFDYixrQkFBa0I7RUFDbEIsV0FBVztFQUNYLFlBQVk7RUFDWixnQkFBZ0I7RUFDaEIsbUJBQW1CO0VBQ25CLG9DQUFvQyxFQUFBO0FBR3hDO0VBQ0ksV0FBVztFQUNYLFFBQVE7RUFDUixTQUFTO0VBQ1Qsa0NBQWtDO0VBQ2xDLG1DQUFtQztFQUNuQyw2QkFBNkI7RUFDN0IsbUJBQW1CO0VBQ25CLGtCQUFrQjtFQUNsQixRQUFRO0VBQ1IsVUFBVSxFQUFBO0FBR1osa0VBQUE7QUFDQTtFQUNFLGtCQUFrQjtFQUNsQixxQkFBcUI7RUFDckIsU0FBUztFQUNULFdBQVcsRUFBQTtBQUdiLHlDQUFBO0FBQ0E7RUFDRSxhQUFhO0VBQ2Isa0JBQWtCO0VBQ2xCLHlCQUF5QjtFQUN6QixlQUFlO0VBQ2YsK0NBQTRDO0VBQzVDLFlBQVk7RUFDWixTQUFTLEVBQUE7QUFHWCw4QkFBQTtBQUNBO0VBQ0UsWUFBWTtFQUNaLGdCQUFnQjtFQUNoQixxQkFBcUIsRUFBQTtBQUd2Qiw0Q0FBQTtBQUNBO0VBQTZCLHlCQUF5QixFQUFBO0FBRXRELG9DQUFBO0FBS0EsMEZBQUE7QUFDQTtFQUNFLGNBQ0osRUFBQTtBQUVBO0VBR1ksY0FBYztFQUNkLDRCQUE0QjtFQUM1Qix5QkFBeUI7RUFDekIsbUNBQW1DLEVBQUE7QUFOL0M7RUFXWSxXQUFXO0VBQ1gsZ0JBQWdCO0VBQ2hCLGdDQUFnQyxFQUFBO0FBSzVDO0VBQ0ksYUFBYTtFQUNiLGtCQUFrQjtFQUNsQiwwQkFBa0I7RUFBbEIsdUJBQWtCO0VBQWxCLGtCQUFrQjtFQUNsQix3QkFBd0I7RUFFeEIsaUJBQWlCO0VBQ2pCLHlCQzVGdUI7RUQ2RnZCLHlCQ25HWTtFRG9HWixnQkFBZ0IsRUFBQTtBQVRwQjtJQVlRLGVBQWU7SUFDZixjQUFjO0lBQ2QsZ0JBQWdCO0lBQ2hCLGdCQUFnQjtJQUNoQixnQkFBZ0I7SUFDaEIsaUJBQWlCO0lBQ2pCLHlCQ3ZHbUI7SUR3R25CLFdBQVc7SUFDWCxXQUFXO0lBQ1gsMEJBQTBCO0lBQzFCLGlCRTVHSztJRjZHTCxZRTdHSztJRjhHTCxlRS9HSztJRmdITCxjQzNHUSxFQUFBO0FEa0ZoQjtNQTJCWSxjQzNHbUI7TUQ0R25CLHlCQ25ISSxFQUFBIiwiZmlsZSI6InNyYy9hcHAvbW9kZWwtdmlld2Vycy9hbGwtdmlld2Vycy9naS1jZXNpdW0tdmlld2VyL2h0bWwvdGFicy5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIkBpbXBvcnQgJ35zY3NzL2NvbG9ycyc7XHJcbkBpbXBvcnQgJ35zY3NzL3ZhcmlhYmxlcyc7XHJcblxyXG4vKiBTdHlsZSBUaGUgRHJvcGRvd24gQnV0dG9uICovXHJcbi5kcm9wYnRuIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xyXG4gICAgY29sb3I6ICM4MDgwODA7XHJcbiAgICBib3JkZXI6IDFweCBzb2xpZCB0cmFuc3BhcmVudDtcclxuICAgIGN1cnNvcjogcG9pbnRlcjtcclxuICAgIGZvbnQtZmFtaWx5OiBzYW5zLXNlcmlmO1xyXG4gICAgZm9udC13ZWlnaHQ6IDU1MDtcclxuICAgIGZvbnQtc2l6ZTogMTJweDtcclxuICAgIGxpbmUtaGVpZ2h0OiAxNXB4O1xyXG4gICAgb3V0bGluZTogbm9uZTtcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgaGVpZ2h0OiAyMXB4O1xyXG4gICAgbWFyZ2luLXRvcDogLTFweDtcclxuICAgIHBhZGRpbmctcmlnaHQ6IDEwcHg7XHJcbiAgICBib3JkZXItYm90dG9tOiAycHggc29saWQgdHJhbnNwYXJlbnQ7XHJcbn1cclxuXHJcbi5kcm9wYnRuOjphZnRlcntcclxuICAgIGNvbnRlbnQ6ICcnO1xyXG4gICAgd2lkdGg6IDA7IFxyXG4gICAgaGVpZ2h0OiAwOyBcclxuICAgIGJvcmRlci1sZWZ0OiA0cHggc29saWQgdHJhbnNwYXJlbnQ7XHJcbiAgICBib3JkZXItcmlnaHQ6IDRweCBzb2xpZCB0cmFuc3BhcmVudDtcclxuICAgIGJvcmRlci10b3A6IDRweCBzb2xpZCAjNTA1MDUwO1xyXG4gICAgYm9yZGVyLWJvdHRvbTogbm9uZTtcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIHRvcDogN3B4O1xyXG4gICAgcmlnaHQ6IDZweDtcclxufVxyXG4gIFxyXG4gIC8qIFRoZSBjb250YWluZXIgPGRpdj4gLSBuZWVkZWQgdG8gcG9zaXRpb24gdGhlIGRyb3Bkb3duIGNvbnRlbnQgKi9cclxuICAuZHJvcGRvd24ge1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgbGVmdDogMHB4O1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgfVxyXG4gIFxyXG4gIC8qIERyb3Bkb3duIENvbnRlbnQgKEhpZGRlbiBieSBEZWZhdWx0KSAqL1xyXG4gIC5kcm9wZG93bi1jb250ZW50IHtcclxuICAgIGRpc3BsYXk6IG5vbmU7XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZWNlY2VjO1xyXG4gICAgbWluLXdpZHRoOiA4NXB4O1xyXG4gICAgYm94LXNoYWRvdzogMHB4IDhweCAxNnB4IDBweCByZ2JhKDAsMCwwLDAuMik7XHJcbiAgICB6LWluZGV4OiA1MDA7XHJcbiAgICB0b3A6IDE5cHg7XHJcbiAgfVxyXG4gIFxyXG4gIC8qIExpbmtzIGluc2lkZSB0aGUgZHJvcGRvd24gKi9cclxuICAuZHJvcGRvd24tY29udGVudCBkaXYge1xyXG4gICAgY29sb3I6IGJsYWNrO1xyXG4gICAgcGFkZGluZzogNnB4IDhweDtcclxuICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcclxuICB9XHJcbiAgXHJcbiAgLyogQ2hhbmdlIGNvbG9yIG9mIGRyb3Bkb3duIGxpbmtzIG9uIGhvdmVyICovXHJcbiAgLmRyb3Bkb3duLWNvbnRlbnQgZGl2OmhvdmVyIHtiYWNrZ3JvdW5kLWNvbG9yOiAjZmVmZWZlfVxyXG4gIFxyXG4gIC8qIFNob3cgdGhlIGRyb3Bkb3duIG1lbnUgb24gaG92ZXIgKi9cclxuICAuZHJvcGRvd246aG92ZXIgLmRyb3Bkb3duLWNvbnRlbnQge1xyXG4gICAgLy8gZGlzcGxheTogYmxvY2s7XHJcbiAgfVxyXG4gIFxyXG4gIC8qIENoYW5nZSB0aGUgYmFja2dyb3VuZCBjb2xvciBvZiB0aGUgZHJvcGRvd24gYnV0dG9uIHdoZW4gdGhlIGRyb3Bkb3duIGNvbnRlbnQgaXMgc2hvd24gKi9cclxuICAuZHJvcGRvd246aG92ZXIgLmRyb3BidG4ge1xyXG4gICAgY29sb3I6ICMwMDAwNmRcclxufVxyXG5cclxuLm5hdi10YWJze1xyXG4gICAgbGkuYWN0aXZle1xyXG4gICAgICAgIC5kcm9wYnRue1xyXG4gICAgICAgICAgICBjb2xvcjogIzAwMDA2ZDtcclxuICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGVzbW9rZTtcclxuICAgICAgICAgICAgYm9yZGVyOiAxcHggc29saWQgI0IzQjNCMztcclxuICAgICAgICAgICAgYm9yZGVyLWJvdHRvbTogMnB4IHNvbGlkIHdoaXRlc21va2U7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgbGkub3BlbntcclxuICAgICAgICAuZHJvcGJ0bjo6YWZ0ZXJ7XHJcbiAgICAgICAgICAgIGNvbnRlbnQ6ICcnO1xyXG4gICAgICAgICAgICBib3JkZXItdG9wOiBub25lO1xyXG4gICAgICAgICAgICBib3JkZXItYm90dG9tOiA0cHggc29saWQgIzUwNTA1MDtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbn1cclxuXHJcbiN0b3BvbG9neV9kcm9wZG93biwgI29iamVjdF9kcm9wZG93biB7XHJcbiAgICBkaXNwbGF5OiBub25lO1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgd2lkdGg6IGZpdC1jb250ZW50O1xyXG4gICAgdHJhbnNpdGlvbjogZGlzcGxheSAwLjRzO1xyXG5cclxuICAgIHotaW5kZXg6IDk5OTk5OTk5O1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogJGNvbG9yNjtcclxuICAgIGJvcmRlcjogMXB4IHNvbGlkICRjb2xvcjE7XHJcbiAgICBib3gtc2hhZG93OiBub25lO1xyXG5cclxuICAgIGRpdntcclxuICAgICAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgICAgICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICAgICAgbWluLXdpZHRoOiAxMDBweDtcclxuICAgICAgICBtYXgtd2lkdGg6IDMwMHB4O1xyXG4gICAgICAgIG92ZXJmbG93OiBoaWRkZW47XHJcbiAgICAgICAgbGluZS1oZWlnaHQ6IDIwcHg7XHJcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJGNvbG9yNjtcclxuICAgICAgICBib3JkZXI6IDBweDtcclxuICAgICAgICBtYXJnaW46IDBweDtcclxuICAgICAgICBwYWRkaW5nOiAwcHggMTBweCAwcHggMTBweDtcclxuICAgICAgICBsaW5lLWhlaWdodDogJGZzaXplMztcclxuICAgICAgICBoZWlnaHQ6ICRmc2l6ZTM7XHJcbiAgICAgICAgZm9udC1zaXplOiAkZnNpemUyO1xyXG4gICAgICAgIGNvbG9yOiAkY29sb3I4O1xyXG4gICAgICAgICY6aG92ZXJ7XHJcbiAgICAgICAgICAgIGNvbG9yOiAkc2VsZWN0ZWQtY29sb3I7XHJcbiAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICRjb2xvcjU7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxufSIsIlxyXG4kY29sb3IxOiAjODA4MDgwO1xyXG4kY29sb3IyOiAjOTk5OTk5O1xyXG4kY29sb3IzOiAjQjNCM0IzOyBcclxuJGNvbG9yNDogI0NDQ0NDQztcclxuJGNvbG9yNTogI0U2RTZFNjtcclxuJGNvbG9yNS01OiByZ2IoMjQ1LCAyNDUsIDI0NSk7XHJcbiRjb2xvcjY6IHJnYigyNTAsIDI1MCwgMjUxKTtcclxuXHJcbiRjb2xvcjc6IHdoaXRlO1xyXG4kY29sb3I4OiAjMzczNzM3O1xyXG5cclxuJHNlbGVjdGVkLWNvbG9yOiByZ2IoMCwgMCwgMTA5KTtcclxuJGhvdmVyLWNvbG9yOiAkY29sb3IyO1xyXG5cclxuJGVycm9yLWNvbG9yOiAjRTk0ODU4OyAvL3BpbmstcmVkXHJcbiRlcnJvci1jb2xvci1sdDogcmdiKDI1NSwgMjIwLCAyMjQpO1xyXG4kcGNvbG9yMjogI0YzQTMyQTsgLy9vcmFuZ2UteWVsbG93XHJcbiRwcmludC1jb2xvcjogcmdiKDEzMCwgMTkxLCAxMTApOyAvL2xpZ2h0Z3JlZW5cclxuJHByaW50LWNvbG9yLWx0OiByZ2IoMjMwLCAyNTUsIDIyMSk7XHJcbiRzZWxlY3RHZW9tLWNvbG9yOiByZ2IoMjU1LCAxNzQsIDApOyAvLyBsaWdodCBvcmFuZ2VcclxuJHNlbGVjdEdlb20tY29sb3ItbHQ6IHJnYigyNTUsIDIyNSwgMTYwKTtcclxuXHJcbi8vICRwcm9kLWJhY2tncm91bmQtY29sb3I6IHJnYigyNTAsMjUwLDI1MCk7XHJcbi8vICRiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMjIwLDIyMCwyMjApO1xyXG4kZnVuY3Rpb24tdGV4dC1jb2xvcjogcmdiKDE5MCwgMTQwLCAzMCk7XHJcbiRmdW5jdGlvbi10ZXh0LWNvbG9yMjogcmdiKDE4LCAxMjYsIDEzNik7XHJcbiRiYXNpYy1mdW5jdGlvbi10ZXh0LWNvbG9yOiByZ2IoMjAwLCA3MCwgMTUwKTtcclxuJGNvbW1lbnQtY29sb3I6IGRhcmtncmVlbjtcclxuIiwiJHBhZGRpbmc6IDQwcHg7IC8vID8gbm90IHVzZWRcclxuJHNtYWxsLXBhZGRpbmc6IDE1cHg7XHJcbiRoZWFkZXItaGVpZ2h0OiA0MHB4O1xyXG5cclxuJGZzaXplMTogMTVweDtcclxuJGZzaXplMjogMTJweDtcclxuJGZzaXplMzogMzBweDtcclxuXHJcbiRwb3J0LXNpemU6IDE1cHg7XHJcbiRkZWZhdWx0LXNpZGUtcGFkZGluZzogMTVweDtcclxuXHJcbiRkaXNhYmxlZC1vcGFjaXR5OiAwLjQ7Il19 */"

/***/ }),

/***/ "./src/app/model-viewers/all-viewers/gi-cesium-viewer/html/tabs.component.ts":
/*!***********************************************************************************!*\
  !*** ./src/app/model-viewers/all-viewers/gi-cesium-viewer/html/tabs.component.ts ***!
  \***********************************************************************************/
/*! exports provided: TabsComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TabsComponent", function() { return TabsComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _tab_component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./tab.component */ "./src/app/model-viewers/all-viewers/gi-cesium-viewer/html/tab.component.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};


var TabsComponent = /** @class */ (function () {
    function TabsComponent() {
    }
    TabsComponent.prototype.ngAfterContentInit = function () {
        var _this = this;
        setTimeout(function () {
            var activeTabs = _this.tabs.filter(function (tab) { return tab.active; });
            // if there is no active tab set, activate the first
            if (activeTabs.length === 0) {
                _this.selectTab(_this.tabs.first);
            }
        }, 0);
    };
    TabsComponent.prototype.selectTab = function (tab) {
        // deactivate all tabs
        this.tabs.toArray().forEach(function (_tab) { return _tab.active = false; });
        tab.active = true;
    };
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ContentChildren"])(_tab_component__WEBPACK_IMPORTED_MODULE_1__["TabComponent"]),
        __metadata("design:type", _angular_core__WEBPACK_IMPORTED_MODULE_0__["QueryList"])
    ], TabsComponent.prototype, "tabs", void 0);
    TabsComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'tabs',
            template: __webpack_require__(/*! ./tabs.component.html */ "./src/app/model-viewers/all-viewers/gi-cesium-viewer/html/tabs.component.html"),
            styles: [__webpack_require__(/*! ./tabs.component.scss */ "./src/app/model-viewers/all-viewers/gi-cesium-viewer/html/tabs.component.scss")]
        })
    ], TabsComponent);
    return TabsComponent;
}());



/***/ }),

/***/ "./src/app/model-viewers/all-viewers/gi-viewer/attribute/attribute.component.html":
/*!****************************************************************************************!*\
  !*** ./src/app/model-viewers/all-viewers/gi-viewer/attribute/attribute.component.html ***!
  \****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class = 'attrib--container'>\r\n  <my-tabs id=\"attribTab\" (selectedTab) = \"_setDataSource($event)\" (selectedTopology) = \"_setDataSource($event)\" [hidden]=\"dataSource === undefined\">\r\n    <my-tab *ngFor=\"let tab of tabs; let i = index\" tabTitle=\"{{tab.title}}\" index=\"{{i}}\">\r\n      <div class=\"mat-elevation-z1\">\r\n        <div class = \"table--container\">\r\n          <table mat-table [dataSource]=\"dataSource\" matSort [class] = 'columnItalic'>\r\n            <ng-container *ngFor=\"let column of displayedColumns;\" [matColumnDef]=\"column\" [sticky] = 'column === \"_id\"'>\r\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> {{column}} </th>\r\n                <td mat-cell *matCellDef=\"let element\"> {{element[column]}} </td>\r\n            </ng-container>\r\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns; sticky: true\"></tr>\r\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\" [class.selected-row]='row.selected?row.selected:false' (click)=\"selectRow(row._id, $event)\"></tr>\r\n          </table>\r\n          <!-- <div *ngIf=\"dataSource && dataSource.data.length === 0\" id=\"emptyMessage\">\r\n            No Data\r\n          </div> -->\r\n           \r\n        </div>\r\n        <div class = 'btm--container'>\r\n          <div id=\"displaySelected\">\r\n            <span>Show Selected</span>\r\n            <input type=\"checkbox\" id=\"switch\" (click)=\"showSelectedSwitch();\" [checked]=\"showSelected\"/><label for=\"switch\">Toggle</label>\r\n          </div>\r\n          <div class = 'paginator--container'>\r\n            <mat-paginator id=\"matPaginator\" [pageSizeOptions]=\"[20, 50, 100]\" showFirstLastButtons></mat-paginator>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </my-tab>\r\n  </my-tabs>\r\n</div>\r\n  "

/***/ }),

/***/ "./src/app/model-viewers/all-viewers/gi-viewer/attribute/attribute.component.scss":
/*!****************************************************************************************!*\
  !*** ./src/app/model-viewers/all-viewers/gi-viewer/attribute/attribute.component.scss ***!
  \****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".table--container {\n  overflow-y: auto;\n  overflow-x: auto; }\n\n.mat-table {\n  background-color: whitesmoke;\n  border-bottom: 1px solid #CCCCCC; }\n\ntable {\n  width: 100%;\n  min-width: 600px;\n  font-family: sans-serif;\n  background-color: transparent; }\n\ntable th.mat-header-cell:not(:first-of-type) {\n    padding: 0px 5px; }\n\ntable th.mat-header-cell {\n    border-left: 1px solid transparent;\n    border-right: 1px solid transparent; }\n\ntable th.mat-header-cell:hover {\n      border-left-color: #B3B3B3;\n      border-right-color: #B3B3B3; }\n\ntable th.mat-header-cell:first-of-type {\n    width: 40px !important;\n    padding-left: 12px; }\n\ntable th:nth-child(2) {\n    width: 100px; }\n\ntable th:nth-child(n+3) {\n    width: 50px; }\n\ntable th:last-child {\n    width: 2000px; }\n\ntable tr.mat-header-row {\n    background-color: whitesmoke;\n    height: 27px; }\n\ntable tr.mat-row {\n    height: 24px; }\n\ntable tr.mat-row.selected-row .mat-cell {\n      background-color: #e6e6e6; }\n\ntable tr.mat-row .mat-cell {\n      font-size: 12px;\n      color: #373737;\n      background-color: #fafafb;\n      border-bottom: 1px solid #B3B3B3;\n      border-left: 1px solid transparent;\n      border-right: 1px solid #B3B3B3; }\n\ntable tr.mat-row .mat-cell:not(:first-of-type) {\n        padding: 0px 5px; }\n\ntable tr.mat-row .mat-cell:first-of-type {\n        width: 40px !important;\n        padding-left: 12px; }\n\ntable tr.mat-row .mat-cell:nth-child(2) {\n        width: 100px; }\n\ntable tr.mat-row .mat-cell:nth-child(n+3) {\n        width: 50px; }\n\ntable tr.mat-row .mat-cell:last-child {\n        width: 2000px; }\n\ntable tr.mat-row:last-child .mat-cell {\n      border-bottom-color: transparent; }\n\ntable td.mat-cell:first-of-type, table td.mat-footer-cell:first-of-type, table th.mat-header-cell:first-of-type {\n    width: 10%; }\n\ntable.c2 tr.mat-row .mat-cell:nth-child(2), table.c2 th:nth-child(2) {\n  font-style: italic; }\n\n/deep/ #attribTab {\n  height: 100%;\n  width: 100%;\n  overflow-x: scroll; }\n\n/deep/ #attribTab ul {\n    background-color: transparent;\n    margin: 0;\n    padding-left: 11px;\n    white-space: nowrap;\n    height: 20px;\n    position: absolute;\n    top: 1px;\n    width: 100%;\n    min-width: -webkit-fit-content;\n    min-width: -moz-fit-content;\n    min-width: fit-content;\n    display: inline-flex; }\n\n/deep/ #attribTab ul li {\n      list-style: none;\n      float: left;\n      width: 90px;\n      color: #808080;\n      overflow: visible;\n      cursor: pointer;\n      position: relative;\n      height: inherit;\n      padding: 0px; }\n\n/deep/ #attribTab ul li span {\n        font-family: sans-serif;\n        margin-right: 2px;\n        font-weight: 550;\n        font-size: 12px;\n        line-height: 15px;\n        border: 1px solid transparent;\n        position: relative;\n        display: block;\n        padding: 2px;\n        text-align: center;\n        position: absolute;\n        width: inherit;\n        box-sizing: border-box;\n        width: 100%;\n        margin-top: -1px;\n        height: 21px; }\n\n/deep/ #attribTab ul li:hover {\n        background-color: transparent; }\n\n/deep/ #attribTab ul li:hover span {\n          color: #00006d;\n          background-color: transparent; }\n\n/deep/ #attribTab ul li.active {\n        background-color: transparent; }\n\n/deep/ #attribTab ul li.active span {\n          color: #00006d;\n          cursor: default;\n          background-color: whitesmoke;\n          border: 1px solid #B3B3B3;\n          border-bottom: 2px solid whitesmoke; }\n\n/deep/ #attribTab ul li:nth-child(2) {\n        width: 85px; }\n\n/deep/ #attribTab .pane {\n    margin-top: 20px;\n    height: calc(100% - 31px); }\n\n/deep/ #attribTab .pane .mat-elevation-z1 {\n      display: flex;\n      flex-flow: column nowrap;\n      height: 100%;\n      justify-content: space-between;\n      box-shadow: none;\n      border-top: 1px solid #B3B3B3; }\n\n.attrib--container {\n  height: calc(100% - 30px); }\n\n.attrib--container #attribTab {\n    height: 100%; }\n\n.attrib--container #attribTab my-tab {\n      height: 100%; }\n\n#displaySelected {\n  position: absolute;\n  z-index: 1;\n  bottom: 13px;\n  left: 5px; }\n\n#displaySelected span {\n    vertical-align: middle;\n    font-size: 12px;\n    color: #808080;\n    padding-right: 5px; }\n\n#displaySelected input[type=checkbox] {\n    height: 0;\n    width: 0;\n    visibility: hidden; }\n\n#emptyMessage {\n  text-align: center;\n  margin-top: 20px;\n  color: #888888; }\n\n.btm--container {\n  position: relative;\n  height: 30px;\n  position: absolute;\n  display: flex;\n  flex-flow: row nowrap;\n  justify-content: flex-end;\n  width: 100%;\n  bottom: 0px; }\n\n.btm--container #displaySelected {\n    padding-left: 10px;\n    width: 30%; }\n\n.btm--container #displaySelected span {\n      vertical-align: middle;\n      font-size: 12px;\n      color: #808080;\n      padding-right: 5px;\n      -moz-user-select: none;\n      -webkit-user-select: none; }\n\n.btm--container #displaySelected input[type=checkbox] {\n      height: 0;\n      width: 0;\n      visibility: hidden; }\n\n.btm--container #displaySelected label {\n      vertical-align: middle;\n      cursor: pointer;\n      text-indent: -9999px;\n      width: 30px;\n      height: 15px;\n      background: #CCCCCC;\n      display: inline-block;\n      position: relative; }\n\n.btm--container #displaySelected label:after {\n        content: '';\n        position: absolute;\n        top: 1px;\n        left: 1px;\n        width: 13px;\n        height: 13px;\n        background: #E6E6E6;\n        transition: 0.3s; }\n\n.btm--container #displaySelected input:checked + label {\n      background: #00006d; }\n\n.btm--container #displaySelected input:checked + label:after {\n      left: calc(100% - 2px);\n      -webkit-transform: translateX(-100%);\n              transform: translateX(-100%); }\n\n.btm--container #displaySelected input:hover:not(:checked) + label {\n      background: rgba(0, 0, 109, 0.4); }\n\n.btm--container #displaySelected input:hover:not(:checked) + label:after {\n        box-shadow: 2px 0px 0px 0px; }\n\n.btm--container #displaySelected label:active:after {\n      width: 13px; }\n\n.btm--container .paginator--container {\n    position: relative;\n    width: 80%;\n    display: flex;\n    flex-flow: row nowrap;\n    justify-content: flex-end; }\n\n.btm--container #matPaginator {\n    position: absolute;\n    top: -20px;\n    background-color: transparent;\n    width: 100%; }\n\n.btm--container #matPaginator .mat-paginator-outer-container .mat-paginator-container {\n      width: inherit;\n      min-height: 30px !important;\n      position: absolute;\n      bottom: 8px;\n      height: 20px;\n      display: flex;\n      flex-flow: row nowrap;\n      flex-shrink: 0;\n      font-family: sans-serif; }\n\n.btm--container #matPaginator .mat-paginator-outer-container .mat-paginator-container .mat-paginator-page-size, .btm--container #matPaginator .mat-paginator-outer-container .mat-paginator-container .mat-paginator-range-actions {\n        height: inherit;\n        align-items: baseline;\n        padding-right: 15px; }\n\n.btm--container #matPaginator .mat-paginator-outer-container .mat-paginator-container .mat-paginator-page-size-label, .btm--container #matPaginator .mat-paginator-outer-container .mat-paginator-container .mat-paginator-range-label {\n        white-space: nowrap; }\n\n.btm--container #matPaginator .mat-paginator-outer-container .mat-paginator-container .mat-paginator-page-size-select {\n        margin: 0; }\n\n.btm--container #matPaginator .mat-paginator-outer-container .mat-paginator-container .mat-paginator-page-size-select .mat-form-field-wrapper {\n          padding-bottom: 0.95em; }\n\n.btm--container #matPaginator .mat-paginator-outer-container .mat-paginator-container .mat-paginator-page-size-select .mat-form-field-wrapper .mat-form-field-flex .mat-form-field-infix .mat-select .mat-select-trigger .mat-select-value {\n            font-family: sans-serif;\n            color: #808080; }\n\n.btm--container #matPaginator .mat-paginator-outer-container .mat-paginator-container .mat-icon-button:hover .mat-paginator-icon {\n        fill: #00006d; }\n\n/*# sourceMappingURL=data:application/json;base64, */"

/***/ }),

/***/ "./src/app/model-viewers/all-viewers/gi-viewer/attribute/attribute.component.ts":
/*!**************************************************************************************!*\
  !*** ./src/app/model-viewers/all-viewers/gi-viewer/attribute/attribute.component.ts ***!
  \**************************************************************************************/
/*! exports provided: AttributeComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AttributeComponent", function() { return AttributeComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/material */ "./node_modules/@angular/material/esm5/material.es5.js");
/* harmony import */ var _libs_geo_info_GIModel__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @libs/geo-info/GIModel */ "./src/assets/libs/geo-info/GIModel.ts");
/* harmony import */ var _data_data_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../data/data.service */ "./src/app/model-viewers/all-viewers/gi-viewer/data/data.service.ts");
/* harmony import */ var _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @libs/geo-info/common */ "./src/assets/libs/geo-info/common.ts");
/* harmony import */ var _assets_libs_geo_info_GIAttribsThreejs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @assets/libs/geo-info/GIAttribsThreejs */ "./src/assets/libs/geo-info/GIAttribsThreejs.ts");
/* harmony import */ var _tabs_component__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./tabs.component */ "./src/app/model-viewers/all-viewers/gi-viewer/attribute/tabs.component.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};







var AttributeComponent = /** @class */ (function () {
    function AttributeComponent(injector) {
        this.attrTableSelect = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        this.showSelected = false;
        this.tabs = [
            { type: _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_4__["EEntType"].POSI, title: 'Positions' },
            { type: _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_4__["EEntType"].VERT, title: 'Vertices' },
            { type: _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_4__["EEntType"].EDGE, title: 'Edges' },
            { type: _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_4__["EEntType"].WIRE, title: 'Wires' },
            { type: _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_4__["EEntType"].FACE, title: 'Faces' },
            { type: _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_4__["EEntType"].POINT, title: 'Points' },
            { type: _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_4__["EEntType"].PLINE, title: 'Polylines' },
            { type: _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_4__["EEntType"].PGON, title: 'Polygons' },
            { type: _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_4__["EEntType"].COLL, title: 'Collections' },
            { type: _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_4__["EEntType"].MOD, title: 'Model' }
        ];
        this.displayedColumns = [];
        this.displayData = [];
        this.selected_ents = new Map();
        this.paginator = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["QueryList"]();
        this.sort = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["QueryList"]();
        this.tab_map = {
            0: _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_4__["EEntType"].POSI,
            1: _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_4__["EEntType"].VERT,
            2: _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_4__["EEntType"].EDGE,
            3: _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_4__["EEntType"].WIRE,
            4: _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_4__["EEntType"].FACE,
            5: _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_4__["EEntType"].POINT,
            6: _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_4__["EEntType"].PLINE,
            7: _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_4__["EEntType"].PGON,
            8: _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_4__["EEntType"].COLL,
            9: _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_4__["EEntType"].MOD
        };
        this.tab_rev_map = {
            0: 0,
            2: 1,
            3: 2,
            4: 3,
            5: 4,
            6: 5,
            7: 6,
            8: 7,
            9: 8,
            10: 9
        };
        this.columnItalic = 'c2';
        this.dataService = injector.get(_data_data_service__WEBPACK_IMPORTED_MODULE_3__["DataService"]);
        if (localStorage.getItem('mpm_attrib_current_tab') === null) {
            localStorage.setItem('mpm_attrib_current_tab', '0');
        }
    }
    AttributeComponent.prototype.ngOnChanges = function (changes) {
        if (changes['data'] && this.data) {
            this.refreshTable();
        }
        if (changes['reset']) {
            this.resetTable();
        }
        if (changes['refresh']) {
            this.refreshTable();
        }
    };
    AttributeComponent.prototype.generateTable = function (tabIndex) {
        var _this = this;
        if (this.data) {
            var ThreeJSData = this.data.attribs.threejs;
            if (Number(tabIndex) === 9) {
                this.displayData = ThreeJSData.getModelAttribsForTable();
            }
            else {
                var ready = this.data.attribs.threejs instanceof _assets_libs_geo_info_GIAttribsThreejs__WEBPACK_IMPORTED_MODULE_5__["GIAttribsThreejs"];
                this.selected_ents = this.dataService.selected_ents.get(_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_4__["EEntTypeStr"][this.tab_map[tabIndex]]);
                if (!ready) {
                    return;
                }
                if (this.showSelected) {
                    var SelectedAttribData = ThreeJSData.getEntsVals(this.selected_ents, this.tab_map[tabIndex]);
                    this.displayData = SelectedAttribData;
                }
                else {
                    var AllAttribData = ThreeJSData.getAttribsForTable(this.tab_map[tabIndex]);
                    AllAttribData.map(function (row) {
                        if (_this.selected_ents.has(row._id)) {
                            return row.selected = true;
                        }
                    });
                    this.displayData = AllAttribData;
                }
            }
            if (this.displayData.length > 0) {
                var columns = Object.keys(this.displayData[0]).filter(function (e) { return e !== 'selected'; });
                var new_columns = void 0;
                if (Number(tabIndex) === 9) {
                    new_columns = columns;
                }
                else {
                    var first = columns.shift();
                    var second = columns.shift();
                    var selected = columns.find(function (column) { return column.substr(0, 1) === '_'; });
                    var rest_of_columns = columns.filter(function (column) { return column.substr(0, 1) !== '_'; });
                    new_columns = selected ? [first, second, selected].concat(rest_of_columns, [' ']) : [first, second].concat(rest_of_columns, [' ']);
                }
                this.displayedColumns = new_columns;
                this.dataSource = new _angular_material__WEBPACK_IMPORTED_MODULE_1__["MatTableDataSource"](this.displayData);
            }
            else {
                this.displayedColumns = [];
                this.dataSource = new _angular_material__WEBPACK_IMPORTED_MODULE_1__["MatTableDataSource"]();
            }
            this.dataSource.paginator = this.paginator.toArray()[tabIndex];
            this.dataSource.sort = this.sort.toArray()[tabIndex];
        }
        return tabIndex;
    };
    AttributeComponent.prototype._setDataSource = function (tabIndex) {
        var _this = this;
        setTimeout(function () {
            localStorage.setItem('mpm_attrib_current_tab', tabIndex.toString());
            if (tabIndex === 999) {
                _this.displayedColumns = [];
                _this.dataSource = new _angular_material__WEBPACK_IMPORTED_MODULE_1__["MatTableDataSource"]();
            }
            else {
                _this.generateTable(tabIndex);
            }
        });
        sessionStorage.setItem('mpm_showSelected', JSON.stringify(this.showSelected));
    };
    AttributeComponent.prototype.getCurrentTab = function () {
        if (localStorage.getItem('mpm_attrib_current_tab') !== null) {
            return Number(localStorage.getItem('mpm_attrib_current_tab'));
        }
        else {
            return 0;
        }
    };
    AttributeComponent.prototype.showSelectedSwitch = function () {
        this.showSelected = !this.showSelected;
        sessionStorage.setItem('mpm_showSelected', JSON.stringify(this.showSelected));
        sessionStorage.setItem('mpm_changetab', JSON.stringify(false));
        this.refreshTable();
    };
    AttributeComponent.prototype.refreshTable = function () {
        var _this = this;
        var currentTab = this.getCurrentTab();
        setTimeout(function () {
            if (sessionStorage.getItem('mpm_showSelected')) {
                _this.showSelected = JSON.parse(sessionStorage.getItem('mpm_showSelected'));
            }
            var changeTab;
            if (sessionStorage.getItem('mpm_changetab')) {
                changeTab = JSON.parse(sessionStorage.getItem('mpm_changetab'));
            }
            // sessionStorage.setItem('mpm_changetab', JSON.stringify(true));
            if (changeTab) {
                if (_this.data) {
                    if (currentTab === 0 || currentTab === 9 || currentTab === 10) {
                        _this.child.selectTab(_this.tab_rev_map[currentTab]);
                    }
                    else if (currentTab === 2 || currentTab === 3 || currentTab === 4 || currentTab === 5) {
                        _this.child.selectTopology(_this.tab_rev_map[currentTab], event);
                    }
                    else if (currentTab === 6 || currentTab === 7 || currentTab === 8) {
                        _this.child.selectObject(_this.tab_rev_map[currentTab], event);
                    }
                }
            }
            _this.generateTable(currentTab);
        }, 0);
    };
    AttributeComponent.prototype.resetTable = function () {
        var rows = document.querySelectorAll('.selected-row');
        rows.forEach(function (row) { return row.classList.remove('selected-row'); });
        this.selected_ents.clear();
    };
    AttributeComponent.prototype.selectRow = function (ent_id, event) {
        var currentTab = this.getCurrentTab();
        if (currentTab === 9) {
            return;
        }
        var ent_type = ent_id.substr(0, 2);
        var id = Number(ent_id.substr(2));
        var target = event.target || event.srcElement || event.currentTarget;
        if (this.selected_ents.has(ent_id)) {
            this.attrTableSelect.emit({ action: 'unselect', ent_type: ent_type, id: id });
            this.selected_ents.delete(ent_id);
            // @ts-ignore
            target.parentNode.classList.remove('selected-row');
        }
        else {
            this.attrTableSelect.emit({ action: 'select', ent_type: ent_type, id: id });
            this.selected_ents.set(ent_id, id);
            // @ts-ignore
            target.parentNode.classList.add('selected-row');
        }
    };
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"])(_tabs_component__WEBPACK_IMPORTED_MODULE_6__["ATabsComponent"]),
        __metadata("design:type", _tabs_component__WEBPACK_IMPORTED_MODULE_6__["ATabsComponent"])
    ], AttributeComponent.prototype, "child", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", _libs_geo_info_GIModel__WEBPACK_IMPORTED_MODULE_2__["GIModel"])
    ], AttributeComponent.prototype, "data", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", Event)
    ], AttributeComponent.prototype, "refresh", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", Event)
    ], AttributeComponent.prototype, "reset", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])(),
        __metadata("design:type", Object)
    ], AttributeComponent.prototype, "attrTableSelect", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChildren"])(_angular_material__WEBPACK_IMPORTED_MODULE_1__["MatPaginator"]),
        __metadata("design:type", Object)
    ], AttributeComponent.prototype, "paginator", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChildren"])(_angular_material__WEBPACK_IMPORTED_MODULE_1__["MatSort"]),
        __metadata("design:type", Object)
    ], AttributeComponent.prototype, "sort", void 0);
    AttributeComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'attribute',
            template: __webpack_require__(/*! ./attribute.component.html */ "./src/app/model-viewers/all-viewers/gi-viewer/attribute/attribute.component.html"),
            styles: [__webpack_require__(/*! ./attribute.component.scss */ "./src/app/model-viewers/all-viewers/gi-viewer/attribute/attribute.component.scss")]
        }),
        __metadata("design:paramtypes", [_angular_core__WEBPACK_IMPORTED_MODULE_0__["Injector"]])
    ], AttributeComponent);
    return AttributeComponent;
}());



/***/ }),

/***/ "./src/app/model-viewers/all-viewers/gi-viewer/attribute/attribute.module.ts":
/*!***********************************************************************************!*\
  !*** ./src/app/model-viewers/all-viewers/gi-viewer/attribute/attribute.module.ts ***!
  \***********************************************************************************/
/*! exports provided: AttributeModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AttributeModule", function() { return AttributeModule; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/material */ "./node_modules/@angular/material/esm5/material.es5.js");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};


var AttributeModule = /** @class */ (function () {
    function AttributeModule() {
    }
    AttributeModule = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["NgModule"])({
            imports: [
                _angular_material__WEBPACK_IMPORTED_MODULE_1__["MatTableModule"],
                _angular_material__WEBPACK_IMPORTED_MODULE_1__["MatSortModule"],
                _angular_material__WEBPACK_IMPORTED_MODULE_1__["MatPaginatorModule"]
            ],
            exports: [
                _angular_material__WEBPACK_IMPORTED_MODULE_1__["MatTableModule"],
                _angular_material__WEBPACK_IMPORTED_MODULE_1__["MatSortModule"],
                _angular_material__WEBPACK_IMPORTED_MODULE_1__["MatPaginatorModule"]
            ]
        })
    ], AttributeModule);
    return AttributeModule;
}());



/***/ }),

/***/ "./src/app/model-viewers/all-viewers/gi-viewer/attribute/tab.component.ts":
/*!********************************************************************************!*\
  !*** ./src/app/model-viewers/all-viewers/gi-viewer/attribute/tab.component.ts ***!
  \********************************************************************************/
/*! exports provided: ATabComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ATabComponent", function() { return ATabComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};

var ATabComponent = /** @class */ (function () {
    function ATabComponent() {
        this.active = false;
    }
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])('tabTitle'),
        __metadata("design:type", String)
    ], ATabComponent.prototype, "title", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", Object)
    ], ATabComponent.prototype, "active", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])('index'),
        __metadata("design:type", Number)
    ], ATabComponent.prototype, "index", void 0);
    ATabComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'my-tab',
            template: "\n    <div [hidden]=\"!active\" class=\"pane\">\n      <ng-content></ng-content>\n    </div>\n  ",
            styles: ["\n    .pane{\n      padding: 0;\n    }\n  "]
        })
    ], ATabComponent);
    return ATabComponent;
}());



/***/ }),

/***/ "./src/app/model-viewers/all-viewers/gi-viewer/attribute/tabs.component.html":
/*!***********************************************************************************!*\
  !*** ./src/app/model-viewers/all-viewers/gi-viewer/attribute/tabs.component.html ***!
  \***********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<ul class=\"nav nav-tabs\">\r\n    <li (click)=\"selectTab(0)\" [class.active]=\"tab_active===0\"><span>Positions</span></li>\r\n    <li\r\n        [class.active]=\"tab_active===1\"\r\n        [class.open]='topology_open'\r\n    >\r\n        <div class=\"dropdown\">\r\n            <button class=\"dropbtn\" (click) = 'showTDropdown()' title=\"Topology{{topology_text!=='Topology'?(': '+topology_text):''}}\">{{topology_text}}</button>\r\n            <div class=\"dropdown-content\" id='topology_dropdown'>\r\n                <div *ngFor=\"let option of topology;\" (click)=\"selectTopology(option.tab, $event);\">{{option.title}}</div>\r\n            </div>\r\n        </div>\r\n    </li>\r\n    <li\r\n        [class.active]=\"tab_active===2\"\r\n        [class.open]='object_open'\r\n    >\r\n        <div class=\"dropdown\">\r\n            <button class=\"dropbtn\" (click) = 'showODropdown()' title=\"Object{{object_text!=='Object'?(': '+object_text):''}}\">{{object_text}}</button>\r\n            <div class=\"dropdown-content\" id='object_dropdown'>\r\n                <div *ngFor=\"let option of object;\" (click)=\"selectObject(option.tab, $event);\">{{option.title}}</div>\r\n            </div>\r\n        </div>\r\n    </li>\r\n    <li (click)=\"selectTab(8)\" [class.active]=\"tab_active===8\"><span>Collections</span></li>\r\n    <li (click)=\"selectTab(9)\" [class.active]=\"tab_active===9\"><span>Model</span></li>\r\n</ul>\r\n<ng-content></ng-content>\r\n\r\n<ng-template #topoTemplate>\r\n    \r\n</ng-template>\r\n\r\n<ng-template #objectTemplate>\r\n    \r\n</ng-template>\r\n\r\n"

/***/ }),

/***/ "./src/app/model-viewers/all-viewers/gi-viewer/attribute/tabs.component.scss":
/*!***********************************************************************************!*\
  !*** ./src/app/model-viewers/all-viewers/gi-viewer/attribute/tabs.component.scss ***!
  \***********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "/* Style The Dropdown Button */\n.dropbtn {\n  background-color: transparent;\n  color: #808080;\n  border: 1px solid transparent;\n  cursor: pointer;\n  font-family: sans-serif;\n  font-weight: 550;\n  font-size: 12px;\n  line-height: 15px;\n  outline: none;\n  text-align: center;\n  width: 100%;\n  height: 21px;\n  margin-top: -1px;\n  padding-right: 10px;\n  border-bottom: 2px solid transparent; }\n.dropbtn::after {\n  content: '';\n  width: 0;\n  height: 0;\n  border-left: 4px solid transparent;\n  border-right: 4px solid transparent;\n  border-top: 4px solid #505050;\n  border-bottom: none;\n  position: absolute;\n  top: 7px;\n  right: 6px; }\n/* The container <div> - needed to position the dropdown content */\n.dropdown {\n  position: absolute;\n  display: inline-block;\n  left: 0px;\n  width: 100%; }\n/* Dropdown Content (Hidden by Default) */\n.dropdown-content {\n  display: none;\n  position: absolute;\n  background-color: #ececec;\n  min-width: 85px;\n  box-shadow: 0px 8px 16px 0px rgba(0, 0, 0, 0.2);\n  z-index: 500;\n  top: 19px; }\n/* Links inside the dropdown */\n.dropdown-content div {\n  color: black;\n  padding: 6px 8px;\n  text-decoration: none; }\n/* Change color of dropdown links on hover */\n.dropdown-content div:hover {\n  background-color: #fefefe; }\n/* Show the dropdown menu on hover */\n/* Change the background color of the dropdown button when the dropdown content is shown */\n.dropdown:hover .dropbtn {\n  color: #00006d; }\n.nav-tabs li.active .dropbtn {\n  color: #00006d;\n  background-color: whitesmoke;\n  border: 1px solid #B3B3B3;\n  border-bottom: 2px solid whitesmoke; }\n.nav-tabs li.open .dropbtn::after {\n  content: '';\n  border-top: none;\n  border-bottom: 4px solid #505050; }\n#topology_dropdown, #object_dropdown {\n  display: none;\n  position: absolute;\n  width: -webkit-fit-content;\n  width: -moz-fit-content;\n  width: fit-content;\n  transition: display 0.4s;\n  z-index: 99999999;\n  background-color: #fafafb;\n  border: 1px solid #808080;\n  box-shadow: none; }\n#topology_dropdown div, #object_dropdown div {\n    cursor: pointer;\n    display: block;\n    min-width: 100px;\n    max-width: 300px;\n    overflow: hidden;\n    line-height: 20px;\n    background-color: #fafafb;\n    border: 0px;\n    margin: 0px;\n    padding: 0px 10px 0px 10px;\n    line-height: 30px;\n    height: 30px;\n    font-size: 12px;\n    color: #373737; }\n#topology_dropdown div:hover, #object_dropdown div:hover {\n      color: #00006d;\n      background-color: #E6E6E6; }\n\n/*# sourceMappingURL=data:application/json;base64, */"

/***/ }),

/***/ "./src/app/model-viewers/all-viewers/gi-viewer/attribute/tabs.component.ts":
/*!*********************************************************************************!*\
  !*** ./src/app/model-viewers/all-viewers/gi-viewer/attribute/tabs.component.ts ***!
  \*********************************************************************************/
/*! exports provided: ATabsComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ATabsComponent", function() { return ATabsComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _tab_component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./tab.component */ "./src/app/model-viewers/all-viewers/gi-viewer/attribute/tab.component.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};


var ATabsComponent = /** @class */ (function () {
    function ATabsComponent() {
        this.selectedTab = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        this.selectedTopology = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        this.tab_active = 0;
        this.topology_text = 'Topology';
        this.topologyActive = false;
        this.topology_open = false;
        this.topology = [
            { tab: 1, title: 'Vertices' },
            { tab: 2, title: 'Edges' },
            { tab: 3, title: 'Wires' },
            { tab: 4, title: 'Faces' }
        ];
        this.object_text = 'Objects';
        this.objectActive = false;
        this.object_open = false;
        this.object = [
            { tab: 5, title: 'Points' },
            { tab: 6, title: 'Polylines' },
            { tab: 7, title: 'Polygons' }
        ];
    }
    // contentChildren are set
    ATabsComponent.prototype.ngAfterContentInit = function () {
        var _this = this;
        setTimeout(function () {
            var activeTabs = _this.tabs.filter(function (tab) { return tab.active; });
            // if there is no active tab set, activate the first
            if (activeTabs.length === 0) {
                _this.selectTab(0);
            }
        }, 0);
    };
    ATabsComponent.prototype.ngAfterViewInit = function () {
        this.topology_dropdown = document.getElementById('topology_dropdown');
        this.topology_dropdown.style.display = 'none';
        this.object_dropdown = document.getElementById('object_dropdown');
        this.object_dropdown.style.display = 'none';
    };
    ATabsComponent.prototype.selectTab = function (tab) {
        // deactivate all tabs
        this.tabs.toArray().forEach(function (_tab) { return _tab.active = false; });
        // activate the tab the user has clicked on.
        this.tab_active = tab;
        var tt = this.tabs.find(function (t) { return Number(t.index) === tab; });
        if (tt) {
            tt.active = true;
        }
        this.selectedTab.emit(tab);
        this.topology_dropdown.style.display = 'none';
        this.topology_text = 'Topology';
        this.topology_open = false;
        this.object_dropdown.style.display = 'none';
        this.object_text = 'Objects';
        this.object_open = false;
    };
    ATabsComponent.prototype.selectTopology = function (tab, event) {
        this.tabs.toArray().forEach(function (_tab) { return _tab.active = false; });
        this.tab_active = 1;
        var option = this.topology.find(function (item) { return item.tab === tab; });
        if (!option) {
            return;
        }
        this.selectedTopology.emit(Number(tab));
        this.topology_text = option.title;
        this.tabs.toArray()[option.tab].active = true;
        if (event !== undefined) {
            // @ts-ignore
            event.target.parentElement.style.display = 'none';
        }
        this.topology_open = false;
    };
    ATabsComponent.prototype.selectObject = function (tab, event) {
        this.tabs.toArray().forEach(function (_tab) { return _tab.active = false; });
        this.tab_active = 2;
        var option = this.object.find(function (item) { return item.tab === tab; });
        if (!option) {
            return;
        }
        this.selectedTopology.emit(Number(tab));
        this.object_text = option.title;
        this.tabs.toArray()[option.tab].active = true;
        if (event !== undefined) {
            // @ts-ignore
            event.target.parentElement.style.display = 'none';
        }
        this.object_open = false;
    };
    ATabsComponent.prototype.showTDropdown = function () {
        this.object_text = 'Objects';
        this.object_open = false;
        this.object_dropdown.style.display = 'none';
        // this.tabs.toArray().forEach(_tab => _tab.active = false);
        if (this.topology_dropdown.style.display === 'none') {
            this.topology_dropdown.style.display = 'block';
            this.topology_open = true;
        }
        else {
            this.topology_dropdown.style.display = 'none';
            this.topology_open = false;
        }
    };
    ATabsComponent.prototype.showODropdown = function () {
        this.topology_text = 'Topology';
        this.topology_open = false;
        this.topology_dropdown.style.display = 'none';
        // this.tabs.toArray().forEach(_tab => _tab.active = false);
        if (this.object_dropdown.style.display === 'none') {
            this.object_dropdown.style.display = 'block';
            this.object_open = true;
        }
        else {
            this.object_dropdown.style.display = 'none';
            this.object_open = false;
        }
    };
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])(),
        __metadata("design:type", Object)
    ], ATabsComponent.prototype, "selectedTab", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])(),
        __metadata("design:type", Object)
    ], ATabsComponent.prototype, "selectedTopology", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ContentChildren"])(_tab_component__WEBPACK_IMPORTED_MODULE_1__["ATabComponent"]),
        __metadata("design:type", _angular_core__WEBPACK_IMPORTED_MODULE_0__["QueryList"])
    ], ATabsComponent.prototype, "tabs", void 0);
    ATabsComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'my-tabs',
            template: __webpack_require__(/*! ./tabs.component.html */ "./src/app/model-viewers/all-viewers/gi-viewer/attribute/tabs.component.html"),
            styles: [__webpack_require__(/*! ./tabs.component.scss */ "./src/app/model-viewers/all-viewers/gi-viewer/attribute/tabs.component.scss")]
        })
    ], ATabsComponent);
    return ATabsComponent;
}());



/***/ }),

/***/ "./src/app/model-viewers/all-viewers/gi-viewer/data/data.service.ts":
/*!**************************************************************************!*\
  !*** ./src/app/model-viewers/all-viewers/gi-viewer/data/data.service.ts ***!
  \**************************************************************************/
/*! exports provided: DataService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DataService", function() { return DataService; });
/* harmony import */ var _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @libs/geo-info/common */ "./src/assets/libs/geo-info/common.ts");
/* harmony import */ var _data_threejs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./data.threejs */ "./src/app/model-viewers/all-viewers/gi-viewer/data/data.threejs.ts");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};


// import @angular stuff

/**
 * DataService
 * The data service for the Goe-Info viewer.
 */
var DataService = /** @class */ (function () {
    /**
     * Create a data service.
     */
    function DataService() {
        this.selecting = [];
        // Selected Entities by Threejs Viewer for Attribute Table
        this.selected_ents = new Map();
        this.selected_ents.set(_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntTypeStr"][_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].POSI], new Map());
        this.selected_ents.set(_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntTypeStr"][_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].VERT], new Map());
        this.selected_ents.set(_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntTypeStr"][_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].EDGE], new Map());
        this.selected_ents.set(_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntTypeStr"][_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].FACE], new Map());
        this.selected_ents.set(_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntTypeStr"][_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].WIRE], new Map());
        this.selected_ents.set(_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntTypeStr"][_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].PGON], new Map());
        this.selected_ents.set(_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntTypeStr"][_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].PLINE], new Map());
        this.selected_ents.set(_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntTypeStr"][_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].POINT], new Map());
        this.selected_ents.set(_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntTypeStr"][_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].COLL], new Map());
        this.selected_positions = new Map();
        this.selected_vertex = new Map();
        this.selected_face_edges = new Map();
        this.selected_face_wires = new Map();
        this.selected_coll = new Map();
    }
    /**
     * Get the THreejs Scene
     */
    DataService.prototype.getThreejsScene = function () {
        return this._data_threejs;
    };
    /**
     * Set the THreejs Scene
     */
    DataService.prototype.setThreejsScene = function (settings) {
        this._data_threejs = new _data_threejs__WEBPACK_IMPORTED_MODULE_1__["DataThreejs"](settings);
    };
    /**
     * check selected entites number
     */
    DataService.prototype.countSelectedEnts = function () {
        var count = 0;
        this.selected_ents.forEach(function (selected_ents) {
            count = +selected_ents.size;
        });
        return count;
    };
    DataService.prototype.clearAll = function () {
        this.selected_ents.forEach(function (selected_ents) { return selected_ents.clear(); });
    };
    DataService = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_2__["Injectable"])(),
        __metadata("design:paramtypes", [])
    ], DataService);
    return DataService;
}());



/***/ }),

/***/ "./src/app/model-viewers/all-viewers/gi-viewer/data/data.threejs.ts":
/*!**************************************************************************!*\
  !*** ./src/app/model-viewers/all-viewers/gi-viewer/data/data.threejs.ts ***!
  \**************************************************************************/
/*! exports provided: DataThreejs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DataThreejs", function() { return DataThreejs; });
/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! three */ "./node_modules/three/build/three.module.js");
/* harmony import */ var three_orbit_controls__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! three-orbit-controls */ "./node_modules/three-orbit-controls/index.js");
/* harmony import */ var three_orbit_controls__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(three_orbit_controls__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _assets_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @assets/libs/geo-info/common */ "./src/assets/libs/geo-info/common.ts");



/**
 * ThreejsScene
 */
var DataThreejs = /** @class */ (function () {
    /**
     * Constructs a new data subscriber.
     */
    function DataThreejs(settings) {
        this.selected_geoms = new Map();
        this.selected_positions = new Map();
        this.selected_vertex = new Map();
        this.selected_face_edges = new Map();
        this.selected_face_wires = new Map();
        // text labels
        this.ObjLabelMap = new Map();
        this._textLabels = new Map();
        // number of threejs points, lines, triangles
        this._threejs_nums = [0, 0, 0];
        this.grid_pos = new three__WEBPACK_IMPORTED_MODULE_0__["Vector3"]();
        this.axes_pos = new three__WEBPACK_IMPORTED_MODULE_0__["Vector3"]();
        this.sceneObjs = [];
        this.sceneObjsSelected = new Map();
        this._positions = [];
        // BufferGeoms
        this.BufferGeoms = [];
        this.settings = settings;
        // scene
        this._scene = new three__WEBPACK_IMPORTED_MODULE_0__["Scene"]();
        this._scene.background = new three__WEBPACK_IMPORTED_MODULE_0__["Color"](this.settings.colors.viewer_bg);
        // this.basic_scene = new THREE.Scene();
        // this.basic_scene.background = new THREE.Color(0xE6E6E6);
        // renderer
        this._renderer = new three__WEBPACK_IMPORTED_MODULE_0__["WebGLRenderer"]({ antialias: true, alpha: true });
        this._renderer.autoClear = false;
        // this._renderer.setClearColor(0xcccccc, 0);
        this._renderer.setPixelRatio(window.devicePixelRatio);
        this._renderer.setSize(window.innerWidth / 1.8, window.innerHeight);
        this._renderer.shadowMap.enabled = true;
        this._renderer.shadowMap.type = three__WEBPACK_IMPORTED_MODULE_0__["PCFSoftShadowMap"];
        // camera settings
        this._camera = new three__WEBPACK_IMPORTED_MODULE_0__["PerspectiveCamera"](50, 1, 0.01, 1000000);
        // document.addEventListener( 'keypress', this.onWindowKeyPress, false );
        this._camera.position.x = -80;
        this._camera.position.y = -80;
        this._camera.position.z = 80;
        this._camera.aspect = 1;
        this._camera.up.set(0, 0, 1);
        this._camera.lookAt(this._scene.position);
        this._camera.updateProjectionMatrix();
        // orbit controls
        var orbit_controls = three_orbit_controls__WEBPACK_IMPORTED_MODULE_1__(three__WEBPACK_IMPORTED_MODULE_0__);
        this._controls = new orbit_controls(this._camera, this._renderer.domElement);
        this._controls.enableKeys = false;
        this._controls.update();
        // mouse
        this._mouse = new three__WEBPACK_IMPORTED_MODULE_0__["Vector2"]();
        // selecting
        this._raycaster = new three__WEBPACK_IMPORTED_MODULE_0__["Raycaster"]();
        this._raycaster.linePrecision = 0.05;
        this._raycaster.params.Points.threshold = 0.1;
        // add grid and lights
        this._addGrid();
        if (this.settings.ambient_light.show) {
            this._addAmbientLight();
        }
        if (this.settings.hemisphere_light.show) {
            this._addHemisphereLight();
        }
        if (this.settings.directional_light.show) {
            this._addDirectionalLight();
        }
        this._addAxes();
    }
    /**
     *
     * @param model
     * @param container
     */
    DataThreejs.prototype.addGeometry = function (model, container) {
        var _this_1 = this;
        if (localStorage.getItem('mpm_settings') !== null) {
            this.settings = JSON.parse(localStorage.getItem('mpm_settings'));
        }
        this._scene.background = new three__WEBPACK_IMPORTED_MODULE_0__["Color"](this.settings.colors.viewer_bg);
        while (this._scene.children.length > 0) {
            this._scene.remove(this._scene.children[0]);
            this.sceneObjs = [];
        }
        document.querySelectorAll('[id^=textLabel_]').forEach(function (value) {
            container.removeChild(value);
        });
        this.ObjLabelMap.clear();
        this._textLabels.clear();
        this._addGrid();
        if (this.settings.ambient_light.show) {
            this._addAmbientLight();
        }
        if (this.settings.hemisphere_light.show) {
            this._addHemisphereLight();
        }
        if (this.settings.directional_light.show) {
            this._addDirectionalLight();
        }
        this._addAxes();
        // Add geometry
        if (!model.threejs) {
            return;
        }
        var threejs_data = model.threejs.get3jsData();
        this.tri_select_map = threejs_data.triangle_select_map;
        this.edge_select_map = threejs_data.edge_select_map;
        this.point_select_map = threejs_data.point_select_map;
        this.posis_map = threejs_data.posis_map;
        this.vertex_map = threejs_data.vertex_map;
        var material_groups = threejs_data.material_groups;
        var materials = threejs_data.materials;
        // Create buffers that will be used by all geometry
        var verts_xyz_buffer = new three__WEBPACK_IMPORTED_MODULE_0__["Float32BufferAttribute"](threejs_data.vertex_xyz, 3);
        var normals_buffer = new three__WEBPACK_IMPORTED_MODULE_0__["Float32BufferAttribute"](threejs_data.normals, 3);
        var colors_buffer = new three__WEBPACK_IMPORTED_MODULE_0__["Float32BufferAttribute"](threejs_data.colors, 3);
        var posis_xyz_buffer = new three__WEBPACK_IMPORTED_MODULE_0__["Float32BufferAttribute"](threejs_data.posis_xyz, 3);
        this._addTris(threejs_data.triangle_indices, verts_xyz_buffer, colors_buffer, material_groups, materials);
        this._addLines(threejs_data.edge_indices, verts_xyz_buffer, normals_buffer);
        this._addPoints(threejs_data.point_indices, verts_xyz_buffer, colors_buffer, [255, 255, 255], 1);
        this._addPositions(threejs_data.posis_indices, posis_xyz_buffer, this.settings.colors.position, this.settings.positions.size);
        var position_size = this.settings.positions.size;
        this._raycaster.params.Points.threshold = position_size > 1 ? position_size / 3 : position_size / 4;
        var ground = this.settings.ground;
        if (ground.show) {
            var planeGeometry = new three__WEBPACK_IMPORTED_MODULE_0__["PlaneBufferGeometry"](ground.width, ground.length, 32, 32);
            var planeMaterial = new three__WEBPACK_IMPORTED_MODULE_0__["MeshPhongMaterial"]({
                color: new three__WEBPACK_IMPORTED_MODULE_0__["Color"](parseInt(ground.color.replace('#', '0x'), 16)),
                shininess: ground.shininess,
                side: three__WEBPACK_IMPORTED_MODULE_0__["DoubleSide"]
            });
            this.groundObj = new three__WEBPACK_IMPORTED_MODULE_0__["Mesh"](planeGeometry, planeMaterial);
            this.groundObj.position.setZ(ground.height);
            this.groundObj.receiveShadow = true;
            this._scene.add(this.groundObj);
        }
        var allObjs = this.getAllObjs();
        var center = allObjs.center;
        this.grid_pos.x = center.x;
        this.grid_pos.y = center.y;
        this.axes_pos.x = center.x;
        this.axes_pos.y = center.y;
        this.grid.position.set(center.x, center.y, 0);
        this.axesHelper.position.set(center.x, center.y, 0);
        // this.cameraLookat(center, allObjs.radius);
        setTimeout(function () {
            if (!_this_1._model.attribs.query.hasAttrib(_assets_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_2__["EEntType"].MOD, 'hud')) {
                return;
            }
            var hud = _this_1._model.attribs.query.getModelAttribValue('hud');
            var element = _this_1._createHud(hud).element;
            var old = document.getElementById('hud');
            if (old) {
                container.removeChild(old);
            }
            container.appendChild(element);
        }, 0);
    };
    /**
     *
     * @param ent_id
     * @param triangle_i
     * @param positions
     * @param container
     * @param label
     */
    DataThreejs.prototype.selectObjFace = function (ent_id, tris_i, positions, container, labelText) {
        if (labelText === void 0) { labelText = null; }
        var geom = new three__WEBPACK_IMPORTED_MODULE_0__["BufferGeometry"]();
        geom.setIndex(tris_i);
        geom.addAttribute('position', new three__WEBPACK_IMPORTED_MODULE_0__["Float32BufferAttribute"](positions, 3));
        geom.addAttribute('normal', new three__WEBPACK_IMPORTED_MODULE_0__["Float32BufferAttribute"](Array(positions.length).fill(0), 3));
        geom.addAttribute('color', new three__WEBPACK_IMPORTED_MODULE_0__["Float32BufferAttribute"](Array(positions.length).fill(0), 3));
        geom.clearGroups();
        geom.addGroup(0, tris_i.length, 0);
        geom.addGroup(0, tris_i.length, 1);
        var colorf = new three__WEBPACK_IMPORTED_MODULE_0__["Color"](parseInt(this.settings.colors.face_f_s.replace('#', '0x'), 16));
        var colorb = new three__WEBPACK_IMPORTED_MODULE_0__["Color"](parseInt(this.settings.colors.face_b_s.replace('#', '0x'), 16));
        var matf = new three__WEBPACK_IMPORTED_MODULE_0__["MeshPhongMaterial"]({
            specular: 0x000000,
            emissive: 0x000000,
            color: colorf,
            shininess: 0,
            side: three__WEBPACK_IMPORTED_MODULE_0__["FrontSide"]
        });
        var matb = new three__WEBPACK_IMPORTED_MODULE_0__["MeshPhongMaterial"]({
            specular: 0x000000,
            emissive: 0x000000,
            color: colorb,
            shininess: 0,
            side: three__WEBPACK_IMPORTED_MODULE_0__["BackSide"]
        });
        var mesh = new three__WEBPACK_IMPORTED_MODULE_0__["Mesh"](geom, [matf, matb]);
        mesh.geometry.computeBoundingSphere();
        mesh.geometry.computeVertexNormals();
        this._scene.add(mesh);
        this.selected_geoms.set(ent_id, mesh.id);
        this.sceneObjsSelected.set(ent_id, mesh);
        if (labelText) {
            var obj = { entity: mesh, type: objType.face, text: labelText };
            this.createLabelforObj(container, obj.entity, obj.type, labelText, ent_id);
            this.ObjLabelMap.set(ent_id, obj);
        }
        this.BufferGeoms.push(geom);
    };
    DataThreejs.prototype.initBufferLine = function (positions, indices, colors) {
        var geom = new three__WEBPACK_IMPORTED_MODULE_0__["BufferGeometry"]();
        if (indices.length > 2) {
            geom.setIndex(indices);
        }
        else {
            geom.setIndex([0, 1]);
        }
        geom.addAttribute('position', new three__WEBPACK_IMPORTED_MODULE_0__["Float32BufferAttribute"](positions, 3));
        geom.addAttribute('normal', new three__WEBPACK_IMPORTED_MODULE_0__["Float32BufferAttribute"](Array(positions.length).fill(0), 3));
        this.BufferGeoms.push(geom);
        var rgb = "rgb(" + colors.toString() + ")";
        var mat = new three__WEBPACK_IMPORTED_MODULE_0__["LineBasicMaterial"]({
            color: new three__WEBPACK_IMPORTED_MODULE_0__["Color"](rgb),
            linewidth: 5,
            linecap: 'round',
            linejoin: 'round' // ignored by WebGLRenderer
        });
        var bg = { geom: geom, mat: mat };
        return bg;
    };
    DataThreejs.prototype.selectObjLine = function (ent_id, indices, positions, container, labelText) {
        if (labelText === void 0) { labelText = null; }
        var bg = this.initBufferLine(positions, indices, [255, 0, 0]);
        var line = new three__WEBPACK_IMPORTED_MODULE_0__["LineSegments"](bg.geom, bg.mat);
        this._scene.add(line);
        this.selected_geoms.set(ent_id, line.id);
        this.sceneObjsSelected.set(ent_id, line);
        if (labelText) {
            var obj = { entity: line, type: objType.line, text: labelText };
            this.createLabelforObj(container, obj.entity, obj.type, labelText, ent_id);
            this.ObjLabelMap.set(ent_id, obj);
        }
    };
    DataThreejs.prototype.selectEdgeByFace = function (parent_ent_id, ent_id, indices, positions, container, labelText) {
        if (labelText === void 0) { labelText = null; }
        var bg = this.initBufferLine(positions, indices, [255, 0, 0]);
        if (this.selected_face_edges.get(parent_ent_id) === undefined) {
            this.selected_face_edges.set(parent_ent_id, new Map());
        }
        var check_exist = [];
        this.selected_face_edges.forEach(function (v) {
            v.forEach(function (vv, k) {
                check_exist.push(k);
            });
        });
        this.selected_geoms.forEach(function (v, k) {
            check_exist.push(k);
        });
        if (!check_exist.includes(ent_id)) {
            var line = new three__WEBPACK_IMPORTED_MODULE_0__["LineSegments"](bg.geom, bg.mat);
            this._scene.add(line);
            this.selected_face_edges.get(parent_ent_id).set(ent_id, line.id);
            this.selected_geoms.set(ent_id, line.id);
            this.sceneObjsSelected.set(ent_id, line);
            if (labelText) {
                var obj = {
                    entity: line,
                    type: objType.line,
                    text: labelText
                };
                this.createLabelforObj(container, obj.entity, obj.type, labelText, ent_id);
                this.ObjLabelMap.set(ent_id, obj);
            }
        }
    };
    DataThreejs.prototype.selectWireByFace = function (parent_ent_id, ent_id, indices, positions, container, labelText) {
        if (labelText === void 0) { labelText = null; }
        var bg = this.initBufferLine(positions, indices, [255, 0, 0]);
        if (this.selected_face_wires.get(parent_ent_id) === undefined) {
            this.selected_face_wires.set(parent_ent_id, new Map());
        }
        var check_exist = [];
        this.selected_face_wires.forEach(function (v) {
            v.forEach(function (vv, k) {
                check_exist.push(k);
            });
        });
        this.selected_geoms.forEach(function (v, k) {
            check_exist.push(k);
        });
        if (!check_exist.includes(ent_id)) {
            var line = new three__WEBPACK_IMPORTED_MODULE_0__["LineSegments"](bg.geom, bg.mat);
            this._scene.add(line);
            this.selected_face_wires.get(parent_ent_id).set(ent_id, line.id);
            this.selected_geoms.set(ent_id, line.id);
            this.sceneObjsSelected.set(ent_id, line);
            if (labelText) {
                var obj = {
                    entity: line,
                    type: objType.line,
                    text: labelText
                };
                this.createLabelforObj(container, obj.entity, obj.type, labelText, ent_id);
                this.ObjLabelMap.set(ent_id, obj);
            }
        }
    };
    DataThreejs.prototype.initBufferPoint = function (positions, point_indices, colors, color, size) {
        if (point_indices === void 0) { point_indices = null; }
        if (colors === void 0) { colors = null; }
        if (size === void 0) { size = 1; }
        // TODO check color and colors
        var geom = new three__WEBPACK_IMPORTED_MODULE_0__["BufferGeometry"]();
        if (point_indices) {
            geom.setIndex(point_indices);
        }
        geom.addAttribute('position', new three__WEBPACK_IMPORTED_MODULE_0__["Float32BufferAttribute"](positions, 3));
        var color_rgb = new three__WEBPACK_IMPORTED_MODULE_0__["Color"](parseInt(color.replace('#', '0x'), 16));
        if (colors) {
            geom.addAttribute('color', new three__WEBPACK_IMPORTED_MODULE_0__["Float32BufferAttribute"](colors, 3));
        }
        else {
            var color_data = void 0;
            if (positions.length < 3) {
                color_data = [color_rgb.r, color_rgb.g, color_rgb.b];
            }
            else {
                // @ts-ignore
                color_data = Array(positions.length / 3).fill([color_rgb.r, color_rgb.g, color_rgb.b]).flat(1);
            }
            var color_buffer = new Uint8Array(color_data);
            geom.addAttribute('color', new three__WEBPACK_IMPORTED_MODULE_0__["BufferAttribute"](color_buffer, 3, true));
        }
        geom.computeBoundingSphere();
        this.BufferGeoms.push(geom);
        var mat = new three__WEBPACK_IMPORTED_MODULE_0__["PointsMaterial"]({
            color: color_rgb,
            size: size,
        });
        var bg = { geom: geom, mat: mat };
        return bg;
    };
    DataThreejs.prototype.selectObjPoint = function (ent_id, point_indices, positions, container, labelText) {
        if (ent_id === void 0) { ent_id = null; }
        if (labelText === void 0) { labelText = null; }
        var bg = this.initBufferPoint(positions, point_indices, null, '#ff0000');
        var point = new three__WEBPACK_IMPORTED_MODULE_0__["Points"](bg.geom, bg.mat);
        this._scene.add(point);
        this.selected_geoms.set(ent_id, point.id);
        this.sceneObjsSelected.set(ent_id, point);
        if (labelText) {
            var obj = { entity: point, type: objType.point, text: labelText };
            this.createLabelforObj(container, obj.entity, obj.type, labelText, ent_id);
            this.ObjLabelMap.set(ent_id, obj);
        }
    };
    DataThreejs.prototype.selectObjPosition = function (parent_ent_id, ent_id, positions, container, labelText) {
        if (labelText === void 0) { labelText = null; }
        var bg = this.initBufferPoint(positions, null, null, this.settings.colors.position_s, this.settings.positions.size + 0.1);
        if (parent_ent_id === null) {
            var point = new three__WEBPACK_IMPORTED_MODULE_0__["Points"](bg.geom, bg.mat);
            this._scene.add(point);
            this.selected_geoms.set(ent_id, point.id);
            this.sceneObjsSelected.set(ent_id, point);
            if (labelText) {
                var obj = {
                    entity: point,
                    type: objType.point,
                    text: labelText
                };
                this.createLabelforObj(container, obj.entity, obj.type, labelText, ent_id);
                this.ObjLabelMap.set(ent_id, obj);
            }
        }
        else {
            if (this.selected_positions.get(parent_ent_id) === undefined) {
                this.selected_positions.set(parent_ent_id, new Map());
            }
            var check_exist_1 = [];
            this.selected_positions.forEach(function (v) {
                v.forEach(function (vv, k) {
                    check_exist_1.push(k);
                });
            });
            if (!check_exist_1.includes(ent_id)) {
                var point = new three__WEBPACK_IMPORTED_MODULE_0__["Points"](bg.geom, bg.mat);
                this._scene.add(point);
                this.selected_positions.get(parent_ent_id).set(ent_id, point.id);
                this.selected_geoms.set(ent_id, point.id);
                this.sceneObjsSelected.set(ent_id, point);
                if (labelText) {
                    var obj = {
                        entity: point,
                        type: objType.point,
                        text: labelText
                    };
                    this.createLabelforObj(container, obj.entity, obj.type, labelText, ent_id);
                    this.ObjLabelMap.set(ent_id, obj);
                }
            }
        }
    };
    DataThreejs.prototype.selectObjVetex = function (parent_ent_id, ent_id, positions, container, labelText) {
        if (labelText === void 0) { labelText = null; }
        var bg = this.initBufferPoint(positions, null, null, this.settings.colors.vertex_s, this.settings.positions.size + 0.1);
        if (parent_ent_id === null) {
            var point = new three__WEBPACK_IMPORTED_MODULE_0__["Points"](bg.geom, bg.mat);
            this._scene.add(point);
            this.sceneObjsSelected.set(ent_id, point);
            this.selected_geoms.set(ent_id, point.id);
            if (labelText) {
                var obj = {
                    entity: point,
                    type: objType.point,
                    text: labelText
                };
                this.createLabelforObj(container, obj.entity, obj.type, labelText, ent_id);
                this.ObjLabelMap.set(ent_id, obj);
            }
        }
        else {
            if (this.selected_vertex.get(parent_ent_id) === undefined) {
                this.selected_vertex.set(parent_ent_id, new Map());
            }
            var check_exist_2 = [];
            this.selected_vertex.forEach(function (v) {
                v.forEach(function (vv, k) {
                    check_exist_2.push(k);
                });
            });
            if (!check_exist_2.includes(ent_id)) {
                var point = new three__WEBPACK_IMPORTED_MODULE_0__["Points"](bg.geom, bg.mat);
                this._scene.add(point);
                this.selected_vertex.get(parent_ent_id).set(ent_id, point.id);
                this.sceneObjsSelected.set(ent_id, point);
                this.selected_geoms.set(ent_id, point.id);
                if (labelText) {
                    var obj = {
                        entity: point,
                        type: objType.point,
                        text: labelText
                    };
                    this.createLabelforObj(container, obj.entity, obj.type, labelText, ent_id);
                    this.ObjLabelMap.set(ent_id, obj);
                }
            }
        }
    };
    DataThreejs.prototype.createLabelforObj = function (container, obj, type, labelText, ent_id) {
        var label = this._createTextLabel(container, type, labelText, ent_id);
        var showSelected = JSON.parse(sessionStorage.getItem('mpm_showSelected'));
        if (showSelected) {
            var arr = [];
            if (JSON.parse(sessionStorage.getItem('mpm_selected_ents_arr'))) {
                arr = JSON.parse(sessionStorage.getItem('mpm_selected_ents_arr'));
            }
            var allLabels = document.getElementsByClassName('text-label');
            var _loop_1 = function (i) {
                var element = allLabels[i];
                var attr = Number(element.getAttribute('data-index'));
                var index = arr.findIndex(function (l) { return l === attr; });
                element.innerHTML = String(index);
            };
            for (var i = 0; i < allLabels.length; i++) {
                _loop_1(i);
            }
        }
        else {
            label.setHTML(labelText);
        }
        label.setParent(obj);
        this._textLabels.set(label.element.id, label);
        container.appendChild(label.element);
    };
    DataThreejs.prototype.unselectObj = function (ent_id, container) {
        var removing = this.selected_geoms.get(ent_id);
        // remove Geom from scene
        this._scene.remove(this._scene.getObjectById(removing));
        this.selected_geoms.delete(ent_id);
        // remove Geom from selected Objs Map
        this.sceneObjsSelected.delete(ent_id);
        this.ObjLabelMap.delete(ent_id);
        if (document.getElementById("textLabel_" + ent_id)) {
            container.removeChild(document.getElementById("textLabel_" + ent_id));
        }
    };
    DataThreejs.prototype.unselectObjGroup = function (parent_ent_id, container, group) {
        var _this_1 = this;
        var removing;
        if (group === 'positions') {
            removing = this.selected_positions.get(parent_ent_id);
        }
        else if (group === 'vertex') {
            removing = this.selected_vertex.get(parent_ent_id);
        }
        else if (group === 'face_edges') {
            // get the removing first
            removing = this.selected_face_edges.get(parent_ent_id);
        }
        else if (group === 'face_wires') {
            removing = this.selected_face_wires.get(parent_ent_id);
        }
        // remove positions from scene
        removing.forEach(function (v, k) {
            _this_1._scene.remove(_this_1._scene.getObjectById(v));
            _this_1.ObjLabelMap.delete(k);
            if (document.getElementById("textLabel_" + k)) {
                container.removeChild(document.getElementById("textLabel_" + k));
            }
        });
        if (group === 'positions') {
            // then delete
            this.selected_positions.delete(parent_ent_id);
        }
        else if (group === 'vertex') {
            this.selected_vertex.delete(parent_ent_id);
        }
        else if (group === 'face_edges') {
            this.selected_face_edges.delete(parent_ent_id);
        }
        else if (group === 'face_wires') {
            this.selected_face_wires.delete(parent_ent_id);
        }
    };
    // ============================================================================
    // Private methods
    // ============================================================================
    /**
     * Creates an ambient light
     */
    DataThreejs.prototype._addAmbientLight = function () {
        var color = new three__WEBPACK_IMPORTED_MODULE_0__["Color"](parseInt(this.settings.ambient_light.color.replace('#', '0x'), 16));
        var intensity = this.settings.ambient_light.intensity;
        this.ambient_light = new three__WEBPACK_IMPORTED_MODULE_0__["AmbientLight"](color, intensity); // soft white light
        this._scene.add(this.ambient_light);
    };
    /**
     * Creates a hemisphere light
     */
    DataThreejs.prototype._addHemisphereLight = function () {
        var skyColor = new three__WEBPACK_IMPORTED_MODULE_0__["Color"](parseInt(this.settings.hemisphere_light.skyColor.replace('#', '0x'), 16));
        var groundColor = new three__WEBPACK_IMPORTED_MODULE_0__["Color"](parseInt(this.settings.hemisphere_light.groundColor.replace('#', '0x'), 16));
        var intensity = this.settings.hemisphere_light.intensity;
        this.hemisphere_light = new three__WEBPACK_IMPORTED_MODULE_0__["HemisphereLight"](skyColor, // skyColor
        groundColor, // groundColor
        intensity // intensity
        );
        this._scene.add(this.hemisphere_light);
        var helper = new three__WEBPACK_IMPORTED_MODULE_0__["HemisphereLightHelper"](this.hemisphere_light, 10);
        helper.visible = this.settings.hemisphere_light.helper;
        this._scene.add(helper);
    };
    // Creates a Directional Light
    DataThreejs.prototype._addDirectionalLight = function () {
        this.directional_light = new three__WEBPACK_IMPORTED_MODULE_0__["DirectionalLight"](0xffffff, this.settings.directional_light.intensity);
        var distance = this.settings.directional_light.distance;
        this.getDLPosition(distance);
        this.directional_light.castShadow = this.settings.directional_light.shadow;
        this.directional_light.visible = this.settings.directional_light.show;
        var shadowMapSize = this.settings.directional_light.shadowSize;
        this.directional_light.shadow.mapSize.width = 1024 * shadowMapSize; // default
        this.directional_light.shadow.mapSize.height = 1024 * shadowMapSize; // default
        this.directional_light.shadow.camera.near = 0.5; // default
        this._scene.add(this.directional_light);
        this.DLDistance(distance);
    };
    DataThreejs.prototype.getDLPosition = function (scale) {
        var azimuth = this.settings.directional_light.azimuth, altitude = this.settings.directional_light.altitude, posX = Math.cos(azimuth * Math.PI * 2 / 360) * scale, posY = Math.sin(azimuth * Math.PI * 2 / 360) * scale, posZ = Math.sin(altitude * Math.PI * 2 / 360) * scale;
        this.directional_light.position.set(posX, posY, posZ);
    };
    DataThreejs.prototype.DLMapSize = function (size) {
        if (size === void 0) { size = null; }
        var _size;
        if (size) {
            _size = 1024 * size;
        }
        else {
            _size = 8192;
        }
        if (this.directional_light) {
            this.directional_light.shadow.mapSize.width = _size;
            this.directional_light.shadow.mapSize.width = _size;
        }
        this._renderer.render(this._scene, this._camera);
    };
    DataThreejs.prototype.DLDistance = function (size) {
        if (size === void 0) { size = null; }
        var scale;
        if (size) {
            scale = size;
        }
        else {
            scale = 10000;
        }
        if (this.directional_light) {
            var i = 0;
            var length_1 = this._scene.children.length;
            if (length_1 !== 0) {
                for (; i < length_1; i++) {
                    if (this._scene.children[i]) {
                        if (this._scene.children[i].name === 'DLHelper') {
                            this._scene.remove(this._scene.children[i]);
                        }
                    }
                }
            }
            this.directional_light.shadow.camera.far = 3 * scale;
            this.directional_light.shadow.camera.left = -scale;
            this.directional_light.shadow.camera.right = scale;
            this.directional_light.shadow.camera.top = scale;
            this.directional_light.shadow.camera.bottom = -scale;
            var helper = new three__WEBPACK_IMPORTED_MODULE_0__["CameraHelper"](this.directional_light.shadow.camera);
            helper.visible = this.settings.directional_light.helper;
            helper.name = 'DLHelper';
            this._scene.add(helper);
            this.getDLPosition(scale);
            this._renderer.render(this._scene, this._camera);
        }
    };
    DataThreejs.prototype.directionalLightMove = function (azimuth, altitude) {
        if (azimuth === void 0) { azimuth = null; }
        if (altitude === void 0) { altitude = null; }
        var distance = this.settings.directional_light.distance;
        if (azimuth) {
            this.directional_light.position.x = Math.cos(azimuth * Math.PI * 2 / 360) * distance;
            this.directional_light.position.y = Math.sin(azimuth * Math.PI * 2 / 360) * distance;
        }
        if (altitude) {
            this.directional_light.position.x = Math.cos(altitude * Math.PI * 2 / 360) * distance;
            this.directional_light.position.z = Math.sin(altitude * Math.PI * 2 / 360) * distance;
        }
    };
    // add axes
    DataThreejs.prototype._addAxes = function (size) {
        if (size === void 0) { size = this.settings.axes.size; }
        var i = 0;
        var length = this._scene.children.length;
        if (length !== 0) {
            for (; i < length; i++) {
                if (this._scene.children[i]) {
                    if (this._scene.children[i].name === 'AxesHelper') {
                        this._scene.remove(this._scene.children[i]);
                    }
                }
            }
        }
        this.axesHelper = new three__WEBPACK_IMPORTED_MODULE_0__["AxesHelper"](size);
        this.axesHelper.visible = this.settings.axes.show;
        if (this.axesHelper.visible) {
            this.axesHelper.name = 'AxesHelper';
            this.axesHelper.position.set(this.axes_pos.x, this.axes_pos.y, 0);
            this._scene.add(this.axesHelper);
        }
        // this.axesHelper.position.set(0, 0, 0);
    };
    /**
     * Draws a grid on the XY plane.
     */
    DataThreejs.prototype._addGrid = function (size) {
        if (size === void 0) { size = this.settings.grid.size; }
        var i = 0;
        var length = this._scene.children.length;
        for (; i < length; i++) {
            if (this._scene.children[i]) {
                if (this._scene.children[i].name === 'GridHelper') {
                    this._scene.remove(this._scene.children[i]);
                }
            }
        }
        this.grid = new three__WEBPACK_IMPORTED_MODULE_0__["GridHelper"](size, size / 10);
        this.grid.visible = this.settings.grid.show;
        // todo: change grid -> grid_value
        if (this.grid.visible) {
            this.grid.name = 'GridHelper';
            var vector = new three__WEBPACK_IMPORTED_MODULE_0__["Vector3"](0, 1, 0);
            this.grid.lookAt(vector);
            this.grid.position.set(this.grid_pos.x, this.grid_pos.y, 0);
            this._scene.add(this.grid);
        }
    };
    /**
     * Add threejs triangles to the scene
     */
    DataThreejs.prototype._addTris = function (tris_i, posis_buffer, 
    // normals_buffer: THREE.Float32BufferAttribute,
    colors_buffer, material_groups, materials) {
        var geom = new three__WEBPACK_IMPORTED_MODULE_0__["BufferGeometry"]();
        geom.setIndex(tris_i);
        geom.addAttribute('position', posis_buffer);
        // geom.addAttribute('normal', normals_buffer);
        geom.addAttribute('color', colors_buffer);
        var colorf = new three__WEBPACK_IMPORTED_MODULE_0__["Color"](parseInt(this.settings.colors.face_f.replace('#', '0x'), 16));
        var colorb = new three__WEBPACK_IMPORTED_MODULE_0__["Color"](parseInt(this.settings.colors.face_b.replace('#', '0x'), 16));
        geom.clearGroups();
        material_groups.forEach(function (element) {
            geom.addGroup(element[0], element[1], element[2]);
        });
        this.BufferGeoms.push(geom);
        var material_arr = [];
        var index = 0;
        var l = materials.length;
        for (; index < l; index++) {
            var element = materials[index];
            var mat = void 0;
            if (index === 0) {
                delete element.type;
                element.color = colorf;
                mat = new three__WEBPACK_IMPORTED_MODULE_0__["MeshPhongMaterial"](element);
            }
            else if (index === 1) {
                delete element.type;
                element.color = colorb;
                mat = new three__WEBPACK_IMPORTED_MODULE_0__["MeshPhongMaterial"](element);
            }
            else {
                if (element.type === MaterialType.MeshBasicMaterial) {
                    delete element.type;
                    mat = new three__WEBPACK_IMPORTED_MODULE_0__["MeshBasicMaterial"](element);
                }
                else if (element.type === MaterialType.MeshPhongMaterial) {
                    delete element.type;
                    mat = new three__WEBPACK_IMPORTED_MODULE_0__["MeshPhongMaterial"](element);
                }
                else if (element.type === MaterialType.MeshPhysicalMaterial) {
                    delete element.type;
                    mat = new three__WEBPACK_IMPORTED_MODULE_0__["MeshPhysicalMaterial"](element);
                }
                else if (element.type === MaterialType.MeshLambertMaterial) {
                    delete element.type;
                    mat = new three__WEBPACK_IMPORTED_MODULE_0__["MeshLambertMaterial"](element);
                }
                else if (element.type === MaterialType.MeshStandardMaterial) {
                    delete element.type;
                    mat = new three__WEBPACK_IMPORTED_MODULE_0__["MeshStandardMaterial"](element);
                }
            }
            material_arr.push(mat);
        }
        var mesh = new three__WEBPACK_IMPORTED_MODULE_0__["Mesh"](geom, material_arr);
        mesh.geometry.computeBoundingSphere();
        mesh.geometry.computeVertexNormals();
        mesh.castShadow = true;
        // show vertex normals
        this.vnh = new three__WEBPACK_IMPORTED_MODULE_0__["VertexNormalsHelper"](mesh, this.settings.normals.size, 0x0000ff);
        this.vnh.visible = this.settings.normals.show;
        this._scene.add(this.vnh);
        this.sceneObjs.push(mesh);
        // add mesh to scene
        this._scene.add(mesh);
        this._threejs_nums[2] = tris_i.length / 3;
    };
    /**
     * Add threejs lines to the scene
     */
    DataThreejs.prototype._addLines = function (lines_i, posis_buffer, normals_buffer, size) {
        if (size === void 0) { size = 1; }
        var geom = new three__WEBPACK_IMPORTED_MODULE_0__["BufferGeometry"]();
        geom.setIndex(lines_i);
        geom.addAttribute('position', posis_buffer);
        geom.addAttribute('normal', normals_buffer);
        this.BufferGeoms.push(geom);
        // geom.addAttribute( 'color', new THREE.Float32BufferAttribute( colors_flat, 3 ) );
        var mat = new three__WEBPACK_IMPORTED_MODULE_0__["LineBasicMaterial"]({
            color: 0x000000,
            linewidth: size,
            linecap: 'round',
            linejoin: 'round' // ignored by WebGLRenderer
        });
        var line = new three__WEBPACK_IMPORTED_MODULE_0__["LineSegments"](geom, mat);
        this.sceneObjs.push(line);
        this._scene.add(line);
        this._threejs_nums[1] = lines_i.length / 2;
    };
    /**
     * Add threejs points to the scene
     */
    DataThreejs.prototype._addPoints = function (points_i, posis_buffer, colors_buffer, color, size) {
        if (size === void 0) { size = 1; }
        var geom = new three__WEBPACK_IMPORTED_MODULE_0__["BufferGeometry"]();
        geom.setIndex(points_i);
        geom.addAttribute('position', posis_buffer);
        geom.addAttribute('color', colors_buffer);
        this.BufferGeoms.push(geom);
        // geom.computeBoundingSphere();
        var rgb = "rgb(" + color.toString() + ")";
        var mat = new three__WEBPACK_IMPORTED_MODULE_0__["PointsMaterial"]({
            color: new three__WEBPACK_IMPORTED_MODULE_0__["Color"](rgb),
            size: size,
            vertexColors: three__WEBPACK_IMPORTED_MODULE_0__["VertexColors"]
        });
        var point = new three__WEBPACK_IMPORTED_MODULE_0__["Points"](geom, mat);
        this.sceneObjs.push(point);
        this._scene.add(point);
        this._threejs_nums[0] = points_i.length;
    };
    DataThreejs.prototype._addPositions = function (points_i, posis_buffer, color, size) {
        var _this_1 = this;
        if (size === void 0) { size = 1; }
        var geom = new three__WEBPACK_IMPORTED_MODULE_0__["BufferGeometry"]();
        geom.setIndex(points_i);
        geom.addAttribute('position', posis_buffer);
        this.BufferGeoms.push(geom);
        // geom.computeBoundingSphere();
        var mat = new three__WEBPACK_IMPORTED_MODULE_0__["PointsMaterial"]({
            color: new three__WEBPACK_IMPORTED_MODULE_0__["Color"](parseInt(color.replace('#', '0x'), 16)),
            size: size,
        });
        var point = new three__WEBPACK_IMPORTED_MODULE_0__["Points"](geom, mat);
        this.sceneObjs.push(point);
        this._scene.add(point);
        this._positions.push(point);
        this._positions.map(function (p) { return p.visible = _this_1.settings.positions.show; });
    };
    DataThreejs.prototype._createTextLabel = function (container, type, labelText, ent_id) {
        var div = document.createElement('div');
        div.id = "textLabel_" + ent_id;
        div.title = ent_id;
        div.setAttribute('data-index', ent_id.substr(2));
        div.className = 'text-label';
        div.style.position = 'absolute';
        div.style.background = 'rgba(255, 255, 255, 0.3)';
        div.style.padding = '1px';
        div.innerHTML = labelText;
        div.style.top = '-1000';
        div.style.left = '-1000';
        var _this = this;
        return {
            element: div,
            parent: false,
            position: new three__WEBPACK_IMPORTED_MODULE_0__["Vector3"](0, 0, 0),
            setHTML: function (html) {
                this.element.innerHTML = html;
            },
            setParent: function (threejsobj) {
                this.parent = threejsobj;
            },
            updatePosition: function () {
                if (this.parent) {
                    if (type === objType.point || type === objType.face) {
                        var center = this.parent.geometry.boundingSphere.center;
                        this.position.copy(center);
                    }
                    else if (type === objType.line) {
                        var p = this.parent.geometry.getAttribute('position').array;
                        var x = (p[0] + p[3]) / 2, y = (p[1] + p[4]) / 2, z = (p[2] + p[5]) / 2;
                        var center = new three__WEBPACK_IMPORTED_MODULE_0__["Vector3"](x, y, z);
                        this.position.copy(center);
                    }
                }
                var coords2d = this.get2DCoords(this.position, _this._camera);
                this.element.style.left = coords2d.x + 'px';
                this.element.style.top = coords2d.y + 'px';
            },
            get2DCoords: function (position, camera) {
                var vector = position.project(camera);
                vector.x = (vector.x + 1) / 2 * container.offsetWidth;
                vector.y = -(vector.y - 1) / 2 * container.offsetHeight;
                return vector;
            }
        };
    };
    DataThreejs.prototype.disposeWebGL = function () {
        var _this_1 = this;
        console.log('this._renderer.info', this._renderer.info.memory.geometries);
        this.sceneObjs.forEach(function (obj) { return _this_1._scene.remove(obj); });
        var BufferGeoms = this.BufferGeoms;
        BufferGeoms.forEach(function (geom) {
            geom.dispose();
        });
        this.BufferGeoms = [];
        console.log('this._renderer.info', this._renderer.info.memory.geometries);
    };
    DataThreejs.prototype.lookAtObj = function (width) {
        var allObjs = this.getAllObjs();
        var selectedObjs = this.getSelectedObjs();
        if (allObjs === null && selectedObjs === null) {
            var sceneCenter = this._scene.position;
            this._camera.lookAt(sceneCenter);
            // this._camera.updateProjectionMatrix();
            this._controls.target.set(sceneCenter.x, sceneCenter.y, sceneCenter.z);
            this._controls.update();
        }
        var center = null;
        var radius = null;
        if (selectedObjs) {
            center = selectedObjs.center;
            radius = selectedObjs.radius;
        }
        else if (allObjs) {
            center = allObjs.center;
            radius = allObjs.radius;
        }
        else {
            center = this._scene.position;
            radius = 50;
        }
        // set grid and axeshelper to center of the objs
        // this.grid.position.set(center.x, center.y, 0);
        // this.axesHelper.position.set(center.x, center.y, 0);
        this.cameraLookat(center, radius);
    };
    DataThreejs.prototype.cameraLookat = function (center, radius) {
        if (radius === void 0) { radius = 100; }
        var fov = this._camera.fov * (Math.PI / 180);
        var vec_centre_to_pos = new three__WEBPACK_IMPORTED_MODULE_0__["Vector3"]();
        vec_centre_to_pos.subVectors(this._camera.position, vec_centre_to_pos);
        var tmp_vec = new three__WEBPACK_IMPORTED_MODULE_0__["Vector3"](Math.abs(radius / Math.sin(fov / 2)), Math.abs(radius / Math.sin(fov / 2)), Math.abs(radius / Math.sin(fov / 2)));
        vec_centre_to_pos.setLength(tmp_vec.length());
        var perspectiveNewPos = new three__WEBPACK_IMPORTED_MODULE_0__["Vector3"]();
        perspectiveNewPos.addVectors(center, vec_centre_to_pos);
        var newLookAt = new three__WEBPACK_IMPORTED_MODULE_0__["Vector3"](center.x, center.y, center.z);
        this._camera.position.copy(perspectiveNewPos);
        this._camera.lookAt(newLookAt);
        this._camera.updateProjectionMatrix();
        this._controls.target.set(newLookAt.x, newLookAt.y, newLookAt.z);
        this._controls.update();
    };
    DataThreejs.prototype.getAllObjs = function () {
        if (this.sceneObjs.length !== 0) {
            var objs_1 = new three__WEBPACK_IMPORTED_MODULE_0__["Object3D"]();
            this.sceneObjs.map(function (obj) { return objs_1.children.push(obj); });
            var boxHelper = new three__WEBPACK_IMPORTED_MODULE_0__["BoxHelper"](objs_1);
            boxHelper.geometry.computeBoundingSphere();
            var boundingSphere = boxHelper.geometry.boundingSphere;
            return boundingSphere;
        }
        else {
            return null;
        }
    };
    DataThreejs.prototype.getSelectedObjs = function () {
        if (this.sceneObjsSelected.size !== 0) {
            var objs_2 = new three__WEBPACK_IMPORTED_MODULE_0__["Object3D"]();
            this.sceneObjsSelected.forEach(function (obj) { return objs_2.children.push(obj); });
            var boxHelper = new three__WEBPACK_IMPORTED_MODULE_0__["BoxHelper"](objs_2);
            boxHelper.geometry.computeBoundingSphere();
            var boundingSphere = boxHelper.geometry.boundingSphere;
            return boundingSphere;
        }
        else {
            return null;
        }
    };
    DataThreejs.prototype._createHud = function (text) {
        var div = document.createElement('div');
        div.id = "hud";
        div.style.position = 'absolute';
        div.style.background = 'rgba(255, 255, 255, 0.3)';
        div.style.padding = '5px';
        div.innerHTML = text;
        div.style.top = '40px';
        div.style.left = '5px';
        div.style.maxWidth = '200px';
        div.style.whiteSpace = 'pre-wrap';
        div.style.fontSize = '14px';
        return {
            element: div
        };
    };
    DataThreejs.prototype.onWindowKeyPress = function (event) {
        var nodeName = event.target.nodeName;
        if (nodeName === 'TEXTAREA' || nodeName === 'INPUT') {
            return;
        }
        var segment_str = window.location.pathname;
        var segment_array = segment_str.split('/');
        var last_segment = segment_array[segment_array.length - 1];
        if (last_segment === 'editor') {
            return;
        }
        var keyCode = event.which;
        // console.log(keyCode);
        var positionDelta = 10;
        var rotationDelta = 0.02;
        var xp = this._camera.position.x;
        var yp = this._camera.position.y;
        switch (keyCode) {
            case 65: // A: move left
                this._camera.position.x -= positionDelta;
                break;
            case 68: // D: move right
                this._camera.position.x += positionDelta;
                break;
            case 87: // W: move forward
                this._camera.position.y += positionDelta;
                break;
            case 83: // S: move backward
                this._camera.position.y -= positionDelta;
                break;
            case 90: // Z: move up
                this._camera.position.z += positionDelta;
                break;
            case 88: // X: move down
                this._camera.position.z -= positionDelta;
                break;
            case 81: // Q: rotate clockwise
                this._camera.position.x = xp * Math.cos(rotationDelta) + yp * Math.sin(rotationDelta);
                this._camera.position.y = yp * Math.cos(rotationDelta) - xp * Math.sin(rotationDelta);
                this._camera.lookAt(this._scene.position);
                break;
            case 69: // E: rotate anticlockwise
                this._camera.position.x = xp * Math.cos(rotationDelta) - yp * Math.sin(rotationDelta);
                this._camera.position.y = yp * Math.cos(rotationDelta) + xp * Math.sin(rotationDelta);
                this._camera.lookAt(this._scene.position);
                break;
            case 84: // T
                this._camera.rotation.x += rotationDelta;
                break;
            case 71: // G
                this._camera.rotation.x -= rotationDelta;
                break;
            case 70: // F
                this._camera.rotation.y += rotationDelta;
                break;
            case 72: // H
                this._camera.rotation.y -= rotationDelta;
                break;
            default:
                break;
        }
    };
    return DataThreejs;
}());

/**
 * objType includes point, line, face
 */
var objType;
(function (objType) {
    objType["point"] = "point";
    objType["line"] = "line";
    objType["face"] = "face";
})(objType || (objType = {}));
var MaterialType;
(function (MaterialType) {
    MaterialType["MeshBasicMaterial"] = "MeshBasicMaterial";
    MaterialType["MeshStandardMaterial"] = "MeshStandardMaterial";
    MaterialType["MeshLambertMaterial"] = "MeshLambertMaterial";
    MaterialType["MeshPhongMaterial"] = "MeshPhongMaterial";
    MaterialType["MeshPhysicalMaterial"] = "MeshPhysicalMaterial";
})(MaterialType || (MaterialType = {}));


/***/ }),

/***/ "./src/app/model-viewers/all-viewers/gi-viewer/gi-viewer.component.html":
/*!******************************************************************************!*\
  !*** ./src/app/model-viewers/all-viewers/gi-viewer/gi-viewer.component.html ***!
  \******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div id=\"gi-viewer-container\">\r\n\t<as-split direction=\"vertical\">\r\n\t\t<as-split-area [size]=\"66\" id=\"three-js\">\r\n\t\t\t<threejs-viewer [model]='data'\r\n\t\t\t\t(eventClicked)=\"childEventClicked($event)\"\r\n\t\t\t\t[attr_table_select]='attrTableSelect'\r\n\t\t\t\t(resetTableEvent) = \"resetTable()\">\r\n\t\t\t</threejs-viewer>\r\n\t\t\t<button class='btn' id=\"settings_button\" mat-icon-button (click)=\"openModal('settings_modal')\" title=\"Settings\"><mat-icon svgIcon=\"settings\"></mat-icon></button>\r\n\t\t</as-split-area>\r\n\t\t<as-split-area [size]='34' id=\"attrib\">\r\n\t\t\t<attribute [data]=\"data\"\r\n\t\t\t\t[refresh]=\"clickedEvent\"\r\n\t\t\t\t[reset]=\"attrTableReset\"\r\n\t\t\t\t(attrTableSelect) = \"attribTableSelected($event)\">\r\n\t\t\t</attribute>\r\n\t\t\t<modal-window id=\"settings_modal\">\r\n\t\t\t\t<h1>3D Viewer Settings</h1>\r\n\t\t\t\t<tabs id=\"settingsTab\">\r\n\t\t\t\t\t<tab tabTitle=\"Scene\">\r\n\t\t\t\t\t\t<div class=\"mat-elevation-z1\">\r\n\t\t\t\t\t\t\t<dl>\r\n\t\t\t\t\t\t\t\t<dd [title] = \"!normalsEnabled?'No models available':''\">\r\n\t\t\t\t\t\t\t\t\t<div class=\"label\">Normals</div>\r\n\t\t\t\t\t\t\t\t\t<div class=\"onoffswitch\">\r\n\t\t\t\t\t\t\t\t\t\t<input type=\"checkbox\"\r\n\t\t\t\t\t\t\t\t\t\tname=\"onoffswitch\"\r\n\t\t\t\t\t\t\t\t\t\tclass=\"onoffswitch-checkbox\"\r\n\t\t\t\t\t\t\t\t\t\tid=\"normalsOnOff\"\r\n\t\t\t\t\t\t\t\t\t\t[checked]='settings.normals.show'\r\n\t\t\t\t\t\t\t\t\t\t[disabled] = \"!normalsEnabled\"\r\n\t\t\t\t\t\t\t\t\t\t(change)=\"settingOnChange('normals.show')\"\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<label class=\"onoffswitch-label\" for=\"normalsOnOff\">\r\n\t\t\t\t\t\t\t\t\t\t\t<span class=\"onoffswitch-inner\"></span>\r\n\t\t\t\t\t\t\t\t\t\t\t<span class=\"onoffswitch-switch\"></span>\r\n\t\t\t\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div class=\"slidecontainer\">\r\n\t\t\t\t\t\t\t\t\t\t<input type=\"range\" min=\"1\" max=\"100\" step=\"1\"\r\n\t\t\t\t\t\t\t\t\t\t[value]=\"settings.normals.size\"\r\n\t\t\t\t\t\t\t\t\t\tclass=\"slider\" id=\"normalSize\"\r\n\t\t\t\t\t\t\t\t\t\t(input)=\"settingOnChange('normals.size', $event.target.value)\"\r\n\t\t\t\t\t\t\t\t\t\t[disabled] = \"!normalsEnabled\">\r\n\t\t\t\t\t\t\t\t\t\t<input type=\"text\" [value]=\"settings.normals.size\" disabled>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</dd>\r\n\t\t\t\t\t\t\t\t<dd>\r\n\t\t\t\t\t\t\t\t\t<div class=\"label\">Axes</div>\r\n\t\t\t\t\t\t\t\t\t<div class=\"onoffswitch\">\r\n\t\t\t\t\t\t\t\t\t\t<input type=\"checkbox\"\r\n\t\t\t\t\t\t\t\t\t\tname=\"onoffswitch\"\r\n\t\t\t\t\t\t\t\t\t\tclass=\"onoffswitch-checkbox\"\r\n\t\t\t\t\t\t\t\t\t\tid=\"axesOnOff\"\r\n\t\t\t\t\t\t\t\t\t\t[checked]=\"settings.axes.show\"\r\n\t\t\t\t\t\t\t\t\t\t(change)=\"settingOnChange('axes.show')\">\r\n\t\t\t\t\t\t\t\t\t\t<label class=\"onoffswitch-label\" for=\"axesOnOff\">\r\n\t\t\t\t\t\t\t\t\t\t\t<span class=\"onoffswitch-inner\"></span>\r\n\t\t\t\t\t\t\t\t\t\t\t<span class=\"onoffswitch-switch\"></span>\r\n\t\t\t\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div class=\"slidecontainer\">\r\n\t\t\t\t\t\t\t\t\t\t<input type=\"range\" min=\"1\" max=\"1000\" step=\"1\" [value]=\"settings.axes.size\" class=\"slider\" id=\"axesSize\" (input)=\"settingOnChange('axes.size', $event.target.value)\">\r\n\t\t\t\t\t\t\t\t\t\t<input type=\"text\" [value]=\"settings.axes.size\" disabled>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</dd>\r\n\t\t\t\t\t\t\t\t<dd>\r\n\t\t\t\t\t\t\t\t\t<div class=\"label\">Grid</div>\r\n\t\t\t\t\t\t\t\t\t<div class=\"onoffswitch\">\r\n\t\t\t\t\t\t\t\t\t\t<input type=\"checkbox\"\r\n\t\t\t\t\t\t\t\t\t\tname=\"onoffswitch\"\r\n\t\t\t\t\t\t\t\t\t\tclass=\"onoffswitch-checkbox\"\r\n\t\t\t\t\t\t\t\t\t\tid=\"gridOnOff\"\r\n\t\t\t\t\t\t\t\t\t\t[checked]='settings.grid.show'\r\n\t\t\t\t\t\t\t\t\t\t(change)=\"settingOnChange('grid.show')\"\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<label class=\"onoffswitch-label\" for=\"gridOnOff\">\r\n\t\t\t\t\t\t\t\t\t\t\t<span class=\"onoffswitch-inner\"></span>\r\n\t\t\t\t\t\t\t\t\t\t\t<span class=\"onoffswitch-switch\"></span>\r\n\t\t\t\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div class=\"slidecontainer\">\r\n\t\t\t\t\t\t\t\t\t\t<input type=\"range\" min=\"10\" max=\"10000\" step=\"10\" [value]=\"settings.grid.size\" class=\"slider\" id=\"gridSize\" (input)=\"settingOnChange('grid.size', $event.target.value)\">\r\n\t\t\t\t\t\t\t\t\t\t<input type=\"text\" [value]=\"settings.grid.size\" disabled>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</dd>\r\n\t\t\t\t\t\t\t\t<dd>\r\n\t\t\t\t\t\t\t\t\t<div class=\"label\">Positions</div>\r\n\t\t\t\t\t\t\t\t\t<div class=\"onoffswitch\">\r\n\t\t\t\t\t\t\t\t\t\t<input type=\"checkbox\"\r\n\t\t\t\t\t\t\t\t\t\tname=\"onoffswitch\"\r\n\t\t\t\t\t\t\t\t\t\tclass=\"onoffswitch-checkbox\"\r\n\t\t\t\t\t\t\t\t\t\tid=\"positionsOnOff\"\r\n\t\t\t\t\t\t\t\t\t\t[checked]='settings.positions.show'\r\n\t\t\t\t\t\t\t\t\t\t(change)=\"settingOnChange('positions.show')\"\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<label class=\"onoffswitch-label\" for=\"positionsOnOff\">\r\n\t\t\t\t\t\t\t\t\t\t\t<span class=\"onoffswitch-inner\"></span>\r\n\t\t\t\t\t\t\t\t\t\t\t<span class=\"onoffswitch-switch\"></span>\r\n\t\t\t\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div class=\"slidecontainer\">\r\n\t\t\t\t\t\t\t\t\t\t<input type=\"range\" min=\"0.1\" max=\"10\" step=\"0.1\" [value]=\"settings.positions.size\" class=\"slider\" id=\"positionsSize\" (input)=\"settingOnChange('positions.size', $event.target.value)\">\r\n\t\t\t\t\t\t\t\t\t\t<input type=\"text\" [value]=\"settings.positions.size\" disabled>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</dd>\r\n\t\t\t\t\t\t\t\t<dd>\r\n\t\t\t\t\t\t\t\t\t<div class=\"label\">Wireframe</div>\r\n\t\t\t\t\t\t\t\t\t<div class=\"onoffswitch\">\r\n\t\t\t\t\t\t\t\t\t\t<input type=\"checkbox\"\r\n\t\t\t\t\t\t\t\t\t\tname=\"onoffswitch\"\r\n\t\t\t\t\t\t\t\t\t\tclass=\"onoffswitch-checkbox\"\r\n\t\t\t\t\t\t\t\t\t\tid=\"wireframeOnOff\"\r\n\t\t\t\t\t\t\t\t\t\t[checked]='settings.wireframe.show'\r\n\t\t\t\t\t\t\t\t\t\t(change)=\"settingOnChange('wireframe.show')\"\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<label class=\"onoffswitch-label\" for=\"wireframeOnOff\">\r\n\t\t\t\t\t\t\t\t\t\t\t<span class=\"onoffswitch-inner\"></span>\r\n\t\t\t\t\t\t\t\t\t\t\t<span class=\"onoffswitch-switch\"></span>\r\n\t\t\t\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</dd>\r\n\t\t\t\t\t\t\t\t<dd>\r\n\t\t\t\t\t\t\t\t\t<div class=\"label\">GI Summary</div>\r\n\t\t\t\t\t\t\t\t\t<div class=\"onoffswitch\">\r\n\t\t\t\t\t\t\t\t\t\t<input type=\"checkbox\"\r\n\t\t\t\t\t\t\t\t\t\tname=\"onoffswitch\"\r\n\t\t\t\t\t\t\t\t\t\tclass=\"onoffswitch-checkbox\"\r\n\t\t\t\t\t\t\t\t\t\tid=\"gi_summaryOnOff\"\r\n\t\t\t\t\t\t\t\t\t\t[checked]='settings.gi_summary.show'\r\n\t\t\t\t\t\t\t\t\t\t(change)=\"settingOnChange('gi_summary.show')\"\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<label class=\"onoffswitch-label\" for=\"gi_summaryOnOff\">\r\n\t\t\t\t\t\t\t\t\t\t\t<span class=\"onoffswitch-inner\"></span>\r\n\t\t\t\t\t\t\t\t\t\t\t<span class=\"onoffswitch-switch\"></span>\r\n\t\t\t\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</dd>\r\n\t\t\t\t\t\t\t\t<dd>\r\n\t\t\t\t\t\t\t\t\t<div class=\"label\">Threejs Summary</div>\r\n\t\t\t\t\t\t\t\t\t<div class=\"onoffswitch\">\r\n\t\t\t\t\t\t\t\t\t\t<input type=\"checkbox\"\r\n\t\t\t\t\t\t\t\t\t\tname=\"onoffswitch\"\r\n\t\t\t\t\t\t\t\t\t\tclass=\"onoffswitch-checkbox\"\r\n\t\t\t\t\t\t\t\t\t\tid=\"tjs_summaryOnOff\"\r\n\t\t\t\t\t\t\t\t\t\t[checked]='settings.tjs_summary.show'\r\n\t\t\t\t\t\t\t\t\t\t(change)=\"settingOnChange('tjs_summary.show')\"\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<label class=\"onoffswitch-label\" for=\"tjs_summaryOnOff\">\r\n\t\t\t\t\t\t\t\t\t\t\t<span class=\"onoffswitch-inner\"></span>\r\n\t\t\t\t\t\t\t\t\t\t\t<span class=\"onoffswitch-switch\"></span>\r\n\t\t\t\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</dd>\r\n\t\t\t\t\t\t\t</dl>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</tab>\r\n\t\t\t\t\t<tab tabTitle=\"Colors\">\r\n\t\t\t\t\t\t<div class=\"mat-elevation-z1\">\r\n\t\t\t\t\t\t\t<dl>\r\n\t\t\t\t\t\t\t\t<dd class='colors' *ngFor=\"let item of setting_colors; let i = index\">\r\n\t\t\t\t\t\t\t\t\t<div class=\"label\">{{item.label}}</div>\r\n\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t[(colorPicker)]=\"settings.colors[item.setting]\"\r\n\t\t\t\t\t\t\t\t\t[style.background]=\"settings.colors[item.setting]\"\r\n\t\t\t\t\t\t\t\t\t[value]=\"settings.colors[item.setting]\"\r\n\t\t\t\t\t\t\t\t\t[class.light] = \"checkColor(this.settings.colors[item.setting])\"\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<!-- <button *ngIf=\"item.default\" (click)=\"resetDefault('colors.viewer_bg','#E6E6E6');\" class='filebtn closebtn'>Default</button> -->\r\n\t\t\t\t\t\t\t\t\t<hr [hidden]=\"i % 2 === 1\">\r\n\t\t\t\t\t\t\t\t</dd>\r\n\t\t\t\t\t\t\t</dl>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</tab>\r\n\t\t\t\t\t<tab tabTitle=\"Light & Shadow\">\r\n\t\t\t\t\t\t<div class=\"mat-elevation-z1\">\r\n\t\t\t\t\t\t\t<dl>\r\n\t\t\t\t\t\t\t\t<dd>\r\n\t\t\t\t\t\t\t\t\t<div class=\"label\">Ambient Light</div>\r\n\t\t\t\t\t\t\t\t\t<div class=\"onoffswitch\">\r\n\t\t\t\t\t\t\t\t\t\t<input type=\"checkbox\"\r\n\t\t\t\t\t\t\t\t\t\tname=\"onoffswitch\"\r\n\t\t\t\t\t\t\t\t\t\tclass=\"onoffswitch-checkbox\"\r\n\t\t\t\t\t\t\t\t\t\tid=\"AmbientOnOff\"\r\n\t\t\t\t\t\t\t\t\t\t[checked]='settings.ambient_light.show'\r\n\t\t\t\t\t\t\t\t\t\t(change)=\"settingOnChange('ambient_light.show')\"\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<label class=\"onoffswitch-label\" for=\"AmbientOnOff\">\r\n\t\t\t\t\t\t\t\t\t\t\t<span class=\"onoffswitch-inner\"></span>\r\n\t\t\t\t\t\t\t\t\t\t\t<span class=\"onoffswitch-switch\"></span>\r\n\t\t\t\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</dd>\r\n\t\t\t\t\t\t\t\t<dd class='colors'>\r\n\t\t\t\t\t\t\t\t\t<div class=\"label\">Color</div>\r\n\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t[(colorPicker)]=\"settings.ambient_light.color\"\r\n\t\t\t\t\t\t\t\t\t[style.background]=\"settings.ambient_light.color\"\r\n\t\t\t\t\t\t\t\t\t[value]=\"settings.ambient_light.color\"\r\n\t\t\t\t\t\t\t\t\t[class.light] = \"checkColor(settings.ambient_light.color)\"\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<!-- <button (click)=\"resetDefault('ambient_light.color','#FFFFFF');\" class='filebtn closebtn'>Default</button> -->\r\n\t\t\t\t\t\t\t\t</dd>\r\n\t\t\t\t\t\t\t\t<dd>\r\n\t\t\t\t\t\t\t\t\t<div class=\"label\">Intensity</div>\r\n\t\t\t\t\t\t\t\t\t<div class=\"slidecontainer light\">\r\n\t\t\t\t\t\t\t\t\t\t<input type=\"range\" min=\"0\" max=\"1\" step=\"0.01\" [value]=\"settings.ambient_light.intensity\" class=\"slider\" (input)=\"settingOnChange('ambient_light.intensity', $event.target.value)\">\r\n\t\t\t\t\t\t\t\t\t\t<input type=\"text\" [value]=\"settings.ambient_light.intensity\" disabled>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</dd>\r\n\t\t\t\t\t\t\t\t<dd><hr></dd>\r\n\t\t\t\t\t\t\t\t<dd>\r\n\t\t\t\t\t\t\t\t\t<div class=\"label\">Hemisphere Light</div>\r\n\t\t\t\t\t\t\t\t\t<div class=\"onoffswitch\">\r\n\t\t\t\t\t\t\t\t\t\t<input type=\"checkbox\"\r\n\t\t\t\t\t\t\t\t\t\tname=\"onoffswitch\"\r\n\t\t\t\t\t\t\t\t\t\tclass=\"onoffswitch-checkbox\"\r\n\t\t\t\t\t\t\t\t\t\tid=\"HemisphereOnOff\"\r\n\t\t\t\t\t\t\t\t\t\t[checked]='settings.hemisphere_light.show'\r\n\t\t\t\t\t\t\t\t\t\t(change)=\"settingOnChange('hemisphere_light.show')\"\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<label class=\"onoffswitch-label\" for=\"HemisphereOnOff\">\r\n\t\t\t\t\t\t\t\t\t\t\t<span class=\"onoffswitch-inner\"></span>\r\n\t\t\t\t\t\t\t\t\t\t\t<span class=\"onoffswitch-switch\"></span>\r\n\t\t\t\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div class=\"label\" style=\"margin-left:90px\">Helper</div>\r\n\t\t\t\t\t\t\t\t\t<div class=\"onoffswitch\">\r\n\t\t\t\t\t\t\t\t\t\t<input type=\"checkbox\"\r\n\t\t\t\t\t\t\t\t\t\tname=\"onoffswitch\"\r\n\t\t\t\t\t\t\t\t\t\tclass=\"onoffswitch-checkbox\"\r\n\t\t\t\t\t\t\t\t\t\tid=\"HemisphereLightHelperOnOff\"\r\n\t\t\t\t\t\t\t\t\t\t[checked]='settings.hemisphere_light.helper'\r\n\t\t\t\t\t\t\t\t\t\t(change)=\"settingOnChange('hemisphere_light.helper')\"\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<label class=\"onoffswitch-label\" for=\"HemisphereLightHelperOnOff\">\r\n\t\t\t\t\t\t\t\t\t\t\t<span class=\"onoffswitch-inner\"></span>\r\n\t\t\t\t\t\t\t\t\t\t\t<span class=\"onoffswitch-switch\"></span>\r\n\t\t\t\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</dd>\r\n\t\t\t\t\t\t\t\t<dd class='colors'>\r\n\t\t\t\t\t\t\t\t\t<div class=\"label\">Sky Color</div>\r\n\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t[(colorPicker)]=\"settings.hemisphere_light.skyColor\"\r\n\t\t\t\t\t\t\t\t\t[style.background]=\"settings.hemisphere_light.skyColor\"\r\n\t\t\t\t\t\t\t\t\t[value]=\"settings.hemisphere_light.skyColor\"\r\n\t\t\t\t\t\t\t\t\t[class.light] = \"checkColor(settings.hemisphere_light.skyColor)\"\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<!-- <button (click)=\"resetDefault('hemisphere_light.skyColor','#FFFFFF');\" class='filebtn closebtn'>Default</button> -->\r\n\t\t\t\t\t\t\t\t</dd>\r\n\t\t\t\t\t\t\t\t<dd class='colors'>\r\n\t\t\t\t\t\t\t\t\t<div class=\"label\">Ground Color</div>\r\n\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t[(colorPicker)]=\"settings.hemisphere_light.groundColor\"\r\n\t\t\t\t\t\t\t\t\t[style.background]=\"settings.hemisphere_light.groundColor\"\r\n\t\t\t\t\t\t\t\t\t[value]=\"settings.hemisphere_light.groundColor\"\r\n\t\t\t\t\t\t\t\t\t[class.light] = \"checkColor(settings.hemisphere_light.groundColor)\"\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<!-- <button (click)=\"resetDefault('hemisphere_light.groundColor','#FFFFFF');\" class='filebtn closebtn'>Default</button> -->\r\n\t\t\t\t\t\t\t\t</dd>\r\n\t\t\t\t\t\t\t\t<dd>\r\n\t\t\t\t\t\t\t\t\t<div class=\"label\">Intensity</div>\r\n\t\t\t\t\t\t\t\t\t<div class=\"slidecontainer light\">\r\n\t\t\t\t\t\t\t\t\t\t<input type=\"range\" min=\"0\" max=\"1\" step=\"0.01\" [value]=\"settings.hemisphere_light.intensity\" class=\"slider\" (input)=\"settingOnChange('hemisphere_light.intensity', $event.target.value)\">\r\n\t\t\t\t\t\t\t\t\t\t<input type=\"text\" [value]=\"settings.hemisphere_light.intensity\" disabled>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</dd>\r\n\t\t\t\t\t\t\t\t<dd><hr></dd>\r\n\t\t\t\t\t\t\t\t<dd>\r\n\t\t\t\t\t\t\t\t\t<div class=\"label\">Directional Light</div>\r\n\t\t\t\t\t\t\t\t\t<div class=\"onoffswitch\">\r\n\t\t\t\t\t\t\t\t\t\t<input type=\"checkbox\"\r\n\t\t\t\t\t\t\t\t\t\tname=\"onoffswitch\"\r\n\t\t\t\t\t\t\t\t\t\tclass=\"onoffswitch-checkbox\"\r\n\t\t\t\t\t\t\t\t\t\tid=\"DirectionalOnOff\"\r\n\t\t\t\t\t\t\t\t\t\t[checked]='settings.directional_light.show'\r\n\t\t\t\t\t\t\t\t\t\t(change)=\"settingOnChange('directional_light.show')\"\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<label class=\"onoffswitch-label\" for=\"DirectionalOnOff\">\r\n\t\t\t\t\t\t\t\t\t\t\t<span class=\"onoffswitch-inner\"></span>\r\n\t\t\t\t\t\t\t\t\t\t\t<span class=\"onoffswitch-switch\"></span>\r\n\t\t\t\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div class=\"label\" style=\"margin-left:90px\">Helper</div>\r\n\t\t\t\t\t\t\t\t\t<div class=\"onoffswitch\">\r\n\t\t\t\t\t\t\t\t\t\t<input type=\"checkbox\"\r\n\t\t\t\t\t\t\t\t\t\tname=\"onoffswitch\"\r\n\t\t\t\t\t\t\t\t\t\tclass=\"onoffswitch-checkbox\"\r\n\t\t\t\t\t\t\t\t\t\tid=\"DaylightHelperOnOff\"\r\n\t\t\t\t\t\t\t\t\t\t[checked]='settings.directional_light.helper'\r\n\t\t\t\t\t\t\t\t\t\t(change)=\"settingOnChange('directional_light.helper')\"\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<label class=\"onoffswitch-label\" for=\"DaylightHelperOnOff\">\r\n\t\t\t\t\t\t\t\t\t\t\t<span class=\"onoffswitch-inner\"></span>\r\n\t\t\t\t\t\t\t\t\t\t\t<span class=\"onoffswitch-switch\"></span>\r\n\t\t\t\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</dd>\r\n\t\t\t\t\t\t\t\t<dd class='colors'>\r\n\t\t\t\t\t\t\t\t\t<div class=\"label\">Color</div>\r\n\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t[(colorPicker)]=\"settings.directional_light.color\"\r\n\t\t\t\t\t\t\t\t\t[style.background]=\"settings.directional_light.color\"\r\n\t\t\t\t\t\t\t\t\t[value]=\"settings.directional_light.color\"\r\n\t\t\t\t\t\t\t\t\t[class.light] = \"checkColor(settings.directional_light.color)\"\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<!-- <button (click)=\"resetDefault('directional_light.color','#FFFFFF');\" class='filebtn closebtn'>Default</button> -->\r\n\t\t\t\t\t\t\t\t</dd>\r\n\t\t\t\t\t\t\t\t<dd>\r\n\t\t\t\t\t\t\t\t\t<div class=\"label\">Intensity</div>\r\n\t\t\t\t\t\t\t\t\t<div class=\"slidecontainer light\">\r\n\t\t\t\t\t\t\t\t\t\t<input type=\"range\" min=\"0\" max=\"1\" step=\"0.01\" [value]=\"settings.directional_light.intensity\" class=\"slider\" (input)=\"settingOnChange('directional_light.intensity', $event.target.value)\">\r\n\t\t\t\t\t\t\t\t\t\t<input type=\"text\" [value]=\"settings.directional_light.intensity\" disabled>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</dd>\r\n\t\t\t\t\t\t\t\t<dd>\r\n\t\t\t\t\t\t\t\t\t<div class=\"label\">Shadow</div>\r\n\t\t\t\t\t\t\t\t\t<div class=\"onoffswitch\">\r\n\t\t\t\t\t\t\t\t\t\t<input type=\"checkbox\"\r\n\t\t\t\t\t\t\t\t\t\tname=\"onoffswitch\"\r\n\t\t\t\t\t\t\t\t\t\tclass=\"onoffswitch-checkbox\"\r\n\t\t\t\t\t\t\t\t\t\tid=\"DirectionalShadowOnOff\"\r\n\t\t\t\t\t\t\t\t\t\t[checked]='settings.directional_light.shadow'\r\n\t\t\t\t\t\t\t\t\t\t(change)=\"settingOnChange('directional_light.shadow')\"\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<label class=\"onoffswitch-label\" for=\"DirectionalShadowOnOff\">\r\n\t\t\t\t\t\t\t\t\t\t\t<span class=\"onoffswitch-inner\"></span>\r\n\t\t\t\t\t\t\t\t\t\t\t<span class=\"onoffswitch-switch\"></span>\r\n\t\t\t\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</dd>\r\n\t\t\t\t\t\t\t\t<dd>\r\n\t\t\t\t\t\t\t\t\t<div class=\"label\">Shadow Size</div>\r\n\t\t\t\t\t\t\t\t\t<div class=\"slidecontainer light\">\r\n\t\t\t\t\t\t\t\t\t\t<input type=\"range\" min=\"1\" max=\"20\" step=\"1\" [value]=\"settings.directional_light.shadowSize\" class=\"slider\" (input)=\"settingOnChange('directional_light.shadowSize', $event.target.value)\">\r\n\t\t\t\t\t\t\t\t\t\t<input type=\"text\" [value]=\"settings.directional_light.shadowSize\" disabled>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</dd>\r\n\t\t\t\t\t\t\t\t<dd>\r\n\t\t\t\t\t\t\t\t\t<div class=\"label\">Azimuth</div>\r\n\t\t\t\t\t\t\t\t\t<div class=\"slidecontainer light\">\r\n\t\t\t\t\t\t\t\t\t\t<input type=\"range\" min=\"0\" max=\"360\" step=\"1\" [value]=\"settings.directional_light.azimuth\" class=\"slider\" (input)=\"settingOnChange('directional_light.azimuth', $event.target.value)\">\r\n\t\t\t\t\t\t\t\t\t\t<input type=\"number\" disabled [value]=\"settings.directional_light.azimuth\" class=\"number\">\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</dd>\r\n\t\t\t\t\t\t\t\t<dd>\r\n\t\t\t\t\t\t\t\t\t<div class=\"label\">Altitude</div>\r\n\t\t\t\t\t\t\t\t\t<div class=\"slidecontainer light\">\r\n\t\t\t\t\t\t\t\t\t\t<input type=\"range\" min=\"0\" max=\"180\" step=\"1\" [value]=\"settings.directional_light.altitude\" class=\"slider\" (input)=\"settingOnChange('directional_light.altitude', $event.target.value)\">\r\n\t\t\t\t\t\t\t\t\t\t<input type=\"number\" disabled [value]=\"settings.directional_light.altitude\" class=\"number\">\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</dd>\r\n\t\t\t\t\t\t\t\t<dd>\r\n\t\t\t\t\t\t\t\t\t<div class=\"label\">Distance</div>\r\n\t\t\t\t\t\t\t\t\t<div class=\"slidecontainer light\">\r\n\t\t\t\t\t\t\t\t\t\t<input type=\"range\" min=\"1000\" max=\"100000\" step=\"1000\" [value]=\"settings.directional_light.distance\" class=\"slider\" (input)=\"settingOnChange('directional_light.distance', $event.target.value)\">\r\n\t\t\t\t\t\t\t\t\t\t<input type=\"text\" [value]=\"settings.directional_light.distance\" disabled>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</dd>\r\n\t\t\t\t\t\t\t</dl>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</tab>\r\n\t\t\t\t\t<tab tabTitle=\"Environment\">\r\n\t\t\t\t\t\t<div class=\"mat-elevation-z1\">\r\n\t\t\t\t\t\t\t<dl>\r\n\t\t\t\t\t\t\t\t<dd>\r\n\t\t\t\t\t\t\t\t\t<div class=\"label\">Ground</div>\r\n\t\t\t\t\t\t\t\t\t<div class=\"onoffswitch\">\r\n\t\t\t\t\t\t\t\t\t\t<input type=\"checkbox\"\r\n\t\t\t\t\t\t\t\t\t\tname=\"onoffswitch\"\r\n\t\t\t\t\t\t\t\t\t\tclass=\"onoffswitch-checkbox\"\r\n\t\t\t\t\t\t\t\t\t\tid=\"GroundOnOff\"\r\n\t\t\t\t\t\t\t\t\t\t[checked]='settings.ground.show'\r\n\t\t\t\t\t\t\t\t\t\t(change)=\"settingOnChange('ground.show')\"\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<label class=\"onoffswitch-label\" for=\"GroundOnOff\">\r\n\t\t\t\t\t\t\t\t\t\t\t<span class=\"onoffswitch-inner\"></span>\r\n\t\t\t\t\t\t\t\t\t\t\t<span class=\"onoffswitch-switch\"></span>\r\n\t\t\t\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</dd>\r\n\t\t\t\t\t\t\t\t<dd>\r\n\t\t\t\t\t\t\t\t\t<div class=\"label\">Width</div>\r\n\t\t\t\t\t\t\t\t\t<div class=\"slidecontainer light\">\r\n\t\t\t\t\t\t\t\t\t\t<input type=\"range\" min=\"0\" max=\"100000\" step=\"100\" [value]=\"settings.ground.width\" class=\"slider\" (input)=\"settingOnChange('ground.width', $event.target.value)\">\r\n\t\t\t\t\t\t\t\t\t\t<input type=\"number\" [value]=\"settings.ground.width\" min=\"0\" max=\"100000\" class=\"number\" (input)=\"settingOnChange('ground.width', $event.target.value)\">\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</dd>\r\n\t\t\t\t\t\t\t\t<dd>\r\n\t\t\t\t\t\t\t\t\t<div class=\"label\">Length</div>\r\n\t\t\t\t\t\t\t\t\t<div class=\"slidecontainer light\">\r\n\t\t\t\t\t\t\t\t\t\t<input type=\"range\" min=\"0\" max=\"100000\" step=\"100\" [value]=\"settings.ground.length\" class=\"slider\" (input)=\"settingOnChange('ground.length', $event.target.value)\">\r\n\t\t\t\t\t\t\t\t\t\t<input type=\"number\" [value]=\"settings.ground.length\" min=\"0\" max=\"100000\" class=\"number\" (input)=\"settingOnChange('ground.length', $event.target.value)\">\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</dd>\r\n\t\t\t\t\t\t\t\t<dd>\r\n\t\t\t\t\t\t\t\t\t<div class=\"label\">Height</div>\r\n\t\t\t\t\t\t\t\t\t<div class=\"slidecontainer light\">\r\n\t\t\t\t\t\t\t\t\t\t<input type=\"range\" min=\"-10\" max=\"10\" step=\"0.1\" [value]=\"settings.ground.height\" class=\"slider\" (input)=\"settingOnChange('ground.height', $event.target.value)\">\r\n\t\t\t\t\t\t\t\t\t\t<input type=\"number\" [value]=\"settings.ground.height\" min=\"-10\" max=\"10\" class=\"number\" (input)=\"settingOnChange('ground.height', $event.target.value)\">\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</dd>\r\n\t\t\t\t\t\t\t\t<dd class='colors'>\r\n\t\t\t\t\t\t\t\t\t<div class=\"label\">Color</div>\r\n\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t[(colorPicker)]=\"settings.ground.color\"\r\n\t\t\t\t\t\t\t\t\t[style.background]=\"settings.ground.color\"\r\n\t\t\t\t\t\t\t\t\t[value]=\"settings.ground.color\"\r\n\t\t\t\t\t\t\t\t\t[class.light] = \"checkColor(settings.ground.color)\"\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<!-- <button (click)=\"resetDefault('ground.color','#FFFFFF');\" class='filebtn closebtn'>Default</button> -->\r\n\t\t\t\t\t\t\t\t</dd>\r\n\t\t\t\t\t\t\t\t<dd>\r\n\t\t\t\t\t\t\t\t\t<div class=\"label\">Shininess</div>\r\n\t\t\t\t\t\t\t\t\t<div class=\"slidecontainer light\">\r\n\t\t\t\t\t\t\t\t\t\t<input type=\"range\" min=\"0\" max=\"100\" step=\"1\" [value]=\"settings.ground.shininess\" class=\"slider\" (input)=\"settingOnChange('ground.shininess', $event.target.value)\">\r\n\t\t\t\t\t\t\t\t\t\t<input type=\"number\" min=\"0\" max=\"100\" [value]=\"settings.ground.shininess\" class=\"number\" (input)=\"settingOnChange('ground.shininess', $event.target.value)\">\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</dd>\r\n\t\t\t\t\t\t\t</dl>\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</tab>\r\n\t\t\t\t</tabs>\r\n\t\t\t\t\r\n\t\t\t\t<button (click)=\"closeModal('settings_modal', true);\" class=\"filebtn setting save\">Save</button>\r\n\t\t\t\t<button (click)=\"closeModal('settings_modal');\" class='filebtn closebtn setting'>Close</button>\r\n\t\t\t\t<button (click)=\"resetToDefault();\" class='filebtn closebtn setting' style=\"float: right;\">Default</button>\r\n\t\t\t</modal-window>\r\n\t\t</as-split-area>\r\n\t</as-split>\r\n</div>\r\n"

/***/ }),

/***/ "./src/app/model-viewers/all-viewers/gi-viewer/gi-viewer.component.scss":
/*!******************************************************************************!*\
  !*** ./src/app/model-viewers/all-viewers/gi-viewer/gi-viewer.component.scss ***!
  \******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "#gi-viewer-container {\n  width: 100%;\n  height: 100%;\n  overflow: hidden; }\n\n.mat-tab-group {\n  margin-bottom: 0px; }\n\nas-split-area {\n  position: relative;\n  overflow: hidden auto !important; }\n\n#settings_button {\n  outline: none;\n  width: 40px;\n  height: 30px;\n  font-size: 15px;\n  position: absolute;\n  top: 0px;\n  right: 0px;\n  text-align: center;\n  color: #808080;\n  background-color: transparent;\n  border: 0;\n  cursor: pointer; }\n\n#settings_button:hover {\n    color: #00006d; }\n\n#attrib {\n  overflow: hidden !important; }\n\n#attrib attribute {\n    height: calc(100% - 10px);\n    display: flex;\n    flex-flow: column nowrap;\n    justify-content: space-between; }\n\nmodal-window {\n  display: none; }\n\nmodal-window h1 {\n    font-size: 14px;\n    font-weight: 700;\n    line-height: 35px; }\n\nmodal-window dl {\n    margin: 20px 0;\n    padding: 0;\n    background-color: transparent; }\n\nmodal-window dl dd {\n      list-style: none;\n      padding: 8px 0;\n      margin-left: 20px;\n      margin-right: 20px;\n      background-color: inherit;\n      min-height: 12px;\n      box-sizing: content-box;\n      color: #373737;\n      font-size: 12px;\n      font-style: normal; }\n\nmodal-window dl dd .label {\n        float: left;\n        line-height: 15px;\n        width: 120px; }\n\nmodal-window dl dd .label + div {\n        float: left; }\n\nmodal-window dl dd .label, modal-window dl dd input {\n        color: #373737;\n        font-size: 12px;\n        font-style: normal; }\n\nmodal-window dl dd .label:hover, modal-window dl dd input:hover {\n          background-color: inherit; }\n\nmodal-window dl dd.colors hr {\n        margin: 20px 0px 0px; }\n\nmodal-window dl dd.colors .label {\n        line-height: 20px; }\n\nmodal-window dl dd.colors input {\n        padding-left: 5px;\n        margin-left: 0px !important;\n        border: 1px solid #E6E6E6;\n        width: 120px;\n        vertical-align: top;\n        text-transform: uppercase; }\n\nmodal-window dl dd.colors input.light {\n          color: #ffffff !important; }\n\nmodal-window .save {\n    cursor: pointer;\n    background: #00006d;\n    color: #ffffff;\n    height: 20px; }\n\nmodal-window .closebtn {\n    cursor: pointer;\n    background: white;\n    border: 1px solid #CCCCCC;\n    box-sizing: border-box;\n    margin-left: 10px;\n    height: 20px; }\n\nbody.modal-open {\n  overflow: hidden; }\n\n#settings_modal {\n  /* The slider itself */\n  /* Mouse-over effects */\n  /* The slider handle (use -webkit- (Chrome, Opera, Safari, Edge) and -moz- (Firefox) to override default look) */ }\n\n#settings_modal .filebtn.setting {\n    margin-top: 20px; }\n\n#settings_modal /deep/ .modal-window .modal-body {\n    background: #fafafb; }\n\n#settings_modal .onoffswitch {\n    position: relative;\n    width: 30px;\n    height: 15px;\n    box-sizing: border-box;\n    vertical-align: middle;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    -ms-user-select: none; }\n\n#settings_modal .onoffswitch-checkbox {\n    display: none; }\n\n#settings_modal .onoffswitch-label {\n    display: block;\n    overflow: hidden;\n    height: inherit;\n    background-color: #CCCCCC;\n    cursor: pointer; }\n\n#settings_modal .onoffswitch-switch {\n    position: absolute;\n    top: 1px;\n    left: 1px;\n    width: 13px;\n    height: 13px;\n    background: #E6E6E6; }\n\n#settings_modal .onoffswitch-checkbox:hover:not(:checked) + .onoffswitch-label {\n    background-color: rgba(0, 0, 109, 0.4); }\n\n#settings_modal .onoffswitch-checkbox:hover:not(:checked) + .onoffswitch-label .onoffswitch-switch {\n      box-shadow: 2px 0px 0px 0px; }\n\n#settings_modal .onoffswitch-checkbox:disabled + .onoffswitch-label {\n    background-color: #CCCCCC !important; }\n\n#settings_modal .onoffswitch-checkbox:disabled + .onoffswitch-label .onoffswitch-switch {\n      box-shadow: none !important; }\n\n#settings_modal .onoffswitch-checkbox:checked + .onoffswitch-label {\n    background-color: #00006d; }\n\n#settings_modal .onoffswitch-checkbox:checked + .onoffswitch-label .onoffswitch-switch {\n      right: 0px;\n      left: calc(100% - 2px);\n      -webkit-transform: translateX(-100%);\n              transform: translateX(-100%); }\n\n#settings_modal .onoffswitch-checkbox:disabled:checked + .onoffswitch-label .onoffswitch-inner,\n  #settings_modal .onoffswitch-checkbox:disabled:checked + .onoffswitch-label .onoffswitch-switch {\n    cursor: help; }\n\n#settings_modal .slidecontainer {\n    width: 100%;\n    /* Width of the outside container */\n    height: 15px; }\n\n#settings_modal .slidecontainer:hover {\n      background-color: transparent; }\n\n#settings_modal .slidecontainer.light {\n      width: calc(100% - 120px); }\n\n#settings_modal .slidecontainer.light .slider {\n        margin-left: 0px !important;\n        width: calc(100% - 80px); }\n\n#settings_modal .slidecontainer.light .slider + input[type='text'] {\n        margin-left: 15px !important; }\n\n#settings_modal .slider {\n    -webkit-appearance: none;\n    /* Override default CSS styles */\n    -moz-appearance: none;\n         appearance: none;\n    width: calc(100% - 230px);\n    max-width: 500px;\n    height: 15px;\n    /* Specified height */\n    background: whitesmoke;\n    /* Grey background */\n    box-sizing: border-box;\n    border: 2px solid #E6E6E6;\n    outline: none;\n    /* Remove outline */\n    opacity: 0.7;\n    /* Set transparency (for mouse-over effects on hover) */\n    /* 0.2 seconds transition on hover */\n    transition: opacity .2s;\n    margin: 0;\n    margin-left: 10px !important; }\n\n#settings_modal .slider:hover {\n    opacity: 1;\n    /* Fully shown on mouse-over */ }\n\n#settings_modal .slider::-webkit-slider-thumb {\n    -webkit-appearance: none;\n    appearance: none;\n    width: 5px;\n    height: 15px;\n    background: #CCCCCC;\n    border: 1px solid #808080;\n    cursor: pointer; }\n\n#settings_modal .slider::-webkit-slider-thumb:hover, #settings_modal .slider::-webkit-slider-thumb:active {\n      background: #00006d; }\n\n#settings_modal .slider::-moz-range-thumb {\n    width: 5px;\n    height: 15px;\n    background: #CCCCCC;\n    cursor: pointer; }\n\n#settings_modal .slider:disabled::-webkit-slider-thumb {\n    background: white; }\n\n#settings_modal .slider:disabled::-moz-range-thumb {\n    background: white; }\n\n#settings_modal .slider:disabled {\n    cursor: help; }\n\n#settings_modal input + input {\n    vertical-align: top;\n    border: none;\n    line-height: 20px;\n    background: transparent;\n    width: 60px;\n    margin-left: 10px !important;\n    height: 14px; }\n\n#settings_modal .number {\n    width: 100px;\n    padding-left: 5px;\n    border: 1px solid #dddddd; }\n\n#settings_modal .light-shadow {\n    width: 120px;\n    float: left; }\n\n/deep/ #settingsTab {\n  height: 100%;\n  width: 100%;\n  overflow-x: scroll; }\n\n/deep/ #settingsTab ul {\n    background-color: transparent;\n    margin: 0;\n    padding-left: 0px;\n    white-space: nowrap;\n    width: 100%;\n    min-width: -webkit-fit-content;\n    min-width: -moz-fit-content;\n    min-width: fit-content;\n    display: inline-flex; }\n\n/deep/ #settingsTab ul li {\n      list-style: none;\n      float: left;\n      min-width: 75px;\n      color: #808080;\n      overflow: visible;\n      cursor: pointer;\n      position: relative;\n      height: inherit;\n      padding: 0px; }\n\n/deep/ #settingsTab ul li span {\n        font-family: sans-serif;\n        margin-right: 2px;\n        font-weight: 550;\n        font-size: 12px;\n        line-height: 15px;\n        border: 1px solid transparent;\n        position: relative;\n        display: block;\n        padding: 2px 7px;\n        text-align: center;\n        width: inherit;\n        box-sizing: border-box;\n        width: 100%;\n        margin-top: -1px;\n        height: 21px; }\n\n/deep/ #settingsTab ul li:hover {\n        background-color: transparent; }\n\n/deep/ #settingsTab ul li:hover span {\n          color: #00006d;\n          background-color: transparent; }\n\n/deep/ #settingsTab ul li.active {\n        background-color: transparent; }\n\n/deep/ #settingsTab ul li.active span {\n          color: #00006d;\n          cursor: default;\n          background-color: #fafafb;\n          border: 1px solid #B3B3B3;\n          border-bottom: 0px; }\n\n/deep/ #settingsTab .pane {\n    margin-top: -1px;\n    border: 1px solid #B3B3B3; }\n\n/deep/ #settingsTab .pane .mat-elevation-z1 {\n      display: flex;\n      flex-flow: column nowrap;\n      justify-content: space-between;\n      box-shadow: none; }\n\n/deep/ #settingsTab hr {\n    border: 1px solid #dfdfdf;\n    background: #dfdfdf; }\n\n/*# sourceMappingURL=data:application/json;base64, */"

/***/ }),

/***/ "./src/app/model-viewers/all-viewers/gi-viewer/gi-viewer.component.ts":
/*!****************************************************************************!*\
  !*** ./src/app/model-viewers/all-viewers/gi-viewer/gi-viewer.component.ts ***!
  \****************************************************************************/
/*! exports provided: GIViewerComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GIViewerComponent", function() { return GIViewerComponent; });
/* harmony import */ var _libs_geo_info_GIModel__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @libs/geo-info/GIModel */ "./src/assets/libs/geo-info/GIModel.ts");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _gi_viewer_settings__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./gi-viewer.settings */ "./src/app/model-viewers/all-viewers/gi-viewer/gi-viewer.settings.ts");
/* harmony import */ var _data_data_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./data/data.service */ "./src/app/model-viewers/all-viewers/gi-viewer/data/data.service.ts");
/* harmony import */ var _html_modal_window_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./html/modal-window.service */ "./src/app/model-viewers/all-viewers/gi-viewer/html/modal-window.service.ts");
/* harmony import */ var ngx_color_picker__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ngx-color-picker */ "./node_modules/ngx-color-picker/dist/ngx-color-picker.es5.js");
/* harmony import */ var _assets_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @assets/libs/geo-info/common */ "./src/assets/libs/geo-info/common.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};



// import @angular stuff

// import app services




// import others
// import { ThreejsViewerComponent } from './threejs/threejs-viewer.component';
/**
 * GIViewerComponent
 * This component is used in /app/model-viewers/model-viewers-container.component.html
 */
var GIViewerComponent = /** @class */ (function () {
    /**
     * constructor
     * @param dataService
     */
    function GIViewerComponent(dataService, modalService, cpService) {
        this.dataService = dataService;
        this.modalService = modalService;
        this.cpService = cpService;
        this.settings = _gi_viewer_settings__WEBPACK_IMPORTED_MODULE_2__["DefaultSettings"];
        this.setting_colors = _gi_viewer_settings__WEBPACK_IMPORTED_MODULE_2__["SettingsColorMap"];
        this.normalsEnabled = false;
        var previous_settings = JSON.parse(localStorage.getItem('mpm_settings'));
        if (previous_settings === null ||
            this.hasDiffProps(previous_settings, this.settings) ||
            this.settings.version !== previous_settings.version ||
            Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["isDevMode"])()) {
            localStorage.setItem('mpm_settings', JSON.stringify(this.settings));
        }
        // if (localStorage.getItem('mpm_attrib_columns') !== null) {
        //     this.columns_control = JSON.parse(localStorage.getItem('mpm_attrib_columns'));
        // }
    }
    /**
     * Check whether the current settings has same structure with
     * the previous settings saved in local storage. If not, replace the local storage.
     * @param obj1
     * @param obj2
     */
    GIViewerComponent.prototype.hasDiffProps = function (obj1, obj2) {
        return !Object.keys(obj2).every(function (e) { return Object.keys(obj1).includes(e); });
    };
    /**
     * ngOnInit
     */
    GIViewerComponent.prototype.ngOnInit = function () {
        this.getSettings();
        if (this.dataService.getThreejsScene() === undefined) {
            this.dataService.setThreejsScene(this.settings);
        }
        localStorage.setItem('mpm_default_settings', JSON.stringify(_gi_viewer_settings__WEBPACK_IMPORTED_MODULE_2__["DefaultSettings"]));
    };
    GIViewerComponent.prototype.getSettings = function () {
        if (localStorage.getItem('mpm_settings') !== null) {
            this.settings = JSON.parse(localStorage.getItem('mpm_settings'));
        }
    };
    GIViewerComponent.prototype.childEventClicked = function (event) {
        this.clickedEvent = event;
    };
    GIViewerComponent.prototype.attribTableSelected = function (event) {
        this.attrTableSelect = event;
    };
    GIViewerComponent.prototype.resetTable = function () {
        this.attrTableReset = Date.now();
    };
    GIViewerComponent.prototype.openModal = function (id) {
        this.getSettings();
        if (document.body.className === 'modal-open') {
            this.modalService.close(id);
        }
        else {
            this.modalService.open(id);
            var scene = this.dataService.getThreejsScene();
            if (scene._threejs_nums.reduce(function (a, b) { return a + b; }, 0) !== 0) {
                scene.vnh !== undefined ? this.normalsEnabled = true : this.normalsEnabled = false;
            }
        }
    };
    GIViewerComponent.prototype.closeModal = function (id, save) {
        if (save === void 0) { save = false; }
        this.modalService.close(id);
        if (save) {
            this.dataService.getThreejsScene().settings = this.settings;
            localStorage.setItem('mpm_settings', JSON.stringify(this.settings));
            document.getElementById('executeButton').click();
        }
    };
    GIViewerComponent.prototype.settingOnChange = function (setting, value) {
        var _this = this;
        var scene = this.dataService.getThreejsScene();
        switch (setting) {
            case 'normals.show':
                this.settings.normals.show = !this.settings.normals.show;
                scene.vnh.visible = this.settings.normals.show;
                break;
            case 'normals.size':
                this.settings.normals.size = Number(value);
                break;
            case 'axes.show':
                this.settings.axes.show = !this.settings.axes.show;
                scene.axesHelper.visible = this.settings.axes.show;
                break;
            case 'axes.size':
                this.settings.axes.size = Number(value);
                scene._addAxes(Number(value));
                break;
            case 'grid.show':
                this.settings.grid.show = !this.settings.grid.show;
                scene.grid.visible = this.settings.grid.show;
                break;
            case 'grid.size':
                this.settings.grid.size = Number(value);
                scene._addGrid(this.settings.grid.size);
                break;
            case 'positions.show':
                this.settings.positions.show = !this.settings.positions.show;
                scene._positions.map(function (p) { return p.visible = _this.settings.positions.show; });
                break;
            case 'positions.size':
                this.settings.positions.size = Number(value);
                break;
            case 'tjs_summary.show':
                this.settings.gi_summary.show = false;
                this.settings.tjs_summary.show = !this.settings.tjs_summary.show;
                break;
            case 'gi_summary.show':
                this.settings.tjs_summary.show = false;
                this.settings.gi_summary.show = !this.settings.gi_summary.show;
                var colls = 0, pgons = 0, plines = 0, points = 0, faces = 0, wires = 0, edges = 0, vertices = 0, positions = 0;
                if (scene._model) {
                    colls = scene._model.geom.query.numEnts(_assets_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_6__["EEntType"].COLL, false);
                    pgons = scene._model.geom.query.numEnts(_assets_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_6__["EEntType"].PGON, false);
                    plines = scene._model.geom.query.numEnts(_assets_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_6__["EEntType"].PLINE, false);
                    points = scene._model.geom.query.numEnts(_assets_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_6__["EEntType"].POINT, false);
                    faces = scene._model.geom.query.numEnts(_assets_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_6__["EEntType"].FACE, false);
                    wires = scene._model.geom.query.numEnts(_assets_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_6__["EEntType"].WIRE, false);
                    edges = scene._model.geom.query.numEnts(_assets_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_6__["EEntType"].EDGE, false);
                    vertices = scene._model.geom.query.numEnts(_assets_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_6__["EEntType"].VERT, false);
                    positions = scene._model.geom.query.numEnts(_assets_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_6__["EEntType"].POSI, false);
                }
                var gi_summary = [{ title: 'Collections', val: colls },
                    { title: 'Polygons', val: pgons },
                    { title: 'Polylines', val: plines },
                    { title: 'Points', val: points },
                    { title: 'Faces', val: faces },
                    { title: 'Wires', val: wires },
                    { title: 'Edges', val: edges },
                    { title: 'Vertices', val: vertices },
                    { title: 'Positions', val: positions }];
                localStorage.setItem('gi_summary', JSON.stringify(gi_summary));
                break;
            case 'wireframe.show':
                this.wireframeToggle();
                break;
            case 'ambient_light.show': // Ambient Light
                this.settings.ambient_light.show = !this.settings.ambient_light.show;
                if (scene.ambient_light) {
                    scene.ambient_light.visible = this.settings.ambient_light.show;
                }
                break;
            case 'ambient_light.intensity':
                this.settings.ambient_light.intensity = Number(value);
                scene.ambient_light.intensity = this.settings.ambient_light.intensity;
                break;
            case 'hemisphere_light.show': // Hemisphere Light
                this.settings.hemisphere_light.show = !this.settings.hemisphere_light.show;
                if (scene.hemisphere_light) {
                    scene.hemisphere_light.visible = this.settings.hemisphere_light.show;
                }
                break;
            case 'hemisphere_light.helper':
                this.settings.hemisphere_light.helper = !this.settings.hemisphere_light.helper;
                break;
            case 'hemisphere_light.intensity':
                this.settings.hemisphere_light.intensity = Number(value);
                scene.hemisphere_light.intensity = this.settings.hemisphere_light.intensity;
                break;
            case 'directional_light.show': // Directional Light
                this.settings.directional_light.show = !this.settings.directional_light.show;
                if (scene.directional_light) {
                    scene.directional_light.visible = this.settings.directional_light.show;
                }
                if (this.settings.directional_light.show) {
                    this.settings.ambient_light.intensity = 0.3;
                    this.settings.hemisphere_light.intensity = 0.3;
                }
                else {
                    this.settings.ambient_light.intensity = 0.5;
                    this.settings.hemisphere_light.intensity = 0.5;
                }
                break;
            case 'directional_light.helper':
                this.settings.directional_light.helper = !this.settings.directional_light.helper;
                break;
            case 'directional_light.intensity':
                this.settings.directional_light.intensity = Number(value);
                scene.directional_light.intensity = this.settings.directional_light.intensity;
                break;
            case 'directional_light.shadow':
                this.settings.directional_light.shadow = !this.settings.directional_light.shadow;
                break;
            case 'directional_light.shadowSize':
                this.settings.directional_light.shadowSize = Number(value);
                setTimeout(function () {
                    scene.DLMapSize(_this.settings.directional_light.shadowSize);
                }, 10);
                break;
            case 'directional_light.azimuth':
                this.settings.directional_light.azimuth = Number(value);
                scene.directionalLightMove(this.settings.directional_light.azimuth);
                break;
            case 'directional_light.altitude':
                this.settings.directional_light.altitude = Number(value);
                scene.directionalLightMove(null, this.settings.directional_light.altitude);
                break;
            case 'directional_light.distance':
                this.settings.directional_light.distance = Number(value);
                scene.DLDistance(this.settings.directional_light.distance);
                break;
            case 'ground.show':
                this.settings.ground.show = !this.settings.ground.show;
                // scene.directional_light.visible = this.settings.directional_light.show;
                break;
            case 'ground.width':
                this.settings.ground.width = Number(value);
                break;
            case 'ground.length':
                this.settings.ground.length = Number(value);
                break;
            case 'ground.height':
                this.settings.ground.height = Number(value);
                if (scene.groundObj) {
                    scene.groundObj.position.setZ(this.settings.ground.height);
                }
                break;
            case 'ground.shininess':
                this.settings.ground.shininess = Number(value);
                break;
            default:
                break;
        }
        scene._renderer.render(scene._scene, scene._camera);
    };
    // resetDefault(setting, value) {
    //     const seg = setting.split('.');
    //     this.settings[seg[0]][seg[1]] = value;
    // }
    GIViewerComponent.prototype.resetToDefault = function () {
        var default_settings = JSON.parse(localStorage.getItem('mpm_default_settings'));
        this.settings = default_settings;
    };
    GIViewerComponent.prototype.checkColor = function (color) {
        var _color = this.cpService.hsvaToRgba(this.cpService.stringToHsva(color));
        if ((_color.r + _color.g + _color.b) / _color.a < 1.5) {
            return true;
        }
        else {
            return false;
        }
    };
    GIViewerComponent.prototype.wireframeToggle = function () {
        var _this = this;
        var scene = this.dataService.getThreejsScene();
        scene.sceneObjs.forEach(function (obj) {
            if (obj.type === 'Mesh') {
                _this.settings.wireframe.show = !_this.settings.wireframe.show;
                // @ts-ignore
                // obj.material.wireframe = this.settings.wireframe.show;
            }
        });
    };
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        __metadata("design:type", _libs_geo_info_GIModel__WEBPACK_IMPORTED_MODULE_0__["GIModel"])
    ], GIViewerComponent.prototype, "data", void 0);
    GIViewerComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'gi-viewer',
            template: __webpack_require__(/*! ./gi-viewer.component.html */ "./src/app/model-viewers/all-viewers/gi-viewer/gi-viewer.component.html"),
            styles: [__webpack_require__(/*! ./gi-viewer.component.scss */ "./src/app/model-viewers/all-viewers/gi-viewer/gi-viewer.component.scss")]
        }),
        __metadata("design:paramtypes", [_data_data_service__WEBPACK_IMPORTED_MODULE_3__["DataService"], _html_modal_window_service__WEBPACK_IMPORTED_MODULE_4__["ModalService"], ngx_color_picker__WEBPACK_IMPORTED_MODULE_5__["ColorPickerService"]])
    ], GIViewerComponent);
    return GIViewerComponent;
}());



/***/ }),

/***/ "./src/app/model-viewers/all-viewers/gi-viewer/gi-viewer.module.ts":
/*!*************************************************************************!*\
  !*** ./src/app/model-viewers/all-viewers/gi-viewer/gi-viewer.module.ts ***!
  \*************************************************************************/
/*! exports provided: GIViewerModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GIViewerModule", function() { return GIViewerModule; });
/* harmony import */ var angular_split__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! angular-split */ "./node_modules/angular-split/fesm5/angular-split.js");
/* harmony import */ var ngx_pagination__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ngx-pagination */ "./node_modules/ngx-pagination/dist/ngx-pagination.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_material_slider__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/material/slider */ "./node_modules/@angular/material/esm5/slider.es5.js");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/fesm5/common.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm5/forms.js");
/* harmony import */ var _angular_material_tooltip__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/material/tooltip */ "./node_modules/@angular/material/esm5/tooltip.es5.js");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/material */ "./node_modules/@angular/material/esm5/material.es5.js");
/* harmony import */ var _angular_material_expansion__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/material/expansion */ "./node_modules/@angular/material/esm5/expansion.es5.js");
/* harmony import */ var ngx_color_picker__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ngx-color-picker */ "./node_modules/ngx-color-picker/dist/ngx-color-picker.es5.js");
/* harmony import */ var _attribute_attribute_module__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./attribute/attribute.module */ "./src/app/model-viewers/all-viewers/gi-viewer/attribute/attribute.module.ts");
/* harmony import */ var _gi_viewer_component__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./gi-viewer.component */ "./src/app/model-viewers/all-viewers/gi-viewer/gi-viewer.component.ts");
/* harmony import */ var _threejs_threejs_viewer_component__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./threejs/threejs-viewer.component */ "./src/app/model-viewers/all-viewers/gi-viewer/threejs/threejs-viewer.component.ts");
/* harmony import */ var _attribute_attribute_component__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./attribute/attribute.component */ "./src/app/model-viewers/all-viewers/gi-viewer/attribute/attribute.component.ts");
/* harmony import */ var _attribute_tab_component__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./attribute/tab.component */ "./src/app/model-viewers/all-viewers/gi-viewer/attribute/tab.component.ts");
/* harmony import */ var _attribute_tabs_component__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./attribute/tabs.component */ "./src/app/model-viewers/all-viewers/gi-viewer/attribute/tabs.component.ts");
/* harmony import */ var _html_tab_component__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./html/tab.component */ "./src/app/model-viewers/all-viewers/gi-viewer/html/tab.component.ts");
/* harmony import */ var _html_tabs_component__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./html/tabs.component */ "./src/app/model-viewers/all-viewers/gi-viewer/html/tabs.component.ts");
/* harmony import */ var _html_dropdown_menu_component__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./html/dropdown-menu.component */ "./src/app/model-viewers/all-viewers/gi-viewer/html/dropdown-menu.component.ts");
/* harmony import */ var _html_modal_window_component__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./html/modal-window.component */ "./src/app/model-viewers/all-viewers/gi-viewer/html/modal-window.component.ts");
/* harmony import */ var _html_modal_window_service__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./html/modal-window.service */ "./src/app/model-viewers/all-viewers/gi-viewer/html/modal-window.service.ts");
/* harmony import */ var _threejs_threejs_viewer_service__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./threejs/threejs-viewer.service */ "./src/app/model-viewers/all-viewers/gi-viewer/threejs/threejs-viewer.service.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};


// import @angular stuff









// import app components











/**
 * GIViewer
 * A viewer for Geo-Info models.
 */
var GIViewerModule = /** @class */ (function () {
    function GIViewerModule() {
    }
    GIViewerModule_1 = GIViewerModule;
    GIViewerModule.forRoot = function () {
        return {
            ngModule: GIViewerModule_1
        };
    };
    var GIViewerModule_1;
    GIViewerModule = GIViewerModule_1 = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_2__["NgModule"])({
            declarations: [
                _gi_viewer_component__WEBPACK_IMPORTED_MODULE_11__["GIViewerComponent"],
                _threejs_threejs_viewer_component__WEBPACK_IMPORTED_MODULE_12__["ThreejsViewerComponent"],
                _attribute_attribute_component__WEBPACK_IMPORTED_MODULE_13__["AttributeComponent"],
                _attribute_tab_component__WEBPACK_IMPORTED_MODULE_14__["ATabComponent"],
                _attribute_tabs_component__WEBPACK_IMPORTED_MODULE_15__["ATabsComponent"],
                _html_tab_component__WEBPACK_IMPORTED_MODULE_16__["TabComponent"],
                _html_tabs_component__WEBPACK_IMPORTED_MODULE_17__["TabsComponent"],
                _html_dropdown_menu_component__WEBPACK_IMPORTED_MODULE_18__["DropdownMenuComponent"],
                _html_modal_window_component__WEBPACK_IMPORTED_MODULE_19__["ModalWindowComponent"]
            ],
            exports: [
                _gi_viewer_component__WEBPACK_IMPORTED_MODULE_11__["GIViewerComponent"]
            ],
            imports: [
                _angular_common__WEBPACK_IMPORTED_MODULE_4__["CommonModule"],
                angular_split__WEBPACK_IMPORTED_MODULE_0__["AngularSplitModule"],
                _angular_material_slider__WEBPACK_IMPORTED_MODULE_3__["MatSliderModule"],
                _angular_material__WEBPACK_IMPORTED_MODULE_7__["MatIconModule"],
                ngx_pagination__WEBPACK_IMPORTED_MODULE_1__["NgxPaginationModule"],
                _angular_material_expansion__WEBPACK_IMPORTED_MODULE_8__["MatExpansionModule"],
                _angular_material_tooltip__WEBPACK_IMPORTED_MODULE_6__["MatTooltipModule"],
                _attribute_attribute_module__WEBPACK_IMPORTED_MODULE_10__["AttributeModule"],
                _angular_forms__WEBPACK_IMPORTED_MODULE_5__["FormsModule"],
                ngx_color_picker__WEBPACK_IMPORTED_MODULE_9__["ColorPickerModule"]
            ],
            providers: [
                _html_modal_window_service__WEBPACK_IMPORTED_MODULE_20__["ModalService"],
                _threejs_threejs_viewer_service__WEBPACK_IMPORTED_MODULE_21__["ThreeJSViewerService"]
            ]
        })
    ], GIViewerModule);
    return GIViewerModule;
}());



/***/ }),

/***/ "./src/app/model-viewers/all-viewers/gi-viewer/gi-viewer.settings.ts":
/*!***************************************************************************!*\
  !*** ./src/app/model-viewers/all-viewers/gi-viewer/gi-viewer.settings.ts ***!
  \***************************************************************************/
/*! exports provided: DefaultSettings, SettingsColorMap, Locale */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DefaultSettings", function() { return DefaultSettings; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SettingsColorMap", function() { return SettingsColorMap; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Locale", function() { return Locale; });
/* harmony import */ var _env_version__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @env/version */ "./src/environments/version.ts");

var DefaultSettings = {
    normals: { show: false, size: 5 },
    axes: { show: true, size: 50 },
    grid: { show: true, size: 500 },
    positions: { show: true, size: 0.5 },
    tjs_summary: { show: false },
    gi_summary: { show: false },
    wireframe: { show: false },
    colors: {
        viewer_bg: '#E6E6E6',
        position: '#000000',
        position_s: '#0033FF',
        vertex_s: '#FFCC00',
        face_f: '#FFFFFF',
        face_f_s: '#4949BD',
        face_b: '#DDDDDD',
        face_b_s: '#00006D'
    },
    ambient_light: {
        show: true,
        color: '#FFFFFF',
        intensity: 0.5
    },
    hemisphere_light: {
        show: true,
        helper: false,
        skyColor: '#FFFFFF',
        groundColor: '#FFFFFF',
        intensity: 0.5
    },
    directional_light: {
        show: false,
        helper: false,
        color: '#FFFFFF',
        intensity: 1,
        shadow: true,
        shadowSize: 4,
        azimuth: 90,
        altitude: 45,
        distance: 10000
    },
    ground: {
        show: false,
        width: 1000,
        length: 1000,
        height: -0.5,
        color: '#FFFFFF',
        shininess: 0
    },
    version: _env_version__WEBPACK_IMPORTED_MODULE_0__["VERSION"].version
};
var SettingsColorMap = [{
        label: 'Viewer Background',
        setting: 'viewer_bg',
        default: '#E6E6E6'
    }, {
        label: 'Position',
        setting: 'position'
    }, {
        label: 'Position Selected',
        setting: 'position_s'
    }, {
        label: 'Face Front',
        setting: 'face_f'
    }, {
        label: 'Face Front Selected',
        setting: 'face_f_s'
    }, {
        label: 'Face Back',
        setting: 'face_b'
    }, {
        label: 'Face Back Selected',
        setting: 'face_b_s'
    }, {
        label: 'Vertices Selected',
        setting: 'vertex_s'
    }];
var Locale = [{
        name: 'Singapore',
        zone: 'Asia/Singapore',
        lat: '1.35',
        long: '103.8'
    }];


/***/ }),

/***/ "./src/app/model-viewers/all-viewers/gi-viewer/gi-viewer.ts":
/*!******************************************************************!*\
  !*** ./src/app/model-viewers/all-viewers/gi-viewer/gi-viewer.ts ***!
  \******************************************************************/
/*! exports provided: GIViewerModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _gi_viewer_module__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./gi-viewer.module */ "./src/app/model-viewers/all-viewers/gi-viewer/gi-viewer.module.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GIViewerModule", function() { return _gi_viewer_module__WEBPACK_IMPORTED_MODULE_0__["GIViewerModule"]; });




/***/ }),

/***/ "./src/app/model-viewers/all-viewers/gi-viewer/html/dropdown-menu.component.html":
/*!***************************************************************************************!*\
  !*** ./src/app/model-viewers/all-viewers/gi-viewer/html/dropdown-menu.component.html ***!
  \***************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div\r\n    [hidden]=\"!visible\"\r\n    [style.left.px]='position.x'\r\n    [style.top.px]='position.y'\r\n>\r\n    <ul>\r\n        <ol>Please choose:</ol>\r\n        <ol *ngFor=\"let item of items\" (click)=\"selectItem(item)\">{{item.label}}</ol>\r\n    </ul>\r\n</div>\r\n"

/***/ }),

/***/ "./src/app/model-viewers/all-viewers/gi-viewer/html/dropdown-menu.component.scss":
/*!***************************************************************************************!*\
  !*** ./src/app/model-viewers/all-viewers/gi-viewer/html/dropdown-menu.component.scss ***!
  \***************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "div {\n  position: absolute; }\n  div ul {\n    padding: 0;\n    border: 1px solid #eeeeee;\n    box-shadow: 1px 1px 3px 0px #bbbbbb; }\n  div ul ol {\n      cursor: pointer;\n      list-style: none;\n      background: #ffffff;\n      min-width: 20px;\n      padding: 5px 10px; }\n  div ul ol:hover {\n        background: #eeeeee; }\n  div ul:first-child {\n      background: #f9f9f9; }\n\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kZWwtdmlld2Vycy9hbGwtdmlld2Vycy9naS12aWV3ZXIvaHRtbC9DOlxcRHJvcGJveFxcRmlsZXNcXFNvZnR3YXJlXFxHaXRIdWJcXGRlc2lnbi1hdXRvbWF0aW9uXFxtb2JpdXMtcGFyYW1ldHJpYy1tb2RlbGxlci9zcmNcXGFwcFxcbW9kZWwtdmlld2Vyc1xcYWxsLXZpZXdlcnNcXGdpLXZpZXdlclxcaHRtbFxcZHJvcGRvd24tbWVudS5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGtCQUFrQixFQUFBO0VBRHRCO0lBR1EsVUFBVTtJQUNWLHlCQUF5QjtJQUN6QixtQ0FBbUMsRUFBQTtFQUwzQztNQU9ZLGVBQWU7TUFDZixnQkFBZ0I7TUFDaEIsbUJBQW1CO01BQ25CLGVBQWU7TUFDZixpQkFBaUIsRUFBQTtFQVg3QjtRQWFnQixtQkFBbUIsRUFBQTtFQWJuQztNQWlCWSxtQkFBbUIsRUFBQSIsImZpbGUiOiJzcmMvYXBwL21vZGVsLXZpZXdlcnMvYWxsLXZpZXdlcnMvZ2ktdmlld2VyL2h0bWwvZHJvcGRvd24tbWVudS5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbImRpdntcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIHVse1xyXG4gICAgICAgIHBhZGRpbmc6IDA7XHJcbiAgICAgICAgYm9yZGVyOiAxcHggc29saWQgI2VlZWVlZTtcclxuICAgICAgICBib3gtc2hhZG93OiAxcHggMXB4IDNweCAwcHggI2JiYmJiYjtcclxuICAgICAgICBvbHtcclxuICAgICAgICAgICAgY3Vyc29yOiBwb2ludGVyO1xyXG4gICAgICAgICAgICBsaXN0LXN0eWxlOiBub25lO1xyXG4gICAgICAgICAgICBiYWNrZ3JvdW5kOiAjZmZmZmZmO1xyXG4gICAgICAgICAgICBtaW4td2lkdGg6IDIwcHg7XHJcbiAgICAgICAgICAgIHBhZGRpbmc6IDVweCAxMHB4O1xyXG4gICAgICAgICAgICAmOmhvdmVye1xyXG4gICAgICAgICAgICAgICAgYmFja2dyb3VuZDogI2VlZWVlZTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICAmOmZpcnN0LWNoaWxke1xyXG4gICAgICAgICAgICBiYWNrZ3JvdW5kOiAjZjlmOWY5O1xyXG4gICAgICAgIH1cclxuICAgIH1cclxufSJdfQ== */"

/***/ }),

/***/ "./src/app/model-viewers/all-viewers/gi-viewer/html/dropdown-menu.component.ts":
/*!*************************************************************************************!*\
  !*** ./src/app/model-viewers/all-viewers/gi-viewer/html/dropdown-menu.component.ts ***!
  \*************************************************************************************/
/*! exports provided: DropdownMenuComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DropdownMenuComponent", function() { return DropdownMenuComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};

var DropdownMenuComponent = /** @class */ (function () {
    function DropdownMenuComponent() {
        this.selected = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
    }
    DropdownMenuComponent.prototype.setItems = function (items, label) {
        var dropdownMenu = [];
        items.map(function (item) { return dropdownMenu.push({ id: item, label: "" + label + item }); });
        // console.log('dropdownMenu', dropdownMenu);
        this.items = dropdownMenu;
    };
    DropdownMenuComponent.prototype.selectItem = function (item) {
        this.visible = false;
        this.selected.emit(item.id);
    };
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])(),
        __metadata("design:type", Object)
    ], DropdownMenuComponent.prototype, "selected", void 0);
    DropdownMenuComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'dropdown-menu',
            template: __webpack_require__(/*! ./dropdown-menu.component.html */ "./src/app/model-viewers/all-viewers/gi-viewer/html/dropdown-menu.component.html"),
            styles: [__webpack_require__(/*! ./dropdown-menu.component.scss */ "./src/app/model-viewers/all-viewers/gi-viewer/html/dropdown-menu.component.scss")]
        })
    ], DropdownMenuComponent);
    return DropdownMenuComponent;
}());



/***/ }),

/***/ "./src/app/model-viewers/all-viewers/gi-viewer/html/modal-window.component.html":
/*!**************************************************************************************!*\
  !*** ./src/app/model-viewers/all-viewers/gi-viewer/html/modal-window.component.html ***!
  \**************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"modal-window\" id=\"modal-window\">\r\n    <div class=\"modal-body\">\r\n        <ng-content></ng-content>\r\n    </div>\r\n</div>\r\n<div class=\"modal-background\"></div>"

/***/ }),

/***/ "./src/app/model-viewers/all-viewers/gi-viewer/html/modal-window.component.scss":
/*!**************************************************************************************!*\
  !*** ./src/app/model-viewers/all-viewers/gi-viewer/html/modal-window.component.scss ***!
  \**************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "@charset \"UTF-8\";\n.modal-window {\n  max-width: 777px;\n  position: absolute;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  z-index: 1000;\n  overflow: auto;\n  -webkit-transition: transform 1s ease; }\n.modal-window.open {\n    -webkit-animation: slide 0.5s forwards;\n    animation: slide 0.5s forwards; }\n.modal-window     .modal-body {\n    padding: 20px;\n    background: #fff;\n    margin: 0;\n    min-height: calc(100% - 40px);\n    position: relative; }\n@-webkit-keyframes slide {\n  100% {\n    left: 0; } }\n@keyframes slide {\n  100% {\n    left: 0; } }\n.modal-background {\n  position: fixed;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  background-color: transparent;\n  opacity: 0.5;\n  z-index: 900; }\n\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kZWwtdmlld2Vycy9hbGwtdmlld2Vycy9naS12aWV3ZXIvaHRtbC9tb2RhbC13aW5kb3cuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL21vZGVsLXZpZXdlcnMvYWxsLXZpZXdlcnMvZ2ktdmlld2VyL2h0bWwvQzpcXERyb3Bib3hcXEZpbGVzXFxTb2Z0d2FyZVxcR2l0SHViXFxkZXNpZ24tYXV0b21hdGlvblxcbW9iaXVzLXBhcmFtZXRyaWMtbW9kZWxsZXIvc3JjXFxhcHBcXG1vZGVsLXZpZXdlcnNcXGFsbC12aWV3ZXJzXFxnaS12aWV3ZXJcXGh0bWxcXG1vZGFsLXdpbmRvdy5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxnQkFBZ0I7QUNBaEI7RUFDSSxnQkFBZ0I7RUFDaEIsa0JBQWtCO0VBQ2xCLE1BQU07RUFDTixRQUFRO0VBQ1IsU0FBUztFQUVULGFBQWE7RUFDYixjQUFjO0VBQ2QscUNBQXFDLEVBQUE7QUFUekM7SUFXUSxzQ0FBc0M7SUFDdEMsOEJBQThCLEVBQUE7QUFadEM7SUFnQlEsYUFBYTtJQUNiLGdCQUFnQjtJQUNoQixTQUFTO0lBQ1QsNkJBQTZCO0lBSTdCLGtCQUFrQixFQUFBO0FBSzFCO0VBQ0k7SUFBTyxPQUFPLEVBQUEsRUFBQTtBQUdsQjtFQUNJO0lBQU8sT0FBTyxFQUFBLEVBQUE7QUFHbEI7RUFDSSxlQUFlO0VBQ2YsTUFBTTtFQUNOLFFBQVE7RUFDUixTQUFTO0VBQ1QsT0FBTztFQUNQLDZCQUE2QjtFQUM3QixZQUFZO0VBQ1osWUFBWSxFQUFBIiwiZmlsZSI6InNyYy9hcHAvbW9kZWwtdmlld2Vycy9hbGwtdmlld2Vycy9naS12aWV3ZXIvaHRtbC9tb2RhbC13aW5kb3cuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJAY2hhcnNldCBcIlVURi04XCI7XG4ubW9kYWwtd2luZG93IHtcbiAgbWF4LXdpZHRoOiA3NzdweDtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDA7XG4gIHJpZ2h0OiAwO1xuICBib3R0b206IDA7XG4gIHotaW5kZXg6IDEwMDA7XG4gIG92ZXJmbG93OiBhdXRvO1xuICAtd2Via2l0LXRyYW5zaXRpb246IHRyYW5zZm9ybSAxcyBlYXNlOyB9XG4gIC5tb2RhbC13aW5kb3cub3BlbiB7XG4gICAgLXdlYmtpdC1hbmltYXRpb246IHNsaWRlIDAuNXMgZm9yd2FyZHM7XG4gICAgYW5pbWF0aW9uOiBzbGlkZSAwLjVzIGZvcndhcmRzOyB9XG4gIC5tb2RhbC13aW5kb3cgwqDCoMKgwqAubW9kYWwtYm9keSB7XG4gICAgcGFkZGluZzogMjBweDtcbiAgICBiYWNrZ3JvdW5kOiAjZmZmO1xuICAgIG1hcmdpbjogMDtcbiAgICBtaW4taGVpZ2h0OiBjYWxjKDEwMCUgLSA0MHB4KTtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7IH1cblxuQC13ZWJraXQta2V5ZnJhbWVzIHNsaWRlIHtcbiAgMTAwJSB7XG4gICAgbGVmdDogMDsgfSB9XG5cbkBrZXlmcmFtZXMgc2xpZGUge1xuICAxMDAlIHtcbiAgICBsZWZ0OiAwOyB9IH1cblxuLm1vZGFsLWJhY2tncm91bmQge1xuICBwb3NpdGlvbjogZml4ZWQ7XG4gIHRvcDogMDtcbiAgcmlnaHQ6IDA7XG4gIGJvdHRvbTogMDtcbiAgbGVmdDogMDtcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gIG9wYWNpdHk6IDAuNTtcbiAgei1pbmRleDogOTAwOyB9XG4iLCIubW9kYWwtd2luZG93IHtcclxuICAgIG1heC13aWR0aDogNzc3cHg7XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICB0b3A6IDA7XHJcbiAgICByaWdodDogMDtcclxuICAgIGJvdHRvbTogMDtcclxuICAgIC8vIGxlZnQ6IDA7XHJcbiAgICB6LWluZGV4OiAxMDAwO1xyXG4gICAgb3ZlcmZsb3c6IGF1dG87XHJcbiAgICAtd2Via2l0LXRyYW5zaXRpb246IHRyYW5zZm9ybSAxcyBlYXNlO1xyXG4gICAgJi5vcGVue1xyXG4gICAgICAgIC13ZWJraXQtYW5pbWF0aW9uOiBzbGlkZSAwLjVzIGZvcndhcmRzO1xyXG4gICAgICAgIGFuaW1hdGlvbjogc2xpZGUgMC41cyBmb3J3YXJkcztcclxuICAgIH1cclxuXHJcbsKgwqDCoMKgLm1vZGFsLWJvZHkge1xyXG4gICAgICAgIHBhZGRpbmc6IDIwcHg7XHJcbiAgICAgICAgYmFja2dyb3VuZDogI2ZmZjtcclxuICAgICAgICBtYXJnaW46IDA7XHJcbiAgICAgICAgbWluLWhlaWdodDogY2FsYygxMDAlIC0gNDBweCk7XHJcbiAgICAgICAgLy8gd2lkdGg6IDUwJTtcclxuICAgICAgICAvLyBtYXJnaW4tbGVmdDogNTAlO1xyXG4gICAgICAgIC8vIGxlZnQ6IC0yNSU7XHJcbiAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgfVxyXG59XHJcblxyXG5cclxuQC13ZWJraXQta2V5ZnJhbWVzIHNsaWRlIHtcclxuICAgIDEwMCUgeyBsZWZ0OiAwOyB9XHJcbn1cclxuXHJcbkBrZXlmcmFtZXMgc2xpZGUge1xyXG4gICAgMTAwJSB7IGxlZnQ6IDA7IH1cclxufVxyXG5cclxuLm1vZGFsLWJhY2tncm91bmQge1xyXG4gICAgcG9zaXRpb246IGZpeGVkO1xyXG4gICAgdG9wOiAwO1xyXG4gICAgcmlnaHQ6IDA7XHJcbiAgICBib3R0b206IDA7XHJcbiAgICBsZWZ0OiAwO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XHJcbiAgICBvcGFjaXR5OiAwLjU7XHJcbiAgICB6LWluZGV4OiA5MDA7XHJcbn0iXX0= */"

/***/ }),

/***/ "./src/app/model-viewers/all-viewers/gi-viewer/html/modal-window.component.ts":
/*!************************************************************************************!*\
  !*** ./src/app/model-viewers/all-viewers/gi-viewer/html/modal-window.component.ts ***!
  \************************************************************************************/
/*! exports provided: ModalWindowComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ModalWindowComponent", function() { return ModalWindowComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _modal_window_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./modal-window.service */ "./src/app/model-viewers/all-viewers/gi-viewer/html/modal-window.service.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};


var ModalWindowComponent = /** @class */ (function () {
    function ModalWindowComponent(modalService, el) {
        this.modalService = modalService;
        this.el = el;
        this.element = el.nativeElement;
    }
    ModalWindowComponent.prototype.ngOnInit = function () {
        var modal = this;
        // ensure id attribute exists
        if (!this.id) {
            console.error('modal must have an id');
            return;
        }
        var leftContent = document.getElementsByClassName('content__panel')[0];
        this.containerWidth = leftContent.clientWidth;
        var modalWindow = this.element.querySelector('.modal-window');
        modalWindow.style.width = this.containerWidth + 11 + "px";
        modalWindow.style.left = -this.containerWidth - 11 + "px";
        // move element to bottom of page (just before </body>) so it can be displayed above everything else
        document.body.appendChild(this.element);
        // close modal on background click
        this.element.addEventListener('click', function (e) {
            if (e.target.className === 'modal-background') {
                modal.close();
            }
        });
        // add self (this modal instance) to the modal service so it's accessible from controllers
        this.modalService.add(this);
    };
    // remove self from modal service when directive is destroyed
    ModalWindowComponent.prototype.ngOnDestroy = function () {
        this.modalService.remove(this.id);
        this.element.remove();
    };
    // open modal
    ModalWindowComponent.prototype.open = function () {
        var modalWindow = document.getElementById('modal-window');
        // modalWindow.style.left = 0;
        modalWindow.classList.add('open');
        this.element.style.display = 'block';
        document.body.classList.add('modal-open');
    };
    // close modal
    ModalWindowComponent.prototype.close = function () {
        this.element.style.display = 'none';
        var modalWindow = this.element.querySelector('.modal-window');
        // modalWindow.style.left = `${-this.containerWidth - 11}px`;
        modalWindow.classList.remove('open');
        document.body.classList.remove('modal-open');
    };
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", String)
    ], ModalWindowComponent.prototype, "id", void 0);
    ModalWindowComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'modal-window',
            template: __webpack_require__(/*! ./modal-window.component.html */ "./src/app/model-viewers/all-viewers/gi-viewer/html/modal-window.component.html"),
            styles: [__webpack_require__(/*! ./modal-window.component.scss */ "./src/app/model-viewers/all-viewers/gi-viewer/html/modal-window.component.scss")]
        }),
        __metadata("design:paramtypes", [_modal_window_service__WEBPACK_IMPORTED_MODULE_1__["ModalService"], _angular_core__WEBPACK_IMPORTED_MODULE_0__["ElementRef"]])
    ], ModalWindowComponent);
    return ModalWindowComponent;
}());



/***/ }),

/***/ "./src/app/model-viewers/all-viewers/gi-viewer/html/modal-window.service.ts":
/*!**********************************************************************************!*\
  !*** ./src/app/model-viewers/all-viewers/gi-viewer/html/modal-window.service.ts ***!
  \**********************************************************************************/
/*! exports provided: ModalService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ModalService", function() { return ModalService; });
var ModalService = /** @class */ (function () {
    function ModalService() {
        this.modals = [];
    }
    ModalService.prototype.add = function (modal) {
        // add modal to array of active modals
        this.modals.push(modal);
    };
    ModalService.prototype.remove = function (id) {
        // remove modal from array of active modals
        this.modals = this.modals.filter(function (x) { return x.id !== id; });
    };
    ModalService.prototype.open = function (id) {
        var modal = this.modals.filter(function (x) { return x.id === id; })[0];
        modal.open();
    };
    ModalService.prototype.close = function (id) {
        // close modal specified by id
        var modal = this.modals.filter(function (x) { return x.id === id; })[0];
        modal.close();
    };
    return ModalService;
}());



/***/ }),

/***/ "./src/app/model-viewers/all-viewers/gi-viewer/html/tab.component.ts":
/*!***************************************************************************!*\
  !*** ./src/app/model-viewers/all-viewers/gi-viewer/html/tab.component.ts ***!
  \***************************************************************************/
/*! exports provided: TabComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TabComponent", function() { return TabComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};

var TabComponent = /** @class */ (function () {
    function TabComponent() {
        this.active = false;
    }
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])('tabTitle'),
        __metadata("design:type", String)
    ], TabComponent.prototype, "title", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", Object)
    ], TabComponent.prototype, "active", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])('index'),
        __metadata("design:type", Number)
    ], TabComponent.prototype, "index", void 0);
    TabComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'tab',
            template: "\n    <div [hidden]=\"!active\" class=\"pane\">\n      <ng-content></ng-content>\n    </div>\n  ",
            styles: ["\n    .pane{\n      padding: 0;\n    }\n  "]
        })
    ], TabComponent);
    return TabComponent;
}());



/***/ }),

/***/ "./src/app/model-viewers/all-viewers/gi-viewer/html/tabs.component.html":
/*!******************************************************************************!*\
  !*** ./src/app/model-viewers/all-viewers/gi-viewer/html/tabs.component.html ***!
  \******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<ul class=\"nav nav-tabs\">\r\n    <li\r\n        *ngFor=\"let tab of tabs;\"\r\n        (click)=\"selectTab(tab)\"\r\n        [class.active]=\"tab.active\"\r\n    >\r\n        <div>\r\n            <span>{{tab.title}}</span>\r\n        </div>\r\n    </li>\r\n    \r\n</ul>\r\n<ng-content></ng-content>\r\n"

/***/ }),

/***/ "./src/app/model-viewers/all-viewers/gi-viewer/html/tabs.component.scss":
/*!******************************************************************************!*\
  !*** ./src/app/model-viewers/all-viewers/gi-viewer/html/tabs.component.scss ***!
  \******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "/* Style The Dropdown Button */\n.dropbtn {\n  background-color: transparent;\n  color: #808080;\n  border: 1px solid transparent;\n  cursor: pointer;\n  font-family: sans-serif;\n  font-weight: 550;\n  font-size: 12px;\n  line-height: 15px;\n  outline: none;\n  text-align: center;\n  width: 100%;\n  height: 21px;\n  margin-top: -1px;\n  padding-right: 10px;\n  border-bottom: 2px solid transparent; }\n.dropbtn::after {\n  content: '';\n  width: 0;\n  height: 0;\n  border-left: 4px solid transparent;\n  border-right: 4px solid transparent;\n  border-top: 4px solid #505050;\n  border-bottom: none;\n  position: absolute;\n  top: 7px;\n  right: 6px; }\n/* The container <div> - needed to position the dropdown content */\n.dropdown {\n  position: absolute;\n  display: inline-block;\n  left: 0px;\n  width: 100%; }\n/* Dropdown Content (Hidden by Default) */\n.dropdown-content {\n  display: none;\n  position: absolute;\n  background-color: #ececec;\n  min-width: 85px;\n  box-shadow: 0px 8px 16px 0px rgba(0, 0, 0, 0.2);\n  z-index: 500;\n  top: 19px; }\n/* Links inside the dropdown */\n.dropdown-content div {\n  color: black;\n  padding: 6px 8px;\n  text-decoration: none; }\n/* Change color of dropdown links on hover */\n.dropdown-content div:hover {\n  background-color: #fefefe; }\n/* Show the dropdown menu on hover */\n/* Change the background color of the dropdown button when the dropdown content is shown */\n.dropdown:hover .dropbtn {\n  color: #00006d; }\n.nav-tabs li.active .dropbtn {\n  color: #00006d;\n  background-color: whitesmoke;\n  border: 1px solid #B3B3B3;\n  border-bottom: 2px solid whitesmoke; }\n.nav-tabs li.open .dropbtn::after {\n  content: '';\n  border-top: none;\n  border-bottom: 4px solid #505050; }\n#topology_dropdown, #object_dropdown {\n  display: none;\n  position: absolute;\n  width: -webkit-fit-content;\n  width: -moz-fit-content;\n  width: fit-content;\n  transition: display 0.4s;\n  z-index: 99999999;\n  background-color: #fafafb;\n  border: 1px solid #808080;\n  box-shadow: none; }\n#topology_dropdown div, #object_dropdown div {\n    cursor: pointer;\n    display: block;\n    min-width: 100px;\n    max-width: 300px;\n    overflow: hidden;\n    line-height: 20px;\n    background-color: #fafafb;\n    border: 0px;\n    margin: 0px;\n    padding: 0px 10px 0px 10px;\n    line-height: 30px;\n    height: 30px;\n    font-size: 12px;\n    color: #373737; }\n#topology_dropdown div:hover, #object_dropdown div:hover {\n      color: #00006d;\n      background-color: #E6E6E6; }\n\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kZWwtdmlld2Vycy9hbGwtdmlld2Vycy9naS12aWV3ZXIvaHRtbC9DOlxcRHJvcGJveFxcRmlsZXNcXFNvZnR3YXJlXFxHaXRIdWJcXGRlc2lnbi1hdXRvbWF0aW9uXFxtb2JpdXMtcGFyYW1ldHJpYy1tb2RlbGxlci9zcmNcXGFwcFxcbW9kZWwtdmlld2Vyc1xcYWxsLXZpZXdlcnNcXGdpLXZpZXdlclxcaHRtbFxcdGFicy5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvbW9kZWwtdmlld2Vycy9hbGwtdmlld2Vycy9naS12aWV3ZXIvaHRtbC9DOlxcRHJvcGJveFxcRmlsZXNcXFNvZnR3YXJlXFxHaXRIdWJcXGRlc2lnbi1hdXRvbWF0aW9uXFxtb2JpdXMtcGFyYW1ldHJpYy1tb2RlbGxlci9zcmNcXHNjc3NcXGNvbG9ycy5zY3NzIiwic3JjL2FwcC9tb2RlbC12aWV3ZXJzL2FsbC12aWV3ZXJzL2dpLXZpZXdlci9odG1sL0M6XFxEcm9wYm94XFxGaWxlc1xcU29mdHdhcmVcXEdpdEh1YlxcZGVzaWduLWF1dG9tYXRpb25cXG1vYml1cy1wYXJhbWV0cmljLW1vZGVsbGVyL3NyY1xcc2Nzc1xcdmFyaWFibGVzLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBR0EsOEJBQUE7QUFDQTtFQUNJLDZCQUE2QjtFQUM3QixjQUFjO0VBQ2QsNkJBQTZCO0VBQzdCLGVBQWU7RUFDZix1QkFBdUI7RUFDdkIsZ0JBQWdCO0VBQ2hCLGVBQWU7RUFDZixpQkFBaUI7RUFDakIsYUFBYTtFQUNiLGtCQUFrQjtFQUNsQixXQUFXO0VBQ1gsWUFBWTtFQUNaLGdCQUFnQjtFQUNoQixtQkFBbUI7RUFDbkIsb0NBQW9DLEVBQUE7QUFHeEM7RUFDSSxXQUFXO0VBQ1gsUUFBUTtFQUNSLFNBQVM7RUFDVCxrQ0FBa0M7RUFDbEMsbUNBQW1DO0VBQ25DLDZCQUE2QjtFQUM3QixtQkFBbUI7RUFDbkIsa0JBQWtCO0VBQ2xCLFFBQVE7RUFDUixVQUFVLEVBQUE7QUFHWixrRUFBQTtBQUNBO0VBQ0Usa0JBQWtCO0VBQ2xCLHFCQUFxQjtFQUNyQixTQUFTO0VBQ1QsV0FBVyxFQUFBO0FBR2IseUNBQUE7QUFDQTtFQUNFLGFBQWE7RUFDYixrQkFBa0I7RUFDbEIseUJBQXlCO0VBQ3pCLGVBQWU7RUFDZiwrQ0FBNEM7RUFDNUMsWUFBWTtFQUNaLFNBQVMsRUFBQTtBQUdYLDhCQUFBO0FBQ0E7RUFDRSxZQUFZO0VBQ1osZ0JBQWdCO0VBQ2hCLHFCQUFxQixFQUFBO0FBR3ZCLDRDQUFBO0FBQ0E7RUFBNkIseUJBQXlCLEVBQUE7QUFFdEQsb0NBQUE7QUFLQSwwRkFBQTtBQUNBO0VBQ0UsY0FDSixFQUFBO0FBRUE7RUFHWSxjQUFjO0VBQ2QsNEJBQTRCO0VBQzVCLHlCQUF5QjtFQUN6QixtQ0FBbUMsRUFBQTtBQU4vQztFQVdZLFdBQVc7RUFDWCxnQkFBZ0I7RUFDaEIsZ0NBQWdDLEVBQUE7QUFLNUM7RUFDSSxhQUFhO0VBQ2Isa0JBQWtCO0VBQ2xCLDBCQUFrQjtFQUFsQix1QkFBa0I7RUFBbEIsa0JBQWtCO0VBQ2xCLHdCQUF3QjtFQUV4QixpQkFBaUI7RUFDakIseUJDNUZ1QjtFRDZGdkIseUJDbkdZO0VEb0daLGdCQUFnQixFQUFBO0FBVHBCO0lBWVEsZUFBZTtJQUNmLGNBQWM7SUFDZCxnQkFBZ0I7SUFDaEIsZ0JBQWdCO0lBQ2hCLGdCQUFnQjtJQUNoQixpQkFBaUI7SUFDakIseUJDdkdtQjtJRHdHbkIsV0FBVztJQUNYLFdBQVc7SUFDWCwwQkFBMEI7SUFDMUIsaUJFNUdLO0lGNkdMLFlFN0dLO0lGOEdMLGVFL0dLO0lGZ0hMLGNDM0dRLEVBQUE7QURrRmhCO01BMkJZLGNDM0dtQjtNRDRHbkIseUJDbkhJLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9tb2RlbC12aWV3ZXJzL2FsbC12aWV3ZXJzL2dpLXZpZXdlci9odG1sL3RhYnMuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJAaW1wb3J0ICd+c2Nzcy9jb2xvcnMnO1xyXG5AaW1wb3J0ICd+c2Nzcy92YXJpYWJsZXMnO1xyXG5cclxuLyogU3R5bGUgVGhlIERyb3Bkb3duIEJ1dHRvbiAqL1xyXG4uZHJvcGJ0biB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcclxuICAgIGNvbG9yOiAjODA4MDgwO1xyXG4gICAgYm9yZGVyOiAxcHggc29saWQgdHJhbnNwYXJlbnQ7XHJcbiAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgICBmb250LWZhbWlseTogc2Fucy1zZXJpZjtcclxuICAgIGZvbnQtd2VpZ2h0OiA1NTA7XHJcbiAgICBmb250LXNpemU6IDEycHg7XHJcbiAgICBsaW5lLWhlaWdodDogMTVweDtcclxuICAgIG91dGxpbmU6IG5vbmU7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGhlaWdodDogMjFweDtcclxuICAgIG1hcmdpbi10b3A6IC0xcHg7XHJcbiAgICBwYWRkaW5nLXJpZ2h0OiAxMHB4O1xyXG4gICAgYm9yZGVyLWJvdHRvbTogMnB4IHNvbGlkIHRyYW5zcGFyZW50O1xyXG59XHJcblxyXG4uZHJvcGJ0bjo6YWZ0ZXJ7XHJcbiAgICBjb250ZW50OiAnJztcclxuICAgIHdpZHRoOiAwOyBcclxuICAgIGhlaWdodDogMDsgXHJcbiAgICBib3JkZXItbGVmdDogNHB4IHNvbGlkIHRyYW5zcGFyZW50O1xyXG4gICAgYm9yZGVyLXJpZ2h0OiA0cHggc29saWQgdHJhbnNwYXJlbnQ7XHJcbiAgICBib3JkZXItdG9wOiA0cHggc29saWQgIzUwNTA1MDtcclxuICAgIGJvcmRlci1ib3R0b206IG5vbmU7XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICB0b3A6IDdweDtcclxuICAgIHJpZ2h0OiA2cHg7XHJcbn1cclxuICBcclxuICAvKiBUaGUgY29udGFpbmVyIDxkaXY+IC0gbmVlZGVkIHRvIHBvc2l0aW9uIHRoZSBkcm9wZG93biBjb250ZW50ICovXHJcbiAgLmRyb3Bkb3duIHtcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICAgIGxlZnQ6IDBweDtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gIH1cclxuICBcclxuICAvKiBEcm9wZG93biBDb250ZW50IChIaWRkZW4gYnkgRGVmYXVsdCkgKi9cclxuICAuZHJvcGRvd24tY29udGVudCB7XHJcbiAgICBkaXNwbGF5OiBub25lO1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2VjZWNlYztcclxuICAgIG1pbi13aWR0aDogODVweDtcclxuICAgIGJveC1zaGFkb3c6IDBweCA4cHggMTZweCAwcHggcmdiYSgwLDAsMCwwLjIpO1xyXG4gICAgei1pbmRleDogNTAwO1xyXG4gICAgdG9wOiAxOXB4O1xyXG4gIH1cclxuICBcclxuICAvKiBMaW5rcyBpbnNpZGUgdGhlIGRyb3Bkb3duICovXHJcbiAgLmRyb3Bkb3duLWNvbnRlbnQgZGl2IHtcclxuICAgIGNvbG9yOiBibGFjaztcclxuICAgIHBhZGRpbmc6IDZweCA4cHg7XHJcbiAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XHJcbiAgfVxyXG4gIFxyXG4gIC8qIENoYW5nZSBjb2xvciBvZiBkcm9wZG93biBsaW5rcyBvbiBob3ZlciAqL1xyXG4gIC5kcm9wZG93bi1jb250ZW50IGRpdjpob3ZlciB7YmFja2dyb3VuZC1jb2xvcjogI2ZlZmVmZX1cclxuICBcclxuICAvKiBTaG93IHRoZSBkcm9wZG93biBtZW51IG9uIGhvdmVyICovXHJcbiAgLmRyb3Bkb3duOmhvdmVyIC5kcm9wZG93bi1jb250ZW50IHtcclxuICAgIC8vIGRpc3BsYXk6IGJsb2NrO1xyXG4gIH1cclxuICBcclxuICAvKiBDaGFuZ2UgdGhlIGJhY2tncm91bmQgY29sb3Igb2YgdGhlIGRyb3Bkb3duIGJ1dHRvbiB3aGVuIHRoZSBkcm9wZG93biBjb250ZW50IGlzIHNob3duICovXHJcbiAgLmRyb3Bkb3duOmhvdmVyIC5kcm9wYnRuIHtcclxuICAgIGNvbG9yOiAjMDAwMDZkXHJcbn1cclxuXHJcbi5uYXYtdGFic3tcclxuICAgIGxpLmFjdGl2ZXtcclxuICAgICAgICAuZHJvcGJ0bntcclxuICAgICAgICAgICAgY29sb3I6ICMwMDAwNmQ7XHJcbiAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6IHdoaXRlc21va2U7XHJcbiAgICAgICAgICAgIGJvcmRlcjogMXB4IHNvbGlkICNCM0IzQjM7XHJcbiAgICAgICAgICAgIGJvcmRlci1ib3R0b206IDJweCBzb2xpZCB3aGl0ZXNtb2tlO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIGxpLm9wZW57XHJcbiAgICAgICAgLmRyb3BidG46OmFmdGVye1xyXG4gICAgICAgICAgICBjb250ZW50OiAnJztcclxuICAgICAgICAgICAgYm9yZGVyLXRvcDogbm9uZTtcclxuICAgICAgICAgICAgYm9yZGVyLWJvdHRvbTogNHB4IHNvbGlkICM1MDUwNTA7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59XHJcblxyXG4jdG9wb2xvZ3lfZHJvcGRvd24sICNvYmplY3RfZHJvcGRvd24ge1xyXG4gICAgZGlzcGxheTogbm9uZTtcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIHdpZHRoOiBmaXQtY29udGVudDtcclxuICAgIHRyYW5zaXRpb246IGRpc3BsYXkgMC40cztcclxuXHJcbiAgICB6LWluZGV4OiA5OTk5OTk5OTtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICRjb2xvcjY7XHJcbiAgICBib3JkZXI6IDFweCBzb2xpZCAkY29sb3IxO1xyXG4gICAgYm94LXNoYWRvdzogbm9uZTtcclxuXHJcbiAgICBkaXZ7XHJcbiAgICAgICAgY3Vyc29yOiBwb2ludGVyO1xyXG4gICAgICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgICAgIG1pbi13aWR0aDogMTAwcHg7XHJcbiAgICAgICAgbWF4LXdpZHRoOiAzMDBweDtcclxuICAgICAgICBvdmVyZmxvdzogaGlkZGVuO1xyXG4gICAgICAgIGxpbmUtaGVpZ2h0OiAyMHB4O1xyXG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICRjb2xvcjY7XHJcbiAgICAgICAgYm9yZGVyOiAwcHg7XHJcbiAgICAgICAgbWFyZ2luOiAwcHg7XHJcbiAgICAgICAgcGFkZGluZzogMHB4IDEwcHggMHB4IDEwcHg7XHJcbiAgICAgICAgbGluZS1oZWlnaHQ6ICRmc2l6ZTM7XHJcbiAgICAgICAgaGVpZ2h0OiAkZnNpemUzO1xyXG4gICAgICAgIGZvbnQtc2l6ZTogJGZzaXplMjtcclxuICAgICAgICBjb2xvcjogJGNvbG9yODtcclxuICAgICAgICAmOmhvdmVye1xyXG4gICAgICAgICAgICBjb2xvcjogJHNlbGVjdGVkLWNvbG9yO1xyXG4gICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkY29sb3I1O1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbn0iLCJcclxuJGNvbG9yMTogIzgwODA4MDtcclxuJGNvbG9yMjogIzk5OTk5OTtcclxuJGNvbG9yMzogI0IzQjNCMzsgXHJcbiRjb2xvcjQ6ICNDQ0NDQ0M7XHJcbiRjb2xvcjU6ICNFNkU2RTY7XHJcbiRjb2xvcjUtNTogcmdiKDI0NSwgMjQ1LCAyNDUpO1xyXG4kY29sb3I2OiByZ2IoMjUwLCAyNTAsIDI1MSk7XHJcblxyXG4kY29sb3I3OiB3aGl0ZTtcclxuJGNvbG9yODogIzM3MzczNztcclxuXHJcbiRzZWxlY3RlZC1jb2xvcjogcmdiKDAsIDAsIDEwOSk7XHJcbiRob3Zlci1jb2xvcjogJGNvbG9yMjtcclxuXHJcbiRlcnJvci1jb2xvcjogI0U5NDg1ODsgLy9waW5rLXJlZFxyXG4kZXJyb3ItY29sb3ItbHQ6IHJnYigyNTUsIDIyMCwgMjI0KTtcclxuJHBjb2xvcjI6ICNGM0EzMkE7IC8vb3JhbmdlLXllbGxvd1xyXG4kcHJpbnQtY29sb3I6IHJnYigxMzAsIDE5MSwgMTEwKTsgLy9saWdodGdyZWVuXHJcbiRwcmludC1jb2xvci1sdDogcmdiKDIzMCwgMjU1LCAyMjEpO1xyXG4kc2VsZWN0R2VvbS1jb2xvcjogcmdiKDI1NSwgMTc0LCAwKTsgLy8gbGlnaHQgb3JhbmdlXHJcbiRzZWxlY3RHZW9tLWNvbG9yLWx0OiByZ2IoMjU1LCAyMjUsIDE2MCk7XHJcblxyXG4vLyAkcHJvZC1iYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMjUwLDI1MCwyNTApO1xyXG4vLyAkYmFja2dyb3VuZC1jb2xvcjogcmdiKDIyMCwyMjAsMjIwKTtcclxuJGZ1bmN0aW9uLXRleHQtY29sb3I6IHJnYigxOTAsIDE0MCwgMzApO1xyXG4kZnVuY3Rpb24tdGV4dC1jb2xvcjI6IHJnYigxOCwgMTI2LCAxMzYpO1xyXG4kYmFzaWMtZnVuY3Rpb24tdGV4dC1jb2xvcjogcmdiKDIwMCwgNzAsIDE1MCk7XHJcbiRjb21tZW50LWNvbG9yOiBkYXJrZ3JlZW47XHJcbiIsIiRwYWRkaW5nOiA0MHB4OyAvLyA/IG5vdCB1c2VkXHJcbiRzbWFsbC1wYWRkaW5nOiAxNXB4O1xyXG4kaGVhZGVyLWhlaWdodDogNDBweDtcclxuXHJcbiRmc2l6ZTE6IDE1cHg7XHJcbiRmc2l6ZTI6IDEycHg7XHJcbiRmc2l6ZTM6IDMwcHg7XHJcblxyXG4kcG9ydC1zaXplOiAxNXB4O1xyXG4kZGVmYXVsdC1zaWRlLXBhZGRpbmc6IDE1cHg7XHJcblxyXG4kZGlzYWJsZWQtb3BhY2l0eTogMC40OyJdfQ== */"

/***/ }),

/***/ "./src/app/model-viewers/all-viewers/gi-viewer/html/tabs.component.ts":
/*!****************************************************************************!*\
  !*** ./src/app/model-viewers/all-viewers/gi-viewer/html/tabs.component.ts ***!
  \****************************************************************************/
/*! exports provided: TabsComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TabsComponent", function() { return TabsComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _tab_component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./tab.component */ "./src/app/model-viewers/all-viewers/gi-viewer/html/tab.component.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};


var TabsComponent = /** @class */ (function () {
    function TabsComponent() {
    }
    TabsComponent.prototype.ngAfterContentInit = function () {
        var _this = this;
        setTimeout(function () {
            var activeTabs = _this.tabs.filter(function (tab) { return tab.active; });
            // if there is no active tab set, activate the first
            if (activeTabs.length === 0) {
                _this.selectTab(_this.tabs.first);
            }
        }, 0);
    };
    TabsComponent.prototype.selectTab = function (tab) {
        // deactivate all tabs
        this.tabs.toArray().forEach(function (_tab) { return _tab.active = false; });
        tab.active = true;
    };
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ContentChildren"])(_tab_component__WEBPACK_IMPORTED_MODULE_1__["TabComponent"]),
        __metadata("design:type", _angular_core__WEBPACK_IMPORTED_MODULE_0__["QueryList"])
    ], TabsComponent.prototype, "tabs", void 0);
    TabsComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'tabs',
            template: __webpack_require__(/*! ./tabs.component.html */ "./src/app/model-viewers/all-viewers/gi-viewer/html/tabs.component.html"),
            styles: [__webpack_require__(/*! ./tabs.component.scss */ "./src/app/model-viewers/all-viewers/gi-viewer/html/tabs.component.scss")]
        })
    ], TabsComponent);
    return TabsComponent;
}());



/***/ }),

/***/ "./src/app/model-viewers/all-viewers/gi-viewer/threejs/threejs-viewer.component.html":
/*!*******************************************************************************************!*\
  !*** ./src/app/model-viewers/all-viewers/gi-viewer/threejs/threejs-viewer.component.html ***!
  \*******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div\r\n    id=\"threejs-container\"\r\n    (window:keydown)=\"onKeyDown($event)\"\r\n    (window:keyup)=\"onKeyUp($event)\"\r\n    (window:mousedown)=\"onMouseDown($event)\"\r\n    (window:mousemove)=\"onMouseMove($event)\"\r\n    (window:mouseup)=\"onMouseUp($event)\"\r\n>\r\n    <div\r\n        *ngIf=\"_model_error\"\r\n        style=\"position:absolute;color:red;margin-top: 50px;left:40%;text-align: center;font-family:sans-serif;font-size: 14px;background-color: white;\"\r\n    >\r\n        Error displaying model:{{text}}\r\n    </div>\r\n    <div\r\n        *ngIf=\"_no_model\"\r\n        style=\"position:absolute;color:red;margin-top: 50px;left:40%;text-align: center;font-family:sans-serif;font-size: 14px;background-color: white;\"\r\n    >\r\n        Model or Scene not defined.\r\n    </div>\r\n    <div class = \"messages\"\r\n        *ngIf=\"messageVisible\"\r\n    >\r\n        {{message}}\r\n    </div>\r\n\r\n\r\n    <!-- <button id=\"zoomingfit\"  \r\n        [class.visible]=\"Visible === 'zoomfit'\" \r\n        (click)=\"zoomfit()\">\r\n        <span matTooltip=\"zoom to fit\"><i class=\"fa fa-arrows-alt\"></i></span>\r\n    </button> -->\r\n\r\n    <button\r\n        id=\"zoomingfit\"\r\n        mat-icon-button\r\n        (click)=\"zoomfit()\"\r\n    >\r\n        <mat-icon svgIcon=\"cZoom\"></mat-icon>\r\n    </button>\r\n\r\n\r\n    <!-- <button id=\"selecting\" [class.visible]=\"Visible === 'select'\" (click)= \"select($event, Visible)\" ><i class=\"fa fa-mouse-pointer\"></i></button> -->\r\n    <!-- <button id=\"setting\" [class.selected]=\"settingVisible\" (click)= \"setting(settingVisible)\"><i class=\"fa fa-cog\"></i></button> -->\r\n    <!-- <button id=\"selecting\" [class.selected]=\"seVisible\" (click)= \"select(seVisible)\" ><span matTooltip=\"select\"><i class=\"fa fa-mouse-pointer\"></i></span></button> -->\r\n    <button\r\n        id=\"EntitySelection\"\r\n        mat-icon-button\r\n        (click)=\"selectDropdownVisible = !selectDropdownVisible; needSelect=false\"\r\n    >\r\n        <mat-icon svgIcon=\"select\"></mat-icon>\r\n        <div\r\n            [hidden]=\"needSelect?(!needSelect&&selectDropdownVisible):!needSelect\"\r\n            class=\"needSelect\"\r\n        ></div>\r\n    </button>\r\n    <span\r\n        *ngIf=\"!selectDropdownVisible\"\r\n        id=\"SelectingEntityType\"\r\n        matTooltip=\"Selecting {{SelectingEntityType.name}}\"\r\n        (click)=\"selectDropdownVisible = !selectDropdownVisible; needSelect=false\"\r\n    >\r\n        {{SelectingEntityType.id}}\r\n    </span>\r\n    <div\r\n        id=\"selectDropdown\"\r\n        *ngIf=\"selectDropdownVisible == true\"\r\n    >\r\n        <button\r\n            *ngFor=\"let selection of selections\"\r\n            (click)=\"selectEntityType(selection); needSelect=false\"\r\n            [class.active]=\"SelectingEntityType.id === selection.id\"\r\n        >\r\n            <span matTooltip=\"Select {{selection.name}}\">{{selection.id}}</span>\r\n        </button>\r\n    </div>\r\n\r\n    <!-- <div id=\"giSummary\" [hidden]='!this._data_threejs.settings.gi_summary.show'>\r\n        <tbody>\r\n            <tr *ngFor=\"let item of giSummary\">\r\n                <td style=\"width: 80px;\">{{item.title}}</td><td>{{item.val}}</td>\r\n            </tr>\r\n        </tbody>\r\n    </div>\r\n    <div id=\"tjsSummary\" [hidden]='!this._data_threejs.settings.tjs_summary.show'>\r\n        <tbody>\r\n            <tr>\r\n                <td\r\n                    align=left\r\n                    style=\"width: 80px;\"\r\n                >\r\n                    3js Triangles:\r\n                </td>\r\n                <td\r\n                    align=left\r\n                    style=\"width: 20px;\"\r\n                >\r\n                    {{_threejs_nums[2]}}\r\n                </td>\r\n            </tr>\r\n            <tr>\r\n                <td\r\n                    align=left\r\n                    style=\"width: 80px;\"\r\n                >\r\n                    3js Edges:\r\n                </td>\r\n                <td\r\n                    align=left\r\n                    style=\"width: 20px;\"\r\n                >\r\n                    {{_threejs_nums[1]}}\r\n                </td>\r\n            </tr>\r\n            <tr>\r\n                <td\r\n                    align=left\r\n                    style=\"width: 80px;\"\r\n                >\r\n                    3js Points:\r\n                </td>\r\n                <td\r\n                    align=left\r\n                    style=\"width: 20px;\"\r\n                >\r\n                    {{_threejs_nums[0]}}\r\n                </td>\r\n            </tr>\r\n        </tbody>\r\n    </div> -->\r\n\r\n\r\n    <dropdown-menu (selected)='selectEntity($event)'></dropdown-menu>\r\n    <div id=\"mouse_label\"></div>\r\n    <!-- <button id=\"imagery\"  \r\n        [class.selected]=\"imVisible\" (click)=\"leaflet()\">I\r\n        </button> -->\r\n    <!-- setting -->\r\n\r\n\r\n    <!-- <app-setting *ngIf=\"settingVisible == true\"></app-setting> -->\r\n</div>\r\n"

/***/ }),

/***/ "./src/app/model-viewers/all-viewers/gi-viewer/threejs/threejs-viewer.component.scss":
/*!*******************************************************************************************!*\
  !*** ./src/app/model-viewers/all-viewers/gi-viewer/threejs/threejs-viewer.component.scss ***!
  \*******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "button {\n  cursor: pointer; }\n  button:focus {\n    outline: none; }\n  :host {\n  width: 100%;\n  height: 100%;\n  background-color: green;\n  overflow: hidden; }\n  #threejs-container {\n  position: relative;\n  height: 100%;\n  width: 100%;\n  margin: 0px;\n  overflow: hidden;\n  font-family: sans-serif; }\n  #container-top-right-resize {\n  top: 0px;\n  right: 0px; }\n  #giSummary, #tjsSummary {\n  position: absolute;\n  bottom: 5px;\n  left: 5px;\n  background: rgba(255, 255, 255, 0.3);\n  padding: 10px;\n  color: #2a8ac5; }\n  #giSummary td, #tjsSummary td {\n    height: 17px; }\n  /*#rotating{\r\n    width: 30px;\r\n    height: 25px;\r\n    font-size:15px;\r\n    right:0px; \r\n    text-align:center;\r\n    position: absolute;\r\n    top: 0px;\r\n    background-color:transparent;\r\n    border:0;\r\n}\r\n\r\n#paning{\r\n    width: 30px;\r\n    height: 25px;\r\n    font-size:15px;\r\n    right:0px; \r\n    text-align:center;\r\n    position: absolute;\r\n    top: 25px;\r\n    background-color:transparent;\r\n    border:0;\r\n}\r\n\r\n#zooming{\r\n    width: 30px;\r\n    height: 25px;\r\n    font-size:15px;\r\n    right:0px; \r\n    text-align:center;\r\n    position: absolute;\r\n    margin-top: 50px;\r\n    background-color:transparent;\r\n    border:0;\r\n}*/\n  /*#imagery{\r\n    width: 30px;\r\n    height: 25px;\r\n    font-size:14px;\r\n    right:0px; \r\n    text-align:center;\r\n    position: absolute;\r\n    margin-top: 10px;\r\n    background-color:transparent;\r\n    border:0;\r\n}*/\n  .messages {\n  position: absolute;\n  color: orange;\n  margin-top: 50px;\n  left: 40%;\n  padding: 10px;\n  text-align: center;\n  font-family: sans-serif;\n  font-size: 14px;\n  background-color: white;\n  box-shadow: 2px 2px 5px 0px #505050; }\n  #zoomingfit {\n  width: 40px;\n  height: 30px;\n  font-size: 15px;\n  position: absolute;\n  top: 30px;\n  right: 0px;\n  text-align: center;\n  color: #808080;\n  background-color: transparent;\n  border: 0; }\n  #zoomingfit:hover {\n    color: #00006d; }\n  #EntitySelection {\n  width: 40px;\n  height: 30px;\n  font-size: 15px;\n  position: absolute;\n  top: 60px;\n  right: 0px;\n  text-align: center;\n  color: #808080;\n  background-color: transparent;\n  border: 0; }\n  #EntitySelection:hover {\n    color: #00006d; }\n  .needSelect {\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 40px;\n  height: 40px;\n  border-radius: 50%;\n  background-color: white;\n  opacity: 0;\n  -webkit-animation: scaleIn 2s infinite cubic-bezier(0.36, 0.11, 0.89, 0.32);\n          animation: scaleIn 2s infinite cubic-bezier(0.36, 0.11, 0.89, 0.32); }\n  @-webkit-keyframes scaleIn {\n  from {\n    -webkit-transform: scale(0.8, 0.8);\n            transform: scale(0.8, 0.8);\n    opacity: .5; }\n  to {\n    -webkit-transform: scale(1.2, 1.2);\n            transform: scale(1.2, 1.2);\n    opacity: 0; } }\n  @keyframes scaleIn {\n  from {\n    -webkit-transform: scale(0.8, 0.8);\n            transform: scale(0.8, 0.8);\n    opacity: .5; }\n  to {\n    -webkit-transform: scale(1.2, 1.2);\n            transform: scale(1.2, 1.2);\n    opacity: 0; } }\n  #SelectingEntityType {\n  width: 40px;\n  font-size: 15px;\n  position: absolute;\n  text-align: center;\n  color: #505050;\n  top: 90px;\n  right: 0px;\n  cursor: pointer; }\n  #selectDropdown {\n  position: absolute;\n  top: 85px;\n  right: 5px; }\n  #selectDropdown button {\n    width: 30px;\n    height: 25px;\n    font: 15px bolder;\n    display: block;\n    background-color: transparent;\n    border: 1px solid transparent;\n    font-family: sans-serif;\n    color: #505050;\n    cursor: pointer; }\n  #selectDropdown button.active {\n      background-color: #f3f3f3; }\n  #selectDropdown button:hover {\n      background-color: #f9f9f9;\n      border-color: #bbbbbb; }\n  #setting {\n  width: 30px;\n  height: 25px;\n  font-size: 15px;\n  right: 0px;\n  text-align: center;\n  position: absolute;\n  top: 10px;\n  background-color: transparent;\n  border: 0; }\n  .visible {\n  color: grey; }\n  .selectvisible {\n  background-color: white !important;\n  color: #395d73; }\n  #mouse_label {\n  display: none;\n  position: fixed;\n  overflow: hidden;\n  font-style: italic;\n  background: rgba(255, 255, 255, 0.5);\n  padding: 5px; }\n\r\n/*# sourceMappingURL=data:application/json;base64, */"

/***/ }),

/***/ "./src/app/model-viewers/all-viewers/gi-viewer/threejs/threejs-viewer.component.ts":
/*!*****************************************************************************************!*\
  !*** ./src/app/model-viewers/all-viewers/gi-viewer/threejs/threejs-viewer.component.ts ***!
  \*****************************************************************************************/
/*! exports provided: ThreejsViewerComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ThreejsViewerComponent", function() { return ThreejsViewerComponent; });
/* harmony import */ var _libs_geo_info_GIModel__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @libs/geo-info/GIModel */ "./src/assets/libs/geo-info/GIModel.ts");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _data_data_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../data/data.service */ "./src/app/model-viewers/all-viewers/gi-viewer/data/data.service.ts");
/* harmony import */ var _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @libs/geo-info/common */ "./src/assets/libs/geo-info/common.ts");
/* harmony import */ var _html_dropdown_menu_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../html/dropdown-menu.component */ "./src/app/model-viewers/all-viewers/gi-viewer/html/dropdown-menu.component.ts");
/* harmony import */ var _html_modal_window_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../html/modal-window.service */ "./src/app/model-viewers/all-viewers/gi-viewer/html/modal-window.service.ts");
/* harmony import */ var _threejs_viewer_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./threejs-viewer.service */ "./src/app/model-viewers/all-viewers/gi-viewer/threejs/threejs-viewer.service.ts");
/* harmony import */ var _libs_util_maps__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @libs/util/maps */ "./src/assets/libs/util/maps.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (undefined && undefined.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};

// import @angular stuff

// import { IModel } from 'gs-json';






/**
 * A threejs viewer for viewing geo-info (GI) models.
 * This component gets used in /app/model-viewers/all-viewers/gi-viewer/gi-viewer.component.html
 */
var ThreejsViewerComponent = /** @class */ (function () {
    /**
     * Creates a new viewer,
     * @param injector
     * @param elem
     */
    function ThreejsViewerComponent(injector, elem, threeJSViewerService) {
        this.threeJSViewerService = threeJSViewerService;
        this.eventClicked = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"]();
        this.resetTableEvent = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"]();
        this.dropdown = new _html_dropdown_menu_component__WEBPACK_IMPORTED_MODULE_4__["DropdownMenuComponent"]();
        this.container = null;
        // flags for displayinhg text in viewer, see html
        this._no_model = false;
        this._model_error = false;
        this.messageVisible = false;
        // right selection dropdown
        // public needSelect = false;
        // current entity type enabled for selection
        this.SelectingEntityType = { id: _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntTypeStr"][_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntType"].FACE], name: 'Faces' };
        this.selectDropdownVisible = false;
        this.selections = [
            { id: _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntTypeStr"][_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntType"].POSI], name: 'Positions' }, { id: _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntTypeStr"][_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntType"].VERT], name: 'Vetex' },
            { id: _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntTypeStr"][_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntType"].EDGE], name: 'Edges' }, { id: _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntTypeStr"][_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntType"].WIRE], name: 'Wires' },
            { id: _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntTypeStr"][_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntType"].FACE], name: 'Faces' }, { id: _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntTypeStr"][_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntType"].POINT], name: 'Points' },
            { id: _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntTypeStr"][_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntType"].PLINE], name: 'Polylines' }, { id: _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntTypeStr"][_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntType"].PGON], name: 'Polygons' },
            { id: _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntTypeStr"][_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntType"].COLL], name: 'Collections' }
        ];
        this.dropdownPosition = { x: 0, y: 0 };
        this.isDown = false;
        this.shiftKeyPressed = false;
        this.giSummary = [];
        this._elem = elem;
        this.dataService = injector.get(_data_data_service__WEBPACK_IMPORTED_MODULE_2__["DataService"]);
        this.modalWindow = injector.get(_html_modal_window_service__WEBPACK_IMPORTED_MODULE_5__["ModalService"]);
    }
    /**
     * Called when the viewer is initialised.
     */
    ThreejsViewerComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.mouse_label = document.getElementById('mouse_label');
        this.dropdown.items = [];
        this.dropdown.visible = false;
        this.dropdown.position = { x: 0, y: 0 };
        this.container = this._elem.nativeElement.children.namedItem('threejs-container');
        // check for container
        if (!this.container) {
            console.error('No container in Three Viewer');
            return;
        }
        // size of window
        this._width = this.container.offsetWidth; // container.client_width;
        this._height = this.container.offsetHeight; // container.client_height;
        this._data_threejs = this.dataService.getThreejsScene();
        this.threeJSViewerService.DataThreejs = this._data_threejs;
        this.container.appendChild(this._data_threejs._renderer.domElement);
        // set the numbers of entities
        this._threejs_nums = this._data_threejs._threejs_nums;
        // ??? What is happening here?
        var self = this;
        this._data_threejs._controls.addEventListener('change', function () { self.render(self); });
        self._data_threejs._renderer.render(self._data_threejs._scene, self._data_threejs._camera);
        if (this._data_threejs.ObjLabelMap.size !== 0) {
            this._data_threejs.ObjLabelMap.forEach(function (obj, label) {
                _this._data_threejs.createLabelforObj(_this.container, obj.entity, obj.type, obj.text, label);
            });
        }
        if (localStorage.getItem('mpm_selecting_entity_type') === null) {
            localStorage.setItem('mpm_selecting_entity_type', JSON.stringify(this.SelectingEntityType));
        }
        else {
            this.getSelectingEntityType();
        }
    };
    /**
     * @param self
     */
    ThreejsViewerComponent.prototype.render = function (self) {
        var textLabels = this._data_threejs._textLabels;
        if (textLabels.size !== 0) {
            textLabels.forEach(function (label) {
                label.updatePosition();
            });
        }
        self._data_threejs._renderer.render(self._data_threejs._scene, self._data_threejs._camera);
    };
    /**
     * Called when anything changes
     */
    ThreejsViewerComponent.prototype.ngDoCheck = function () {
        var _this = this;
        if (!this.container) {
            console.error('No container in Three Viewer');
            return;
        }
        var width = this.container.offsetWidth;
        var height = this.container.offsetHeight;
        // this is when dimensions change
        if (width !== this._width || height !== this._height) {
            this._width = width;
            this._height = height;
            setTimeout(function () {
                _this._data_threejs._camera.aspect = _this._width / _this._height;
                _this._data_threejs._camera.updateProjectionMatrix();
                _this._data_threejs._renderer.setSize(_this._width, _this._height);
                _this.render(_this);
            }, 10);
        }
    };
    // receive data -> model from gi-viewer component and update model in the scene
    ThreejsViewerComponent.prototype.ngOnChanges = function (changes) {
        if (changes['model']) {
            if (this.model) {
                this.updateModel(this.model);
            }
        }
        if (changes['attr_table_select']) {
            if (this.attr_table_select) {
                this.attrTableSelect(this.attr_table_select);
            }
        }
    };
    ThreejsViewerComponent.prototype.attrTableSelect = function (attrib) {
        var _this = this;
        sessionStorage.setItem('mpm_changetab', JSON.stringify(false));
        if (attrib.action === 'select') {
            switch (attrib.ent_type) {
                case _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntTypeStr"][_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntType"].POSI]:
                    this.selectPositions(attrib.id, null, null, attrib.ent_type + attrib.id);
                    break;
                case _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntTypeStr"][_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntType"].VERT]:
                    this.selectVertex(attrib.id, null, null, attrib.ent_type + attrib.id);
                    break;
                case _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntTypeStr"][_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntType"].EDGE]:
                    this.selectEdge(attrib.id);
                    break;
                case _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntTypeStr"][_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntType"].WIRE]:
                    this.selectWire(attrib.id);
                    break;
                case _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntTypeStr"][_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntType"].FACE]:
                    this.selectFace(attrib.id);
                    break;
                case _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntTypeStr"][_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntType"].PGON]:
                    this.selectPGon(attrib.id);
                    break;
                case _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntTypeStr"][_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntType"].PLINE]:
                    this.selectPLine(attrib.id);
                    break;
                case _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntTypeStr"][_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntType"].POINT]:
                    this.selectPoint(attrib.id);
                    break;
                case _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntTypeStr"][_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntType"].COLL]:
                    this.chooseColl(attrib.id);
                    break;
                default:
                    break;
            }
        }
        else if (attrib.action === 'unselect') {
            if (attrib.ent_type === _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntTypeStr"][_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntType"].COLL]) {
                var coll_children = this.dataService.selected_coll.get(attrib.ent_type + attrib.id);
                if (coll_children && coll_children.length) {
                    coll_children.forEach(function (child) {
                        _this.unselectGeom(child, attrib.ent_type, true);
                    });
                    this.dataService.selected_ents.get(_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntTypeStr"][_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntType"].COLL]).delete(attrib.ent_type + attrib.id);
                }
            }
            else {
                this.unselectGeom(attrib.ent_type + attrib.id, attrib.ent_type, true);
            }
        }
        this.render(this);
    };
    /**
     * Update the model in the viewer.
     */
    ThreejsViewerComponent.prototype.updateModel = function (model) {
        return __awaiter(this, void 0, void 0, function () {
            var selected, selectingType_1;
            var _this = this;
            return __generator(this, function (_a) {
                this._data_threejs = this.dataService.getThreejsScene();
                if (!model) {
                    console.warn('Model or Scene not defined.');
                    this._no_model = true;
                    return [2 /*return*/];
                }
                else {
                    if (model !== this._data_threejs._model) {
                        this._data_threejs._model = model;
                        try {
                            // to be completed and test
                            // this._data_threejs.disposeWebGL();
                            // add geometry to the scene
                            this._data_threejs.addGeometry(model, this.container);
                            // this.resetTable();
                            if (localStorage.getItem('gi_summary')) {
                                this.giSummary = JSON.parse(localStorage.getItem('gi_summary'));
                            }
                            this._model_error = false;
                            this._no_model = false;
                            selected = this.model.geom.selected;
                            if (selected.length) {
                                selected.forEach(function (s) {
                                    var type = _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntTypeStr"][s[0]], id = Number(s[1]);
                                    _this.attrTableSelect({ action: 'select', ent_type: type, id: id });
                                    _this.dataService.selected_ents.get(type).set("" + type + id, id);
                                    selectingType_1 = s[0];
                                });
                                this.SelectingEntityType = this.selections.find(function (selection) { return selection.id === _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntTypeStr"][selectingType_1]; });
                                sessionStorage.setItem('mpm_showSelected', JSON.stringify(true));
                                sessionStorage.setItem('mpm_changetab', JSON.stringify(true));
                                localStorage.setItem('mpm_attrib_current_tab', selectingType_1.toString());
                                console.log(selectingType_1.toString());
                                this.refreshTable(event);
                            }
                            else {
                                this.dataService.clearAll();
                                sessionStorage.setItem('mpm_showSelected', JSON.stringify(false));
                                sessionStorage.setItem('mpm_changetab', JSON.stringify(false));
                                this.refreshTable(event);
                            }
                            this.render(this);
                        }
                        catch (ex) {
                            console.error('Error displaying model:', ex);
                            this._model_error = true;
                            this._data_threejs._text = ex;
                        }
                    }
                }
                return [2 /*return*/];
            });
        });
    };
    // private initRaycaster(event) {
    //     const scene = this._data_threejs;
    //     scene._mouse.x = (event.offsetX / scene._renderer.domElement.clientWidth) * 2 - 1;
    //     scene._mouse.y = - (event.offsetY / scene._renderer.domElement.clientHeight) * 2 + 1;
    //     scene._raycaster.setFromCamera(scene._mouse, scene._camera);
    //     return scene._raycaster.intersectObjects(scene.sceneObjs);
    // }
    ThreejsViewerComponent.prototype.onMouseUp = function (event) {
        if (event.target.tagName !== 'CANVAS') {
            return null;
        }
        else {
            if (this.dragHash < 10) {
                this.onUserAction(event);
            }
            else {
                // this._data_threejs._controls.enabled = true;
            }
            this.isDown = false;
        }
    };
    ThreejsViewerComponent.prototype.onMouseMove = function (event) {
        var body = document.getElementsByTagName('body');
        if (event.target.tagName !== 'CANVAS') {
            body[0].style.cursor = 'default';
            // if (this.mouse_label !== null) {
            //     this.mouse_label.style.display = 'none';
            // }
            return null;
        }
        else {
            var intersects = this.threeJSViewerService.initRaycaster(event);
            if (intersects && intersects.length > 0) {
                body[0].style.cursor = 'pointer';
                // if (this.mouse_label !== null) {
                //     const x = event.clientX, y = event.clientY;
                //     this.mouse_label.style.top = y + 'px';
                //     this.mouse_label.style.left = (x + 15) + 'px';
                //     this.mouse_label.style.display = 'block';
                //     this.mouse_label.innerHTML = mouseLabel[intersects[0].object.type];
                // }
            }
            else {
                body[0].style.cursor = 'default';
                // if (this.mouse_label !== null) {
                //     this.mouse_label.style.display = 'none';
                // }
            }
            if (!this.isDown) {
                return;
            }
            // Put your mousemove stuff here
            var mouseX = event.clientX - event.target.getBoundingClientRect().left;
            var mouseY = event.clientY - event.target.getBoundingClientRect().top;
            var dx = mouseX - this.lastX;
            var dy = mouseY - this.lastY;
            this.lastX = mouseX;
            this.lastY = mouseY;
            // accumulate the drag distance
            // (used in mouseup to see if this is a drag or click)
            this.dragHash += Math.abs(dx) + Math.abs(dy);
            if (this.dragHash > 4) {
                // dragging
            }
        }
    };
    ThreejsViewerComponent.prototype.onMouseDown = function (event) {
        if (event.target.tagName !== 'CANVAS') {
            return null;
        }
        else {
            event.stopPropagation();
            this.lastX = event.clientX - event.target.getBoundingClientRect().left;
            this.lastY = event.clientY - event.target.getBoundingClientRect().top;
            // Put your mousedown stuff here
            this.dragHash = 0;
            this.isDown = true;
        }
    };
    ThreejsViewerComponent.prototype.onKeyDown = function (event) {
        var scene = this._data_threejs;
        // keyboard control for camera
        scene.onWindowKeyPress(event);
        if (event.shiftKey) {
            this.shiftKeyPressed = true;
        }
        this.render(this);
    };
    ThreejsViewerComponent.prototype.onKeyUp = function (event) {
        this.shiftKeyPressed = false;
    };
    ThreejsViewerComponent.prototype.onUserAction = function (event) {
        // get entities for mouse event
        var intersects = this.threeJSViewerService.initRaycaster(event);
        // check intersect exist
        if (intersects.length > 0) {
            if (event.which === 1) {
                // check mouse event triggered in THREE viewer, then enable dropdown menu
                if (event.target.tagName === 'CANVAS') {
                    var pos_x = event.clientX - event.target.getBoundingClientRect().left;
                    var pos_y = event.clientY - event.target.getBoundingClientRect().top;
                    this.dropdownPosition = { x: pos_x, y: pos_y };
                }
                this.selectObj(intersects[0]);
            }
        }
        else {
            if (event.target.tagName === 'CANVAS') {
                this.unselectAll();
                if (event.target.tagName !== 'OL') {
                    // not clicking on Menu item, hide dropdown menu
                    this.dropdown.visible = false;
                    // return;
                }
            }
        }
        this.refreshTable(event);
    };
    ThreejsViewerComponent.prototype.refreshTable = function (event) {
        this.eventClicked.emit(event);
    };
    ThreejsViewerComponent.prototype.resetTable = function () {
        this.resetTableEvent.emit();
    };
    ThreejsViewerComponent.prototype.unselectAll = function () {
        var _this = this;
        var scene = this._data_threejs;
        var selectings = Array.from(scene.selected_geoms.keys());
        for (var _i = 0, selectings_1 = selectings; _i < selectings_1.length; _i++) {
            var selecting = selectings_1[_i];
            scene.unselectObj(selecting, this.container);
        }
        document.querySelectorAll('[id^=textLabel_]').forEach(function (value) {
            _this.container.removeChild(value);
        });
        this._data_threejs._textLabels.clear();
        this.dataService.selected_ents.forEach(function (map) {
            map.clear();
        });
        this.refreshTable(event);
        scene.sceneObjsSelected.clear();
        // if (this.SelectingEntityType.id === EEntTypeStr[EEntType.COLL]) {
        //     document.getElementById('executeButton').click();
        // }
        var positions = Array.from(scene.selected_positions.keys());
        for (var _a = 0, positions_1 = positions; _a < positions_1.length; _a++) {
            var posi = positions_1[_a];
            scene.unselectObjGroup(posi, this.container, 'positions');
        }
        var vertex = Array.from(scene.selected_vertex.keys());
        for (var _b = 0, vertex_1 = vertex; _b < vertex_1.length; _b++) {
            var vert = vertex_1[_b];
            scene.unselectObjGroup(vert, this.container, 'vertex');
        }
        var edges = Array.from(scene.selected_face_edges.keys());
        for (var _c = 0, edges_1 = edges; _c < edges_1.length; _c++) {
            var edge = edges_1[_c];
            scene.unselectObjGroup(edge, this.container, 'face_edges');
        }
        var wires = Array.from(scene.selected_face_wires.keys());
        for (var _d = 0, wires_1 = wires; _d < wires_1.length; _d++) {
            var wire = wires_1[_d];
            scene.unselectObjGroup(wire, this.container, 'face_wires');
        }
        this.render(this);
    };
    ThreejsViewerComponent.prototype.getSelectingEntityType = function () {
        if (localStorage.getItem('mpm_selecting_entity_type') != null) {
            this.SelectingEntityType = JSON.parse(localStorage.getItem('mpm_selecting_entity_type'));
        }
    };
    ThreejsViewerComponent.prototype.selectObj = function (intersect0) {
        var scene = this._data_threejs;
        this.getSelectingEntityType();
        switch (this.SelectingEntityType.id) {
            case _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntTypeStr"][_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntType"].POSI]:
                if (intersect0.object.type === 'Points') {
                    var posi = scene.posis_map.get(intersect0.index);
                    var ent_id = "" + _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntTypeStr"][_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntType"].POSI] + posi;
                    if (scene.selected_geoms.has(ent_id)) {
                        this.unselectGeom(ent_id, _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntTypeStr"][_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntType"].POSI], true);
                    }
                    else {
                        if (!this.shiftKeyPressed) {
                            this.unselectAll();
                        }
                        this.selectPositions(posi, null, null, ent_id);
                    }
                }
                else if (intersect0.object.type === 'LineSegments') {
                    var edge = scene.edge_select_map.get(intersect0.index / 2);
                    var ent_id = "_e_posi" + edge;
                    if (scene.selected_positions.has(ent_id)) {
                        this.unselectGeom(ent_id, _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntTypeStr"][_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntType"].POSI]);
                    }
                    else {
                        if (!this.shiftKeyPressed) {
                            this.unselectAll();
                        }
                        this.selectPositions(null, edge, null, ent_id);
                    }
                }
                else if (intersect0.object.type === 'Mesh') {
                    var tri = scene.tri_select_map.get(intersect0.faceIndex);
                    var face = this.model.geom.query.navTriToFace(tri);
                    var ent_id = "_f_posi" + face;
                    if (scene.selected_positions.has(ent_id)) {
                        this.unselectGeom(ent_id, _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntTypeStr"][_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntType"].POSI]);
                    }
                    else {
                        if (!this.shiftKeyPressed) {
                            this.unselectAll();
                        }
                        this.selectPositions(null, null, face, ent_id);
                    }
                }
                break;
            case _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntTypeStr"][_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntType"].VERT]:
                if (intersect0.object.type === 'Points') {
                    var vert = scene.vertex_map.get(intersect0.index);
                    var verts = this.model.geom.query.navPosiToVert(intersect0.index);
                    var point = void 0;
                    if (verts.length > 1) {
                        this.dropdown.setItems(verts, _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntTypeStr"][_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntType"].VERT]);
                        this.dropdown.visible = true;
                        this.dropdown.position = this.dropdownPosition;
                    }
                    else {
                        point = vert;
                    }
                    var ent_id = "" + _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntTypeStr"][_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntType"].VERT] + point;
                    if (scene.selected_geoms.has(ent_id)) {
                        this.unselectGeom(ent_id, _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntTypeStr"][_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntType"].VERT], true);
                    }
                    else {
                        if (!this.shiftKeyPressed) {
                            this.unselectAll();
                        }
                        this.selectVertex(point, null, null, ent_id);
                    }
                }
                else if (intersect0.object.type === 'LineSegments') {
                    var edge = scene.edge_select_map.get(intersect0.index / 2);
                    var ent_id = "_e_v" + edge;
                    if (scene.selected_vertex.has(ent_id)) {
                        this.unselectGeom(ent_id, _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntTypeStr"][_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntType"].VERT]);
                    }
                    else {
                        if (!this.shiftKeyPressed) {
                            this.unselectAll();
                        }
                        this.selectVertex(null, edge, null, ent_id);
                    }
                }
                else if (intersect0.object.type === 'Mesh') {
                    var tri = scene.tri_select_map.get(intersect0.faceIndex);
                    var face = this.model.geom.query.navTriToFace(tri);
                    var ent_id = "_f_v" + face;
                    if (scene.selected_vertex.has(ent_id)) {
                        this.unselectGeom(ent_id, _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntTypeStr"][_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntType"].VERT]);
                    }
                    else {
                        if (!this.shiftKeyPressed) {
                            this.unselectAll();
                        }
                        this.selectVertex(null, null, face, ent_id);
                    }
                }
                break;
            case _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntTypeStr"][_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntType"].COLL]:
                if (!this.shiftKeyPressed) {
                    this.unselectAll();
                }
                this.selectColl(intersect0, intersect0.object.type);
                break;
            case _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntTypeStr"][_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntType"].FACE]:
                if (intersect0.object.type === 'Mesh') {
                    var tri = scene.tri_select_map.get(intersect0.faceIndex);
                    var face = this.model.geom.query.navTriToFace(tri);
                    var ent_id = "" + _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntTypeStr"][_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntType"].FACE] + face;
                    if (scene.selected_geoms.has(ent_id)) {
                        this.unselectGeom(ent_id, _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntTypeStr"][_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntType"].FACE], true);
                    }
                    else {
                        if (!this.shiftKeyPressed) {
                            this.unselectAll();
                        }
                        this.selectFace(face);
                    }
                }
                else {
                    this.showMessages('Faces');
                }
                break;
            case _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntTypeStr"][_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntType"].PGON]:
                if (intersect0.object.type === 'Mesh') {
                    var tri = scene.tri_select_map.get(intersect0.faceIndex);
                    var face = this.model.geom.query.navTriToFace(tri);
                    var pgon = this.model.geom.query.navFaceToPgon(face);
                    var ent_id = "" + _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntTypeStr"][_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntType"].PGON] + pgon;
                    if (scene.selected_geoms.has(ent_id)) {
                        this.unselectGeom(ent_id, _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntTypeStr"][_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntType"].PGON], true);
                    }
                    else {
                        if (!this.shiftKeyPressed) {
                            this.unselectAll();
                        }
                        this.selectPGon(face);
                    }
                }
                else {
                    this.showMessages('Polygons');
                }
                break;
            case _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntTypeStr"][_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntType"].EDGE]:
                if (intersect0.object.type === 'LineSegments') {
                    var edge = scene.edge_select_map.get(intersect0.index / 2);
                    var ent_id = "" + _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntTypeStr"][_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntType"].EDGE] + edge;
                    if (scene.selected_geoms.has(ent_id)) {
                        this.unselectGeom(ent_id, _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntTypeStr"][_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntType"].EDGE], true);
                    }
                    else {
                        if (!this.shiftKeyPressed) {
                            this.unselectAll();
                        }
                        this.selectEdge(edge);
                    }
                }
                else if (intersect0.object.type === 'Mesh') {
                    var tri = scene.tri_select_map.get(intersect0.faceIndex);
                    var face = this.model.geom.query.navTriToFace(tri);
                    var ent_id = "" + _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntTypeStr"][_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntType"].FACE] + face;
                    if (scene.selected_face_edges.has(ent_id)) {
                        this.unselectGeom(ent_id, 'face_edges');
                    }
                    else {
                        if (!this.shiftKeyPressed) {
                            this.unselectAll();
                        }
                        this.selectEdgeByFace(face, ent_id);
                    }
                }
                else {
                    this.showMessages('Edges');
                }
                break;
            case _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntTypeStr"][_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntType"].WIRE]:
                if (intersect0.object.type === 'LineSegments') {
                    var edge = scene.edge_select_map.get(intersect0.index / 2), wire = this.model.geom.query.navEdgeToWire(edge);
                    var ent_id = "" + _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntTypeStr"][_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntType"].WIRE] + edge;
                    if (scene.selected_geoms.has(ent_id)) {
                        this.unselectGeom(ent_id, _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntTypeStr"][_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntType"].WIRE], true);
                    }
                    else {
                        if (!this.shiftKeyPressed) {
                            this.unselectAll();
                        }
                        this.selectWire(wire);
                    }
                }
                else if (intersect0.object.type === 'Mesh') {
                    var tri = scene.tri_select_map.get(intersect0.faceIndex);
                    var face = this.model.geom.query.navTriToFace(tri);
                    var ent_id = "" + _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntTypeStr"][_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntType"].FACE] + face;
                    if (scene.selected_face_wires.has(ent_id)) {
                        this.unselectGeom(ent_id, 'face_wires');
                    }
                    else {
                        if (!this.shiftKeyPressed) {
                            this.unselectAll();
                        }
                        this.selectWireByFace(face, ent_id);
                    }
                }
                else {
                    this.showMessages('Wires');
                }
                break;
            case _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntTypeStr"][_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntType"].PLINE]:
                if (intersect0.object.type === 'LineSegments') {
                    var edge = scene.edge_select_map.get(intersect0.index / 2);
                    var wire = this.model.geom.query.navEdgeToWire(edge);
                    var pline = this.model.geom.query.navWireToPline(wire);
                    var ent_id = "" + _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntTypeStr"][_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntType"].PLINE] + pline;
                    if (scene.selected_geoms.has(ent_id)) {
                        this.unselectGeom(ent_id, _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntTypeStr"][_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntType"].PLINE], true);
                    }
                    else {
                        if (!this.shiftKeyPressed) {
                            this.unselectAll();
                        }
                        if (pline) {
                            this.selectPLine(pline);
                        }
                        else {
                            this.showMessages('Selection is not a Polyline', 'custom');
                        }
                    }
                }
                else {
                    this.showMessages('Polylines');
                }
                break;
            case _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntTypeStr"][_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntType"].POINT]:
                if (intersect0.object.type === 'Points') {
                    var vert = this.model.geom.query.navPosiToVert(intersect0.index);
                    var _point = this.model.geom.query.navVertToPoint(vert[0]);
                    var point = scene.point_select_map.get(_point);
                    var ent_id = "" + _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntTypeStr"][_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntType"].POINT] + point;
                    if (scene.selected_geoms.has(ent_id)) {
                        this.unselectGeom(ent_id, _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntTypeStr"][_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntType"].POINT], true);
                    }
                    else {
                        if (!this.shiftKeyPressed) {
                            this.unselectAll();
                        }
                        if (point) {
                            this.selectPoint(point);
                        }
                        else {
                            this.showMessages('Selection is not a Point', 'custom');
                        }
                    }
                }
                else {
                    this.showMessages('Points');
                }
                break;
            default:
                this.showMessages('Please choose an Entity type.', 'custom');
                break;
        }
        this.render(this);
    };
    ThreejsViewerComponent.prototype.showMessages = function (msg, mode) {
        var _this = this;
        if (mode === void 0) { mode = 'notice'; }
        switch (mode) {
            case 'custom':
                this.message = msg;
                break;
            case 'notice':
                this.message = "Please Select " + msg;
                break;
            default:
                break;
        }
        this.messageVisible = true;
        setTimeout(function () {
            _this.messageVisible = false;
        }, 3000);
    };
    ThreejsViewerComponent.prototype.selectPositions = function (point, edge, face, parent_ent_id) {
        var _this = this;
        if (point === void 0) { point = null; }
        if (edge === void 0) { edge = null; }
        if (face === void 0) { face = null; }
        var ent_type_str = _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntTypeStr"][_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntType"].POSI];
        var scene = this._data_threejs;
        var posi_ent = this.dataService.selected_ents.get(ent_type_str);
        if (point !== null) {
            var position = this.model.attribs.query.getPosiCoords(point);
            var ent_id = parent_ent_id;
            var labelText = this.indexAsLabel(ent_type_str, ent_id, point, _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntType"].POSI);
            scene.selectObjPosition(null, ent_id, position, this.container, labelText);
            posi_ent.set(ent_id, point);
            this.dataService.selected_positions.set("" + parent_ent_id, [ent_id]);
        }
        else if (edge !== null) {
            var verts = this.model.geom.query.navEdgeToVert(edge);
            var posis = verts.map(function (v) { return _this.model.geom.query.navVertToPosi(v); });
            var children_1 = [];
            posis.map(function (posi) {
                var ent_id = "" + ent_type_str + posi;
                var position = _this.model.attribs.query.getPosiCoords(posi);
                var labelText = _this.indexAsLabel(ent_type_str, ent_id, posi, _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntType"].POSI);
                scene.selectObjPosition(parent_ent_id, ent_id, position, _this.container, labelText);
                posi_ent.set(ent_id, posi);
                children_1.push(ent_id);
            });
            this.dataService.selected_positions.set("" + parent_ent_id, children_1);
        }
        else if (face !== null) {
            var tris = this.model.geom.query.navFaceToTri(face), posis = tris.map(function (tri) { return _this.model.geom.query.navAnyToPosi(_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntType"].TRI, tri); }), posi_flat = [].concat.apply([], posis);
            var uniqPositions = this.uniq(posi_flat);
            var children_2 = [];
            uniqPositions.map(function (posi) {
                var ent_id = "" + ent_type_str + posi;
                var position = _this.model.attribs.query.getPosiCoords(posi);
                var labelText = _this.indexAsLabel(ent_type_str, ent_id, posi, _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntType"].POSI);
                scene.selectObjPosition(parent_ent_id, ent_id, position, _this.container, labelText);
                posi_ent.set(ent_id, posi);
                children_2.push(ent_id);
            });
            this.dataService.selected_positions.set("" + parent_ent_id, children_2);
        }
    };
    ThreejsViewerComponent.prototype.uniq = function (a) {
        var seen = {};
        return a.filter(function (item) {
            return seen.hasOwnProperty(item) ? false : (seen[item] = true);
        });
    };
    ThreejsViewerComponent.prototype.selectVertex = function (point, edge, face, parent_ent_id) {
        var _this = this;
        if (point === void 0) { point = null; }
        if (edge === void 0) { edge = null; }
        if (face === void 0) { face = null; }
        var ent_type_str = _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntTypeStr"][_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntType"].VERT];
        var posi_ent = this.dataService.selected_ents.get(ent_type_str);
        var scene = this._data_threejs;
        if (point !== null) {
            var position = this.model.attribs.query.getVertCoords(point);
            var ent_id = parent_ent_id;
            var labelText = this.indexAsLabel(ent_type_str, ent_id, point, _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntType"].POSI);
            scene.selectObjVetex(null, ent_id, position, this.container, labelText);
            posi_ent.set(ent_id, point);
            this.dataService.selected_vertex.set("" + parent_ent_id, [ent_id]);
        }
        else if (edge !== null) {
            var verts = this.model.geom.query.navEdgeToVert(edge);
            var children_3 = [];
            verts.map(function (vert) {
                var ent_id = "" + ent_type_str + vert;
                var position = _this.model.attribs.query.getVertCoords(vert);
                var labelText = _this.indexAsLabel(ent_type_str, ent_id, vert, _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntType"].VERT);
                scene.selectObjVetex(parent_ent_id, ent_id, position, _this.container, labelText);
                posi_ent.set(ent_id, vert);
                children_3.push(ent_id);
            });
            this.dataService.selected_vertex.set("" + parent_ent_id, children_3);
        }
        else if (face !== null) {
            var tris = this.model.geom.query.navFaceToTri(face), verts = tris.map(function (tri) { return _this.model.geom.query.navTriToVert(tri); }), verts_flat = [].concat.apply([], verts);
            var uniqVerts = this.uniq(verts_flat);
            var children_4 = [];
            uniqVerts.map(function (vert) {
                var ent_id = "" + ent_type_str + vert;
                var position = _this.model.attribs.query.getVertCoords(vert);
                var labelText = _this.indexAsLabel(ent_type_str, ent_id, vert, _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntType"].VERT);
                scene.selectObjVetex(parent_ent_id, ent_id, position, _this.container, labelText);
                posi_ent.set(ent_id, vert);
                children_4.push(ent_id);
            });
            this.dataService.selected_vertex.set("" + parent_ent_id, children_4);
        }
    };
    ThreejsViewerComponent.prototype.unselectGeom = function (ent_id, ent_type_str, direct) {
        var _this = this;
        if (direct === void 0) { direct = false; }
        var scene = this._data_threejs;
        if (!direct) {
            if (ent_type_str === _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntTypeStr"][_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntType"].POSI]) {
                scene.unselectObjGroup(ent_id, this.container, 'positions');
                var children = this.dataService.selected_positions.get(ent_id);
                children.forEach(function (c) {
                    _this.dataService.selected_ents.get(_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntTypeStr"][_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntType"].POSI]).delete(c);
                });
                this.dataService.selected_positions.delete(ent_id);
            }
            else if (ent_type_str === _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntTypeStr"][_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntType"].VERT]) {
                scene.unselectObjGroup(ent_id, this.container, 'vertex');
                var children = this.dataService.selected_vertex.get(ent_id);
                children.forEach(function (c) {
                    _this.dataService.selected_ents.get(_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntTypeStr"][_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntType"].VERT]).delete(c);
                });
                this.dataService.selected_vertex.delete(ent_id);
            }
            else if (ent_type_str === 'face_edges') {
                scene.unselectObjGroup(ent_id, this.container, 'face_edges');
                var children = this.dataService.selected_face_edges.get(ent_id);
                children.forEach(function (c) {
                    _this.dataService.selected_ents.get(_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntTypeStr"][_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntType"].EDGE]).delete(c);
                });
                this.dataService.selected_face_edges.delete(ent_id);
            }
            else if (ent_type_str === 'face_wires') {
                scene.unselectObjGroup(ent_id, this.container, 'face_wires');
                var children = this.dataService.selected_face_wires.get(ent_id);
                children.forEach(function (c) {
                    _this.dataService.selected_ents.get(_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntTypeStr"][_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntType"].WIRE]).delete(c);
                });
                this.dataService.selected_face_wires.delete(ent_id);
            }
        }
        else {
            scene.unselectObj(ent_id, this.container);
            this.dataService.selected_ents.get(ent_type_str).delete(ent_id);
        }
        this.render(this);
        this.refreshTable(event);
    };
    ThreejsViewerComponent.prototype.selectEdge = function (line) {
        var _this = this;
        var ent_type_str = _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntTypeStr"][_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntType"].EDGE], verts = this.model.geom.query.navEdgeToVert(line), positions = verts.map(function (v) { return _this.model.attribs.query.getVertCoords(v); }), posi_flat = [].concat.apply([], positions), ent_id = "" + ent_type_str + line;
        var labelText = this.indexAsLabel(ent_type_str, ent_id, line, _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntType"].EDGE);
        this._data_threejs.selectObjLine(ent_id, [], posi_flat, this.container, labelText);
        this.dataService.selected_ents.get(ent_type_str).set(ent_id, line);
    };
    ThreejsViewerComponent.prototype.selectEdgeByFace = function (face, parent_ent_id) {
        var _this = this;
        var ent_type_str = _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntTypeStr"][_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntType"].EDGE], edges = this.model.geom.query.navAnyToAny(_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntType"].FACE, _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntType"].EDGE, face);
        var children = [];
        edges.map(function (edge) {
            var ent_id = "" + ent_type_str + edge;
            children.push(ent_id);
            var vert = _this.model.geom.query.navEdgeToVert(edge);
            var position = [];
            var indices = [];
            vert.map(function (v, i) {
                position.push(_this.model.attribs.query.getVertCoords(v));
                indices.push(i);
            });
            var posi_flat = [].concat.apply([], position);
            var labelText = _this.indexAsLabel(ent_type_str, ent_id, edge, _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntType"].EDGE);
            _this._data_threejs.selectEdgeByFace(parent_ent_id, ent_id, indices, posi_flat, _this.container, labelText);
            _this.dataService.selected_ents.get(ent_type_str).set(ent_id, edge);
        });
        this.dataService.selected_face_edges.set("" + parent_ent_id, children);
    };
    ThreejsViewerComponent.prototype.selectWire = function (wire) {
        var _this = this;
        var ent_type_str = _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntTypeStr"][_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntType"].WIRE], edges = this.model.geom.query.navWireToEdge(wire), verts = edges.map(function (e) { return _this.model.geom.query.navEdgeToVert(e); }), verts_flat = [].concat.apply([], [].concat.apply([], verts)), indices = [], positions = [];
        verts_flat.map(function (v, i) {
            positions.push(_this.model.attribs.query.getVertCoords(v));
            indices.push(i);
        });
        var posi_flat = [].concat.apply([], positions), ent_id = "" + ent_type_str + wire;
        var labelText = this.indexAsLabel(ent_type_str, ent_id, wire, _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntType"].WIRE);
        this._data_threejs.selectObjLine(ent_id, indices, posi_flat, this.container, labelText);
        this.dataService.selected_ents.get(ent_type_str).set(ent_id, wire);
    };
    ThreejsViewerComponent.prototype.selectWireByFace = function (face, parent_ent_id) {
        var _this = this;
        var ent_type_str = _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntTypeStr"][_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntType"].WIRE], wires = this.model.geom.query.navFaceToWire(face);
        var children = [];
        wires.map(function (wire) {
            var ent_id = "" + ent_type_str + wire;
            children.push(ent_id);
            var edges = _this.model.geom.query.navWireToEdge(wire), verts = edges.map(function (e) { return _this.model.geom.query.navEdgeToVert(e); });
            // @ts-ignore
            var verts_flat = verts.flat(1), indices = [], positions = [];
            verts_flat.map(function (v, i) {
                positions.push(_this.model.attribs.query.getVertCoords(v));
                indices.push(i);
            });
            var posi_flat = [].concat.apply([], positions);
            var labelText = _this.indexAsLabel(ent_type_str, ent_id, wire, _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntType"].WIRE);
            _this._data_threejs.selectWireByFace(parent_ent_id, ent_id, indices, posi_flat, _this.container, labelText);
            _this.dataService.selected_ents.get(ent_type_str).set(ent_id, wire);
        });
        this.dataService.selected_face_wires.set("" + parent_ent_id, children);
    };
    ThreejsViewerComponent.prototype.selectFace = function (face) {
        var _this = this;
        var ent_type_str = _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntTypeStr"][_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntType"].FACE], tri = this.model.geom.query.navFaceToTri(face), verts = tri.map(function (index) { return _this.model.geom.query.navTriToVert(index); }), verts_flat = [].concat.apply([], verts), posis = verts_flat.map(function (v) { return _this.model.geom.query.navAnyToPosi(_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntType"].VERT, v); }), posis_flat = [].concat.apply([], posis), tri_indices = [], positions = [];
        posis_flat.map(function (posi, index) {
            positions.push(_this.model.attribs.query.getPosiCoords(posi));
            tri_indices.push(index);
        });
        var posi_flat = [].concat.apply([], positions), ent_id = "" + ent_type_str + face;
        var labelText = this.indexAsLabel(ent_type_str, ent_id, face, _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntType"].FACE);
        this._data_threejs.selectObjFace(ent_id, tri_indices, posi_flat, this.container, labelText);
    };
    ThreejsViewerComponent.prototype.indexAsLabel = function (ent_type_str, ent_id, id, type) {
        var indexAsLabel;
        var showSelected = JSON.parse(sessionStorage.getItem('mpm_showSelected'));
        this.dataService.selected_ents.get(ent_type_str).set(ent_id, id);
        if (showSelected) {
            var selected_ents = this.dataService.selected_ents.get(ent_type_str);
            var selected_ents_sorted = Object(_libs_util_maps__WEBPACK_IMPORTED_MODULE_7__["sortByKey"])(selected_ents);
            var arr_1 = [];
            selected_ents_sorted.forEach(function (ent) {
                arr_1.push(ent);
            });
            indexAsLabel = String(arr_1.findIndex(function (ent) { return ent === id; }));
            sessionStorage.setItem('mpm_selected_ents_arr', JSON.stringify(arr_1));
        }
        else {
            indexAsLabel = String(this._data_threejs._model.attribs.threejs.getIdIndex(type, id));
        }
        return indexAsLabel;
    };
    ThreejsViewerComponent.prototype.selectPoint = function (point) {
        var ent_type_str = _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntTypeStr"][_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntType"].POINT];
        var result = this.getPointPosis(point, null);
        var point_indices = result.point_indices;
        var point_posi = result.posi_flat;
        var ent_id = "" + ent_type_str + point;
        var labelText = this.indexAsLabel(ent_type_str, ent_id, point, _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntType"].POINT);
        this._data_threejs.selectObjPoint(ent_id, point_indices, point_posi, this.container, labelText);
        this.dataService.selected_ents.get(ent_type_str).set(ent_id, point);
    };
    ThreejsViewerComponent.prototype.selectPLine = function (pline) {
        var ent_type_str = _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntTypeStr"][_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntType"].PLINE];
        var result = this.getPLinePosis(pline);
        var ent_id = "" + ent_type_str + pline;
        if (result) {
            var posi_flat = result.posi_flat;
            var indices = result.indices;
            var labelText = this.indexAsLabel(ent_type_str, ent_id, pline, _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntType"].PLINE);
            this._data_threejs.selectObjLine(ent_id, indices, posi_flat, this.container, labelText);
            this.dataService.selected_ents.get(ent_type_str).set(ent_id, pline);
        }
        else {
            this.showMessages('Please Select a Polyline', 'custom');
        }
    };
    ThreejsViewerComponent.prototype.selectPGon = function (face) {
        var ent_type_str = _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntTypeStr"][_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntType"].PGON];
        var result = this.getPGonPosis(face);
        var posi_flat = result.posi_flat;
        var tri_indices = result.indices;
        var ent_id = "" + ent_type_str + face;
        var labelText = this.indexAsLabel(ent_type_str, ent_id, face, _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntType"].PGON);
        this._data_threejs.selectObjFace(ent_id, tri_indices, posi_flat, this.container, labelText);
        this.dataService.selected_ents.get(ent_type_str).set(ent_id, face);
    };
    /**
     * get point positions for collections
     * @param points
     */
    ThreejsViewerComponent.prototype.getPointPosis = function (point1, points) {
        var _this = this;
        if (point1 === void 0) { point1 = null; }
        if (points === void 0) { points = null; }
        var verts_flat = null;
        if (point1 !== null) {
            verts_flat = [this.model.geom.query.navPointToVert(point1)];
        }
        if (points !== null) {
            var verts = points.map(function (p) { return _this.model.geom.query.navPointToVert(p); });
            verts_flat = [].concat.apply([], verts);
        }
        var point_indices = [];
        var positions = [];
        verts_flat.map(function (v, i) {
            positions.push(_this.model.attribs.query.getPosiCoords(v));
            point_indices.push(i);
        });
        var posi_flat = [].concat.apply([], positions);
        var result = { posi_flat: posi_flat, point_indices: point_indices };
        return result;
    };
    /**
     * get pline positions for selectPLine or collections
     * @param wire1
     * @param plines
     */
    ThreejsViewerComponent.prototype.getPLinePosis = function (pline1, plines) {
        var _this = this;
        if (pline1 === void 0) { pline1 = null; }
        if (plines === void 0) { plines = null; }
        var wires_flat = null;
        if (pline1 !== null) {
            wires_flat = [this.model.geom.query.navPlineToWire(pline1)];
        }
        if (plines !== null) {
            var wires = plines.map(function (pl) { return _this.model.geom.query.navPlineToWire(pl); });
            wires_flat = [].concat.apply([], wires);
        }
        var edges = wires_flat.map(function (w) { return _this.model.geom.query.navWireToEdge(w); });
        var edges_flat = [].concat.apply([], edges);
        var verts = edges_flat.map(function (e) { return _this.model.geom.query.navEdgeToVert(e); });
        var verts_flat = [].concat.apply([], [].concat.apply([], verts));
        var indices = [];
        var positions = [];
        verts_flat.map(function (v, i) {
            positions.push(_this.model.attribs.query.getVertCoords(v));
            indices.push(i);
        });
        var posi_flat = [].concat.apply([], positions);
        var result = { posi_flat: posi_flat, indices: indices };
        return result;
    };
    /**
     * get pgon positions for selectPGon or collections
     * @param face1
     * @param pgons
     */
    ThreejsViewerComponent.prototype.getPGonPosis = function (face1, pgons) {
        var _this = this;
        if (face1 === void 0) { face1 = null; }
        if (pgons === void 0) { pgons = null; }
        var faces_flat = null;
        if (face1 !== null) {
            var _pgon = this.model.geom.query.navFaceToPgon(face1);
            if (_pgon === undefined) {
                return null;
            }
            faces_flat = [this.model.geom.query.navPgonToFace(_pgon)];
        }
        if (pgons !== null) {
            var faces = pgons.map(function (pgon) { return _this.model.geom.query.navPgonToFace(pgon); });
            faces_flat = [].concat.apply([], faces);
        }
        var tris = faces_flat.map(function (face) { return _this.model.geom.query.navFaceToTri(face); });
        var tris_flat = [].concat.apply([], tris);
        var verts = tris_flat.map(function (tri) { return _this.model.geom.query.navTriToVert(tri); });
        var verts_flat = [].concat.apply([], verts);
        var posis = verts_flat.map(function (v) { return _this.model.geom.query.navAnyToPosi(_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntType"].VERT, v); });
        var posis_flat = [].concat.apply([], posis);
        var indices = [];
        var positions = [];
        posis_flat.map(function (posi, index) {
            positions.push(_this.model.attribs.query.getPosiCoords(posi));
            indices.push(index);
        });
        var posi_flat = [].concat.apply([], positions);
        var result = { posi_flat: posi_flat, indices: indices };
        return result;
    };
    ThreejsViewerComponent.prototype.selectColl = function (object, type) {
        var colls = [];
        if (type === 'Mesh') {
            colls = this.model.geom.query.navAnyToColl(_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntType"].TRI, object.faceIndex);
        }
        else if (type === 'LineSegments') {
            colls = this.model.geom.query.navAnyToColl(_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntType"].EDGE, object.index / 2);
        }
        else if (type === 'Points') {
            var vert = this.model.geom.query.navPosiToVert(object.index);
            var point = this.model.geom.query.navVertToPoint(vert[0]);
            colls = this.model.geom.query.navAnyToColl(_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntType"].POINT, point);
        }
        /**
         * Show dropdown menu only when Entity belongs to more than 1 Collection.
         */
        if (this.dataService.selected_ents.get(_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntTypeStr"][_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntType"].COLL]).size === 0 && colls.length > 1) {
            this.dropdown.setItems(colls, 'co');
            this.dropdown.visible = true;
            this.dropdown.position = this.dropdownPosition;
        }
        else if (colls && colls.length === 1) {
            this.chooseColl(colls[0]);
        }
        else {
            this.showMessages('No Collections Available', 'custom');
        }
    };
    ThreejsViewerComponent.prototype.chooseColl = function (id) {
        var scene = this._data_threejs;
        var coll_id = "" + _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntTypeStr"][_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntType"].COLL] + id;
        var children = [];
        var pgons = this.model.geom.query.navCollToPgon(id);
        var pgons_flat = [].concat.apply([], pgons);
        if (pgons_flat.length) {
            var pgonResult = this.getPGonPosis(null, pgons_flat);
            var pgons_posi = pgonResult.posi_flat;
            var pgons_indices = pgonResult.indices;
            if (pgons_indices.length !== 0) {
                // const attrib_val = this.model.attribs.query.getAttribValue(EEntType.COLL, EAttribNames.NAME, id);
                // const selecting = attrib_val ? attrib_val.toString() : `${EEntType.COLL}${id}`;
                var pgon_id = _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntTypeStr"][_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntType"].COLL] + "_pg_" + id;
                scene.selectObjFace(pgon_id, pgons_indices, pgons_posi, this.container, false);
                children.push(pgon_id);
            }
        }
        var plines = this.model.geom.query.navCollToPline(id);
        var plines_flat = [].concat.apply([], plines);
        if (plines_flat.length) {
            var plineResult = this.getPLinePosis(null, plines_flat);
            var plines_posi = plineResult.posi_flat;
            var plines_indices = plineResult.indices;
            if (plines_indices.length !== 0) {
                var pline_id = _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntTypeStr"][_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntType"].COLL] + "_pl_" + id;
                scene.selectObjLine(pline_id, plines_indices, plines_posi, this.container, false);
                children.push(pline_id);
            }
        }
        var points = this.model.geom.query.navCollToPoint(id);
        var points_flat = [].concat.apply([], points);
        if (points_flat.length) {
            var pointResult = this.getPointPosis(null, points_flat);
            var point_posi = pointResult.posi_flat;
            var point_indices = pointResult.point_indices;
            if (point_indices.length !== 0) {
                var point_id = _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntTypeStr"][_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntType"].COLL] + "_pt_" + id;
                scene.selectObjPoint(point_id, point_indices, point_posi, this.container, false);
                children.push(point_id);
            }
        }
        this.dataService.selected_ents.get(_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntTypeStr"][_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntType"].COLL]).set(coll_id, id);
        this.dataService.selected_coll.set(coll_id, children);
        this.refreshTable(null);
        this.render(this);
    };
    ThreejsViewerComponent.prototype.chooseVertex = function (id) {
        var ent_type_str = _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntTypeStr"][_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntType"].VERT];
        var posi_ent = this.dataService.selected_ents.get(ent_type_str);
        var scene = this._data_threejs;
        var date = new Date(), timestamp = date.getTime();
        var position = this.model.attribs.query.getVertCoords(id);
        var ent_id = "" + ent_type_str + id;
        scene.selectObjVetex("_single_v" + timestamp, ent_id, position, this.container, true);
        posi_ent.set(ent_id, id);
        this.dataService.selected_vertex.set("_single_v" + timestamp, [ent_id]);
        this.refreshTable(null);
        this.render(this);
    };
    ThreejsViewerComponent.prototype.zoomfit = function () {
        this._data_threejs.lookAtObj(this._width);
    };
    ThreejsViewerComponent.prototype.selectEntityType = function (selection) {
        this.SelectingEntityType = selection;
        localStorage.setItem('mpm_selecting_entity_type', JSON.stringify(selection));
        this.selectDropdownVisible = false;
    };
    ThreejsViewerComponent.prototype.selectEntity = function (id) {
        if (this.SelectingEntityType.id === _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntTypeStr"][_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntType"].COLL]) {
            this.chooseColl(id);
        }
        else if (this.SelectingEntityType.id === _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntTypeStr"][_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_3__["EEntType"].VERT]) {
            this.chooseVertex(id);
        }
    };
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"])(),
        __metadata("design:type", Object)
    ], ThreejsViewerComponent.prototype, "eventClicked", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"])(),
        __metadata("design:type", Object)
    ], ThreejsViewerComponent.prototype, "resetTableEvent", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        __metadata("design:type", _libs_geo_info_GIModel__WEBPACK_IMPORTED_MODULE_0__["GIModel"])
    ], ThreejsViewerComponent.prototype, "model", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        __metadata("design:type", Object)
    ], ThreejsViewerComponent.prototype, "attr_table_select", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"])(_html_dropdown_menu_component__WEBPACK_IMPORTED_MODULE_4__["DropdownMenuComponent"]),
        __metadata("design:type", Object)
    ], ThreejsViewerComponent.prototype, "dropdown", void 0);
    ThreejsViewerComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'threejs-viewer',
            template: __webpack_require__(/*! ./threejs-viewer.component.html */ "./src/app/model-viewers/all-viewers/gi-viewer/threejs/threejs-viewer.component.html"),
            styles: [__webpack_require__(/*! ./threejs-viewer.component.scss */ "./src/app/model-viewers/all-viewers/gi-viewer/threejs/threejs-viewer.component.scss")]
        }),
        __metadata("design:paramtypes", [_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injector"], _angular_core__WEBPACK_IMPORTED_MODULE_1__["ElementRef"], _threejs_viewer_service__WEBPACK_IMPORTED_MODULE_6__["ThreeJSViewerService"]])
    ], ThreejsViewerComponent);
    return ThreejsViewerComponent;
}());

var mouseLabel;
(function (mouseLabel) {
    mouseLabel["Mesh"] = "Polygon";
    mouseLabel["LineSegments"] = "Polyline/";
    mouseLabel["Points"] = "Point/Position";
})(mouseLabel || (mouseLabel = {}));


/***/ }),

/***/ "./src/app/model-viewers/all-viewers/gi-viewer/threejs/threejs-viewer.service.ts":
/*!***************************************************************************************!*\
  !*** ./src/app/model-viewers/all-viewers/gi-viewer/threejs/threejs-viewer.service.ts ***!
  \***************************************************************************************/
/*! exports provided: ThreeJSViewerService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ThreeJSViewerService", function() { return ThreeJSViewerService; });
var ThreeJSViewerService = /** @class */ (function () {
    function ThreeJSViewerService() {
    }
    ThreeJSViewerService.prototype.initRaycaster = function (event) {
        var scene = this.DataThreejs;
        var rect = scene._renderer.domElement.getBoundingClientRect();
        scene._mouse.x = ((event.clientX - rect.left) / rect.width) * 2 - 1;
        scene._mouse.y = -((event.clientY - rect.top) / rect.height) * 2 + 1;
        scene._raycaster.setFromCamera(scene._mouse, scene._camera);
        return scene._raycaster.intersectObjects(scene.sceneObjs);
    };
    return ThreeJSViewerService;
}());



/***/ }),

/***/ "./src/app/model-viewers/all-viewers/help-viewer/help-viewer.component.html":
/*!**********************************************************************************!*\
  !*** ./src/app/model-viewers/all-viewers/help-viewer/help-viewer.component.html ***!
  \**********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div id=\"help-container\">\r\n    <h1 id = 'help-tab' (click)='openHelpMenu($event)'><span class='activeModName'>{{getActiveModule()||\"Select Module\"}}</span><span>▾</span></h1>\r\n    <div id=\"helpMenu\">\r\n        <ng-container *ngFor='let mod of Modules; let i = index'>\r\n            <li (click)=\"switchHelp(i)\">\r\n                {{mod.module}}\r\n            </li>\r\n        </ng-container>\r\n    </div>\r\n\r\n    <div class = 'container' *ngIf='output; else module_help'>\r\n        <h2><span>{{output.module}}</span>.{{output.name}}</h2>\r\n        <!--<h4>Module: <span>{{output.module}}</span></h4>-->\r\n        <div class = 'body--container'>\r\n            <div class = 'descr--container'>\r\n                <h5>Description:</h5>\r\n                <p *ngFor='let desc of output.description.split(\"~\")'>{{desc}}</p>\r\n            </div>\r\n    \r\n            <div class = 'param--container'>\r\n                <h5 *ngIf='output.parameters?.length > 0'>Parameters:</h5>\r\n                <ul class='params'>\r\n                    <ng-container *ngFor='let param of output.parameters'>\r\n                        <li *ngIf='param'>\r\n                            <div class = 'li--item'>\r\n                                <span>{{param.name}}: </span>{{param.description}}\r\n                            </div>\r\n                        </li>\r\n                    </ng-container>\r\n                </ul>\r\n            </div>        \r\n    \r\n            <!-- <p class='paramP' *ngFor='let param of output.parameters'>\r\n                <span>{{param.name}} - </span>{{param.description}}\r\n            </p> -->\r\n            \r\n            <div class = 'ret--container' *ngIf='output.returns'>\r\n                <h5>Returns:</h5>\r\n                <p>{{output.returns}}</p>\r\n            </div>\r\n\r\n            <div *ngIf='output.example' class = 'exam--container'>\r\n                <h5>Examples:</h5>\r\n                <div *ngFor='let ex of output.example; let i = index;' class = 'examp'>\r\n                    <ul>\r\n                        <li>{{ex}}</li>\r\n                        <p *ngIf='output.example_info'>{{output.example_info[i]}}</p>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n\r\n            <div *ngIf='output.example_link' class = 'exam--container'>\r\n                <h5>Example URLs:</h5>\r\n                <ul *ngFor='let ex of output.example_link; let i = index;'>\r\n                    <li>{{i+1}}) <a class='hyperlink' href={{urlString+ex.split()}} target=\"_blank\">{{ex.split('&node=')[0]}}</a></li>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <ng-template #module_help>\r\n        <div class = 'container'> \r\n            <p class='moduleDesc' *ngIf='Modules[activeModIndex]?.description'>{{Modules[activeModIndex].description}}</p> <br>\r\n            <!--\r\n            <ng-container *ngIf='Modules[activeModIndex]?.description'>\r\n                <p class='moduleDesc' *ngFor='let txt of Modules[activeModIndex].description.split(\"~\")'>{{txt}}</p> <br>\r\n            </ng-container>\r\n            -->\r\n            <ng-container *ngFor='let func of getFuncs()'>\r\n                <hr>\r\n                <h2><span>{{func.module}}</span>.{{func.name}}</h2>\r\n                <!--<h4>Module: <span>{{func.module}}</span></h4>-->\r\n                <div class = 'body--container'>\r\n                    <div class = 'descr--container'>\r\n                        <h5>Description:</h5>\r\n                        <p *ngFor='let txt of func.description.split(\"~\")'>{{txt}}</p>\r\n                    </div>\r\n            \r\n                    <div class = 'param--container'>\r\n                        <h5 *ngIf='func.parameters?.length > 0'>Parameters:</h5>\r\n                        <ul class='params'>\r\n                            <ng-container *ngFor='let param of func.parameters'>\r\n                                <li *ngIf='param'>\r\n                                    <div class = 'li--item'>\r\n                                        <span>{{param.name}}: </span>{{param.description}}\r\n                                    </div>\r\n                                </li>\r\n                            </ng-container>\r\n                        </ul>\r\n                    </div>        \r\n            \r\n                    <!-- <p class='paramP' *ngFor='let param of func.parameters'>\r\n                        <span>{{param.name}} - </span>{{param.description}}\r\n                    </p> -->\r\n                    \r\n                    <div class = 'ret--container' *ngIf='func.returns'>\r\n                        <h5>Returns:</h5>\r\n                        <p>{{func.returns}}</p>\r\n                    </div>\r\n        \r\n                    <div *ngIf='func.example' class = 'exam--container'>\r\n                        <h5>Examples:</h5>\r\n                        <div *ngFor='let ex of func.example; let i = index;' class = 'examp'>\r\n                            <ul>\r\n                                <li>{{ex}}</li>\r\n                                <p *ngIf='func.example_info'>{{func.example_info[i]}}</p>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n        \r\n                    <div *ngIf='func.example_link' class = 'exam--container'>\r\n                        <h5>Example URLs:</h5>\r\n                        <ul *ngFor='let ex of func.example_link; let i = index;'>\r\n                            <li>{{i+1}}) <a class='hyperlink' href={{urlString+ex.split()}} target=\"_blank\">{{ex.split('&node=')[0]}}</a></li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </ng-container>\r\n        </div>\r\n    </ng-template>\r\n</div>\r\n"

/***/ }),

/***/ "./src/app/model-viewers/all-viewers/help-viewer/help-viewer.component.scss":
/*!**********************************************************************************!*\
  !*** ./src/app/model-viewers/all-viewers/help-viewer/help-viewer.component.scss ***!
  \**********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "@import url(\"https://fonts.googleapis.com/css?family=Ubuntu+Mono\");\n:host {\n  height: 100%;\n  width: 100%; }\ndiv {\n  font-family: sans-serif;\n  color: #505050;\n  width: 100%;\n  padding-left: 10px; }\nh5 {\n  font-weight: 700;\n  font-size: 12px; }\n.funcDesc {\n  font-weight: 600; }\n.paramP {\n  padding-left: 5px; }\nspan {\n  font-weight: 550;\n  font-style: italic; }\n#help-container {\n  margin-top: 40px;\n  padding: 0px;\n  height: calc(100vh - 40px);\n  width: 100%;\n  min-width: -webkit-fit-content;\n  min-width: -moz-fit-content;\n  min-width: fit-content;\n  overflow: auto;\n  resize: none;\n  background-color: transparent;\n  color: #373737;\n  border: none; }\n.container {\n  display: flex;\n  flex-flow: column nowrap;\n  justify-content: flex-start;\n  box-sizing: border-box;\n  height: -webkit-fit-content;\n  height: -moz-fit-content;\n  height: fit-content;\n  width: 100%;\n  min-width: 200px;\n  padding: 15px; }\n.body--container {\n  padding: 6px 0px;\n  border-top: 1px solid #808080; }\n.descr--container, .param--container, .ret--container, .exam--container {\n  padding: 0px;\n  line-height: 15px;\n  margin-bottom: 7.5px; }\n.descr--container h5, .param--container h5, .ret--container h5, .exam--container h5 {\n    margin-bottom: 3.75px; }\n.descr--container ul, .param--container ul, .ret--container ul, .exam--container ul {\n    margin: 0px;\n    padding-left: 15px;\n    background-color: transparent; }\n.descr--container ul li, .param--container ul li, .ret--container ul li, .exam--container ul li {\n      display: list-item; }\n.descr--container ul li .li--item, .param--container ul li .li--item, .ret--container ul li .li--item, .exam--container ul li .li--item {\n        display: flex;\n        flex-flow: row nowrap;\n        padding: 0px;\n        font-style: normal;\n        font-weight: 400; }\n.descr--container ul li .li--item span, .param--container ul li .li--item span, .ret--container ul li .li--item span, .exam--container ul li .li--item span {\n          margin-right: 2px;\n          font-weight: 550; }\n.descr--container ul li .li--item:hover, .param--container ul li .li--item:hover, .ret--container ul li .li--item:hover, .exam--container ul li .li--item:hover {\n          background-color: transparent; }\n.descr--container ul li:hover, .param--container ul li:hover, .ret--container ul li:hover, .exam--container ul li:hover {\n        background-color: transparent; }\n.exam--container h5 {\n  margin-top: 3.75px; }\n.exam--container .examp {\n  padding: 0px; }\n.exam--container .examp ul {\n    margin-bottom: 6px;\n    padding: 0px;\n    background-color: transparent; }\n.exam--container .examp ul li {\n      display: flex;\n      border: 1px solid #808080;\n      color: #373737;\n      font-style: normal;\n      font-family: 'Ubuntu Mono';\n      padding: 0px 0px 0px 2px;\n      margin: 4px 0px;\n      background-color: transparent !important; }\n.exam--container .examp ul p {\n      background-color: transparent !important; }\n.hyperlink {\n  color: #808080; }\n.hyperlink :link {\n    color: #808080; }\n.hyperlink :visited {\n    color: #999999; }\n.hyperlink :hover {\n    color: #B3B3B3; }\nh1 {\n  padding-left: 10px;\n  font-size: 14px;\n  font-weight: 600;\n  line-height: 30px;\n  cursor: pointer; }\nh1 .activeModName {\n    display: inline-block;\n    min-width: 50px; }\nh2 {\n  padding: 0px;\n  padding-bottom: 6px;\n  font-size: 14px; }\np {\n  padding-bottom: 10px; }\n.moduleDesc {\n  font-size: 12px; }\n#helpMenu {\n  display: none;\n  position: absolute;\n  width: -webkit-fit-content;\n  width: -moz-fit-content;\n  width: fit-content;\n  transition: display 0.4s;\n  z-index: 1;\n  background-color: #fafafb;\n  border: 1px solid #808080;\n  padding-left: 0px; }\n#helpMenu button {\n    cursor: pointer;\n    display: block;\n    min-width: 100px;\n    max-width: 200px;\n    background-color: #fafafb;\n    border: 0px;\n    margin: 0px;\n    padding: 0px;\n    line-height: 30px;\n    height: 30px;\n    font-size: 12px; }\n#helpMenu li {\n    cursor: pointer;\n    display: block;\n    min-width: 100px;\n    max-width: 300px;\n    overflow: hidden;\n    line-height: 20px;\n    background-color: #fafafb;\n    border: 0px;\n    margin: 0px;\n    padding: 0px 10px 0px 10px;\n    line-height: 30px;\n    height: 30px;\n    font-size: 12px;\n    color: #373737; }\n#helpMenu li:hover {\n      color: #00006d;\n      background-color: #E6E6E6; }\n\n/*# sourceMappingURL=data:application/json;base64, */"

/***/ }),

/***/ "./src/app/model-viewers/all-viewers/help-viewer/help-viewer.component.ts":
/*!********************************************************************************!*\
  !*** ./src/app/model-viewers/all-viewers/help-viewer/help-viewer.component.ts ***!
  \********************************************************************************/
/*! exports provided: HelpViewerComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "HelpViewerComponent", function() { return HelpViewerComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _shared_decorators__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @shared/decorators */ "./src/app/shared/decorators/index.ts");
/* harmony import */ var _shared_services__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @shared/services */ "./src/app/shared/services/index.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};



/**
 * HelpViewerComponent
 */
var HelpViewerComponent = /** @class */ (function () {
    /**
     * constructor
     */
    function HelpViewerComponent(mainDataService) {
        this.mainDataService = mainDataService;
        this.ModuleDoc = _shared_decorators__WEBPACK_IMPORTED_MODULE_1__["ModuleDocList"];
        this.Modules = [];
        this.urlString = "" + window.location.origin +
            '/flowchart?file=' +
            'https://raw.githubusercontent.com/design-automation/' +
            'mobius-parametric-modeller/master/src/assets/gallery/function_examples/';
        for (var _i = 0, ModuleList_1 = _shared_decorators__WEBPACK_IMPORTED_MODULE_1__["ModuleList"]; _i < ModuleList_1.length; _i++) {
            var mod = ModuleList_1[_i];
            if (mod.module[0] === '_') {
                continue;
            }
            var nMod = { 'module': mod.module, 'functions': [], 'description': _shared_decorators__WEBPACK_IMPORTED_MODULE_1__["ModuleDocList"][mod.module].description };
            for (var _a = 0, _b = mod.functions; _a < _b.length; _a++) {
                var func = _b[_a];
                if (func.name[0] === '_') {
                    continue;
                }
                nMod.functions.push(_shared_decorators__WEBPACK_IMPORTED_MODULE_1__["ModuleDocList"][mod.module][func.name]);
            }
            if (mod.functions.length > 0) {
                this.Modules.push(nMod);
            }
        }
        this.output = this.mainDataService.helpViewData[0];
        this.activeModIndex = this.mainDataService.helpViewData[1];
    }
    HelpViewerComponent.prototype.ngOnDestroy = function () {
        this.mainDataService.helpViewData = [this.output, this.activeModIndex];
    };
    HelpViewerComponent.prototype.ngDoCheck = function () {
        if (this.mainDataService.helpView[1] === true) {
            this.output = this.mainDataService.helpView[2];
            this.mainDataService.togglePageHelp(false);
        }
    };
    HelpViewerComponent.prototype.openHelpMenu = function (e) {
        var stl = document.getElementById('helpMenu').style;
        if (!stl.display || stl.display === 'none') {
            stl.display = 'block';
        }
        else {
            stl.display = 'none';
        }
        e.stopPropagation();
    };
    HelpViewerComponent.prototype.getActiveModule = function () {
        if (this.output) {
            return '';
        }
        if (this.activeModIndex === '') {
            return '';
        }
        return this.Modules[this.activeModIndex].module.toUpperCase();
    };
    HelpViewerComponent.prototype.getFuncs = function () {
        if (this.activeModIndex === '') {
            return [];
        }
        return this.Modules[this.activeModIndex].functions;
    };
    HelpViewerComponent.prototype.switchHelp = function (mod) {
        this.output = undefined;
        this.activeModIndex = mod;
    };
    HelpViewerComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'help-viewer',
            template: __webpack_require__(/*! ./help-viewer.component.html */ "./src/app/model-viewers/all-viewers/help-viewer/help-viewer.component.html"),
            styles: [__webpack_require__(/*! ./help-viewer.component.scss */ "./src/app/model-viewers/all-viewers/help-viewer/help-viewer.component.scss")]
        }),
        __metadata("design:paramtypes", [_shared_services__WEBPACK_IMPORTED_MODULE_2__["DataService"]])
    ], HelpViewerComponent);
    return HelpViewerComponent;
}());



/***/ }),

/***/ "./src/app/model-viewers/model-viewers-container.component.html":
/*!**********************************************************************!*\
  !*** ./src/app/model-viewers/model-viewers-container.component.html ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class='viewers-container'>  \r\n\r\n    <div class='container__header'>\r\n        <div class=\"header-btn-group\">\r\n            <button class='btn' mat-icon-button *ngFor='let view of Viewers;' id='{{view.name}}'\r\n            [class.active]='view.name == activeView.name' (click)='updateView(view)' title='{{view.name}}'>\r\n                <mat-icon [svgIcon]='\"c\"+view.name'></mat-icon>\r\n            </button>\r\n        </div>\r\n    </div>\r\n\r\n    <div class='content__panel'>\r\n        <ng-container #vc></ng-container>\r\n    </div>\r\n\r\n</div>"

/***/ }),

/***/ "./src/app/model-viewers/model-viewers-container.component.scss":
/*!**********************************************************************!*\
  !*** ./src/app/model-viewers/model-viewers-container.component.scss ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".viewers-container {\n  position: relative;\n  display: block;\n  height: 100%;\n  overflow: hidden; }\n  .viewers-container .container__header {\n    position: absolute;\n    left: 0;\n    top: 0;\n    display: flex;\n    background-color: transparent;\n    height: 40px;\n    padding: 0px;\n    margin: 0px; }\n  .viewers-container .container__header .header-btn-group {\n      height: 40px;\n      padding: 0px;\n      margin: 0px;\n      overflow: hidden;\n      background-color: transparent;\n      z-index: 1; }\n  .viewers-container .content__panel {\n    background-color: transparent;\n    width: 100%;\n    height: 100%;\n    overflow: hidden;\n    padding: 0px;\n    margin: 0px; }\n  .viewers-container button {\n    display: inline-block;\n    vertical-align: bottom;\n    background-color: transparent;\n    color: #808080;\n    border: none;\n    outline: none;\n    cursor: pointer;\n    padding: 0px;\n    width: 34px;\n    height: 34px;\n    transition: 0.3s;\n    font-size: 14px; }\n  .viewers-container button:hover {\n      color: #00006d; }\n  .viewers-container button.active {\n      color: #00006d; }\n\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kZWwtdmlld2Vycy9DOlxcRHJvcGJveFxcRmlsZXNcXFNvZnR3YXJlXFxHaXRIdWJcXGRlc2lnbi1hdXRvbWF0aW9uXFxtb2JpdXMtcGFyYW1ldHJpYy1tb2RlbGxlci9zcmNcXGFwcFxcbW9kZWwtdmlld2Vyc1xcbW9kZWwtdmlld2Vycy1jb250YWluZXIuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL21vZGVsLXZpZXdlcnMvQzpcXERyb3Bib3hcXEZpbGVzXFxTb2Z0d2FyZVxcR2l0SHViXFxkZXNpZ24tYXV0b21hdGlvblxcbW9iaXVzLXBhcmFtZXRyaWMtbW9kZWxsZXIvc3JjXFxzY3NzXFx2YXJpYWJsZXMuc2NzcyIsInNyYy9hcHAvbW9kZWwtdmlld2Vycy9DOlxcRHJvcGJveFxcRmlsZXNcXFNvZnR3YXJlXFxHaXRIdWJcXGRlc2lnbi1hdXRvbWF0aW9uXFxtb2JpdXMtcGFyYW1ldHJpYy1tb2RlbGxlci9zcmNcXHNjc3NcXGNvbG9ycy5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUtBO0VBQ0ksa0JBQWtCO0VBQ2xCLGNBQWM7RUFDZCxZQUFZO0VBQ1osZ0JBQWdCLEVBQUE7RUFKcEI7SUFPUSxrQkFBa0I7SUFDbEIsT0FBTztJQUNQLE1BQU07SUFDTixhQUFhO0lBQ2IsNkJBQTZCO0lBQzdCLFlDZlk7SURnQlosWUFBWTtJQUNaLFdBQVcsRUFBQTtFQWRuQjtNQWtCWSxZQ3JCUTtNRHNCUixZQUFZO01BQ1osV0FBVztNQUNYLGdCQUFnQjtNQUNoQiw2QkFBNkI7TUFDN0IsVUFBVSxFQUFBO0VBdkJ0QjtJQTJCUSw2QkFBNkI7SUFDN0IsV0FBVztJQUNYLFlBQVk7SUFDWixnQkFBZ0I7SUFDaEIsWUFBWTtJQUNaLFdBQVcsRUFBQTtFQWhDbkI7SUFxQ1EscUJBQXFCO0lBQ3JCLHNCQUFzQjtJQUN0Qiw2QkFBNkI7SUFDN0IsY0U1Q1E7SUY2Q1IsWUFBWTtJQUNaLGFBQWE7SUFDYixlQUFlO0lBQ2YsWUFBWTtJQUNaLFdBQVc7SUFDWCxZQUFZO0lBQ1osZ0JBQWdCO0lBQ2hCLGVBQWUsRUFBQTtFQWhEdkI7TUFrRFksY0UzQ21CLEVBQUE7RUZQL0I7TUFxRFksY0U5Q21CLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9tb2RlbC12aWV3ZXJzL21vZGVsLXZpZXdlcnMtY29udGFpbmVyLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiQGltcG9ydCAnfnNjc3MvY29sb3JzJztcclxuQGltcG9ydCAnfnNjc3MvdmFyaWFibGVzJztcclxuXHJcbi8vIHRoZSBob3N0XHJcblxyXG4udmlld2Vycy1jb250YWluZXJ7XHJcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICBkaXNwbGF5OiBibG9jaztcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIG92ZXJmbG93OiBoaWRkZW47XHJcblxyXG4gICAgLmNvbnRhaW5lcl9faGVhZGVye1xyXG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgICBsZWZ0OiAwO1xyXG4gICAgICAgIHRvcDogMDtcclxuICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xyXG4gICAgICAgIGhlaWdodDogJGhlYWRlci1oZWlnaHQ7XHJcbiAgICAgICAgcGFkZGluZzogMHB4O1xyXG4gICAgICAgIG1hcmdpbjogMHB4O1xyXG4gICAgXHJcbiAgICAgICAgLmhlYWRlci1idG4tZ3JvdXAge1xyXG4gICAgICAgICAgICAvL2Rpc3BsYXk6IGlubGluZTtcclxuICAgICAgICAgICAgaGVpZ2h0OiAkaGVhZGVyLWhlaWdodDtcclxuICAgICAgICAgICAgcGFkZGluZzogMHB4O1xyXG4gICAgICAgICAgICBtYXJnaW46IDBweDtcclxuICAgICAgICAgICAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XHJcbiAgICAgICAgICAgIHotaW5kZXg6IDE7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgLmNvbnRlbnRfX3BhbmVse1xyXG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xyXG4gICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgIGhlaWdodDogMTAwJTsgXHJcbiAgICAgICAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICAgICAgICBwYWRkaW5nOiAwcHg7XHJcbiAgICAgICAgbWFyZ2luOiAwcHg7XHJcbiAgICBcclxuICAgICAgICAvL3BhZGRpbmc6IDEwcHggMTVweDtcclxuICAgIH1cclxuICAgIGJ1dHRvbiB7XHJcbiAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgICAgIHZlcnRpY2FsLWFsaWduOiBib3R0b207XHJcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XHJcbiAgICAgICAgY29sb3I6ICRjb2xvcjE7XHJcbiAgICAgICAgYm9yZGVyOiBub25lO1xyXG4gICAgICAgIG91dGxpbmU6IG5vbmU7XHJcbiAgICAgICAgY3Vyc29yOiBwb2ludGVyO1xyXG4gICAgICAgIHBhZGRpbmc6IDBweDtcclxuICAgICAgICB3aWR0aDogMzRweDtcclxuICAgICAgICBoZWlnaHQ6IDM0cHg7XHJcbiAgICAgICAgdHJhbnNpdGlvbjogMC4zcztcclxuICAgICAgICBmb250LXNpemU6IDE0cHg7XHJcbiAgICAgICAgJjpob3ZlciB7XHJcbiAgICAgICAgICAgIGNvbG9yOiRzZWxlY3RlZC1jb2xvcjtcclxuICAgICAgICB9XHJcbiAgICAgICAgJi5hY3RpdmUge1xyXG4gICAgICAgICAgICBjb2xvcjogJHNlbGVjdGVkLWNvbG9yO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbn1cclxuXHJcblxyXG4iLCIkcGFkZGluZzogNDBweDsgLy8gPyBub3QgdXNlZFxyXG4kc21hbGwtcGFkZGluZzogMTVweDtcclxuJGhlYWRlci1oZWlnaHQ6IDQwcHg7XHJcblxyXG4kZnNpemUxOiAxNXB4O1xyXG4kZnNpemUyOiAxMnB4O1xyXG4kZnNpemUzOiAzMHB4O1xyXG5cclxuJHBvcnQtc2l6ZTogMTVweDtcclxuJGRlZmF1bHQtc2lkZS1wYWRkaW5nOiAxNXB4O1xyXG5cclxuJGRpc2FibGVkLW9wYWNpdHk6IDAuNDsiLCJcclxuJGNvbG9yMTogIzgwODA4MDtcclxuJGNvbG9yMjogIzk5OTk5OTtcclxuJGNvbG9yMzogI0IzQjNCMzsgXHJcbiRjb2xvcjQ6ICNDQ0NDQ0M7XHJcbiRjb2xvcjU6ICNFNkU2RTY7XHJcbiRjb2xvcjUtNTogcmdiKDI0NSwgMjQ1LCAyNDUpO1xyXG4kY29sb3I2OiByZ2IoMjUwLCAyNTAsIDI1MSk7XHJcblxyXG4kY29sb3I3OiB3aGl0ZTtcclxuJGNvbG9yODogIzM3MzczNztcclxuXHJcbiRzZWxlY3RlZC1jb2xvcjogcmdiKDAsIDAsIDEwOSk7XHJcbiRob3Zlci1jb2xvcjogJGNvbG9yMjtcclxuXHJcbiRlcnJvci1jb2xvcjogI0U5NDg1ODsgLy9waW5rLXJlZFxyXG4kZXJyb3ItY29sb3ItbHQ6IHJnYigyNTUsIDIyMCwgMjI0KTtcclxuJHBjb2xvcjI6ICNGM0EzMkE7IC8vb3JhbmdlLXllbGxvd1xyXG4kcHJpbnQtY29sb3I6IHJnYigxMzAsIDE5MSwgMTEwKTsgLy9saWdodGdyZWVuXHJcbiRwcmludC1jb2xvci1sdDogcmdiKDIzMCwgMjU1LCAyMjEpO1xyXG4kc2VsZWN0R2VvbS1jb2xvcjogcmdiKDI1NSwgMTc0LCAwKTsgLy8gbGlnaHQgb3JhbmdlXHJcbiRzZWxlY3RHZW9tLWNvbG9yLWx0OiByZ2IoMjU1LCAyMjUsIDE2MCk7XHJcblxyXG4vLyAkcHJvZC1iYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMjUwLDI1MCwyNTApO1xyXG4vLyAkYmFja2dyb3VuZC1jb2xvcjogcmdiKDIyMCwyMjAsMjIwKTtcclxuJGZ1bmN0aW9uLXRleHQtY29sb3I6IHJnYigxOTAsIDE0MCwgMzApO1xyXG4kZnVuY3Rpb24tdGV4dC1jb2xvcjI6IHJnYigxOCwgMTI2LCAxMzYpO1xyXG4kYmFzaWMtZnVuY3Rpb24tdGV4dC1jb2xvcjogcmdiKDIwMCwgNzAsIDE1MCk7XHJcbiRjb21tZW50LWNvbG9yOiBkYXJrZ3JlZW47XHJcbiJdfQ== */"

/***/ }),

/***/ "./src/app/model-viewers/model-viewers-container.component.ts":
/*!********************************************************************!*\
  !*** ./src/app/model-viewers/model-viewers-container.component.ts ***!
  \********************************************************************/
/*! exports provided: DataViewersContainerComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DataViewersContainerComponent", function() { return DataViewersContainerComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _model_viewers_config__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./model-viewers.config */ "./src/app/model-viewers/model-viewers.config.ts");
/* harmony import */ var _services__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @services */ "./src/app/shared/services/index.ts");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};




/**
 * A component that contains all the viewers.
 * This component is used in /app/appmodule/app.component.html
 */
var DataViewersContainerComponent = /** @class */ (function () {
    /**
     * Construct the viewer container.
     * @param injector
     * @param r
     */
    function DataViewersContainerComponent(injector, r, dataService, router) {
        this.injector = injector;
        this.r = r;
        this.dataService = dataService;
        this.router = router;
        this.views = [];
        this.Viewers = _model_viewers_config__WEBPACK_IMPORTED_MODULE_1__["Viewers"];
        if (this.router.url.split('?')[0] === '/publish') {
            this.Viewers = [];
            var viewCheck = this.router.url.split('viewer=');
            if (viewCheck.length === 0) {
                viewCheck = '';
            }
            else {
                viewCheck = viewCheck[1];
            }
            for (var _i = 0, Viewers_1 = _model_viewers_config__WEBPACK_IMPORTED_MODULE_1__["Viewers"]; _i < Viewers_1.length; _i++) {
                var view = Viewers_1[_i];
                if (view.component.name === 'HelpViewerComponent') {
                    continue;
                }
                if (viewCheck === '0' && view.component.name === 'GICesiumViewerComponent') {
                    continue;
                }
                if (viewCheck === '1' && view.component.name === 'GIViewerComponent') {
                    continue;
                }
                this.Viewers.push(view);
            }
        }
    }
    /**
     * ngOnInit
     */
    DataViewersContainerComponent.prototype.ngOnInit = function () {
        this.activeView = this.Viewers[0];
        if (this.dataService.activeView) {
            for (var _i = 0, _a = this.Viewers; _i < _a.length; _i++) {
                var view = _a[_i];
                if (view.name === this.dataService.activeView) {
                    this.activeView = view;
                }
            }
        }
        this.updateView(this.activeView);
    };
    /**
     * ngOnDestroy
     */
    DataViewersContainerComponent.prototype.ngOnDestroy = function () {
        this.dataService.activeView = this.activeView.name;
        this.vc.clear();
        for (var view in this.views) {
            if (this.views[view]) {
                this.views[view].destroy();
            }
        }
    };
    /**
     * ngDoCheck
     */
    DataViewersContainerComponent.prototype.ngDoCheck = function () {
        if (this.dataService.helpView[0] === true) {
            var view = void 0;
            for (var _i = 0, _a = this.Viewers; _i < _a.length; _i++) {
                var v = _a[_i];
                if (v.name === 'Help') {
                    view = v;
                }
            }
            this.dataService.toggleViewHelp(false);
            this.updateView(view);
        }
        else {
            this.updateValue();
        }
    };
    /**
     * createView
     * @param view
     */
    DataViewersContainerComponent.prototype.createView = function (view) {
        var component = view.component;
        var factory = this.r.resolveComponentFactory(component);
        var componentRef = factory.create(this.injector);
        /*
        if (view.name != 'Console'){
            componentRef.instance["data"] = this.data;
        }
        */
        return componentRef;
    };
    /**
     * updateView
     * @param view
     */
    DataViewersContainerComponent.prototype.updateView = function (view) {
        this.activeView = view;
        if (this.views[this.activeView.name] === undefined) {
            this.views[this.activeView.name] = this.createView(view);
        }
        this.updateValue();
        this.vc.detach();
        this.vc.insert(this.views[this.activeView.name].hostView);
    };
    /**
     * updateValue
     */
    DataViewersContainerComponent.prototype.updateValue = function () {
        try {
            var componentRef = this.views[this.activeView.name];
            if (this.activeView.name === 'Help') {
                // componentRef.instance['output'] = this.dataService.helpView[1];
            }
            else if (this.activeView.name !== 'Console') {
                componentRef.instance['data'] = this.data;
                // } else {
                //     componentRef.instance['scrollcheck'] = true;
            }
        }
        catch (ex) {
            // console.log(`Active View not defined`);
        }
    };
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"])('vc', { read: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewContainerRef"] }),
        __metadata("design:type", _angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewContainerRef"])
    ], DataViewersContainerComponent.prototype, "vc", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", Object)
    ], DataViewersContainerComponent.prototype, "data", void 0);
    DataViewersContainerComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            // tslint:disable-next-line:component-selector
            selector: 'model-viewers-container',
            template: __webpack_require__(/*! ./model-viewers-container.component.html */ "./src/app/model-viewers/model-viewers-container.component.html"),
            styles: [__webpack_require__(/*! ./model-viewers-container.component.scss */ "./src/app/model-viewers/model-viewers-container.component.scss")]
        }),
        __metadata("design:paramtypes", [_angular_core__WEBPACK_IMPORTED_MODULE_0__["Injector"], _angular_core__WEBPACK_IMPORTED_MODULE_0__["ComponentFactoryResolver"], _services__WEBPACK_IMPORTED_MODULE_2__["DataService"], _angular_router__WEBPACK_IMPORTED_MODULE_3__["Router"]])
    ], DataViewersContainerComponent);
    return DataViewersContainerComponent;
}());



/***/ }),

/***/ "./src/app/model-viewers/model-viewers-container.module.ts":
/*!*****************************************************************!*\
  !*** ./src/app/model-viewers/model-viewers-container.module.ts ***!
  \*****************************************************************/
/*! exports provided: DataViewersContainer */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DataViewersContainer", function() { return DataViewersContainer; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/fesm5/common.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm5/forms.js");
/* harmony import */ var _model_viewers_container_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./model-viewers-container.component */ "./src/app/model-viewers/model-viewers-container.component.ts");
/* harmony import */ var _model_viewers_config__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./model-viewers.config */ "./src/app/model-viewers/model-viewers.config.ts");
/* harmony import */ var _all_viewers_console_viewer_console_viewer_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./all-viewers/console-viewer/console-viewer.component */ "./src/app/model-viewers/all-viewers/console-viewer/console-viewer.component.ts");
/* harmony import */ var _all_viewers_help_viewer_help_viewer_component__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./all-viewers/help-viewer/help-viewer.component */ "./src/app/model-viewers/all-viewers/help-viewer/help-viewer.component.ts");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/material */ "./node_modules/@angular/material/esm5/material.es5.js");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};





// viewers


// import { GIViewerModule } from './all-viewers/gi-viewer/gi-viewer.module';

// import { ThreejsViewerComponent } from './viewers/gi-viewer/threejs/threejs-viewer.component';
// import { MobiusCesium } from './viewers/cesium-viewer/mobius-cesium.module';
// import { VisualiseComponent } from "./viewers/cesium-viewer/setting/visualise.component";
// import { AttributesComponent } from "./viewers/cesium-viewer/setting/attributes.copmponent";
/**
 * DataViewersContainer, NgModule
 */
var DataViewersContainer = /** @class */ (function () {
    /**
     * constructor
     */
    function DataViewersContainer() {
        // do nothing
    }
    DataViewersContainer = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["NgModule"])({
            declarations: [
                _model_viewers_container_component__WEBPACK_IMPORTED_MODULE_3__["DataViewersContainerComponent"],
                // TextViewerComponent,
                _all_viewers_console_viewer_console_viewer_component__WEBPACK_IMPORTED_MODULE_5__["ConsoleViewerComponent"],
                _all_viewers_help_viewer_help_viewer_component__WEBPACK_IMPORTED_MODULE_6__["HelpViewerComponent"],
            ],
            exports: [
                _model_viewers_container_component__WEBPACK_IMPORTED_MODULE_3__["DataViewersContainerComponent"]
            ],
            imports: [
                _angular_common__WEBPACK_IMPORTED_MODULE_1__["CommonModule"],
                _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormsModule"],
                _angular_material__WEBPACK_IMPORTED_MODULE_7__["MatIconModule"]
            ].concat(_model_viewers_config__WEBPACK_IMPORTED_MODULE_4__["VIEWER_MOD"]
            // SharedModule
            ),
            entryComponents: _model_viewers_config__WEBPACK_IMPORTED_MODULE_4__["VIEWER_ARR"].slice(),
            providers: []
        }),
        __metadata("design:paramtypes", [])
    ], DataViewersContainer);
    return DataViewersContainer;
}());



/***/ }),

/***/ "./src/app/model-viewers/model-viewers.config.ts":
/*!*******************************************************!*\
  !*** ./src/app/model-viewers/model-viewers.config.ts ***!
  \*******************************************************/
/*! exports provided: VIEWER_ARR, VIEWER_MOD, Viewers */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "VIEWER_ARR", function() { return VIEWER_ARR; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "VIEWER_MOD", function() { return VIEWER_MOD; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Viewers", function() { return Viewers; });
/* harmony import */ var _all_viewers_console_viewer_console_viewer_component__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./all-viewers/console-viewer/console-viewer.component */ "./src/app/model-viewers/all-viewers/console-viewer/console-viewer.component.ts");
/* harmony import */ var _all_viewers_help_viewer_help_viewer_component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./all-viewers/help-viewer/help-viewer.component */ "./src/app/model-viewers/all-viewers/help-viewer/help-viewer.component.ts");
/* harmony import */ var _all_viewers_gi_viewer_gi_viewer_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./all-viewers/gi-viewer/gi-viewer.component */ "./src/app/model-viewers/all-viewers/gi-viewer/gi-viewer.component.ts");
/* harmony import */ var _all_viewers_gi_viewer_gi_viewer__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./all-viewers/gi-viewer/gi-viewer */ "./src/app/model-viewers/all-viewers/gi-viewer/gi-viewer.ts");
/* harmony import */ var _all_viewers_gi_cesium_viewer_gi_cesium_viewer_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./all-viewers/gi-cesium-viewer/gi-cesium-viewer.component */ "./src/app/model-viewers/all-viewers/gi-cesium-viewer/gi-cesium-viewer.component.ts");
/* harmony import */ var _all_viewers_gi_cesium_viewer_gi_cesium_viewer__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./all-viewers/gi-cesium-viewer/gi-cesium-viewer */ "./src/app/model-viewers/all-viewers/gi-cesium-viewer/gi-cesium-viewer.ts");


// GI Threejs viewer


// GI Cesium viewer


// Old Cesium viewer - to be deleted
// import { MobiuscesiumComponent } from './all-viewers/cesium-viewer/mobius-cesium.component';
// import { MobiusCesium } from './all-viewers/cesium-viewer/mobius-cesium';
// Viewer Components array
var VIEWER_ARR = [
    _all_viewers_console_viewer_console_viewer_component__WEBPACK_IMPORTED_MODULE_0__["ConsoleViewerComponent"],
    _all_viewers_help_viewer_help_viewer_component__WEBPACK_IMPORTED_MODULE_1__["HelpViewerComponent"],
    // Step-1: Add Component here
    _all_viewers_gi_viewer_gi_viewer_component__WEBPACK_IMPORTED_MODULE_2__["GIViewerComponent"],
    _all_viewers_gi_cesium_viewer_gi_cesium_viewer_component__WEBPACK_IMPORTED_MODULE_4__["GICesiumViewerComponent"],
];
// Viewer modules array
var VIEWER_MOD = [
    // Step-2: Add Module here
    _all_viewers_gi_viewer_gi_viewer__WEBPACK_IMPORTED_MODULE_3__["GIViewerModule"],
    _all_viewers_gi_cesium_viewer_gi_cesium_viewer__WEBPACK_IMPORTED_MODULE_5__["GICesiumViewerModule"],
];
// Viewers
var Viewers = [
    // Step-3: Add Viewer Definition here: name, icon and component
    // The order of these views here will influence the order of the view appearing in the viewer header.
    { name: '3D Viewer', icon: undefined, component: _all_viewers_gi_viewer_gi_viewer_component__WEBPACK_IMPORTED_MODULE_2__["GIViewerComponent"] },
    { name: 'Geo Viewer', icon: undefined, component: _all_viewers_gi_cesium_viewer_gi_cesium_viewer_component__WEBPACK_IMPORTED_MODULE_4__["GICesiumViewerComponent"] },
    // { name: 'Mobius Cesium', icon: undefined, component: MobiuscesiumComponent },
    { name: 'Console', icon: undefined, component: _all_viewers_console_viewer_console_viewer_component__WEBPACK_IMPORTED_MODULE_0__["ConsoleViewerComponent"] },
    { name: 'Help', icon: undefined, component: _all_viewers_help_viewer_help_viewer_component__WEBPACK_IMPORTED_MODULE_1__["HelpViewerComponent"] }
];


/***/ }),

/***/ "./src/app/shared/checkMissingProd.ts":
/*!********************************************!*\
  !*** ./src/app/shared/checkMissingProd.ts ***!
  \********************************************/
/*! exports provided: checkMissingProd */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "checkMissingProd", function() { return checkMissingProd; });
/* harmony import */ var _models_procedure__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @models/procedure */ "./src/app/shared/models/procedure/index.ts");
/* harmony import */ var _decorators__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./decorators */ "./src/app/shared/decorators/index.ts");
/* harmony import */ var _modules__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @modules */ "./src/assets/core/modules/index.ts");
/* harmony import */ var _assets_core_depreciated_json__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @assets/core/depreciated.json */ "./src/assets/core/depreciated.json");
var _assets_core_depreciated_json__WEBPACK_IMPORTED_MODULE_3___namespace = /*#__PURE__*/__webpack_require__.t(/*! @assets/core/depreciated.json */ "./src/assets/core/depreciated.json", 1);
/* harmony import */ var circular_json__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! circular-json */ "./node_modules/circular-json/build/circular-json.node.js");
/* harmony import */ var circular_json__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(circular_json__WEBPACK_IMPORTED_MODULE_4__);





function checkMissingProd(prodList) {
    var check = true;
    for (var _i = 0, prodList_1 = prodList; _i < prodList_1.length; _i++) {
        var prod = prodList_1[_i];
        if (prod.children) {
            if (!checkMissingProd(prod.children)) {
                check = false;
            }
        }
        prod.hasError = false;
        if (prod.type !== _models_procedure__WEBPACK_IMPORTED_MODULE_0__["ProcedureTypes"].Function) {
            continue;
        }
        // @ts-ignore
        for (var _a = 0, _b = _assets_core_depreciated_json__WEBPACK_IMPORTED_MODULE_3__; _a < _b.length; _a++) {
            var dpFn = _b[_a];
            if (dpFn.old_func.name.toLowerCase() === prod.meta.name.toLowerCase() &&
                dpFn.old_func.module.toLowerCase() === prod.meta.module.toLowerCase()) {
                var data = void 0;
                for (var _c = 0, ModuleList_1 = _decorators__WEBPACK_IMPORTED_MODULE_1__["ModuleList"]; _c < ModuleList_1.length; _c++) {
                    var mod = ModuleList_1[_c];
                    if (mod.module.toLowerCase() === dpFn.new_func.module.toLowerCase()) {
                        for (var _d = 0, _e = mod.functions; _d < _e.length; _d++) {
                            var fn = _e[_d];
                            if (fn.name.toLowerCase() === dpFn.new_func.name.toLowerCase()) {
                                data = circular_json__WEBPACK_IMPORTED_MODULE_4__["parse"](circular_json__WEBPACK_IMPORTED_MODULE_4__["stringify"](fn));
                                break;
                            }
                        }
                        break;
                    }
                }
                if (dpFn.old_func.name === dpFn.new_func.name && prod.argCount === (data.argCount + 1)) {
                    break;
                }
                prod.meta = { module: data.module, name: data.name };
                prod.argCount = data.argCount + 1;
                var returnArg = { name: 'var_name', value: undefined, default: undefined };
                if (!data.hasReturn) {
                    returnArg = { name: '__none__', value: undefined, default: undefined };
                }
                else if (prod.args[0].name !== '__none__') {
                    returnArg.value = prod.args[0].value;
                    returnArg.default = prod.args[0].default;
                }
                for (var _f = 0, _g = data.args; _f < _g.length; _f++) {
                    var arg = _g[_f];
                    var UpdateCheck = false;
                    for (var updatedArg in dpFn.new_func.values) {
                        if (updatedArg.toLowerCase() === arg.name.toLowerCase()) {
                            arg.value = dpFn.new_func.values[updatedArg];
                            UpdateCheck = true;
                            break;
                        }
                    }
                    if (UpdateCheck) {
                        continue;
                    }
                    for (var _h = 0, _j = prod.args; _h < _j.length; _h++) {
                        var oldArg = _j[_h];
                        if (arg.name.toLowerCase() === oldArg.name.toLowerCase()) {
                            arg.value = oldArg.value;
                            arg.default = oldArg.default;
                            break;
                        }
                    }
                }
                prod.args = [returnArg].concat(data.args);
                break;
            }
        }
        if (!_modules__WEBPACK_IMPORTED_MODULE_2__[prod.meta.module] || !_modules__WEBPACK_IMPORTED_MODULE_2__[prod.meta.module][prod.meta.name]) {
            prod.hasError = true;
            check = false;
        }
    }
    return check;
}


/***/ }),

/***/ "./src/app/shared/components/add-components/add_input.component.ts":
/*!*************************************************************************!*\
  !*** ./src/app/shared/components/add-components/add_input.component.ts ***!
  \*************************************************************************/
/*! exports provided: AddInputComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AddInputComponent", function() { return AddInputComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};

var AddInputComponent = /** @class */ (function () {
    function AddInputComponent() {
    }
    AddInputComponent.prototype.addInput = function () {
        return;
        /*
        let newPort = PortUtils.getNewInput();
        newPort.parentNode = this.node;
        this.node.input.push(newPort);
        */
    };
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", Object)
    ], AddInputComponent.prototype, "node", void 0);
    AddInputComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'add-input',
            template: "<button (click)='addInput()'>AddInput</button>"
        }),
        __metadata("design:paramtypes", [])
    ], AddInputComponent);
    return AddInputComponent;
}());



/***/ }),

/***/ "./src/app/shared/components/add-components/add_node.component.ts":
/*!************************************************************************!*\
  !*** ./src/app/shared/components/add-components/add_node.component.ts ***!
  \************************************************************************/
/*! exports provided: AddNodeComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AddNodeComponent", function() { return AddNodeComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _models_node__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @models/node */ "./src/app/shared/models/node/index.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};


var AddNodeComponent = /** @class */ (function () {
    function AddNodeComponent() {
    }
    AddNodeComponent.prototype.addNode = function () { this.flowchart.nodes.push(_models_node__WEBPACK_IMPORTED_MODULE_1__["NodeUtils"].getNewNode()); };
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", Object)
    ], AddNodeComponent.prototype, "flowchart", void 0);
    AddNodeComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'add-node',
            template: "<button (click)='addNode()'>AddNode</button>"
        }),
        __metadata("design:paramtypes", [])
    ], AddNodeComponent);
    return AddNodeComponent;
}());



/***/ }),

/***/ "./src/app/shared/components/add-components/add_output.component.ts":
/*!**************************************************************************!*\
  !*** ./src/app/shared/components/add-components/add_output.component.ts ***!
  \**************************************************************************/
/*! exports provided: AddOutputComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AddOutputComponent", function() { return AddOutputComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};

var AddOutputComponent = /** @class */ (function () {
    function AddOutputComponent() {
    }
    AddOutputComponent.prototype.addOutput = function () {
        return;
        /*
        let newPort = PortUtils.getNewOutput();
        newPort.parentNode = this.node;
        this.node.output.push(newPort);
        */
    };
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", Object)
    ], AddOutputComponent.prototype, "node", void 0);
    AddOutputComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'add-output',
            template: "<button (click)='addOutput()'>AddOutput</button>"
        }),
        __metadata("design:paramtypes", [])
    ], AddOutputComponent);
    return AddOutputComponent;
}());



/***/ }),

/***/ "./src/app/shared/components/chrome/chrome.component.html":
/*!****************************************************************!*\
  !*** ./src/app/shared/components/chrome/chrome.component.html ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div id='chrome-only'>\r\n    Möbius Modeller only works on Chrome. Please install Chrome.\r\n</div>\r\n"

/***/ }),

/***/ "./src/app/shared/components/chrome/chrome.component.scss":
/*!****************************************************************!*\
  !*** ./src/app/shared/components/chrome/chrome.component.scss ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "panel-header button {\n  display: inline-block;\n  vertical-align: bottom;\n  background-color: transparent;\n  color: #808080;\n  border: none;\n  outline: none;\n  cursor: pointer;\n  padding: 0px;\n  width: 34px;\n  height: 34px;\n  transition: 0.3s;\n  font-size: 15px; }\n\npublish-header button {\n  display: inline-block;\n  vertical-align: bottom;\n  background-color: transparent;\n  color: #808080;\n  border: none;\n  outline: none;\n  cursor: pointer;\n  padding: 0px;\n  width: 34px;\n  height: 34px;\n  transition: 0.3s;\n  font-size: 15px; }\n\nbutton:hover {\n  color: #00006d; }\n\npanel-header button.active {\n  color: #00006d; }\n\npublish-header button.active {\n  color: #00006d; }\n\n#chrome-only {\n  position: fixed;\n  display: none;\n  width: 100%;\n  height: 100%;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: #E6E6E6;\n  z-index: 1000;\n  pointer-events: all;\n  cursor: default; }\n\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc2hhcmVkL2NvbXBvbmVudHMvY2hyb21lL0M6XFxEcm9wYm94XFxGaWxlc1xcU29mdHdhcmVcXEdpdEh1YlxcZGVzaWduLWF1dG9tYXRpb25cXG1vYml1cy1wYXJhbWV0cmljLW1vZGVsbGVyL3NyY1xcc2Nzc1xcaGVhZGVyLWJ1dHRvbi5zY3NzIiwic3JjL2FwcC9zaGFyZWQvY29tcG9uZW50cy9jaHJvbWUvQzpcXERyb3Bib3hcXEZpbGVzXFxTb2Z0d2FyZVxcR2l0SHViXFxkZXNpZ24tYXV0b21hdGlvblxcbW9iaXVzLXBhcmFtZXRyaWMtbW9kZWxsZXIvc3JjXFxzY3NzXFxjb2xvcnMuc2NzcyIsInNyYy9hcHAvc2hhcmVkL2NvbXBvbmVudHMvY2hyb21lL0M6XFxEcm9wYm94XFxGaWxlc1xcU29mdHdhcmVcXEdpdEh1YlxcZGVzaWduLWF1dG9tYXRpb25cXG1vYml1cy1wYXJhbWV0cmljLW1vZGVsbGVyL3NyY1xcc2Nzc1xcdmFyaWFibGVzLnNjc3MiLCJzcmMvYXBwL3NoYXJlZC9jb21wb25lbnRzL2Nocm9tZS9DOlxcRHJvcGJveFxcRmlsZXNcXFNvZnR3YXJlXFxHaXRIdWJcXGRlc2lnbi1hdXRvbWF0aW9uXFxtb2JpdXMtcGFyYW1ldHJpYy1tb2RlbGxlci9zcmNcXGFwcFxcc2hhcmVkXFxjb21wb25lbnRzXFxjaHJvbWVcXGNocm9tZS5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFHQTtFQUNJLHFCQUFxQjtFQUNyQixzQkFBc0I7RUFDdEIsNkJBQTZCO0VBQzdCLGNDTlk7RURPWixZQUFZO0VBQ1osYUFBYTtFQUNiLGVBQWU7RUFDZixZQUFZO0VBQ1osV0FBVztFQUNYLFlBQVk7RUFDWixnQkFBZ0I7RUFDaEIsZUVYUyxFQUFBOztBRmNiO0VBQ0kscUJBQXFCO0VBQ3JCLHNCQUFzQjtFQUN0Qiw2QkFBNkI7RUFDN0IsY0NyQlk7RURzQlosWUFBWTtFQUNaLGFBQWE7RUFDYixlQUFlO0VBQ2YsWUFBWTtFQUNaLFdBQVc7RUFDWCxZQUFZO0VBQ1osZ0JBQWdCO0VBQ2hCLGVFMUJTLEVBQUE7O0FGNkJiO0VBQ0ksY0N0QjJCLEVBQUE7O0FEeUIvQjtFQUNJLGNDMUIyQixFQUFBOztBRDZCL0I7RUFDSSxjQzlCMkIsRUFBQTs7QUVUL0I7RUFDSSxlQUFlO0VBQ2YsYUFBYTtFQUNiLFdBQVc7RUFDWCxZQUFZO0VBQ1osTUFBTTtFQUNOLE9BQU87RUFDUCxRQUFRO0VBQ1IsU0FBUztFQUNULHlCRlBZO0VFUVosYUFBYTtFQUNiLG1CQUFtQjtFQUNuQixlQUFlLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9zaGFyZWQvY29tcG9uZW50cy9jaHJvbWUvY2hyb21lLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiQGltcG9ydCAnfnNjc3MvdmFyaWFibGVzJztcclxuQGltcG9ydCAnfnNjc3MvY29sb3JzJztcclxuXHJcbnBhbmVsLWhlYWRlciBidXR0b24ge1xyXG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgdmVydGljYWwtYWxpZ246IGJvdHRvbTtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xyXG4gICAgY29sb3I6ICRjb2xvcjE7XHJcbiAgICBib3JkZXI6IG5vbmU7XHJcbiAgICBvdXRsaW5lOiBub25lO1xyXG4gICAgY3Vyc29yOiBwb2ludGVyO1xyXG4gICAgcGFkZGluZzogMHB4O1xyXG4gICAgd2lkdGg6IDM0cHg7XHJcbiAgICBoZWlnaHQ6IDM0cHg7XHJcbiAgICB0cmFuc2l0aW9uOiAwLjNzO1xyXG4gICAgZm9udC1zaXplOiAkZnNpemUxO1xyXG59XHJcblxyXG5wdWJsaXNoLWhlYWRlciBidXR0b24ge1xyXG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgdmVydGljYWwtYWxpZ246IGJvdHRvbTtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xyXG4gICAgY29sb3I6ICRjb2xvcjE7XHJcbiAgICBib3JkZXI6IG5vbmU7XHJcbiAgICBvdXRsaW5lOiBub25lO1xyXG4gICAgY3Vyc29yOiBwb2ludGVyO1xyXG4gICAgcGFkZGluZzogMHB4O1xyXG4gICAgd2lkdGg6IDM0cHg7XHJcbiAgICBoZWlnaHQ6IDM0cHg7XHJcbiAgICB0cmFuc2l0aW9uOiAwLjNzO1xyXG4gICAgZm9udC1zaXplOiAkZnNpemUxO1xyXG59XHJcblxyXG5idXR0b246aG92ZXIge1xyXG4gICAgY29sb3I6JHNlbGVjdGVkLWNvbG9yO1xyXG59XHJcblxyXG5wYW5lbC1oZWFkZXIgYnV0dG9uLmFjdGl2ZSB7XHJcbiAgICBjb2xvcjogJHNlbGVjdGVkLWNvbG9yO1xyXG59XHJcblxyXG5wdWJsaXNoLWhlYWRlciBidXR0b24uYWN0aXZlIHtcclxuICAgIGNvbG9yOiAkc2VsZWN0ZWQtY29sb3I7XHJcbn1cclxuIiwiXHJcbiRjb2xvcjE6ICM4MDgwODA7XHJcbiRjb2xvcjI6ICM5OTk5OTk7XHJcbiRjb2xvcjM6ICNCM0IzQjM7IFxyXG4kY29sb3I0OiAjQ0NDQ0NDO1xyXG4kY29sb3I1OiAjRTZFNkU2O1xyXG4kY29sb3I1LTU6IHJnYigyNDUsIDI0NSwgMjQ1KTtcclxuJGNvbG9yNjogcmdiKDI1MCwgMjUwLCAyNTEpO1xyXG5cclxuJGNvbG9yNzogd2hpdGU7XHJcbiRjb2xvcjg6ICMzNzM3Mzc7XHJcblxyXG4kc2VsZWN0ZWQtY29sb3I6IHJnYigwLCAwLCAxMDkpO1xyXG4kaG92ZXItY29sb3I6ICRjb2xvcjI7XHJcblxyXG4kZXJyb3ItY29sb3I6ICNFOTQ4NTg7IC8vcGluay1yZWRcclxuJGVycm9yLWNvbG9yLWx0OiByZ2IoMjU1LCAyMjAsIDIyNCk7XHJcbiRwY29sb3IyOiAjRjNBMzJBOyAvL29yYW5nZS15ZWxsb3dcclxuJHByaW50LWNvbG9yOiByZ2IoMTMwLCAxOTEsIDExMCk7IC8vbGlnaHRncmVlblxyXG4kcHJpbnQtY29sb3ItbHQ6IHJnYigyMzAsIDI1NSwgMjIxKTtcclxuJHNlbGVjdEdlb20tY29sb3I6IHJnYigyNTUsIDE3NCwgMCk7IC8vIGxpZ2h0IG9yYW5nZVxyXG4kc2VsZWN0R2VvbS1jb2xvci1sdDogcmdiKDI1NSwgMjI1LCAxNjApO1xyXG5cclxuLy8gJHByb2QtYmFja2dyb3VuZC1jb2xvcjogcmdiKDI1MCwyNTAsMjUwKTtcclxuLy8gJGJhY2tncm91bmQtY29sb3I6IHJnYigyMjAsMjIwLDIyMCk7XHJcbiRmdW5jdGlvbi10ZXh0LWNvbG9yOiByZ2IoMTkwLCAxNDAsIDMwKTtcclxuJGZ1bmN0aW9uLXRleHQtY29sb3IyOiByZ2IoMTgsIDEyNiwgMTM2KTtcclxuJGJhc2ljLWZ1bmN0aW9uLXRleHQtY29sb3I6IHJnYigyMDAsIDcwLCAxNTApO1xyXG4kY29tbWVudC1jb2xvcjogZGFya2dyZWVuO1xyXG4iLCIkcGFkZGluZzogNDBweDsgLy8gPyBub3QgdXNlZFxyXG4kc21hbGwtcGFkZGluZzogMTVweDtcclxuJGhlYWRlci1oZWlnaHQ6IDQwcHg7XHJcblxyXG4kZnNpemUxOiAxNXB4O1xyXG4kZnNpemUyOiAxMnB4O1xyXG4kZnNpemUzOiAzMHB4O1xyXG5cclxuJHBvcnQtc2l6ZTogMTVweDtcclxuJGRlZmF1bHQtc2lkZS1wYWRkaW5nOiAxNXB4O1xyXG5cclxuJGRpc2FibGVkLW9wYWNpdHk6IDAuNDsiLCJAaW1wb3J0ICd+c2Nzcy9jb2xvcnMnO1xyXG5AaW1wb3J0ICd+c2Nzcy9oZWFkZXItYnV0dG9uJztcclxuXHJcbiNjaHJvbWUtb25seSB7XHJcbiAgICBwb3NpdGlvbjogZml4ZWQ7XHJcbiAgICBkaXNwbGF5OiBub25lO1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgICB0b3A6IDA7XHJcbiAgICBsZWZ0OiAwO1xyXG4gICAgcmlnaHQ6IDA7XHJcbiAgICBib3R0b206IDA7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkY29sb3I1O1xyXG4gICAgei1pbmRleDogMTAwMDtcclxuICAgIHBvaW50ZXItZXZlbnRzOiBhbGw7XHJcbiAgICBjdXJzb3I6IGRlZmF1bHQ7XHJcbiAgfSJdfQ== */"

/***/ }),

/***/ "./src/app/shared/components/chrome/chrome.component.ts":
/*!**************************************************************!*\
  !*** ./src/app/shared/components/chrome/chrome.component.ts ***!
  \**************************************************************/
/*! exports provided: ChromeComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ChromeComponent", function() { return ChromeComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};

var ChromeComponent = /** @class */ (function () {
    function ChromeComponent() {
    }
    ChromeComponent.prototype.ngAfterViewInit = function () {
        // @ts-ignore
        var isChromium = window.chrome;
        var winNav = window.navigator;
        var vendorName = winNav.vendor;
        // @ts-ignore
        var isOpera = typeof window.opr !== 'undefined';
        var isIEedge = winNav.userAgent.indexOf('Edge') > -1;
        var isIOSChrome = winNav.userAgent.match('CriOS');
        if (isIOSChrome) {
        }
        else if (isChromium !== null &&
            typeof isChromium !== 'undefined' &&
            vendorName === 'Google Inc.' &&
            isOpera === false &&
            isIEedge === false) {
        }
        else {
            document.getElementById('chrome-only').style.display = 'block';
        }
    };
    ChromeComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'chrome',
            template: __webpack_require__(/*! ./chrome.component.html */ "./src/app/shared/components/chrome/chrome.component.html"),
            styles: [__webpack_require__(/*! ./chrome.component.scss */ "./src/app/shared/components/chrome/chrome.component.scss")]
        }),
        __metadata("design:paramtypes", [])
    ], ChromeComponent);
    return ChromeComponent;
}());



/***/ }),

/***/ "./src/app/shared/components/execute/execute.component.html":
/*!******************************************************************!*\
  !*** ./src/app/shared/components/execute/execute.component.html ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<button id='executeButton' class=\"btn\" mat-icon-button title=\"Execute\" (click)=\"execute()\">\r\n    <mat-icon>play_circle_outline</mat-icon>\r\n</button>\r\n"

/***/ }),

/***/ "./src/app/shared/components/execute/execute.component.scss":
/*!******************************************************************!*\
  !*** ./src/app/shared/components/execute/execute.component.scss ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "panel-header button {\n  display: inline-block;\n  vertical-align: bottom;\n  background-color: transparent;\n  color: #808080;\n  border: none;\n  outline: none;\n  cursor: pointer;\n  padding: 0px;\n  width: 34px;\n  height: 34px;\n  transition: 0.3s;\n  font-size: 15px; }\n\npublish-header button {\n  display: inline-block;\n  vertical-align: bottom;\n  background-color: transparent;\n  color: #808080;\n  border: none;\n  outline: none;\n  cursor: pointer;\n  padding: 0px;\n  width: 34px;\n  height: 34px;\n  transition: 0.3s;\n  font-size: 15px; }\n\nbutton:hover {\n  color: #00006d; }\n\npanel-header button.active {\n  color: #00006d; }\n\npublish-header button.active {\n  color: #00006d; }\n\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc2hhcmVkL2NvbXBvbmVudHMvZXhlY3V0ZS9DOlxcRHJvcGJveFxcRmlsZXNcXFNvZnR3YXJlXFxHaXRIdWJcXGRlc2lnbi1hdXRvbWF0aW9uXFxtb2JpdXMtcGFyYW1ldHJpYy1tb2RlbGxlci9zcmNcXHNjc3NcXGhlYWRlci1idXR0b24uc2NzcyIsInNyYy9hcHAvc2hhcmVkL2NvbXBvbmVudHMvZXhlY3V0ZS9DOlxcRHJvcGJveFxcRmlsZXNcXFNvZnR3YXJlXFxHaXRIdWJcXGRlc2lnbi1hdXRvbWF0aW9uXFxtb2JpdXMtcGFyYW1ldHJpYy1tb2RlbGxlci9zcmNcXHNjc3NcXGNvbG9ycy5zY3NzIiwic3JjL2FwcC9zaGFyZWQvY29tcG9uZW50cy9leGVjdXRlL0M6XFxEcm9wYm94XFxGaWxlc1xcU29mdHdhcmVcXEdpdEh1YlxcZGVzaWduLWF1dG9tYXRpb25cXG1vYml1cy1wYXJhbWV0cmljLW1vZGVsbGVyL3NyY1xcc2Nzc1xcdmFyaWFibGVzLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBR0E7RUFDSSxxQkFBcUI7RUFDckIsc0JBQXNCO0VBQ3RCLDZCQUE2QjtFQUM3QixjQ05ZO0VET1osWUFBWTtFQUNaLGFBQWE7RUFDYixlQUFlO0VBQ2YsWUFBWTtFQUNaLFdBQVc7RUFDWCxZQUFZO0VBQ1osZ0JBQWdCO0VBQ2hCLGVFWFMsRUFBQTs7QUZjYjtFQUNJLHFCQUFxQjtFQUNyQixzQkFBc0I7RUFDdEIsNkJBQTZCO0VBQzdCLGNDckJZO0VEc0JaLFlBQVk7RUFDWixhQUFhO0VBQ2IsZUFBZTtFQUNmLFlBQVk7RUFDWixXQUFXO0VBQ1gsWUFBWTtFQUNaLGdCQUFnQjtFQUNoQixlRTFCUyxFQUFBOztBRjZCYjtFQUNJLGNDdEIyQixFQUFBOztBRHlCL0I7RUFDSSxjQzFCMkIsRUFBQTs7QUQ2Qi9CO0VBQ0ksY0M5QjJCLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9zaGFyZWQvY29tcG9uZW50cy9leGVjdXRlL2V4ZWN1dGUuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJAaW1wb3J0ICd+c2Nzcy92YXJpYWJsZXMnO1xyXG5AaW1wb3J0ICd+c2Nzcy9jb2xvcnMnO1xyXG5cclxucGFuZWwtaGVhZGVyIGJ1dHRvbiB7XHJcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICB2ZXJ0aWNhbC1hbGlnbjogYm90dG9tO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XHJcbiAgICBjb2xvcjogJGNvbG9yMTtcclxuICAgIGJvcmRlcjogbm9uZTtcclxuICAgIG91dGxpbmU6IG5vbmU7XHJcbiAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgICBwYWRkaW5nOiAwcHg7XHJcbiAgICB3aWR0aDogMzRweDtcclxuICAgIGhlaWdodDogMzRweDtcclxuICAgIHRyYW5zaXRpb246IDAuM3M7XHJcbiAgICBmb250LXNpemU6ICRmc2l6ZTE7XHJcbn1cclxuXHJcbnB1Ymxpc2gtaGVhZGVyIGJ1dHRvbiB7XHJcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICB2ZXJ0aWNhbC1hbGlnbjogYm90dG9tO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XHJcbiAgICBjb2xvcjogJGNvbG9yMTtcclxuICAgIGJvcmRlcjogbm9uZTtcclxuICAgIG91dGxpbmU6IG5vbmU7XHJcbiAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgICBwYWRkaW5nOiAwcHg7XHJcbiAgICB3aWR0aDogMzRweDtcclxuICAgIGhlaWdodDogMzRweDtcclxuICAgIHRyYW5zaXRpb246IDAuM3M7XHJcbiAgICBmb250LXNpemU6ICRmc2l6ZTE7XHJcbn1cclxuXHJcbmJ1dHRvbjpob3ZlciB7XHJcbiAgICBjb2xvcjokc2VsZWN0ZWQtY29sb3I7XHJcbn1cclxuXHJcbnBhbmVsLWhlYWRlciBidXR0b24uYWN0aXZlIHtcclxuICAgIGNvbG9yOiAkc2VsZWN0ZWQtY29sb3I7XHJcbn1cclxuXHJcbnB1Ymxpc2gtaGVhZGVyIGJ1dHRvbi5hY3RpdmUge1xyXG4gICAgY29sb3I6ICRzZWxlY3RlZC1jb2xvcjtcclxufVxyXG4iLCJcclxuJGNvbG9yMTogIzgwODA4MDtcclxuJGNvbG9yMjogIzk5OTk5OTtcclxuJGNvbG9yMzogI0IzQjNCMzsgXHJcbiRjb2xvcjQ6ICNDQ0NDQ0M7XHJcbiRjb2xvcjU6ICNFNkU2RTY7XHJcbiRjb2xvcjUtNTogcmdiKDI0NSwgMjQ1LCAyNDUpO1xyXG4kY29sb3I2OiByZ2IoMjUwLCAyNTAsIDI1MSk7XHJcblxyXG4kY29sb3I3OiB3aGl0ZTtcclxuJGNvbG9yODogIzM3MzczNztcclxuXHJcbiRzZWxlY3RlZC1jb2xvcjogcmdiKDAsIDAsIDEwOSk7XHJcbiRob3Zlci1jb2xvcjogJGNvbG9yMjtcclxuXHJcbiRlcnJvci1jb2xvcjogI0U5NDg1ODsgLy9waW5rLXJlZFxyXG4kZXJyb3ItY29sb3ItbHQ6IHJnYigyNTUsIDIyMCwgMjI0KTtcclxuJHBjb2xvcjI6ICNGM0EzMkE7IC8vb3JhbmdlLXllbGxvd1xyXG4kcHJpbnQtY29sb3I6IHJnYigxMzAsIDE5MSwgMTEwKTsgLy9saWdodGdyZWVuXHJcbiRwcmludC1jb2xvci1sdDogcmdiKDIzMCwgMjU1LCAyMjEpO1xyXG4kc2VsZWN0R2VvbS1jb2xvcjogcmdiKDI1NSwgMTc0LCAwKTsgLy8gbGlnaHQgb3JhbmdlXHJcbiRzZWxlY3RHZW9tLWNvbG9yLWx0OiByZ2IoMjU1LCAyMjUsIDE2MCk7XHJcblxyXG4vLyAkcHJvZC1iYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMjUwLDI1MCwyNTApO1xyXG4vLyAkYmFja2dyb3VuZC1jb2xvcjogcmdiKDIyMCwyMjAsMjIwKTtcclxuJGZ1bmN0aW9uLXRleHQtY29sb3I6IHJnYigxOTAsIDE0MCwgMzApO1xyXG4kZnVuY3Rpb24tdGV4dC1jb2xvcjI6IHJnYigxOCwgMTI2LCAxMzYpO1xyXG4kYmFzaWMtZnVuY3Rpb24tdGV4dC1jb2xvcjogcmdiKDIwMCwgNzAsIDE1MCk7XHJcbiRjb21tZW50LWNvbG9yOiBkYXJrZ3JlZW47XHJcbiIsIiRwYWRkaW5nOiA0MHB4OyAvLyA/IG5vdCB1c2VkXHJcbiRzbWFsbC1wYWRkaW5nOiAxNXB4O1xyXG4kaGVhZGVyLWhlaWdodDogNDBweDtcclxuXHJcbiRmc2l6ZTE6IDE1cHg7XHJcbiRmc2l6ZTI6IDEycHg7XHJcbiRmc2l6ZTM6IDMwcHg7XHJcblxyXG4kcG9ydC1zaXplOiAxNXB4O1xyXG4kZGVmYXVsdC1zaWRlLXBhZGRpbmc6IDE1cHg7XHJcblxyXG4kZGlzYWJsZWQtb3BhY2l0eTogMC40OyJdfQ== */"

/***/ }),

/***/ "./src/app/shared/components/execute/execute.component.ts":
/*!****************************************************************!*\
  !*** ./src/app/shared/components/execute/execute.component.ts ***!
  \****************************************************************/
/*! exports provided: mergeInputsFunc, printFunc, ExecuteComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "mergeInputsFunc", function() { return mergeInputsFunc; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "printFunc", function() { return printFunc; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ExecuteComponent", function() { return ExecuteComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _models_flowchart__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @models/flowchart */ "./src/app/shared/models/flowchart/index.ts");
/* harmony import */ var _models_code__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @models/code */ "./src/app/shared/models/code/index.ts");
/* harmony import */ var _models_procedure__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @models/procedure */ "./src/app/shared/models/procedure/index.ts");
/* harmony import */ var _modules__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @modules */ "./src/assets/core/modules/index.ts");
/* harmony import */ var _services__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @services */ "./src/app/shared/services/index.ts");
/* harmony import */ var _models_port__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @models/port */ "./src/app/shared/models/port/index.ts");
/* harmony import */ var _shared_services_google_analytics__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @shared/services/google.analytics */ "./src/app/shared/services/google.analytics.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (undefined && undefined.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};







// import { WebWorkerService } from 'ngx-web-worker';


var mergeInputsFunc = "\nfunction mergeInputs(models){\n    let result = __modules__." + _modules__WEBPACK_IMPORTED_MODULE_4__["_parameterTypes"].new + "();\n    for (let model of models){\n        __modules__." + _modules__WEBPACK_IMPORTED_MODULE_4__["_parameterTypes"].merge + "(result, model);\n    }\n    return result;\n}\n";
var printFunc = "\nfunction printFunc(_console, name, value){\n    let val;\n    if (typeof value === 'number' || value === undefined) {\n        val = value;\n    } else if (typeof value === 'string') {\n        val = '\"' + value + '\"';\n    } else if (value.constructor === [].constructor) {\n        val = JSON.stringify(value);\n    } else if (value.constructor === {}.constructor) {\n        val = JSON.stringify(value);\n    } else {\n        val = value;\n    }\n    _console.push(name+': '+val);\n    return val;\n}\n";
var DEBUG = false;
var ExecuteComponent = /** @class */ (function () {
    function ExecuteComponent(dataService, googleAnalyticsService) {
        this.dataService = dataService;
        this.googleAnalyticsService = googleAnalyticsService;
        this.isDev = true;
        this.isDev = Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["isDevMode"])();
    }
    ExecuteComponent.prototype.execute = function (testing) {
        return __awaiter(this, void 0, void 0, function () {
            var _i, _a, node, EmptyECheck, InvalidECheck, ex_1, _category, _b, _c, prod, _d, ex_2, _category, _e, _f, arg, _category, _category;
            var _this = this;
            return __generator(this, function (_g) {
                switch (_g.label) {
                    case 0:
                        this.startTime = performance.now();
                        document.getElementById('spinner-on').click();
                        this.dataService.log(' ');
                        _i = 0, _a = this.dataService.flowchart.nodes;
                        _g.label = 1;
                    case 1:
                        if (!(_i < _a.length)) return [3 /*break*/, 15];
                        node = _a[_i];
                        EmptyECheck = false;
                        InvalidECheck = false;
                        if (node.type !== 'start') {
                            if (node.input.edges) {
                                node.input.value = undefined;
                            }
                        }
                        _g.label = 2;
                    case 2:
                        _g.trys.push([2, 4, , 5]);
                        return [4 /*yield*/, this.resolveImportedUrl(node.procedure)];
                    case 3:
                        _g.sent();
                        return [3 /*break*/, 5];
                    case 4:
                        ex_1 = _g.sent();
                        document.getElementById('spinner-off').click();
                        document.getElementById('Console').click();
                        this.dataService.log(ex_1.message);
                        _category = this.isDev ? 'dev' : 'execute';
                        this.googleAnalyticsService.trackEvent(_category, "error: " + ex_1.name, 'click', performance.now() - this.startTime);
                        throw ex_1;
                    case 5:
                        if (!node.enabled) {
                            return [3 /*break*/, 14];
                        }
                        _b = 0, _c = node.procedure;
                        _g.label = 6;
                    case 6:
                        if (!(_b < _c.length)) return [3 /*break*/, 13];
                        prod = _c[_b];
                        if (prod.type === _models_procedure__WEBPACK_IMPORTED_MODULE_3__["ProcedureTypes"].Return || prod.type === _models_procedure__WEBPACK_IMPORTED_MODULE_3__["ProcedureTypes"].Comment || !prod.enabled) {
                            return [3 /*break*/, 12];
                        }
                        if (prod.args.length > 0 && prod.args[0].invalidVar) {
                            node.hasError = true;
                            prod.hasError = true;
                            InvalidECheck = true;
                        }
                        if (!(prod.type === _models_procedure__WEBPACK_IMPORTED_MODULE_3__["ProcedureTypes"].Constant)) return [3 /*break*/, 11];
                        _g.label = 7;
                    case 7:
                        _g.trys.push([7, 9, , 10]);
                        _d = prod;
                        return [4 /*yield*/, _models_code__WEBPACK_IMPORTED_MODULE_2__["CodeUtils"].getStartInput(prod.args[1], prod.meta.inputMode)];
                    case 8:
                        _d.resolvedValue = _g.sent();
                        return [3 /*break*/, 10];
                    case 9:
                        ex_2 = _g.sent();
                        node.hasError = true;
                        prod.hasError = true;
                        if (ex_2.message.indexOf('HTTP') !== -1 || ex_2.message.indexOf('File Reading') !== -1) {
                            document.getElementById('Console').click();
                            document.getElementById('spinner-off').click();
                            _category = this.isDev ? 'dev' : 'execute';
                            this.googleAnalyticsService.trackEvent(_category, "error: Reserved Word Argument", 'click', performance.now() - this.startTime);
                            this.dataService.log(ex_2.message);
                            throw (ex_2);
                        }
                        InvalidECheck = true;
                        return [3 /*break*/, 10];
                    case 10:
                        if (!prod.args[0].value || (!prod.args[1].value && !prod.args[1].default &&
                            prod.args[1].value !== 0 && prod.args[1].default !== 0)) {
                            node.hasError = true;
                            prod.hasError = true;
                            EmptyECheck = true;
                        }
                        return [3 /*break*/, 12];
                    case 11:
                        for (_e = 0, _f = prod.args; _e < _f.length; _e++) {
                            arg = _f[_e];
                            if (arg.name[0] === '_' || arg.type === 5) {
                                continue;
                            }
                            if (arg.value !== 0 && !arg.value) {
                                node.hasError = true;
                                prod.hasError = true;
                                EmptyECheck = true;
                            }
                        }
                        _g.label = 12;
                    case 12:
                        _b++;
                        return [3 /*break*/, 6];
                    case 13:
                        if (EmptyECheck) {
                            document.getElementById('Console').click();
                            this.dataService.log('Error: Empty Argument detected. Check marked node(s) and procedure(s)!');
                            document.getElementById('spinner-off').click();
                            _category = this.isDev ? 'dev' : 'execute';
                            this.googleAnalyticsService.trackEvent(_category, "error: Empty Argument", 'click', performance.now() - this.startTime);
                            throw new Error('Empty Argument');
                        }
                        if (InvalidECheck) {
                            document.getElementById('Console').click();
                            this.dataService.log('Error: Invalid Argument or Argument with Reserved Word detected.' +
                                'Check marked node(s) and procedure(s)!');
                            document.getElementById('spinner-off').click();
                            _category = this.isDev ? 'dev' : 'execute';
                            this.googleAnalyticsService.trackEvent(_category, "error: Reserved Word Argument", 'click', performance.now() - this.startTime);
                            throw new Error('Reserved Word Argument');
                        }
                        _g.label = 14;
                    case 14:
                        _i++;
                        return [3 /*break*/, 1];
                    case 15:
                        if (testing) {
                            this.executeFlowchart();
                            return [2 /*return*/];
                        }
                        else {
                            // setTimeout for 20ms so that the loading screen has enough time to be loaded in
                            setTimeout(function () {
                                _this.executeFlowchart();
                            }, 20);
                        }
                        return [2 /*return*/];
                }
            });
        });
    };
    ExecuteComponent.prototype.executeFlowchart = function () {
        var globalVars = '';
        // order the flowchart
        if (!this.dataService.flowchart.ordered) {
            _models_flowchart__WEBPACK_IMPORTED_MODULE_1__["FlowchartUtils"].orderNodes(this.dataService.flowchart);
        }
        // get the string of all imported functions
        var funcStrings = {};
        for (var _i = 0, _a = this.dataService.flowchart.functions; _i < _a.length; _i++) {
            var func = _a[_i];
            funcStrings[func.name] = _models_code__WEBPACK_IMPORTED_MODULE_2__["CodeUtils"].getFunctionString(func);
        }
        // execute each node
        for (var _b = 0, _c = this.dataService.flowchart.nodes; _b < _c.length; _b++) {
            var node = _c[_b];
            if (!node.enabled) {
                node.output.value = undefined;
                continue;
            }
            globalVars = this.executeNode(node, funcStrings, globalVars);
        }
        for (var _d = 0, _e = this.dataService.flowchart.nodes; _d < _e.length; _d++) {
            var node = _e[_d];
            if (node.type !== 'end') {
                delete node.output.value;
            }
        }
        document.getElementById('spinner-off').click();
        var category = this.isDev ? 'dev' : 'execute';
        this.googleAnalyticsService.trackEvent(category, 'successful', 'click', performance.now() - this.startTime);
    };
    ExecuteComponent.prototype.resolveImportedUrl = function (prodList) {
        return __awaiter(this, void 0, void 0, function () {
            var _loop_1, this_1, _i, prodList_1, prod;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        _loop_1 = function (prod) {
                            var i, arg, _a, arg, val_1, p, result;
                            return __generator(this, function (_b) {
                                switch (_b.label) {
                                    case 0:
                                        if (!(prod.type === _models_procedure__WEBPACK_IMPORTED_MODULE_3__["ProcedureTypes"].Imported)) return [3 /*break*/, 5];
                                        i = 1;
                                        _b.label = 1;
                                    case 1:
                                        if (!(i < prod.args.length)) return [3 /*break*/, 4];
                                        arg = prod.args[i];
                                        // args.slice(1).map((arg) => {
                                        if (arg.type.toString() !== _models_port__WEBPACK_IMPORTED_MODULE_6__["InputType"].URL.toString()) {
                                            return [3 /*break*/, 3];
                                        }
                                        _a = prod;
                                        return [4 /*yield*/, _models_code__WEBPACK_IMPORTED_MODULE_2__["CodeUtils"].getStartInput(arg, _models_port__WEBPACK_IMPORTED_MODULE_6__["InputType"].URL)];
                                    case 2:
                                        _a.resolvedValue = _b.sent();
                                        _b.label = 3;
                                    case 3:
                                        i++;
                                        return [3 /*break*/, 1];
                                    case 4: return [3 /*break*/, 7];
                                    case 5:
                                        if (!(prod.type === _models_procedure__WEBPACK_IMPORTED_MODULE_3__["ProcedureTypes"].Function && prod.meta.name === 'ImportData')) return [3 /*break*/, 7];
                                        arg = prod.args[2];
                                        val_1 = arg.value.replace(/ /g, '');
                                        if (val_1[0] === '"' || val_1[0] === "'") {
                                            val_1 = val_1.substring(1, val_1.length - 1);
                                        }
                                        if (val_1.indexOf('dropbox') !== -1) {
                                            val_1 = val_1.replace('www', 'dl').replace('dl=0', 'dl=1');
                                        }
                                        p = new Promise(function (resolve) {
                                            var request = new XMLHttpRequest();
                                            request.open('GET', val_1);
                                            request.onload = function () {
                                                if (request.status === 200) {
                                                    resolve(request.responseText);
                                                }
                                                else {
                                                    resolve(undefined);
                                                }
                                            };
                                            request.onerror = function () {
                                                resolve(undefined);
                                            };
                                            request.send();
                                        });
                                        return [4 /*yield*/, p];
                                    case 6:
                                        result = _b.sent();
                                        if (result === undefined) {
                                            prod.resolvedValue = arg.value;
                                        }
                                        else {
                                            prod.resolvedValue = '`' + result + '`';
                                        }
                                        _b.label = 7;
                                    case 7:
                                        if (!prod.children) return [3 /*break*/, 9];
                                        return [4 /*yield*/, this_1.resolveImportedUrl(prod.children)];
                                    case 8:
                                        _b.sent();
                                        _b.label = 9;
                                    case 9: return [2 /*return*/];
                                }
                            });
                        };
                        this_1 = this;
                        _i = 0, prodList_1 = prodList;
                        _a.label = 1;
                    case 1:
                        if (!(_i < prodList_1.length)) return [3 /*break*/, 4];
                        prod = prodList_1[_i];
                        return [5 /*yield**/, _loop_1(prod)];
                    case 2:
                        _a.sent();
                        _a.label = 3;
                    case 3:
                        _i++;
                        return [3 /*break*/, 1];
                    case 4: return [2 /*return*/];
                }
            });
        });
    };
    ExecuteComponent.prototype.executeNode = function (node, funcStrings, globalVars) {
        var params = { 'currentProcedure': [''], 'console': [] };
        var fnString = '';
        var startTime = performance.now();
        try {
            // get the code for the node
            var codeRes = _models_code__WEBPACK_IMPORTED_MODULE_2__["CodeUtils"].getNodeCode(node, true);
            var nodeCode = codeRes[0];
            var varsDefined = codeRes[1];
            // fnString = printFunc + nodeCode.join('\n');
            fnString = printFunc + '\nfunction __main_node_code__(){\n' + nodeCode.join('\n') + '\n}\nreturn __main_node_code__();';
            // add the constants from the start node
            fnString = _modules__WEBPACK_IMPORTED_MODULE_4__["_varString"] + globalVars + fnString;
            params['model'] = _modules__WEBPACK_IMPORTED_MODULE_4__["_parameterTypes"].newFn();
            _modules__WEBPACK_IMPORTED_MODULE_4__["_parameterTypes"].mergeFn(params['model'], node.input.value);
            // add the imported functions code
            var hasFunctions = false;
            for (var funcName in funcStrings) {
                if (funcStrings.hasOwnProperty(funcName)) {
                    fnString = funcStrings[funcName] + fnString;
                    hasFunctions = true;
                }
            }
            if (hasFunctions || node.type === 'start') {
                fnString = mergeInputsFunc + '\n\n' + fnString;
            }
            // print the code
            this.dataService.log("Executing node: " + node.name + "\n");
            if (DEBUG) {
                console.log("______________________________________________________________\n/*     " + node.name.toUpperCase() + "     */\n");
                console.log(fnString);
            }
            var prevWindowVar = {};
            for (var _i = 0, varsDefined_1 = varsDefined; _i < varsDefined_1.length; _i++) {
                var v = varsDefined_1[_i];
                if (window.hasOwnProperty(v)) {
                    prevWindowVar[v] = window[v];
                }
            }
            // create the function with the string: new Function ([arg1[, arg2[, ...argN]],] functionBody)
            var fn = new Function('__modules__', '__params__', fnString);
            // execute the function
            var result = fn(_modules__WEBPACK_IMPORTED_MODULE_4__, params);
            for (var _a = 0, varsDefined_2 = varsDefined; _a < varsDefined_2.length; _a++) {
                var v = varsDefined_2[_a];
                if (window.hasOwnProperty(v)) {
                    delete window[v];
                    if (prevWindowVar[v]) {
                        window[v] = prevWindowVar[v];
                    }
                }
            }
            node.output.value = result;
            if (node.type === 'start') {
                for (var constant in params['constants']) {
                    if (params['constants'].hasOwnProperty(constant)) {
                        var constString = JSON.stringify(params['constants'][constant]);
                        globalVars += "const " + constant + " = " + constString + ";\n";
                    }
                }
                globalVars += '\n';
            }
            node.model = params['model'];
            var endTime = performance.now();
            var duration = Math.round(endTime - startTime);
            var duration_msg = void 0;
            if (duration < 1000) {
                duration_msg = '  Executed in ' + duration + ' milliseconds.';
            }
            else {
                duration_msg = '  Executed in ' + duration / 1000 + ' seconds.';
            }
            for (var _b = 0, _c = params.console; _b < _c.length; _b++) {
                var str = _c[_b];
                this.dataService.log(str);
            }
            this.dataService.log(duration_msg);
            return globalVars;
        }
        catch (ex) {
            for (var _d = 0, _e = params.console; _d < _e.length; _d++) {
                var str = _e[_d];
                this.dataService.log(str);
            }
            var endTime = performance.now();
            var duration = Math.round(endTime - startTime);
            var duration_msg = void 0;
            if (duration < 1000) {
                duration_msg = '  Executed in ' + duration + ' milliseconds.';
            }
            else {
                duration_msg = '  Executed in ' + duration / 1000 + ' seconds.';
            }
            this.dataService.log(duration_msg);
            document.getElementById('spinner-off').click();
            if (DEBUG) {
                this.dataService.log('\n=======================================\n' +
                    ex.name +
                    '\n=======================================\n' +
                    ex.message);
                throw ex;
            }
            node.hasError = true;
            // console.warn(`${node.name} errored`);
            // Unexpected Identifier
            // Unexpected token
            var prodWithError_1 = params['currentProcedure'][0];
            var markError_1 = function (prod, id) {
                if (prod['ID'] && id && prod['ID'] === id) {
                    prod.hasError = true;
                }
                if (prod.children) {
                    prod.children.map(function (p) {
                        markError_1(p, id);
                    });
                }
            };
            if (prodWithError_1 !== '') {
                node.procedure.map(function (prod) {
                    if (prod['ID'] === prodWithError_1) {
                        prod.hasError = true;
                    }
                    if (prod.children) {
                        prod.children.map(function (p) {
                            markError_1(p, prodWithError_1);
                        });
                    }
                });
            }
            if (ex.toString().indexOf('Unexpected identifier') > -1) {
                ex.message = 'Unexpected Identifier error. Did you declare everything?' +
                    'Check that your strings are enclosed in quotes (")';
            }
            else if (ex.toString().indexOf('Unexpected token') > -1 || ex.toString().indexOf('unexpected token') > -1) {
                ex.message = 'Unexpected token error. Check for stray spaces or reserved keywords?';
            }
            else if (ex.toString().indexOf('\'readAsText\' on \'FileReader\'') > -1) {
                ex.message = 'Unable to read file input. Check all start node inputs.';
            }
            else if (ex.toString().indexOf('Cannot read property \'splice\'') > -1) {
                ex.message = 'Unrecognized or missing variable in the procedure.';
            }
            document.getElementById('Console').click();
            this.dataService.log('\n=======================================\n' +
                ex.name +
                '\n=======================================\n' +
                ex.message);
            // console.log('---------------\nError node code:');
            // console.log(fnString);
            var category = this.isDev ? 'dev' : 'execute';
            this.googleAnalyticsService.trackEvent(category, "error: " + ex.name, 'click', performance.now() - this.startTime);
            throw ex;
        }
    };
    ExecuteComponent.prototype.runningFunction = function (functionDetails) {
        // create the function with the string: new Function ([arg1[, arg2[, ...argN]],] functionBody)
        var fn = new Function('__modules__', '__params__', functionDetails.fnString);
        // execute the function
        var result = fn(functionDetails.Modules, functionDetails.params);
        return [result, functionDetails.params];
    };
    ExecuteComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'execute',
            template: __webpack_require__(/*! ./execute.component.html */ "./src/app/shared/components/execute/execute.component.html"),
            styles: [__webpack_require__(/*! ./execute.component.scss */ "./src/app/shared/components/execute/execute.component.scss")]
        }),
        __metadata("design:paramtypes", [_services__WEBPACK_IMPORTED_MODULE_5__["DataService"], _shared_services_google_analytics__WEBPACK_IMPORTED_MODULE_7__["GoogleAnalyticsService"]])
    ], ExecuteComponent);
    return ExecuteComponent;
}());



/***/ }),

/***/ "./src/app/shared/components/file/download.utils.ts":
/*!**********************************************************!*\
  !*** ./src/app/shared/components/file/download.utils.ts ***!
  \**********************************************************/
/*! exports provided: DownloadUtils */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DownloadUtils", function() { return DownloadUtils; });
var DownloadUtils = /** @class */ (function () {
    function DownloadUtils() {
    }
    DownloadUtils.downloadFile = function (fileName, fileContent) {
        if (window.navigator.msSaveOrOpenBlob) {
            window.navigator.msSaveOrOpenBlob(fileContent, fileName);
        }
        else {
            var a_1 = document.createElement('a');
            document.body.appendChild(a_1);
            var url_1 = window.URL.createObjectURL(fileContent);
            a_1.href = url_1;
            a_1.download = fileName;
            a_1.click();
            setTimeout(function () {
                window.URL.revokeObjectURL(url_1);
                document.body.removeChild(a_1);
            }, 0);
        }
    };
    return DownloadUtils;
}());



/***/ }),

/***/ "./src/app/shared/components/file/index.ts":
/*!*************************************************!*\
  !*** ./src/app/shared/components/file/index.ts ***!
  \*************************************************/
/*! exports provided: SaveFileComponent, LoadFileComponent, NewFileComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _savefile_component__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./savefile.component */ "./src/app/shared/components/file/savefile.component.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SaveFileComponent", function() { return _savefile_component__WEBPACK_IMPORTED_MODULE_0__["SaveFileComponent"]; });

/* harmony import */ var _loadfile_component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./loadfile.component */ "./src/app/shared/components/file/loadfile.component.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "LoadFileComponent", function() { return _loadfile_component__WEBPACK_IMPORTED_MODULE_1__["LoadFileComponent"]; });

/* harmony import */ var _newfile_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./newfile.component */ "./src/app/shared/components/file/newfile.component.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "NewFileComponent", function() { return _newfile_component__WEBPACK_IMPORTED_MODULE_2__["NewFileComponent"]; });






/***/ }),

/***/ "./src/app/shared/components/file/loadfile.component.ts":
/*!**************************************************************!*\
  !*** ./src/app/shared/components/file/loadfile.component.ts ***!
  \**************************************************************/
/*! exports provided: LoadFileComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LoadFileComponent", function() { return LoadFileComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm5/index.js");
/* harmony import */ var circular_json__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! circular-json */ "./node_modules/circular-json/build/circular-json.node.js");
/* harmony import */ var circular_json__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(circular_json__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _services__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @services */ "./src/app/shared/services/index.ts");
/* harmony import */ var _modules__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @modules */ "./src/assets/core/modules/index.ts");
/* harmony import */ var _shared_decorators__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @shared/decorators */ "./src/app/shared/decorators/index.ts");
/* harmony import */ var _shared_checkMissingProd__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @shared/checkMissingProd */ "./src/app/shared/checkMissingProd.ts");
/* harmony import */ var _shared_parser__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @shared/parser */ "./src/app/shared/parser.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};








var LoadFileComponent = /** @class */ (function () {
    function LoadFileComponent(dataService) {
        this.dataService = dataService;
    }
    LoadFileComponent.prototype.sendloadfile = function () {
        var _this = this;
        var selectedFile = document.getElementById('file-input').files[0];
        var stream = rxjs__WEBPACK_IMPORTED_MODULE_1__["Observable"].create(function (observer) {
            var reader = new FileReader();
            reader.onloadend = function () {
                // if (typeof reader.result === 'string') {}
                var f = circular_json__WEBPACK_IMPORTED_MODULE_2__["parse"](reader.result);
                var file = {
                    name: selectedFile.name.split('.mob')[0],
                    author: f.author,
                    flowchart: f.flowchart,
                    last_updated: f.last_updated,
                    version: f.version,
                    settings: f.settings || {}
                };
                // file.flowchart.name = selectedFile.name.split('.mob')[0];
                var hasError = false;
                for (var _i = 0, _a = file.flowchart.nodes; _i < _a.length; _i++) {
                    var node = _a[_i];
                    if (!Object(_shared_checkMissingProd__WEBPACK_IMPORTED_MODULE_6__["checkMissingProd"])(node.procedure)) {
                        node.hasError = true;
                        hasError = true;
                    }
                }
                if (hasError) {
                    alert('The flowchart contains functions that does not exist in the current version of Mobius');
                }
                // TO BE REMOVED after all the existing mob files are updated
                var endNode = file.flowchart.nodes[file.flowchart.nodes.length - 1];
                if (endNode.procedure.length === 0) {
                    endNode.procedure = [{ type: 13, ID: '',
                            parent: undefined,
                            meta: { name: '', module: '' },
                            variable: undefined,
                            children: undefined,
                            argCount: 0,
                            args: [],
                            print: false,
                            enabled: true,
                            selected: false,
                            selectGeom: false,
                            hasError: false }];
                }
                if (endNode.procedure[endNode.procedure.length - 1].type !== 11) {
                    var returnMeta = _modules__WEBPACK_IMPORTED_MODULE_4__["_parameterTypes"].return.split('.');
                    for (var _b = 0, ModuleList_1 = _shared_decorators__WEBPACK_IMPORTED_MODULE_5__["ModuleList"]; _b < ModuleList_1.length; _b++) {
                        var i = ModuleList_1[_b];
                        if (i.module !== returnMeta[0]) {
                            continue;
                        }
                        for (var _c = 0, _d = i.functions; _c < _d.length; _c++) {
                            var j = _d[_c];
                            if (j.name !== returnMeta[1]) {
                                continue;
                            }
                            endNode.procedure.push({ type: 11, ID: '',
                                parent: undefined,
                                meta: { name: '', module: '' },
                                variable: undefined,
                                children: undefined,
                                argCount: j.argCount,
                                args: j.args,
                                print: false,
                                enabled: true,
                                selected: false,
                                selectGeom: false,
                                hasError: false });
                            break;
                        }
                        break;
                    }
                }
                // REMOVE ENDS
                observer.next(file);
                observer.complete();
            };
            reader.readAsText(selectedFile);
        });
        stream.subscribe(function (loadeddata) {
            _this.dataService.file = loadeddata;
            if (loadeddata.settings && JSON.stringify(loadeddata.settings) !== '{}') {
                window.localStorage.setItem('mpm_settings', loadeddata.settings);
            }
            _this.dataService.newFlowchart = true;
            if (_this.dataService.node.type !== 'end') {
                loadeddata.flowchart.meta.selected_nodes = [loadeddata.flowchart.nodes.length - 1];
                // for (let i = 0; i < loadeddata.flowchart.nodes.length; i++) {
                //     if (loadeddata.flowchart.nodes[i].type === 'end') {
                //         loadeddata.flowchart.meta.selected_nodes = [i];
                //         break;
                //     }
                // }
            }
            for (var _i = 0, _a = loadeddata.flowchart.nodes; _i < _a.length; _i++) {
                var node = _a[_i];
                Object(_shared_parser__WEBPACK_IMPORTED_MODULE_7__["checkNodeValidity"])(node);
            }
            document.getElementById('executeButton').click();
            var zooming = document.getElementById('zoomToFit');
            if (zooming) {
                zooming.click();
                _this.dataService.newFlowchart = false;
            }
            else {
                _this.dataService.newFlowchart = true;
            }
        });
        document.getElementById('file-input').value = '';
    };
    LoadFileComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'file-load',
            template: "<button id='loadfile' class='btn' onclick=\"document.getElementById('file-input').click();\">Load</button>\n              <input id=\"file-input\" type=\"file\" (change)=\"sendloadfile()\" style=\" display: none;\" />",
            styles: ["\n            button.btn{\n                margin: 0px 0px 0px 0px;\n                font-size: 10px;\n                line-height: 12px;\n                border: 2px solid gray;\n                border-radius: 4px;\n                padding: 2px 5px;\n                background-color: #3F4651;\n                color: #E7BF00;\n                font-weight: 600;\n                text-transform: uppercase;\n             }\n            button.btn:hover{\n                background-color: gray;\n                color: white;\n            }\n\n             "]
        }),
        __metadata("design:paramtypes", [_services__WEBPACK_IMPORTED_MODULE_3__["DataService"]])
    ], LoadFileComponent);
    return LoadFileComponent;
}());



/***/ }),

/***/ "./src/app/shared/components/file/loadurl.component.ts":
/*!*************************************************************!*\
  !*** ./src/app/shared/components/file/loadurl.component.ts ***!
  \*************************************************************/
/*! exports provided: LoadUrlComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LoadUrlComponent", function() { return LoadUrlComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var circular_json__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! circular-json */ "./node_modules/circular-json/build/circular-json.node.js");
/* harmony import */ var circular_json__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(circular_json__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _services__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @services */ "./src/app/shared/services/index.ts");
/* harmony import */ var _modules__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @modules */ "./src/assets/core/modules/index.ts");
/* harmony import */ var _shared_decorators__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @shared/decorators */ "./src/app/shared/decorators/index.ts");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var _shared_checkMissingProd__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @shared/checkMissingProd */ "./src/app/shared/checkMissingProd.ts");
/* harmony import */ var _shared_parser__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @shared/parser */ "./src/app/shared/parser.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (undefined && undefined.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};








var LoadUrlComponent = /** @class */ (function () {
    function LoadUrlComponent(dataService, router) {
        this.dataService = dataService;
        this.router = router;
    }
    LoadUrlComponent.prototype.loadStartUpURL = function (routerUrl) {
        return __awaiter(this, void 0, void 0, function () {
            var url, nodeID;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        url = routerUrl.split('file=');
                        if (url.length <= 1) {
                            return [2 /*return*/];
                        }
                        url = url[1].split('&')[0];
                        url = url.replace(/%2F/g, '/');
                        url = url.replace(/%5C/g, '\\');
                        url = url.replace(/%22|%27|'|\s/g, '');
                        if (url.indexOf('dropbox') !== -1) {
                            url = url.replace('www', 'dl').replace('dl=0', 'dl=1');
                        }
                        if (!(routerUrl.indexOf('node=') !== -1)) return [3 /*break*/, 2];
                        nodeID = routerUrl.split('node=')[1].split('&')[0];
                        nodeID = Number(nodeID.replace(/%22|%27|'/g, ''));
                        return [4 /*yield*/, this.loadURL(url, nodeID)];
                    case 1:
                        _a.sent();
                        return [3 /*break*/, 4];
                    case 2: return [4 /*yield*/, this.loadURL(url)];
                    case 3:
                        _a.sent();
                        _a.label = 4;
                    case 4: return [2 /*return*/];
                }
            });
        });
    };
    LoadUrlComponent.prototype.loadURL = function (url, nodeID) {
        return __awaiter(this, void 0, void 0, function () {
            var p, loadeddata, _i, _a, node, executeB;
            return __generator(this, function (_b) {
                switch (_b.label) {
                    case 0:
                        p = new Promise(function (resolve) {
                            var request = new XMLHttpRequest();
                            request.open('GET', url);
                            request.onload = function () {
                                if (request.status === 200) {
                                    var f = circular_json__WEBPACK_IMPORTED_MODULE_1__["parse"](request.responseText);
                                    var urlSplit = url.split('/');
                                    var file = {
                                        name: urlSplit[urlSplit.length - 1].split('.mob')[0],
                                        author: f.author,
                                        flowchart: f.flowchart,
                                        last_updated: f.last_updated,
                                        version: f.version,
                                        settings: f.settings || {}
                                    };
                                    // file.flowchart.name = urlSplit[urlSplit.length - 1 ].split('.mob')[0];
                                    // TO BE REMOVED after all the existing mob files are updated
                                    var endNode = file.flowchart.nodes[file.flowchart.nodes.length - 1];
                                    if (endNode.procedure.length === 0) {
                                        endNode.procedure = [{ type: 13, ID: '',
                                                parent: undefined,
                                                meta: { name: '', module: '' },
                                                children: undefined,
                                                variable: undefined,
                                                argCount: 0,
                                                args: [],
                                                print: false,
                                                enabled: true,
                                                selected: false,
                                                selectGeom: false,
                                                hasError: false }];
                                    }
                                    if (endNode.procedure[endNode.procedure.length - 1].type !== 11) {
                                        var returnMeta = _modules__WEBPACK_IMPORTED_MODULE_3__["_parameterTypes"].return.split('.');
                                        for (var _i = 0, ModuleList_1 = _shared_decorators__WEBPACK_IMPORTED_MODULE_4__["ModuleList"]; _i < ModuleList_1.length; _i++) {
                                            var i = ModuleList_1[_i];
                                            if (i.module !== returnMeta[0]) {
                                                continue;
                                            }
                                            for (var _a = 0, _b = i.functions; _a < _b.length; _a++) {
                                                var j = _b[_a];
                                                if (j.name !== returnMeta[1]) {
                                                    continue;
                                                }
                                                endNode.procedure.push({ type: 11, ID: '',
                                                    parent: undefined,
                                                    meta: { name: '', module: '' },
                                                    children: undefined,
                                                    variable: undefined,
                                                    argCount: j.argCount,
                                                    args: j.args,
                                                    print: false,
                                                    enabled: true,
                                                    selected: false,
                                                    selectGeom: false,
                                                    hasError: false });
                                                break;
                                            }
                                            break;
                                        }
                                    }
                                    // REMOVE ENDS
                                    var hasError = false;
                                    for (var _c = 0, _d = file.flowchart.nodes; _c < _d.length; _c++) {
                                        var node = _d[_c];
                                        if (!Object(_shared_checkMissingProd__WEBPACK_IMPORTED_MODULE_6__["checkMissingProd"])(node.procedure)) {
                                            node.hasError = true;
                                            hasError = true;
                                        }
                                    }
                                    if (hasError) {
                                        alert('The flowchart contains functions that does not exist in the current version of Mobius');
                                    }
                                    resolve(file);
                                }
                                else {
                                    resolve('error happened');
                                }
                            };
                            request.onerror = function () {
                                resolve('error happened');
                            };
                            request.send();
                        });
                        return [4 /*yield*/, p];
                    case 1:
                        loadeddata = _b.sent();
                        if (loadeddata === 'error happened') {
                            return [2 /*return*/];
                        }
                        this.dataService.file = loadeddata;
                        if (loadeddata.settings && JSON.stringify(loadeddata.settings) !== '{}') {
                            window.localStorage.setItem('mpm_settings', loadeddata.settings);
                        }
                        this.dataService.newFlowchart = true;
                        if ((nodeID || nodeID === 0) && nodeID >= 0 && nodeID < loadeddata.flowchart.nodes.length) {
                            loadeddata.flowchart.meta.selected_nodes = [nodeID];
                            this.router.navigate(['/editor']);
                        }
                        else if (this.dataService.node.type !== 'end') {
                            loadeddata.flowchart.meta.selected_nodes = [loadeddata.flowchart.nodes.length - 1];
                        }
                        for (_i = 0, _a = loadeddata.flowchart.nodes; _i < _a.length; _i++) {
                            node = _a[_i];
                            Object(_shared_parser__WEBPACK_IMPORTED_MODULE_7__["checkNodeValidity"])(node);
                        }
                        executeB = document.getElementById('executeButton');
                        if (executeB) {
                            executeB.click();
                        }
                        return [2 /*return*/];
                }
            });
        });
    };
    LoadUrlComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'load-url',
            template: "<button id='loadurl' class='btn'></button>",
            styles: ["\n            button.btn{\n                visibility: hidden;\n            }\n            "]
        }),
        __metadata("design:paramtypes", [_services__WEBPACK_IMPORTED_MODULE_2__["DataService"], _angular_router__WEBPACK_IMPORTED_MODULE_5__["Router"]])
    ], LoadUrlComponent);
    return LoadUrlComponent;
}());



/***/ }),

/***/ "./src/app/shared/components/file/newfile.component.ts":
/*!*************************************************************!*\
  !*** ./src/app/shared/components/file/newfile.component.ts ***!
  \*************************************************************/
/*! exports provided: NewFileComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NewFileComponent", function() { return NewFileComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _models_flowchart__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @models/flowchart */ "./src/app/shared/models/flowchart/index.ts");
/* harmony import */ var _services__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @services */ "./src/app/shared/services/index.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};



var NewFileComponent = /** @class */ (function () {
    function NewFileComponent(dataService, cdr) {
        this.dataService = dataService;
        this.cdr = cdr;
        this.create = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
    }
    NewFileComponent.prototype.sendNewFile = function () {
        var confirmed = confirm('Loading a new file will delete the current flowchart. Would you like to continue?');
        if (!confirmed) {
            return;
        }
        var file = {
            name: 'Untitled',
            author: 'new_user',
            flowchart: _models_flowchart__WEBPACK_IMPORTED_MODULE_1__["FlowchartUtils"].newflowchart(),
            last_updated: new Date(),
            version: 2,
            settings: {}
        };
        this.dataService.file = file;
        var zooming = document.getElementById('zoomToFit');
        if (zooming) {
            zooming.click();
            this.dataService.newFlowchart = false;
        }
        else {
            this.dataService.newFlowchart = true;
        }
        this.cdr.detectChanges();
        document.getElementById('executeButton').click();
    };
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])(),
        __metadata("design:type", Object)
    ], NewFileComponent.prototype, "create", void 0);
    NewFileComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'file-new',
            template: "<button id='newfile' class='btn' (click)='sendNewFile()'>New</button>",
            styles: ["\n            button.btn{\n                margin: 0px 0px 0px 0px;\n                font-size: 10px;\n                line-height: 12px;\n                border: 2px solid gray;\n                border-radius: 4px;\n                padding: 2px 5px;\n                background-color: #3F4651;\n                color: #E7BF00;\n                font-weight: 600;\n                text-transform: uppercase;\n            }\n            button.btn:hover{\n                background-color: gray;\n                color: white;\n            }\n             "]
        }),
        __metadata("design:paramtypes", [_services__WEBPACK_IMPORTED_MODULE_2__["DataService"], _angular_core__WEBPACK_IMPORTED_MODULE_0__["ChangeDetectorRef"]])
    ], NewFileComponent);
    return NewFileComponent;
}());



/***/ }),

/***/ "./src/app/shared/components/file/savefile.component.ts":
/*!**************************************************************!*\
  !*** ./src/app/shared/components/file/savefile.component.ts ***!
  \**************************************************************/
/*! exports provided: SaveFileComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SaveFileComponent", function() { return SaveFileComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _download_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./download.utils */ "./src/app/shared/components/file/download.utils.ts");
/* harmony import */ var circular_json__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! circular-json */ "./node_modules/circular-json/build/circular-json.node.js");
/* harmony import */ var circular_json__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(circular_json__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _models_flowchart__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @models/flowchart */ "./src/app/shared/models/flowchart/index.ts");
/* harmony import */ var _services__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @services */ "./src/app/shared/services/index.ts");
/* harmony import */ var _models_port__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @models/port */ "./src/app/shared/models/port/index.ts");
/* harmony import */ var _models_procedure__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @models/procedure */ "./src/app/shared/models/procedure/index.ts");
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @utils */ "./src/app/shared/utils/index.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (undefined && undefined.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};








var SaveFileComponent = /** @class */ (function () {
    function SaveFileComponent(dataService) {
        this.dataService = dataService;
    }
    SaveFileComponent.prototype.download = function () {
        return __awaiter(this, void 0, void 0, function () {
            var f, _loop_1, _i, _a, prod, _b, _c, node, _d, _e, prod, savedfile, _f, _g, node, _h, _j, prod, _k, _l, edge, fileString, fname, blob;
            return __generator(this, function (_m) {
                switch (_m.label) {
                    case 0:
                        f = this.dataService.file;
                        f.settings = localStorage.getItem('mpm_settings');
                        if (!f.flowchart.ordered) {
                            _models_flowchart__WEBPACK_IMPORTED_MODULE_3__["FlowchartUtils"].orderNodes(f.flowchart);
                        }
                        _loop_1 = function (prod) {
                            var arg_1, p, _a, _b, _c, _d, p, _e, _f, _g, _h;
                            return __generator(this, function (_j) {
                                switch (_j.label) {
                                    case 0:
                                        if (prod.type !== _models_procedure__WEBPACK_IMPORTED_MODULE_6__["ProcedureTypes"].Constant) {
                                            return [2 /*return*/, "continue"];
                                        }
                                        if (!(prod.meta.inputMode.toString() === _models_port__WEBPACK_IMPORTED_MODULE_5__["InputType"].File.toString())) return [3 /*break*/, 4];
                                        arg_1 = prod.args[1];
                                        if (!(arg_1.value && arg_1.value.lastModified)) return [3 /*break*/, 2];
                                        p = new Promise(function (resolve) {
                                            var reader = new FileReader();
                                            reader.onload = function () {
                                                resolve(reader.result);
                                            };
                                            reader.readAsText(arg_1.value);
                                        });
                                        _b = (_a = window.localStorage).setItem;
                                        _c = [arg_1.value.name];
                                        _d = '`';
                                        return [4 /*yield*/, p];
                                    case 1:
                                        _b.apply(_a, _c.concat([_d + (_j.sent()) + '`']));
                                        arg_1.value = { 'name': arg_1.value.name };
                                        _j.label = 2;
                                    case 2:
                                        if (!(arg_1.default && arg_1.default.lastModified)) return [3 /*break*/, 4];
                                        p = new Promise(function (resolve) {
                                            var reader = new FileReader();
                                            reader.onload = function () {
                                                resolve(reader.result);
                                            };
                                            reader.readAsText(arg_1.default);
                                        });
                                        _f = (_e = window.localStorage).setItem;
                                        _g = [arg_1.default.name];
                                        _h = '`';
                                        return [4 /*yield*/, p];
                                    case 3:
                                        _f.apply(_e, _g.concat([_h + (_j.sent()) + '`']));
                                        arg_1.default = { 'name': arg_1.default.name };
                                        _j.label = 4;
                                    case 4: return [2 /*return*/];
                                }
                            });
                        };
                        _i = 0, _a = f.flowchart.nodes[0].procedure;
                        _m.label = 1;
                    case 1:
                        if (!(_i < _a.length)) return [3 /*break*/, 4];
                        prod = _a[_i];
                        return [5 /*yield**/, _loop_1(prod)];
                    case 2:
                        _m.sent();
                        _m.label = 3;
                    case 3:
                        _i++;
                        return [3 /*break*/, 1];
                    case 4:
                        for (_b = 0, _c = f.flowchart.nodes; _b < _c.length; _b++) {
                            node = _c[_b];
                            node.model = undefined;
                            if (node.input.hasOwnProperty('value')) {
                                node.input.value = undefined;
                            }
                            if (node.output.hasOwnProperty('value')) {
                                node.output.value = undefined;
                            }
                            for (_d = 0, _e = node.procedure; _d < _e.length; _d++) {
                                prod = _e[_d];
                                if (prod.hasOwnProperty('resolvedValue')) {
                                    prod.resolvedValue = undefined;
                                }
                            }
                        }
                        savedfile = circular_json__WEBPACK_IMPORTED_MODULE_2__["parse"](circular_json__WEBPACK_IMPORTED_MODULE_2__["stringify"](f));
                        for (_f = 0, _g = savedfile.flowchart.nodes; _f < _g.length; _f++) {
                            node = _g[_f];
                            node.id = _utils__WEBPACK_IMPORTED_MODULE_7__["IdGenerator"].getNodeID();
                            for (_h = 0, _j = node.state.procedure; _h < _j.length; _h++) {
                                prod = _j[_h];
                                prod.selected = false;
                            }
                            node.state.procedure = [];
                        }
                        // **** need to modify this when changing the input's constant function:
                        // **** this part resets the value of the last argument of the function when saving the file
                        /*
                        for (const prod of savedfile.flowchart.nodes[0].procedure) {
                            prod.args[prod.argCount - 1].value = undefined;
                        }
                        */
                        savedfile.last_updated = new Date();
                        savedfile.flowchart.meta.selected_nodes = [0];
                        for (_k = 0, _l = savedfile.flowchart.edges; _k < _l.length; _k++) {
                            edge = _l[_k];
                            edge.selected = false;
                        }
                        if (!savedfile.name || savedfile.name === '' || savedfile.name.toLowerCase() === 'untitled') {
                            savedfile.name = savedfile.flowchart.name;
                        }
                        fileString = circular_json__WEBPACK_IMPORTED_MODULE_2__["stringify"](savedfile, null, 4);
                        fname = savedfile.name.replace(/\ /g, '_');
                        if (savedfile.name.length < 4 || savedfile.name.substring(savedfile.name.length - 4) !== '.mob') {
                            fname = fname + ".mob";
                        }
                        blob = new Blob([fileString], { type: 'application/json' });
                        _download_utils__WEBPACK_IMPORTED_MODULE_1__["DownloadUtils"].downloadFile(fname, blob);
                        this.dataService.file.name = 'Untitled';
                        return [2 /*return*/];
                }
            });
        });
    };
    SaveFileComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'file-save',
            template: "<button id='savefile' class='btn' (click)='download()'>Save</button>",
            styles: ["\n            button.btn{\n                margin: 0px 0px 0px 0px;\n                font-size: 10px;\n                line-height: 12px;\n                border: 2px solid gray;\n                border-radius: 4px;\n                padding: 2px 5px;\n                background-color: #3F4651;\n                color: #E7BF00;\n                font-weight: 600;\n                text-transform: uppercase;\n             }\n            button.btn:hover{\n                background-color: gray;\n                color: white;\n            }\n             "]
        }),
        __metadata("design:paramtypes", [_services__WEBPACK_IMPORTED_MODULE_4__["DataService"]])
    ], SaveFileComponent);
    return SaveFileComponent;
}());



/***/ }),

/***/ "./src/app/shared/components/header/panel-header.component.html":
/*!**********************************************************************!*\
  !*** ./src/app/shared/components/header/panel-header.component.html ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class='container__header'>\r\n\r\n    <!-- hidden components (new file, save file, loaf file) for the dropdown menu-->\r\n    <div style=\"display: none;\">\r\n        <file-new></file-new>\r\n        <file-save></file-save>\r\n        <file-load></file-load>\r\n    </div>\r\n\r\n    <!-- buttons -->\r\n    <div class='header-btn-group'>\r\n\r\n        <!-- top left dropdown menu -->\r\n        <!-- <div class=\"dropmenu\"> -->\r\n            <!-- dropdown menu for new file, save file, loaf file-->\r\n            <!-- <div> -->\r\n                <!--\r\n                <button id='dropdownButton' class='btn' mat-icon-button (click)='openDropdownMenu($event)'>\r\n                    <mat-icon svgIcon=\"cMenu\" id='dropdownIcon'></mat-icon>\r\n                </button>\r\n                -->\r\n            <!-- </div>\r\n        </div> -->\r\n                        \r\n\r\n        <!-- buttons to navigate to the 4 pages -->\r\n        <button class='btn' [class.active]='getUrl()==\"/about\"' [routerLink]=\"'/about'\" title='About'>\r\n            <mat-icon svgIcon=\"cGallery\"></mat-icon>\r\n        </button>\r\n        <button class='btn' [class.active]='getUrl()==\"/gallery\"' [routerLink]=\"'/gallery'\" title='Gallery'>\r\n            <mat-icon>view_comfy</mat-icon>\r\n        </button>\r\n        <button class='btn' [class.active]='getUrl()==\"/dashboard\"' [routerLink]=\"'/dashboard'\" title='Dashboard'>\r\n            <mat-icon svgIcon=\"cDashboard\"></mat-icon>\r\n        </button>\r\n        <button class='btn' [class.active]='getUrl()==\"/flowchart\"' [routerLink]=\"'/flowchart'\" title='Flowchart'>\r\n            <mat-icon svgIcon=\"cFlowchart\"></mat-icon>\r\n        </button>\r\n        <button class='btn' [class.active]='getUrl()==\"/editor\"' [routerLink]=\"'/editor'\" title='Procedure'>\r\n            <mat-icon svgIcon=\"cEditor\"></mat-icon>\r\n        </button>\r\n                \r\n        <!-- execute button -->\r\n        <div class='executeCls' [class.disabled]='!executeCheck'>\r\n            <execute ></execute>\r\n        </div>\r\n    </div>\r\n\r\n    <div class='nodename-container' *ngIf='executeCheck'>\r\n        <div id = 'node-name' (click)='openNodeMenu($event)'><span id='node--name' title='{{getNode().name}}'>{{flowchart.meta.selected_nodes[0]}}. {{getNode().name}}</span><span id='node--arr'>▾</span></div>\r\n        <div id=\"nodeMenu\">\r\n            <div *ngFor='let nd of flowchart.nodes; let i = index;'>\r\n                <li (click)=\"changeNode(i)\"> \r\n                    {{i}}. {{nd.name}}\r\n                </li>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <div class='filename-container' *ngIf='executeCheck'>\r\n        <!-- <div class = \"divider\"></div> -->\r\n\r\n        <!-- <div id='filename' (click)='openDropdownMenu($event)'>{{getTitle()}}</div> -->\r\n        <button id='dropdownMenuButton' class='menu-btn' (click)='openDropdownMenu($event)' title='Procedure'>\r\n            <mat-icon>menu</mat-icon>\r\n        </button>\r\n        <div class='dropdownContainer'>\r\n            <div id=\"dropdownMenu\">\r\n                <button onclick=\"document.getElementById('newfile').click();\"\r\n                title=\"Create New Flowchart\"> \r\n                    <mat-icon>rotate_left</mat-icon> \r\n                    New File\r\n                </button>\r\n                <br>\r\n                <button onclick=\"document.getElementById('savefile').click();\"\r\n                title=\"Save Flowchart File to Computer\">\r\n                    <mat-icon>save_alt</mat-icon>\r\n                    Save File\r\n                </button>\r\n                <br>\r\n                <button (click)=\"loadFile()\"\r\n                title=\"Load Flowchart File from Computer\">\r\n                    <mat-icon>launch</mat-icon>\r\n                    Load File \r\n                </button>\r\n                <br>\r\n                <button (click)=\"openUrlDialog($event)\"\r\n                title=\"Generate Möbius view url from url of .mob file\">\r\n                    <mat-icon>link</mat-icon>\r\n                    &nbsp;Publish&nbsp;\r\n                </button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<dialog id='genUrlDialog'>\r\n    <p>To publish your model, please upload your Möbius (.mob) file to an online file server to allows\r\n        you to share the URL. (For example, you can upload your file to platforms such Github, Dropbox\r\n        and Qiniu.) Then paste the URL for file below, and click 'Validate Url'. </p>\r\n    <br>\r\n    <br>\r\n    MOB file URL: <br>\r\n    <textarea [(ngModel)]='urlSet[0]' \r\n            [class.valid]='urlValid === true' \r\n            [class.invalid]='urlValid === false'\r\n            (keyup)='urlValid = undefined'></textarea><br>\r\n    <button (click)='validateUrl()'>Validate Url</button>\r\n\r\n    <ng-container *ngIf='urlValid === true'>\r\n    \r\n        <hr>\r\n        <input id='radio1' type='radio' name='showPage' value='publish' [(ngModel)]='urlSet[1]'/> <label for='radio1'>Uneditable</label> <br>\r\n        <input id='radio2' type='radio' name='showPage' value='dashboard' [(ngModel)]='urlSet[1]'/> <label for='radio2'>Editable</label>\r\n        <hr>\r\n    \r\n        <ng-container *ngIf='urlSet[1] == \"dashboard\"; else publish_template'>\r\n            <input id='radio3' type='radio' name='displayType' value='&node=' [(ngModel)]='urlSet[2]'/> <label for='radio3'>Show Specific Node</label> <br>\r\n            <input id='radio4' type='radio' name='displayType' value='' [(ngModel)]='urlSet[2]'/> <label for='radio4'>Show Dashboard</label> \r\n            <hr>\r\n            <ng-container *ngIf='urlSet[2] == \"&node=\"'>\r\n                <!-- Shown Node Index: <input [(ngModel)]='urlSet[3]'/> -->\r\n                Node Shown: <select [(ngModel)]='urlSet[3]'>\r\n                    <option *ngFor='let node of urlNodes; let i = index' value={{i}}>{{i}}. {{node.name}}</option>\r\n                </select>\r\n                <hr>\r\n            </ng-container>\r\n        </ng-container>\r\n        <ng-template #publish_template>\r\n            <input id='radio3D' type='radio' name='showViewer' value='&viewer=0' [(ngModel)]='urlSet[4]'/> <label for='radio3D'>3D Viewer</label> <br>\r\n            <input id='radioGeo' type='radio' name='showViewer' value='&viewer=1' [(ngModel)]='urlSet[4]'/> <label for='radioGeo'>Geo Viewer</label> <br>\r\n            <input id='radioBothV' type='radio' name='showViewer' value='' [(ngModel)]='urlSet[4]'/> <label for='radioBothV'>Both</label>\r\n            <hr>\r\n        </ng-template>\r\n    \r\n        <button (click)='generateUrl()'>Create Link</button>\r\n\r\n        <div>\r\n            <hr>\r\n            Möbius Link:<br>\r\n            <textarea [class.disabled]='true' id='generatedLink' disabled></textarea>\r\n        </div>\r\n    </ng-container>\r\n\r\n</dialog>\r\n"

/***/ }),

/***/ "./src/app/shared/components/header/panel-header.component.scss":
/*!**********************************************************************!*\
  !*** ./src/app/shared/components/header/panel-header.component.scss ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "panel-header button {\n  display: inline-block;\n  vertical-align: bottom;\n  background-color: transparent;\n  color: #808080;\n  border: none;\n  outline: none;\n  cursor: pointer;\n  padding: 0px;\n  width: 34px;\n  height: 34px;\n  transition: 0.3s;\n  font-size: 15px; }\n\npublish-header button {\n  display: inline-block;\n  vertical-align: bottom;\n  background-color: transparent;\n  color: #808080;\n  border: none;\n  outline: none;\n  cursor: pointer;\n  padding: 0px;\n  width: 34px;\n  height: 34px;\n  transition: 0.3s;\n  font-size: 15px; }\n\nbutton:hover {\n  color: #00006d; }\n\npanel-header button.active {\n  color: #00006d; }\n\npublish-header button.active {\n  color: #00006d; }\n\n.container__header {\n  display: inline-flex;\n  float: left;\n  width: 100%;\n  height: 41px;\n  padding: 0px;\n  margin: 0px; }\n\n.container__header .header-btn-group {\n    flex-shrink: 0;\n    display: inline-flex;\n    flex-flow: row nowrap;\n    height: 41px;\n    padding: 0px;\n    margin: 0px;\n    overflow: hidden;\n    z-index: 1; }\n\n.container__header .header-btn-group .mat-icon-button {\n      height: 40px !important;\n      width: 40px !important; }\n\n.container__header .header-btn-group .active {\n      background-color: transparent; }\n\n.container__header .nodename-container {\n    z-index: 1; }\n\n.container__header .filename-container {\n    z-index: 5;\n    width: calc(100% - 170px - 37px); }\n\n.container__header .filename-container .menu-btn {\n      float: right; }\n\n.container__header .filename-container .dropdownContainer {\n      width: 1px;\n      float: right;\n      position: relative; }\n\n.container__header #filename {\n    cursor: pointer;\n    height: 40px;\n    font-size: 15px;\n    color: #373737;\n    width: 100%;\n    padding-top: 0px;\n    text-align: left;\n    vertical-align: middle;\n    line-height: 35px;\n    z-index: 5;\n    overflow: hidden;\n    text-overflow: ellipsis; }\n\n.container__header #filename:hover {\n      color: #00006d; }\n\n/*\r\nbutton.mat-menu-item{ // drop-down (top-bar) menu buttons\r\n    background-color: $color5;\r\n    color: $color2;\r\n    mat-icon{\r\n        color: $color2;\r\n    }\r\n\r\n    height: $header-height;\r\n    line-height: $header-height;\r\n    font-size: $fsize2;\r\n    text-align: center;\r\n}\r\n\r\nbutton.mat-menu-item:hover{\r\n    background-color: $color5;\r\n    color: $color5;\r\n    // mat-icon{\r\n    //     color: $color5;\r\n    // }\r\n}\r\n*/\n\n#dropdownMenu {\n  display: none;\n  position: fixed;\n  top: 40px;\n  transition: display 0.4s;\n  z-index: 1;\n  background-color: #fafafb;\n  border: 1px solid #999999; }\n\n#dropdownMenu button {\n    display: inline-block;\n    width: 100px;\n    line-height: 30px;\n    height: 30px;\n    font-size: 12px;\n    vertical-align: middle;\n    color: #373737; }\n\n#dropdownMenu button mat-icon {\n      color: inherit;\n      vertical-align: middle;\n      font-size: 20px;\n      height: 20px;\n      width: 20px; }\n\n#dropdownMenu button:hover {\n      color: #00006d;\n      background-color: #E6E6E6; }\n\n#node-name {\n  min-height: 30px;\n  color: #373737;\n  padding-left: 8px;\n  margin: 0px;\n  width: -webkit-fit-content;\n  width: -moz-fit-content;\n  width: fit-content;\n  font-family: sans-serif;\n  line-height: 30px;\n  font-size: 12px;\n  font-weight: 550;\n  display: flex;\n  flex-flow: row nowrap;\n  cursor: pointer; }\n\n#node-name #node--name {\n    text-overflow: ellipsis;\n    overflow: hidden;\n    white-space: nowrap; }\n\n#nodeMenu {\n  display: none;\n  position: fixed;\n  transition: display 0.4s;\n  top: 40px;\n  width: 125px;\n  z-index: 1;\n  background-color: #fafafb;\n  border: 1px solid #999999;\n  cursor: pointer; }\n\n#nodeMenu button {\n    display: block;\n    background-color: #fafafb;\n    border: 0px;\n    margin: 0px;\n    padding: 0px;\n    line-height: 30px;\n    height: 30px;\n    font-size: 12px; }\n\n#nodeMenu li {\n    display: block;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n    line-height: 20px;\n    background-color: #fafafb;\n    font-weight: 550;\n    border: 0px;\n    margin: 0px;\n    padding: 0px 10px 0px 10px;\n    line-height: 30px;\n    height: 30px;\n    font-size: 12px;\n    color: #373737; }\n\n#nodeMenu li:hover {\n      color: #00006d;\n      background-color: #E6E6E6; }\n\n.executeCls.disabled {\n  display: none; }\n\n#genUrlDialog {\n  font-family: 12px sans-serif;\n  color: #808080;\n  background-color: #fafafb;\n  top: 10%;\n  max-width: 605px;\n  padding: 5px; }\n\n#genUrlDialog textarea {\n    width: 600px;\n    max-width: 600px;\n    min-height: 70px;\n    background-color: #fafafb; }\n\n#genUrlDialog textarea.disabled {\n      background-color: #E6E6E6; }\n\n#genUrlDialog textarea.valid {\n      border: 2px solid #82bf6e; }\n\n#genUrlDialog textarea.invalid {\n      border: 2px solid #E94858; }\n\n#genUrlDialog select {\n    color: #808080; }\n\n#genUrlDialog button {\n    width: -webkit-fit-content;\n    width: -moz-fit-content;\n    width: fit-content;\n    padding: 0px 5px 0px 5px;\n    background-color: #E6E6E6;\n    color: #808080; }\n\r\n/*# sourceMappingURL=data:application/json;base64, */"

/***/ }),

/***/ "./src/app/shared/components/header/panel-header.component.ts":
/*!********************************************************************!*\
  !*** ./src/app/shared/components/header/panel-header.component.ts ***!
  \********************************************************************/
/*! exports provided: PanelHeaderComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PanelHeaderComponent", function() { return PanelHeaderComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var _shared_services__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @shared/services */ "./src/app/shared/services/index.ts");
/* harmony import */ var circular_json__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! circular-json */ "./node_modules/circular-json/build/circular-json.node.js");
/* harmony import */ var circular_json__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(circular_json__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _models_procedure__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @models/procedure */ "./src/app/shared/models/procedure/index.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};





var canvas = document.createElement('canvas');
var ctx = canvas.getContext('2d');
ctx.font = '12px sans-serif';
var PanelHeaderComponent = /** @class */ (function () {
    function PanelHeaderComponent(dataService, router) {
        this.dataService = dataService;
        this.router = router;
        this.urlSet = ['', 'publish', '', '', ''];
        if (this.router.url === '/about' || this.router.url === '/gallery') {
            this.executeCheck = false;
        }
        else {
            this.executeCheck = true;
        }
    }
    PanelHeaderComponent.prototype.getUrl = function () {
        return this.router.url;
    };
    PanelHeaderComponent.prototype.getNode = function () {
        return this.flowchart.nodes[this.flowchart.meta.selected_nodes[0]];
    };
    PanelHeaderComponent.prototype.changeNode = function (index) {
        var _this = this;
        this.dataService.flowchart.meta.selected_nodes = [index];
        if (this.router.url === '/editor' &&
            (index === 0 || index === this.dataService.flowchart.nodes.length - 1)) {
            setTimeout(function () {
                _this.adjustTextArea();
            }, 50);
        }
    };
    PanelHeaderComponent.prototype.adjustTextArea = function () {
        var textarea = document.getElementById('flowchart-desc');
        if (textarea) {
            var desc = this.dataService.flowchart.description.split('\n');
            var textareaWidth = textarea.getBoundingClientRect().width - 30;
            var lineCount = 0;
            for (var _i = 0, desc_1 = desc; _i < desc_1.length; _i++) {
                var line = desc_1[_i];
                lineCount += Math.floor(ctx.measureText(line).width / textareaWidth) + 1;
            }
            textarea.style.height = lineCount * 14 + 4 + 'px';
            for (var _a = 0, _b = this.dataService.node.procedure; _a < _b.length; _a++) {
                var prod = _b[_a];
                if (prod.type !== _models_procedure__WEBPACK_IMPORTED_MODULE_4__["ProcedureTypes"].Constant) {
                    continue;
                }
                textarea = document.getElementById(prod.ID + '_desc');
                if (textarea && prod.meta.description) {
                    var prodDesc = prod.meta.description.split('\n');
                    var prodTextareaWidth = textarea.getBoundingClientRect().width - 30;
                    var prodLineCount = 0;
                    for (var _c = 0, prodDesc_1 = prodDesc; _c < prodDesc_1.length; _c++) {
                        var line = prodDesc_1[_c];
                        prodLineCount += Math.floor(ctx.measureText(line).width / prodTextareaWidth) + 1;
                    }
                    textarea.style.height = prodLineCount * 14 + 4 + 'px';
                }
            }
        }
        textarea = document.getElementById('flowchart-return');
        if (textarea) {
            var desc = (this.dataService.flowchart.returnDescription || '').split('\n');
            var textareaWidth = textarea.getBoundingClientRect().width - 30;
            var lineCount = 0;
            for (var _d = 0, desc_2 = desc; _d < desc_2.length; _d++) {
                var line = desc_2[_d];
                lineCount += Math.floor(ctx.measureText(line).width / textareaWidth) + 1;
            }
            textarea.style.height = lineCount * 14 + 4 + 'px';
        }
    };
    PanelHeaderComponent.prototype.loadFile = function () {
        document.getElementById('file-input').click();
        // this.router.navigate(['/dashboard']);
    };
    PanelHeaderComponent.prototype.openDropdownMenu = function (e) {
        /*
        const dropdowns = document.getElementsByClassName('dropdown-content');
        for (let i = 0; i < dropdowns.length; i++) {
            const openDropdown = dropdowns[i];
            if (openDropdown.classList.contains('show')) {
            openDropdown.classList.remove('show');
            }
        }
        */
        var stl = document.getElementById('dropdownMenu').style;
        if (!stl.display || stl.display === 'none') {
            var pos = document.getElementById('dropdownMenuButton').getBoundingClientRect();
            stl.left = (pos.left + 34 - 100) + 'px';
            stl.display = 'block';
            // const bRect = (<Element>e.target).getBoundingClientRect();
            // stl.transform = `translate(` + bRect.left + `px, ` + bRect.height + `px)`;
        }
        else {
            stl.display = 'none';
        }
        e.stopPropagation();
    };
    PanelHeaderComponent.prototype.openNodeMenu = function (e) {
        var stl = document.getElementById('nodeMenu').style;
        if (!stl.display || stl.display === 'none') {
            stl.display = 'block';
        }
        else {
            stl.display = 'none';
        }
        e.stopPropagation();
    };
    PanelHeaderComponent.prototype.openUrlDialog = function (event) {
        event.stopPropagation();
        this.dialogBox = document.getElementById('genUrlDialog');
        this.dialogBox.showModal();
    };
    PanelHeaderComponent.prototype.onWindowClick = function (event) {
        var dropdownMenu = document.getElementById('dropdownMenu');
        if (dropdownMenu) {
            dropdownMenu.style.display = 'none';
        }
        var nodeMenu = document.getElementById('nodeMenu');
        if (nodeMenu) {
            nodeMenu.style.display = 'none';
        }
        var galleryMenu = document.getElementById('galleryMenu');
        if (galleryMenu) {
            galleryMenu.style.display = 'none';
        }
        var helpMenu = document.getElementById('helpMenu');
        if (helpMenu) {
            helpMenu.style.display = 'none';
        }
        if (this.dialogBox) {
            if (event.target.tagName === 'SELECT') {
                return;
            }
            var rect = this.dialogBox.getBoundingClientRect();
            var isInDialog = (rect.top <= event.clientY && event.clientY <= rect.top + rect.height
                && rect.left <= event.clientX && event.clientX <= rect.left + rect.width);
            if (!isInDialog) {
                this.dialogBox.close();
                this.dialogBox = undefined;
            }
        }
    };
    PanelHeaderComponent.prototype.validateUrl = function () {
        var _this = this;
        if (this.urlSet[0] === '') {
            this.urlValid = false;
            return;
        }
        var request = new XMLHttpRequest();
        var url = this.urlSet[0];
        if (url.indexOf('dropbox') !== -1) {
            url = url.replace('www', 'dl').replace('?dl=0', '');
        }
        request.open('GET', url);
        request.onload = function () {
            if (request.status === 200) {
                try {
                    var f = circular_json__WEBPACK_IMPORTED_MODULE_3__["parse"](request.responseText);
                    _this.urlNodes = f.flowchart.nodes;
                    _this.urlValid = true;
                }
                catch (ex) {
                    _this.urlValid = false;
                }
            }
            else {
                _this.urlValid = false;
            }
        };
        request.onerror = function () {
            _this.urlValid = false;
        };
        request.send();
    };
    PanelHeaderComponent.prototype.generateUrl = function () {
        if (this.urlSet[0] === '') {
            return;
        }
        if (this.urlSet[1] === 'publish') {
            this.urlSet[2] = '';
            this.urlSet[3] = '';
        }
        else if (this.urlSet[2] === '') {
            this.urlSet[3] = '';
        }
        else if (this.urlSet[3] === '') {
            this.urlSet[2] = '';
        }
        var url = this.urlSet[0];
        if (url.indexOf('dropbox') !== -1) {
            url = url.replace('www', 'dl').replace('?dl=0', '');
        }
        url = url.replace(/\//g, '%2F');
        var txtArea = document.getElementById('generatedLink');
        txtArea.innerHTML = window.location.origin + "/" + this.urlSet[1] +
            ("?file=" + url + this.urlSet[2] + this.urlSet[3] + this.urlSet[4]);
    };
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", Object)
    ], PanelHeaderComponent.prototype, "flowchart", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["HostListener"])('window:click', ['$event']),
        __metadata("design:type", Function),
        __metadata("design:paramtypes", [MouseEvent]),
        __metadata("design:returntype", void 0)
    ], PanelHeaderComponent.prototype, "onWindowClick", null);
    PanelHeaderComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'panel-header',
            template: __webpack_require__(/*! ./panel-header.component.html */ "./src/app/shared/components/header/panel-header.component.html"),
            styles: [__webpack_require__(/*! ./panel-header.component.scss */ "./src/app/shared/components/header/panel-header.component.scss")]
        }),
        __metadata("design:paramtypes", [_shared_services__WEBPACK_IMPORTED_MODULE_2__["DataService"], _angular_router__WEBPACK_IMPORTED_MODULE_1__["Router"]])
    ], PanelHeaderComponent);
    return PanelHeaderComponent;
}());



/***/ }),

/***/ "./src/app/shared/components/header/publish-header.component.html":
/*!************************************************************************!*\
  !*** ./src/app/shared/components/header/publish-header.component.html ***!
  \************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class='container__header'>\r\n    <div class='filename-container'>\r\n        <div id='filename'>{{getTitle()}}</div>\r\n    </div>\r\n        \r\n    <!-- buttons -->\r\n    <div class='header-btn-group'>\r\n        <a  title=\"Share\" href={{expando_href}}>\r\n            <button class=\"btn\" mat-icon-button>\r\n                    <mat-icon>share</mat-icon>\r\n            </button>\r\n        </a>\r\n                \r\n        <execute></execute>\r\n    </div>\r\n\r\n\r\n\r\n</div>\r\n"

/***/ }),

/***/ "./src/app/shared/components/header/publish-header.component.scss":
/*!************************************************************************!*\
  !*** ./src/app/shared/components/header/publish-header.component.scss ***!
  \************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "panel-header button {\n  display: inline-block;\n  vertical-align: bottom;\n  background-color: transparent;\n  color: #808080;\n  border: none;\n  outline: none;\n  cursor: pointer;\n  padding: 0px;\n  width: 34px;\n  height: 34px;\n  transition: 0.3s;\n  font-size: 15px; }\n\npublish-header button {\n  display: inline-block;\n  vertical-align: bottom;\n  background-color: transparent;\n  color: #808080;\n  border: none;\n  outline: none;\n  cursor: pointer;\n  padding: 0px;\n  width: 34px;\n  height: 34px;\n  transition: 0.3s;\n  font-size: 15px; }\n\nbutton:hover {\n  color: #00006d; }\n\npanel-header button.active {\n  color: #00006d; }\n\npublish-header button.active {\n  color: #00006d; }\n\n.container__header {\n  position: relative;\n  display: inline-flex;\n  float: left;\n  width: 100%;\n  height: 41px;\n  padding: 0px;\n  margin: 0px; }\n\n.container__header .header-btn-group {\n    flex-shrink: 0;\n    position: absolute;\n    right: 0px;\n    flex-flow: row nowrap;\n    height: 41px;\n    padding: 0px;\n    margin: 0px;\n    overflow: hidden;\n    z-index: 1; }\n\n.container__header .header-btn-group .mat-icon-button {\n      height: 40px !important;\n      width: 40px !important; }\n\n.container__header .header-btn-group .active {\n      background-color: transparent; }\n\n.container__header .filename-container {\n    z-index: 1;\n    padding-left: 10px;\n    font-weight: 700;\n    width: calc(100% - 44px);\n    display: flex;\n    justify-content: flex-start; }\n\n.container__header #filename {\n    cursor: default;\n    height: 40px;\n    font-size: 15px;\n    color: #373737;\n    width: 100%;\n    padding-top: 0px;\n    text-align: left;\n    vertical-align: middle;\n    line-height: 35px;\n    z-index: 5;\n    overflow: hidden;\n    text-overflow: ellipsis; }\n\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc2hhcmVkL2NvbXBvbmVudHMvaGVhZGVyL0M6XFxEcm9wYm94XFxGaWxlc1xcU29mdHdhcmVcXEdpdEh1YlxcZGVzaWduLWF1dG9tYXRpb25cXG1vYml1cy1wYXJhbWV0cmljLW1vZGVsbGVyL3NyY1xcc2Nzc1xcaGVhZGVyLWJ1dHRvbi5zY3NzIiwic3JjL2FwcC9zaGFyZWQvY29tcG9uZW50cy9oZWFkZXIvQzpcXERyb3Bib3hcXEZpbGVzXFxTb2Z0d2FyZVxcR2l0SHViXFxkZXNpZ24tYXV0b21hdGlvblxcbW9iaXVzLXBhcmFtZXRyaWMtbW9kZWxsZXIvc3JjXFxzY3NzXFxjb2xvcnMuc2NzcyIsInNyYy9hcHAvc2hhcmVkL2NvbXBvbmVudHMvaGVhZGVyL0M6XFxEcm9wYm94XFxGaWxlc1xcU29mdHdhcmVcXEdpdEh1YlxcZGVzaWduLWF1dG9tYXRpb25cXG1vYml1cy1wYXJhbWV0cmljLW1vZGVsbGVyL3NyY1xcc2Nzc1xcdmFyaWFibGVzLnNjc3MiLCJzcmMvYXBwL3NoYXJlZC9jb21wb25lbnRzL2hlYWRlci9DOlxcRHJvcGJveFxcRmlsZXNcXFNvZnR3YXJlXFxHaXRIdWJcXGRlc2lnbi1hdXRvbWF0aW9uXFxtb2JpdXMtcGFyYW1ldHJpYy1tb2RlbGxlci9zcmNcXGFwcFxcc2hhcmVkXFxjb21wb25lbnRzXFxoZWFkZXJcXHB1Ymxpc2gtaGVhZGVyLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUdBO0VBQ0kscUJBQXFCO0VBQ3JCLHNCQUFzQjtFQUN0Qiw2QkFBNkI7RUFDN0IsY0NOWTtFRE9aLFlBQVk7RUFDWixhQUFhO0VBQ2IsZUFBZTtFQUNmLFlBQVk7RUFDWixXQUFXO0VBQ1gsWUFBWTtFQUNaLGdCQUFnQjtFQUNoQixlRVhTLEVBQUE7O0FGY2I7RUFDSSxxQkFBcUI7RUFDckIsc0JBQXNCO0VBQ3RCLDZCQUE2QjtFQUM3QixjQ3JCWTtFRHNCWixZQUFZO0VBQ1osYUFBYTtFQUNiLGVBQWU7RUFDZixZQUFZO0VBQ1osV0FBVztFQUNYLFlBQVk7RUFDWixnQkFBZ0I7RUFDaEIsZUUxQlMsRUFBQTs7QUY2QmI7RUFDSSxjQ3RCMkIsRUFBQTs7QUR5Qi9CO0VBQ0ksY0MxQjJCLEVBQUE7O0FENkIvQjtFQUNJLGNDOUIyQixFQUFBOztBRVAvQjtFQUNJLGtCQUFrQjtFQUNsQixvQkFBb0I7RUFDcEIsV0FBVztFQUNYLFdBQVc7RUFDWCxZQUEwQjtFQUMxQixZQUFZO0VBQ1osV0FBVyxFQUFBOztBQVBmO0lBVVEsY0FBYztJQUNkLGtCQUFrQjtJQUNsQixVQUFVO0lBQ1YscUJBQXFCO0lBQ3JCLFlBQTBCO0lBQzFCLFlBQVk7SUFDWixXQUFXO0lBQ1gsZ0JBQWdCO0lBRWhCLFVBQVUsRUFBQTs7QUFuQmxCO01Bc0JZLHVCQUFpQztNQUNqQyxzQkFBZ0MsRUFBQTs7QUF2QjVDO01BMEJZLDZCQUE2QixFQUFBOztBQTFCekM7SUE4QlEsVUFBVTtJQUNWLGtCQUFrQjtJQUNsQixnQkFBZ0I7SUFDaEIsd0JBQXdCO0lBQ3hCLGFBQWE7SUFDYiwyQkFBMkIsRUFBQTs7QUFuQ25DO0lBdUNRLGVBQWU7SUFDZixZRDNDWTtJQzRDWixlRDFDSztJQzJDTCxjRnJDUTtJRXNDUixXQUFXO0lBRVgsZ0JBQWdCO0lBQ2hCLGdCQUFnQjtJQUNoQixzQkFBc0I7SUFDdEIsaUJBQWlDO0lBQ2pDLFVBQVU7SUFFVixnQkFBZ0I7SUFDaEIsdUJBQXVCLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9zaGFyZWQvY29tcG9uZW50cy9oZWFkZXIvcHVibGlzaC1oZWFkZXIuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJAaW1wb3J0ICd+c2Nzcy92YXJpYWJsZXMnO1xyXG5AaW1wb3J0ICd+c2Nzcy9jb2xvcnMnO1xyXG5cclxucGFuZWwtaGVhZGVyIGJ1dHRvbiB7XHJcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICB2ZXJ0aWNhbC1hbGlnbjogYm90dG9tO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XHJcbiAgICBjb2xvcjogJGNvbG9yMTtcclxuICAgIGJvcmRlcjogbm9uZTtcclxuICAgIG91dGxpbmU6IG5vbmU7XHJcbiAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgICBwYWRkaW5nOiAwcHg7XHJcbiAgICB3aWR0aDogMzRweDtcclxuICAgIGhlaWdodDogMzRweDtcclxuICAgIHRyYW5zaXRpb246IDAuM3M7XHJcbiAgICBmb250LXNpemU6ICRmc2l6ZTE7XHJcbn1cclxuXHJcbnB1Ymxpc2gtaGVhZGVyIGJ1dHRvbiB7XHJcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICB2ZXJ0aWNhbC1hbGlnbjogYm90dG9tO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XHJcbiAgICBjb2xvcjogJGNvbG9yMTtcclxuICAgIGJvcmRlcjogbm9uZTtcclxuICAgIG91dGxpbmU6IG5vbmU7XHJcbiAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgICBwYWRkaW5nOiAwcHg7XHJcbiAgICB3aWR0aDogMzRweDtcclxuICAgIGhlaWdodDogMzRweDtcclxuICAgIHRyYW5zaXRpb246IDAuM3M7XHJcbiAgICBmb250LXNpemU6ICRmc2l6ZTE7XHJcbn1cclxuXHJcbmJ1dHRvbjpob3ZlciB7XHJcbiAgICBjb2xvcjokc2VsZWN0ZWQtY29sb3I7XHJcbn1cclxuXHJcbnBhbmVsLWhlYWRlciBidXR0b24uYWN0aXZlIHtcclxuICAgIGNvbG9yOiAkc2VsZWN0ZWQtY29sb3I7XHJcbn1cclxuXHJcbnB1Ymxpc2gtaGVhZGVyIGJ1dHRvbi5hY3RpdmUge1xyXG4gICAgY29sb3I6ICRzZWxlY3RlZC1jb2xvcjtcclxufVxyXG4iLCJcclxuJGNvbG9yMTogIzgwODA4MDtcclxuJGNvbG9yMjogIzk5OTk5OTtcclxuJGNvbG9yMzogI0IzQjNCMzsgXHJcbiRjb2xvcjQ6ICNDQ0NDQ0M7XHJcbiRjb2xvcjU6ICNFNkU2RTY7XHJcbiRjb2xvcjUtNTogcmdiKDI0NSwgMjQ1LCAyNDUpO1xyXG4kY29sb3I2OiByZ2IoMjUwLCAyNTAsIDI1MSk7XHJcblxyXG4kY29sb3I3OiB3aGl0ZTtcclxuJGNvbG9yODogIzM3MzczNztcclxuXHJcbiRzZWxlY3RlZC1jb2xvcjogcmdiKDAsIDAsIDEwOSk7XHJcbiRob3Zlci1jb2xvcjogJGNvbG9yMjtcclxuXHJcbiRlcnJvci1jb2xvcjogI0U5NDg1ODsgLy9waW5rLXJlZFxyXG4kZXJyb3ItY29sb3ItbHQ6IHJnYigyNTUsIDIyMCwgMjI0KTtcclxuJHBjb2xvcjI6ICNGM0EzMkE7IC8vb3JhbmdlLXllbGxvd1xyXG4kcHJpbnQtY29sb3I6IHJnYigxMzAsIDE5MSwgMTEwKTsgLy9saWdodGdyZWVuXHJcbiRwcmludC1jb2xvci1sdDogcmdiKDIzMCwgMjU1LCAyMjEpO1xyXG4kc2VsZWN0R2VvbS1jb2xvcjogcmdiKDI1NSwgMTc0LCAwKTsgLy8gbGlnaHQgb3JhbmdlXHJcbiRzZWxlY3RHZW9tLWNvbG9yLWx0OiByZ2IoMjU1LCAyMjUsIDE2MCk7XHJcblxyXG4vLyAkcHJvZC1iYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMjUwLDI1MCwyNTApO1xyXG4vLyAkYmFja2dyb3VuZC1jb2xvcjogcmdiKDIyMCwyMjAsMjIwKTtcclxuJGZ1bmN0aW9uLXRleHQtY29sb3I6IHJnYigxOTAsIDE0MCwgMzApO1xyXG4kZnVuY3Rpb24tdGV4dC1jb2xvcjI6IHJnYigxOCwgMTI2LCAxMzYpO1xyXG4kYmFzaWMtZnVuY3Rpb24tdGV4dC1jb2xvcjogcmdiKDIwMCwgNzAsIDE1MCk7XHJcbiRjb21tZW50LWNvbG9yOiBkYXJrZ3JlZW47XHJcbiIsIiRwYWRkaW5nOiA0MHB4OyAvLyA/IG5vdCB1c2VkXHJcbiRzbWFsbC1wYWRkaW5nOiAxNXB4O1xyXG4kaGVhZGVyLWhlaWdodDogNDBweDtcclxuXHJcbiRmc2l6ZTE6IDE1cHg7XHJcbiRmc2l6ZTI6IDEycHg7XHJcbiRmc2l6ZTM6IDMwcHg7XHJcblxyXG4kcG9ydC1zaXplOiAxNXB4O1xyXG4kZGVmYXVsdC1zaWRlLXBhZGRpbmc6IDE1cHg7XHJcblxyXG4kZGlzYWJsZWQtb3BhY2l0eTogMC40OyIsIkBpbXBvcnQgJ35zY3NzL2NvbG9ycyc7XHJcbkBpbXBvcnQgJ35zY3NzL3ZhcmlhYmxlcyc7XHJcbkBpbXBvcnQgJ35zY3NzL2hlYWRlci1idXR0b24nO1xyXG5cclxuXHJcbi5jb250YWluZXJfX2hlYWRlcntcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgIGRpc3BsYXk6IGlubGluZS1mbGV4O1xyXG4gICAgZmxvYXQ6IGxlZnQ7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGhlaWdodDogJGhlYWRlci1oZWlnaHQgKyAxO1xyXG4gICAgcGFkZGluZzogMHB4O1xyXG4gICAgbWFyZ2luOiAwcHg7XHJcblxyXG4gICAgLmhlYWRlci1idG4tZ3JvdXAge1xyXG4gICAgICAgIGZsZXgtc2hyaW5rOiAwO1xyXG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgICByaWdodDogMHB4O1xyXG4gICAgICAgIGZsZXgtZmxvdzogcm93IG5vd3JhcDtcclxuICAgICAgICBoZWlnaHQ6ICRoZWFkZXItaGVpZ2h0ICsgMTtcclxuICAgICAgICBwYWRkaW5nOiAwcHg7XHJcbiAgICAgICAgbWFyZ2luOiAwcHg7XHJcbiAgICAgICAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICAgICAgICAvLyBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcclxuICAgICAgICB6LWluZGV4OiAxO1xyXG5cclxuICAgICAgICAubWF0LWljb24tYnV0dG9ue1xyXG4gICAgICAgICAgICBoZWlnaHQ6ICRoZWFkZXItaGVpZ2h0ICFpbXBvcnRhbnQ7XHJcbiAgICAgICAgICAgIHdpZHRoOiAkaGVhZGVyLWhlaWdodCAhaW1wb3J0YW50O1xyXG4gICAgICAgIH1cclxuICAgICAgICAuYWN0aXZle1xyXG4gICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICAuZmlsZW5hbWUtY29udGFpbmVye1xyXG4gICAgICAgIHotaW5kZXg6IDE7XHJcbiAgICAgICAgcGFkZGluZy1sZWZ0OiAxMHB4O1xyXG4gICAgICAgIGZvbnQtd2VpZ2h0OiA3MDA7XHJcbiAgICAgICAgd2lkdGg6IGNhbGMoMTAwJSAtIDQ0cHgpOy8vd2lkdGggb2YgYnRuLWNvbnRhaW5lciB3aWR0aCBvZiB6b29tIGZpdCBpbiBmbG93Y2hhcnQ7XHJcbiAgICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtc3RhcnQ7XHJcbiAgICB9XHJcbiAgICAjZmlsZW5hbWV7XHJcbiAgICAgICAgLy9kaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICAgICAgY3Vyc29yOiBkZWZhdWx0O1xyXG4gICAgICAgIGhlaWdodDogJGhlYWRlci1oZWlnaHQ7XHJcbiAgICAgICAgZm9udC1zaXplOiAkZnNpemUxO1xyXG4gICAgICAgIGNvbG9yOiAkY29sb3I4O1xyXG4gICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgIC8vIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xyXG4gICAgICAgIHBhZGRpbmctdG9wOiAwcHg7XHJcbiAgICAgICAgdGV4dC1hbGlnbjogbGVmdDtcclxuICAgICAgICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xyXG4gICAgICAgIGxpbmUtaGVpZ2h0OiAkaGVhZGVyLWhlaWdodCAtIDVweDtcclxuICAgICAgICB6LWluZGV4OiA1O1xyXG5cclxuICAgICAgICBvdmVyZmxvdzogaGlkZGVuO1xyXG4gICAgICAgIHRleHQtb3ZlcmZsb3c6IGVsbGlwc2lzO1xyXG4gICAgfVxyXG59XHJcbiJdfQ== */"

/***/ }),

/***/ "./src/app/shared/components/header/publish-header.component.ts":
/*!**********************************************************************!*\
  !*** ./src/app/shared/components/header/publish-header.component.ts ***!
  \**********************************************************************/
/*! exports provided: PublishHeaderComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PublishHeaderComponent", function() { return PublishHeaderComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};

var PublishHeaderComponent = /** @class */ (function () {
    function PublishHeaderComponent() {
        var url = window.location.href.replace(/:/g, '%3A').replace(/\//g, '%2F');
        this.expando_href = "http://expando.github.io/add/?u=" + url + "&t=M%C3%B6bius%20Modeller%20Publish";
    }
    PublishHeaderComponent.prototype.getTitle = function () {
        return this.title.replace(/_/g, ' ');
    };
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", String)
    ], PublishHeaderComponent.prototype, "title", void 0);
    PublishHeaderComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'publish-header',
            template: __webpack_require__(/*! ./publish-header.component.html */ "./src/app/shared/components/header/publish-header.component.html"),
            styles: [__webpack_require__(/*! ./publish-header.component.scss */ "./src/app/shared/components/header/publish-header.component.scss")]
        }),
        __metadata("design:paramtypes", [])
    ], PublishHeaderComponent);
    return PublishHeaderComponent;
}());



/***/ }),

/***/ "./src/app/shared/components/navigation/navigation.component.ts":
/*!**********************************************************************!*\
  !*** ./src/app/shared/components/navigation/navigation.component.ts ***!
  \**********************************************************************/
/*! exports provided: NavigationComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NavigationComponent", function() { return NavigationComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};


var NavigationComponent = /** @class */ (function () {
    function NavigationComponent(_router) {
        this._router = _router;
        this._links = [
            { path: '/about',
                name: 'about'
            },
            { path: '/gallery',
                name: 'gallery'
            },
            { path: '/dashboard',
                name: 'dashboard'
            },
            { path: '/editor',
                name: 'editor'
            },
        ];
    }
    NavigationComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'navigation',
            template: "<ul class='nav'>\n                <li class='link' *ngFor='let link of _links;'\n                      [class.active]='link.path == _router.url'\n                      [routerLink]=\"link.path\"\n                      >{{link.name}}</li>\n              </ul>",
            styles: ["\n      ul.nav{\n        margin: 0px;\n        padding: 0px;\n      }\n\n      li.link{\n        display: inline;\n        border: 2px solid gray;\n        border-radius: 4px;\n        margin: 15px 15px 15px 0px;\n        padding: 5px;\n        text-transform: uppercase;\n        font-weight: 600;\n        cursor: pointer;\n        font-size: 16px;\n      }\n\n      li.link:hover{\n        background-color: gray;\n        color: white;\n      }\n\n      .active{\n        background-color: #222;\n        color: white;\n        border-color: #222 !important;\n      }\n  "]
        }),
        __metadata("design:paramtypes", [_angular_router__WEBPACK_IMPORTED_MODULE_1__["Router"]])
    ], NavigationComponent);
    return NavigationComponent;
}());



/***/ }),

/***/ "./src/app/shared/components/not-found/not-found.component.html":
/*!**********************************************************************!*\
  !*** ./src/app/shared/components/not-found/not-found.component.html ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<h1>Page Not Found</h1>\r\n<p>Dolore ex aliqua ut incididunt laborum deserunt pariatur officia.</p>\r\n"

/***/ }),

/***/ "./src/app/shared/components/not-found/not-found.component.scss":
/*!**********************************************************************!*\
  !*** ./src/app/shared/components/not-found/not-found.component.scss ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NoYXJlZC9jb21wb25lbnRzL25vdC1mb3VuZC9ub3QtZm91bmQuY29tcG9uZW50LnNjc3MifQ== */"

/***/ }),

/***/ "./src/app/shared/components/not-found/not-found.component.ts":
/*!********************************************************************!*\
  !*** ./src/app/shared/components/not-found/not-found.component.ts ***!
  \********************************************************************/
/*! exports provided: PageNotFoundComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PageNotFoundComponent", function() { return PageNotFoundComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};

var PageNotFoundComponent = /** @class */ (function () {
    function PageNotFoundComponent() {
    }
    PageNotFoundComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'page-not-found',
            template: __webpack_require__(/*! ./not-found.component.html */ "./src/app/shared/components/not-found/not-found.component.html"),
            styles: [__webpack_require__(/*! ./not-found.component.scss */ "./src/app/shared/components/not-found/not-found.component.scss")]
        }),
        __metadata("design:paramtypes", [])
    ], PageNotFoundComponent);
    return PageNotFoundComponent;
}());



/***/ }),

/***/ "./src/app/shared/components/notification/notification.component.html":
/*!****************************************************************************!*\
  !*** ./src/app/shared/components/notification/notification.component.html ***!
  \****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div id=\"notificationBox\">{{message}}</div>"

/***/ }),

/***/ "./src/app/shared/components/notification/notification.component.scss":
/*!****************************************************************************!*\
  !*** ./src/app/shared/components/notification/notification.component.scss ***!
  \****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "#notificationBox {\n  pointer-events: none;\n  opacity: 0;\n  min-width: 250px;\n  background-color: white;\n  color: #373737;\n  border: solid #808080 1px;\n  text-align: center;\n  padding: 16px;\n  position: fixed;\n  z-index: 1;\n  right: 40px;\n  top: 0px; }\n\n#notificationBox.show {\n  opacity: 1;\n  top: 20px;\n  transition: ease-in 0.2s; }\n\n#notificationBox.hide {\n  opacity: 0;\n  top: 0px;\n  transition: ease-in 0.2s; }\n\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc2hhcmVkL2NvbXBvbmVudHMvbm90aWZpY2F0aW9uL0M6XFxEcm9wYm94XFxGaWxlc1xcU29mdHdhcmVcXEdpdEh1YlxcZGVzaWduLWF1dG9tYXRpb25cXG1vYml1cy1wYXJhbWV0cmljLW1vZGVsbGVyL3NyY1xcYXBwXFxzaGFyZWRcXGNvbXBvbmVudHNcXG5vdGlmaWNhdGlvblxcbm90aWZpY2F0aW9uLmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC9zaGFyZWQvY29tcG9uZW50cy9ub3RpZmljYXRpb24vQzpcXERyb3Bib3hcXEZpbGVzXFxTb2Z0d2FyZVxcR2l0SHViXFxkZXNpZ24tYXV0b21hdGlvblxcbW9iaXVzLXBhcmFtZXRyaWMtbW9kZWxsZXIvc3JjXFxzY3NzXFxjb2xvcnMuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFHQTtFQUNJLG9CQUFvQjtFQUNwQixVQUFVO0VBQ1YsZ0JBQWdCO0VBQ2hCLHVCQ0VVO0VERFYsY0NFWTtFRERaLHlCQUF5QjtFQUN6QixrQkFBa0I7RUFDbEIsYUFBYTtFQUNiLGVBQWU7RUFDZixVQUFVO0VBQ1YsV0FBVztFQUNYLFFBQVEsRUFBQTs7QUFHWjtFQUNJLFVBQVU7RUFDVixTQUFTO0VBQ1Qsd0JBQXdCLEVBQUE7O0FBRzVCO0VBQ0ksVUFBVTtFQUNWLFFBQVE7RUFDUix3QkFBd0IsRUFBQSIsImZpbGUiOiJzcmMvYXBwL3NoYXJlZC9jb21wb25lbnRzL25vdGlmaWNhdGlvbi9ub3RpZmljYXRpb24uY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJAaW1wb3J0ICd+c2Nzcy9jb2xvcnMnO1xyXG5AaW1wb3J0ICd+c2Nzcy92YXJpYWJsZXMnO1xyXG5cclxuI25vdGlmaWNhdGlvbkJveCB7XHJcbiAgICBwb2ludGVyLWV2ZW50czogbm9uZTtcclxuICAgIG9wYWNpdHk6IDA7XHJcbiAgICBtaW4td2lkdGg6IDI1MHB4OyBcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICRjb2xvcjc7IFxyXG4gICAgY29sb3I6ICRjb2xvcjg7IFxyXG4gICAgYm9yZGVyOiBzb2xpZCAkY29sb3IxIDFweDtcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgIHBhZGRpbmc6IDE2cHg7XHJcbiAgICBwb3NpdGlvbjogZml4ZWQ7IFxyXG4gICAgei1pbmRleDogMTsgXHJcbiAgICByaWdodDogNDBweDsgXHJcbiAgICB0b3A6IDBweDtcclxufVxyXG5cclxuI25vdGlmaWNhdGlvbkJveC5zaG93IHtcclxuICAgIG9wYWNpdHk6IDE7XHJcbiAgICB0b3A6IDIwcHg7XHJcbiAgICB0cmFuc2l0aW9uOiBlYXNlLWluIDAuMnM7IFxyXG59XHJcblxyXG4jbm90aWZpY2F0aW9uQm94LmhpZGUge1xyXG4gICAgb3BhY2l0eTogMDtcclxuICAgIHRvcDogMHB4O1xyXG4gICAgdHJhbnNpdGlvbjogZWFzZS1pbiAwLjJzOyBcclxufVxyXG4iLCJcclxuJGNvbG9yMTogIzgwODA4MDtcclxuJGNvbG9yMjogIzk5OTk5OTtcclxuJGNvbG9yMzogI0IzQjNCMzsgXHJcbiRjb2xvcjQ6ICNDQ0NDQ0M7XHJcbiRjb2xvcjU6ICNFNkU2RTY7XHJcbiRjb2xvcjUtNTogcmdiKDI0NSwgMjQ1LCAyNDUpO1xyXG4kY29sb3I2OiByZ2IoMjUwLCAyNTAsIDI1MSk7XHJcblxyXG4kY29sb3I3OiB3aGl0ZTtcclxuJGNvbG9yODogIzM3MzczNztcclxuXHJcbiRzZWxlY3RlZC1jb2xvcjogcmdiKDAsIDAsIDEwOSk7XHJcbiRob3Zlci1jb2xvcjogJGNvbG9yMjtcclxuXHJcbiRlcnJvci1jb2xvcjogI0U5NDg1ODsgLy9waW5rLXJlZFxyXG4kZXJyb3ItY29sb3ItbHQ6IHJnYigyNTUsIDIyMCwgMjI0KTtcclxuJHBjb2xvcjI6ICNGM0EzMkE7IC8vb3JhbmdlLXllbGxvd1xyXG4kcHJpbnQtY29sb3I6IHJnYigxMzAsIDE5MSwgMTEwKTsgLy9saWdodGdyZWVuXHJcbiRwcmludC1jb2xvci1sdDogcmdiKDIzMCwgMjU1LCAyMjEpO1xyXG4kc2VsZWN0R2VvbS1jb2xvcjogcmdiKDI1NSwgMTc0LCAwKTsgLy8gbGlnaHQgb3JhbmdlXHJcbiRzZWxlY3RHZW9tLWNvbG9yLWx0OiByZ2IoMjU1LCAyMjUsIDE2MCk7XHJcblxyXG4vLyAkcHJvZC1iYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMjUwLDI1MCwyNTApO1xyXG4vLyAkYmFja2dyb3VuZC1jb2xvcjogcmdiKDIyMCwyMjAsMjIwKTtcclxuJGZ1bmN0aW9uLXRleHQtY29sb3I6IHJnYigxOTAsIDE0MCwgMzApO1xyXG4kZnVuY3Rpb24tdGV4dC1jb2xvcjI6IHJnYigxOCwgMTI2LCAxMzYpO1xyXG4kYmFzaWMtZnVuY3Rpb24tdGV4dC1jb2xvcjogcmdiKDIwMCwgNzAsIDE1MCk7XHJcbiRjb21tZW50LWNvbG9yOiBkYXJrZ3JlZW47XHJcbiJdfQ== */"

/***/ }),

/***/ "./src/app/shared/components/notification/notification.component.ts":
/*!**************************************************************************!*\
  !*** ./src/app/shared/components/notification/notification.component.ts ***!
  \**************************************************************************/
/*! exports provided: NotificationComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NotificationComponent", function() { return NotificationComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};

var NotificationComponent = /** @class */ (function () {
    function NotificationComponent() {
    }
    NotificationComponent.prototype.ngAfterViewInit = function () {
        this.notificationBox = document.getElementById('notificationBox');
    };
    NotificationComponent.prototype.ngOnChanges = function () {
        if (!this.notificationBox) {
            return;
        }
        window.clearTimeout(this.timeOut);
        this.notificationBox.className = 'show';
        // After 3 seconds, remove the show class from DIV
        this.timeOut = setTimeout(function () {
            this.notificationBox.className = this.notificationBox.className.replace('show', '');
            this.notificationBox.className = 'hide';
            this.message = '';
        }, 5000);
    };
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", String)
    ], NotificationComponent.prototype, "message", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", Boolean)
    ], NotificationComponent.prototype, "dummyTrigger", void 0);
    NotificationComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'notification',
            template: __webpack_require__(/*! ./notification.component.html */ "./src/app/shared/components/notification/notification.component.html"),
            styles: [__webpack_require__(/*! ./notification.component.scss */ "./src/app/shared/components/notification/notification.component.scss")]
        }),
        __metadata("design:paramtypes", [])
    ], NotificationComponent);
    return NotificationComponent;
}());



/***/ }),

/***/ "./src/app/shared/components/parameter-viewer/parameter-viewer.component.html":
/*!************************************************************************************!*\
  !*** ./src/app/shared/components/parameter-viewer/parameter-viewer.component.html ***!
  \************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<!-- <h2>{{displayName()}}</h2> -->\r\n\r\n<textarea id='display-flowchart-desc' [(ngModel)]='flowchart.description' placeholder=\"Model Description\" disabled></textarea>\r\n\r\n<hr>\r\n\r\n<ng-container *ngFor=\"let prod of startNode.procedure\">\r\n    <div class='prod--container' *ngIf=\"prod.enabled && prod.type === 10 && prod.meta.inputMode != 5\">\r\n        <!-- input description -->\r\n        <textarea class='desc'\r\n                  id='{{prod.ID}}_desc'\r\n                  [(ngModel)]='prod.meta.description'\r\n                  placeholder=\"Parameter Description\"\r\n                  disabled></textarea>\r\n        <procedure-input-viewer [prod]=\"prod\"></procedure-input-viewer>\r\n    </div>\r\n</ng-container>\r\n"

/***/ }),

/***/ "./src/app/shared/components/parameter-viewer/parameter-viewer.component.scss":
/*!************************************************************************************!*\
  !*** ./src/app/shared/components/parameter-viewer/parameter-viewer.component.scss ***!
  \************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".container {\n  background-color: transparent;\n  width: auto;\n  height: auto;\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap; }\n\nhr {\n  border-top: 3px solid #808080;\n  margin: 5px 0px 5px 0px; }\n\ndiv[class^=\"container--\"] {\n  display: flex;\n  flex-direction: column;\n  margin: 10px 0px; }\n\ntextarea {\n  color: #373737;\n  background-color: transparent;\n  border: none;\n  padding: 0px;\n  font-family: sans-serif;\n  font-size: 12px;\n  margin: 0px;\n  width: 100%;\n  min-height: 20px;\n  resize: none;\n  box-sizing: border-box;\n  padding: 5px 20px 10px 0px;\n  overflow-y: hidden; }\n\n.prod--container {\n  padding: 7px 20px 7px 0px;\n  border-bottom: 3px solid #E6E6E6; }\n\n#display-flowchart-desc {\n  padding-bottom: 30px; }\n\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc2hhcmVkL2NvbXBvbmVudHMvcGFyYW1ldGVyLXZpZXdlci9DOlxcRHJvcGJveFxcRmlsZXNcXFNvZnR3YXJlXFxHaXRIdWJcXGRlc2lnbi1hdXRvbWF0aW9uXFxtb2JpdXMtcGFyYW1ldHJpYy1tb2RlbGxlci9zcmNcXGFwcFxcc2hhcmVkXFxjb21wb25lbnRzXFxwYXJhbWV0ZXItdmlld2VyXFxwYXJhbWV0ZXItdmlld2VyLmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC9zaGFyZWQvY29tcG9uZW50cy9wYXJhbWV0ZXItdmlld2VyL0M6XFxEcm9wYm94XFxGaWxlc1xcU29mdHdhcmVcXEdpdEh1YlxcZGVzaWduLWF1dG9tYXRpb25cXG1vYml1cy1wYXJhbWV0cmljLW1vZGVsbGVyL3NyY1xcc2Nzc1xcY29sb3JzLnNjc3MiLCJzcmMvYXBwL3NoYXJlZC9jb21wb25lbnRzL3BhcmFtZXRlci12aWV3ZXIvQzpcXERyb3Bib3hcXEZpbGVzXFxTb2Z0d2FyZVxcR2l0SHViXFxkZXNpZ24tYXV0b21hdGlvblxcbW9iaXVzLXBhcmFtZXRyaWMtbW9kZWxsZXIvc3JjXFxzY3NzXFx2YXJpYWJsZXMuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFHQTtFQUNJLDZCQUE2QjtFQUU3QixXQUFXO0VBQ1gsWUFBWTtFQUVaLGFBQWE7RUFDYixzQkFBc0I7RUFDdEIsZUFBZSxFQUFBOztBQW1CbkI7RUFDSSw2QkM5Qlk7RUQrQlosdUJBQXVCLEVBQUE7O0FBRzNCO0VBQ0ksYUFBYTtFQUNiLHNCQUFzQjtFQUV0QixnQkFBZ0IsRUFBQTs7QUFHcEI7RUFDSSxjQ2pDWTtFRGtDWiw2QkFBNkI7RUFDN0IsWUFBVztFQUNYLFlBQVk7RUFDWix1QkFBdUI7RUFDdkIsZUUzQ1M7RUY0Q1QsV0FBVztFQUNYLFdBQVc7RUFDWCxnQkFBZ0I7RUFDaEIsWUFBWTtFQUNaLHNCQUFzQjtFQUN0QiwwQkFBMEI7RUFDMUIsa0JBQWtCLEVBQUE7O0FBT3RCO0VBRUkseUJBQXlCO0VBRXpCLGdDQzdEWSxFQUFBOztBRGdFaEI7RUFDSSxvQkFBb0IsRUFBQSIsImZpbGUiOiJzcmMvYXBwL3NoYXJlZC9jb21wb25lbnRzL3BhcmFtZXRlci12aWV3ZXIvcGFyYW1ldGVyLXZpZXdlci5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIkBpbXBvcnQgJ35zY3NzL2NvbG9ycyc7XHJcbkBpbXBvcnQgJ35zY3NzL3ZhcmlhYmxlcyc7XHJcblxyXG4uY29udGFpbmVye1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XHJcblxyXG4gICAgd2lkdGg6IGF1dG87XHJcbiAgICBoZWlnaHQ6IGF1dG87XHJcblxyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICBmbGV4LXdyYXA6IHdyYXA7XHJcbn1cclxuXHJcbi8vIGgye1xyXG4vLyAgICAgY29sb3I6ICRjb2xvcjg7XHJcbi8vICAgICB0ZXh0LWFsaWduOiBsZWZ0O1xyXG4vLyAgICAgcGFkZGluZy1sZWZ0OiAxNXB4O1xyXG4vLyAgICAgZm9udC1zaXplOiAkZnNpemUyO1xyXG4vLyAgICAgbGluZS1oZWlnaHQ6IDE2cHg7XHJcbi8vIH1cclxuXHJcbi8vIHB7XHJcbi8vICAgICBjb2xvcjogJGNvbG9yODtcclxuLy8gICAgIHRleHQtYWxpZ246IGxlZnQ7XHJcbi8vICAgICBwYWRkaW5nLWxlZnQ6IDE1cHg7XHJcbi8vICAgICBmb250LXNpemU6ICRmc2l6ZTI7XHJcbi8vICAgICBsaW5lLWhlaWdodDogMTRweDtcclxuLy8gfVxyXG5cclxuaHJ7XHJcbiAgICBib3JkZXItdG9wOiAzcHggc29saWQgJGNvbG9yMTtcclxuICAgIG1hcmdpbjogNXB4IDBweCA1cHggMHB4O1xyXG59XHJcblxyXG5kaXZbY2xhc3NePVwiY29udGFpbmVyLS1cIl17XHJcbiAgICBkaXNwbGF5OiBmbGV4OyBcclxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcblxyXG4gICAgbWFyZ2luOiAxMHB4IDBweDtcclxufVxyXG5cclxudGV4dGFyZWF7XHJcbiAgICBjb2xvcjogJGNvbG9yODtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xyXG4gICAgYm9yZGVyOm5vbmU7XHJcbiAgICBwYWRkaW5nOiAwcHg7XHJcbiAgICBmb250LWZhbWlseTogc2Fucy1zZXJpZjtcclxuICAgIGZvbnQtc2l6ZTogJGZzaXplMjtcclxuICAgIG1hcmdpbjogMHB4O1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBtaW4taGVpZ2h0OiAyMHB4O1xyXG4gICAgcmVzaXplOiBub25lOyBcclxuICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XHJcbiAgICBwYWRkaW5nOiA1cHggMjBweCAxMHB4IDBweDtcclxuICAgIG92ZXJmbG93LXk6IGhpZGRlbjtcclxufVxyXG5cclxuLmRlc2N7XHJcbiAgICAvL3BhZGRpbmctbGVmdDogJHNtYWxsLXBhZGRpbmc7XHJcbn1cclxuXHJcbi5wcm9kLS1jb250YWluZXJ7XHJcbiAgICAvL21hcmdpbi1ib3R0b206IDVweDtcclxuICAgIHBhZGRpbmc6IDdweCAyMHB4IDdweCAwcHg7XHJcbiAgICAvL2JvcmRlcjogMXB4IHNvbGlkIHJlZDtcclxuICAgIGJvcmRlci1ib3R0b206IDNweCBzb2xpZCAkY29sb3I1O1xyXG59XHJcblxyXG4jZGlzcGxheS1mbG93Y2hhcnQtZGVzYyB7XHJcbiAgICBwYWRkaW5nLWJvdHRvbTogMzBweDtcclxuICAgIC8vYm9yZGVyLWJvdHRvbTogM3B4IHNvbGlkICRjb2xvcjE7XHJcbn1cclxuIiwiXHJcbiRjb2xvcjE6ICM4MDgwODA7XHJcbiRjb2xvcjI6ICM5OTk5OTk7XHJcbiRjb2xvcjM6ICNCM0IzQjM7IFxyXG4kY29sb3I0OiAjQ0NDQ0NDO1xyXG4kY29sb3I1OiAjRTZFNkU2O1xyXG4kY29sb3I1LTU6IHJnYigyNDUsIDI0NSwgMjQ1KTtcclxuJGNvbG9yNjogcmdiKDI1MCwgMjUwLCAyNTEpO1xyXG5cclxuJGNvbG9yNzogd2hpdGU7XHJcbiRjb2xvcjg6ICMzNzM3Mzc7XHJcblxyXG4kc2VsZWN0ZWQtY29sb3I6IHJnYigwLCAwLCAxMDkpO1xyXG4kaG92ZXItY29sb3I6ICRjb2xvcjI7XHJcblxyXG4kZXJyb3ItY29sb3I6ICNFOTQ4NTg7IC8vcGluay1yZWRcclxuJGVycm9yLWNvbG9yLWx0OiByZ2IoMjU1LCAyMjAsIDIyNCk7XHJcbiRwY29sb3IyOiAjRjNBMzJBOyAvL29yYW5nZS15ZWxsb3dcclxuJHByaW50LWNvbG9yOiByZ2IoMTMwLCAxOTEsIDExMCk7IC8vbGlnaHRncmVlblxyXG4kcHJpbnQtY29sb3ItbHQ6IHJnYigyMzAsIDI1NSwgMjIxKTtcclxuJHNlbGVjdEdlb20tY29sb3I6IHJnYigyNTUsIDE3NCwgMCk7IC8vIGxpZ2h0IG9yYW5nZVxyXG4kc2VsZWN0R2VvbS1jb2xvci1sdDogcmdiKDI1NSwgMjI1LCAxNjApO1xyXG5cclxuLy8gJHByb2QtYmFja2dyb3VuZC1jb2xvcjogcmdiKDI1MCwyNTAsMjUwKTtcclxuLy8gJGJhY2tncm91bmQtY29sb3I6IHJnYigyMjAsMjIwLDIyMCk7XHJcbiRmdW5jdGlvbi10ZXh0LWNvbG9yOiByZ2IoMTkwLCAxNDAsIDMwKTtcclxuJGZ1bmN0aW9uLXRleHQtY29sb3IyOiByZ2IoMTgsIDEyNiwgMTM2KTtcclxuJGJhc2ljLWZ1bmN0aW9uLXRleHQtY29sb3I6IHJnYigyMDAsIDcwLCAxNTApO1xyXG4kY29tbWVudC1jb2xvcjogZGFya2dyZWVuO1xyXG4iLCIkcGFkZGluZzogNDBweDsgLy8gPyBub3QgdXNlZFxyXG4kc21hbGwtcGFkZGluZzogMTVweDtcclxuJGhlYWRlci1oZWlnaHQ6IDQwcHg7XHJcblxyXG4kZnNpemUxOiAxNXB4O1xyXG4kZnNpemUyOiAxMnB4O1xyXG4kZnNpemUzOiAzMHB4O1xyXG5cclxuJHBvcnQtc2l6ZTogMTVweDtcclxuJGRlZmF1bHQtc2lkZS1wYWRkaW5nOiAxNXB4O1xyXG5cclxuJGRpc2FibGVkLW9wYWNpdHk6IDAuNDsiXX0= */"

/***/ }),

/***/ "./src/app/shared/components/parameter-viewer/parameter-viewer.component.ts":
/*!**********************************************************************************!*\
  !*** ./src/app/shared/components/parameter-viewer/parameter-viewer.component.ts ***!
  \**********************************************************************************/
/*! exports provided: ParameterViewerComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ParameterViewerComponent", function() { return ParameterViewerComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};

var ParameterViewerComponent = /** @class */ (function () {
    function ParameterViewerComponent() {
    }
    ParameterViewerComponent.prototype.displayName = function () {
        return this.flowchart.name.replace(/_/g, ' ');
    };
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", Object)
    ], ParameterViewerComponent.prototype, "flowchart", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", Object)
    ], ParameterViewerComponent.prototype, "startNode", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", Object)
    ], ParameterViewerComponent.prototype, "endNode", void 0);
    ParameterViewerComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'parameter-viewer',
            template: __webpack_require__(/*! ./parameter-viewer.component.html */ "./src/app/shared/components/parameter-viewer/parameter-viewer.component.html"),
            styles: [__webpack_require__(/*! ./parameter-viewer.component.scss */ "./src/app/shared/components/parameter-viewer/parameter-viewer.component.scss")]
        })
    ], ParameterViewerComponent);
    return ParameterViewerComponent;
}());



/***/ }),

/***/ "./src/app/shared/components/parameter-viewer/procedure-input-viewer/procedure-input-viewer.component.html":
/*!*****************************************************************************************************************!*\
  !*** ./src/app/shared/components/parameter-viewer/procedure-input-viewer/procedure-input-viewer.component.html ***!
  \*****************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class='container'>\r\n    <div class='container--parameter'>\r\n        <input class='input-const-name' [class.disabled-input]='true' [value]='displayConstName()' \r\n        [style.width.px]='inputSize(prod.args[prod.argCount-2].value,\"Undefined\") + 10' disabled>\r\n\r\n        <div class = \"FFA\">\r\n            <ng-container class='parameter__name' [ngSwitch]=\"prod.meta.inputMode\">\r\n                <input *ngSwitchCase=\"PortTypes.SimpleInput\" [(ngModel)]='prod.args[prod.argCount-1].value' \r\n                placeholder='{{prod.args[prod.argCount-1].default}}'\r\n                [style.width.px]='inputSize(prod.args[prod.argCount-1].value, prod.args[prod.argCount-1].default)'>\r\n                \r\n                <ng-container *ngSwitchCase=\"PortTypes.Slider\">\r\n                    <!--<input [class.disabled-input]='true' [(ngModel)]='prod.args[prod.argCount-1].value' \r\n                    placeholder='prod.args[prod.argCount-1].default'\r\n                    [style.width.px]='inputSize(prod.args[prod.argCount-1].value, prod.args[prod.argCount-1].default)' disabled>-->\r\n                    <input [(ngModel)]='prod.args[prod.argCount-1].value' \r\n                    placeholder='{{prod.args[prod.argCount-1].default}}'\r\n                    [style.width.px]='inputSize(prod.args[prod.argCount-1].value, prod.args[prod.argCount-1].default)'>\r\n                    <mat-slider\r\n                        [(ngModel)]='prod.args[prod.argCount-1].value'\r\n                        thumbLabel\r\n                        step={{prod.args[prod.argCount-1].step||1}}\r\n                        min={{prod.args[prod.argCount-1].min||0}}\r\n                        max={{prod.args[prod.argCount-1].max||100}}></mat-slider>\r\n                    <!--\r\n                    <input [(ngModel)]='prod.args[prod.argCount-1].value' type=\"range\" placeholder='{{prod.args[prod.argCount-1].default}}'>\r\n                    <input [(ngModel)]='prod.args[prod.argCount-1].value' value='prod.args[prod.argCount-1].value'  placeholder='{{prod.args[prod.argCount-1].default}}' disabled>\r\n                    -->\r\n                </ng-container>\r\n    \r\n                <div class = 'div--chbox' *ngSwitchCase=\"PortTypes.Checkbox\">\r\n                    <input id = 'chbox_{{prod.ID}}' *ngSwitchCase=\"PortTypes.Checkbox\" [(ngModel)]='prod.args[prod.argCount-1].value' type=\"checkbox\">\r\n                    <label for = 'chbox_{{prod.ID}}'></label>\r\n                </div>\r\n                \r\n                <input *ngSwitchCase=\"PortTypes.URL\" [(ngModel)]='prod.args[prod.argCount-1].value' placeholder='{{prod.args[prod.argCount-1].default}}' \r\n                [style.width.px]='inputSize(prod.args[prod.argCount-1].value, prod.args[prod.argCount-1].default)'>\r\n    \r\n                <ng-container *ngSwitchCase=\"PortTypes.File\" >\r\n                    <button class='filebtn' (click)=\"openFileBrowse(prod.ID)\" >File</button>\r\n                    <input [class.disabled-input]='true' value='{{prod.args[prod.argCount-1].value?.name}}' [style.width.px]='inputSize(prod.args[prod.argCount-1].value?.name||undefined,\"No Input\")' disabled>\r\n                    <input id='file_{{prod.ID}}' style='display: none;' (change)=\"onFileChange($event)\" type=\"file\">\r\n                </ng-container>\r\n    \r\n            </ng-container>\r\n        </div>\r\n        \r\n    </div>\r\n</div>\r\n\r\n"

/***/ }),

/***/ "./src/app/shared/components/parameter-viewer/procedure-input-viewer/procedure-input-viewer.component.scss":
/*!*****************************************************************************************************************!*\
  !*** ./src/app/shared/components/parameter-viewer/procedure-input-viewer/procedure-input-viewer.component.scss ***!
  \*****************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".container {\n  display: block;\n  height: auto;\n  width: 100%; }\n\n.container--parameter {\n  padding: 10px 0px 5px 0px;\n  display: flex;\n  flex-flow: row nowrap;\n  padding-left: 15px;\n  color: #373737;\n  vertical-align: bottom;\n  overflow: hidden;\n  width: 100%;\n  height: 17px; }\n\n.container--parameter.inputDisabled {\n    opacity: 0.4; }\n\n.container--parameter:hover .btns {\n    display: inline-flex; }\n\n.FFA {\n  display: flex;\n  flex-flow: row nowrap;\n  flex-grow: 1; }\n\n.FFA mat-slider {\n    width: 100%;\n    height: 30px;\n    padding: 0px 20px 0px 0px;\n    position: relative;\n    bottom: 7px; }\n\ninput {\n  color: #373737;\n  background-color: transparent;\n  border: none;\n  border: 2px solid #E6E6E6;\n  margin: 0px 2px;\n  max-width: 95%;\n  height: 15px;\n  vertical-align: bottom;\n  padding: 0px 0px 0px 6px;\n  font-family: sans-serif;\n  font-size: 12px; }\n\ninput:hover, input:focus {\n    background-color: white;\n    color: #373737; }\n\ninput.disabled-input {\n    padding: 0px;\n    border: 2px solid transparent; }\n\ninput.disabled-input:hover {\n      background-color: transparent;\n      color: #373737; }\n\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc2hhcmVkL2NvbXBvbmVudHMvcGFyYW1ldGVyLXZpZXdlci9wcm9jZWR1cmUtaW5wdXQtdmlld2VyL0M6XFxEcm9wYm94XFxGaWxlc1xcU29mdHdhcmVcXEdpdEh1YlxcZGVzaWduLWF1dG9tYXRpb25cXG1vYml1cy1wYXJhbWV0cmljLW1vZGVsbGVyL3NyY1xcYXBwXFxzaGFyZWRcXGNvbXBvbmVudHNcXHBhcmFtZXRlci12aWV3ZXJcXHByb2NlZHVyZS1pbnB1dC12aWV3ZXJcXHByb2NlZHVyZS1pbnB1dC12aWV3ZXIuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL3NoYXJlZC9jb21wb25lbnRzL3BhcmFtZXRlci12aWV3ZXIvcHJvY2VkdXJlLWlucHV0LXZpZXdlci9DOlxcRHJvcGJveFxcRmlsZXNcXFNvZnR3YXJlXFxHaXRIdWJcXGRlc2lnbi1hdXRvbWF0aW9uXFxtb2JpdXMtcGFyYW1ldHJpYy1tb2RlbGxlci9zcmNcXHNjc3NcXHZhcmlhYmxlcy5zY3NzIiwic3JjL2FwcC9zaGFyZWQvY29tcG9uZW50cy9wYXJhbWV0ZXItdmlld2VyL3Byb2NlZHVyZS1pbnB1dC12aWV3ZXIvQzpcXERyb3Bib3hcXEZpbGVzXFxTb2Z0d2FyZVxcR2l0SHViXFxkZXNpZ24tYXV0b21hdGlvblxcbW9iaXVzLXBhcmFtZXRyaWMtbW9kZWxsZXIvc3JjXFxzY3NzXFxjb2xvcnMuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFHQTtFQUNJLGNBQWM7RUFDZCxZQUFZO0VBRVosV0FBVyxFQUFBOztBQUdmO0VBQ0kseUJBQXlCO0VBRXpCLGFBQWE7RUFDYixxQkFBcUI7RUFDckIsa0JDZGdCO0VEZ0JoQixjRVBZO0VGUVosc0JBQXNCO0VBSXRCLGdCQUFnQjtFQUNoQixXQUFXO0VBQ1gsWUFBcUIsRUFBQTs7QUFkekI7SUFpQlEsWUFBWSxFQUFBOztBQWpCcEI7SUFxQlEsb0JBQW9CLEVBQUE7O0FBSTVCO0VBQ0ksYUFBYTtFQUNiLHFCQUFxQjtFQUNyQixZQUFZLEVBQUE7O0FBSGhCO0lBS1EsV0FBVztJQUNYLFlDbkNLO0lEb0NMLHlCQUF5QjtJQUN6QixrQkFBa0I7SUFDbEIsV0FBVyxFQUFBOztBQUluQjtFQUNJLGNFdkNZO0VGd0NaLDZCQUE2QjtFQUM3QixZQUFXO0VBQ1gseUJFL0NZO0VGZ0RaLGVBQWU7RUFHZixjQUFjO0VBQ2QsWUNyRFM7RURzRFQsc0JBQXNCO0VBQ3RCLHdCQUF3QjtFQUV4Qix1QkFBdUI7RUFDdkIsZUN6RFMsRUFBQTs7QUQyQ2I7SUFnQlEsdUJFdkRNO0lGd0ROLGNFdkRRLEVBQUE7O0FGc0NoQjtJQXlCUSxZQUFZO0lBRVosNkJBQTZCLEVBQUE7O0FBM0JyQztNQTZCWSw2QkFBNkI7TUFDN0IsY0VwRUksRUFBQSIsImZpbGUiOiJzcmMvYXBwL3NoYXJlZC9jb21wb25lbnRzL3BhcmFtZXRlci12aWV3ZXIvcHJvY2VkdXJlLWlucHV0LXZpZXdlci9wcm9jZWR1cmUtaW5wdXQtdmlld2VyLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiQGltcG9ydCAnfnNjc3MvY29sb3JzJztcclxuQGltcG9ydCAnfnNjc3MvdmFyaWFibGVzJztcclxuXHJcbi5jb250YWluZXJ7XHJcbiAgICBkaXNwbGF5OiBibG9jazsgXHJcbiAgICBoZWlnaHQ6IGF1dG87XHJcbiAgICAvLyBtYXJnaW46IDVweCAwcHggMHB4IDVweDtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG59XHJcblxyXG4uY29udGFpbmVyLS1wYXJhbWV0ZXJ7XHJcbiAgICBwYWRkaW5nOiAxMHB4IDBweCA1cHggMHB4O1xyXG5cclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBmbGV4LWZsb3c6IHJvdyBub3dyYXA7XHJcbiAgICBwYWRkaW5nLWxlZnQ6ICRzbWFsbC1wYWRkaW5nO1xyXG5cclxuICAgIGNvbG9yOiAkY29sb3I4O1xyXG4gICAgdmVydGljYWwtYWxpZ246IGJvdHRvbTtcclxuXHJcbiAgICAvL2JvcmRlci1ib3R0b206IDFweCBzb2xpZCAkY29sb3I1O1xyXG5cclxuICAgIG92ZXJmbG93OiBoaWRkZW47XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGhlaWdodDogJGZzaXplMSArIDJweDtcclxuXHJcbiAgICAmLmlucHV0RGlzYWJsZWR7XHJcbiAgICAgICAgb3BhY2l0eTogMC40O1xyXG4gICAgfVxyXG5cclxuICAgICY6aG92ZXIgLmJ0bnN7XHJcbiAgICAgICAgZGlzcGxheTogaW5saW5lLWZsZXg7XHJcbiAgICB9XHJcbn1cclxuXHJcbi5GRkF7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgZmxleC1mbG93OiByb3cgbm93cmFwO1xyXG4gICAgZmxleC1ncm93OiAxO1xyXG4gICAgbWF0LXNsaWRlcntcclxuICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICBoZWlnaHQ6ICRmc2l6ZTM7XHJcbiAgICAgICAgcGFkZGluZzogMHB4IDIwcHggMHB4IDBweDtcclxuICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICAgICAgYm90dG9tOiA3cHg7XHJcbiAgICB9XHJcbn1cclxuXHJcbmlucHV0e1xyXG4gICAgY29sb3I6ICRjb2xvcjg7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcclxuICAgIGJvcmRlcjpub25lO1xyXG4gICAgYm9yZGVyOiAycHggc29saWQgJGNvbG9yNTtcclxuICAgIG1hcmdpbjogMHB4IDJweDtcclxuICAgIFxyXG4gICAgLy8gbWFyZ2luLWxlZnQ6IDVweDtcclxuICAgIG1heC13aWR0aDogOTUlO1xyXG4gICAgaGVpZ2h0OiAkZnNpemUxO1xyXG4gICAgdmVydGljYWwtYWxpZ246IGJvdHRvbTtcclxuICAgIHBhZGRpbmc6IDBweCAwcHggMHB4IDZweDtcclxuXHJcbiAgICBmb250LWZhbWlseTogc2Fucy1zZXJpZjtcclxuICAgIGZvbnQtc2l6ZTogJGZzaXplMjtcclxuICAgICY6aG92ZXIsICY6Zm9jdXN7XHJcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJGNvbG9yNztcclxuICAgICAgICBjb2xvcjogJGNvbG9yODtcclxuICAgIH1cclxuXHJcbiAgICAvLyAmOmZvY3Vze1xyXG4gICAgLy8gICAgIGJvcmRlci1ib3R0b206IDJweCBzb2xpZCAkc2VsZWN0ZWQtY29sb3I7XHJcbiAgICAvLyB9XHJcblxyXG4gICAgJi5kaXNhYmxlZC1pbnB1dHtcclxuICAgICAgICBwYWRkaW5nOiAwcHg7XHJcbiAgICAgICAgLy9ib3JkZXItYm90dG9tOiAwcHg7IC8vMnB4IHNvbGlkIHRyYW5zcGFyZW50O1xyXG4gICAgICAgIGJvcmRlcjogMnB4IHNvbGlkIHRyYW5zcGFyZW50O1xyXG4gICAgICAgICY6aG92ZXJ7IC8vIG5vIGNoYW5nZVxyXG4gICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcclxuICAgICAgICAgICAgY29sb3I6ICRjb2xvcjg7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59XHJcbiIsIiRwYWRkaW5nOiA0MHB4OyAvLyA/IG5vdCB1c2VkXHJcbiRzbWFsbC1wYWRkaW5nOiAxNXB4O1xyXG4kaGVhZGVyLWhlaWdodDogNDBweDtcclxuXHJcbiRmc2l6ZTE6IDE1cHg7XHJcbiRmc2l6ZTI6IDEycHg7XHJcbiRmc2l6ZTM6IDMwcHg7XHJcblxyXG4kcG9ydC1zaXplOiAxNXB4O1xyXG4kZGVmYXVsdC1zaWRlLXBhZGRpbmc6IDE1cHg7XHJcblxyXG4kZGlzYWJsZWQtb3BhY2l0eTogMC40OyIsIlxyXG4kY29sb3IxOiAjODA4MDgwO1xyXG4kY29sb3IyOiAjOTk5OTk5O1xyXG4kY29sb3IzOiAjQjNCM0IzOyBcclxuJGNvbG9yNDogI0NDQ0NDQztcclxuJGNvbG9yNTogI0U2RTZFNjtcclxuJGNvbG9yNS01OiByZ2IoMjQ1LCAyNDUsIDI0NSk7XHJcbiRjb2xvcjY6IHJnYigyNTAsIDI1MCwgMjUxKTtcclxuXHJcbiRjb2xvcjc6IHdoaXRlO1xyXG4kY29sb3I4OiAjMzczNzM3O1xyXG5cclxuJHNlbGVjdGVkLWNvbG9yOiByZ2IoMCwgMCwgMTA5KTtcclxuJGhvdmVyLWNvbG9yOiAkY29sb3IyO1xyXG5cclxuJGVycm9yLWNvbG9yOiAjRTk0ODU4OyAvL3BpbmstcmVkXHJcbiRlcnJvci1jb2xvci1sdDogcmdiKDI1NSwgMjIwLCAyMjQpO1xyXG4kcGNvbG9yMjogI0YzQTMyQTsgLy9vcmFuZ2UteWVsbG93XHJcbiRwcmludC1jb2xvcjogcmdiKDEzMCwgMTkxLCAxMTApOyAvL2xpZ2h0Z3JlZW5cclxuJHByaW50LWNvbG9yLWx0OiByZ2IoMjMwLCAyNTUsIDIyMSk7XHJcbiRzZWxlY3RHZW9tLWNvbG9yOiByZ2IoMjU1LCAxNzQsIDApOyAvLyBsaWdodCBvcmFuZ2VcclxuJHNlbGVjdEdlb20tY29sb3ItbHQ6IHJnYigyNTUsIDIyNSwgMTYwKTtcclxuXHJcbi8vICRwcm9kLWJhY2tncm91bmQtY29sb3I6IHJnYigyNTAsMjUwLDI1MCk7XHJcbi8vICRiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMjIwLDIyMCwyMjApO1xyXG4kZnVuY3Rpb24tdGV4dC1jb2xvcjogcmdiKDE5MCwgMTQwLCAzMCk7XHJcbiRmdW5jdGlvbi10ZXh0LWNvbG9yMjogcmdiKDE4LCAxMjYsIDEzNik7XHJcbiRiYXNpYy1mdW5jdGlvbi10ZXh0LWNvbG9yOiByZ2IoMjAwLCA3MCwgMTUwKTtcclxuJGNvbW1lbnQtY29sb3I6IGRhcmtncmVlbjtcclxuIl19 */"

/***/ }),

/***/ "./src/app/shared/components/parameter-viewer/procedure-input-viewer/procedure-input-viewer.component.ts":
/*!***************************************************************************************************************!*\
  !*** ./src/app/shared/components/parameter-viewer/procedure-input-viewer/procedure-input-viewer.component.ts ***!
  \***************************************************************************************************************/
/*! exports provided: ProcedureInputViewerComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ProcedureInputViewerComponent", function() { return ProcedureInputViewerComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _models_port__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @models/port */ "./src/app/shared/models/port/index.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};


var canvas = document.createElement('canvas');
var ctx = canvas.getContext('2d');
ctx.font = '13px Arial';
var ProcedureInputViewerComponent = /** @class */ (function () {
    function ProcedureInputViewerComponent() {
        this.delete = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        this.PortTypes = _models_port__WEBPACK_IMPORTED_MODULE_1__["InputType"];
    }
    ProcedureInputViewerComponent.prototype.editOptions = function () { };
    ProcedureInputViewerComponent.prototype.onFileChange = function (event) {
        this.prod.args[this.prod.argCount - 1].value = event.target.files[0];
    };
    ProcedureInputViewerComponent.prototype.displayConstName = function () {
        var val = this.prod.args[this.prod.argCount - 2].value;
        if (!val) {
            return 'undefined :';
        }
        if (val[0] === '"' || val[0] === '\'') {
            val = val.substring(1, val.length - 1);
        }
        // return val.replace(/_/g, ' ') + ':';
        return val + ':';
    };
    ProcedureInputViewerComponent.prototype.inputSize = function (val, defaultVal) {
        if (val === undefined || val === '') {
            return ctx.measureText(defaultVal).width + 7;
        }
        return ctx.measureText(val).width + 7;
    };
    ProcedureInputViewerComponent.prototype.openFileBrowse = function (id) {
        document.getElementById("file_" + id).click();
    };
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", Object)
    ], ProcedureInputViewerComponent.prototype, "prod", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])(),
        __metadata("design:type", Object)
    ], ProcedureInputViewerComponent.prototype, "delete", void 0);
    ProcedureInputViewerComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'procedure-input-viewer',
            template: __webpack_require__(/*! ./procedure-input-viewer.component.html */ "./src/app/shared/components/parameter-viewer/procedure-input-viewer/procedure-input-viewer.component.html"),
            styles: [__webpack_require__(/*! ./procedure-input-viewer.component.scss */ "./src/app/shared/components/parameter-viewer/procedure-input-viewer/procedure-input-viewer.component.scss")]
        }),
        __metadata("design:paramtypes", [])
    ], ProcedureInputViewerComponent);
    return ProcedureInputViewerComponent;
}());



/***/ }),

/***/ "./src/app/shared/components/spinner/spinner.component.html":
/*!******************************************************************!*\
  !*** ./src/app/shared/components/spinner/spinner.component.html ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div id='spinner-div'>\r\n<div id='overlay'></div>\r\n<div id='spinner' class=\"loader\"></div>\r\n</div>\r\n<button id='spinner-on' style='visibility: hidden;' (click)='on()'></button>\r\n<button id='spinner-off' style='visibility: hidden;' (click)='off()'></button>"

/***/ }),

/***/ "./src/app/shared/components/spinner/spinner.component.scss":
/*!******************************************************************!*\
  !*** ./src/app/shared/components/spinner/spinner.component.scss ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "panel-header button {\n  display: inline-block;\n  vertical-align: bottom;\n  background-color: transparent;\n  color: #808080;\n  border: none;\n  outline: none;\n  cursor: pointer;\n  padding: 0px;\n  width: 34px;\n  height: 34px;\n  transition: 0.3s;\n  font-size: 15px; }\n\npublish-header button {\n  display: inline-block;\n  vertical-align: bottom;\n  background-color: transparent;\n  color: #808080;\n  border: none;\n  outline: none;\n  cursor: pointer;\n  padding: 0px;\n  width: 34px;\n  height: 34px;\n  transition: 0.3s;\n  font-size: 15px; }\n\nbutton:hover {\n  color: #00006d; }\n\npanel-header button.active {\n  color: #00006d; }\n\npublish-header button.active {\n  color: #00006d; }\n\n#spinner-div {\n  visibility: hidden; }\n\n#overlay {\n  position: fixed;\n  width: 100%;\n  height: 100%;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: #E6E6E6;\n  z-index: 5;\n  opacity: 0.4;\n  pointer-events: none; }\n\n#spinner {\n  position: fixed;\n  left: 45%;\n  top: 45%;\n  color: #808080;\n  border: 10px solid #E6E6E6;\n  border-radius: 50%;\n  border-top: 10px solid #00006d;\n  width: 60px;\n  height: 60px;\n  -webkit-animation: spin 2s linear infinite;\n  animation: spin 2s linear infinite;\n  z-index: 6; }\n\n@-webkit-keyframes spin {\n  0% {\n    -webkit-transform: rotate(0deg); }\n  100% {\n    -webkit-transform: rotate(360deg); } }\n\n@keyframes spin {\n  0% {\n    -webkit-transform: rotate(0deg);\n            transform: rotate(0deg); }\n  100% {\n    -webkit-transform: rotate(360deg);\n            transform: rotate(360deg); } }\n\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc2hhcmVkL2NvbXBvbmVudHMvc3Bpbm5lci9DOlxcRHJvcGJveFxcRmlsZXNcXFNvZnR3YXJlXFxHaXRIdWJcXGRlc2lnbi1hdXRvbWF0aW9uXFxtb2JpdXMtcGFyYW1ldHJpYy1tb2RlbGxlci9zcmNcXHNjc3NcXGhlYWRlci1idXR0b24uc2NzcyIsInNyYy9hcHAvc2hhcmVkL2NvbXBvbmVudHMvc3Bpbm5lci9DOlxcRHJvcGJveFxcRmlsZXNcXFNvZnR3YXJlXFxHaXRIdWJcXGRlc2lnbi1hdXRvbWF0aW9uXFxtb2JpdXMtcGFyYW1ldHJpYy1tb2RlbGxlci9zcmNcXHNjc3NcXGNvbG9ycy5zY3NzIiwic3JjL2FwcC9zaGFyZWQvY29tcG9uZW50cy9zcGlubmVyL0M6XFxEcm9wYm94XFxGaWxlc1xcU29mdHdhcmVcXEdpdEh1YlxcZGVzaWduLWF1dG9tYXRpb25cXG1vYml1cy1wYXJhbWV0cmljLW1vZGVsbGVyL3NyY1xcc2Nzc1xcdmFyaWFibGVzLnNjc3MiLCJzcmMvYXBwL3NoYXJlZC9jb21wb25lbnRzL3NwaW5uZXIvQzpcXERyb3Bib3hcXEZpbGVzXFxTb2Z0d2FyZVxcR2l0SHViXFxkZXNpZ24tYXV0b21hdGlvblxcbW9iaXVzLXBhcmFtZXRyaWMtbW9kZWxsZXIvc3JjXFxhcHBcXHNoYXJlZFxcY29tcG9uZW50c1xcc3Bpbm5lclxcc3Bpbm5lci5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFHQTtFQUNJLHFCQUFxQjtFQUNyQixzQkFBc0I7RUFDdEIsNkJBQTZCO0VBQzdCLGNDTlk7RURPWixZQUFZO0VBQ1osYUFBYTtFQUNiLGVBQWU7RUFDZixZQUFZO0VBQ1osV0FBVztFQUNYLFlBQVk7RUFDWixnQkFBZ0I7RUFDaEIsZUVYUyxFQUFBOztBRmNiO0VBQ0kscUJBQXFCO0VBQ3JCLHNCQUFzQjtFQUN0Qiw2QkFBNkI7RUFDN0IsY0NyQlk7RURzQlosWUFBWTtFQUNaLGFBQWE7RUFDYixlQUFlO0VBQ2YsWUFBWTtFQUNaLFdBQVc7RUFDWCxZQUFZO0VBQ1osZ0JBQWdCO0VBQ2hCLGVFMUJTLEVBQUE7O0FGNkJiO0VBQ0ksY0N0QjJCLEVBQUE7O0FEeUIvQjtFQUNJLGNDMUIyQixFQUFBOztBRDZCL0I7RUFDSSxjQzlCMkIsRUFBQTs7QUVUL0I7RUFDSSxrQkFBa0IsRUFBQTs7QUFFdEI7RUFDSSxlQUFlO0VBQ2YsV0FBVztFQUNYLFlBQVk7RUFDWixNQUFNO0VBQ04sT0FBTztFQUNQLFFBQVE7RUFDUixTQUFTO0VBQ1QseUJGVFk7RUVVWixVQUFVO0VBQ1YsWURMa0I7RUNNbEIsb0JBQW9CLEVBQUE7O0FBR3hCO0VBQ0ksZUFBZTtFQUNmLFNBQVM7RUFDVCxRQUFRO0VBQ1IsY0Z2Qlk7RUV3QlosMEJGcEJZO0VFcUJaLGtCQUFrQjtFQUNsQiw4QkZmMkI7RUVnQjNCLFdBQVc7RUFDWCxZQUFZO0VBQ1osMENBQTBDO0VBQzFDLGtDQUFrQztFQUNsQyxVQUFVLEVBQUE7O0FBSWQ7RUFDSTtJQUFLLCtCQUErQixFQUFBO0VBQ3BDO0lBQU8saUNBQWlDLEVBQUEsRUFBQTs7QUFHNUM7RUFDSTtJQUFLLCtCQUF1QjtZQUF2Qix1QkFBdUIsRUFBQTtFQUM1QjtJQUFPLGlDQUF5QjtZQUF6Qix5QkFBeUIsRUFBQSxFQUFBIiwiZmlsZSI6InNyYy9hcHAvc2hhcmVkL2NvbXBvbmVudHMvc3Bpbm5lci9zcGlubmVyLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiQGltcG9ydCAnfnNjc3MvdmFyaWFibGVzJztcclxuQGltcG9ydCAnfnNjc3MvY29sb3JzJztcclxuXHJcbnBhbmVsLWhlYWRlciBidXR0b24ge1xyXG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgdmVydGljYWwtYWxpZ246IGJvdHRvbTtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xyXG4gICAgY29sb3I6ICRjb2xvcjE7XHJcbiAgICBib3JkZXI6IG5vbmU7XHJcbiAgICBvdXRsaW5lOiBub25lO1xyXG4gICAgY3Vyc29yOiBwb2ludGVyO1xyXG4gICAgcGFkZGluZzogMHB4O1xyXG4gICAgd2lkdGg6IDM0cHg7XHJcbiAgICBoZWlnaHQ6IDM0cHg7XHJcbiAgICB0cmFuc2l0aW9uOiAwLjNzO1xyXG4gICAgZm9udC1zaXplOiAkZnNpemUxO1xyXG59XHJcblxyXG5wdWJsaXNoLWhlYWRlciBidXR0b24ge1xyXG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgdmVydGljYWwtYWxpZ246IGJvdHRvbTtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xyXG4gICAgY29sb3I6ICRjb2xvcjE7XHJcbiAgICBib3JkZXI6IG5vbmU7XHJcbiAgICBvdXRsaW5lOiBub25lO1xyXG4gICAgY3Vyc29yOiBwb2ludGVyO1xyXG4gICAgcGFkZGluZzogMHB4O1xyXG4gICAgd2lkdGg6IDM0cHg7XHJcbiAgICBoZWlnaHQ6IDM0cHg7XHJcbiAgICB0cmFuc2l0aW9uOiAwLjNzO1xyXG4gICAgZm9udC1zaXplOiAkZnNpemUxO1xyXG59XHJcblxyXG5idXR0b246aG92ZXIge1xyXG4gICAgY29sb3I6JHNlbGVjdGVkLWNvbG9yO1xyXG59XHJcblxyXG5wYW5lbC1oZWFkZXIgYnV0dG9uLmFjdGl2ZSB7XHJcbiAgICBjb2xvcjogJHNlbGVjdGVkLWNvbG9yO1xyXG59XHJcblxyXG5wdWJsaXNoLWhlYWRlciBidXR0b24uYWN0aXZlIHtcclxuICAgIGNvbG9yOiAkc2VsZWN0ZWQtY29sb3I7XHJcbn1cclxuIiwiXHJcbiRjb2xvcjE6ICM4MDgwODA7XHJcbiRjb2xvcjI6ICM5OTk5OTk7XHJcbiRjb2xvcjM6ICNCM0IzQjM7IFxyXG4kY29sb3I0OiAjQ0NDQ0NDO1xyXG4kY29sb3I1OiAjRTZFNkU2O1xyXG4kY29sb3I1LTU6IHJnYigyNDUsIDI0NSwgMjQ1KTtcclxuJGNvbG9yNjogcmdiKDI1MCwgMjUwLCAyNTEpO1xyXG5cclxuJGNvbG9yNzogd2hpdGU7XHJcbiRjb2xvcjg6ICMzNzM3Mzc7XHJcblxyXG4kc2VsZWN0ZWQtY29sb3I6IHJnYigwLCAwLCAxMDkpO1xyXG4kaG92ZXItY29sb3I6ICRjb2xvcjI7XHJcblxyXG4kZXJyb3ItY29sb3I6ICNFOTQ4NTg7IC8vcGluay1yZWRcclxuJGVycm9yLWNvbG9yLWx0OiByZ2IoMjU1LCAyMjAsIDIyNCk7XHJcbiRwY29sb3IyOiAjRjNBMzJBOyAvL29yYW5nZS15ZWxsb3dcclxuJHByaW50LWNvbG9yOiByZ2IoMTMwLCAxOTEsIDExMCk7IC8vbGlnaHRncmVlblxyXG4kcHJpbnQtY29sb3ItbHQ6IHJnYigyMzAsIDI1NSwgMjIxKTtcclxuJHNlbGVjdEdlb20tY29sb3I6IHJnYigyNTUsIDE3NCwgMCk7IC8vIGxpZ2h0IG9yYW5nZVxyXG4kc2VsZWN0R2VvbS1jb2xvci1sdDogcmdiKDI1NSwgMjI1LCAxNjApO1xyXG5cclxuLy8gJHByb2QtYmFja2dyb3VuZC1jb2xvcjogcmdiKDI1MCwyNTAsMjUwKTtcclxuLy8gJGJhY2tncm91bmQtY29sb3I6IHJnYigyMjAsMjIwLDIyMCk7XHJcbiRmdW5jdGlvbi10ZXh0LWNvbG9yOiByZ2IoMTkwLCAxNDAsIDMwKTtcclxuJGZ1bmN0aW9uLXRleHQtY29sb3IyOiByZ2IoMTgsIDEyNiwgMTM2KTtcclxuJGJhc2ljLWZ1bmN0aW9uLXRleHQtY29sb3I6IHJnYigyMDAsIDcwLCAxNTApO1xyXG4kY29tbWVudC1jb2xvcjogZGFya2dyZWVuO1xyXG4iLCIkcGFkZGluZzogNDBweDsgLy8gPyBub3QgdXNlZFxyXG4kc21hbGwtcGFkZGluZzogMTVweDtcclxuJGhlYWRlci1oZWlnaHQ6IDQwcHg7XHJcblxyXG4kZnNpemUxOiAxNXB4O1xyXG4kZnNpemUyOiAxMnB4O1xyXG4kZnNpemUzOiAzMHB4O1xyXG5cclxuJHBvcnQtc2l6ZTogMTVweDtcclxuJGRlZmF1bHQtc2lkZS1wYWRkaW5nOiAxNXB4O1xyXG5cclxuJGRpc2FibGVkLW9wYWNpdHk6IDAuNDsiLCJAaW1wb3J0ICd+c2Nzcy9jb2xvcnMnO1xyXG5AaW1wb3J0ICd+c2Nzcy9oZWFkZXItYnV0dG9uJztcclxuXHJcbiNzcGlubmVyLWRpdiB7XHJcbiAgICB2aXNpYmlsaXR5OiBoaWRkZW47XHJcbn1cclxuI292ZXJsYXkge1xyXG4gICAgcG9zaXRpb246IGZpeGVkO1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgICB0b3A6IDA7XHJcbiAgICBsZWZ0OiAwO1xyXG4gICAgcmlnaHQ6IDA7XHJcbiAgICBib3R0b206IDA7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkY29sb3I1O1xyXG4gICAgei1pbmRleDogNTtcclxuICAgIG9wYWNpdHk6ICRkaXNhYmxlZC1vcGFjaXR5O1xyXG4gICAgcG9pbnRlci1ldmVudHM6IG5vbmU7XHJcbiAgfVxyXG5cclxuI3NwaW5uZXIge1xyXG4gICAgcG9zaXRpb246IGZpeGVkO1xyXG4gICAgbGVmdDogNDUlO1xyXG4gICAgdG9wOiA0NSU7XHJcbiAgICBjb2xvcjogJGNvbG9yMTtcclxuICAgIGJvcmRlcjogMTBweCBzb2xpZCAkY29sb3I1O1xyXG4gICAgYm9yZGVyLXJhZGl1czogNTAlO1xyXG4gICAgYm9yZGVyLXRvcDogMTBweCBzb2xpZCAkc2VsZWN0ZWQtY29sb3I7XHJcbiAgICB3aWR0aDogNjBweDtcclxuICAgIGhlaWdodDogNjBweDtcclxuICAgIC13ZWJraXQtYW5pbWF0aW9uOiBzcGluIDJzIGxpbmVhciBpbmZpbml0ZTtcclxuICAgIGFuaW1hdGlvbjogc3BpbiAycyBsaW5lYXIgaW5maW5pdGU7XHJcbiAgICB6LWluZGV4OiA2O1xyXG5cclxufVxyXG4gIFxyXG5ALXdlYmtpdC1rZXlmcmFtZXMgc3BpbiB7XHJcbiAgICAwJSB7IC13ZWJraXQtdHJhbnNmb3JtOiByb3RhdGUoMGRlZyk7IH1cclxuICAgIDEwMCUgeyAtd2Via2l0LXRyYW5zZm9ybTogcm90YXRlKDM2MGRlZyk7IH1cclxufVxyXG5cclxuQGtleWZyYW1lcyBzcGluIHtcclxuICAgIDAlIHsgdHJhbnNmb3JtOiByb3RhdGUoMGRlZyk7IH1cclxuICAgIDEwMCUgeyB0cmFuc2Zvcm06IHJvdGF0ZSgzNjBkZWcpOyB9XHJcbn1cclxuICAiXX0= */"

/***/ }),

/***/ "./src/app/shared/components/spinner/spinner.component.ts":
/*!****************************************************************!*\
  !*** ./src/app/shared/components/spinner/spinner.component.ts ***!
  \****************************************************************/
/*! exports provided: SpinnerComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SpinnerComponent", function() { return SpinnerComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};

var SpinnerComponent = /** @class */ (function () {
    function SpinnerComponent() {
    }
    SpinnerComponent.prototype.on = function () {
        // document.getElementById('loading-spinner-overlay').style.visibility = 'visible';
        // document.getElementById('loading-spinner').style.visibility = 'visible';
        document.getElementById('spinner-div').style.visibility = 'visible';
    };
    SpinnerComponent.prototype.off = function () {
        // document.getElementById('loading-spinner-overlay').style.visibility = 'hidden';
        // document.getElementById('loading-spinner').style.visibility = 'hidden';
        document.getElementById('spinner-div').style.visibility = 'hidden';
    };
    SpinnerComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'spinner',
            template: __webpack_require__(/*! ./spinner.component.html */ "./src/app/shared/components/spinner/spinner.component.html"),
            styles: [__webpack_require__(/*! ./spinner.component.scss */ "./src/app/shared/components/spinner/spinner.component.scss")]
        }),
        __metadata("design:paramtypes", [])
    ], SpinnerComponent);
    return SpinnerComponent;
}());



/***/ }),

/***/ "./src/app/shared/decorators/index.ts":
/*!********************************************!*\
  !*** ./src/app/shared/decorators/index.ts ***!
  \********************************************/
/*! exports provided: ModuleList, ModuleDocList, ProcedureTypesAware, ViewerTypesAware, PortTypesAware */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _module_aware_decorator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./module-aware.decorator */ "./src/app/shared/decorators/module-aware.decorator.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ModuleList", function() { return _module_aware_decorator__WEBPACK_IMPORTED_MODULE_0__["ModuleList"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ModuleDocList", function() { return _module_aware_decorator__WEBPACK_IMPORTED_MODULE_0__["ModuleDocList"]; });

/* harmony import */ var _prodtypes_aware_decorator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./prodtypes-aware.decorator */ "./src/app/shared/decorators/prodtypes-aware.decorator.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ProcedureTypesAware", function() { return _prodtypes_aware_decorator__WEBPACK_IMPORTED_MODULE_1__["ProcedureTypesAware"]; });

/* harmony import */ var _viewertypes_aware_decorator__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./viewertypes-aware.decorator */ "./src/app/shared/decorators/viewertypes-aware.decorator.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ViewerTypesAware", function() { return _viewertypes_aware_decorator__WEBPACK_IMPORTED_MODULE_2__["ViewerTypesAware"]; });

/* harmony import */ var _porttypes_aware_decorator__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./porttypes-aware.decorator */ "./src/app/shared/decorators/porttypes-aware.decorator.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PortTypesAware", function() { return _porttypes_aware_decorator__WEBPACK_IMPORTED_MODULE_3__["PortTypesAware"]; });







/***/ }),

/***/ "./src/app/shared/decorators/module-aware.decorator.ts":
/*!*************************************************************!*\
  !*** ./src/app/shared/decorators/module-aware.decorator.ts ***!
  \*************************************************************/
/*! exports provided: ModuleList, ModuleDocList */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ModuleList", function() { return ModuleList; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ModuleDocList", function() { return ModuleDocList; });
/* harmony import */ var _assets_typedoc_json_doc_json__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @assets/typedoc-json/doc.json */ "./src/assets/typedoc-json/doc.json");
var _assets_typedoc_json_doc_json__WEBPACK_IMPORTED_MODULE_0___namespace = /*#__PURE__*/__webpack_require__.t(/*! @assets/typedoc-json/doc.json */ "./src/assets/typedoc-json/doc.json", 1);
/* harmony import */ var assets_core_modules__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! assets/core/modules */ "./src/assets/core/modules/index.ts");

// const doc = require('@assets/typedoc-json/doc.json');
// @ts-ignore

var module_list = [];
// todo: bug fix for defaults
function extract_params(func) {
    var fnStr = func.toString().replace(/((\/\/.*$)|(\/\*[\s\S]*?\*\/))/mg, '');
    var result = fnStr.slice(fnStr.indexOf('(') + 1, fnStr.indexOf(')')).split(','); // .match( /([^\s,]+)/g);
    if (result === null || result[0] === '') {
        result = [];
    }
    var final_result = result.map(function (r) {
        r = r.trim();
        var r_value = r.split('=');
        if (r_value.length === 1) {
            return { name: r_value[0].trim(), value: undefined, default: 0 };
        }
        else {
            return { name: r_value[0].trim(), value: undefined, default: 0 };
        }
    });
    var hasReturn = true;
    if (fnStr.indexOf('return') === -1 || fnStr.indexOf('return;') !== -1) {
        hasReturn = false;
    }
    return [final_result, hasReturn];
}
for (var m_name in assets_core_modules__WEBPACK_IMPORTED_MODULE_1__) {
    if (!assets_core_modules__WEBPACK_IMPORTED_MODULE_1__[m_name]) {
        continue;
    }
    // if (m_name[0] === '_') { continue; }
    var modObj = {};
    modObj.module = m_name;
    modObj.functions = [];
    for (var _i = 0, _a = Object.keys(assets_core_modules__WEBPACK_IMPORTED_MODULE_1__[m_name]); _i < _a.length; _i++) {
        var fn_name = _a[_i];
        // if (fn_name[0] === '_') { continue; }
        var func = assets_core_modules__WEBPACK_IMPORTED_MODULE_1__[m_name][fn_name];
        var fnObj = {};
        fnObj.module = m_name;
        fnObj.name = fn_name;
        fnObj.argCount = func.length;
        var args = extract_params(func);
        fnObj.args = args[0];
        fnObj.hasReturn = args[1];
        modObj.functions.push(fnObj);
    }
    module_list.push(modObj);
}
function analyzeParamType(fn, paramType) {
    if (paramType.type === 'array') {
        return analyzeParamType(fn, paramType.elementType) + "[]";
    }
    else if (paramType.type === 'intrinsic' || paramType.type === 'reference') {
        return paramType.name;
    }
    else if (paramType.type === 'union') {
        return paramType.types.map(function (tp) { return analyzeParamType(fn, tp); }).join(' | ');
    }
    else if (paramType.type === 'tuple') {
        return '[' + paramType.elements.map(function (tp) { return analyzeParamType(fn, tp); }).join(', ') + ']';
    }
    else {
        /**
         * TODO: Update unrecognized param type here
         */
        console.log('param type requires updating:', paramType);
        console.log('in function:', fn.module + '.' + fn.name);
        return paramType.type;
    }
}
var docs = {};
for (var _b = 0, _c = _assets_typedoc_json_doc_json__WEBPACK_IMPORTED_MODULE_0__["children"]; _b < _c.length; _b++) {
    var mod = _c[_b];
    var modName = mod.name.split('/');
    modName = modName[modName.length - 1];
    if (modName.substr(0, 1) === '"' || modName.substr(0, 1) === '\'') {
        modName = modName.substr(1, modName.length - 2);
    }
    else {
        modName = modName.substr(0, modName.length - 1);
    }
    if (modName.substr(0, 1) === '_' || modName === 'index') {
        continue;
    }
    var moduleDoc = {};
    if (mod.comment && mod.comment.shortText) {
        moduleDoc['description'] = mod.comment.shortText;
    }
    for (var _d = 0, _e = mod.children; _d < _e.length; _d++) {
        var func = _e[_d];
        var fn = {};
        fn['name'] = func.name;
        fn['module'] = modName;
        if (!func['signatures']) {
            continue;
        }
        if (func['signatures'][0].comment) {
            var cmmt = func['signatures'][0].comment;
            fn['description'] = cmmt.shortText;
            if (cmmt.text) {
                fn['description'] = fn['description'] + cmmt.text;
            }
            if (cmmt.tags) {
                for (var _f = 0, _g = cmmt.tags; _f < _g.length; _f++) {
                    var fnTag = _g[_f];
                    if (fnTag.tag === 'summary') {
                        fn['summary'] = fnTag.text;
                    }
                    else {
                        if (fn[fnTag.tag]) {
                            fn[fnTag.tag].push(fnTag.text);
                        }
                        else {
                            fn[fnTag.tag] = [fnTag.text];
                        }
                    }
                }
            }
            fn['returns'] = cmmt.returns;
            if (fn['returns']) {
                fn['returns'] = fn['returns'].trim();
            }
        }
        fn['parameters'] = [];
        if (func['signatures'][0].parameters) {
            for (var _h = 0, _j = func['signatures'][0].parameters; _h < _j.length; _h++) {
                var param = _j[_h];
                var namecheck = true;
                for (var systemVarName in assets_core_modules__WEBPACK_IMPORTED_MODULE_1__["_parameterTypes"]) {
                    if (param.name === assets_core_modules__WEBPACK_IMPORTED_MODULE_1__["_parameterTypes"][systemVarName]) {
                        namecheck = false;
                        break;
                    }
                }
                if (!namecheck) {
                    fn['parameters'].push(undefined);
                    continue;
                }
                var pr = {};
                pr['name'] = param.name;
                if (param.comment) {
                    pr['description'] = param.comment.shortText || param.comment.text;
                }
                pr['type'] = analyzeParamType(fn, param.type);
                fn['parameters'].push(pr);
            }
        }
        moduleDoc[func.name] = fn;
    }
    docs[modName] = moduleDoc;
}
var ModuleList = module_list;
var ModuleDocList = docs;


/***/ }),

/***/ "./src/app/shared/decorators/porttypes-aware.decorator.ts":
/*!****************************************************************!*\
  !*** ./src/app/shared/decorators/porttypes-aware.decorator.ts ***!
  \****************************************************************/
/*! exports provided: PortTypesAware */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PortTypesAware", function() { return PortTypesAware; });
/* harmony import */ var _models_port__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @models/port */ "./src/app/shared/models/port/index.ts");

function PortTypesAware(constructor) {
    constructor.prototype.PortTypes = _models_port__WEBPACK_IMPORTED_MODULE_0__["InputType"];
    // array form
    var keys = Object.keys(_models_port__WEBPACK_IMPORTED_MODULE_0__["InputType"]);
    constructor.prototype.PortTypesArr = keys.slice(keys.length / 2);
}


/***/ }),

/***/ "./src/app/shared/decorators/prodtypes-aware.decorator.ts":
/*!****************************************************************!*\
  !*** ./src/app/shared/decorators/prodtypes-aware.decorator.ts ***!
  \****************************************************************/
/*! exports provided: ProcedureTypesAware */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ProcedureTypesAware", function() { return ProcedureTypesAware; });
/* harmony import */ var _models_procedure__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @models/procedure */ "./src/app/shared/models/procedure/index.ts");

function ProcedureTypesAware(constructor) {
    constructor.prototype.ProcedureTypes = _models_procedure__WEBPACK_IMPORTED_MODULE_0__["ProcedureTypes"];
    // array form
    var keys = Object.keys(_models_procedure__WEBPACK_IMPORTED_MODULE_0__["ProcedureTypes"]);
    constructor.prototype.ProcedureTypesArr = keys.slice(keys.length / 2);
}


/***/ }),

/***/ "./src/app/shared/decorators/viewertypes-aware.decorator.ts":
/*!******************************************************************!*\
  !*** ./src/app/shared/decorators/viewertypes-aware.decorator.ts ***!
  \******************************************************************/
/*! exports provided: ViewerTypesAware */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ViewerTypesAware", function() { return ViewerTypesAware; });
/* harmony import */ var _models_port__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @models/port */ "./src/app/shared/models/port/index.ts");

function ViewerTypesAware(constructor) {
    constructor.prototype.ViewerTypes = _models_port__WEBPACK_IMPORTED_MODULE_0__["OutputType"];
    // array form
    var keys = Object.keys(_models_port__WEBPACK_IMPORTED_MODULE_0__["OutputType"]);
    constructor.prototype.ViewerTypesArr = keys.slice(keys.length / 2);
}


/***/ }),

/***/ "./src/app/shared/directives/filesys/index.ts":
/*!****************************************************!*\
  !*** ./src/app/shared/directives/filesys/index.ts ***!
  \****************************************************/
/*! exports provided: MbFileReaderDirective */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _mobfile_reader_directive__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./mobfile-reader.directive */ "./src/app/shared/directives/filesys/mobfile-reader.directive.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MbFileReaderDirective", function() { return _mobfile_reader_directive__WEBPACK_IMPORTED_MODULE_0__["MbFileReaderDirective"]; });




/***/ }),

/***/ "./src/app/shared/directives/filesys/mobfile-reader.directive.ts":
/*!***********************************************************************!*\
  !*** ./src/app/shared/directives/filesys/mobfile-reader.directive.ts ***!
  \***********************************************************************/
/*! exports provided: MbFileReaderDirective */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MbFileReaderDirective", function() { return MbFileReaderDirective; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var circular_json__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! circular-json */ "./node_modules/circular-json/build/circular-json.node.js");
/* harmony import */ var circular_json__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(circular_json__WEBPACK_IMPORTED_MODULE_1__);
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
/*
 *  Adding this to an HTML5 input element
 *  allows for the file being read to be converted into a Mobius
 *  Flowchart
 *
 */


var MbFileReaderDirective = /** @class */ (function () {
    function MbFileReaderDirective(el) {
        this.el = el;
        this.data = {};
        this.load = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
    }
    MbFileReaderDirective.prototype.onFileChange = function () {
        var f = this.el.nativeElement.files[0];
        if (f) {
            var reader = new FileReader();
            reader.readAsText(f, 'UTF-8');
            var ins_1 = this;
            reader.onload = function (evt) {
                var fileString = evt.target['result'];
                ins_1.load_flowchart_from_string(fileString);
            };
            reader.onerror = function (evt) {
                console.log('Error reading file');
            };
        }
    };
    //
    // Input: string
    // Output: MobiusFile DS
    //
    //
    MbFileReaderDirective.prototype.load_flowchart_from_string = function (fileString) {
        var _this = this;
        // let jsonData: {language: string, flowchart: JSON, modules: JSON};
        // let flowchart: any; // IFlowchart;
        try {
            var data = circular_json__WEBPACK_IMPORTED_MODULE_1__["parse"](fileString);
            this.load.emit(data);
            // this.data.flowchart = data.flowchart;
            // this.data.modules = data.modules;
            // this.data.language = data.language;
            // this.update_code_generator(CodeFactory.getCodeGenerator(data["language"]));
            // TODO: this.update_modules();
            // flowchart = FlowchartReader.read_flowchart_from_data(data["flowchart"]);
            // TODO: select a node
        }
        catch (err) {
            console.error('Mob-file-reader error', err);
        }
    };
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", Object)
    ], MbFileReaderDirective.prototype, "data", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])(),
        __metadata("design:type", Object)
    ], MbFileReaderDirective.prototype, "load", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["HostListener"])('change'),
        __metadata("design:type", Function),
        __metadata("design:paramtypes", []),
        __metadata("design:returntype", void 0)
    ], MbFileReaderDirective.prototype, "onFileChange", null);
    MbFileReaderDirective = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Directive"])({
            selector: '[mbFileReader]'
        }),
        __metadata("design:paramtypes", [_angular_core__WEBPACK_IMPORTED_MODULE_0__["ElementRef"]])
    ], MbFileReaderDirective);
    return MbFileReaderDirective;
}());



/***/ }),

/***/ "./src/app/shared/directives/textarea/autogrow.directive.ts":
/*!******************************************************************!*\
  !*** ./src/app/shared/directives/textarea/autogrow.directive.ts ***!
  \******************************************************************/
/*! exports provided: AutogrowDirective */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AutogrowDirective", function() { return AutogrowDirective; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
/*
 *  Adding this to an HTML5 input element
 *  allows for the file being read to be converted into a Mobius
 *  Flowchart
 *
 */

var AutogrowDirective = /** @class */ (function () {
    function AutogrowDirective(textArea) {
        this.textArea = textArea;
    }
    AutogrowDirective.prototype.onKeyUp = function () {
        this.textArea.nativeElement.style.overflow = 'hidden';
        this.textArea.nativeElement.style.height = '1px';
        this.textArea.nativeElement.style.height = this.textArea.nativeElement.scrollHeight + 'px';
    };
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["HostListener"])('keyup'),
        __metadata("design:type", Function),
        __metadata("design:paramtypes", []),
        __metadata("design:returntype", void 0)
    ], AutogrowDirective.prototype, "onKeyUp", null);
    AutogrowDirective = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Directive"])({
            selector: '[autogrow]'
        }),
        __metadata("design:paramtypes", [_angular_core__WEBPACK_IMPORTED_MODULE_0__["ElementRef"]])
    ], AutogrowDirective);
    return AutogrowDirective;
}());



/***/ }),

/***/ "./src/app/shared/directives/textarea/index.ts":
/*!*****************************************************!*\
  !*** ./src/app/shared/directives/textarea/index.ts ***!
  \*****************************************************/
/*! exports provided: AutogrowDirective */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _autogrow_directive__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./autogrow.directive */ "./src/app/shared/directives/textarea/autogrow.directive.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AutogrowDirective", function() { return _autogrow_directive__WEBPACK_IMPORTED_MODULE_0__["AutogrowDirective"]; });




/***/ }),

/***/ "./src/app/shared/getViewerData.ts":
/*!*****************************************!*\
  !*** ./src/app/shared/getViewerData.ts ***!
  \*****************************************/
/*! exports provided: getViewerData */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getViewerData", function() { return getViewerData; });
/* harmony import */ var _assets_core_modules__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @assets/core/modules */ "./src/assets/core/modules/index.ts");

var emptyModel = _assets_core_modules__WEBPACK_IMPORTED_MODULE_0__["_parameterTypes"].newFn();
function getViewerData(node, getViewOutput) {
    if (!node || !node.enabled) {
        return emptyModel;
    }
    // if (node.type === 'output') { return node.input.value; }
    if (getViewOutput) {
        return node.model;
    }
    return node.input.value;
}


/***/ }),

/***/ "./src/app/shared/models/code/code.utils.ts":
/*!**************************************************!*\
  !*** ./src/app/shared/models/code/code.utils.ts ***!
  \**************************************************/
/*! exports provided: CodeUtils */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CodeUtils", function() { return CodeUtils; });
/* harmony import */ var _models_procedure__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @models/procedure */ "./src/app/shared/models/procedure/index.ts");
/* harmony import */ var _models_port__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @models/port */ "./src/app/shared/models/port/index.ts");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm5/index.js");
/* harmony import */ var circular_json__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! circular-json */ "./node_modules/circular-json/build/circular-json.node.js");
/* harmony import */ var circular_json__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(circular_json__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _modules__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @modules */ "./src/assets/core/modules/index.ts");
var __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (undefined && undefined.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};





var CodeUtils = /** @class */ (function () {
    function CodeUtils() {
    }
    CodeUtils.getProcedureCode = function (prod, existingVars, addProdArr) {
        if (prod.enabled === false || prod.type === _models_procedure__WEBPACK_IMPORTED_MODULE_0__["ProcedureTypes"].Blank || prod.type === _models_procedure__WEBPACK_IMPORTED_MODULE_0__["ProcedureTypes"].Comment) {
            return [''];
        }
        prod.hasError = false;
        var codeStr = [];
        var args = prod.args;
        var prefix = '';
        if (args) {
            prefix =
                args.hasOwnProperty('0') && args[0].value && args[0].value.indexOf('[') === -1
                    && existingVars.indexOf(args[0].value) === -1 ? 'let ' : '';
        }
        codeStr.push('');
        if (addProdArr && prod.type !== _models_procedure__WEBPACK_IMPORTED_MODULE_0__["ProcedureTypes"].Else && prod.type !== _models_procedure__WEBPACK_IMPORTED_MODULE_0__["ProcedureTypes"].Elseif) {
            codeStr.push("__params__.currentProcedure[0] = \"" + prod.ID + "\";");
        }
        switch (prod.type) {
            case _models_procedure__WEBPACK_IMPORTED_MODULE_0__["ProcedureTypes"].Variable:
                if (!args[0].value) {
                    codeStr.push(this.repGetAttrib(args[1].value) + ";");
                    break;
                }
                var repVar = this.repSetAttrib(args[0].value);
                if (!repVar) {
                    codeStr.push("" + prefix + args[0].value + " = " + this.repGetAttrib(args[1].value) + ";");
                    if (prefix === 'let ') {
                        existingVars.push(args[0].value);
                    }
                }
                else {
                    codeStr.push(repVar[0] + " " + this.repGetAttrib(args[1].value) + " " + repVar[1]);
                }
                break;
            case _models_procedure__WEBPACK_IMPORTED_MODULE_0__["ProcedureTypes"].If:
                if (args[0].value.indexOf('__params__') !== -1) {
                    throw new Error('Unexpected Identifier');
                }
                codeStr.push("if (" + this.repGetAttrib(args[0].value) + "){");
                break;
            case _models_procedure__WEBPACK_IMPORTED_MODULE_0__["ProcedureTypes"].Else:
                codeStr.push("else {");
                break;
            case _models_procedure__WEBPACK_IMPORTED_MODULE_0__["ProcedureTypes"].Elseif:
                if (args[0].value.indexOf('__params__') !== -1) {
                    throw new Error('Unexpected Identifier');
                }
                codeStr.push("else if(" + this.repGetAttrib(args[0].value) + "){");
                break;
            case _models_procedure__WEBPACK_IMPORTED_MODULE_0__["ProcedureTypes"].Foreach:
                // codeStr.push(`for (${prefix} ${args[0].value} of [...Array(${args[1].value}).keys()]){`);
                if (args[0].value.indexOf('__params__') !== -1) {
                    throw new Error('Unexpected Identifier');
                }
                codeStr.push("for (" + prefix + " " + args[0].value + " of " + this.repGetAttrib(args[1].value) + "){");
                break;
            case _models_procedure__WEBPACK_IMPORTED_MODULE_0__["ProcedureTypes"].While:
                if (args[0].value.indexOf('__params__') !== -1) {
                    throw new Error('Unexpected Identifier');
                }
                codeStr.push("while (" + this.repGetAttrib(args[0].value) + "){");
                break;
            case _models_procedure__WEBPACK_IMPORTED_MODULE_0__["ProcedureTypes"].Break:
                codeStr.push("break;");
                break;
            case _models_procedure__WEBPACK_IMPORTED_MODULE_0__["ProcedureTypes"].Continue:
                codeStr.push("continue;");
                break;
            case _models_procedure__WEBPACK_IMPORTED_MODULE_0__["ProcedureTypes"].Constant:
                if (!addProdArr) {
                    return [''];
                }
                var constName = args[0].value;
                if (constName[0] === '"' || constName[0] === '\'') {
                    constName = args[0].value.substring(1, args[0].value.length - 1);
                }
                codeStr.push("__params__['constants']['" + constName + "'] = " + prod.resolvedValue + ";");
                break;
            case _models_procedure__WEBPACK_IMPORTED_MODULE_0__["ProcedureTypes"].AddData:
                var cst = args[0].value;
                if (!addProdArr) {
                    return ["__modules__." + _modules__WEBPACK_IMPORTED_MODULE_4__["_parameterTypes"].addData + "( __params__.model, " + cst + ");"];
                }
                if (cst[0] === '"' || cst[0] === '\'') {
                    cst = args[0].value.substring(1, args[0].value.length - 1);
                }
                codeStr.push("__params__['constants']['" + cst + "'] = " + prod.resolvedValue + ";");
                if (_modules__WEBPACK_IMPORTED_MODULE_4__["_parameterTypes"].addData) {
                    codeStr.push("__modules__." + _modules__WEBPACK_IMPORTED_MODULE_4__["_parameterTypes"].addData + "( __params__.model, __params__.constants['" + cst + "']);");
                }
                else {
                    codeStr.push("__params__.model = mergeInputs( [__params__.model, __params__.constants['" + cst + "']]);");
                }
                break;
            case _models_procedure__WEBPACK_IMPORTED_MODULE_0__["ProcedureTypes"].Return:
                var check = true;
                var returnArgVals = [];
                for (var _i = 0, args_1 = args; _i < args_1.length; _i++) {
                    var arg = args_1[_i];
                    if (arg.name === _modules__WEBPACK_IMPORTED_MODULE_4__["_parameterTypes"].constList) {
                        returnArgVals.push('__params__.constants');
                        continue;
                    }
                    if (arg.name === _modules__WEBPACK_IMPORTED_MODULE_4__["_parameterTypes"].model) {
                        returnArgVals.push('__params__.model');
                        continue;
                    }
                    if (!arg.value) {
                        check = false;
                        break;
                    }
                    if (arg.value.indexOf('__params__') !== -1) {
                        throw new Error('Unexpected Identifier');
                    }
                    if (arg.value[0] === '#') {
                        returnArgVals.push('`' + this.repGetAttrib(arg.value) + '`');
                        continue;
                    }
                    returnArgVals.push(this.repGetAttrib(arg.value));
                }
                if (!check) {
                    codeStr.push("return __params__['model'];");
                }
                else {
                    codeStr.push("let __return_value__ = __modules__." + _modules__WEBPACK_IMPORTED_MODULE_4__["_parameterTypes"].return + "(" + returnArgVals.join(', ') + ");");
                    if (addProdArr) {
                        // codeStr.push(`console.(log'Return: ', __return_value__);`);
                        codeStr.push("__params__.console.push('Return: ' + __return_value__.toString());");
                    }
                    codeStr.push("return __return_value__;");
                }
                break;
            case _models_procedure__WEBPACK_IMPORTED_MODULE_0__["ProcedureTypes"].Function:
                var argVals = [];
                for (var _a = 0, _b = args.slice(1); _a < _b.length; _a++) {
                    var arg = _b[_a];
                    if (arg.value && arg.value.indexOf('__params__') !== -1) {
                        throw new Error('Unexpected Identifier');
                    }
                    if (arg.name === _modules__WEBPACK_IMPORTED_MODULE_4__["_parameterTypes"].constList) {
                        argVals.push('__params__.constants');
                        continue;
                    }
                    if (arg.name === _modules__WEBPACK_IMPORTED_MODULE_4__["_parameterTypes"].model) {
                        argVals.push('__params__.model');
                        continue;
                    }
                    if (arg.value && arg.value[0] === '#') {
                        argVals.push('`' + this.repGetAttrib(arg.value) + '`');
                        continue;
                    }
                    argVals.push(this.repGetAttrib(arg.value));
                }
                if (prod.meta.name === 'ImportData') {
                    argVals[1] = prod.resolvedValue;
                }
                var argValues = argVals.join(', ');
                var fnCall = "__modules__." + prod.meta.module + "." + prod.meta.name + "( " + argValues + " )";
                if (prod.meta.module.toUpperCase() === 'OUTPUT') {
                    if (prod.args[prod.args.length - 1].value) {
                        codeStr.push("return " + fnCall + ";");
                    }
                }
                else if (args[0].name === '__none__' || !args[0].value) {
                    codeStr.push(fnCall + ";");
                }
                else {
                    var repfuncVar = this.repSetAttrib(args[0].value);
                    if (!repfuncVar) {
                        codeStr.push("" + prefix + args[0].value + " = " + fnCall + ";");
                        if (prefix === 'let ') {
                            existingVars.push(args[0].value);
                        }
                    }
                    else {
                        codeStr.push(repfuncVar[0] + " " + fnCall + " " + repfuncVar[1]);
                    }
                }
                break;
            case _models_procedure__WEBPACK_IMPORTED_MODULE_0__["ProcedureTypes"].Imported:
                var argsVals = [];
                for (var i = 1; i < args.length; i++) {
                    var arg = args[i];
                    // args.slice(1).map((arg) => {
                    if (arg.type.toString() !== _models_port__WEBPACK_IMPORTED_MODULE_1__["InputType"].URL.toString()) {
                        argsVals.push(this.repGetAttrib(arg.value));
                    }
                    else {
                        argsVals.push(prod.resolvedValue);
                    }
                }
                argsVals = argsVals.join(', ');
                var fn = prod.meta.name + "(__params__, " + argsVals + " )";
                if (args[0].name === '__none__' || !args[0].value) {
                    codeStr.push(fn + ";");
                    break;
                }
                var repImpVar = this.repSetAttrib(args[0].value);
                if (!repImpVar) {
                    codeStr.push("" + prefix + args[0].value + " = " + fn + ";");
                }
                else {
                    codeStr.push(repImpVar[0] + " " + fn + " " + repImpVar[1]);
                }
                if (prefix === 'let ') {
                    existingVars.push(args[0].value);
                }
                break;
        }
        if (prod.children) {
            for (var _c = 0, _d = prod.children; _c < _d.length; _c++) {
                var p = _d[_c];
                codeStr = codeStr.concat(CodeUtils.getProcedureCode(p, existingVars, addProdArr));
            }
            codeStr.push("}");
        }
        if (prod.print && prod.args[0].value) {
            var repGet = this.repGetAttrib(prod.args[0].value);
            codeStr.push("printFunc(__params__.console,'" + prod.args[0].value + "', " + repGet + ");");
        }
        if (prod.selectGeom && prod.args[0].value) {
            var repGet = this.repGetAttrib(prod.args[0].value);
            codeStr.push("__modules__." + _modules__WEBPACK_IMPORTED_MODULE_4__["_parameterTypes"].select + "(__params__.model, " + repGet + ", \"" + repGet + "\");");
        }
        return codeStr;
    };
    CodeUtils.repSetAttrib = function (val) {
        // if (!val || val.indexOf('@') === -1) {
        //     return false;
        // }
        // const splitted = val.split('@');
        // if (splitted.length > 2) {
        //     splitted[1] = splitted.splice(1, splitted.length - 1).join('@');
        // }
        // const openBracketMatch = (splitted[1].match(/\[/g) || []).length;
        // if (openBracketMatch) {
        //     const bracketSplit = splitted[1].substring(0, splitted[1].length - 1).split('[');
        //     const innerVar = CodeUtils.repGetAttrib(bracketSplit.splice(1, bracketSplit.length - 1).join('['));
        //     return [`__modules__.${_parameterTypes.setattrib}(
        //              __params__.model, ${splitted[0]}, '${bracketSplit[0]}',`, `, ${innerVar});`];
        // } else {
        //     return [`__modules__.${_parameterTypes.setattrib}(__params__.model, ${splitted[0]}, '${splitted[1]}',`, ');'];
        // }
        if (!val || val.indexOf('@') === -1) {
            return false;
        }
        // get two parts, before @ and after @
        var val_0;
        var val_1;
        var atIndex = val.indexOf('@');
        if (atIndex === 0) {
            val_0 = null;
            val_1 = val.slice(1);
        }
        else {
            val_0 = val.slice(0, atIndex);
            val_1 = val.slice(atIndex + 1);
        }
        var openBracketMatch = (val_1.match(/\[/g) || []).length;
        if (openBracketMatch) {
            var bracketSplit = val_1.substring(0, val_1.length - 1).split('[');
            var innerVar = CodeUtils.repGetAttrib(bracketSplit.splice(1, bracketSplit.length - 1).join('['));
            return ["__modules__." + _modules__WEBPACK_IMPORTED_MODULE_4__["_parameterTypes"].setattrib + "(__params__.model, " + val_0 + ", '" + bracketSplit[0] + "',", ", " + innerVar + ");"];
        }
        else {
            return ["__modules__." + _modules__WEBPACK_IMPORTED_MODULE_4__["_parameterTypes"].setattrib + "(__params__.model, " + val_0 + ", '" + val_1 + "',", ');'];
        }
    };
    CodeUtils.repGetAttrib = function (val) {
        // if (!val) { return; }
        // const res = val.split(' ');
        // for (const i in res) {
        //     if (!res[i]) {
        //         continue;
        //     }
        //     const atIndex = res[i].indexOf('@');
        //     if (atIndex !== -1 && atIndex > 0 && res[i].trim()[0] !== '#') {
        //         const splitted = res[i].split('@');
        //         if (splitted.length > 2) {
        //             splitted[1] = splitted.splice(1, splitted.length - 1).join('@');
        //         }
        //         let pref = '';
        //         let postf = '';
        //         while (splitted[0][0] === '[') {
        //             splitted[0] = splitted[0].substring(1, splitted[0].length);
        //             pref += '[';
        //         }
        //         const closeBracketMatch = (splitted[1].match(/\]/g) || []).length;
        //         const openBracketMatch = (splitted[1].match(/\[/g) || []).length;
        //         if (closeBracketMatch > openBracketMatch) {
        //             splitted[1] = splitted[1].substring(0, splitted[1].length - (closeBracketMatch - openBracketMatch));
        //             postf = ']'.repeat(closeBracketMatch - openBracketMatch);
        //         }
        //         if (openBracketMatch) {
        //             const bracketSplit = splitted[1].substring(0, splitted[1].length - 1).split('[');
        //             const innerVar = CodeUtils.repGetAttrib(bracketSplit.splice(1, bracketSplit.length - 1).join('['));
        //             res[i] = `${pref}__modules__.${_parameterTypes.getattrib}` +
        //                 `(__params__.model, ${splitted[0]}, '${bracketSplit[0]}', ${innerVar})${postf}`;
        //         } else {
        //             res[i] = `${pref}__modules__.${_parameterTypes.getattrib}(
        //                      __params__.model, ${splitted[0]}, '${splitted[1]}')${postf}`;
        //         }
        //     }
        // }
        // return res.join(' ');
        if (!val) {
            return;
        }
        var res = val.split(' ');
        for (var i in res) {
            if (!res[i]) {
                continue;
            }
            var atIndex = res[i].indexOf('@');
            if (atIndex !== -1 && atIndex >= 0 && res[i].trim()[0] !== '#') {
                // get two parts, before @ and after @
                var val_0 = void 0;
                var val_1 = void 0;
                var pref = '';
                var postf = '';
                if (atIndex === 0) {
                    val_0 = null;
                    val_1 = res[i].slice(1);
                }
                else {
                    val_0 = res[i].slice(0, atIndex);
                    val_1 = res[i].slice(atIndex + 1);
                    while (val_0[0] === '[') {
                        val_0 = val_0.substring(1, val_0.length);
                        pref += '[';
                    }
                    if (val_0 === '') {
                        val_0 = null;
                    }
                }
                var closeBracketMatch = (val_1.match(/\]/g) || []).length;
                var openBracketMatch = (val_1.match(/\[/g) || []).length;
                if (closeBracketMatch > openBracketMatch) {
                    val_1 = val_1.substring(0, val_1.length - (closeBracketMatch - openBracketMatch));
                    postf = ']'.repeat(closeBracketMatch - openBracketMatch);
                }
                if (openBracketMatch) {
                    var bracketSplit = val_1.substring(0, val_1.length - 1).split('[');
                    var innerVar = CodeUtils.repGetAttrib(bracketSplit.splice(1, bracketSplit.length - 1).join('['));
                    res[i] = pref + "__modules__." + _modules__WEBPACK_IMPORTED_MODULE_4__["_parameterTypes"].getattrib +
                        ("(__params__.model, " + val_0 + ", '" + bracketSplit[0] + "', " + innerVar + ")" + postf);
                }
                else {
                    res[i] = pref + "__modules__." + _modules__WEBPACK_IMPORTED_MODULE_4__["_parameterTypes"].getattrib + "(__params__.model, " + val_0 + ", '" + val_1 + "')" + postf;
                }
            }
        }
        return res.join(' ');
    };
    CodeUtils.getStartInput = function (arg, inputMode) {
        return __awaiter(this, void 0, void 0, function () {
            var val, defaultCheck, result, p, p;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        defaultCheck = false;
                        if (arg.value === undefined) {
                            val = arg.default;
                            defaultCheck = true;
                        }
                        else {
                            val = arg.value;
                        }
                        result = val;
                        if (!(inputMode.toString() === _models_port__WEBPACK_IMPORTED_MODULE_1__["InputType"].URL.toString())) return [3 /*break*/, 2];
                        if (val.indexOf('dropbox') !== -1) {
                            val = val.replace('www', 'dl').replace('dl=0', 'dl=1');
                        }
                        p = new Promise(function (resolve) {
                            var request = new XMLHttpRequest();
                            request.open('GET', val);
                            request.onload = function () {
                                resolve(request.responseText);
                            };
                            request.onerror = function () {
                                resolve('HTTP Request Error: unable to retrieve file from url ' + val);
                            };
                            request.send();
                        });
                        return [4 /*yield*/, p];
                    case 1:
                        result = _a.sent();
                        if (result.indexOf('HTTP Request Error') !== -1) {
                            throw (new Error(result));
                        }
                        result = '`' + result + '`';
                        return [3 /*break*/, 5];
                    case 2:
                        if (!(inputMode.toString() === _models_port__WEBPACK_IMPORTED_MODULE_1__["InputType"].File.toString())) return [3 /*break*/, 5];
                        if (!val.lastModified) return [3 /*break*/, 4];
                        p = new Promise(function (resolve) {
                            var reader = new FileReader();
                            reader.onload = function () {
                                resolve(reader.result);
                            };
                            reader.onerror = function () {
                                resolve('File Reading Error: unable to read file ' + val.name);
                            };
                            reader.readAsText(val);
                        });
                        return [4 /*yield*/, p];
                    case 3:
                        result = _a.sent();
                        if (result.indexOf('File Reading Error') !== -1) {
                            throw (new Error(result));
                        }
                        result = '`' + result + '`';
                        window.localStorage.setItem(val.name, result);
                        if (defaultCheck) {
                            arg.default = { 'name': val.name };
                        }
                        else {
                            arg.value = { 'name': val.name };
                        }
                        return [3 /*break*/, 5];
                    case 4:
                        result = window.localStorage.getItem(val.name);
                        _a.label = 5;
                    case 5: return [2 /*return*/, result];
                }
            });
        });
    };
    CodeUtils.loadFile = function (f) {
        var stream = rxjs__WEBPACK_IMPORTED_MODULE_2__["Observable"].create(function (observer) {
            var request = new XMLHttpRequest();
            request.open('GET', f.download_url);
            request.onload = function () {
                if (request.status === 200) {
                    var fl = circular_json__WEBPACK_IMPORTED_MODULE_3__["parse"](request.responseText);
                    observer.next(fl);
                    observer.complete();
                }
                else {
                    observer.error('error happened');
                }
            };
            request.onerror = function () {
                observer.error('error happened');
            };
            request.send();
        });
        stream.subscribe(function (loadeddata) {
            return loadeddata;
        });
    };
    CodeUtils.mergeInputs = function (models) {
        var result = _modules__WEBPACK_IMPORTED_MODULE_4__["_parameterTypes"]['newFn']();
        for (var _i = 0, models_1 = models; _i < models_1.length; _i++) {
            var model = models_1[_i];
            _modules__WEBPACK_IMPORTED_MODULE_4__["_parameterTypes"]['mergeFn'](result, model);
        }
        return result;
    };
    CodeUtils.getInputValue = function (inp, node) {
        var input;
        if (node.type === 'start' || inp.edges.length === 0) {
            input = _modules__WEBPACK_IMPORTED_MODULE_4__["_parameterTypes"]['newFn']();
        }
        else {
            var inputs = [];
            for (var _i = 0, _a = inp.edges; _i < _a.length; _i++) {
                var edge = _a[_i];
                if (edge.source.parentNode.enabled) {
                    inputs.push(edge.source.value);
                }
            }
            input = CodeUtils.mergeInputs(inputs);
            /*
            if (input.constructor === gsConstructor) {
                input = `new __MODULES__.gs.Model(${input.toJSON()})`
            } else {
                // do nothing
            }
            */
        }
        return input;
    };
    CodeUtils.getNodeCode = function (node, addProdArr) {
        if (addProdArr === void 0) { addProdArr = false; }
        node.hasError = false;
        var codeStr = [];
        var varsDefined = [];
        // input initializations
        if (addProdArr) {
            var input = CodeUtils.getInputValue(node.input, node);
            node.input.value = input;
        }
        if (node.type === 'start') {
            codeStr.push('__params__.constants = {};\n');
        }
        codeStr.push("__modules__." + _modules__WEBPACK_IMPORTED_MODULE_4__["_parameterTypes"].preprocess + "( __params__.model);");
        // procedure
        for (var _i = 0, _a = node.procedure; _i < _a.length; _i++) {
            var prod = _a[_i];
            // if (node.type === 'start' && !addProdArr) { break; }
            codeStr = codeStr.concat(CodeUtils.getProcedureCode(prod, varsDefined, addProdArr));
        }
        if (node.type === 'end' && node.procedure.length > 0) {
            return [codeStr, varsDefined];
            // codeStr.push('}');
            // return ['{'].concat(codeStr);
            // return `{\n${codeStr.join('\n')}\n}`;
        }
        else {
            codeStr.push("__modules__." + _modules__WEBPACK_IMPORTED_MODULE_4__["_parameterTypes"].postprocess + "( __params__.model);");
        }
        codeStr.push('return __params__.model;');
        return [codeStr, varsDefined];
        // return `\n${codeStr.join('\n')}\n\nreturn __params__.model;\n`;
        // return `{\n${codeStr.join('\n')}\nreturn result;\n}`;
        // return `/*    ${node.name.toUpperCase()}    */\n\n{\n${codeStr.join('\n')}\nreturn ${node.output.name};\n}`;
    };
    CodeUtils.getFunctionString = function (func) {
        var fullCode = '';
        var fnCode;
        if (func.args.length === 0) {
            fnCode = "function " + func.name + "(__params__)" +
                "{\nvar merged;\n";
        }
        else {
            fnCode = "function " + func.name + "(__params__, " + func.args.map(function (arg) { return arg.name; }).join(', ') + ")" +
                "{\nvar merged;\n";
        }
        for (var _i = 0, _a = func.flowchart.nodes; _i < _a.length; _i++) {
            var node = _a[_i];
            var codeRes = CodeUtils.getNodeCode(node, false);
            var code = codeRes[0];
            code = '{\n' + code.join('\n') + '\n}';
            if (func.args.length === 0) {
                fullCode += "function " + node.id + "(__params__)" + code + "\n\n";
            }
            else {
                fullCode += "function " + node.id + "(__params__, " + func.args.map(function (arg) { return arg.name; }).join(', ') + ")" + code + "\n\n";
            }
            if (node.type === 'start') {
                // fnCode += `let result_${node.id} = ${node.id}(__params__);\n`
                fnCode += "let result_" + node.id + " = __params__.model;\n";
            }
            else {
                var activeNodes = [];
                for (var _b = 0, _c = node.input.edges; _b < _c.length; _b++) {
                    var nodeEdge = _c[_b];
                    if (!nodeEdge.source.parentNode.enabled) {
                        continue;
                    }
                    activeNodes.push(nodeEdge.source.parentNode.id);
                }
                fnCode += "\n__params__.model = mergeInputs([" + activeNodes.map(function (nodeId) { return 'result_' + nodeId; }).join(', ') + "]);\n";
                // if (activeNodes.length === 1) {
                //     fnCode += `__params__.model = mergeInputs([result_${activeNodes}]);\n`;
                // } else {
                //     fnCode += `merged = mergeInputs([${activeNodes.map((nodeId) => 'result_' + nodeId).join(', ')}]);\n`;
                //     fnCode += `__params__.model = merged;\n`;
                // }
                if (func.args.length === 0) {
                    fnCode += "let result_" + node.id + " = " + node.id + "(__params__);\n";
                }
                else {
                    fnCode += "let result_" + node.id + " = " + node.id + "(__params__, " + func.args.map(function (arg) { return arg.name; }).join(', ') + ");\n";
                }
            }
            if (node.type === 'end') {
                // fnCode += `\n__mainParams__.model = mergeInputs([__mainParams__.model,__params__.model]);\n`;
                fnCode += "\nreturn result_" + node.id + ";\n";
            }
        }
        fnCode += '}\n\n';
        fullCode += fnCode;
        return fullCode;
    };
    return CodeUtils;
}());



/***/ }),

/***/ "./src/app/shared/models/code/execute.utils.ts":
/*!*****************************************************!*\
  !*** ./src/app/shared/models/code/execute.utils.ts ***!
  \*****************************************************/
/*! exports provided: ExecuteUtils */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ExecuteUtils", function() { return ExecuteUtils; });
var ExecuteUtils = /** @class */ (function () {
    function ExecuteUtils() {
    }
    return ExecuteUtils;
}());



/***/ }),

/***/ "./src/app/shared/models/code/index.ts":
/*!*********************************************!*\
  !*** ./src/app/shared/models/code/index.ts ***!
  \*********************************************/
/*! exports provided: CodeUtils, ExecuteUtils */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _code_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./code.utils */ "./src/app/shared/models/code/code.utils.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CodeUtils", function() { return _code_utils__WEBPACK_IMPORTED_MODULE_0__["CodeUtils"]; });

/* harmony import */ var _execute_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./execute.utils */ "./src/app/shared/models/code/execute.utils.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ExecuteUtils", function() { return _execute_utils__WEBPACK_IMPORTED_MODULE_1__["ExecuteUtils"]; });





/***/ }),

/***/ "./src/app/shared/models/flowchart/flowchart.interface.ts":
/*!****************************************************************!*\
  !*** ./src/app/shared/models/flowchart/flowchart.interface.ts ***!
  \****************************************************************/
/*! exports provided: canvasSize */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "canvasSize", function() { return canvasSize; });
//
//
// The flowchart is the basic datastructure in Mobius - it is essentially a linked-list.
// It also
//
var canvasSize = 10000;


/***/ }),

/***/ "./src/app/shared/models/flowchart/flowchart.utils.ts":
/*!************************************************************!*\
  !*** ./src/app/shared/models/flowchart/flowchart.utils.ts ***!
  \************************************************************/
/*! exports provided: FlowchartUtils */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FlowchartUtils", function() { return FlowchartUtils; });
/* harmony import */ var _flowchart_interface__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./flowchart.interface */ "./src/app/shared/models/flowchart/flowchart.interface.ts");
/* harmony import */ var _models_node__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @models/node */ "./src/app/shared/models/node/index.ts");


var FlowchartUtils = /** @class */ (function () {
    function FlowchartUtils() {
    }
    FlowchartUtils.newflowchart = function () {
        var startNode = _models_node__WEBPACK_IMPORTED_MODULE_1__["NodeUtils"].getStartNode();
        startNode.position = { x: _flowchart_interface__WEBPACK_IMPORTED_MODULE_0__["canvasSize"] * 1.07 / 2, y: _flowchart_interface__WEBPACK_IMPORTED_MODULE_0__["canvasSize"] / 2 };
        var middleNode = _models_node__WEBPACK_IMPORTED_MODULE_1__["NodeUtils"].getNewNode();
        middleNode.position = { x: _flowchart_interface__WEBPACK_IMPORTED_MODULE_0__["canvasSize"] * 1.07 / 2, y: 200 + _flowchart_interface__WEBPACK_IMPORTED_MODULE_0__["canvasSize"] / 2 };
        var endNode = _models_node__WEBPACK_IMPORTED_MODULE_1__["NodeUtils"].getEndNode();
        endNode.position = { x: _flowchart_interface__WEBPACK_IMPORTED_MODULE_0__["canvasSize"] * 1.07 / 2, y: 400 + _flowchart_interface__WEBPACK_IMPORTED_MODULE_0__["canvasSize"] / 2 };
        var startMid = {
            source: startNode.output,
            target: middleNode.input,
            selected: false
        };
        startNode.output.edges = [startMid];
        middleNode.input.edges = [startMid];
        var midEnd = {
            source: middleNode.output,
            target: endNode.input,
            selected: false
        };
        middleNode.output.edges = [midEnd];
        endNode.input.edges = [midEnd];
        middleNode.enabled = true;
        endNode.enabled = true;
        var flw = {
            name: 'Untitled',
            description: '',
            language: 'js',
            meta: {
                selected_nodes: [2]
            },
            nodes: [startNode, middleNode, endNode],
            edges: [startMid, midEnd],
            functions: [],
            ordered: true
        };
        return flw;
    };
    FlowchartUtils.checkNode = function (nodeOrder, node, enabled) {
        if (node.hasExecuted) {
            return;
        }
        else if (node.type === 'start') {
            nodeOrder.push(node);
        }
        else {
            for (var _i = 0, _a = node.input.edges; _i < _a.length; _i++) {
                var edge = _a[_i];
                if (!edge.source.parentNode.hasExecuted) {
                    return;
                }
            }
            nodeOrder.push(node);
        }
        node.hasExecuted = true;
        // node.enabled = enabled;
        for (var _b = 0, _c = node.output.edges; _b < _c.length; _b++) {
            var edge = _c[_b];
            FlowchartUtils.checkNode(nodeOrder, edge.target.parentNode, enabled);
        }
    };
    FlowchartUtils.orderNodes = function (flw) {
        var startNode;
        for (var _i = 0, _a = flw.nodes; _i < _a.length; _i++) {
            var node = _a[_i];
            if (node.type === 'start') {
                startNode = node;
            }
            node.hasExecuted = false;
        }
        var nodeOrder = [];
        FlowchartUtils.checkNode(nodeOrder, startNode, true);
        if (nodeOrder.length < flw.nodes.length) {
            /*
            for (const node of flw.nodes) {
                if (node.type !== 'start' && node.input.edges.length === 0) {
                    FlowchartUtils.checkNode(nodeOrder, node, false);
                }
            }
            */
            for (var _b = 0, _c = flw.nodes; _b < _c.length; _b++) {
                var node = _c[_b];
                var check = false;
                for (var _d = 0, nodeOrder_1 = nodeOrder; _d < nodeOrder_1.length; _d++) {
                    var existingNode = nodeOrder_1[_d];
                    if (existingNode === node) {
                        check = true;
                        break;
                    }
                }
                if (check) {
                    continue;
                }
                // node.enabled = false;
                nodeOrder.push(node);
            }
        }
        if (nodeOrder[nodeOrder.length - 1].type !== 'end') {
            for (var i = nodeOrder.length - 2; i > 0; i--) {
                if (nodeOrder[i].type === 'end') {
                    var endN = nodeOrder[i];
                    nodeOrder.splice(i, 1);
                    nodeOrder.push(endN);
                    break;
                }
            }
        }
        flw.nodes = nodeOrder;
        flw.ordered = true;
    };
    return FlowchartUtils;
}());



/***/ }),

/***/ "./src/app/shared/models/flowchart/index.ts":
/*!**************************************************!*\
  !*** ./src/app/shared/models/flowchart/index.ts ***!
  \**************************************************/
/*! exports provided: canvasSize, FlowchartUtils */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _flowchart_interface__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./flowchart.interface */ "./src/app/shared/models/flowchart/flowchart.interface.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "canvasSize", function() { return _flowchart_interface__WEBPACK_IMPORTED_MODULE_0__["canvasSize"]; });

/* harmony import */ var _flowchart_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./flowchart.utils */ "./src/app/shared/models/flowchart/flowchart.utils.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "FlowchartUtils", function() { return _flowchart_utils__WEBPACK_IMPORTED_MODULE_1__["FlowchartUtils"]; });





/***/ }),

/***/ "./src/app/shared/models/node/index.ts":
/*!*********************************************!*\
  !*** ./src/app/shared/models/node/index.ts ***!
  \*********************************************/
/*! exports provided: NodeUtils */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node.utils */ "./src/app/shared/models/node/node.utils.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "NodeUtils", function() { return _node_utils__WEBPACK_IMPORTED_MODULE_0__["NodeUtils"]; });




/***/ }),

/***/ "./src/app/shared/models/node/node.utils.ts":
/*!**************************************************!*\
  !*** ./src/app/shared/models/node/node.utils.ts ***!
  \**************************************************/
/*! exports provided: NodeUtils */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NodeUtils", function() { return NodeUtils; });
/* harmony import */ var _models_procedure__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @models/procedure */ "./src/app/shared/models/procedure/index.ts");
/* harmony import */ var _models_port__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @models/port */ "./src/app/shared/models/port/index.ts");
/* harmony import */ var circular_json__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! circular-json */ "./node_modules/circular-json/build/circular-json.node.js");
/* harmony import */ var circular_json__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(circular_json__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @utils */ "./src/app/shared/utils/index.ts");
/* harmony import */ var _shared_decorators__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @shared/decorators */ "./src/app/shared/decorators/index.ts");
/* harmony import */ var _modules__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @modules */ "./src/assets/core/modules/index.ts");






var NodeUtils = /** @class */ (function () {
    function NodeUtils() {
    }
    NodeUtils.getNewNode = function () {
        var node = {
            name: 'Node',
            id: _utils__WEBPACK_IMPORTED_MODULE_3__["IdGenerator"].getNodeID(),
            position: { x: 0, y: 0 },
            enabled: false,
            type: '',
            procedure: [{ type: 13, ID: '',
                    parent: undefined,
                    meta: { name: '', module: '' },
                    variable: undefined,
                    children: undefined,
                    argCount: 0,
                    args: [],
                    print: false,
                    enabled: true,
                    selected: false,
                    selectGeom: false,
                    hasError: false }],
            state: {
                procedure: [],
                input_port: undefined,
                output_port: undefined
            },
            input: _models_port__WEBPACK_IMPORTED_MODULE_1__["PortUtils"].getNewInput(),
            output: _models_port__WEBPACK_IMPORTED_MODULE_1__["PortUtils"].getNewOutput()
        };
        node.input.parentNode = node;
        node.output.parentNode = node;
        return node;
    };
    NodeUtils.getStartNode = function () {
        var node = NodeUtils.getNewNode();
        // node.procedure = [];
        node.enabled = true;
        node.name = 'Start';
        node.type = 'start';
        return node;
    };
    NodeUtils.getEndNode = function () {
        var node = NodeUtils.getNewNode();
        var returnMeta = _modules__WEBPACK_IMPORTED_MODULE_5__["_parameterTypes"].return.split('.');
        var check = false;
        for (var _i = 0, ModuleList_1 = _shared_decorators__WEBPACK_IMPORTED_MODULE_4__["ModuleList"]; _i < ModuleList_1.length; _i++) {
            var i = ModuleList_1[_i];
            if (i.module !== returnMeta[0]) {
                continue;
            }
            for (var _a = 0, _b = i.functions; _a < _b.length; _a++) {
                var j = _b[_a];
                if (j.name !== returnMeta[1]) {
                    continue;
                }
                var newReturn = { type: 11, ID: '',
                    parent: undefined,
                    meta: { name: '', module: '' },
                    children: undefined,
                    variable: undefined,
                    argCount: j.argCount,
                    args: j.args,
                    print: false,
                    enabled: true,
                    selected: false,
                    selectGeom: false,
                    hasError: false };
                for (var _c = 0, _d = newReturn.args; _c < _d.length; _c++) {
                    var arg = _d[_c];
                    arg.value = '';
                }
                node.procedure.push(newReturn);
                check = true;
                break;
            }
            break;
        }
        if (!check) {
            console.log('CORE FUNCTION ERROR: Unable to retrieve return procedure, please check "Return" in _ParameterTypes.ts');
        }
        // node.procedure = [];
        node.name = 'End';
        node.type = 'end';
        return node;
    };
    NodeUtils.deselect_procedure = function (node) {
        for (var _i = 0, _a = node.state.procedure; _i < _a.length; _i++) {
            var prod = _a[_i];
            prod.selected = false;
        }
        node.state.procedure = [];
    };
    NodeUtils.rearrangeProcedures = function (prodList, tempList, prods) {
        for (var _i = 0, prods_1 = prods; _i < prods_1.length; _i++) {
            var pr = prods_1[_i];
            var i = 0;
            while (i < tempList.length) {
                if (tempList[i].ID === pr.ID) {
                    prodList.push(pr);
                    tempList.splice(i, 1);
                    break;
                }
                i += 1;
            }
            if (pr.children) {
                NodeUtils.rearrangeProcedures(prodList, tempList, pr.children);
            }
        }
    };
    NodeUtils.select_procedure = function (node, procedure, ctrl, shift) {
        if (!procedure) {
            return;
        }
        if (ctrl) {
            var selIndex = 0;
            var selected = false;
            while (selIndex < node.state.procedure.length) {
                if (node.state.procedure[selIndex] === procedure) {
                    selected = true;
                    node.state.procedure.splice(selIndex, 1);
                    procedure.selected = false;
                    return false;
                }
                selIndex += 1;
            }
            if (!selected) {
                procedure.selected = true;
                node.state.procedure.push(procedure);
            }
        }
        else if (shift) {
            // fromProd: the last selected procedure
            var fromProd = node.state.procedure[node.state.procedure.length - 1];
            // find the whole path to the fromProd from the base level
            var fromTree = [fromProd];
            while (fromProd.parent) {
                fromProd = fromProd.parent;
                fromTree.unshift(fromProd);
            }
            // toProd: the procedure that was shift + clicked on
            var toProd = procedure;
            // find the whole path to the toProd from the base level
            var toTree = [procedure];
            while (toProd.parent) {
                toProd = toProd.parent;
                toTree.unshift(toProd);
            }
            // removing the common parents in the fromProd-toProd path
            // env would be the list of procedure containing the first different parents between fromProd and toProd
            var env = node.procedure;
            while (fromTree[0] === toTree[0]) {
                env = fromTree[0].children;
                fromTree.splice(0, 1);
                toTree.splice(0, 1);
            }
            // find the indices of the first different parents of fromProd and toProd
            var fromIndex = env.indexOf(fromTree[0]);
            var toIndex = env.indexOf(toTree[0]);
            // check the direction from fromProd to toProd
            // reverse = false: fromProd is above toProd
            // reverse = true : fromProd is below toProd
            var reverse = fromIndex < toIndex ? false : true;
            // add the procedures between fromProd and toProd that are inside the fromTree
            while (fromTree.length > 1) {
                fromProd = fromTree.pop();
                var prodList = fromProd.parent.children;
                if (!reverse) {
                    // add procedure from the fromProcedure to the end, not inclusive of the fromProcedure
                    // since it is already selected
                    for (var i = prodList.indexOf(fromProd) + 1; i < prodList.length; i++) {
                        prodList[i].selected = true;
                        node.state.procedure.push(prodList[i]);
                    }
                }
                else {
                    // add procedure from the fromProcedure to the beginning,
                    // not inclusive of the fromProcedure since it is already selected.
                    // stop adding procedure when at index 1,
                    // procedure at index 0 is not added to the list since it is always a blank
                    for (var i = prodList.indexOf(fromProd) - 1; i > 0; i--) {
                        prodList[i].selected = true;
                        node.state.procedure.push(prodList[i]);
                    }
                }
            }
            // add the procedure between the first different parents of the fromProd and toProd
            if (!reverse) {
                for (var i = fromIndex + 1; i < toIndex; i++) {
                    env[i].selected = true;
                    node.state.procedure.push(env[i]);
                }
            }
            else {
                for (var i = fromIndex - 1; i > toIndex; i--) {
                    env[i].selected = true;
                    node.state.procedure.push(env[i]);
                }
            }
            // add the procedures between fromProd and toProd that are inside the toTree
            for (var ind = 1; ind < toTree.length; ind++) {
                toProd = toTree[ind];
                var prodList = toProd.parent.children;
                if (!reverse) {
                    // procedure at index 0 is not added to the list since it is always a blank
                    for (var i = prodList.indexOf(toProd) - 1; i > 0; i--) {
                        prodList[i].selected = true;
                        node.state.procedure.push(prodList[i]);
                    }
                }
                else {
                    for (var i = prodList.indexOf(toProd) + 1; i < prodList.length; i++) {
                        prodList[i].selected = true;
                        node.state.procedure.push(prodList[i]);
                    }
                }
            }
            // add the toProd itself
            procedure.selected = true;
            node.state.procedure.push(procedure);
        }
        else {
            var sel = procedure.selected;
            for (var _i = 0, _a = node.state.procedure; _i < _a.length; _i++) {
                var prod = _a[_i];
                prod.selected = false;
            }
            if (sel && node.state.procedure.length === 1 && node.state.procedure[node.state.procedure.length - 1] === procedure) {
                node.state.procedure = [];
            }
            else {
                node.state.procedure = [procedure];
                procedure.selected = true;
            }
        }
    };
    NodeUtils.insert_procedure = function (node, prod) {
        if (prod.type === _models_procedure__WEBPACK_IMPORTED_MODULE_0__["ProcedureTypes"].Constant) {
            if (node.type !== 'start') {
                return;
            }
            if (node.state.procedure[node.state.procedure.length - 1]) {
                if (node.state.procedure[node.state.procedure.length - 1].type === _models_procedure__WEBPACK_IMPORTED_MODULE_0__["ProcedureTypes"].Constant) {
                    for (var index in node.procedure) {
                        if (node.procedure[index].selected) {
                            node.procedure.splice(parseInt(index, 10) + 1, 0, prod);
                            break;
                        }
                    }
                }
                else {
                    var addCheck = false;
                    for (var index in node.procedure) {
                        if (node.procedure[index].type === _models_procedure__WEBPACK_IMPORTED_MODULE_0__["ProcedureTypes"].Constant) {
                            node.procedure.splice(parseInt(index, 10), 0, prod);
                            addCheck = true;
                            break;
                        }
                    }
                    if (!addCheck) {
                        node.procedure.push(prod);
                    }
                }
            }
            else {
                node.procedure.push(prod);
            }
            return;
        }
        var lastNode = node.state.procedure[node.state.procedure.length - 1];
        if (lastNode &&
            lastNode.type !== _models_procedure__WEBPACK_IMPORTED_MODULE_0__["ProcedureTypes"].Constant) {
            var list = void 0;
            if (lastNode.parent) {
                prod.parent = lastNode.parent;
                list = prod.parent.children;
            }
            else {
                list = node.procedure;
            }
            for (var index in list) {
                if (list[index].ID === lastNode.ID) {
                    list.splice(parseInt(index, 10) + 1, 0, prod);
                    break;
                }
            }
        }
        else {
            if (node.type === 'end') {
                node.procedure.splice(node.procedure.length - 1, 0, prod);
                return;
            }
            else if (node.type === 'start') {
                for (var i = 0; i < node.procedure.length; i++) {
                    if (node.procedure[i].type === _models_procedure__WEBPACK_IMPORTED_MODULE_0__["ProcedureTypes"].Constant) {
                        node.procedure.splice(i, 0, prod);
                        return;
                    }
                }
                node.procedure.push(prod);
                return;
            }
            node.procedure.push(prod);
        }
    };
    NodeUtils.initiateChildren = function (prod) {
        prod.children = [
            { type: 13, ID: '',
                parent: prod, meta: { name: '', module: '' },
                children: undefined,
                variable: undefined,
                argCount: 0,
                args: [],
                print: false,
                enabled: true,
                selected: false,
                selectGeom: false,
                hasError: false }
        ];
    };
    NodeUtils.add_procedure = function (node, type, data) {
        var prod = {};
        prod.type = type;
        NodeUtils.insert_procedure(node, prod);
        // add ID to the procedure
        prod.ID = _utils__WEBPACK_IMPORTED_MODULE_3__["IdGenerator"].getProdID();
        prod.enabled = true;
        prod.print = false;
        switch (prod.type) {
            case _models_procedure__WEBPACK_IMPORTED_MODULE_0__["ProcedureTypes"].Variable:
                prod.argCount = 2;
                prod.args = [
                    { name: 'var_name', value: undefined, default: undefined },
                    { name: 'value', value: undefined, default: undefined }
                ];
                break;
            case _models_procedure__WEBPACK_IMPORTED_MODULE_0__["ProcedureTypes"].Foreach:
                prod.argCount = 2;
                prod.args = [{ name: 'item', value: undefined, default: undefined }, { name: 'list', value: undefined, default: [] }];
                this.initiateChildren(prod);
                break;
            case _models_procedure__WEBPACK_IMPORTED_MODULE_0__["ProcedureTypes"].While:
                prod.argCount = 1;
                prod.args = [{ name: 'condition', value: undefined, default: undefined }];
                this.initiateChildren(prod);
                break;
            case _models_procedure__WEBPACK_IMPORTED_MODULE_0__["ProcedureTypes"].If:
            case _models_procedure__WEBPACK_IMPORTED_MODULE_0__["ProcedureTypes"].Elseif:
                prod.argCount = 1;
                prod.args = [{ name: 'condition', value: undefined, default: undefined }];
                this.initiateChildren(prod);
                break;
            case _models_procedure__WEBPACK_IMPORTED_MODULE_0__["ProcedureTypes"].Else:
                prod.argCount = 0;
                prod.args = [];
                this.initiateChildren(prod);
                break;
            case _models_procedure__WEBPACK_IMPORTED_MODULE_0__["ProcedureTypes"].Break:
            case _models_procedure__WEBPACK_IMPORTED_MODULE_0__["ProcedureTypes"].Continue:
                prod.argCount = 0;
                break;
            case _models_procedure__WEBPACK_IMPORTED_MODULE_0__["ProcedureTypes"].Constant:
                prod.argCount = 2;
                prod.meta = { module: 'Input', name: 'Constant', inputMode: data, description: '' };
                prod.args = [
                    { name: 'const_name', value: undefined, default: 0 },
                    { name: '__input__', value: undefined, default: 0 }
                ];
                break;
            case _models_procedure__WEBPACK_IMPORTED_MODULE_0__["ProcedureTypes"].AddData:
                prod.argCount = 2;
                prod.meta = { module: 'Input', name: 'Constant', inputMode: _models_port__WEBPACK_IMPORTED_MODULE_1__["InputType"].SimpleInput, description: undefined };
                prod.args = [
                    { name: 'const_name', value: undefined, default: 0 },
                    { name: '__input__', value: undefined, default: 0 }
                ];
                break;
            case _models_procedure__WEBPACK_IMPORTED_MODULE_0__["ProcedureTypes"].Comment:
                prod.argCount = 1;
                prod.args = [{ name: 'comment', value: undefined, default: 0 }];
                break;
            case _models_procedure__WEBPACK_IMPORTED_MODULE_0__["ProcedureTypes"].Return:
                prod.meta = { module: 'Output', name: 'Return', description: undefined };
                prod.argCount = 1;
                prod.args = [{ name: 'index', value: undefined, default: 0 }];
                break;
            case _models_procedure__WEBPACK_IMPORTED_MODULE_0__["ProcedureTypes"].Function:
                if (!data) {
                    throw Error('No function data');
                }
                prod.meta = { module: data.module, name: data.name };
                prod.argCount = data.argCount + 1;
                var returnArg = { name: 'var_name', value: undefined, default: undefined };
                if (!data.hasReturn) {
                    returnArg = { name: '__none__', value: undefined, default: undefined };
                }
                prod.args = [returnArg].concat(data.args);
                break;
            case _models_procedure__WEBPACK_IMPORTED_MODULE_0__["ProcedureTypes"].Imported:
                prod.meta = { module: data.module, name: data.name };
                prod.argCount = data.argCount + 1;
                var iReturnArg = { name: 'var_name', value: undefined, default: undefined };
                if (!data.hasReturn) {
                    iReturnArg = { name: '__none__', value: undefined, default: undefined };
                }
                prod.args = [iReturnArg].concat(data.args);
                break;
        }
        // select the procedure
        if (prod.children) {
            NodeUtils.select_procedure(node, prod.children[0], false, false);
        }
        else {
            NodeUtils.select_procedure(node, prod, false, false);
        }
    };
    NodeUtils.updateNode = function (newNode, newPos) {
        newNode.id = _utils__WEBPACK_IMPORTED_MODULE_3__["IdGenerator"].getNodeID();
        newNode.input = _models_port__WEBPACK_IMPORTED_MODULE_1__["PortUtils"].getNewInput();
        newNode.output = _models_port__WEBPACK_IMPORTED_MODULE_1__["PortUtils"].getNewOutput();
        newNode.input.parentNode = newNode;
        newNode.output.parentNode = newNode;
        newNode.position.x = newPos.x;
        newNode.position.y = newPos.y;
        return newNode;
    };
    NodeUtils.updateID = function (prod) {
        if (prod.hasOwnProperty('children')) {
            prod.children.map(function (child) {
                NodeUtils.updateID(child);
            });
        }
        prod.ID = _utils__WEBPACK_IMPORTED_MODULE_3__["IdGenerator"].getProdID();
        NodeUtils.resetSelectGeom(prod);
        return prod;
    };
    NodeUtils.resetSelectGeom = function (prod) {
        prod.selectGeom = false;
        if (prod.children) {
            for (var _i = 0, _a = prod.children; _i < _a.length; _i++) {
                var chl = _a[_i];
                NodeUtils.resetSelectGeom(chl);
            }
        }
    };
    NodeUtils.paste_procedure = function (node, prod) {
        var newProd = NodeUtils.updateID(circular_json__WEBPACK_IMPORTED_MODULE_2__["parse"](circular_json__WEBPACK_IMPORTED_MODULE_2__["stringify"](prod)));
        newProd.parent = undefined;
        NodeUtils.insert_procedure(node, newProd);
        NodeUtils.select_procedure(node, newProd, false, false);
    };
    return NodeUtils;
}());



/***/ }),

/***/ "./src/app/shared/models/port/index.ts":
/*!*********************************************!*\
  !*** ./src/app/shared/models/port/index.ts ***!
  \*********************************************/
/*! exports provided: PortUtils, PortType, InputType, OutputType */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./types */ "./src/app/shared/models/port/types.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PortType", function() { return _types__WEBPACK_IMPORTED_MODULE_0__["PortType"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "InputType", function() { return _types__WEBPACK_IMPORTED_MODULE_0__["InputType"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "OutputType", function() { return _types__WEBPACK_IMPORTED_MODULE_0__["OutputType"]; });

/* harmony import */ var _port_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./port.utils */ "./src/app/shared/models/port/port.utils.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PortUtils", function() { return _port_utils__WEBPACK_IMPORTED_MODULE_1__["PortUtils"]; });





/***/ }),

/***/ "./src/app/shared/models/port/port.utils.ts":
/*!**************************************************!*\
  !*** ./src/app/shared/models/port/port.utils.ts ***!
  \**************************************************/
/*! exports provided: PortUtils */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PortUtils", function() { return PortUtils; });
/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./types */ "./src/app/shared/models/port/types.ts");

var PortUtils = /** @class */ (function () {
    function PortUtils() {
    }
    PortUtils.getNewInput = function () {
        var inp = {
            name: 'input',
            type: _types__WEBPACK_IMPORTED_MODULE_0__["PortType"].Input,
            value: undefined,
            default: undefined,
            edges: [],
            meta: {
                mode: _types__WEBPACK_IMPORTED_MODULE_0__["InputType"].SimpleInput,
                opts: {}
            }
        };
        return inp;
    };
    PortUtils.getNewOutput = function () {
        var oup = {
            name: 'output',
            type: _types__WEBPACK_IMPORTED_MODULE_0__["PortType"].Output,
            edges: [],
            meta: {
                mode: _types__WEBPACK_IMPORTED_MODULE_0__["OutputType"].Text,
            }
        };
        return oup;
    };
    return PortUtils;
}());



/***/ }),

/***/ "./src/app/shared/models/port/types.ts":
/*!*********************************************!*\
  !*** ./src/app/shared/models/port/types.ts ***!
  \*********************************************/
/*! exports provided: PortType, InputType, OutputType */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PortType", function() { return PortType; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "InputType", function() { return InputType; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "OutputType", function() { return OutputType; });
var PortType;
(function (PortType) {
    PortType[PortType["Input"] = 0] = "Input";
    PortType[PortType["Output"] = 1] = "Output";
})(PortType || (PortType = {}));
var InputType;
(function (InputType) {
    InputType[InputType["SimpleInput"] = 0] = "SimpleInput";
    InputType[InputType["Slider"] = 1] = "Slider";
    InputType[InputType["Checkbox"] = 2] = "Checkbox";
    InputType[InputType["URL"] = 3] = "URL";
    InputType[InputType["File"] = 4] = "File";
    InputType[InputType["Constant"] = 5] = "Constant";
})(InputType || (InputType = {}));
var OutputType;
(function (OutputType) {
    OutputType[OutputType["Text"] = 0] = "Text";
    OutputType[OutputType["Code"] = 1] = "Code";
})(OutputType || (OutputType = {}));


/***/ }),

/***/ "./src/app/shared/models/procedure/index.ts":
/*!**************************************************!*\
  !*** ./src/app/shared/models/procedure/index.ts ***!
  \**************************************************/
/*! exports provided: ProcedureTypes */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./types */ "./src/app/shared/models/procedure/types.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ProcedureTypes", function() { return _types__WEBPACK_IMPORTED_MODULE_0__["ProcedureTypes"]; });




/***/ }),

/***/ "./src/app/shared/models/procedure/types.ts":
/*!**************************************************!*\
  !*** ./src/app/shared/models/procedure/types.ts ***!
  \**************************************************/
/*! exports provided: ProcedureTypes */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ProcedureTypes", function() { return ProcedureTypes; });
var ProcedureTypes;
(function (ProcedureTypes) {
    ProcedureTypes[ProcedureTypes["Variable"] = 0] = "Variable";
    ProcedureTypes[ProcedureTypes["If"] = 1] = "If";
    ProcedureTypes[ProcedureTypes["Elseif"] = 2] = "Elseif";
    ProcedureTypes[ProcedureTypes["Else"] = 3] = "Else";
    ProcedureTypes[ProcedureTypes["Foreach"] = 4] = "Foreach";
    ProcedureTypes[ProcedureTypes["While"] = 5] = "While";
    ProcedureTypes[ProcedureTypes["Break"] = 6] = "Break";
    ProcedureTypes[ProcedureTypes["Continue"] = 7] = "Continue";
    ProcedureTypes[ProcedureTypes["Function"] = 8] = "Function";
    ProcedureTypes[ProcedureTypes["Imported"] = 9] = "Imported";
    ProcedureTypes[ProcedureTypes["Constant"] = 10] = "Constant";
    ProcedureTypes[ProcedureTypes["Return"] = 11] = "Return";
    ProcedureTypes[ProcedureTypes["AddData"] = 12] = "AddData";
    ProcedureTypes[ProcedureTypes["Blank"] = 13] = "Blank";
    ProcedureTypes[ProcedureTypes["Comment"] = 14] = "Comment";
})(ProcedureTypes || (ProcedureTypes = {}));


/***/ }),

/***/ "./src/app/shared/parser.ts":
/*!**********************************!*\
  !*** ./src/app/shared/parser.ts ***!
  \**********************************/
/*! exports provided: updateGlobals, modifyVar, modifyVarArg, modifyArgument, parseVariable, parseArgument, checkValidVar, checkNodeValidity, updateInputValidity */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "updateGlobals", function() { return updateGlobals; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "modifyVar", function() { return modifyVar; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "modifyVarArg", function() { return modifyVarArg; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "modifyArgument", function() { return modifyArgument; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "parseVariable", function() { return parseVariable; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "parseArgument", function() { return parseArgument; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "checkValidVar", function() { return checkValidVar; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "checkNodeValidity", function() { return checkNodeValidity; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "updateInputValidity", function() { return updateInputValidity; });
/* harmony import */ var _assets_core_inline_inline__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @assets/core/inline/inline */ "./src/assets/core/inline/inline.ts");
/* harmony import */ var _models_procedure__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @models/procedure */ "./src/app/shared/models/procedure/index.ts");


var strType;
(function (strType) {
    strType[strType["NUM"] = 0] = "NUM";
    strType[strType["VAR"] = 1] = "VAR";
    strType[strType["STR"] = 2] = "STR";
    strType[strType["OTHER"] = 3] = "OTHER";
})(strType || (strType = {}));
var binaryOperators = new Set(['+', '+=', '-=', '*', '/', '%', '<', '<=',
    '==', '===', '>', '>=', '!=', '!==', '&&', '||']);
var postfixUnaryOperators = new Set(['++', '--']);
var prefixUnaryOperators = new Set(['-', '!']);
var allConstants = _assets_core_inline_inline__WEBPACK_IMPORTED_MODULE_0__["inline_func"][0][1].map(function (constComp) { return constComp[0]; });
var reservedWords = [
    'abstract', 'arguments', 'await', 'boolean',
    'break', 'byte', 'case', 'catch',
    'char', 'class', 'const', 'continue',
    'debugger', 'default', 'delete', 'do',
    'double', 'else', 'enum', 'eval',
    'export', 'extends', 'false', 'final',
    'finally', 'float', 'for', 'function',
    'goto', 'if', 'implements', 'import',
    'in', 'instanceof', 'int', 'interface',
    'let', 'long', 'native', 'new',
    'null', 'package', 'private', 'protected',
    'public', 'return', 'short', 'static',
    'super', 'switch', 'synchronized', 'this',
    'throw', 'throws', 'transient', 'true',
    'try', 'typeof', 'var', 'void',
    'volatile', 'while', 'with', 'yield',
    'Array', 'Date', 'hasOwnProperty', 'Infinity',
    'isFinite', 'isNaN', 'isPrototypeOf', 'length',
    'Math', 'NaN', 'name', 'Number', 'Object',
    'prototype', 'String', 'toString', 'undefined', 'valueOf'
];
var mathFuncs = [];
for (var _i = 0, inline_func_1 = _assets_core_inline_inline__WEBPACK_IMPORTED_MODULE_0__["inline_func"]; _i < inline_func_1.length; _i++) {
    var funcMod = inline_func_1[_i];
    for (var _a = 0, _b = funcMod[1]; _a < _b.length; _a++) {
        var func = _b[_a];
        mathFuncs.push(func[0].split('(')[0]);
    }
}
var globals = [];
function updateGlobals(startNode) {
    globals = [];
    for (var i = startNode.procedure.length - 1; i > -1; i--) {
        var prod = startNode.procedure[i];
        if (prod.type !== _models_procedure__WEBPACK_IMPORTED_MODULE_1__["ProcedureTypes"].Constant) {
            return;
        }
        globals.push(prod.args[0].value);
    }
}
function modifyVar(procedure, nodeProdList) {
    if (!procedure.args[0].value) {
        return;
    }
    procedure.args[0].value = modifyVarArg(procedure.args[0]);
    var modifiedVar = parseVariable(procedure.args[0].value);
    if (modifiedVar.error) {
        procedure.args[0].invalidVar = modifiedVar.error;
        return;
    }
    if (modifiedVar.declaredVar) {
        procedure.variable = modifiedVar.declaredVar;
    }
    if (modifiedVar.usedVars) {
        var result = checkValidVar(modifiedVar.usedVars, procedure, nodeProdList);
        if (!result.error) {
            procedure.args[0].usedVars = result.vars;
        }
        else {
            procedure.args[0].invalidVar = result.error;
            return;
        }
    }
    procedure.args[0].invalidVar = false;
}
function modifyVarArg(arg) {
    var str = arg.value.trim();
    str = str.replace(/ /g, '_');
    str = str.toLowerCase();
    if ((str.match(/\[/g) || []).length !== (str.match(/\]/g) || []).length) {
        arg.invalidVar = true;
        return str;
    }
    var strSplit = str.split(/[\@\[\]]/g);
    var teststr = str;
    for (var _i = 0, strSplit_1 = strSplit; _i < strSplit_1.length; _i++) {
        var i = strSplit_1[_i];
        if (i === '') {
            continue;
        }
        if (i === '0' || Number(i)) {
            var sStr = "[" + i + "]";
            var ind = teststr.indexOf(sStr);
            if (ind === -1) {
                arg.invalidVar = true;
                return str;
            }
            teststr = teststr.slice(0, ind) + teststr.slice(ind + sStr.length);
            continue;
        }
        try {
            if (i[0] === '_') {
                arg.invalidVar = true;
                return str;
            }
            for (var _a = 0, reservedWords_1 = reservedWords; _a < reservedWords_1.length; _a++) {
                var reserved = reservedWords_1[_a];
                if (i === reserved) {
                    arg.invalidVar = true;
                    return str;
                }
            }
            for (var _b = 0, mathFuncs_1 = mathFuncs; _b < mathFuncs_1.length; _b++) {
                var funcName = mathFuncs_1[_b];
                if (i === funcName) {
                    arg.invalidVar = true;
                    return str;
                }
            }
            var currentWindow = void 0;
            if (window.hasOwnProperty(i)) {
                currentWindow = window[i];
            }
            var fn = new Function('', i + "=1;");
            fn();
            delete window[i];
            if (currentWindow) {
                window[i] = currentWindow;
            }
            arg.invalidVar = false;
        }
        catch (ex) {
            arg.invalidVar = true;
            return str;
        }
    }
    return str;
}
function modifyArgument(procedure, argIndex, nodeProdList) {
    if (!procedure.args[argIndex].value) {
        return;
    }
    // PARSER CALL
    var varResult = parseArgument(procedure.args[argIndex].value);
    if (varResult.error) {
        procedure.args[argIndex].invalidVar = varResult.error;
        return;
    }
    varResult = checkValidVar(varResult.vars, procedure, nodeProdList);
    if (!varResult.error) {
        procedure.args[argIndex].usedVars = varResult.vars;
        procedure.args[argIndex].invalidVar = false;
    }
    else {
        procedure.args[argIndex].invalidVar = varResult.error;
    }
    // REGEX CALL
    var vals = procedure.args[argIndex].value.split('"');
    var result = '';
    var startOnEven = true;
    for (var i = 0; i < vals.length; i += 2) {
        if (i > 0) {
            if (startOnEven) {
                result += ' "' + vals[i - 1] + '" ';
            }
            else {
                result += '"' + vals[i - 1] + '"';
            }
        }
        var valSplit = vals[i].split("'");
        for (var j = startOnEven ? 0 : 1; j < valSplit.length; j += 2) {
            if (j === 1) {
                result += valSplit[0] + "' ";
            }
            else if (j > 1) {
                result += " '" + valSplit[j - 1] + "' ";
            }
            result += valSplit[j].replace(/\s*([\[\]])\s*/g, '$1').replace(/([\+\-\*\/\%\{\}\(\)\,\<\>\=\!])/g, ' $1 ')
                .replace(/([\<\>\=\!])\s+=/g, '$1=')
                .trim().replace(/\s{2,}/g, ' ');
            if (j === valSplit.length - 2) {
                result += " '" + valSplit[j + 1];
            }
        }
        if (valSplit.length % 2 === 0) {
            startOnEven = !startOnEven;
        }
        if (i === vals.length - 2) {
            result += ' "' + vals[i + 1] + '" ';
        }
    }
    procedure.args[argIndex].value = result.trim();
}
function parseVariable(value) {
    var str = value.trim();
    // str = str.replace(/ /g, '_');
    str = str.toLowerCase();
    var comps = splitComponents(str);
    if (typeof comps === 'string') {
        return { 'error': comps };
    }
    if (comps[0].value === '@') {
        if (comps[1].type !== strType.VAR) {
            return { 'error': 'Error: Expect attribute name after @' };
        }
        return {};
    }
    if (comps[0].type !== strType.VAR) {
        return { 'error': "Error: Expect a Variable at the start of the input" };
    }
    if (comps.length === 1) {
        return { 'declaredVar': comps[0].value };
    }
    if (comps[1].value === '[') {
        if (comps[comps.length - 1].value !== ']') {
            return { 'error': "Error: Expect ']' at the end of the input" };
        }
        var i = 1;
        var openBrackets = [0, 0, 0]; // [roundBracketCount, squareBracketCount, curlyBracketCount]
        var vars = [];
        while (i < comps.length) {
            var check = analyzeComponent(comps, i, openBrackets, vars);
            if (check.error) {
                return check;
            }
            i = check.value;
        }
        addVars(vars, comps[0].value);
        return { 'usedVars': vars };
    }
    if (comps[1].value === '@') {
        if (comps[2].type !== strType.VAR) {
            return { 'error': 'Error: Expect attribute name after @' };
        }
        return { 'usedVars': [comps[0].value] };
    }
    if (comps[1].value === '.') {
        if (comps[2].type !== strType.VAR) {
            return { 'error': 'Error: Expect attribute name after .' };
        }
        return { 'usedVars': [comps[0].value] };
    }
}
function parseArgument(str) {
    var comps = splitComponents(str);
    if (typeof comps === 'string') {
        return { 'error': comps };
    }
    var i = 0;
    var openBrackets = [0, 0, 0]; // [roundBracketCount, squareBracketCount, curlyBracketCount]
    var vars = [];
    while (i < comps.length) {
        var check = analyzeComponent(comps, i, openBrackets, vars);
        if (check.error) {
            return check;
        }
        i = check.value;
    }
    if (openBrackets[0] > 0) {
        return { 'error': "Error: Mismatching number of round brackets: " + openBrackets[0] + " extra open brackets \"(\"" };
    }
    else if (openBrackets[0] < 0) {
        return { 'error': "Error: Mismatching number of round brackets: " + (0 - openBrackets[0]) + " extra closing brackets \")\"" };
    }
    if (openBrackets[1] > 0) {
        return { 'error': "Error: Mismatching number of square brackets: " + openBrackets[1] + " extra open brackets \"[\"" };
    }
    else if (openBrackets[1] < 0) {
        return { 'error': "Error: Mismatching number of square brackets: " + (0 - openBrackets[1]) + " extra closing brackets \"]\"" };
    }
    if (openBrackets[2] > 0) {
        return { 'error': "Error: Mismatching number of curly brackets: " + openBrackets[2] + " extra open brackets \"{\"" };
    }
    else if (openBrackets[2] < 0) {
        return { 'error': "Error: Mismatching number of curly brackets: " + (0 - openBrackets[2]) + " extra closing brackets \"}\"" };
    }
    return { 'vars': vars };
}
function analyzeComponent(comps, i, openBrackets, vars) {
    var comp = comps[i];
    if (comp.type === strType.VAR) {
        return checkVariable(comps, i, openBrackets, vars);
    }
    else if (comp.type !== strType.OTHER) {
        return checkNumStr(comps, i, openBrackets);
    }
    else {
        if (comp.value === '(') {
            openBrackets[0] += 1;
            if (!comps[i + 1] || (!isParameter(comps[i + 1]) && comps[i + 1].value !== ')')) {
                return { 'error': "Error: Expect expression, string, number or variable after \"(\" \n" +
                        ("at: ... " + comps.slice(i).map(function (cp) { return cp.value; }).join(' ')) };
            }
        }
        else if (comp.value === '[') {
            openBrackets[1] += 1;
            if (!comps[i + 1] || (!isParameter(comps[i + 1]) && comps[i + 1].value !== ']')) {
                return { 'error': "Error: Expect expression, string, number or variable after \"[\" \n" +
                        ("at: ... " + comps.slice(i).map(function (cp) { return cp.value; }).join(' ')) };
            }
        }
        else if (comp.value === '{') {
            openBrackets[2] += 1;
            if (!comps[i + 1] || (!isParameter(comps[i + 1]) && comps[i + 1].value !== '}')) {
                return { 'error': "Error: Expect expression, string, number or variable after \"{\" \n" +
                        ("at: ... " + comps.slice(i).map(function (cp) { return cp.value; }).join(' ')) };
            }
        }
        else if (comp.value === ')') {
            openBrackets[0] -= 1;
        }
        else if (comp.value === ']') {
            openBrackets[1] -= 1;
        }
        else if (comp.value === '}') {
            openBrackets[2] -= 1;
        }
        else if (comp.value === '@') {
            if (comps[i + 1].type !== strType.OTHER) {
                i++;
            }
            else {
                return { 'error': 'Error: Expect attribute name after @ \n' +
                        ("at: ... " + comps.slice(i).map(function (cp) { return cp.value; }).join(' ')) };
            }
        }
        else if (postfixUnaryOperators.has(comp.value)) {
            if (!isParameter(comps[i - 1], true)) {
                return { 'error': "Error: Expect expression, string, number or variable before operator " + comp.value + " \n" +
                        ("at: ... " + comps.slice(i).map(function (cp) { return cp.value; }).join(' ')) };
            }
        }
        else if (prefixUnaryOperators.has(comp.value)) {
            if (i === comps.length - 1 || !isParameter(comps[i + 1])) {
                return { 'error': "Error: Expect expression, string, number or variable before operator " + comp.value + " \n" +
                        ("at: ... " + comps.slice(i).map(function (cp) { return cp.value; }).join(' ')) };
            }
        }
        else if (binaryOperators.has(comp.value)) {
            if (!isParameter(comps[i - 1], true)) {
                return { 'error': "Error: Expect expression, string, number or variable before operator " + comp.value + " \n" +
                        ("at: ... " + comps.slice(i).map(function (cp) { return cp.value; }).join(' ')) };
            }
            if (i === comps.length - 1 || !isParameter(comps[i + 1])) {
                return { 'error': "Error: Expect expression, string, number or variable before operator " + comp.value + " \n" +
                        ("at: ... " + comps.slice(i).map(function (cp) { return cp.value; }).join(' ')) };
            }
        }
        i++;
    }
    return { 'value': i };
}
function checkVariable(comps, i, openBrackets, vars) {
    var comp = comps[i];
    // if variable is the last component
    // add the variable to the var list
    if (i + 1 === comps.length) {
        addVars(vars, comp.value);
        i += 1;
        return { 'value': i };
    }
    // if variable is followed immediately by another var/num/str --> not allowed
    if (comps[i + 1].type !== strType.OTHER) {
        return { 'error': 'Error: Variable followed by another variable/number/string \n' +
                ("at: ... " + comps.slice(i).map(function (cp) { return cp.value; }).join(' ')) };
        // if variable is followed by "[" --> array/json
        // add the variable to var list and check for validity of the first component inside the bracket
    }
    else if (comps[i + 1].value === '[') {
        addVars(vars, comp.value);
        openBrackets[1] += 1;
        i += 2;
        if (!isParameter(comps[i])) {
            return { 'error': 'Error: Expect expression, string, number or variable after "[" \n' +
                    ("at: ... " + comps.slice(i - 2).map(function (cp) { return cp.value; }).join(' ')) };
        }
        // if variable is followed by "(" --> function
        // does not add to the var list since it's function name
    }
    else if (comps[i + 1].value === '(') {
        openBrackets[0] += 1;
        i += 2;
        if (comps[i].value === ')') {
            i++;
            openBrackets[0] -= 1;
        }
        else if (!isParameter(comps[i])) {
            return { 'error': 'Error: Expect expression, string, number, variable or ")" after "(" \n' +
                    ("at: ... " + comps.slice(i - 2).map(function (cp) { return cp.value; }).join(' ')) };
        }
        // if variable is followed by "{" --> not allowed
    }
    else if (comps[i + 1].value === '{') {
        return { 'error': 'Error: Variable followed by "{" \n' +
                ("at: ... " + comps.slice(i).map(function (cp) { return cp.value; }).join(' ')) };
        // all other cases
    }
    else {
        addVars(vars, comp.value);
        i += 1;
    }
    return { 'value': i };
}
function checkNumStr(comps, i, openBrackets) {
    var comp = comps[i];
    // if num/str is the last component --> return
    if (i + 1 === comps.length) {
        i += 1;
        return { 'value': i };
    }
    // if num/str is followed by another var/num/str --> not allowed
    if (comps[i + 1].type !== strType.OTHER) {
        return { 'error': 'Error: number/string followed by another variable/number/string \n' +
                ("at: ... " + comps.slice(i).map(function (cp) { return cp.value; }).join(' ')) };
        // if num/str is followed by "(" or "{" --> not allowed
    }
    else if (comps[i + 1].value === '(' || comps[i + 1].value === '{') {
        return { 'error': 'Error: number/string followed by bracket \n' +
                ("at: ... " + comps.slice(i).map(function (cp) { return cp.value; }).join(' ')) };
        // if num/str is followed by "[" --> only allowed for str
    }
    else if (comps[i + 1].value === '[') {
        if (comp.type === strType.NUM) {
            return { 'error': 'Error: number/string followed by bracket \n' +
                    ("at: ... " + comps.slice(i).map(function (cp) { return cp.value; }).join(' ')) };
        }
        openBrackets[1] += 1;
        i += 2;
        if (!isParameter(comps[i])) {
            return { 'error': 'Error: Expect expression, string, number or variable after [ \n' +
                    ("at: ... " + comps.slice(i - 2).map(function (cp) { return cp.value; }).join(' ')) };
        }
        // all other cases
    }
    else {
        i += 1;
    }
    return { 'value': i };
}
function isParameter(comp, prev) {
    if (prev === void 0) { prev = false; }
    if (prev) {
        return comp.type !== strType.OTHER || comp.value === ')' || comp.value === ']' || comp.value === '}';
    }
    return comp.type !== strType.OTHER || comp.value === '(' || comp.value === '[' || comp.value === '{' || comp.value === '-';
}
function addVars(varList, varName) {
    if (allConstants.indexOf(varName) !== -1) {
        return;
    }
    if (reservedWords.indexOf(varName) !== -1) {
        return;
    }
    if (varList.indexOf(varName) === -1) {
        varList.push(varName);
    }
}
function splitComponents(str) {
    var comps = [];
    var i = 0;
    while (i < str.length) {
        var code = str.charCodeAt(i);
        // numeric (0-9) ==> number
        if (code > 47 && code < 58) {
            var startI = i;
            while (code > 47 && code < 58) {
                i++;
                if (i === str.length) {
                    break;
                }
                code = str.charCodeAt(i);
            }
            comps.push({ 'type': strType.NUM, 'value': str.substring(startI, i) });
            // upper alpha (A-Z) & lower alpha (a-z) ==> variable
        }
        else if ((code > 64 && code < 91) || (code > 96 && code < 123)) {
            var startI = i;
            // upper alpha (A-Z), lower alpha (a-z), numeric (0-9) and "_" are allowed for subsequent characters.
            while ((code > 64 && code < 91) || (code > 96 && code < 123) || (code > 47 && code < 58) || code === 95) {
                i += 1;
                if (i === str.length) {
                    break;
                }
                code = str.charCodeAt(i);
            }
            comps.push({ 'type': strType.VAR, 'value': str.substring(startI, i) });
            // double-quotes (")
        }
        else if (code === 34) {
            var startI = i;
            i += 1;
            code = str.charCodeAt(i);
            while (code !== 34) { // string must end with double-quote as well
                i += 1;
                if (i === str.length) {
                    break;
                }
                code = str.charCodeAt(i);
            }
            if (code === 34) {
                i += 1;
            }
            var subStr = str.substring(startI, i);
            if (subStr.charCodeAt(subStr.length - 1) !== 34) {
                return 'Error: Missing ending double-quotes.';
            }
            comps.push({ 'type': strType.STR, 'value': str.substring(startI, i) });
            // single-quote (')
        }
        else if (code === 39) {
            var startI = i;
            i += 1;
            code = str.charCodeAt(i);
            while (code !== 39) { // string must end with single-quote as well
                i += 1;
                if (i === str.length) {
                    break;
                }
                code = str.charCodeAt(i);
            }
            if (code === 39) {
                i += 1;
            }
            var subStr = str.substring(startI, i);
            if (subStr.charCodeAt(subStr.length - 1) !== 39) {
                return 'Error: Missing ending single-quotes.';
            }
            comps.push({ 'type': strType.STR, 'value': str.substring(startI, i) });
            // + sign or - sign ==> + / ++ / += / - / -- / -=
        }
        else if (code === 43 || code === 45) {
            if (str.charCodeAt(i + 1) === code || str.charCodeAt(i + 1) === 61) {
                comps.push({ 'type': strType.OTHER, 'value': str.substring(i, i + 2) });
                i += 2;
            }
            else {
                comps.push({ 'type': strType.OTHER, 'value': str.charAt(i) });
                i++;
            }
            // comparison operator (!, <, =, >)
        }
        else if (code === 33 || (code > 59 && code < 63)) {
            var startI = i;
            i++;
            if (str.charCodeAt(i) === 61) { // !=, <=, >=, ==
                i++;
                if (str.charCodeAt(i) === 61) { // !==, ===
                    if (code === 60 || code === 62) { // mark invalid for <== and >==
                        return 'Error: <== and >== not acceptable.';
                    }
                    i++;
                }
            }
            comps.push({ 'type': strType.OTHER, 'value': str.substring(startI, i) });
            // or operator (||); check 1st |
        }
        else if (code === 124) {
            i++;
            if (str.charCodeAt(i) !== 124) { // check 2nd |
                return 'Error: || expected.';
            }
            comps.push({ 'type': strType.OTHER, 'value': '||' });
            i++;
        }
        else if (code === 38) { // and operator (&&); check 1st &
            i++;
            if (str.charCodeAt(i) !== 38) { // check 2nd &
                return 'Error: && expected.';
            }
            comps.push({ 'type': strType.OTHER, 'value': '&&' });
            i++;
            // others: numeric operator (*, /, %), brackets ((), [], {}), comma (,), space, ...
        }
        else {
            if (code !== 32) { // add to comp if it's not space
                comps.push({ 'type': strType.OTHER, 'value': str.charAt(i) });
            }
            i++;
        }
    }
    return comps;
}
function checkValidVar(vars, procedure, nodeProdList) {
    var current = procedure;
    var validVars = [];
    for (var _i = 0, globals_1 = globals; _i < globals_1.length; _i++) {
        var glb = globals_1[_i];
        var i = vars.indexOf(glb);
        if (i !== -1) {
            validVars.push(vars.splice(i, 1)[0]);
        }
    }
    while (current.parent) {
        var prods = current.parent.children;
        for (var _a = 0, prods_1 = prods; _a < prods_1.length; _a++) {
            var prod = prods_1[_a];
            if (prod.ID === current.ID) {
                if (current.type !== _models_procedure__WEBPACK_IMPORTED_MODULE_1__["ProcedureTypes"].Foreach) {
                    break;
                }
                else {
                    var i = vars.indexOf(prod.variable);
                    if (i !== -1) {
                        validVars.push(vars.splice(i, 1)[0]);
                    }
                    break;
                }
            }
            if (!prod.variable || prod.type === _models_procedure__WEBPACK_IMPORTED_MODULE_1__["ProcedureTypes"].Foreach) {
                continue;
            }
            var index = vars.indexOf(prod.variable);
            if (index !== -1) {
                validVars.push(vars.splice(index, 1)[0]);
            }
        }
        current = current.parent;
    }
    if (vars.length === 0) {
        return { 'vars': validVars };
    }
    for (var _b = 0, nodeProdList_1 = nodeProdList; _b < nodeProdList_1.length; _b++) {
        var prod = nodeProdList_1[_b];
        if (prod.ID === current.ID) {
            if (current.type !== _models_procedure__WEBPACK_IMPORTED_MODULE_1__["ProcedureTypes"].Foreach) {
                break;
            }
            else {
                var i = vars.indexOf(prod.variable);
                if (i !== -1) {
                    validVars.push(vars.splice(i, 1)[0]);
                }
                break;
            }
        }
        if (!prod.variable || prod.type === _models_procedure__WEBPACK_IMPORTED_MODULE_1__["ProcedureTypes"].Foreach) {
            continue;
        }
        var index = vars.indexOf(prod.variable);
        if (index !== -1) {
            validVars.push(vars.splice(index, 1)[0]);
        }
    }
    if (vars.length > 0) {
        return { 'error': "Error: Invalid vars: " + vars.join(', ') };
    }
    return { 'vars': validVars };
}
function checkNodeValidity(node) {
    if (node.type === 'start') {
        updateGlobals(node);
    }
    checkProdListValidity(node.procedure, node.procedure);
}
function checkProdListValidity(prodList, nodeProdList) {
    for (var _i = 0, prodList_1 = prodList; _i < prodList_1.length; _i++) {
        var prod = prodList_1[_i];
        switch (prod.type) {
            case _models_procedure__WEBPACK_IMPORTED_MODULE_1__["ProcedureTypes"].Variable:
            case _models_procedure__WEBPACK_IMPORTED_MODULE_1__["ProcedureTypes"].Foreach:
                modifyVar(prod, nodeProdList);
                modifyArgument(prod, 1, nodeProdList);
                break;
            case _models_procedure__WEBPACK_IMPORTED_MODULE_1__["ProcedureTypes"].Function:
            case _models_procedure__WEBPACK_IMPORTED_MODULE_1__["ProcedureTypes"].Imported:
                if (prod.args[0].name !== '__none__') {
                    modifyVar(prod, nodeProdList);
                }
                for (var i = 1; i < prod.argCount; i++) {
                    if (prod.args[i].name[0] === '_') {
                        continue;
                    }
                    modifyArgument(prod, i, nodeProdList);
                }
                break;
            case _models_procedure__WEBPACK_IMPORTED_MODULE_1__["ProcedureTypes"].If:
            case _models_procedure__WEBPACK_IMPORTED_MODULE_1__["ProcedureTypes"].Elseif:
            case _models_procedure__WEBPACK_IMPORTED_MODULE_1__["ProcedureTypes"].While:
                modifyArgument(prod, 0, nodeProdList);
                break;
        }
        for (var _a = 0, _b = prod.args; _a < _b.length; _a++) {
            var arg = _b[_a];
            arg.linked = false;
        }
        if (prod.children) {
            checkProdListValidity(prod.children, nodeProdList);
        }
    }
}
function updateInputValidity(type, procedure, nodeProdList) {
    var current = procedure;
    while (current.parent) {
        var prods = current.parent.children;
        for (var _i = 0, prods_2 = prods; _i < prods_2.length; _i++) {
            var prod = prods_2[_i];
            if (prod.ID === current.ID) {
                if (current.type !== _models_procedure__WEBPACK_IMPORTED_MODULE_1__["ProcedureTypes"].Foreach) {
                    break;
                }
                else {
                    if (prod.variable !== procedure.variable) {
                        break;
                    }
                    return;
                }
            }
            if (!prod.variable || prod.type === _models_procedure__WEBPACK_IMPORTED_MODULE_1__["ProcedureTypes"].Foreach || prod.variable !== procedure.variable) {
                continue;
            }
            return;
        }
        current = current.parent;
    }
    for (var _a = 0, nodeProdList_2 = nodeProdList; _a < nodeProdList_2.length; _a++) {
        var prod = nodeProdList_2[_a];
        if (prod.ID === current.ID) {
            if (current.type !== _models_procedure__WEBPACK_IMPORTED_MODULE_1__["ProcedureTypes"].Foreach) {
                break;
            }
            else {
                if (prod.variable !== procedure.variable) {
                    break;
                }
                return;
            }
        }
        if (!prod.variable || prod.type === _models_procedure__WEBPACK_IMPORTED_MODULE_1__["ProcedureTypes"].Foreach || prod.variable !== procedure.variable) {
            continue;
        }
        return;
    }
    if (type === 'add') {
        if (procedure.parent) {
            updateAdd(procedure.parent.children, procedure.variable, procedure);
        }
        else {
            updateAdd(nodeProdList, procedure.variable, procedure);
        }
    }
    else {
        if (procedure.parent) {
            updateRemove(procedure.parent.children, procedure.variable, procedure);
        }
        else {
            updateRemove(nodeProdList, procedure.variable, procedure);
        }
    }
}
function updateAdd(prodList, varName, procedure) {
    for (var i = prodList.length - 1; i > 0; i--) {
        if (procedure && procedure.ID === prodList[i].ID) {
            break;
        }
        if (prodList[i].children) {
            updateAdd(prodList[i].children, varName);
        }
        for (var _i = 0, _a = prodList[i].args; _i < _a.length; _i++) {
            var arg = _a[_i];
            if (!arg.invalidVar) {
                continue;
            }
            if (arg.invalidVar === "Error: Invalid vars: " + varName) {
                arg.invalidVar = false;
            }
            else if (typeof arg.invalidVar === 'string' && arg.invalidVar.indexOf('Invalid vars') !== -1) {
                arg.invalidVar.replace(varName + "s,", '');
                arg.invalidVar.replace(", " + varName, '');
            }
        }
    }
}
function updateRemove(prodList, varName, procedure) {
    for (var i = prodList.length - 1; i > 0; i--) {
        if (procedure && procedure.ID === prodList[i].ID) {
            break;
        }
        if (prodList[i].children) {
            updateRemove(prodList[i].children, varName);
        }
        for (var _i = 0, _a = prodList[i].args; _i < _a.length; _i++) {
            var arg = _a[_i];
            if (arg.usedVars.indexOf(varName) === -1) {
                continue;
            }
            if (!arg.invalidVar) {
                arg.invalidVar = "Error: Invalid vars: " + varName;
            }
            else if (typeof arg.invalidVar === 'string' && arg.invalidVar.indexOf('Invalid vars') !== -1) {
                arg.invalidVar = arg.invalidVar.concat(", " + varName);
            }
        }
    }
}


/***/ }),

/***/ "./src/app/shared/services/data.service.ts":
/*!*************************************************!*\
  !*** ./src/app/shared/services/data.service.ts ***!
  \*************************************************/
/*! exports provided: DataService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DataService", function() { return DataService; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _models_flowchart__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @models/flowchart */ "./src/app/shared/models/flowchart/index.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};


var DataService = /** @class */ (function () {
    function DataService() {
        this._prevFlwActions = [];
        this._nextFlwActions = [];
        this._prevEdtActions = [];
        this._nextEdtActions = [];
    }
    DataService_1 = DataService;
    DataService.prototype.getLog = function () {
        return DataService_1._consoleLog;
    };
    DataService.prototype.log = function (str) {
        DataService_1._consoleLog.push(str);
    };
    DataService.prototype.clearLog = function () {
        DataService_1._consoleLog = [];
    };
    DataService.prototype.spliceLog = function (remainingLogs) {
        DataService_1._consoleLog.splice(0, DataService_1._consoleLog.length - remainingLogs);
    };
    Object.defineProperty(DataService.prototype, "file", {
        get: function () { return DataService_1._data; },
        set: function (data) {
            DataService_1._data = {
                name: data.name,
                author: data.author,
                flowchart: data.flowchart,
                last_updated: data.last_updated,
                version: data.version,
                settings: data.settings || {}
            };
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataService.prototype, "settings", {
        get: function () { return DataService_1._data.settings; },
        set: function (settings) { DataService_1._data.settings = settings; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataService.prototype, "flowchartPos", {
        get: function () { return DataService_1._flowchartPosition; },
        set: function (transf) { DataService_1._flowchartPosition = transf; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataService.prototype, "newFlowchart", {
        get: function () { return DataService_1._newFlowchart; },
        set: function (check) { DataService_1._newFlowchart = check; },
        enumerable: true,
        configurable: true
    });
    DataService.prototype.getModelOutputView = function (nodeID) {
        if (DataService_1._modelOutputView.hasOwnProperty(nodeID)) {
            return DataService_1._modelOutputView[nodeID];
        }
        return true;
    };
    DataService.prototype.setModelOutputView = function (nodeID, check) { DataService_1._modelOutputView[nodeID] = check; };
    Object.defineProperty(DataService.prototype, "testModel", {
        get: function () { return DataService_1._testModel; },
        set: function (check) { DataService_1._testModel = check; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataService.prototype, "activeView", {
        get: function () { return DataService_1._activeModelView; },
        set: function (view) { DataService_1._activeModelView = view; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataService.prototype, "activeGallery", {
        get: function () { return DataService_1._activeGallery; },
        set: function (gallery) { DataService_1._activeGallery = gallery; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataService.prototype, "helpView", {
        get: function () { return DataService_1._helpView; },
        set: function (view) { DataService_1._helpView[2] = view; },
        enumerable: true,
        configurable: true
    });
    DataService.prototype.toggleHelp = function (state) { DataService_1._helpView[0] = state; DataService_1._helpView[1] = state; };
    DataService.prototype.toggleViewHelp = function (state) { DataService_1._helpView[0] = state; };
    DataService.prototype.togglePageHelp = function (state) { DataService_1._helpView[1] = state; };
    Object.defineProperty(DataService.prototype, "helpViewData", {
        get: function () { return DataService_1._helpViewData; },
        set: function (view) { DataService_1._helpViewData = view; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataService.prototype, "focusedInput", {
        get: function () { return DataService_1._focusedInput; },
        set: function (input) { DataService_1._focusedInput = input; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataService.prototype, "copiedProd", {
        get: function () { return DataService_1._copiedProd; },
        set: function (prods) { DataService_1._copiedProd = prods; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataService.prototype, "copiedType", {
        get: function () { return DataService_1._copiedType; },
        set: function (Ptype) { DataService_1._copiedType = Ptype; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataService.prototype, "splitVal", {
        get: function () { return DataService_1._splitVal; },
        set: function (num) { DataService_1._splitVal = num; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataService.prototype, "splitUpdate", {
        get: function () { return DataService_1._flowchartSplitUpdate; },
        set: function (check) { DataService_1._flowchartSplitUpdate = check; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataService.prototype, "consoleScroll", {
        get: function () { return DataService_1._consoleScroll; },
        set: function (num) { DataService_1._consoleScroll = num; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataService.prototype, "flowchart", {
        get: function () { return DataService_1._data.flowchart; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataService.prototype, "node", {
        get: function () { return DataService_1._data.flowchart.nodes[DataService_1._data.flowchart.meta.selected_nodes[0]]; },
        enumerable: true,
        configurable: true
    });
    DataService.prototype.registerFlwAction = function (action) {
        this._prevFlwActions.push(action);
        this._nextFlwActions = [];
        if (this._prevFlwActions.length > 10) {
            this._prevFlwActions.splice(0, 1);
        }
    };
    DataService.prototype.undoFlw = function () {
        if (this._prevFlwActions.length === 0) {
            return undefined;
        }
        var action = this._prevFlwActions.pop();
        this._nextFlwActions.push(action);
        return action;
    };
    DataService.prototype.redoFlw = function () {
        if (this._nextFlwActions.length === 0) {
            return undefined;
        }
        var action = this._nextFlwActions.pop();
        this._prevFlwActions.push(action);
        return action;
    };
    DataService.prototype.registerEdtAction = function (actions) {
        this._prevEdtActions.push(actions);
        this._nextEdtActions = [];
        if (this._prevEdtActions.length > 10) {
            this._prevEdtActions.splice(0, 1);
        }
    };
    DataService.prototype.undoEdt = function () {
        if (this._prevEdtActions.length === 0) {
            return undefined;
        }
        var actions = this._prevEdtActions.pop();
        this._nextEdtActions.push(actions);
        return actions;
    };
    DataService.prototype.redoEdt = function () {
        if (this._nextEdtActions.length === 0) {
            return undefined;
        }
        var actions = this._nextEdtActions.pop();
        this._prevEdtActions.push(actions);
        return actions;
    };
    var DataService_1;
    DataService._data = {
        name: 'Untitled',
        author: 'new_user',
        last_updated: new Date(),
        version: 1,
        flowchart: _models_flowchart__WEBPACK_IMPORTED_MODULE_1__["FlowchartUtils"].newflowchart(),
        settings: {}
    };
    DataService._consoleLog = [];
    DataService._flowchartPosition = undefined;
    DataService._newFlowchart = true;
    DataService._modelOutputView = {};
    DataService._testModel = false;
    DataService._helpView = [false, false, undefined];
    DataService._helpViewData = [undefined, ''];
    DataService._activeModelView = undefined;
    DataService._activeGallery = undefined;
    DataService._splitVal = 60;
    DataService._flowchartSplitUpdate = false;
    DataService = DataService_1 = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Injectable"])()
    ], DataService);
    return DataService;
}());



/***/ }),

/***/ "./src/app/shared/services/google.analytics.ts":
/*!*****************************************************!*\
  !*** ./src/app/shared/services/google.analytics.ts ***!
  \*****************************************************/
/*! exports provided: GoogleAnalyticsService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GoogleAnalyticsService", function() { return GoogleAnalyticsService; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};


// notes you may need to do this as well: npm install --save-dev @types/google.analytics
var GoogleAnalyticsService = /** @class */ (function () {
    function GoogleAnalyticsService(router) {
        this.router = router;
    }
    GoogleAnalyticsService.prototype.subscribe = function () {
        if (!this.subscription) {
            // subscribe to any router navigation and once it ends, write out the google script notices
            this.subscription = this.router.events.subscribe(function (e) {
                if (e instanceof _angular_router__WEBPACK_IMPORTED_MODULE_1__["NavigationEnd"]) {
                    // this will find & use the ga function pulled via the google scripts
                    try {
                        ga('set', 'page', e.urlAfterRedirects);
                        ga('send', 'pageview');
                    }
                    catch (_a) {
                        console.log('tracking not found - make sure you installed the scripts');
                    }
                }
            });
        }
    };
    GoogleAnalyticsService.prototype.unsubscribe = function () {
        if (this.subscription) {
            // --- clear our observable subscription
            this.subscription.unsubscribe();
        }
    };
    GoogleAnalyticsService.prototype.trackEvent = function (category, label, action, value) {
        if (action === void 0) { action = 'click'; }
        if (value === void 0) { value = null; }
        try {
            ga('send', 'event', { eventCategory: category, eventLabel: label,
                eventAction: action, eventValue: value
            });
        }
        catch (error) {
            console.log("error: " + error);
        }
    };
    GoogleAnalyticsService = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Injectable"])(),
        __metadata("design:paramtypes", [_angular_router__WEBPACK_IMPORTED_MODULE_1__["Router"]])
    ], GoogleAnalyticsService);
    return GoogleAnalyticsService;
}());



/***/ }),

/***/ "./src/app/shared/services/index.ts":
/*!******************************************!*\
  !*** ./src/app/shared/services/index.ts ***!
  \******************************************/
/*! exports provided: DataService, ViewerService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _data_service__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./data.service */ "./src/app/shared/services/data.service.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DataService", function() { return _data_service__WEBPACK_IMPORTED_MODULE_0__["DataService"]; });

/* harmony import */ var _viewer_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./viewer.service */ "./src/app/shared/services/viewer.service.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ViewerService", function() { return _viewer_service__WEBPACK_IMPORTED_MODULE_1__["ViewerService"]; });





/***/ }),

/***/ "./src/app/shared/services/viewer.service.ts":
/*!***************************************************!*\
  !*** ./src/app/shared/services/viewer.service.ts ***!
  \***************************************************/
/*! exports provided: ViewerService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ViewerService", function() { return ViewerService; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm5/index.js");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};


var ViewerService = /** @class */ (function () {
    function ViewerService() {
        this.contextReceivedSource = new rxjs__WEBPACK_IMPORTED_MODULE_1__["Subject"]();
        this.contextReceived$ = this.contextReceivedSource.asObservable();
    }
    ViewerService.prototype.receiveContext = function (componentFactoryResolver, injector) {
        this.contextReceivedSource.next({ resolver: componentFactoryResolver, injector: injector });
    };
    ViewerService = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Injectable"])()
    ], ViewerService);
    return ViewerService;
}());



/***/ }),

/***/ "./src/app/shared/shared.module.ts":
/*!*****************************************!*\
  !*** ./src/app/shared/shared.module.ts ***!
  \*****************************************/
/*! exports provided: SharedModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SharedModule", function() { return SharedModule; });
/* harmony import */ var angular_split__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! angular-split */ "./node_modules/angular-split/fesm5/angular-split.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/fesm5/common.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm5/forms.js");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/material */ "./node_modules/@angular/material/esm5/material.es5.js");
/* harmony import */ var _directives_filesys__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./directives/filesys */ "./src/app/shared/directives/filesys/index.ts");
/* harmony import */ var _components_execute_execute_component__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./components/execute/execute.component */ "./src/app/shared/components/execute/execute.component.ts");
/* harmony import */ var _components_not_found_not_found_component__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./components/not-found/not-found.component */ "./src/app/shared/components/not-found/not-found.component.ts");
/* harmony import */ var _components_navigation_navigation_component__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./components/navigation/navigation.component */ "./src/app/shared/components/navigation/navigation.component.ts");
/* harmony import */ var _components_header_panel_header_component__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./components/header/panel-header.component */ "./src/app/shared/components/header/panel-header.component.ts");
/* harmony import */ var _components_header_publish_header_component__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./components/header/publish-header.component */ "./src/app/shared/components/header/publish-header.component.ts");
/* harmony import */ var _components_add_components_add_output_component__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./components/add-components/add_output.component */ "./src/app/shared/components/add-components/add_output.component.ts");
/* harmony import */ var _components_add_components_add_node_component__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./components/add-components/add_node.component */ "./src/app/shared/components/add-components/add_node.component.ts");
/* harmony import */ var _components_add_components_add_input_component__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./components/add-components/add_input.component */ "./src/app/shared/components/add-components/add_input.component.ts");
/* harmony import */ var _components_file__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./components/file */ "./src/app/shared/components/file/index.ts");
/* harmony import */ var _components_notification_notification_component__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./components/notification/notification.component */ "./src/app/shared/components/notification/notification.component.ts");
/* harmony import */ var _model_viewers_model_viewers_container_module__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../model-viewers/model-viewers-container.module */ "./src/app/model-viewers/model-viewers-container.module.ts");
/* harmony import */ var _components_file_loadurl_component__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./components/file/loadurl.component */ "./src/app/shared/components/file/loadurl.component.ts");
/* harmony import */ var _components_spinner_spinner_component__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./components/spinner/spinner.component */ "./src/app/shared/components/spinner/spinner.component.ts");
/* harmony import */ var _components_chrome_chrome_component__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./components/chrome/chrome.component */ "./src/app/shared/components/chrome/chrome.component.ts");
/* harmony import */ var _directives_textarea__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./directives/textarea */ "./src/app/shared/directives/textarea/index.ts");
/* harmony import */ var _components_parameter_viewer_procedure_input_viewer_procedure_input_viewer_component__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./components/parameter-viewer/procedure-input-viewer/procedure-input-viewer.component */ "./src/app/shared/components/parameter-viewer/procedure-input-viewer/procedure-input-viewer.component.ts");
/* harmony import */ var _components_parameter_viewer_parameter_viewer_component__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./components/parameter-viewer/parameter-viewer.component */ "./src/app/shared/components/parameter-viewer/parameter-viewer.component.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (undefined && undefined.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
/*
 *  This module is to be imported ONLY by the AppModule
 *  Contains all global services
 *
 */

// @angular stuff





// app directives

// app components








// import { ParameterViewerComponent } from './components/parameter-viewer/parameter-viewer.component';
// import { InputPortViewerComponent } from './components/parameter-viewer/input-port-viewer/input-port-viewer.component';
// import { ProcedureInputViewerComponent } from './components/parameter-viewer/procedure-input-viewer/procedure-input-viewer.component';


// app model viewers







var SharedModule = /** @class */ (function () {
    function SharedModule(shared) {
        /*
        /// Prevents any module apart from AppModule from re-importing
        if(shared){
            throw new Error("Core Module has already been imported");
        }
        */
    }
    SharedModule = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["NgModule"])({
            providers: [],
            declarations: [
                _directives_filesys__WEBPACK_IMPORTED_MODULE_6__["MbFileReaderDirective"],
                _directives_textarea__WEBPACK_IMPORTED_MODULE_21__["AutogrowDirective"],
                _components_execute_execute_component__WEBPACK_IMPORTED_MODULE_7__["ExecuteComponent"],
                _components_not_found_not_found_component__WEBPACK_IMPORTED_MODULE_8__["PageNotFoundComponent"],
                _components_navigation_navigation_component__WEBPACK_IMPORTED_MODULE_9__["NavigationComponent"],
                _components_header_panel_header_component__WEBPACK_IMPORTED_MODULE_10__["PanelHeaderComponent"],
                _components_header_publish_header_component__WEBPACK_IMPORTED_MODULE_11__["PublishHeaderComponent"],
                _components_notification_notification_component__WEBPACK_IMPORTED_MODULE_16__["NotificationComponent"],
                _components_parameter_viewer_procedure_input_viewer_procedure_input_viewer_component__WEBPACK_IMPORTED_MODULE_22__["ProcedureInputViewerComponent"],
                _components_parameter_viewer_parameter_viewer_component__WEBPACK_IMPORTED_MODULE_23__["ParameterViewerComponent"],
                _components_add_components_add_node_component__WEBPACK_IMPORTED_MODULE_13__["AddNodeComponent"], _components_add_components_add_input_component__WEBPACK_IMPORTED_MODULE_14__["AddInputComponent"], _components_add_components_add_output_component__WEBPACK_IMPORTED_MODULE_12__["AddOutputComponent"],
                // ParameterViewerComponent,  InputPortViewerComponent, ProcedureInputViewerComponent,
                _components_file__WEBPACK_IMPORTED_MODULE_15__["NewFileComponent"], _components_file__WEBPACK_IMPORTED_MODULE_15__["SaveFileComponent"], _components_file__WEBPACK_IMPORTED_MODULE_15__["LoadFileComponent"], _components_file_loadurl_component__WEBPACK_IMPORTED_MODULE_18__["LoadUrlComponent"],
                _components_spinner_spinner_component__WEBPACK_IMPORTED_MODULE_19__["SpinnerComponent"],
                _components_chrome_chrome_component__WEBPACK_IMPORTED_MODULE_20__["ChromeComponent"]
            ],
            imports: [
                _angular_common__WEBPACK_IMPORTED_MODULE_2__["CommonModule"],
                _angular_router__WEBPACK_IMPORTED_MODULE_3__["RouterModule"],
                _angular_material__WEBPACK_IMPORTED_MODULE_5__["MatSliderModule"], _angular_material__WEBPACK_IMPORTED_MODULE_5__["MatCheckboxModule"],
                _model_viewers_model_viewers_container_module__WEBPACK_IMPORTED_MODULE_17__["DataViewersContainer"],
                angular_split__WEBPACK_IMPORTED_MODULE_0__["AngularSplitModule"],
                _angular_forms__WEBPACK_IMPORTED_MODULE_4__["FormsModule"],
                _angular_material__WEBPACK_IMPORTED_MODULE_5__["MatIconModule"],
            ],
            entryComponents: [],
            exports: [
                _angular_forms__WEBPACK_IMPORTED_MODULE_4__["FormsModule"],
                _angular_material__WEBPACK_IMPORTED_MODULE_5__["MatIconModule"],
                _angular_material__WEBPACK_IMPORTED_MODULE_5__["MatSliderModule"],
                /*
                MatMenuModule,
                MatButtonModule,
                MatExpansionModule,
                MatSelectModule,
                MatFormFieldModule,
                */
                _model_viewers_model_viewers_container_module__WEBPACK_IMPORTED_MODULE_17__["DataViewersContainer"],
                angular_split__WEBPACK_IMPORTED_MODULE_0__["AngularSplitModule"],
                _directives_filesys__WEBPACK_IMPORTED_MODULE_6__["MbFileReaderDirective"],
                _directives_textarea__WEBPACK_IMPORTED_MODULE_21__["AutogrowDirective"],
                _components_execute_execute_component__WEBPACK_IMPORTED_MODULE_7__["ExecuteComponent"],
                _components_not_found_not_found_component__WEBPACK_IMPORTED_MODULE_8__["PageNotFoundComponent"],
                _components_navigation_navigation_component__WEBPACK_IMPORTED_MODULE_9__["NavigationComponent"],
                _components_header_panel_header_component__WEBPACK_IMPORTED_MODULE_10__["PanelHeaderComponent"],
                _components_header_publish_header_component__WEBPACK_IMPORTED_MODULE_11__["PublishHeaderComponent"],
                _components_add_components_add_node_component__WEBPACK_IMPORTED_MODULE_13__["AddNodeComponent"],
                _components_add_components_add_input_component__WEBPACK_IMPORTED_MODULE_14__["AddInputComponent"],
                _components_add_components_add_output_component__WEBPACK_IMPORTED_MODULE_12__["AddOutputComponent"],
                _components_spinner_spinner_component__WEBPACK_IMPORTED_MODULE_19__["SpinnerComponent"],
                _components_chrome_chrome_component__WEBPACK_IMPORTED_MODULE_20__["ChromeComponent"],
                // ParameterViewerComponent,
                _components_notification_notification_component__WEBPACK_IMPORTED_MODULE_16__["NotificationComponent"],
                _components_file__WEBPACK_IMPORTED_MODULE_15__["NewFileComponent"], _components_file__WEBPACK_IMPORTED_MODULE_15__["SaveFileComponent"], _components_file__WEBPACK_IMPORTED_MODULE_15__["LoadFileComponent"], _components_file_loadurl_component__WEBPACK_IMPORTED_MODULE_18__["LoadUrlComponent"],
                _components_parameter_viewer_parameter_viewer_component__WEBPACK_IMPORTED_MODULE_23__["ParameterViewerComponent"]
            ]
        }),
        __param(0, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Optional"])()), __param(0, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["SkipSelf"])()),
        __metadata("design:paramtypes", [SharedModule])
    ], SharedModule);
    return SharedModule;
}());



/***/ }),

/***/ "./src/app/shared/utils/GUID.ts":
/*!**************************************!*\
  !*** ./src/app/shared/utils/GUID.ts ***!
  \**************************************/
/*! exports provided: IdGenerator */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "IdGenerator", function() { return IdGenerator; });
var IdGenerator = /** @class */ (function () {
    function IdGenerator() {
    }
    IdGenerator.s4 = function () {
        return Math.floor((1 + Math.random()) * 0x10000)
            .toString(16)
            .substring(1);
    };
    IdGenerator.getId = function () {
        return this.s4() + this.s4() + '-' + this.s4() + '-' + this.s4() + '-' +
            this.s4() + '-' + this.s4() + this.s4() + this.s4();
    };
    IdGenerator.getNodeID = function () {
        return 'node_' + Math.random().toString(36).substr(2, 16);
    };
    IdGenerator.getProdID = function () {
        return 'prod-' + Math.random().toString(36).substr(2, 16);
    };
    return IdGenerator;
}());



/***/ }),

/***/ "./src/app/shared/utils/index.ts":
/*!***************************************!*\
  !*** ./src/app/shared/utils/index.ts ***!
  \***************************************/
/*! exports provided: IdGenerator */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _GUID__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./GUID */ "./src/app/shared/utils/GUID.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "IdGenerator", function() { return _GUID__WEBPACK_IMPORTED_MODULE_0__["IdGenerator"]; });




/***/ }),

/***/ "./src/app/views/index.ts":
/*!********************************!*\
  !*** ./src/app/views/index.ts ***!
  \********************************/
/*! exports provided: ViewAboutComponent, ViewAboutModule, ViewEditorComponent, ViewEditorModule, ViewFlowchartComponent, ViewFlowchartModule, ViewGalleryComponent, ViewGalleryModule, ViewDashboardComponent, ViewDashboardModule, ViewPublishComponent, ViewPublishModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _view_about_view_about_component__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./view-about/view-about.component */ "./src/app/views/view-about/view-about.component.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ViewAboutComponent", function() { return _view_about_view_about_component__WEBPACK_IMPORTED_MODULE_0__["ViewAboutComponent"]; });

/* harmony import */ var _view_about_view_about_module__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./view-about/view-about.module */ "./src/app/views/view-about/view-about.module.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ViewAboutModule", function() { return _view_about_view_about_module__WEBPACK_IMPORTED_MODULE_1__["ViewAboutModule"]; });

/* harmony import */ var _view_editor_view_editor_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./view-editor/view-editor.component */ "./src/app/views/view-editor/view-editor.component.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ViewEditorComponent", function() { return _view_editor_view_editor_component__WEBPACK_IMPORTED_MODULE_2__["ViewEditorComponent"]; });

/* harmony import */ var _view_editor_view_editor_module__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./view-editor/view-editor.module */ "./src/app/views/view-editor/view-editor.module.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ViewEditorModule", function() { return _view_editor_view_editor_module__WEBPACK_IMPORTED_MODULE_3__["ViewEditorModule"]; });

/* harmony import */ var _view_flowchart_view_flowchart_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./view-flowchart/view-flowchart.component */ "./src/app/views/view-flowchart/view-flowchart.component.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ViewFlowchartComponent", function() { return _view_flowchart_view_flowchart_component__WEBPACK_IMPORTED_MODULE_4__["ViewFlowchartComponent"]; });

/* harmony import */ var _view_flowchart_view_flowchart_module__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./view-flowchart/view-flowchart.module */ "./src/app/views/view-flowchart/view-flowchart.module.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ViewFlowchartModule", function() { return _view_flowchart_view_flowchart_module__WEBPACK_IMPORTED_MODULE_5__["ViewFlowchartModule"]; });

/* harmony import */ var _view_gallery_view_gallery_component__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./view-gallery/view-gallery.component */ "./src/app/views/view-gallery/view-gallery.component.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ViewGalleryComponent", function() { return _view_gallery_view_gallery_component__WEBPACK_IMPORTED_MODULE_6__["ViewGalleryComponent"]; });

/* harmony import */ var _view_gallery_view_gallery_module__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./view-gallery/view-gallery.module */ "./src/app/views/view-gallery/view-gallery.module.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ViewGalleryModule", function() { return _view_gallery_view_gallery_module__WEBPACK_IMPORTED_MODULE_7__["ViewGalleryModule"]; });

/* harmony import */ var _view_dashboard_view_dashboard_component__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./view-dashboard/view-dashboard.component */ "./src/app/views/view-dashboard/view-dashboard.component.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ViewDashboardComponent", function() { return _view_dashboard_view_dashboard_component__WEBPACK_IMPORTED_MODULE_8__["ViewDashboardComponent"]; });

/* harmony import */ var _view_dashboard_view_dashboard_module__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./view-dashboard/view-dashboard.module */ "./src/app/views/view-dashboard/view-dashboard.module.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ViewDashboardModule", function() { return _view_dashboard_view_dashboard_module__WEBPACK_IMPORTED_MODULE_9__["ViewDashboardModule"]; });

/* harmony import */ var _view_publish_view_publish_component__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./view-publish/view-publish.component */ "./src/app/views/view-publish/view-publish.component.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ViewPublishComponent", function() { return _view_publish_view_publish_component__WEBPACK_IMPORTED_MODULE_10__["ViewPublishComponent"]; });

/* harmony import */ var _view_publish_view_publish_module__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./view-publish/view-publish.module */ "./src/app/views/view-publish/view-publish.module.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ViewPublishModule", function() { return _view_publish_view_publish_module__WEBPACK_IMPORTED_MODULE_11__["ViewPublishModule"]; });















/***/ }),

/***/ "./src/app/views/view-about/view-about-routing.module.ts":
/*!***************************************************************!*\
  !*** ./src/app/views/view-about/view-about-routing.module.ts ***!
  \***************************************************************/
/*! exports provided: ViewAboutRoutingModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ViewAboutRoutingModule", function() { return ViewAboutRoutingModule; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var _view_about_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./view-about.component */ "./src/app/views/view-about/view-about.component.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};



var routes = [
    {
        path: '',
        component: _view_about_component__WEBPACK_IMPORTED_MODULE_2__["ViewAboutComponent"],
        children: []
    }
];
var ViewAboutRoutingModule = /** @class */ (function () {
    function ViewAboutRoutingModule() {
    }
    ViewAboutRoutingModule = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["NgModule"])({
            imports: [_angular_router__WEBPACK_IMPORTED_MODULE_1__["RouterModule"].forChild(routes)],
            exports: [_angular_router__WEBPACK_IMPORTED_MODULE_1__["RouterModule"]]
        })
    ], ViewAboutRoutingModule);
    return ViewAboutRoutingModule;
}());



/***/ }),

/***/ "./src/app/views/view-about/view-about.component.html":
/*!************************************************************!*\
  !*** ./src/app/views/view-about/view-about.component.html ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class='container'>\r\n    <panel-header [flowchart]='getFlowchart()'></panel-header>\r\n    <!-- viewchild content -->\r\n    <div class='content__panel'>\r\n        <div class='logo'>\r\n            <p><img  src=\"assets/logo/logo-120high.png\" alt=\"Möbius  Modeller\"></p>\r\n            <p><img  src=\"assets/logo/logo-120high.png\" alt=\"Möbius  Modeller\"></p>\r\n            <p><img  src=\"assets/logo/logo-120high.png\" alt=\"Möbius  Modeller\"></p>\r\n            <p>Version: {{version.version}}</p>\r\n            <p>\r\n                <a class='link-share' href=\"http://expando.github.io/add/?u=https%3A%2F%2Fmobius.design-automation.net%2F&t=Möbius%20Modeller\">\r\n                    Share this Site</a>\r\n            </p>\r\n            <p>The latest version has made some changes to the modelling functions. </p>\r\n            <p>The previous versions, \r\n                <a href='https://design-automation.github.io/mobius-parametric-modeller-0-4-18' target='_blank'>Version 0.4.18</a>\r\n                and \r\n                <a href='https://design-automation.github.io/mobius-parametric-modeller-0-4-11' target='_blank'>Version 0.4.11</a> \r\n                have therefore been archived.</p>\r\n\r\n        </div>\r\n        <div class='text'>\r\n            <h3>What is Möbius  Modeller?</h3>\r\n            <p>Möbius Modeller is an open-source web application for 3D parametric modelling. \r\n                The app allows users to create modelling procedures using the Öbi visual programming language.\r\n                In the Öbi language, your write computer programs by drawing flowcharts and by defining procedures\r\n                using 'click and fill-in-the-blanks' coding. </p>\r\n            <p>Since Möbius Modeller is a web app, you can just go ahead an use it.</p>\r\n            <ul>\r\n                <li>The software is free, so there is need to pay!</li>\r\n                <li>The software is online, so there is need to install anything on your computer.</li>\r\n                <li>The software does not require authentication, so there is no need to create an account or to log in.</li>\r\n                <li>Code is executed in your browser, so there is no need to worry about network speed.</li>\r\n                <li>Your data never leaves your browser, so there is no need to worry about data privacy and security.</li>\r\n            </ul>\r\n            <p>The Möbius models that you create can be \r\n                published as interactive web pages, allowing visitors on the web to explore the models.</p>\r\n    \r\n    \r\n            <h3>Getting Started</h3>\r\n            <p>The best way to start using Möbius Modeller is to explore some of the models in the gallery.\r\n                After that you can dive in and start creating your own flowcharts and procedures. </p>\r\n            <p>The icons at the top of the page allow you to navigate into your model, from the top level \r\n                dashboard down the procedures at the bottom level.</p>\r\n\r\n            <table class='key'>\r\n\r\n                <tr>\r\n                    <td><b>Gallery</b></td> \r\n                    <td>The gallery contains a selection of example models for you to explore. \r\n                    To access the gallery, click</td>\r\n                    <td><mat-icon (click)='routeTo(\"/gallery\")'>view_comfy</mat-icon></td> \r\n                </tr>\r\n\r\n                <tr>\r\n                    <td><b>Dashboard</b></td> \r\n                    <td>Each model has its own dashboard that exposes a set of parameters, that can be set using sliders and UI components.\r\n                    To access the dashboard, click</td>\r\n                    <td><mat-icon svgIcon=\"cDashboard\" (click)='routeTo(\"/dashboard\")'></mat-icon></td> \r\n                </tr>\r\n\r\n                <tr>\r\n                    <td><b>Flowchart</b></td> \r\n                    <td>Each model is has an Öbi flowchart that defines a set of nodes connected with edges. \r\n                        To access the flowchart, click</td>\r\n                    <td><mat-icon svgIcon=\"cFlowchart\" (click)='routeTo(\"/flowchart\")'></mat-icon></td> \r\n                </tr>\r\n\r\n                <tr>\r\n                    <td><b>Procedure</b></td> \r\n                    <td>Each node in the model has its own procedure, defined using the Öbi language.\r\n                        To access the procedure, click</td>\r\n                    <td><mat-icon svgIcon=\"cEditor\" (click)='routeTo(\"/editor\")'></mat-icon></td> \r\n                </tr>\r\n\r\n                <tr>\r\n                    <td><b>Execute</b></td> \r\n                    <td>To execute the Öbi flowchart, click the execute button. This will transpile your Öbi code \r\n                        into Javascript an execute it in your browser. </td>\r\n                    <td><mat-icon>play_circle_outline</mat-icon></td> \r\n                </tr>\r\n\r\n                <tr>\r\n                    <td><b>View</b></td> \r\n                    <td>To view the results, look at the model in the 3D viewer on the right. Also, you can check\r\n                        the console in case there were any errors.  </td>\r\n                    <td></td> \r\n                </tr>\r\n\r\n            </table>\r\n    \r\n            <h3>Links</h3>\r\n            <p>To understand more about Möbius Modeller and the Öbi language, read the online book.</p>\r\n            <ul>\r\n                <li><a href='https://mobius-book.design-automation.net'>Möbius Modeller Book</a></li>\r\n            </ul>\r\n            <p>For questions about how to use Möbius Modeller, please head over to the forum.</p>\r\n            <ul>\r\n                <li><a href='https://mobius-forum.design-automation.net'>Möbius Modeller Forum</a></li>\r\n            </ul>\r\n            <p>Möbius Modeller is open-source, under MIT license. The source-code is on GitHub.</p>\r\n            <ul>\r\n                <li><a href='https://github.com/design-automation/mobius-parametric-modeller'>Möbius Modeller source code</a></li>\r\n            </ul>\r\n            <p>If you like what we are doing, then do let us know on the forum.</p>\r\n            <p>If you would like to get involved, please contact us. We need your help!</p>\r\n    \r\n            <h3>Contact Us</h3>\r\n            <p>Möbius Modeller is being developed by the Design Automation Lab at the \r\n                National University of Singapore. .</p>\r\n            <ul>\r\n                <li><a href='http://design-automation.net'>Design Automation Lab</a></li>\r\n            </ul>\r\n        </div>\r\n    </div>\r\n</div>\r\n<spinner></spinner>\r\n<chrome></chrome>"

/***/ }),

/***/ "./src/app/views/view-about/view-about.component.scss":
/*!************************************************************!*\
  !*** ./src/app/views/view-about/view-about.component.scss ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".container {\n  display: block;\n  height: 100%; }\n\n.content__panel {\n  margin-top: 1px;\n  margin-left: 11px;\n  height: calc(100% - 41px);\n  overflow: auto; }\n\n.content__panel .logo {\n    float: right;\n    margin-right: 50px; }\n\n.content__panel .text {\n    max-width: 600px; }\n\n.content__panel .key {\n    margin-left: 25px; }\n\n.content__panel .key td {\n      padding: 10px; }\n\nh3 {\n  line-height: 30px;\n  height: 30px;\n  color: #373737; }\n\np, li, td {\n  color: #373737;\n  text-align: left;\n  margin-bottom: 14px;\n  font-size: 12px;\n  line-height: 14px; }\n\nmat-icon {\n  color: #808080;\n  margin: 0px;\n  padding: 0px;\n  cursor: pointer; }\n\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdmlld3Mvdmlldy1hYm91dC9DOlxcRHJvcGJveFxcRmlsZXNcXFNvZnR3YXJlXFxHaXRIdWJcXGRlc2lnbi1hdXRvbWF0aW9uXFxtb2JpdXMtcGFyYW1ldHJpYy1tb2RlbGxlci9zcmNcXGFwcFxcdmlld3NcXHZpZXctYWJvdXRcXHZpZXctYWJvdXQuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL3ZpZXdzL3ZpZXctYWJvdXQvQzpcXERyb3Bib3hcXEZpbGVzXFxTb2Z0d2FyZVxcR2l0SHViXFxkZXNpZ24tYXV0b21hdGlvblxcbW9iaXVzLXBhcmFtZXRyaWMtbW9kZWxsZXIvc3JjXFxzY3NzXFxjb2xvcnMuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFHQTtFQUNJLGNBQWM7RUFDZCxZQUFZLEVBQUE7O0FBRWhCO0VBQ0ksZUFBZTtFQUNmLGlCQUFpQjtFQUVqQix5QkFBeUI7RUFDekIsY0FBYyxFQUFBOztBQUxsQjtJQVFRLFlBQVk7SUFDWixrQkFBa0IsRUFBQTs7QUFUMUI7SUFZUSxnQkFBZ0IsRUFBQTs7QUFaeEI7SUFlUSxpQkFBaUIsRUFBQTs7QUFmekI7TUFpQlksYUFBYSxFQUFBOztBQUt6QjtFQUNJLGlCQUFpQjtFQUNqQixZQUFZO0VBQ1osY0N0QlksRUFBQTs7QUR5QmhCO0VBQ0ksY0MxQlk7RUQyQlosZ0JBQWdCO0VBQ2hCLG1CQUFtQjtFQUNuQixlQUFlO0VBQ2YsaUJBQWlCLEVBQUE7O0FBSXJCO0VBQ0ksY0M1Q1k7RUQ2Q1osV0FBVztFQUNYLFlBQVk7RUFDWixlQUFlLEVBQUEiLCJmaWxlIjoic3JjL2FwcC92aWV3cy92aWV3LWFib3V0L3ZpZXctYWJvdXQuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJAaW1wb3J0ICd+c2Nzcy9jb2xvcnMnO1xyXG5AaW1wb3J0ICd+c2Nzcy92YXJpYWJsZXMnO1xyXG5cclxuLmNvbnRhaW5lcntcclxuICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG59XHJcbi5jb250ZW50X19wYW5lbHtcclxuICAgIG1hcmdpbi10b3A6IDFweDtcclxuICAgIG1hcmdpbi1sZWZ0OiAxMXB4OyAvL3NwbGl0IGJhciB3aWR0aFxyXG4gICAgLy8gbWF4LXdpZHRoOiA2MDBweDtcclxuICAgIGhlaWdodDogY2FsYygxMDAlIC0gNDFweCk7XHJcbiAgICBvdmVyZmxvdzogYXV0bztcclxuXHJcbiAgICAubG9nb3tcclxuICAgICAgICBmbG9hdDogcmlnaHQ7XHJcbiAgICAgICAgbWFyZ2luLXJpZ2h0OiA1MHB4O1xyXG4gICAgfVxyXG4gICAgLnRleHR7XHJcbiAgICAgICAgbWF4LXdpZHRoOiA2MDBweDtcclxuICAgIH1cclxuICAgIC5rZXkge1xyXG4gICAgICAgIG1hcmdpbi1sZWZ0OiAyNXB4O1xyXG4gICAgICAgIHRkIHtcclxuICAgICAgICAgICAgcGFkZGluZzogMTBweDtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbn1cclxuXHJcbmgzIHtcclxuICAgIGxpbmUtaGVpZ2h0OiAzMHB4O1xyXG4gICAgaGVpZ2h0OiAzMHB4O1xyXG4gICAgY29sb3I6ICRjb2xvcjg7XHJcbn1cclxuXHJcbnAsIGxpLCB0ZHtcclxuICAgIGNvbG9yOiAkY29sb3I4O1xyXG4gICAgdGV4dC1hbGlnbjogbGVmdDtcclxuICAgIG1hcmdpbi1ib3R0b206IDE0cHg7XHJcbiAgICBmb250LXNpemU6IDEycHg7XHJcbiAgICBsaW5lLWhlaWdodDogMTRweDtcclxuICAgIC8vaGVpZ2h0OiAxNHB4O1xyXG59XHJcblxyXG5tYXQtaWNvbntcclxuICAgIGNvbG9yOiAkY29sb3IxO1xyXG4gICAgbWFyZ2luOiAwcHg7XHJcbiAgICBwYWRkaW5nOiAwcHg7XHJcbiAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbn0iLCJcclxuJGNvbG9yMTogIzgwODA4MDtcclxuJGNvbG9yMjogIzk5OTk5OTtcclxuJGNvbG9yMzogI0IzQjNCMzsgXHJcbiRjb2xvcjQ6ICNDQ0NDQ0M7XHJcbiRjb2xvcjU6ICNFNkU2RTY7XHJcbiRjb2xvcjUtNTogcmdiKDI0NSwgMjQ1LCAyNDUpO1xyXG4kY29sb3I2OiByZ2IoMjUwLCAyNTAsIDI1MSk7XHJcblxyXG4kY29sb3I3OiB3aGl0ZTtcclxuJGNvbG9yODogIzM3MzczNztcclxuXHJcbiRzZWxlY3RlZC1jb2xvcjogcmdiKDAsIDAsIDEwOSk7XHJcbiRob3Zlci1jb2xvcjogJGNvbG9yMjtcclxuXHJcbiRlcnJvci1jb2xvcjogI0U5NDg1ODsgLy9waW5rLXJlZFxyXG4kZXJyb3ItY29sb3ItbHQ6IHJnYigyNTUsIDIyMCwgMjI0KTtcclxuJHBjb2xvcjI6ICNGM0EzMkE7IC8vb3JhbmdlLXllbGxvd1xyXG4kcHJpbnQtY29sb3I6IHJnYigxMzAsIDE5MSwgMTEwKTsgLy9saWdodGdyZWVuXHJcbiRwcmludC1jb2xvci1sdDogcmdiKDIzMCwgMjU1LCAyMjEpO1xyXG4kc2VsZWN0R2VvbS1jb2xvcjogcmdiKDI1NSwgMTc0LCAwKTsgLy8gbGlnaHQgb3JhbmdlXHJcbiRzZWxlY3RHZW9tLWNvbG9yLWx0OiByZ2IoMjU1LCAyMjUsIDE2MCk7XHJcblxyXG4vLyAkcHJvZC1iYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMjUwLDI1MCwyNTApO1xyXG4vLyAkYmFja2dyb3VuZC1jb2xvcjogcmdiKDIyMCwyMjAsMjIwKTtcclxuJGZ1bmN0aW9uLXRleHQtY29sb3I6IHJnYigxOTAsIDE0MCwgMzApO1xyXG4kZnVuY3Rpb24tdGV4dC1jb2xvcjI6IHJnYigxOCwgMTI2LCAxMzYpO1xyXG4kYmFzaWMtZnVuY3Rpb24tdGV4dC1jb2xvcjogcmdiKDIwMCwgNzAsIDE1MCk7XHJcbiRjb21tZW50LWNvbG9yOiBkYXJrZ3JlZW47XHJcbiJdfQ== */"

/***/ }),

/***/ "./src/app/views/view-about/view-about.component.ts":
/*!**********************************************************!*\
  !*** ./src/app/views/view-about/view-about.component.ts ***!
  \**********************************************************/
/*! exports provided: ViewAboutComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ViewAboutComponent", function() { return ViewAboutComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _services__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @services */ "./src/app/shared/services/index.ts");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var _shared_components_file_loadurl_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @shared/components/file/loadurl.component */ "./src/app/shared/components/file/loadurl.component.ts");
/* harmony import */ var _env_version__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @env/version */ "./src/environments/version.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};





var ViewAboutComponent = /** @class */ (function () {
    function ViewAboutComponent(dataService, router) {
        this.dataService = dataService;
        this.router = router;
        this.version = _env_version__WEBPACK_IMPORTED_MODULE_4__["VERSION"];
        new _shared_components_file_loadurl_component__WEBPACK_IMPORTED_MODULE_3__["LoadUrlComponent"](this.dataService, this.router).loadStartUpURL(this.router.url);
    }
    ViewAboutComponent.prototype.routeTo = function (url) { this.router.navigate([url]); };
    ViewAboutComponent.prototype.getFlowchart = function () { return this.dataService.flowchart; };
    ViewAboutComponent.prototype.getFlowchartName = function () { return this.dataService.file.name; };
    ViewAboutComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'view-about',
            template: __webpack_require__(/*! ./view-about.component.html */ "./src/app/views/view-about/view-about.component.html"),
            styles: [__webpack_require__(/*! ./view-about.component.scss */ "./src/app/views/view-about/view-about.component.scss")]
        }),
        __metadata("design:paramtypes", [_services__WEBPACK_IMPORTED_MODULE_1__["DataService"], _angular_router__WEBPACK_IMPORTED_MODULE_2__["Router"]])
    ], ViewAboutComponent);
    return ViewAboutComponent;
}());



/***/ }),

/***/ "./src/app/views/view-about/view-about.module.ts":
/*!*******************************************************!*\
  !*** ./src/app/views/view-about/view-about.module.ts ***!
  \*******************************************************/
/*! exports provided: ViewAboutModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ViewAboutModule", function() { return ViewAboutModule; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/fesm5/common.js");
/* harmony import */ var _shared_shared_module__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @shared/shared.module */ "./src/app/shared/shared.module.ts");
/* harmony import */ var _view_about_routing_module__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./view-about-routing.module */ "./src/app/views/view-about/view-about-routing.module.ts");
/* harmony import */ var _view_about_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./view-about.component */ "./src/app/views/view-about/view-about.component.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};





var ViewAboutModule = /** @class */ (function () {
    function ViewAboutModule() {
    }
    ViewAboutModule = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["NgModule"])({
            declarations: [
                _view_about_component__WEBPACK_IMPORTED_MODULE_4__["ViewAboutComponent"],
            ],
            exports: [
                _view_about_component__WEBPACK_IMPORTED_MODULE_4__["ViewAboutComponent"]
            ],
            imports: [
                _angular_common__WEBPACK_IMPORTED_MODULE_1__["CommonModule"],
                _shared_shared_module__WEBPACK_IMPORTED_MODULE_2__["SharedModule"],
                _view_about_routing_module__WEBPACK_IMPORTED_MODULE_3__["ViewAboutRoutingModule"]
            ],
            entryComponents: [],
            providers: []
        }),
        __metadata("design:paramtypes", [])
    ], ViewAboutModule);
    return ViewAboutModule;
}());



/***/ }),

/***/ "./src/app/views/view-dashboard/view-dashboard-routing.module.ts":
/*!***********************************************************************!*\
  !*** ./src/app/views/view-dashboard/view-dashboard-routing.module.ts ***!
  \***********************************************************************/
/*! exports provided: ViewDashboardRoutingModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ViewDashboardRoutingModule", function() { return ViewDashboardRoutingModule; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var _view_dashboard_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./view-dashboard.component */ "./src/app/views/view-dashboard/view-dashboard.component.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};



var routes = [
    {
        path: '',
        component: _view_dashboard_component__WEBPACK_IMPORTED_MODULE_2__["ViewDashboardComponent"],
        children: []
    }
];
var ViewDashboardRoutingModule = /** @class */ (function () {
    function ViewDashboardRoutingModule() {
    }
    ViewDashboardRoutingModule = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["NgModule"])({
            imports: [_angular_router__WEBPACK_IMPORTED_MODULE_1__["RouterModule"].forChild(routes)],
            exports: [_angular_router__WEBPACK_IMPORTED_MODULE_1__["RouterModule"]]
        })
    ], ViewDashboardRoutingModule);
    return ViewDashboardRoutingModule;
}());



/***/ }),

/***/ "./src/app/views/view-dashboard/view-dashboard.component.html":
/*!********************************************************************!*\
  !*** ./src/app/views/view-dashboard/view-dashboard.component.html ***!
  \********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class='container'>\r\n    <as-split direction=\"horizontal\" (dragEnd)='setSplit($event)'>\r\n        \r\n        <as-split-area [size]=\"100 - getSplit()\">\r\n            <panel-header [flowchart]='getFlowchart()'></panel-header>\r\n            <!-- viewchild content -->\r\n            <div class='content__panel'>\r\n                <h3>{{getFlowchart().name}}</h3>\r\n                <parameter-viewer [flowchart]='getFlowchart()' [startNode]='getFlowchart().nodes[0]' [endNode]='getEndNode()'></parameter-viewer>\r\n            </div>\r\n        </as-split-area>\r\n\r\n        <as-split-area [size]=\"getSplit()\">\r\n            <!-- data viewers panel -->\r\n            <div class='content__viewer' >\r\n                <model-viewers-container [data]='viewerData(getNode(), true)'></model-viewers-container>\r\n            </div>\r\n        </as-split-area>\r\n        \r\n    </as-split>\r\n</div>\r\n<spinner></spinner>\r\n<chrome></chrome>"

/***/ }),

/***/ "./src/app/views/view-dashboard/view-dashboard.component.scss":
/*!********************************************************************!*\
  !*** ./src/app/views/view-dashboard/view-dashboard.component.scss ***!
  \********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".content__panel {\n  margin-top: 40px;\n  padding-left: 11px;\n  height: calc(100% - 40px);\n  overflow-y: auto; }\n\nh3 {\n  line-height: 30px;\n  height: 30px;\n  color: #373737; }\n\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdmlld3Mvdmlldy1kYXNoYm9hcmQvQzpcXERyb3Bib3hcXEZpbGVzXFxTb2Z0d2FyZVxcR2l0SHViXFxkZXNpZ24tYXV0b21hdGlvblxcbW9iaXVzLXBhcmFtZXRyaWMtbW9kZWxsZXIvc3JjXFxhcHBcXHZpZXdzXFx2aWV3LWRhc2hib2FyZFxcdmlldy1kYXNoYm9hcmQuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL3ZpZXdzL3ZpZXctZGFzaGJvYXJkL0M6XFxEcm9wYm94XFxGaWxlc1xcU29mdHdhcmVcXEdpdEh1YlxcZGVzaWduLWF1dG9tYXRpb25cXG1vYml1cy1wYXJhbWV0cmljLW1vZGVsbGVyL3NyY1xcc2Nzc1xcdmFyaWFibGVzLnNjc3MiLCJzcmMvYXBwL3ZpZXdzL3ZpZXctZGFzaGJvYXJkL0M6XFxEcm9wYm94XFxGaWxlc1xcU29mdHdhcmVcXEdpdEh1YlxcZGVzaWduLWF1dG9tYXRpb25cXG1vYml1cy1wYXJhbWV0cmljLW1vZGVsbGVyL3NyY1xcc2Nzc1xcY29sb3JzLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBR0E7RUFDSSxnQkNGZ0I7RURHaEIsa0JBQWtCO0VBRWxCLHlCQUF5QjtFQUN6QixnQkFBZ0IsRUFBQTs7QUFHcEI7RUFDSSxpQkFBaUI7RUFDakIsWUFBWTtFQUNaLGNFSlksRUFBQSIsImZpbGUiOiJzcmMvYXBwL3ZpZXdzL3ZpZXctZGFzaGJvYXJkL3ZpZXctZGFzaGJvYXJkLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiQGltcG9ydCAnfnNjc3MvY29sb3JzJztcclxuQGltcG9ydCAnfnNjc3MvdmFyaWFibGVzJztcclxuXHJcbi5jb250ZW50X19wYW5lbHtcclxuICAgIG1hcmdpbi10b3A6ICRoZWFkZXItaGVpZ2h0O1xyXG4gICAgcGFkZGluZy1sZWZ0OiAxMXB4OyAvL3NwbGl0IGJhciB3aWR0aFxyXG5cclxuICAgIGhlaWdodDogY2FsYygxMDAlIC0gNDBweCk7IC8vaGVhZGVyIGhlaWdodDtcclxuICAgIG92ZXJmbG93LXk6IGF1dG87XHJcbn1cclxuXHJcbmgzIHtcclxuICAgIGxpbmUtaGVpZ2h0OiAzMHB4O1xyXG4gICAgaGVpZ2h0OiAzMHB4O1xyXG4gICAgY29sb3I6ICRjb2xvcjg7XHJcbn0iLCIkcGFkZGluZzogNDBweDsgLy8gPyBub3QgdXNlZFxyXG4kc21hbGwtcGFkZGluZzogMTVweDtcclxuJGhlYWRlci1oZWlnaHQ6IDQwcHg7XHJcblxyXG4kZnNpemUxOiAxNXB4O1xyXG4kZnNpemUyOiAxMnB4O1xyXG4kZnNpemUzOiAzMHB4O1xyXG5cclxuJHBvcnQtc2l6ZTogMTVweDtcclxuJGRlZmF1bHQtc2lkZS1wYWRkaW5nOiAxNXB4O1xyXG5cclxuJGRpc2FibGVkLW9wYWNpdHk6IDAuNDsiLCJcclxuJGNvbG9yMTogIzgwODA4MDtcclxuJGNvbG9yMjogIzk5OTk5OTtcclxuJGNvbG9yMzogI0IzQjNCMzsgXHJcbiRjb2xvcjQ6ICNDQ0NDQ0M7XHJcbiRjb2xvcjU6ICNFNkU2RTY7XHJcbiRjb2xvcjUtNTogcmdiKDI0NSwgMjQ1LCAyNDUpO1xyXG4kY29sb3I2OiByZ2IoMjUwLCAyNTAsIDI1MSk7XHJcblxyXG4kY29sb3I3OiB3aGl0ZTtcclxuJGNvbG9yODogIzM3MzczNztcclxuXHJcbiRzZWxlY3RlZC1jb2xvcjogcmdiKDAsIDAsIDEwOSk7XHJcbiRob3Zlci1jb2xvcjogJGNvbG9yMjtcclxuXHJcbiRlcnJvci1jb2xvcjogI0U5NDg1ODsgLy9waW5rLXJlZFxyXG4kZXJyb3ItY29sb3ItbHQ6IHJnYigyNTUsIDIyMCwgMjI0KTtcclxuJHBjb2xvcjI6ICNGM0EzMkE7IC8vb3JhbmdlLXllbGxvd1xyXG4kcHJpbnQtY29sb3I6IHJnYigxMzAsIDE5MSwgMTEwKTsgLy9saWdodGdyZWVuXHJcbiRwcmludC1jb2xvci1sdDogcmdiKDIzMCwgMjU1LCAyMjEpO1xyXG4kc2VsZWN0R2VvbS1jb2xvcjogcmdiKDI1NSwgMTc0LCAwKTsgLy8gbGlnaHQgb3JhbmdlXHJcbiRzZWxlY3RHZW9tLWNvbG9yLWx0OiByZ2IoMjU1LCAyMjUsIDE2MCk7XHJcblxyXG4vLyAkcHJvZC1iYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMjUwLDI1MCwyNTApO1xyXG4vLyAkYmFja2dyb3VuZC1jb2xvcjogcmdiKDIyMCwyMjAsMjIwKTtcclxuJGZ1bmN0aW9uLXRleHQtY29sb3I6IHJnYigxOTAsIDE0MCwgMzApO1xyXG4kZnVuY3Rpb24tdGV4dC1jb2xvcjI6IHJnYigxOCwgMTI2LCAxMzYpO1xyXG4kYmFzaWMtZnVuY3Rpb24tdGV4dC1jb2xvcjogcmdiKDIwMCwgNzAsIDE1MCk7XHJcbiRjb21tZW50LWNvbG9yOiBkYXJrZ3JlZW47XHJcbiJdfQ== */"

/***/ }),

/***/ "./src/app/views/view-dashboard/view-dashboard.component.ts":
/*!******************************************************************!*\
  !*** ./src/app/views/view-dashboard/view-dashboard.component.ts ***!
  \******************************************************************/
/*! exports provided: ViewDashboardComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ViewDashboardComponent", function() { return ViewDashboardComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _services__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @services */ "./src/app/shared/services/index.ts");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var _shared_components_file_loadurl_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @shared/components/file/loadurl.component */ "./src/app/shared/components/file/loadurl.component.ts");
/* harmony import */ var _shared_getViewerData__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @shared/getViewerData */ "./src/app/shared/getViewerData.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};





var canvas = document.createElement('canvas');
var ctx = canvas.getContext('2d');
ctx.font = '12px sans-serif';
var ViewDashboardComponent = /** @class */ (function () {
    function ViewDashboardComponent(dataService, router) {
        this.dataService = dataService;
        this.router = router;
        this.viewerData = _shared_getViewerData__WEBPACK_IMPORTED_MODULE_4__["getViewerData"];
        new _shared_components_file_loadurl_component__WEBPACK_IMPORTED_MODULE_3__["LoadUrlComponent"](this.dataService, this.router).loadStartUpURL(this.router.url);
    }
    ViewDashboardComponent.prototype.ngAfterViewInit = function () {
        var _this = this;
        setTimeout(function () {
            _this.adjustTextArea();
        }, 50);
    };
    ViewDashboardComponent.prototype.adjustTextArea = function () {
        var textarea = document.getElementById('display-flowchart-desc');
        if (textarea) {
            var desc = this.dataService.flowchart.description.split('\n');
            var textareaWidth = textarea.getBoundingClientRect().width - 30;
            var lineCount = 0;
            for (var _i = 0, desc_1 = desc; _i < desc_1.length; _i++) {
                var line = desc_1[_i];
                lineCount += Math.floor(ctx.measureText(line).width / textareaWidth) + 1;
            }
            textarea.style.height = lineCount * 14 + 4 + 'px';
        }
        for (var _a = 0, _b = this.dataService.flowchart.nodes[0].procedure; _a < _b.length; _a++) {
            var prod = _b[_a];
            if (!prod.enabled || prod.type !== 10 || prod.meta.inputMode === 5) {
                continue;
            }
            textarea = document.getElementById(prod.ID + '_desc');
            if (textarea && prod.meta.description) {
                var desc = prod.meta.description.split('\n');
                var textareaWidth = textarea.getBoundingClientRect().width - 30;
                var lineCount = 0;
                for (var _c = 0, desc_2 = desc; _c < desc_2.length; _c++) {
                    var line = desc_2[_c];
                    lineCount += Math.floor(ctx.measureText(line).width / textareaWidth) + 1;
                }
                textarea.style.height = lineCount * 14 + 4 + 'px';
            }
        }
    };
    ViewDashboardComponent.prototype.getEndNode = function () {
        for (var _i = 0, _a = this.dataService.flowchart.nodes; _i < _a.length; _i++) {
            var node = _a[_i];
            if (node.type === 'end') {
                return node;
            }
        }
    };
    // viewerData(): any {
    //     const node = this.dataService.flowchart.nodes[this.dataService.flowchart.meta.selected_nodes[0]];
    //     if (!node || !node.enabled) { return ''; }
    //     // if (node.type === 'output') { return node.input.value; }
    //     return node.model;
    // }
    ViewDashboardComponent.prototype.setSplit = function (event) {
        this.dataService.splitUpdate = true;
        this.dataService.splitVal = event.sizes[1];
        this.adjustTextArea();
    };
    ViewDashboardComponent.prototype.getSplit = function () { return this.dataService.splitVal; };
    ViewDashboardComponent.prototype.getFlowchart = function () { return this.dataService.flowchart; };
    ViewDashboardComponent.prototype.getNode = function () { return this.dataService.node; };
    ViewDashboardComponent.prototype.getFlowchartName = function () { return this.dataService.file.name; };
    ViewDashboardComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'view-dashboard',
            template: __webpack_require__(/*! ./view-dashboard.component.html */ "./src/app/views/view-dashboard/view-dashboard.component.html"),
            styles: [__webpack_require__(/*! ./view-dashboard.component.scss */ "./src/app/views/view-dashboard/view-dashboard.component.scss")]
        }),
        __metadata("design:paramtypes", [_services__WEBPACK_IMPORTED_MODULE_1__["DataService"], _angular_router__WEBPACK_IMPORTED_MODULE_2__["Router"]])
    ], ViewDashboardComponent);
    return ViewDashboardComponent;
}());



/***/ }),

/***/ "./src/app/views/view-dashboard/view-dashboard.module.ts":
/*!***************************************************************!*\
  !*** ./src/app/views/view-dashboard/view-dashboard.module.ts ***!
  \***************************************************************/
/*! exports provided: ViewDashboardModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ViewDashboardModule", function() { return ViewDashboardModule; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/fesm5/common.js");
/* harmony import */ var _shared_shared_module__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @shared/shared.module */ "./src/app/shared/shared.module.ts");
/* harmony import */ var _view_dashboard_routing_module__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./view-dashboard-routing.module */ "./src/app/views/view-dashboard/view-dashboard-routing.module.ts");
/* harmony import */ var _view_dashboard_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./view-dashboard.component */ "./src/app/views/view-dashboard/view-dashboard.component.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};





var ViewDashboardModule = /** @class */ (function () {
    function ViewDashboardModule() {
    }
    ViewDashboardModule = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["NgModule"])({
            declarations: [
                _view_dashboard_component__WEBPACK_IMPORTED_MODULE_4__["ViewDashboardComponent"],
            ],
            exports: [
                _view_dashboard_component__WEBPACK_IMPORTED_MODULE_4__["ViewDashboardComponent"]
            ],
            imports: [
                _angular_common__WEBPACK_IMPORTED_MODULE_1__["CommonModule"],
                _shared_shared_module__WEBPACK_IMPORTED_MODULE_2__["SharedModule"],
                _view_dashboard_routing_module__WEBPACK_IMPORTED_MODULE_3__["ViewDashboardRoutingModule"]
            ],
            entryComponents: [],
            providers: []
        }),
        __metadata("design:paramtypes", [])
    ], ViewDashboardModule);
    return ViewDashboardModule;
}());



/***/ }),

/***/ "./src/app/views/view-editor/parameter-editor/parameter-editor.component.html":
/*!************************************************************************************!*\
  !*** ./src/app/views/view-editor/parameter-editor/parameter-editor.component.html ***!
  \************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class='flowchart-info' *ngIf=\"node.type=='start'\">\r\n    <!-- <div class = 'divider'></div> -->\r\n    <ng-container *ngIf='!prodCheck'>\r\n        <div class = 'input-container'>\r\n            <input id='flowchart-name' autocomplete='off' [(ngModel)]='flowchart.name' placeholder=\"flowchart name\" [style.width.px]='inputSize(flowchart.name||\"flowchart name\")'>\r\n        </div>\r\n        <textarea autogrow\r\n        id='flowchart-desc' [(ngModel)]='flowchart.description' placeholder=\"Model Description\"></textarea>\r\n    </ng-container>\r\n\r\n    <div class='container--input' *ngIf='prodCheck'>\r\n        <procedure-input-editor \r\n            *ngFor=\"let prod of node.procedure; let i = index;\" \r\n            [prod]=\"prod\" \r\n            [disableInput]='disableInput'\r\n            (delete)='deleteProd()' \r\n            (deleteC)='deleteChild(i)' \r\n            (disableProds)='markDisabled()' \r\n            (updateGlbs)='updateGlbs()' \r\n            (selectInp)='selectInput($event)'></procedure-input-editor>\r\n    </div>\r\n</div>\r\n<div class='flowchart-info' *ngIf=\"node.type=='end'\">\r\n    <!-- <div class = 'divider'></div> -->\r\n    <div id='ret-container'>\r\n        <div class='returnProd'>\r\n            <input class='disabled-input' value=\"Return\" disabled>\r\n            <ng-container *ngFor='let p of node.procedure[node.procedure.length-1].args; let i=index'>\r\n                <input id='ret--input' \r\n                *ngIf='p.name[0] !== \"_\"'\r\n                [(ngModel)]='p.value'\r\n                placeholder={{p.name}}\r\n                [style.width.px]='inputSize(p.value||p.name)'\r\n                autocomplete='off'\r\n                >  \r\n            </ng-container>\r\n            </div>\r\n        <textarea autogrow\r\n        id='flowchart-return' [(ngModel)]='flowchart.returnDescription' placeholder=\"Parameter Description\"></textarea>\r\n    </div>\r\n</div>\r\n\r\n"

/***/ }),

/***/ "./src/app/views/view-editor/parameter-editor/parameter-editor.component.scss":
/*!************************************************************************************!*\
  !*** ./src/app/views/view-editor/parameter-editor/parameter-editor.component.scss ***!
  \************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "div[class^=\"container--\"] {\n  display: flex;\n  flex-direction: column;\n  margin: 0px 0px; }\n\n.flowchart-info {\n  display: flex;\n  flex-flow: column nowrap;\n  padding-left: 8px;\n  padding-right: 5px;\n  width: 100%;\n  box-sizing: border-box; }\n\n.flowchart-info #ret-container {\n    display: flex;\n    flex-flow: column nowrap;\n    padding-left: 2px;\n    padding-bottom: 2px;\n    border-left: 1px solid #999999;\n    border-bottom: 1px solid #999999; }\n\ntextarea, #flowchart-name, #ret--input {\n  color: #373737;\n  border: 2px solid #E6E6E6;\n  background-color: transparent;\n  height: 15px;\n  margin-bottom: 1px;\n  padding-left: 6px;\n  font-family: sans-serif;\n  font-size: 12px;\n  max-width: 100%;\n  resize: none;\n  overflow: auto; }\n\ntextarea:hover, textarea:focus, #flowchart-name:hover, #flowchart-name:focus, #ret--input:hover, #ret--input:focus {\n    border-color: #00006d;\n    background-color: white; }\n\n.input-container {\n  padding: 0px;\n  max-width: 100%;\n  padding-right: 9px;\n  box-sizing: border-box; }\n\n#flowchart-name {\n  margin-bottom: 8px;\n  max-width: 100%;\n  height: 15px; }\n\nhr {\n  width: inherit;\n  border-top: 2px solid #808080; }\n\n.disabled-input {\n  border: 0px;\n  margin: 0px;\n  width: 50px;\n  font-family: sans-serif;\n  font-size: 12px;\n  font-weight: 550;\n  font-style: italic;\n  background-color: #fafafb;\n  color: #be8c1e; }\n\n.input {\n  font-size: 12px;\n  resize: horizontal;\n  min-width: 10px;\n  background-color: #fafafb;\n  margin-left: 6px;\n  border: 2px solid #E6E6E6;\n  padding-left: 2px; }\n\n.returnProd {\n  display: inline-block; }\n\n.divider {\n  width: 100%;\n  height: 20px; }\n\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdmlld3Mvdmlldy1lZGl0b3IvcGFyYW1ldGVyLWVkaXRvci9DOlxcRHJvcGJveFxcRmlsZXNcXFNvZnR3YXJlXFxHaXRIdWJcXGRlc2lnbi1hdXRvbWF0aW9uXFxtb2JpdXMtcGFyYW1ldHJpYy1tb2RlbGxlci9zcmNcXGFwcFxcdmlld3NcXHZpZXctZWRpdG9yXFxwYXJhbWV0ZXItZWRpdG9yXFxwYXJhbWV0ZXItZWRpdG9yLmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC92aWV3cy92aWV3LWVkaXRvci9wYXJhbWV0ZXItZWRpdG9yL0M6XFxEcm9wYm94XFxGaWxlc1xcU29mdHdhcmVcXEdpdEh1YlxcZGVzaWduLWF1dG9tYXRpb25cXG1vYml1cy1wYXJhbWV0cmljLW1vZGVsbGVyL3NyY1xcc2Nzc1xcY29sb3JzLnNjc3MiLCJzcmMvYXBwL3ZpZXdzL3ZpZXctZWRpdG9yL3BhcmFtZXRlci1lZGl0b3IvQzpcXERyb3Bib3hcXEZpbGVzXFxTb2Z0d2FyZVxcR2l0SHViXFxkZXNpZ24tYXV0b21hdGlvblxcbW9iaXVzLXBhcmFtZXRyaWMtbW9kZWxsZXIvc3JjXFxzY3NzXFx2YXJpYWJsZXMuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFHQTtFQUNJLGFBQWE7RUFDYixzQkFBc0I7RUFDdEIsZUFBZSxFQUFBOztBQUduQjtFQUNJLGFBQWE7RUFDYix3QkFBd0I7RUFDeEIsaUJBQWlCO0VBQ2pCLGtCQUFrQjtFQUNsQixXQUFXO0VBQ1gsc0JBQXNCLEVBQUE7O0FBTjFCO0lBUVEsYUFBYTtJQUNiLHdCQUF3QjtJQUN4QixpQkFBaUI7SUFDakIsbUJBQW1CO0lBQ25CLDhCQ25CUTtJRG9CUixnQ0NwQlEsRUFBQTs7QUR3QmhCO0VBQ0ksY0NqQlk7RURrQloseUJDdkJZO0VEd0JaLDZCQUE2QjtFQUM3QixZRTFCUztFRjJCVCxrQkFBa0I7RUFFbEIsaUJBQWlCO0VBQ2pCLHVCQUF1QjtFQUN2QixlRTlCUztFRitCVCxlQUFlO0VBQ2YsWUFBWTtFQUNaLGNBQWMsRUFBQTs7QUFabEI7SUFjUSxxQkM1QnVCO0lENkJ2Qix1QkNoQ00sRUFBQTs7QURvQ2Q7RUFDSSxZQUFZO0VBQ1osZUFBZTtFQUNmLGtCQUFrQjtFQUNsQixzQkFBc0IsRUFBQTs7QUFHMUI7RUFDSSxrQkFBa0I7RUFDbEIsZUFBZTtFQUNmLFlFbkRTLEVBQUE7O0FGc0RiO0VBQ0ksY0FBYztFQUNkLDZCQzNEWSxFQUFBOztBRDhEaEI7RUFDSSxXQUFXO0VBQ1gsV0FBVztFQUNYLFdBQVc7RUFDWCx1QkFBdUI7RUFDdkIsZUUvRFM7RUZnRVQsZ0JBQWdCO0VBQ2hCLGtCQUFrQjtFQUNsQix5QkNoRXVCO0VEaUV2QixjQy9DbUMsRUFBQTs7QURrRHZDO0VBQ0ksZUV2RVM7RUZ3RVQsa0JBQWtCO0VBQ2xCLGVBQWU7RUFDZix5QkN4RXVCO0VEeUV2QixnQkFBZ0I7RUFDaEIseUJDNUVZO0VENkVaLGlCQUFpQixFQUFBOztBQUdyQjtFQUNJLHFCQUFxQixFQUFBOztBQUd6QjtFQUNJLFdBQVc7RUFFWCxZQUFZLEVBQUEiLCJmaWxlIjoic3JjL2FwcC92aWV3cy92aWV3LWVkaXRvci9wYXJhbWV0ZXItZWRpdG9yL3BhcmFtZXRlci1lZGl0b3IuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJAaW1wb3J0ICd+c2Nzcy9jb2xvcnMnO1xyXG5AaW1wb3J0ICd+c2Nzcy92YXJpYWJsZXMnO1xyXG5cclxuZGl2W2NsYXNzXj1cImNvbnRhaW5lci0tXCJde1xyXG4gICAgZGlzcGxheTogZmxleDsgXHJcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gICAgbWFyZ2luOiAwcHggMHB4O1xyXG59XHJcblxyXG4uZmxvd2NoYXJ0LWluZm97XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgZmxleC1mbG93OiBjb2x1bW4gbm93cmFwO1xyXG4gICAgcGFkZGluZy1sZWZ0OiA4cHg7XHJcbiAgICBwYWRkaW5nLXJpZ2h0OiA1cHg7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XHJcbiAgICAjcmV0LWNvbnRhaW5lcntcclxuICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgIGZsZXgtZmxvdzogY29sdW1uIG5vd3JhcDtcclxuICAgICAgICBwYWRkaW5nLWxlZnQ6IDJweDtcclxuICAgICAgICBwYWRkaW5nLWJvdHRvbTogMnB4O1xyXG4gICAgICAgIGJvcmRlci1sZWZ0OiAxcHggc29saWQgJGNvbG9yMjtcclxuICAgICAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgJGNvbG9yMjtcclxuICAgIH1cclxufVxyXG5cclxudGV4dGFyZWEsICNmbG93Y2hhcnQtbmFtZSwgI3JldC0taW5wdXR7XHJcbiAgICBjb2xvcjogJGNvbG9yODtcclxuICAgIGJvcmRlcjogMnB4IHNvbGlkICRjb2xvcjU7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcclxuICAgIGhlaWdodDogJGZzaXplMTtcclxuICAgIG1hcmdpbi1ib3R0b206IDFweDtcclxuXHJcbiAgICBwYWRkaW5nLWxlZnQ6IDZweDtcclxuICAgIGZvbnQtZmFtaWx5OiBzYW5zLXNlcmlmO1xyXG4gICAgZm9udC1zaXplOiAkZnNpemUyO1xyXG4gICAgbWF4LXdpZHRoOiAxMDAlO1xyXG4gICAgcmVzaXplOiBub25lOyBcclxuICAgIG92ZXJmbG93OiBhdXRvO1xyXG4gICAgJjpob3ZlciwgJjpmb2N1c3tcclxuICAgICAgICBib3JkZXItY29sb3I6ICRzZWxlY3RlZC1jb2xvcjtcclxuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkY29sb3I3O1xyXG4gICAgfVxyXG59XHJcblxyXG4uaW5wdXQtY29udGFpbmVye1xyXG4gICAgcGFkZGluZzogMHB4O1xyXG4gICAgbWF4LXdpZHRoOiAxMDAlO1xyXG4gICAgcGFkZGluZy1yaWdodDogOXB4O1xyXG4gICAgYm94LXNpemluZzogYm9yZGVyLWJveDtcclxufVxyXG5cclxuI2Zsb3djaGFydC1uYW1le1xyXG4gICAgbWFyZ2luLWJvdHRvbTogOHB4O1xyXG4gICAgbWF4LXdpZHRoOiAxMDAlO1xyXG4gICAgaGVpZ2h0OiAkZnNpemUxO1xyXG59XHJcblxyXG5ocntcclxuICAgIHdpZHRoOiBpbmhlcml0O1xyXG4gICAgYm9yZGVyLXRvcDogMnB4IHNvbGlkICRjb2xvcjE7XHJcbn1cclxuXHJcbi5kaXNhYmxlZC1pbnB1dHtcclxuICAgIGJvcmRlcjogMHB4O1xyXG4gICAgbWFyZ2luOiAwcHg7XHJcbiAgICB3aWR0aDogNTBweDtcclxuICAgIGZvbnQtZmFtaWx5OiBzYW5zLXNlcmlmO1xyXG4gICAgZm9udC1zaXplOiAkZnNpemUyO1xyXG4gICAgZm9udC13ZWlnaHQ6IDU1MDtcclxuICAgIGZvbnQtc3R5bGU6IGl0YWxpYztcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICRjb2xvcjY7XHJcbiAgICBjb2xvcjogJGZ1bmN0aW9uLXRleHQtY29sb3I7XHJcbn1cclxuXHJcbi5pbnB1dHtcclxuICAgIGZvbnQtc2l6ZTogJGZzaXplMjtcclxuICAgIHJlc2l6ZTogaG9yaXpvbnRhbDtcclxuICAgIG1pbi13aWR0aDogMTBweDtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICRjb2xvcjY7IFxyXG4gICAgbWFyZ2luLWxlZnQ6IDZweDtcclxuICAgIGJvcmRlcjogMnB4IHNvbGlkICRjb2xvcjU7XHJcbiAgICBwYWRkaW5nLWxlZnQ6IDJweDtcclxufVxyXG5cclxuLnJldHVyblByb2R7XHJcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbn1cclxuXHJcbi5kaXZpZGVye1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICAvLyBiYWNrZ3JvdW5kLWNvbG9yOiAkY29sb3I1LTU7XHJcbiAgICBoZWlnaHQ6IDIwcHg7XHJcbn1cclxuIiwiXHJcbiRjb2xvcjE6ICM4MDgwODA7XHJcbiRjb2xvcjI6ICM5OTk5OTk7XHJcbiRjb2xvcjM6ICNCM0IzQjM7IFxyXG4kY29sb3I0OiAjQ0NDQ0NDO1xyXG4kY29sb3I1OiAjRTZFNkU2O1xyXG4kY29sb3I1LTU6IHJnYigyNDUsIDI0NSwgMjQ1KTtcclxuJGNvbG9yNjogcmdiKDI1MCwgMjUwLCAyNTEpO1xyXG5cclxuJGNvbG9yNzogd2hpdGU7XHJcbiRjb2xvcjg6ICMzNzM3Mzc7XHJcblxyXG4kc2VsZWN0ZWQtY29sb3I6IHJnYigwLCAwLCAxMDkpO1xyXG4kaG92ZXItY29sb3I6ICRjb2xvcjI7XHJcblxyXG4kZXJyb3ItY29sb3I6ICNFOTQ4NTg7IC8vcGluay1yZWRcclxuJGVycm9yLWNvbG9yLWx0OiByZ2IoMjU1LCAyMjAsIDIyNCk7XHJcbiRwY29sb3IyOiAjRjNBMzJBOyAvL29yYW5nZS15ZWxsb3dcclxuJHByaW50LWNvbG9yOiByZ2IoMTMwLCAxOTEsIDExMCk7IC8vbGlnaHRncmVlblxyXG4kcHJpbnQtY29sb3ItbHQ6IHJnYigyMzAsIDI1NSwgMjIxKTtcclxuJHNlbGVjdEdlb20tY29sb3I6IHJnYigyNTUsIDE3NCwgMCk7IC8vIGxpZ2h0IG9yYW5nZVxyXG4kc2VsZWN0R2VvbS1jb2xvci1sdDogcmdiKDI1NSwgMjI1LCAxNjApO1xyXG5cclxuLy8gJHByb2QtYmFja2dyb3VuZC1jb2xvcjogcmdiKDI1MCwyNTAsMjUwKTtcclxuLy8gJGJhY2tncm91bmQtY29sb3I6IHJnYigyMjAsMjIwLDIyMCk7XHJcbiRmdW5jdGlvbi10ZXh0LWNvbG9yOiByZ2IoMTkwLCAxNDAsIDMwKTtcclxuJGZ1bmN0aW9uLXRleHQtY29sb3IyOiByZ2IoMTgsIDEyNiwgMTM2KTtcclxuJGJhc2ljLWZ1bmN0aW9uLXRleHQtY29sb3I6IHJnYigyMDAsIDcwLCAxNTApO1xyXG4kY29tbWVudC1jb2xvcjogZGFya2dyZWVuO1xyXG4iLCIkcGFkZGluZzogNDBweDsgLy8gPyBub3QgdXNlZFxyXG4kc21hbGwtcGFkZGluZzogMTVweDtcclxuJGhlYWRlci1oZWlnaHQ6IDQwcHg7XHJcblxyXG4kZnNpemUxOiAxNXB4O1xyXG4kZnNpemUyOiAxMnB4O1xyXG4kZnNpemUzOiAzMHB4O1xyXG5cclxuJHBvcnQtc2l6ZTogMTVweDtcclxuJGRlZmF1bHQtc2lkZS1wYWRkaW5nOiAxNXB4O1xyXG5cclxuJGRpc2FibGVkLW9wYWNpdHk6IDAuNDsiXX0= */"

/***/ }),

/***/ "./src/app/views/view-editor/parameter-editor/parameter-editor.component.ts":
/*!**********************************************************************************!*\
  !*** ./src/app/views/view-editor/parameter-editor/parameter-editor.component.ts ***!
  \**********************************************************************************/
/*! exports provided: ParameterEditorComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ParameterEditorComponent", function() { return ParameterEditorComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _models_node__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @models/node */ "./src/app/shared/models/node/index.ts");
/* harmony import */ var _shared_parser__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @shared/parser */ "./src/app/shared/parser.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};



var canvas = document.createElement('canvas');
var ctx = canvas.getContext('2d');
ctx.font = 'bold 12px arial';
var ParameterEditorComponent = /** @class */ (function () {
    function ParameterEditorComponent() {
        this.selectInp = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        this.delete = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        this.disableProds = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        this.regAction = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
    }
    ParameterEditorComponent.prototype.deleteProd = function () {
        this.delete.emit();
    };
    ParameterEditorComponent.prototype.deleteChild = function (index) {
        this.regAction.emit([{ 'type': 'del', 'parent': undefined, 'index': index, 'prod': this.node.procedure[index] }]);
        this.node.procedure.splice(index, 1);
        _models_node__WEBPACK_IMPORTED_MODULE_1__["NodeUtils"].deselect_procedure(this.node);
    };
    ParameterEditorComponent.prototype.markDisabled = function () {
        // this.node.procedure.splice(index, 1);
        // NodeUtils.deselect_procedure(this.node);
        this.disableProds.emit();
    };
    ParameterEditorComponent.prototype.inputSize = function (val) {
        return ctx.measureText(val).width + 7;
    };
    ParameterEditorComponent.prototype.selectInput = function (event) {
        this.selectInp.emit(event);
    };
    ParameterEditorComponent.prototype.updateGlbs = function () {
        Object(_shared_parser__WEBPACK_IMPORTED_MODULE_2__["updateGlobals"])(this.node);
    };
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", Object)
    ], ParameterEditorComponent.prototype, "node", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", Object)
    ], ParameterEditorComponent.prototype, "flowchart", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", Boolean)
    ], ParameterEditorComponent.prototype, "prodCheck", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", Boolean)
    ], ParameterEditorComponent.prototype, "disableInput", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])(),
        __metadata("design:type", Object)
    ], ParameterEditorComponent.prototype, "selectInp", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])(),
        __metadata("design:type", Object)
    ], ParameterEditorComponent.prototype, "delete", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])(),
        __metadata("design:type", Object)
    ], ParameterEditorComponent.prototype, "disableProds", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])(),
        __metadata("design:type", Object)
    ], ParameterEditorComponent.prototype, "regAction", void 0);
    ParameterEditorComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'parameter-editor',
            template: __webpack_require__(/*! ./parameter-editor.component.html */ "./src/app/views/view-editor/parameter-editor/parameter-editor.component.html"),
            styles: [__webpack_require__(/*! ./parameter-editor.component.scss */ "./src/app/views/view-editor/parameter-editor/parameter-editor.component.scss")]
        })
    ], ParameterEditorComponent);
    return ParameterEditorComponent;
}());



/***/ }),

/***/ "./src/app/views/view-editor/parameter-editor/procedure-input-editor/procedure-input-editor.component.html":
/*!*****************************************************************************************************************!*\
  !*** ./src/app/views/view-editor/parameter-editor/procedure-input-editor/procedure-input-editor.component.html ***!
  \*****************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class='container--parameter' \r\n*ngIf='prod.meta?.module ==\"Input\"'\r\n[class.error]='prod.hasError' \r\n[class.selected]='prod.selected' \r\n[class.inputDisabled]='!prod.enabled' \r\n(mousedown)='disableShift($event)'\r\n(click)='selectInput($event)'>\r\n    <div class = \"btn-container\">\r\n        <div class = \"btns\">\r\n            <!-- delete button-->\r\n            <button class='btn' mat-icon-button title=\"Delete Procedure\" (click)='deleteProd()' tabindex=\"-1\">\r\n                <mat-icon class='icon'>delete_outline</mat-icon>\r\n            </button>\r\n            <button class='btn' mat-icon-button title=\"Disable Procedure\" (click)='markDisabled()' tabindex=\"-1\">\r\n                <mat-icon class='icon'>tv_off</mat-icon>\r\n            </button>\r\n        </div>\r\n    </div>\r\n    <div class = 'inp--type--container'>\r\n        <div class='inline-div'>\r\n            <ng-container *ngIf='prod.type == 10'>\r\n                <ng-container [ngSwitch]=\"prod.meta.inputMode\">\r\n                    <input class = 'input--type' *ngSwitchCase='0' [class.disabled-input]='true' value='Simple Input' disabled>\r\n                    <input class = 'input--type' *ngSwitchCase='1' [class.disabled-input]='true' value='Slider' disabled>\r\n                    <input class = 'input--type' *ngSwitchCase='2' [class.disabled-input]='true' value='Check Box' disabled>\r\n                    <input class = 'input--type' *ngSwitchCase='3' [class.disabled-input]='true' value='URL' disabled>\r\n                    <input class = 'input--type' *ngSwitchCase='4' [class.disabled-input]='true' value='File' disabled>\r\n                    <input class = 'input--type' *ngSwitchCase='5' [class.disabled-input]='true' value='Constant' disabled>\r\n                </ng-container>\r\n            </ng-container>\r\n            <input class = 'input--type' *ngIf='prod.type == 12' [class.disabled-input]='true' value='Add Model' size='5' disabled>\r\n        </div>\r\n        <div class='inline-div'>\r\n            <!-- <input [class.disabled-input]='true' value='Name:' disabled> -->\r\n            <input \r\n            [(ngModel)]='prod.args[0].value'\r\n            (blur)='varMod()'\r\n            [class.error]='prod.args[0].invalidVar'\r\n            [class.disablePointer]='disableInput'\r\n            (focus)='emitClearSelect($event)'\r\n            placeholder=\"name\"\r\n            [style.width.px]='inputSize(prod.args[0].value,\"Undefined\")'>\r\n        </div>\r\n        <!-- <div class='inline-div' *ngIf='prod.type == 12'>\r\n            <select [(ngModel)]=\"prod.meta.inputMode\" tabindex=\"-1\">\r\n                <option value='3' [selected]=\"prod.meta.inputMode == 3\">URL</option>\r\n                <option value='4' [selected]=\"prod.meta.inputMode == 4\">File</option>\r\n            </select>\r\n        </div> -->\r\n        <!-- <input [class.disabled-input]='true' value='Default:' disabled> -->\r\n        <div class='inline-div'>\r\n            <ng-container [ngSwitch]=\"prod.meta.inputMode\" >\r\n                <!-- Constant -->\r\n                <input *ngSwitchCase=\"PortTypes.Constant\" [(ngModel)]='prod.args[prod.argCount-1].default' placeholder='Default Value' \r\n                (focus)='emitClearSelect($event)'\r\n                [class.disablePointer]='disableInput'\r\n                [style.width.px]='inputSize(prod.args[prod.argCount-1].default,\"Default Value\")'>\r\n    \r\n                <!-- simpleinput -->\r\n                <input *ngSwitchCase=\"PortTypes.SimpleInput\" [(ngModel)]='prod.args[prod.argCount-1].default' placeholder='Default Value' \r\n                (focus)='emitClearSelect($event)'\r\n                [class.disablePointer]='disableInput'\r\n                [style.width.px]='inputSize(prod.args[prod.argCount-1].default,\"Default Value\")'>\r\n    \r\n                <!-- slider -->\r\n                <div class='div--slider' *ngSwitchCase=\"PortTypes.Slider\">\r\n                    <div class = 'input--container'>\r\n                        <input [(ngModel)]='prod.args[prod.argCount-1].step' placeholder='Step'\r\n                            (focus)='emitClearSelect($event)'\r\n                            [class.disablePointer]='disableInput'\r\n                            [style.width.px]='inputSize(prod.args[prod.argCount-1].step,\"Step\")'>\r\n                        <input [value]='prod.args[prod.argCount-1].min||\"\"' placeholder='Min'\r\n                            (blur)='updateMin(prod.args[prod.argCount-1], $event)'\r\n                            (keyup)='updateMin(prod.args[prod.argCount-1], $event)'\r\n                            (focus)='emitClearSelect($event)'\r\n                            [class.disablePointer]='disableInput'\r\n                            [style.width.px]='inputSize(prod.args[prod.argCount-1].min,\"Min\")'>\r\n                        <input [value]='prod.args[prod.argCount-1].max||\"\"' placeholder='Max'\r\n                            (blur)='updateMax(prod.args[prod.argCount-1], $event)'\r\n                            (keyup)='updateMax(prod.args[prod.argCount-1], $event)'\r\n                            (focus)='emitClearSelect($event)'\r\n                            [class.disablePointer]='disableInput'\r\n                            [style.width.px]='inputSize(prod.args[prod.argCount-1].max,\"Max\")'>\r\n                    </div>              \r\n                </div>\r\n                \r\n                <!-- checkbox -->\r\n                <div class = 'div--chbox' *ngSwitchCase=\"PortTypes.Checkbox\">\r\n                    <input class='chkbox' id = 'chbox_{{prod.ID}}' \r\n                        [(ngModel)]='prod.args[prod.argCount-1].default' \r\n                        [class.disablePointer]='disableInput'\r\n                        type=\"checkbox\">\r\n                    <label for = 'chbox_{{prod.ID}}'></label>\r\n    \r\n                </div>\r\n    \r\n                <!-- URL -->\r\n                <input *ngSwitchCase=\"PortTypes.URL\" [(ngModel)]='prod.args[prod.argCount-1].default' placeholder='Default URL'\r\n                    (focus)='emitClearSelect($event)'\r\n                    [class.disablePointer]='disableInput'\r\n                    [style.width.px]='inputSize(prod.args[prod.argCount-1].default,\"Default URL\")'>\r\n    \r\n                <!-- File -->\r\n                <div class='div--filebtn inline-div' *ngSwitchCase=\"PortTypes.File\" >\r\n                    <button class='filebtn' (click)=\"openFileBrowse(prod.ID)\" [class.disablePointer]='disableInput' >File</button>\r\n                    <input [class.disabled-input]='true' value='{{prod.args[prod.argCount-1].default.name}}' [style.width.px]='inputSize(prod.args[prod.argCount-1].default.name,\"\")' disabled>\r\n                    <input id='file_{{prod.ID}}' style='display: none;' (change)=\"onFileChange($event)\" \r\n                        type=\"file\">\r\n                </div>\r\n            </ng-container>\r\n        </div>\r\n        \r\n    </div>\r\n    <ng-container [ngSwitch]=\"prod.meta.inputMode\" >\r\n        <div class='div--slider' *ngSwitchCase=\"PortTypes.Slider\">\r\n            <div class = 'slider--container'>\r\n                <input class = 'slider-input' [(ngModel)]='prod.args[prod.argCount-1].default'\r\n                (focus)='emitClearSelect($event)'\r\n                [class.disablePointer]='disableInput'\r\n                [style.width.px]='inputSize(prod.args[prod.argCount-1].default,\"\")'>\r\n                <mat-slider\r\n                [(ngModel)]='prod.args[prod.argCount-1].default'\r\n                thumbLabel\r\n                step={{prod.args[prod.argCount-1].step||1}}\r\n                min={{prod.args[prod.argCount-1].min||0}}\r\n                max={{prod.args[prod.argCount-1].max||100}}></mat-slider>\r\n            </div>\r\n        </div> \r\n    </ng-container>\r\n    <div class = 'desc--container'>\r\n        <textarea id='{{prod.ID}}_desc' autogrow class='inp--desc' placeholder='Description' \r\n        (click)='emitClearSelect($event)'\r\n        [class.disablePointer]='disableInput'\r\n        [(ngModel)]='prod.meta.description'></textarea>\r\n    </div>\r\n</div>\r\n\r\n\r\n<!-- <div class='container container--parameter' *ngIf='prod.meta?.module==\"Output\"'>\r\n    <input class='inp--desc' placeholder='Return Description' [(ngModel)]='prod.meta.description'\r\n    [style.width.px]='inputSize(prod.meta.description,\"Return Description\")'>\r\n</div> -->"

/***/ }),

/***/ "./src/app/views/view-editor/parameter-editor/procedure-input-editor/procedure-input-editor.component.scss":
/*!*****************************************************************************************************************!*\
  !*** ./src/app/views/view-editor/parameter-editor/procedure-input-editor/procedure-input-editor.component.scss ***!
  \*****************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".container {\n  margin: 5px 0px; }\n\n.container--parameter {\n  margin: 0px 0px 2px 0px;\n  display: flex;\n  flex-flow: column nowrap;\n  color: #808080;\n  vertical-align: bottom;\n  border-bottom: 1px solid #808080;\n  border-left: 1px solid #808080;\n  overflow: hidden;\n  width: 100%; }\n\n.container--parameter.inputDisabled {\n    opacity: 0.4; }\n\n.container--parameter:hover .btns {\n    display: inline-flex; }\n\n.container--parameter.error {\n    border: 2px solid #E94858; }\n\n.container--parameter.selected {\n    border-left: 2px solid #00006d;\n    border-bottom: 2px solid #00006d; }\n\n.inline-div {\n  box-sizing: border-box;\n  display: inline-block;\n  height: 18px;\n  padding-bottom: 3px;\n  white-space: nowrap; }\n\ninput, select {\n  color: #373737;\n  background-color: transparent;\n  border: 2px solid #E6E6E6;\n  margin: 0px 2px;\n  height: 15px;\n  max-width: 95%;\n  vertical-align: bottom;\n  padding: 0px 0px 0px 6px;\n  font-family: sans-serif;\n  font-size: 12px; }\n\ninput:hover, input:focus, select:hover, select:focus {\n    background-color: white;\n    color: #373737;\n    border-color: #00006d; }\n\ninput.disabled-input, select.disabled-input {\n    padding: 0px;\n    border: none; }\n\ninput.disabled-input:hover, select.disabled-input:hover {\n      background-color: transparent;\n      color: #808080; }\n\ninput.error, select.error {\n    border: 2px solid #E94858; }\n\ninput.disablePointer, select.disablePointer {\n    pointer-events: none; }\n\nselect {\n  height: 17px; }\n\n.btn-container {\n  width: 100%;\n  display: flex;\n  flex-flow: row nowrap;\n  justify-content: flex-end;\n  position: relative; }\n\n.btns {\n  display: none;\n  flex-flow: row-reverse nowrap;\n  justify-content: flex-end;\n  padding-right: 8px;\n  background-color: #fafafb;\n  position: absolute; }\n\n.btns:hover {\n    display: inline-flex; }\n\n.btn {\n  height: 15px;\n  width: 15px;\n  padding: 0px;\n  background-color: transparent;\n  border: none;\n  float: right;\n  color: #808080; }\n\n.btn :hover {\n    color: #00006d; }\n\n.icon {\n  vertical-align: top;\n  font-size: 15px;\n  height: 15px;\n  width: 15px; }\n\n.inp--type--container {\n  display: flex;\n  flex-flow: row nowrap;\n  justify-content: flex-start;\n  margin-top: 1px;\n  box-sizing: border-box;\n  line-height: 15px;\n  min-width: -webkit-fit-content;\n  min-width: -moz-fit-content;\n  min-width: fit-content;\n  margin-bottom: 2px; }\n\n.inp--type--container .input--type {\n    color: #be8c1e;\n    font-weight: 550;\n    font-style: italic;\n    width: 90px; }\n\n.inp--type--container .filebtn {\n    width: 75px;\n    height: 18px;\n    border: none;\n    margin-left: 2px; }\n\n.inp--type--container .filebtn.disablePointer {\n      pointer-events: none; }\n\n.div--slider {\n  display: flex;\n  flex-flow: column nowrap; }\n\n.div--slider .input--container {\n    display: inline-flex;\n    width: 100%;\n    vertical-align: middle; }\n\n.div--slider .input--container .min-max {\n      white-space: nowrap; }\n\n.div--slider .input--container .min-max span {\n        padding: 0px 2px; }\n\n.div--slider .slider--container {\n    width: 100%;\n    display: flex;\n    flex-flow: row nowrap;\n    padding-right: 50px;\n    margin-left: 1px; }\n\n.div--slider .slider--container .slider-input {\n      height: 15px;\n      line-height: 15px;\n      position: relative;\n      top: 7px; }\n\n.div--slider .slider--container mat-slider {\n      width: 100%;\n      height: 30px;\n      padding: 0px; }\n\n.desc--container {\n  margin-top: 1px;\n  padding-right: 15px;\n  box-sizing: border-box;\n  height: -webkit-fit-content;\n  height: -moz-fit-content;\n  height: fit-content; }\n\n.desc--container .inp--desc {\n    margin-left: 3px;\n    color: #373737;\n    border: 2px solid #E6E6E6;\n    background-color: transparent;\n    padding-left: 5px;\n    font-family: sans-serif;\n    font-size: 12px;\n    min-width: 100%;\n    resize: none;\n    height: 15px; }\n\n.desc--container .inp--desc:hover, .desc--container .inp--desc:focus {\n      color: #373737;\n      border-color: #00006d;\n      background-color: white; }\n\n.desc--container .inp--desc.disablePointer {\n      pointer-events: none; }\n\n.chkbox {\n  display: none; }\n\n/*# sourceMappingURL=data:application/json;base64, */"

/***/ }),

/***/ "./src/app/views/view-editor/parameter-editor/procedure-input-editor/procedure-input-editor.component.ts":
/*!***************************************************************************************************************!*\
  !*** ./src/app/views/view-editor/parameter-editor/procedure-input-editor/procedure-input-editor.component.ts ***!
  \***************************************************************************************************************/
/*! exports provided: ProcedureInputEditorComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ProcedureInputEditorComponent", function() { return ProcedureInputEditorComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _models_port__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @models/port */ "./src/app/shared/models/port/index.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};


var keys = Object.keys(_models_port__WEBPACK_IMPORTED_MODULE_1__["InputType"]);
var canvas = document.createElement('canvas');
var ctx = canvas.getContext('2d');
ctx.font = '13px Arial';
var ProcedureInputEditorComponent = /** @class */ (function () {
    function ProcedureInputEditorComponent() {
        this.delete = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        this.deleteC = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        this.disableProds = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        this.selectInp = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        this.updateGlbs = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        this.PortTypes = _models_port__WEBPACK_IMPORTED_MODULE_1__["InputType"];
        this.PortTypesArr = keys.slice(keys.length / 2);
    }
    ProcedureInputEditorComponent.prototype.selectInput = function (event) {
        event.stopPropagation();
        this.selectInp.emit({ 'ctrl': event.ctrlKey || event.metaKey, 'shift': event.shiftKey, 'prod': this.prod });
    };
    ProcedureInputEditorComponent.prototype.emitClearSelect = function (event) {
        event.stopPropagation();
        this.selectInp.emit('clear');
    };
    ProcedureInputEditorComponent.prototype.editOptions = function () { };
    ProcedureInputEditorComponent.prototype.openFileBrowse = function (id) {
        document.getElementById("file_" + id).click();
    };
    ProcedureInputEditorComponent.prototype.onFileChange = function (event) {
        this.prod.args[this.prod.argCount - 1].default = event.target.files[0];
    };
    ProcedureInputEditorComponent.prototype.inputSize = function (val, defaultVal) {
        if (val === undefined || val === '') {
            return ctx.measureText(defaultVal).width + 8;
        }
        return ctx.measureText(val).width + 7;
    };
    // delete this procedure
    ProcedureInputEditorComponent.prototype.deleteProd = function () {
        if (!this.prod.selected) {
            this.deleteC.emit();
        }
        else {
            this.delete.emit();
        }
    };
    ProcedureInputEditorComponent.prototype.markDisabled = function () {
        if (!this.prod.selected) {
            this.prod.enabled = !this.prod.enabled;
        }
        else {
            this.disableProds.emit();
        }
    };
    ProcedureInputEditorComponent.prototype.updateMin = function (args, event) {
        if (event.type === 'keyup' && event.which !== 13) {
            return;
        }
        var currentVal = Number(event.target.value);
        if (currentVal !== 0 && !currentVal) {
            return;
        }
        if (Number(args.max) && Number(args.max) < currentVal) {
            args.min = args.max;
            event.target.value = args.min;
        }
        else {
            args.min = event.target.value;
        }
        if (!args.default || args.default < Number(args.min)) {
            args.default = Number(args.min);
        }
    };
    ProcedureInputEditorComponent.prototype.updateMax = function (args, event) {
        if (event.type === 'keyup' && event.which !== 13) {
            return;
        }
        var currentVal = Number(event.target.value);
        if (currentVal !== 0 && !currentVal) {
            return;
        }
        if (Number(args.min) && Number(args.min) > currentVal) {
            args.max = args.min;
            event.target.value = args.max;
        }
        else {
            args.max = event.target.value;
        }
        if (!args.default || args.default > Number(args.max)) {
            args.default = Number(args.max);
        }
    };
    // modify variable input: replace space " " with underscore "_"
    ProcedureInputEditorComponent.prototype.varMod = function () {
        if (!this.prod.args[0].value) {
            return;
        }
        this.updateGlbs.emit('');
        // this.prod.args[0].value = modifyVarArg(this.prod.args[0]);
    };
    ProcedureInputEditorComponent.prototype.disableShift = function (event) {
        if (event.target.tagName === 'INPUT') {
            return;
        }
        if (event.shiftKey) {
            event.preventDefault();
        }
    };
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", Object)
    ], ProcedureInputEditorComponent.prototype, "prod", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", Boolean)
    ], ProcedureInputEditorComponent.prototype, "disableInput", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])(),
        __metadata("design:type", Object)
    ], ProcedureInputEditorComponent.prototype, "delete", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])(),
        __metadata("design:type", Object)
    ], ProcedureInputEditorComponent.prototype, "deleteC", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])(),
        __metadata("design:type", Object)
    ], ProcedureInputEditorComponent.prototype, "disableProds", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])(),
        __metadata("design:type", Object)
    ], ProcedureInputEditorComponent.prototype, "selectInp", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])(),
        __metadata("design:type", Object)
    ], ProcedureInputEditorComponent.prototype, "updateGlbs", void 0);
    ProcedureInputEditorComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'procedure-input-editor',
            template: __webpack_require__(/*! ./procedure-input-editor.component.html */ "./src/app/views/view-editor/parameter-editor/procedure-input-editor/procedure-input-editor.component.html"),
            styles: [__webpack_require__(/*! ./procedure-input-editor.component.scss */ "./src/app/views/view-editor/parameter-editor/procedure-input-editor/procedure-input-editor.component.scss")]
        }),
        __metadata("design:paramtypes", [])
    ], ProcedureInputEditorComponent);
    return ProcedureInputEditorComponent;
}());



/***/ }),

/***/ "./src/app/views/view-editor/procedure-item/procedure-item.component.html":
/*!********************************************************************************!*\
  !*** ./src/app/views/view-editor/procedure-item/procedure-item.component.html ***!
  \********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class='container--line' \r\n    [class.selected]=\"data.selected\"\r\n    [class.error]=\"data.hasError\"\r\n    [class.disabled]=\"!data.enabled\"\r\n    [class.printing]='data.print'\r\n    [class.selectGeom]='data.selectGeom'\r\n    [ngSwitch]=\"data.type\"\r\n    (click)='emitSelect($event, data)'\r\n    (mousedown)='disableShift($event)'\r\n    *ngIf= 'data.type != ProcedureTypes.Return && data.type != ProcedureTypes.Constant'>\r\n    <div class='container--item' >\r\n        <!-- Variable Assignment Template -->\r\n        <div class='line--item' *ngSwitchCase=\"ProcedureTypes.Variable\">\r\n            <input class='input--var'\r\n                id='argVar_{{data.ID}}'\r\n                [(ngModel)]='data.args[0].value'\r\n                [class.error]='data.args[0].invalidVar'\r\n                [class.linked]='data.args[0].linked'\r\n                [class.disabled]='disableInput'\r\n                (focus)='onInputFocus(0, true)'\r\n                (blur)='varMod()'\r\n                placeholder={{data.args[0].name}}\r\n                [style.width.px]='inputSize(data.args[0].value||data.args[0].name)'>  \r\n            = \r\n            <div style='position:relative; display:inline-block;'>\r\n                <input class='input--arg'\r\n                [(ngModel)]='data.args[1].value'\r\n                [class.error]='data.args[1].invalidVar'\r\n                [class.linked]='data.args[1].linked'\r\n                [class.disabled]='disableInput'\r\n                (focus)='onInputFocus(1)'\r\n                (blur)='argMod($event, 1)'\r\n                placeholder={{data.args[1].name}}\r\n                [style.width.px]='inputSize(data.args[1].value||data.args[1].name)'>\r\n                <!-- <p class='input--arg input--arg--p' [innerHTML]='argHighlight(data.args[1].value)'></p> -->\r\n            </div>\r\n            </div>\r\n\r\n        <!-- IF Template -->\r\n        <ng-container *ngSwitchCase=\"ProcedureTypes.If\">\r\n            <div class='line--item' >\r\n                <div class='basic-function-text'>\r\n                    If\r\n                </div>\r\n                <input class='input--arg'\r\n                        [(ngModel)]='data.args[0].value'\r\n                        [class.error]='data.args[0].invalidVar'\r\n                        [class.linked]='data.args[0].linked'\r\n                        [class.disabled]='disableInput'\r\n                        (focus)='onInputFocus(0)'\r\n                        (blur)='argMod($event, 0)'\r\n                        placeholder={{data.args[0].name}}\r\n                        [style.width.px]='inputSize(data.args[0].value||data.args[0].name)'\r\n                        >\r\n    \r\n            </div>\r\n            <div class='container--nested'>\r\n                <procedure-item \r\n                    *ngFor=\"let line of data?.children; let idx=index\" \r\n                    [data]=\"line\"\r\n                    [disableInput]=\"disableInput\"\r\n                    (select)='selectChild($event, line)'\r\n                    (delete)='emitDelete(true)'\r\n                    (deleteC)='deleteChild(idx)'\r\n                    (notifyError)='emitNotifyError($event)'\r\n                    (helpText)='emitHelpText($event)'></procedure-item>\r\n            </div>\r\n        </ng-container>\r\n\r\n        <!-- ELSEIF Template -->\r\n        <ng-container *ngSwitchCase=\"ProcedureTypes.Elseif\">\r\n            <div class='line--item'>\r\n                <div class='basic-function-text'>\r\n                    Else if\r\n                </div>\r\n                \r\n            \r\n            <input class='input--arg'\r\n                    [(ngModel)]='data.args[0].value'\r\n                    [class.error]='data.args[0].invalidVar'\r\n                    [class.linked]='data.args[0].linked'\r\n                    [class.disabled]='disableInput'\r\n                    (focus)='onInputFocus(0)'\r\n                    (blur)='argMod($event, 0)'\r\n                    placeholder={{data.args[0].name}}\r\n                    [style.width.px]='inputSize(data.args[0].value||data.args[0].name)'\r\n                    >  \r\n            </div>\r\n            <div class='container--nested'>\r\n                <procedure-item \r\n                    *ngFor=\"let line of data?.children; let idx=index\" \r\n                    [data]=\"line\"\r\n                    [disableInput]=\"disableInput\"\r\n                    (select)='selectChild($event, line)'\r\n                    (delete)='emitDelete(true)'\r\n                    (deleteC)='deleteChild(idx)'\r\n                    (notifyError)='emitNotifyError($event)'\r\n                    (helpText)='emitHelpText($event)'></procedure-item>\r\n            </div>\r\n        </ng-container>\r\n\r\n        <!-- ELSE Template -->\r\n        <ng-container *ngSwitchCase=\"ProcedureTypes.Else\">\r\n            <div class='line--item'>\r\n                <div class='basic-function-text'>\r\n                    Else\r\n                </div>\r\n            </div>\r\n                        \r\n            <div class='container--nested'>\r\n                <procedure-item \r\n                    *ngFor=\"let line of data?.children; let idx=index\" \r\n                    [data]=\"line\"\r\n                    [disableInput]=\"disableInput\"\r\n                    (select)='selectChild($event, line)'\r\n                    (delete)='emitDelete(true)'\r\n                    (deleteC)='deleteChild(idx)'\r\n                    (notifyError)='emitNotifyError($event)'\r\n                    (helpText)='emitHelpText($event)'></procedure-item>\r\n            </div>\r\n        </ng-container>\r\n    \r\n\r\n\r\n\r\n        <!-- BREAK Template -->\r\n        <div class='line--item' *ngSwitchCase=\"ProcedureTypes.Break\">\r\n            <div class='basic-function-text'>\r\n                Break\r\n            </div>\r\n        </div>\r\n\r\n        <!-- CONTINUE Template -->\r\n        <div class='line--item' *ngSwitchCase=\"ProcedureTypes.Continue\">\r\n            <div class='basic-function-text'>\r\n                Continue\r\n            </div>\r\n        </div>\r\n\r\n\r\n        <!-- FOREACH Template -->\r\n        <ng-container *ngSwitchCase=\"ProcedureTypes.Foreach\">\r\n            <div class='line--item'>\r\n                <div class='basic-function-text'>\r\n                    Foreach\r\n                </div>\r\n                <input class='input--arg'\r\n                    [(ngModel)]='data.args[0].value'\r\n                    [class.error]='data.args[0].invalidVar'\r\n                    [class.linked]='data.args[0].linked'\r\n                    [class.disabled]='disableInput'\r\n                    (focus)='onInputFocus(0, true)'\r\n                    (blur)='varMod()'\r\n                    placeholder={{data.args[0].name}}\r\n                    [style.width.px]='inputSize(data.args[0].value||data.args[0].name)'\r\n                    >  \r\n                <div class='basic-function-text'>\r\n                    in\r\n                </div>\r\n                <input class='input--arg'\r\n                    [(ngModel)]='data.args[1].value'\r\n                    [class.error]='data.args[1].invalidVar'\r\n                    [class.linked]='data.args[1].linked'\r\n                    [class.disabled]='disableInput'\r\n                    (focus)='onInputFocus(1)'\r\n                    (blur)='argMod($event, 1)'\r\n                    placeholder={{data.args[1].name}}\r\n                    [style.width.px]='inputSize(data.args[1].value||data.args[1].name)'\r\n                        >  \r\n                        \r\n            </div>\r\n                                \r\n            <div class='container--nested'>\r\n                <procedure-item \r\n                    *ngFor=\"let line of data?.children; let idx=index\" \r\n                    [data]=\"line\"\r\n                    [disableInput]=\"disableInput\"\r\n                    (select)='selectChild($event, line)'\r\n                    (delete)='emitDelete(true)'\r\n                    (deleteC)='deleteChild(idx)'\r\n                    (notifyError)='emitNotifyError($event)'\r\n                    (helpText)='emitHelpText($event)'></procedure-item>\r\n            </div>\r\n        </ng-container>\r\n    \r\n\r\n\r\n        <!-- WHILE Template -->\r\n        <ng-container *ngSwitchCase=\"ProcedureTypes.While\">\r\n            <div class='line--item'>\r\n                <div class='basic-function-text'>\r\n                    While\r\n                </div>\r\n                <input class='input--arg' \r\n                        [(ngModel)]='data.args[0].value'\r\n                        [class.error]='data.args[0].invalidVar'\r\n                        [class.linked]='data.args[0].linked'\r\n                        [class.disabled]='disableInput'\r\n                        (focus)='onInputFocus(0)'\r\n                        (blur)='argMod($event, 0)'\r\n                        placeholder={{data.args[0].name}}\r\n                        [style.width.px]='inputSize(data.args[0].value||data.args[0].name)'\r\n                        >  \r\n    \r\n            </div>\r\n                                    \r\n            <div class='container--nested'>\r\n                <procedure-item \r\n                    *ngFor=\"let line of data?.children; let idx=index\" \r\n                    [data]=\"line\"\r\n                    [disableInput]=\"disableInput\"\r\n                    (select)='selectChild($event, line)'\r\n                    (delete)='emitDelete(true)'\r\n                    (deleteC)='deleteChild(idx)'\r\n                    (notifyError)='emitNotifyError($event)'\r\n                    (helpText)='emitHelpText($event)'></procedure-item>\r\n            </div>\r\n        </ng-container>\r\n    \r\n\r\n\r\n        <!-- Constant (Not visible) Template -->\r\n        <div class='line--item' *ngSwitchCase=\"ProcedureTypes.Constant\">\r\n        </div>\r\n        \r\n        <!-- Return (Not visible) Template -->\r\n        <div class='line--item' *ngSwitchCase=\"ProcedureTypes.Return\">\r\n        </div>\r\n        \r\n        <!-- Blank (always the first procedure of if/else/else if/for/while) -->\r\n        <div class='line--blank' *ngSwitchCase=\"ProcedureTypes.Blank\">\r\n        </div>\r\n\r\n        <!-- Comment -->\r\n        <div class='line--item' *ngSwitchCase=\"ProcedureTypes.Comment\">\r\n            <input class='input--comment' \r\n            [(ngModel)]='data.args[0].value'\r\n            [class.disabled]='disableInput'\r\n            placeholder='Comment'\r\n            [style.width.px]='inputSize(data.args[0].value||\"Comment\")'\r\n            >\r\n        </div>\r\n\r\n        \r\n        <!-- Function Template -->\r\n        <div class='line--item' *ngSwitchCase=\"ProcedureTypes.Function\">\r\n            <ng-container *ngIf=\"data.args[0].name !=='__none__'\">\r\n                <input class='input--var'\r\n                [(ngModel)]='data.args[0].value'\r\n                [class.error]='data.args[0].invalidVar'\r\n                [class.linked]='data.args[0].linked'\r\n                [class.disabled]='disableInput'\r\n                (focus)='onInputFocus(0, true)'\r\n                (blur)='varMod()'\r\n                placeholder={{data.args[0].name}}\r\n                [style.width.px]='inputSize(data.args[0].value||data.args[0].name)'>  \r\n                = \r\n\r\n            </ng-container>\r\n            <div class='function-text'><span class='module-name'>{{data.meta.module}}.</span>{{data.meta.name}} </div>\r\n\r\n            <ng-container *ngFor='let p of data.args.slice(1);let i=index'>\r\n                <select class='input--arg' [(ngModel)]='p.value' *ngIf=\"checkEnum(p, i); else default_template\" >\r\n                    <option *ngFor='let opt of getEnum(i)' value=\"'{{opt}}'\">{{opt}}</option>\r\n                    <!--\r\n                        <option *ngFor='let opt of Modules[data.meta.module][ModuleDoc[data.meta.module][data.meta.name].parameters[i].type]' value={{opt}}>{{opt}}</option>\r\n                    -->\r\n                </select>    \r\n                \r\n                <ng-template #default_template>\r\n                    <input class='input--arg' \r\n                    *ngIf=\"p.name[0] !== '_'\" \r\n                    [(ngModel)]='p.value'\r\n                    [class.error]='p.invalidVar'\r\n                    [class.linked]='p.linked'\r\n                    [class.disabled]='disableInput'\r\n                    (focus)='onInputFocus(i+1)'\r\n                    (blur)='argMod($event, i+1)'\r\n                    placeholder={{p.name}}\r\n                    [style.width.px]='inputSize(p.value||p.name)'\r\n                    >\r\n                </ng-template>\r\n\r\n            </ng-container>\r\n\r\n        </div>\r\n\r\n        <!-- Imported Function Template -->\r\n        <div class='line--item' *ngSwitchCase=\"ProcedureTypes.Imported\">\r\n            <ng-container *ngIf=\"data.args[0].name !=='__none__'\">\r\n                <input class='input--var'\r\n                    [(ngModel)]='data.args[0].value'\r\n                    [class.error]='data.args[0].invalidVar'\r\n                    [class.linked]='data.args[0].linked'\r\n                    [class.disabled]='disableInput'\r\n                    (focus)='onInputFocus(0, true)'\r\n                    (blur)='varMod()'\r\n                    placeholder={{data.args[0].name}}\r\n                    [style.width.px]='inputSize(data.args[0].value||data.args[0].name)'>\r\n                = \r\n            </ng-container>\r\n            <div class='function-text'><span class='module-name'>user.</span>{{data.meta.name}} </div> \r\n            \r\n            <ng-container *ngFor='let p of data.args.slice(1);let i=index'>\r\n                <input class='input--arg' \r\n                    *ngIf='p.type !== 5'\r\n                    [(ngModel)]='p.value'\r\n                    [class.error]='p.invalidVar'\r\n                    [class.linked]='p.linked'\r\n                    [class.disabled]='disableInput'\r\n                    (focus)='onInputFocus(i+1)'\r\n                    (blur)='argMod($event, i+1)'\r\n                    placeholder={{p.name}}\r\n                    [style.width.px]='inputSize(p.value||p.name)'>    \r\n            </ng-container>\r\n        </div>\r\n    </div>\r\n    <div class = \"btn-container\">\r\n        <div class = \"btns\">\r\n            <!-- delete button-->\r\n            <!-- <button id = 'delete-btn' *ngIf='data.type != ProcedureTypes.Blank && data.type != ProcedureTypes.Return' class='btn' mat-icon-button title=\"Delete Procedure\" (click)=\"emitDelete()\" tabindex=\"-1\">\r\n                <mat-icon class='icon'>delete_outline</mat-icon>\r\n            </button> -->\r\n            <!-- Disable button-->\r\n            <button id = 'disable-btn' *ngIf='data.type != ProcedureTypes.Blank && data.type != ProcedureTypes.Comment' class='btn' mat-icon-button title=\"Disable Procedure\" (click)='markDisabled($event)' tabindex=\"-1\">\r\n                <mat-icon class='icon'>tv_off</mat-icon>\r\n            </button>\r\n            <!-- Select button -->\r\n            <button id = 'selectGeom-btn' *ngIf='canSelectGeom()' class='btn' mat-icon-button title=\"Select Geometry Result In Viewer\" (click)=\"markSelectGeom($event)\" tabindex=\"-1\">\r\n                <mat-icon class='icon'>near_me</mat-icon>\r\n            </button>\r\n            <!-- Print button-->\r\n            <button id = 'print-btn' *ngIf='canBePrinted()' class='btn' mat-icon-button title=\"Print Result In Console\" (click)='markPrint($event)' tabindex=\"-1\">\r\n                <mat-icon class='icon'>print</mat-icon>\r\n            </button>\r\n            <!-- help button-->\r\n            <button *ngIf='haveHelpText()' class='btn' mat-icon-button title=\"Help\" tabindex=\"-1\" (click)='emitHelpText(undefined)'>\r\n                <mat-icon class='icon'>help</mat-icon>\r\n            </button>\r\n        </div>\r\n    </div>\r\n</div>\r\n"

/***/ }),

/***/ "./src/app/views/view-editor/procedure-item/procedure-item.component.scss":
/*!********************************************************************************!*\
  !*** ./src/app/views/view-editor/procedure-item/procedure-item.component.scss ***!
  \********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".container--nested {\n  padding-left: 0px; }\n\n.container--line {\n  background-color: transparent;\n  font-size: 12px;\n  margin: 0px 5px 2px 8px;\n  padding: 0px;\n  padding-bottom: 1px;\n  padding-left: 2px;\n  border-bottom: 1px solid #999999;\n  border-left: 1px solid #999999;\n  color: #808080;\n  opacity: 1;\n  display: flex;\n  flex-flow: column nowrap;\n  justify-content: space-between;\n  flex-grow: 0;\n  flex-shrink: 0;\n  overflow-x: hidden;\n  width: calc(100% - 15px); }\n\n.container--line.disabled {\n    opacity: 0.4; }\n\n.container--line.disabled .btns {\n      display: inline-flex; }\n\n.container--line.disabled .btns #disable-btn {\n        display: flex;\n        justify-content: center; }\n\n.container--line.disabled .btns #disable-btn:hover {\n          color: #00006d; }\n\n.container--line.disabled.selected {\n      border-bottom: 2px solid #00006d; }\n\n.container--line.disabled:hover .btns #disable-btn {\n      order: 0; }\n\n.container--line.disabled .input--var, .container--line.disabled .input--arg {\n    border: 2px solid #E6E6E6 !important; }\n\n.container--line.selected {\n    border-bottom: 2px solid #00006d;\n    border-left: 2px solid #00006d;\n    padding-bottom: 0px;\n    padding-left: 1px; }\n\n.container--line.printing:not(.disabled) {\n    border-bottom: 2px solid #82bf6e;\n    border-left: 2px solid #82bf6e;\n    padding-bottom: 0px;\n    padding-left: 1px; }\n\n.container--line.printing:not(.disabled) #print-btn {\n      color: #82bf6e;\n      background-color: #fafafb; }\n\n.container--line.printing:not(.disabled):hover {\n      background-color: #e6ffdd; }\n\n.container--line.printing:not(.disabled):hover #print-btn {\n        background-color: transparent; }\n\n.container--line.printing:not(.disabled).selected {\n      border-bottom: 2px solid #00006d;\n      background-color: #e6ffdd; }\n\n.container--line.printing:not(.disabled).selected #print-btn {\n        background-color: transparent; }\n\n.container--line.printing .btns {\n    display: inline-flex; }\n\n.container--line.printing .btns .btn {\n      background-color: inherit; }\n\n.container--line.printing .btns #print-btn {\n      display: flex;\n      justify-content: center; }\n\n.container--line.printing .btns #print-btn:hover {\n        color: #00006d; }\n\n.container--line.printing.selected {\n    border-bottom: 2px solid #00006d;\n    background-color: #e6ffdd; }\n\n.container--line.printing:hover .btns #print-btn {\n    order: 1; }\n\n.container--line.selectGeom:not(.disabled) {\n    border-bottom: 2px solid #ffae00;\n    padding-bottom: 0px;\n    padding-left: 1px; }\n\n.container--line.selectGeom:not(.disabled) #selectGeom-btn {\n      color: #ffae00;\n      background-color: #fafafb; }\n\n.container--line.selectGeom:not(.disabled):hover {\n      background-color: #ffe1a0; }\n\n.container--line.selectGeom:not(.disabled):hover #selectGeom-btn {\n        background-color: transparent; }\n\n.container--line.selectGeom:not(.disabled).selected {\n      border-bottom: 2px solid #00006d;\n      background-color: #ffe1a0; }\n\n.container--line.selectGeom:not(.disabled).selected #selectGeom-btn {\n        background-color: transparent; }\n\n.container--line.selectGeom .btns {\n    display: inline-flex; }\n\n.container--line.selectGeom .btns .btn {\n      background-color: inherit; }\n\n.container--line.selectGeom .btns #selectGeom-btn {\n      display: flex;\n      justify-content: center; }\n\n.container--line.selectGeom .btns #selectGeom-btn:hover {\n        color: #00006d; }\n\n.container--line.selectGeom.selected {\n    border-bottom: 2px solid #00006d;\n    background-color: #ffe1a0; }\n\n.container--line.selectGeom:hover .btns #selectGeom-btn {\n    order: 1; }\n\n.container--line.error:not(.disabled) {\n    border-bottom: 2px solid #E94858;\n    border-left: 2px solid #E94858;\n    padding-bottom: 0px;\n    padding-left: 1px; }\n\n.container--line.error:not(.disabled) .btn {\n      background-color: inherit; }\n\n.container--line.error:not(.disabled).selected {\n      border-bottom: 2px solid #00006d;\n      background-color: #ffdce0; }\n\n.container--line.error:not(.disabled):hover {\n      background-color: #ffdce0; }\n\n.container--line .input--var {\n    font-size: 12px;\n    min-width: 10px;\n    background-color: #fafafb;\n    margin-right: 5px;\n    border: 2px solid #E6E6E6;\n    padding-left: 6px; }\n\n.container--line .input--var.linked {\n      border: 2px solid #ffae00; }\n\n.container--line .input--var.error {\n      border: 2px solid #E94858; }\n\n.container--line .input--var:focus, .container--line .input--var:hover {\n      border-color: #00006d;\n      background-color: white; }\n\n.container--line .input--var.disabled {\n      pointer-events: none; }\n\n.container--line .input--arg {\n    font-size: 12px;\n    resize: horizontal;\n    min-width: 10px;\n    background-color: #fafafb;\n    margin-left: 5px;\n    border: 2px solid #E6E6E6;\n    padding-left: 6px; }\n\n.container--line .input--arg.linked {\n      border: 2px solid #ffae00; }\n\n.container--line .input--arg.error {\n      border: 2px solid #E94858; }\n\n.container--line .input--arg:focus, .container--line .input--arg:hover {\n      border-color: #00006d;\n      background-color: white; }\n\n.container--line .input--arg.disabled {\n      pointer-events: none; }\n\n.container--line .input--comment {\n    font-size: 12px;\n    resize: horizontal;\n    min-width: 200px;\n    color: darkgreen;\n    font-style: italic;\n    background-color: transparent;\n    margin: 2px;\n    border: 0px;\n    border-left: 2px solid darkgreen;\n    padding-left: 3px; }\n\n.container--line .input--comment.disabled {\n      pointer-events: none; }\n\n.container--line:hover {\n    background-color: #E6E6E6; }\n\n.container--line:hover .btn {\n      background-color: inherit; }\n\n.container--item {\n  position: relative;\n  padding-bottom: 2px;\n  border: none;\n  display: inline-block;\n  width: 100%;\n  white-space: nowrap;\n  overflow-x: scroll; }\n\n.container--item::-webkit-scrollbar {\n    height: 3px; }\n\n.container--item::-webkit-scrollbar-track {\n    background: transparent; }\n\n.container--item::-webkit-scrollbar-thumb {\n    background: transparent; }\n\n.container--item::-webkit-scrollbar-thumb:hover {\n    background: #808080; }\n\n.container--item:hover::-webkit-scrollbar-thumb {\n    background: #808080; }\n\n.container--item:hover + .btn-container .btns {\n  display: inline-flex; }\n\n.container--item:hover + .btn-container .btns .btn {\n    display: flex;\n    justify-content: center;\n    background-color: inherit; }\n\n.btn-container {\n  position: relative;\n  width: 100%;\n  display: flex;\n  flex-flow: row nowrap;\n  background-color: inherit;\n  justify-content: flex-end;\n  order: -1;\n  z-index: 2; }\n\n.btn-container:hover .btns {\n    display: inline-flex; }\n\n.btn-container:hover .btns .btn {\n      display: flex;\n      justify-content: center;\n      background-color: inherit; }\n\n.btns {\n  position: absolute;\n  display: none;\n  flex-flow: row-reverse nowrap;\n  justify-content: flex-end;\n  background-color: inherit; }\n\n.btns:hover {\n    display: inline-flex; }\n\n.btn {\n  width: 15px;\n  background-color: #fafafb;\n  border: none;\n  color: #808080;\n  display: none;\n  overflow: hidden;\n  vertical-align: center;\n  order: 4; }\n\n.btn:hover {\n    color: #00006d; }\n\n.icon {\n  vertical-align: center;\n  width: 15px;\n  height: 17px;\n  margin: 1px;\n  font-size: 12px; }\n\n.line--item {\n  color: #808080;\n  display: inline-block;\n  padding-right: 60px; }\n\n.line--blank {\n  height: 8px; }\n\n.line--blank:hover {\n    background-color: white;\n    border-color: #00006d; }\n\n/*\r\n.hasChildren::before{\r\n    content: '\\25B6';\r\n    position: absolute;\r\n    left: 3px;\r\n    font-size: 8px;\r\n}\r\n*/\n\n.function-text {\n  display: inline-block;\n  white-space: nowrap;\n  font-style: italic;\n  color: #be8c1e;\n  font-weight: 550;\n  text-align: center;\n  min-height: 17px; }\n\n.function-text .module-name {\n    color: #00006d; }\n\n.basic-function-text {\n  display: inline-block;\n  white-space: nowrap;\n  font-style: italic;\n  color: #c84696;\n  font-weight: 550;\n  text-align: center;\n  min-height: 17px; }\n\n.basic-function-text .module-name {\n    color: #00006d; }\n\r\n/*# sourceMappingURL=data:application/json;base64, */"

/***/ }),

/***/ "./src/app/views/view-editor/procedure-item/procedure-item.component.ts":
/*!******************************************************************************!*\
  !*** ./src/app/views/view-editor/procedure-item/procedure-item.component.ts ***!
  \******************************************************************************/
/*! exports provided: ProcedureItemComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ProcedureItemComponent", function() { return ProcedureItemComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _models_procedure__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @models/procedure */ "./src/app/shared/models/procedure/index.ts");
/* harmony import */ var _shared_decorators__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @shared/decorators */ "./src/app/shared/decorators/index.ts");
/* harmony import */ var _modules__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @modules */ "./src/assets/core/modules/index.ts");
/* harmony import */ var _services__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @services */ "./src/app/shared/services/index.ts");
/* harmony import */ var _shared_parser__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @shared/parser */ "./src/app/shared/parser.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};






var canvas = document.createElement('canvas');
var ctx = canvas.getContext('2d');
ctx.font = '12px Arial';
var ProcedureItemComponent = /** @class */ (function () {
    function ProcedureItemComponent(dataService) {
        this.dataService = dataService;
        this.delete = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        this.deleteC = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        this.select = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        this.copied = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        this.pasteOn = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        this.helpText = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        this.notifyError = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        this.ProcedureTypes = _models_procedure__WEBPACK_IMPORTED_MODULE_1__["ProcedureTypes"];
        this.keys = Object.keys(_models_procedure__WEBPACK_IMPORTED_MODULE_1__["ProcedureTypes"]);
        this.ProcedureTypesArr = this.keys.slice(this.keys.length / 2);
        this.ModuleDoc = _shared_decorators__WEBPACK_IMPORTED_MODULE_2__["ModuleDocList"];
    }
    // select this procedure
    ProcedureItemComponent.prototype.emitSelect = function (event, procedure) {
        event.stopPropagation();
        this.select.emit({ 'ctrl': event.ctrlKey || event.metaKey, 'shift': event.shiftKey, 'prod': procedure });
    };
    ProcedureItemComponent.prototype.disableShift = function (event) {
        if (event.target.tagName === 'INPUT') {
            return;
        }
        if (event.shiftKey) {
            event.preventDefault();
        }
    };
    // select child procedure (after receiving emitSelect from child procedure)
    ProcedureItemComponent.prototype.selectChild = function (event, procedure) {
        this.select.emit(event);
    };
    ProcedureItemComponent.prototype.markSelectGeom = function (event) {
        event.stopPropagation();
        if (!this.data.selectGeom) {
            this.unselectGeomRecursive(this.dataService.node.procedure);
        }
        this.data.selectGeom = !this.data.selectGeom;
    };
    ProcedureItemComponent.prototype.unselectGeomRecursive = function (prodList) {
        for (var _i = 0, prodList_1 = prodList; _i < prodList_1.length; _i++) {
            var prod = prodList_1[_i];
            if (prod.selectGeom) {
                prod.selectGeom = false;
                return true;
            }
            if (prod.children) {
                if (this.unselectGeomRecursive(prod.children)) {
                    return true;
                }
            }
        }
        return false;
    };
    ProcedureItemComponent.prototype.markPrint = function (event) {
        event.stopPropagation();
        if (!this.data.selected) {
            this.data.print = !this.data.print;
            return;
        }
        var prodList = this.dataService.node.state.procedure;
        var newPrint;
        var i = prodList.length - 1;
        while (i >= 0 && !(prodList[i].argCount > 0 && prodList[i].args[0].name === 'var_name')) {
            i--;
        }
        if (i === -1) {
            return;
        }
        newPrint = !prodList[i].print;
        for (var _i = 0, prodList_2 = prodList; _i < prodList_2.length; _i++) {
            var prod = prodList_2[_i];
            if (prod.argCount > 0 && prod.args[0].name === 'var_name') {
                prod.print = newPrint;
            }
        }
        // this.data.print = !this.data.print;
    };
    ProcedureItemComponent.prototype.markDisabled = function (event) {
        event.stopPropagation();
        if (!this.data.selected) {
            this.data.enabled = !this.data.enabled;
            return;
        }
        var prodList = this.dataService.node.state.procedure;
        var newEnabled = !prodList[prodList.length - 1].enabled;
        for (var _i = 0, prodList_3 = prodList; _i < prodList_3.length; _i++) {
            var prod = prodList_3[_i];
            if (prod.type === _models_procedure__WEBPACK_IMPORTED_MODULE_1__["ProcedureTypes"].Blank || prod.type === _models_procedure__WEBPACK_IMPORTED_MODULE_1__["ProcedureTypes"].Comment) {
                continue;
            }
            prod.enabled = newEnabled;
        }
        // this.data.enabled = !this.data.enabled;
    };
    // delete child procedure (after receiving emitDelete from child procedure)
    ProcedureItemComponent.prototype.deleteChild = function (index) {
        this.dataService.registerEdtAction([{ 'type': 'del', 'parent': this.data, 'index': index, 'prod': this.data.children[index] }]);
        this.data.children.splice(index, 1);
    };
    // delete this procedure
    ProcedureItemComponent.prototype.emitDelete = function (check) {
        if (check) {
            this.delete.emit();
        }
        else if (!this.data.selected) {
            this.deleteC.emit();
        }
        else {
            this.delete.emit();
        }
    };
    ProcedureItemComponent.prototype.canBePrinted = function () {
        return this.data.argCount > 0 && this.data.args[0].name === 'var_name';
    };
    ProcedureItemComponent.prototype.canSelectGeom = function () {
        var check = this.data.argCount > 0 && this.data.args[0].name === 'var_name';
        if (!check) {
            return false;
        }
        if (this.data.type !== _models_procedure__WEBPACK_IMPORTED_MODULE_1__["ProcedureTypes"].Function) {
            return true;
        }
        var returns = this.ModuleDoc[this.data.meta.module][this.data.meta.name].returns;
        if (returns.length < 5) {
            return false;
        }
        if (returns.slice(0, 5).toLowerCase() === 'entit') {
            return true;
        }
        return false;
    };
    ProcedureItemComponent.prototype.haveHelpText = function () {
        return (this.data.type === 8 || this.data.type === 9);
    };
    ProcedureItemComponent.prototype.emitHelpText = function ($event) {
        if ($event) {
            this.helpText.emit($event);
            return;
        }
        try {
            if (this.data.type === _models_procedure__WEBPACK_IMPORTED_MODULE_1__["ProcedureTypes"].Imported) {
                this.helpText.emit(this.data.meta.name);
                // this.helpText.emit(this.ModuleDoc[this.data.meta.module][this.data.meta.name]);
            }
            else {
                this.helpText.emit(this.ModuleDoc[this.data.meta.module][this.data.meta.name]);
            }
        }
        catch (ex) {
            this.helpText.emit('error');
        }
    };
    // modify variable input: replace space " " with underscore "_"
    ProcedureItemComponent.prototype.varMod = function () {
        Object(_shared_parser__WEBPACK_IMPORTED_MODULE_5__["modifyVar"])(this.data, this.dataService.node.procedure);
        Object(_shared_parser__WEBPACK_IMPORTED_MODULE_5__["checkNodeValidity"])(this.dataService.node);
    };
    // modify argument input: check if input is valid
    ProcedureItemComponent.prototype.argMod = function (event, argIndex) {
        // this.dataService.focusedInput = [event.target, (<HTMLInputElement>event.target).selectionStart];
        this.dataService.focusedInput = event.target;
        if (!this.data.args[argIndex].value) {
            return;
        }
        Object(_shared_parser__WEBPACK_IMPORTED_MODULE_5__["modifyArgument"])(this.data, argIndex, this.dataService.node.procedure);
        this.clearLinkedArgs(this.dataService.node.procedure);
    };
    ProcedureItemComponent.prototype.clearLinkedArgs = function (prodList) {
        for (var _i = 0, prodList_4 = prodList; _i < prodList_4.length; _i++) {
            var prod = prodList_4[_i];
            if (prod.children) {
                this.clearLinkedArgs(prod.children);
            }
            for (var _a = 0, _b = prod.args; _a < _b.length; _a++) {
                var arg = _b[_a];
                arg.linked = false;
            }
        }
    };
    // argHighlight(value: any) {
    //     return value.replace(
    //         inline_fn_regEx, '<span class = "inline-function">' + value.match(inline_fn_regEx) + '</span>'
    //     );
    // }
    ProcedureItemComponent.prototype.inputSize = function (val) {
        return ctx.measureText(val).width + 7;
    };
    ProcedureItemComponent.prototype.onInputFocus = function (index, isVar) {
        for (var _i = 0, _a = this.dataService.node.state.procedure; _i < _a.length; _i++) {
            var prod = _a[_i];
            prod.selected = false;
        }
        this.dataService.node.state.procedure = [];
        if (this.data.args[index].invalidVar && typeof this.data.args[index].invalidVar === 'string') {
            this.emitNotifyError(this.data.args[index].invalidVar);
        }
        else if (isVar) {
            if (this.data.variable) {
                this.markLinkedArguments(this.data.variable, this.dataService.node.procedure);
            }
            else if (this.data.args[index].usedVars && this.data.args[index].usedVars[0]) {
                this.markLinkedArguments(this.data.args[index].usedVars[0], this.dataService.node.procedure);
            }
        }
        else if (this.data.args[index].usedVars) {
            for (var _b = 0, _c = this.data.args[index].usedVars; _b < _c.length; _b++) {
                var varName = _c[_b];
                this.markLinkedArguments(varName, this.dataService.node.procedure);
            }
        }
    };
    ProcedureItemComponent.prototype.markLinkedArguments = function (varName, nodeList) {
        for (var _i = 0, nodeList_1 = nodeList; _i < nodeList_1.length; _i++) {
            var prod = nodeList_1[_i];
            if (prod.children) {
                this.markLinkedArguments(varName, prod.children);
            }
            if (prod === this.data) {
                continue;
            }
            for (var _a = 0, _b = prod.args; _a < _b.length; _a++) {
                var arg = _b[_a];
                if (arg.name === '__none__' || !arg.usedVars || arg.usedVars.length === 0) {
                    continue;
                }
                if (arg.usedVars.indexOf(varName) !== -1) {
                    arg.linked = true;
                }
            }
            if (prod.variable === varName) {
                prod.args[0].linked = true;
            }
        }
    };
    ProcedureItemComponent.prototype.emitNotifyError = function (message) {
        this.notifyError.emit(message);
    };
    ProcedureItemComponent.prototype.checkEnum = function (param, index) {
        try {
            if (param.name[0] === '_') {
                return false;
            }
            // @ts-ignore
            var arg = this.ModuleDoc[this.data.meta.module][this.data.meta.name].parameters[index];
            if (arg.description.toLowerCase().indexOf('enum') === -1 || !_modules__WEBPACK_IMPORTED_MODULE_3__[this.data.meta.module][arg.type]) {
                return false;
            }
            return true;
        }
        catch (ex) {
            return false;
        }
    };
    ProcedureItemComponent.prototype.getEnum = function (index) {
        // @ts-ignore
        var enm = _modules__WEBPACK_IMPORTED_MODULE_3__[this.data.meta.module][this.ModuleDoc[this.data.meta.module][this.data.meta.name].parameters[index].type];
        var enumList = [];
        for (var i in enm) {
            if (!enm.hasOwnProperty(i)) {
                continue;
            }
            enumList.push(enm[i]);
        }
        return enumList;
    };
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", Object)
    ], ProcedureItemComponent.prototype, "data", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", Boolean)
    ], ProcedureItemComponent.prototype, "disableInput", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])(),
        __metadata("design:type", Object)
    ], ProcedureItemComponent.prototype, "delete", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])(),
        __metadata("design:type", Object)
    ], ProcedureItemComponent.prototype, "deleteC", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])(),
        __metadata("design:type", Object)
    ], ProcedureItemComponent.prototype, "select", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])(),
        __metadata("design:type", Object)
    ], ProcedureItemComponent.prototype, "copied", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])(),
        __metadata("design:type", Object)
    ], ProcedureItemComponent.prototype, "pasteOn", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])(),
        __metadata("design:type", Object)
    ], ProcedureItemComponent.prototype, "helpText", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])(),
        __metadata("design:type", Object)
    ], ProcedureItemComponent.prototype, "notifyError", void 0);
    ProcedureItemComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'procedure-item',
            template: __webpack_require__(/*! ./procedure-item.component.html */ "./src/app/views/view-editor/procedure-item/procedure-item.component.html"),
            styles: [__webpack_require__(/*! ./procedure-item.component.scss */ "./src/app/views/view-editor/procedure-item/procedure-item.component.scss")]
        }),
        __metadata("design:paramtypes", [_services__WEBPACK_IMPORTED_MODULE_4__["DataService"]])
    ], ProcedureItemComponent);
    return ProcedureItemComponent;
}());



/***/ }),

/***/ "./src/app/views/view-editor/toolset/toolset.component.html":
/*!******************************************************************!*\
  !*** ./src/app/views/view-editor/toolset/toolset.component.html ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<!--Divider-->\r\n\r\n<div class = \"toolset--body\" (mouseover)='setCurrent($event)'>\r\n    <div [hidden]=\"getNode().type == 'start' && !getViewOutput()\">\r\n        <ng-container>\r\n            <!-- basic functions: variable, if, else, else if, for, while, continue, break -->\r\n        \r\n            <button id='basic-funcs' class=\"accordion\" \r\n            (click)='toggleAccordion(\"basic-funcs\")' >Basic</button>\r\n            <div class=\"panel\">\r\n                <ul class='toolset__functions--subset'>\r\n                    <ng-container *ngFor=\"let type of ProcedureTypesArr\">\r\n                        <li *ngIf=\"8 > ProcedureTypes[type] || ProcedureTypes[type] == 14\"\r\n                        class='tooltip-basic'\r\n                        [class.invalid]='checkInvalid(type)'\r\n                        [class.basic]='true'\r\n                        (click)='add(ProcedureTypes[type])'> \r\n                            {{type}}\r\n                        </li>\r\n                    </ng-container>\r\n                </ul>\r\n            </div>\r\n            \r\n            <!--Divider-->\r\n            <div class = \"divider\"></div>\r\n            <button id='Functions' class=\"accordion\"  (click)='toggleAccordionHead(\"Functions\")'>Functions\r\n            </button>\r\n            <!--Search Bar-->\r\n            <div class = 'searchbar--container'>\r\n                <input id='searchbarFunction' class='searchBar' placeholder='Search' (keyup)='searchFunction($event)'/>\r\n                <div class=\"panel\" [class.opened] = 'true' *ngIf='searchedFunctions.length > 0'>\r\n                    <ul class='toolset__functions--subset'>\r\n                        <ng-container *ngFor='let fn of searchedFunctions'>\r\n                            <li *ngIf='fn.type==\"function\"'\r\n                            (click)='add_function(fn.data)'>\r\n                                <span class='module-name'>{{fn.module}}.</span>{{fn.name}}\r\n                            </li>\r\n                            <li *ngIf='fn.type==\"imported\"'\r\n                            (click)='add_imported_function(fn.data)'>\r\n                                <span class='module-name'>user.</span>{{fn.name}}\r\n                            </li>\r\n                        </ng-container>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n            <div class=\"panel\">\r\n                                        \r\n                <!-- functions from core.modules -->\r\n                <ng-container *ngFor='let mod of Modules' >\r\n                    <button id='{{mod.module}}' class=\"accordion\" \r\n                    (click)='toggleAccordion(mod.module)' >{{ mod.module }}</button>\r\n                    <div class=\"panel\">\r\n                        <ul class='toolset__functions--subset'>\r\n                            <ng-container *ngFor='let fn of mod.functions'>\r\n                                <div class='tooltip'\r\n                                (mouseenter)='popupTooltip($event, fn.doc)'\r\n                                (mouseleave)='turnoffTooltip()'>\r\n                                    <li (click)='add_function(fn)'> \r\n                                        {{fn.name}} \r\n                                    </li>\r\n                                    <!-- <span class=\"tooltiptext\" [innerHTML]='fn.doc'></span> -->\r\n                                </div>\r\n                            </ng-container>\r\n                            <!--Divider-->\r\n                            <div class = \"divider--in\"></div>\r\n                        </ul>\r\n                    </div>\r\n                </ng-container>\r\n                <!-- imported functions -->\r\n                <ng-container>\r\n                    <button id='imported' class=\"accordion\" \r\n                    (click)='toggleAccordion(\"imported\")' >user</button>\r\n                    <div class=\"panel\">\r\n                        <ul class='toolset__functions--subset'>\r\n                            <li class = 'user--add'>\r\n                                <button class = 'add-btn' onclick=\"document.getElementById('selectedFile').click();\" title=\"Import Function from File\">\r\n                                        Import\r\n                                        <!--<mat-icon class='add-icon'>open_in_browser</mat-icon>-->\r\n                                </button>\r\n                            </li>\r\n                            <div class='tooltip user--def' *ngFor='let fn of getFlowchart().functions'>\r\n                                <div class = 'user--def-lnContainer'\r\n                                (mouseenter)='popupTooltip($event, assembleImportedTooltip(fn.doc))'\r\n                                (mouseleave)='turnoffTooltip()'>\r\n                                    <li (click)='add_imported_function(fn)'> {{fn.name}} \r\n                                    </li>\r\n                                    <div class = 'btn--container'>\r\n                                        <button class='importedFunc-btn' (click)='delete_imported_function(fn)'>\r\n                                            <mat-icon class='importedFunc-btn-icon'>close</mat-icon>\r\n                                        </button>\r\n                                        <button class='importedFunc-btn' (click)='downloadImported($event, fn)'>\r\n                                            <mat-icon class='importedFunc-btn-icon'>get_app</mat-icon>\r\n                                        </button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            \r\n                        </ul>\r\n    \r\n                        <input type=\"file\" id=\"selectedFile\" (change)=\"import_function($event)\" style=\"display: none;\" />  \r\n                    </div>\r\n                </ng-container>\r\n            </div>\r\n            \r\n            <!--Divider-->\r\n            <div class = \"divider\"></div>\r\n            \r\n            <button id='Inline' class=\"accordion\"  (click)='toggleAccordionHead(\"Inline\")'>Inline\r\n            </button>\r\n            <!--Search Bar-->\r\n            <div class = 'searchbar--container'>\r\n                <input id='searchbarInline' class='searchBar' placeholder='Search' (keyup)='searchInline($event)'/>\r\n                <div class=\"panel\" [class.opened] = 'true' *ngIf='searchedInlines.length > 0'>\r\n                    <ul class='toolset__functions--subset inline_set'>\r\n                        <ng-container *ngFor='let fnString of searchedInlines'>\r\n                            <li (click)='add_inline(fnString)'>\r\n                                {{fnString}}\r\n                            </li>\r\n                        </ng-container>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n            <div class=\"panel\">\r\n                <button id='globals' class=\"accordion inline--cat\"  (click)='toggleAccordion(\"globals\", true)'>Globals</button>\r\n                <div class=\"panel\">\r\n                    <ul class='toolset__functions--subset inline_set'>\r\n                        <ng-container *ngFor='let cnst of getFlowchart().nodes[0].procedure'>\r\n                            <li *ngIf='cnst.type === 10' (click)='add_inline(cnst.args[cnst.argCount-2].value)'>\r\n                                {{cnst.args[cnst.argCount-2].value}}\r\n                            </li>\r\n                        </ng-container>\r\n                    </ul>\r\n                    <!--Divider-->\r\n                    <div class = \"divider--in\"></div>\r\n                </div>\r\n    \r\n                <button id='inlineExpr' class=\"accordion inline--cat\"  (click)='toggleAccordion(\"inlineExpr\", true)'>Expressions</button>\r\n                <div class=\"panel\">\r\n                    <button id='inlineQueryExpr' class=\"accordion\" (click)='toggleAccordion(\"inlineQueryExpr\", true)'>Inline Query Expr</button>\r\n                    <div class=\"panel\">\r\n                        <ul class='toolset__functions--subset inline_set'>\r\n                            <li *ngFor='let expr of inlineQueryExpr' (click)='add_inline(expr[0])' title='{{expr[1]}}'>\r\n                                {{expr[0]}}\r\n                            </li>\r\n                            <!-- <li *ngFor='let expr of inlineQueryExpr' (click)='add_inline(expr)' title='{{expr}}'>\r\n                                {{expr}}\r\n                            </li> -->\r\n                        </ul>\r\n                        <!--Divider-->\r\n                        <div class = \"divider--in\"></div>\r\n                    </div>\r\n                    <button id='inlineSortExpr' class=\"accordion\" (click)='toggleAccordion(\"inlineSortExpr\", true)'>Inline Sort Expr</button>\r\n                    <div class=\"panel\">\r\n                        <ul class='toolset__functions--subset inline_set'>\r\n                            <li *ngFor='let expr of inlineSortExpr' (click)='add_inline(expr[0])' title='{{expr[1]}}'>\r\n                                {{expr[0]}}\r\n                            </li>\r\n                            <!-- <li *ngFor='let expr of inlineSortExpr' (click)='add_inline(expr)' title='{{expr}}'>\r\n                                {{expr}}\r\n                            </li> -->\r\n                        </ul>\r\n                        <!--Divider-->\r\n                        <div class = \"divider--in\"></div>\r\n                    </div>\r\n                </div>\r\n    \r\n    \r\n                <button id='inlineFunc' class=\"accordion inline--cat\" (click)='toggleAccordion(\"inlineFunc\", true)'>Functions</button>\r\n                <div class=\"panel\">\r\n                    <ng-container *ngFor='let category of inlineFunc'>\r\n                        <button id='inlineFunc_{{category[0]}}' class=\"accordion\" (click)='toggleAccordion(\"inlineFunc_\"+category[0], true)'>{{category[0]}}</button>\r\n                        <div class=\"panel\">\r\n                            <ul class='toolset__functions--subset inline_set'>\r\n                                <li *ngFor='let funcString of category[1]' (click)='add_inline(funcString[0])' title='{{funcString[1]}}'>\r\n                                    {{funcString[0]}}\r\n                                </li>\r\n                                <!-- <li *ngFor='let funcString of category[1]' (click)='add_inline(funcString)' title='{{funcString}}'>\r\n                                    {{funcString}}\r\n                                </li> -->\r\n                            </ul>\r\n                            <!--Divider-->\r\n                            <div class = \"divider--in\"></div>\r\n                        </div>\r\n                    </ng-container>\r\n                </div>\r\n            </div>\r\n        </ng-container>\r\n        <div class = \"divider\"></div>\r\n    </div>\r\n    \r\n    <!-- functions for input nodes -->\r\n    <div id='toolset_inp' class = 'toolset' *ngIf=\"getNode().type == 'start'\">\r\n        <button id='startFuncs' class=\"accordion inline--cat\" (click)='toggleAccordion(\"startFuncs\")'>Parameters</button>\r\n        <div class=\"panel\">\r\n        <!-- <div class='toolset__functions'> -->\r\n            <section *ngFor='let type of ProcedureTypesArr' >\r\n                <div *ngIf='type.toUpperCase() == \"CONSTANT\"'>\r\n                    <ul class='toolset__functions--subset'>\r\n                        <li (click)='add(ProcedureTypes[type], 5)'> Constant </li>\r\n                        <li (click)='add(ProcedureTypes[type], 0)'> Simple Input </li>\r\n                        <li (click)='add(ProcedureTypes[type], 1)'> Slider </li>\r\n                        <li (click)='add(ProcedureTypes[type], 2)'> Checkbox </li>\r\n                        <li (click)='add(ProcedureTypes[type], 3)'> URL </li>\r\n                        <li (click)='add(ProcedureTypes[type], 4)'> File </li>\r\n                    </ul>\r\n                </div>\r\n                <!-- <div *ngIf='type.toUpperCase() == \"ADDDATA\"'>\r\n                    <ul class='toolset__functions--subset'>\r\n                        <li (click)='add(ProcedureTypes[type])'> Add Model </li>\r\n                    </ul>\r\n                </div> -->\r\n            </section>\r\n        </div>\r\n    </div>\r\n    \r\n</div>\r\n<span id=\"tooltiptext\"></span>\r\n"

/***/ }),

/***/ "./src/app/views/view-editor/toolset/toolset.component.scss":
/*!******************************************************************!*\
  !*** ./src/app/views/view-editor/toolset/toolset.component.scss ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ":host {\n  overflow: hidden auto;\n  width: 100%;\n  background-color: transparent;\n  border: 1px; }\n\n.toolset--body {\n  max-height: calc(100vh - 41px);\n  overflow: hidden; }\n\n.toolset--body:hover {\n    overflow-y: auto; }\n\n.toolset--body::-webkit-scrollbar {\n    width: 8px; }\n\n.toolset--body::-webkit-scrollbar-track {\n    background: #E6E6E6; }\n\n.toolset--body::-webkit-scrollbar-thumb {\n    background: #CCCCCC;\n    border-left: 2px solid #E6E6E6; }\n\n.toolset--body::-webkit-scrollbar-thumb:hover {\n    background: #999999; }\n\n.searchbar--container {\n  padding: 0px; }\n\n.searchBar {\n  width: 100%;\n  font-size: 12px;\n  padding: 0px 8px;\n  border: 0px;\n  height: 15px;\n  border-bottom: 5px solid white; }\n\n.toolset__functions--subset {\n  list-style-type: none;\n  margin: 0px;\n  padding: 0px;\n  background-color: #E6E6E6;\n  overflow: hidden;\n  text-overflow: ellipsis; }\n\n.toolset__functions--subset li {\n    -webkit-user-select: none;\n       -moz-user-select: none;\n        -ms-user-select: none;\n            user-select: none;\n    margin: 0px;\n    padding: 0px;\n    padding-left: 8px;\n    font-style: italic;\n    font-weight: 550;\n    font-size: 12px;\n    height: 18px;\n    line-height: 18px;\n    width: 100%;\n    box-sizing: border-box;\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis; }\n\n.toolset__functions--subset .user--add {\n    margin-bottom: 8px; }\n\n.toolset__functions--subset :hover {\n    background-color: #CCCCCC;\n    transition: 0.4s; }\n\n.user--def .user--def-lnContainer {\n  width: 100%;\n  display: flex;\n  flex-flow: row nowrap;\n  justify-content: space-between; }\n\n.user--def .user--def-lnContainer .btn--container {\n    display: flex;\n    flex-flow: row nowrap; }\n\n.importedFunc-btn {\n  background-color: transparent;\n  border: none;\n  width: 13px;\n  height: 13px;\n  height: 100%;\n  padding: 0px; }\n\n.importedFunc-btn .importedFunc-btn-icon {\n    font-size: 12px;\n    color: #373737;\n    width: 13px;\n    height: 13px;\n    line-height: 13px; }\n\n.importedFunc-btn:hover .importedFunc-btn-icon {\n    color: #00006d; }\n\n.accordion {\n  background-color: #CCCCCC;\n  color: #373737;\n  cursor: pointer;\n  width: 100%;\n  height: 24px;\n  padding: 2px 8px 2px 8px;\n  border: none;\n  display: block;\n  text-align: left;\n  outline: none;\n  font-size: 12px;\n  transition: 0.4s;\n  font-weight: 550;\n  overflow: hidden;\n  text-overflow: ellipsis; }\n\n.active, .accordion:hover {\n  background-color: #B3B3B3; }\n\n.panel {\n  width: inherit;\n  padding: 0px;\n  display: none;\n  background-color: #E6E6E6;\n  overflow: hidden; }\n\n.panel button:not(.inline--cat) {\n    font-weight: 550;\n    color: #00006d;\n    font-style: italic;\n    white-space: nowrap; }\n\n.panel.opened {\n    display: block; }\n\n.tooltip-basic {\n  display: block;\n  color: #c84696; }\n\n.tooltip-basic.invalid {\n    opacity: 0.4;\n    pointer-events: none; }\n\n.tooltip {\n  display: block;\n  color: #be8c1e; }\n\n#tooltiptext {\n  width: 250px;\n  background-color: whitesmoke;\n  border: 2px solid #E6E6E6;\n  color: #373737;\n  pointer-events: none;\n  padding: 0px 10px 0px 10px;\n  opacity: 0;\n  position: fixed;\n  top: 100px;\n  left: 125px;\n  float: left;\n  z-index: 1; }\n\n#tooltiptext p {\n    font-family: sans-serif;\n    display: flex;\n    flex-flow: row nowrap; }\n\n#tooltiptext p.funcDesc {\n      font-weight: 600;\n      padding-bottom: 5px; }\n\n#tooltiptext p.paramP {\n      padding-left: 5px; }\n\n#tooltiptext p.paramP ::before {\n        display: inline-block;\n        content: '';\n        border-radius: 0.25rem;\n        height: 0.25rem;\n        width: 0.25rem;\n        margin: 0rem 0.3rem 0.15rem 0rem;\n        background-color: #808080; }\n\n#tooltiptext p span {\n      font-style: italic;\n      line-height: 15px;\n      white-space: nowrap;\n      margin-right: 2px; }\n\n.add-btn {\n  height: 20px;\n  margin: 0px;\n  padding: 0px;\n  border: 0px;\n  background-color: #E6E6E6;\n  color: #373737 !important;\n  font-style: normal !important;\n  font-weight: normal !important;\n  height: 18px;\n  width: 100%;\n  line-height: 18px;\n  text-align: left;\n  text-decoration: none;\n  font-size: 12px; }\n\n.divider, .divider--in {\n  background-color: #fafafb;\n  height: 8px; }\n\n.divider:hover, .divider--in:hover {\n    background-color: transparent !important; }\n\n.divider--in {\n  background-color: #E6E6E6; }\n\n.module-name {\n  color: #00006d; }\n\n.inline_set li {\n  color: #127e88; }\n\n/*# sourceMappingURL=data:application/json;base64, */"

/***/ }),

/***/ "./src/app/views/view-editor/toolset/toolset.component.ts":
/*!****************************************************************!*\
  !*** ./src/app/views/view-editor/toolset/toolset.component.ts ***!
  \****************************************************************/
/*! exports provided: ToolsetComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ToolsetComponent", function() { return ToolsetComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _models_procedure__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @models/procedure */ "./src/app/shared/models/procedure/index.ts");
/* harmony import */ var circular_json__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! circular-json */ "./node_modules/circular-json/build/circular-json.node.js");
/* harmony import */ var circular_json__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(circular_json__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _shared_decorators__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @shared/decorators */ "./src/app/shared/decorators/index.ts");
/* harmony import */ var _shared_components_file_download_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @shared/components/file/download.utils */ "./src/app/shared/components/file/download.utils.ts");
/* harmony import */ var _assets_core_inline_inline__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @assets/core/inline/inline */ "./src/assets/core/inline/inline.ts");
/* harmony import */ var _services__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @services */ "./src/app/shared/services/index.ts");
/* harmony import */ var _models_port__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @models/port */ "./src/app/shared/models/port/index.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (undefined && undefined.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};








var keys = Object.keys(_models_procedure__WEBPACK_IMPORTED_MODULE_1__["ProcedureTypes"]);
var inputEvent = new Event('input', {
    'bubbles': true,
    'cancelable': true
});
var ToolsetComponent = /** @class */ (function () {
    function ToolsetComponent(dataService) {
        this.dataService = dataService;
        this.selected = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        this.delete = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        this.imported = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        // @Input() functions: IFunction[];
        this.ProcedureTypes = _models_procedure__WEBPACK_IMPORTED_MODULE_1__["ProcedureTypes"];
        this.ProcedureTypesArr = keys.slice(keys.length / 2);
        this.searchedFunctions = [];
        this.searchedInlines = [];
        this.inlineQueryExpr = _assets_core_inline_inline__WEBPACK_IMPORTED_MODULE_5__["inline_query_expr"];
        this.inlineSortExpr = _assets_core_inline_inline__WEBPACK_IMPORTED_MODULE_5__["inline_sort_expr"];
        this.inlineFunc = _assets_core_inline_inline__WEBPACK_IMPORTED_MODULE_5__["inline_func"];
        this.Modules = [];
        this.ModuleDoc = _shared_decorators__WEBPACK_IMPORTED_MODULE_3__["ModuleDocList"];
    }
    ToolsetComponent.prototype.ngOnInit = function () {
        for (var _i = 0, ModuleList_1 = _shared_decorators__WEBPACK_IMPORTED_MODULE_3__["ModuleList"]; _i < ModuleList_1.length; _i++) {
            var mod = ModuleList_1[_i];
            if (mod.module[0] === '_') {
                continue;
            }
            var nMod = { 'module': mod.module, 'functions': [] };
            for (var _a = 0, _b = mod.functions; _a < _b.length; _a++) {
                var fn = _b[_a];
                if (fn.name[0] === '_') {
                    continue;
                }
                if (_shared_decorators__WEBPACK_IMPORTED_MODULE_3__["ModuleDocList"][mod.module] && _shared_decorators__WEBPACK_IMPORTED_MODULE_3__["ModuleDocList"][mod.module][fn.name]) {
                    fn['doc'] = _shared_decorators__WEBPACK_IMPORTED_MODULE_3__["ModuleDocList"][mod.module][fn.name];
                    var fnDocHtml = void 0;
                    if (fn.doc.summary) {
                        fnDocHtml = "<p class=\"funcDesc\">" + fn.doc.summary + "</p>";
                    }
                    else {
                        fnDocHtml = "<p class=\"funcDesc\">" + fn.doc.description.split('~')[0] + "</p>";
                        // const splittedDesc = fn.doc.description.split('~');
                        // fnDocHtml = ``;
                        // for (const txt of splittedDesc) {
                        //     fnDocHtml += `<p class="funcDesc">${txt}</p>`;
                        // }
                    }
                    if (fn.doc.parameters && fn.doc.parameters.length > 0) {
                        fnDocHtml += "<p><span>Parameters: </span></p>";
                        for (var _c = 0, _d = fn.doc.parameters; _c < _d.length; _c++) {
                            var param = _d[_c];
                            if (!param) {
                                continue;
                            }
                            fnDocHtml += "<p class=\"paramP\"><span>" + param.name + " - </span> " + param.description + "</p>";
                        }
                    }
                    if (fn.doc.returns) {
                        fnDocHtml += "<p><span>Returns: </span> " + fn.doc.returns + "</p>";
                    }
                    fn['doc'] = fnDocHtml;
                }
                else {
                    fn['doc'] = '<br>';
                }
                nMod.functions.push(fn);
            }
            this.Modules.push(nMod);
        }
    };
    // add selected basic function as a new procedure
    ToolsetComponent.prototype.add = function (type, data) {
        this.selected.emit({ type: type, data: data });
    };
    // add selected function from core.modules as a new procedure
    ToolsetComponent.prototype.add_function = function (fnData) {
        // create a fresh copy of the params to avoid linked objects
        // todo: figure out
        fnData.args = fnData.args.map(function (arg) {
            return { name: arg.name, value: arg.value, default: arg.default };
        });
        this.selected.emit({ type: _models_procedure__WEBPACK_IMPORTED_MODULE_1__["ProcedureTypes"].Function, data: fnData });
    };
    // add selected imported function as a new procedure
    ToolsetComponent.prototype.add_imported_function = function (fnData) {
        fnData.args = fnData.args.map(function (arg) {
            if (arg.type === _models_port__WEBPACK_IMPORTED_MODULE_7__["InputType"].Constant) {
                return { name: arg.name, value: arg.default, type: arg.type };
            }
            return { name: arg.name, value: arg.value, type: arg.type };
        });
        this.selected.emit({ type: _models_procedure__WEBPACK_IMPORTED_MODULE_1__["ProcedureTypes"].Imported, data: fnData });
    };
    ToolsetComponent.prototype.setCurrent = function (event) {
        if (document.activeElement.tagName === 'INPUT' && document.activeElement.className !== 'searchBar') {
            // this.dataService.focusedInput = [document.activeElement, (<HTMLInputElement>document.activeElement).selectionStart];
            this.dataService.focusedInput = document.activeElement;
        }
        else {
            // this.dataService.focusedInput = undefined;
        }
    };
    ToolsetComponent.prototype.add_inline = function (string) {
        if (!this.dataService.focusedInput) {
            return;
        }
        this.dataService.focusedInput.focus();
        var index = this.dataService.focusedInput.selectionDirection === 'backward' ?
            this.dataService.focusedInput.selectionStart : this.dataService.focusedInput.selectionEnd;
        this.dataService.focusedInput.value =
            this.dataService.focusedInput.value.slice(0, index) +
                string +
                this.dataService.focusedInput.value.slice(index);
        this.dataService.focusedInput.dispatchEvent(inputEvent);
        this.dataService.focusedInput.selectionStart = index + string.length;
        // this.dataService.focusedInput.trigger('input');
    };
    // delete imported function
    ToolsetComponent.prototype.delete_imported_function = function (fnData) {
        this.delete.emit(fnData);
        this.turnoffTooltip();
    };
    // import a flowchart as function
    ToolsetComponent.prototype.import_function = function (event) {
        return __awaiter(this, void 0, void 0, function () {
            var p, fnc;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        p = new Promise(function (resolve) {
                            var reader = new FileReader();
                            reader.onload = function () {
                                // parse the flowchart
                                var fl = circular_json__WEBPACK_IMPORTED_MODULE_2__["parse"](reader.result.toString()).flowchart;
                                // create function and documentation of the function
                                var funcs = [];
                                var funcName = fl.name.replace(/[^A-Za-z0-9_]/g, '_');
                                if (funcName.match(/^[\d_]/)) {
                                    funcName = 'func' + funcName;
                                }
                                var documentation = {
                                    name: funcName,
                                    module: 'Imported',
                                    description: fl.description,
                                    summary: fl.description,
                                    parameters: [],
                                    returns: fl.returnDescription
                                };
                                var func = {
                                    flowchart: {
                                        name: fl.name,
                                        nodes: fl.nodes,
                                        edges: fl.edges
                                    },
                                    name: funcName,
                                    module: 'Imported',
                                    doc: documentation,
                                    importedFile: reader.result.toString()
                                };
                                func.args = [];
                                for (var _i = 0, _a = fl.nodes[0].procedure; _i < _a.length; _i++) {
                                    var prod = _a[_i];
                                    if (!prod.enabled || prod.type !== _models_procedure__WEBPACK_IMPORTED_MODULE_1__["ProcedureTypes"].Constant) {
                                        continue;
                                    }
                                    var v = prod.args[prod.argCount - 2].value || 'undefined';
                                    if (v[0] === '"' || v[0] === '\'') {
                                        v = v.substring(1, v.length - 1);
                                    }
                                    if (prod.meta.inputMode !== _models_port__WEBPACK_IMPORTED_MODULE_7__["InputType"].Constant) {
                                        documentation.parameters.push({
                                            name: v,
                                            description: prod.meta.description
                                        });
                                    }
                                    func.args.push({
                                        name: v,
                                        default: prod.args[prod.argCount - 1].default,
                                        value: undefined,
                                        type: prod.meta.inputMode,
                                    });
                                }
                                func.argCount = func.args.length;
                                var end = fl.nodes[fl.nodes.length - 1];
                                var returnProd = end.procedure[end.procedure.length - 1];
                                if (returnProd.args[1].value) {
                                    func.hasReturn = true;
                                }
                                else {
                                    func.hasReturn = false;
                                }
                                // add func and all the imported functions of the imported flowchart to funcs
                                funcs.push(func);
                                for (var _b = 0, _c = fl.functions; _b < _c.length; _b++) {
                                    var i = _c[_b];
                                    funcs.push(i);
                                }
                                resolve(funcs);
                            };
                            reader.onerror = function () {
                                resolve('error');
                            };
                            reader.readAsText(event.target.files[0]);
                        });
                        return [4 /*yield*/, p];
                    case 1:
                        fnc = _a.sent();
                        document.getElementById('selectedFile').value = '';
                        if (fnc === 'error') {
                            console.warn('Error reading file');
                            return [2 /*return*/];
                        }
                        this.imported.emit(fnc);
                        return [2 /*return*/];
                }
            });
        });
    };
    ToolsetComponent.prototype.downloadImported = function (event, fnData) {
        event.stopPropagation();
        var fileString = fnData.importedFile;
        var fname = fnData.name + ".mob";
        var blob = new Blob([fileString], { type: 'application/json' });
        _shared_components_file_download_utils__WEBPACK_IMPORTED_MODULE_4__["DownloadUtils"].downloadFile(fname, blob);
        this.turnoffTooltip();
    };
    ToolsetComponent.prototype.toggleAccordion = function (id, inline) {
        if (inline && this.dataService.focusedInput) {
            this.dataService.focusedInput.focus();
        }
        var acc = document.getElementById(id);
        // acc = document.getElementsByClassName("accordion");
        acc.classList.toggle('active');
        var panel = acc.nextElementSibling;
        if (panel.style.display === 'block') {
            panel.style.display = 'none';
        }
        else {
            panel.style.display = 'block';
        }
    };
    ToolsetComponent.prototype.toggleAccordionHead = function (id) {
        var acc = document.getElementById(id);
        // acc = document.getElementsByClassName("accordion");
        acc.classList.toggle('active');
        var panel = acc.nextElementSibling;
        if (panel.className !== 'panel') {
            panel = panel.nextElementSibling;
        }
        if (panel.style.display === 'block') {
            panel.style.display = 'none';
        }
        else {
            panel.style.display = 'block';
        }
    };
    ToolsetComponent.prototype.checkInvalid = function (type) {
        var node = this.dataService.node;
        var tp = type.toUpperCase();
        if (tp === 'ELSE') {
            if (node.state.procedure.length === 0) {
                return true;
            }
            var checkNode = node.state.procedure[node.state.procedure.length - 1];
            if (checkNode.type.toString() !== _models_procedure__WEBPACK_IMPORTED_MODULE_1__["ProcedureTypes"].If.toString()
                && checkNode.type.toString() !== _models_procedure__WEBPACK_IMPORTED_MODULE_1__["ProcedureTypes"].Elseif.toString()) {
                return true;
            }
            var prods = void 0;
            if (checkNode.parent) {
                prods = checkNode.parent.children;
            }
            else {
                prods = node.procedure;
            }
            for (var i = 0; i < prods.length - 1; i++) {
                if (prods[i].ID === checkNode.ID) {
                    if (prods[i + 1].type.toString() === _models_procedure__WEBPACK_IMPORTED_MODULE_1__["ProcedureTypes"].Elseif.toString() ||
                        prods[i + 1].type.toString() === _models_procedure__WEBPACK_IMPORTED_MODULE_1__["ProcedureTypes"].Else.toString()) {
                        return true;
                    }
                    return false;
                }
            }
            return false;
        }
        else if (tp === 'ELSEIF') {
            if (node.state.procedure.length === 0) {
                return true;
            }
            var checkNode = node.state.procedure[node.state.procedure.length - 1];
            return (checkNode.type.toString() !== _models_procedure__WEBPACK_IMPORTED_MODULE_1__["ProcedureTypes"].If.toString()
                && checkNode.type.toString() !== _models_procedure__WEBPACK_IMPORTED_MODULE_1__["ProcedureTypes"].Elseif.toString());
        }
        else {
            var checkNode = node.state.procedure[node.state.procedure.length - 1];
            if (tp === 'BREAK' || tp === 'CONTINUE') {
                if (!checkNode) {
                    return true;
                }
                while (checkNode.parent) {
                    if (checkNode.parent.type.toString() === _models_procedure__WEBPACK_IMPORTED_MODULE_1__["ProcedureTypes"].Foreach.toString() ||
                        checkNode.parent.type.toString() === _models_procedure__WEBPACK_IMPORTED_MODULE_1__["ProcedureTypes"].While.toString()) {
                        return false;
                    }
                    checkNode = checkNode.parent;
                }
                return true;
            }
            if (checkNode) {
                var prods = void 0;
                if (checkNode.parent) {
                    prods = checkNode.parent.children;
                }
                else {
                    prods = node.procedure;
                }
                if (checkNode.type.toString() === _models_procedure__WEBPACK_IMPORTED_MODULE_1__["ProcedureTypes"].If.toString()
                    || checkNode.type.toString() === _models_procedure__WEBPACK_IMPORTED_MODULE_1__["ProcedureTypes"].Elseif.toString()) {
                    for (var i = 0; i < prods.length - 1; i++) {
                        if (prods[i].ID === checkNode.ID) {
                            if (prods[i + 1].type.toString() === _models_procedure__WEBPACK_IMPORTED_MODULE_1__["ProcedureTypes"].Else.toString()
                                || prods[i + 1].type.toString() === _models_procedure__WEBPACK_IMPORTED_MODULE_1__["ProcedureTypes"].Elseif.toString()) {
                                return true;
                            }
                            return false;
                        }
                    }
                }
            }
        }
        return false;
    };
    ToolsetComponent.prototype.searchFunction = function (event) {
        var str = event.target.value.toLowerCase().replace(/ /g, '_');
        this.searchedFunctions = [];
        if (str.length === 0) {
            return;
        }
        for (var i = 0; i < 8; i++) {
            if (this.searchedFunctions.length >= 10) {
                break;
            }
            if (this.ProcedureTypesArr[i].toLowerCase().indexOf(str) !== -1) {
                this.searchedFunctions.push({
                    'type': 'basic',
                    'name': this.ProcedureTypesArr[i],
                });
            }
        }
        // @ts-ignore
        for (var _i = 0, _a = this.Modules; _i < _a.length; _i++) {
            var mod = _a[_i];
            if (this.searchedFunctions.length >= 10) {
                break;
            }
            if (mod.module[0] === '_' || mod.module === 'Input' || mod.module === 'Output') {
                continue;
            }
            for (var _b = 0, _c = mod.functions; _b < _c.length; _b++) {
                var func = _c[_b];
                if (this.searchedFunctions.length >= 10) {
                    break;
                }
                if (func.name[0] === '_') {
                    continue;
                }
                if (func.name.toLowerCase().indexOf(str) !== -1) {
                    this.searchedFunctions.push({
                        'type': 'function',
                        'name': func.name,
                        'module': mod.module,
                        'data': func
                    });
                }
            }
        }
        for (var _d = 0, _e = this.dataService.flowchart.functions; _d < _e.length; _d++) {
            var func = _e[_d];
            if (this.searchedFunctions.length >= 10) {
                break;
            }
            if (func.name.toLowerCase().indexOf(str) !== -1) {
                this.searchedFunctions.push({
                    'type': 'imported',
                    'name': func.name,
                    'data': func
                });
            }
        }
    };
    ToolsetComponent.prototype.searchInline = function (event) {
        var str = event.target.value.toLowerCase();
        this.searchedInlines = [];
        if (str.length === 0) {
            return;
        }
        for (var _i = 0, _a = this.dataService.flowchart.nodes[0].procedure; _i < _a.length; _i++) {
            var cnst = _a[_i];
            if (this.searchedInlines.length >= 10) {
                break;
            }
            if (cnst.type !== _models_procedure__WEBPACK_IMPORTED_MODULE_1__["ProcedureTypes"].Constant) {
                continue;
            }
            var cnstString = cnst.args[cnst.argCount - 2].value;
            if (cnstString.toLowerCase().indexOf(str) !== -1) {
                this.searchedInlines.push(cnstString);
            }
        }
        for (var _b = 0, _c = this.inlineQueryExpr; _b < _c.length; _b++) {
            var expr = _c[_b];
            if (this.searchedInlines.length >= 10) {
                break;
            }
            if (expr[0].toLowerCase().indexOf(str) !== -1) {
                this.searchedInlines.push(expr);
            }
        }
        for (var _d = 0, _e = this.inlineFunc; _d < _e.length; _d++) {
            var category = _e[_d];
            for (var _f = 0, _g = category[1]; _f < _g.length; _f++) {
                var funcString = _g[_f];
                if (this.searchedInlines.length >= 10) {
                    break;
                }
                if (funcString[0].toLowerCase().indexOf(str) !== -1) {
                    this.searchedInlines.push(funcString[0]);
                }
            }
            if (this.searchedInlines.length >= 10) {
                break;
            }
        }
    };
    ToolsetComponent.prototype.assembleImportedTooltip = function (funcDoc) {
        // <span class="tooltiptext1">
        //     <p class='funcDesc'>{{fn.doc.description}}</p>
        //     <p *ngIf='fn.doc.parameters?.length > 0'><span>Parameters: </span></p>
        //     <p class='paramP' *ngFor='let param of fn.doc.parameters'><span>{{param.name}} - </span> {{param.description}}</p>
        //     <p *ngIf='fn.doc.returns'><span>Returns: </span>{{fn.doc.returns}}</p>
        // </span>
        var htmlDesc = "<p class=\"funcDesc\">" + funcDoc.description + "</p>";
        if (funcDoc.parameters && funcDoc.parameters.length > 0) {
            htmlDesc += "<p><span>Parameters: </span></p>";
            for (var _i = 0, _a = funcDoc.parameters; _i < _a.length; _i++) {
                var param = _a[_i];
                htmlDesc += "<p class='paramP'><span>" + param.name + " - </span> " + param.description + "</p>";
            }
        }
        if (funcDoc.returns) {
            htmlDesc += "<p><span>Returns: </span>" + funcDoc.returns + "</p>";
        }
        return htmlDesc;
    };
    ToolsetComponent.prototype.popupTooltip = function (event, funcText) {
        var tooltip = document.getElementById('tooltiptext');
        tooltip.innerHTML = funcText;
        tooltip.style.top = event.target.getBoundingClientRect().top + 'px';
        this.timeOut = setTimeout(function () {
            tooltip.style.transitionDuration = '0.3s';
            tooltip.style.opacity = '1';
        }, 700);
    };
    ToolsetComponent.prototype.turnoffTooltip = function () {
        clearTimeout(this.timeOut);
        var tooltip = document.getElementById('tooltiptext');
        tooltip.style.transitionDuration = '0s';
        tooltip.style.opacity = '0';
    };
    ToolsetComponent.prototype.getViewOutput = function () {
        return this.dataService.getModelOutputView(this.dataService.node.id);
    };
    ToolsetComponent.prototype.getFlowchart = function () { return this.dataService.flowchart; };
    ToolsetComponent.prototype.getNode = function () { return this.dataService.node; };
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])(),
        __metadata("design:type", Object)
    ], ToolsetComponent.prototype, "selected", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])(),
        __metadata("design:type", Object)
    ], ToolsetComponent.prototype, "delete", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])(),
        __metadata("design:type", Object)
    ], ToolsetComponent.prototype, "imported", void 0);
    ToolsetComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'toolset',
            template: __webpack_require__(/*! ./toolset.component.html */ "./src/app/views/view-editor/toolset/toolset.component.html"),
            encapsulation: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewEncapsulation"].None,
            styles: [__webpack_require__(/*! ./toolset.component.scss */ "./src/app/views/view-editor/toolset/toolset.component.scss")]
        }),
        __metadata("design:paramtypes", [_services__WEBPACK_IMPORTED_MODULE_6__["DataService"]])
    ], ToolsetComponent);
    return ToolsetComponent;
}());



/***/ }),

/***/ "./src/app/views/view-editor/view-editor-routing.module.ts":
/*!*****************************************************************!*\
  !*** ./src/app/views/view-editor/view-editor-routing.module.ts ***!
  \*****************************************************************/
/*! exports provided: ViewEditorRoutingModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ViewEditorRoutingModule", function() { return ViewEditorRoutingModule; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var _view_editor_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./view-editor.component */ "./src/app/views/view-editor/view-editor.component.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};



var routes = [
    {
        path: '',
        component: _view_editor_component__WEBPACK_IMPORTED_MODULE_2__["ViewEditorComponent"],
        children: [
        // {
        //   path: '',
        //   loadChildren: '../../mobius-viewer/mobius-viewer.module#MobiusViewerModule',
        // }
        ]
    }
];
var ViewEditorRoutingModule = /** @class */ (function () {
    function ViewEditorRoutingModule() {
    }
    ViewEditorRoutingModule = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["NgModule"])({
            imports: [_angular_router__WEBPACK_IMPORTED_MODULE_1__["RouterModule"].forChild(routes)],
            exports: [_angular_router__WEBPACK_IMPORTED_MODULE_1__["RouterModule"]]
        })
    ], ViewEditorRoutingModule);
    return ViewEditorRoutingModule;
}());



/***/ }),

/***/ "./src/app/views/view-editor/view-editor.component.html":
/*!**************************************************************!*\
  !*** ./src/app/views/view-editor/view-editor.component.html ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class='container'>\r\n    <as-split direction=\"horizontal\" (dragEnd)='setSplit($event)'>\r\n        <as-split-area [size]=\"100 - getSplit()\">\r\n            <panel-header [flowchart]='getFlowchart()'></panel-header>\r\n            <!-- viewchild content -->\r\n            <div class='content__panel' (mouseenter)='activateCopyPaste()'  (mouseleave)='deactivateCopyPaste()'>\r\n\r\n                <div class='container--editor'\r\n                (copy)='copyProd()' (cut)='cutProd()' (paste)='pasteProd()'>\r\n                \r\n                    <div class='container__content'>\r\n                        <!-- toolset on the left side -->\r\n                        <div class=\"container--toolset\">\r\n                            <toolset \r\n                            (delete)='deleteFunction($event)' \r\n                            (selected)='add($event)' \r\n                            (imported)='importFunction($event)'></toolset>\r\n                        </div>\r\n                        <!-- procedure editor on the right side -->\r\n                        <div id='procedure' class=\"container--procedure\" (click)='unselectAll($event)'>\r\n                            <!-- parameter-editor only for start/end node -->\r\n                            <parameter-editor *ngIf=\"getNode().type == 'start'\" \r\n                            [flowchart]='getFlowchart()' \r\n                            [node]='getNode()'\r\n                            [prodCheck]='false'\r\n                            [disableInput]='disableInput'></parameter-editor>\r\n                            <ng-container *ngIf='getNode().enabled; else disabled_node'>\r\n                                <div id='modelViewButton--container' *ngIf=\"getNode().type !== 'start'\">\r\n                                    <button (click)='setViewOutput()'>Viewing \r\n                                        <span *ngIf='!getViewOutput()'>Input Model</span>\r\n                                        <span *ngIf='getViewOutput()'>Output Model</span></button>\r\n                                </div>\r\n\r\n                                <div id='modelViewButton--container' *ngIf=\"getNode().type == 'start'\">\r\n                                    <button (click)='setViewOutput()'>\r\n                                        <span *ngIf='getViewOutput()'>Viewing</span>\r\n                                        <span *ngIf='!getViewOutput()'>Hiding</span>\r\n                                    Test Model</button>\r\n                                </div>\r\n                            </ng-container>\r\n                            <ng-template #disabled_node>\r\n                                <div id='modelViewButton--container' *ngIf=\"getNode().type !== 'start'\">\r\n                                    <button disabled> Node Disabled </button>\r\n                                </div>\r\n                            </ng-template>\r\n                            \r\n                            <div class = 'procedureln--container' [ngClass]=\"{'procedureln--container-start': getNode().type == 'start'}\">\r\n                                <!-- list of procedure items for all nodes -->\r\n                                <div class = 'pro-container' [hidden]=\"getNode().type == 'start' && !getViewOutput()\">\r\n                                    <procedure-item \r\n                                    *ngFor=\"let line of getNode()?.procedure; let idx=index\" \r\n                                    [data]=\"line\"\r\n                                    [disableInput]='disableInput'\r\n                                    (select)=\"selectProcedure($event)\"\r\n                                    (delete)=\"deleteSelectedProds()\"\r\n                                    (deleteC)='deleteChild(idx)'\r\n                                    (notifyError)='notifyError($event)'\r\n                                    (helpText)='updateHelpView($event)'\r\n                                    ></procedure-item>\r\n                                </div>\r\n                                <div class = 'divider--container' *ngIf=\"getNode().type !== ''\">\r\n                                    <div class = 'divider' *ngIf=\"getNode().type == 'start'\"><span>Parameters</span></div>\r\n                                    <div class = 'divider' *ngIf=\"getNode().type == 'end'\"><span>Return</span></div>\r\n                                </div>\r\n                                <parameter-editor *ngIf=\"getNode().type !== ''\" \r\n                                [flowchart]='getFlowchart()' \r\n                                [node]='getNode()'\r\n                                [prodCheck]='true'\r\n                                [disableInput]='disableInput'\r\n                                (regAction)='regAction($event)'\r\n                                (selectInp)='selectProcedure($event)'\r\n                                (disableProds) = 'disableSelectedProds()'\r\n                                (delete)='deleteSelectedProds()'></parameter-editor>\r\n                                <div id = 'spacer'></div>\r\n                                \r\n                            </div>\r\n                            <!-- <button class='modelViewButton' (click)='setViewOutput(true)'>View Output</button> -->\r\n\r\n                            <br>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </as-split-area>\r\n\r\n        <as-split-area [size]=\"getSplit()\">\r\n            <!-- data viewers panel -->\r\n            <div class='content__viewer' >\r\n                <model-viewers-container [data]='viewerData(getNode(), getViewOutput())'></model-viewers-container>\r\n            </div>\r\n        </as-split-area>\r\n        \r\n    </as-split>\r\n\r\n<notification [message]='notificationMessage' [dummyTrigger]='notificationTrigger'></notification>\r\n\r\n</div>\r\n<spinner></spinner>\r\n<chrome></chrome>\r\n\r\n"

/***/ }),

/***/ "./src/app/views/view-editor/view-editor.component.scss":
/*!**************************************************************!*\
  !*** ./src/app/views/view-editor/view-editor.component.scss ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".content__panel {\n  margin-top: 40px;\n  overflow: hidden; }\n\n.container--editor {\n  display: block;\n  height: 100%;\n  width: 100%; }\n\n.container__heading {\n  display: block;\n  text-align: center;\n  width: 100%; }\n\n.container__content {\n  display: inline-flex;\n  width: 100%;\n  min-height: 100%; }\n\n.container--toolset {\n  display: block;\n  width: 125px;\n  min-width: 125px;\n  max-width: 125px;\n  background-color: transparent;\n  height: calc(100vh - 40px);\n  overflow: hidden; }\n\n.container--toolset toolset {\n    display: flex;\n    flex-flow: column nowrap;\n    overflow: hidden;\n    width: 100%; }\n\n.pro-container {\n  height: auto; }\n\n.container--procedure {\n  width: calc(100% - 125px);\n  max-height: calc(100vh - 40px);\n  background-color: transparent;\n  padding: 0px;\n  overflow: auto; }\n\n.procedureln--container {\n  padding: 0px;\n  padding-bottom: 10px;\n  overflow: hidden;\n  margin: 0px 0px 5px 0px;\n  height: -webkit-fit-content;\n  height: -moz-fit-content;\n  height: fit-content; }\n\n.procedureln--container #spacer {\n    height: 10px; }\n\n.procedureln--container-start {\n  height: -webkit-fit-content;\n  height: -moz-fit-content;\n  height: fit-content; }\n\nh2 {\n  min-height: 30px;\n  color: #373737;\n  padding-left: 8px;\n  font-family: sans-serif;\n  line-height: 30px;\n  font-size: 12px;\n  font-weight: 550;\n  width: 100%;\n  display: flex;\n  flex-flow: row nowrap;\n  cursor: pointer; }\n\nh2 #node--name {\n    width: 80%;\n    text-overflow: ellipsis;\n    overflow: hidden;\n    white-space: nowrap; }\n\nh2 #node--arr {\n    width: 20%; }\n\n#nodeMenu {\n  display: none;\n  position: fixed;\n  transition: display 0.4s;\n  left: 3px;\n  top: 70px;\n  width: 125px;\n  z-index: 1;\n  background-color: #fafafb;\n  border: 1px solid #999999;\n  cursor: pointer; }\n\n#nodeMenu button {\n    display: block;\n    background-color: #fafafb;\n    border: 0px;\n    margin: 0px;\n    padding: 0px;\n    line-height: 30px;\n    height: 30px;\n    font-size: 12px; }\n\n#nodeMenu li {\n    display: block;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n    line-height: 20px;\n    background-color: #fafafb;\n    font-weight: 550;\n    border: 0px;\n    margin: 0px;\n    padding: 0px 10px 0px 10px;\n    line-height: 30px;\n    height: 30px;\n    font-size: 12px;\n    color: #373737; }\n\n#nodeMenu li:hover {\n      color: #00006d;\n      background-color: #E6E6E6; }\n\nhr {\n  border-top: 2px solid #E6E6E6;\n  width: 100%; }\n\nprocedure-item.ng-star-inserted {\n  max-height: 100%; }\n\n.divider--container {\n  height: 20px;\n  display: flex;\n  flex-flow: column nowrap;\n  padding-left: 8px;\n  padding-right: 5px;\n  width: 100%;\n  box-sizing: border-box;\n  margin: 10px 0px 2px 0px; }\n\n.divider--container .divider {\n    height: 100%;\n    padding-left: 2px;\n    padding-bottom: 2px;\n    border-bottom: 3px solid #999999; }\n\n.divider--container .divider span {\n      font-size: 12px;\n      font-weight: 550;\n      color: #00006d; }\n\n#modelViewButton--container {\n  padding: 0px 13px 0px 0px;\n  margin-bottom: 5px; }\n\n#modelViewButton--container button {\n    width: 100%;\n    margin: 0px 5px 2px 8px;\n    background-color: #E6E6E6;\n    color: #808080;\n    text-align: center;\n    text-decoration: none;\n    font-size: 12px;\n    transition: 0.4s;\n    border: 2px solid transparent; }\n\n#modelViewButton--container button span {\n      color: #00006d;\n      font-weight: 550; }\n\n#modelViewButton--container button:hover, #modelViewButton--container button:active {\n      background-color: #CCCCCC;\n      color: #373737; }\n\n/*# sourceMappingURL=data:application/json;base64, */"

/***/ }),

/***/ "./src/app/views/view-editor/view-editor.component.ts":
/*!************************************************************!*\
  !*** ./src/app/views/view-editor/view-editor.component.ts ***!
  \************************************************************/
/*! exports provided: ViewEditorComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ViewEditorComponent", function() { return ViewEditorComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _models_node__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @models/node */ "./src/app/shared/models/node/index.ts");
/* harmony import */ var _models_procedure__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @models/procedure */ "./src/app/shared/models/procedure/index.ts");
/* harmony import */ var _services__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @services */ "./src/app/shared/services/index.ts");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var _shared_components_file_loadurl_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @shared/components/file/loadurl.component */ "./src/app/shared/components/file/loadurl.component.ts");
/* harmony import */ var _shared_getViewerData__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @shared/getViewerData */ "./src/app/shared/getViewerData.ts");
/* harmony import */ var _shared_parser__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @shared/parser */ "./src/app/shared/parser.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};








var canvas = document.createElement('canvas');
var ctx = canvas.getContext('2d');
ctx.font = '12px sans-serif';
var ViewEditorComponent = /** @class */ (function () {
    function ViewEditorComponent(dataService, router) {
        this.dataService = dataService;
        this.router = router;
        /*
        @Input() flowchart: IFlowchart;
        @Input() node: INode;
        */
        this.viewerData = _shared_getViewerData__WEBPACK_IMPORTED_MODULE_6__["getViewerData"];
        this.imported = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        this.delete_Function = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        this.notificationMessage = '';
        this.notificationTrigger = true;
        this.disableInput = false;
        this.copyCheck = true;
        new _shared_components_file_loadurl_component__WEBPACK_IMPORTED_MODULE_5__["LoadUrlComponent"](this.dataService, this.router).loadStartUpURL(this.router.url);
    }
    ViewEditorComponent.prototype.ngAfterViewInit = function () {
        var _this = this;
        setTimeout(function () {
            _this.adjustTextArea();
        }, 50);
    };
    // .............. ON INPUT FOCUS ................
    ViewEditorComponent.prototype.onfocus = function (event) {
        if (event.target.nodeName === 'INPUT') {
            for (var _i = 0, _a = this.dataService.node.state.procedure; _i < _a.length; _i++) {
                var prod = _a[_i];
                prod.selected = false;
            }
            this.dataService.node.state.procedure = [];
        }
    };
    ViewEditorComponent.prototype.adjustTextArea = function () {
        var textarea = document.getElementById('flowchart-desc');
        if (textarea) {
            var desc = this.dataService.flowchart.description.split('\n');
            var textareaWidth = textarea.getBoundingClientRect().width - 30;
            var lineCount = 0;
            for (var _i = 0, desc_1 = desc; _i < desc_1.length; _i++) {
                var line = desc_1[_i];
                lineCount += Math.floor(ctx.measureText(line).width / textareaWidth) + 1;
            }
            textarea.style.height = lineCount * 14 + 4 + 'px';
            for (var _a = 0, _b = this.dataService.node.procedure; _a < _b.length; _a++) {
                var prod = _b[_a];
                if (prod.type !== _models_procedure__WEBPACK_IMPORTED_MODULE_2__["ProcedureTypes"].Constant) {
                    continue;
                }
                textarea = document.getElementById(prod.ID + '_desc');
                if (textarea && prod.meta.description) {
                    var prodDesc = prod.meta.description.split('\n');
                    var prodTextareaWidth = textarea.getBoundingClientRect().width - 30;
                    var prodLineCount = 0;
                    for (var _c = 0, prodDesc_1 = prodDesc; _c < prodDesc_1.length; _c++) {
                        var line = prodDesc_1[_c];
                        prodLineCount += Math.floor(ctx.measureText(line).width / prodTextareaWidth) + 1;
                    }
                    textarea.style.height = prodLineCount * 14 + 4 + 'px';
                }
            }
        }
        textarea = document.getElementById('flowchart-return');
        if (textarea) {
            var desc = (this.dataService.flowchart.returnDescription || '').split('\n');
            var textareaWidth = textarea.getBoundingClientRect().width - 30;
            var lineCount = 0;
            for (var _d = 0, desc_2 = desc; _d < desc_2.length; _d++) {
                var line = desc_2[_d];
                lineCount += Math.floor(ctx.measureText(line).width / textareaWidth) + 1;
            }
            textarea.style.height = lineCount * 14 + 4 + 'px';
        }
    };
    // add a procedure
    ViewEditorComponent.prototype.add = function (data) {
        _models_node__WEBPACK_IMPORTED_MODULE_1__["NodeUtils"].add_procedure(this.dataService.node, data.type, data.data);
        var prod = this.dataService.node.state.procedure[0];
        if (prod.type === _models_procedure__WEBPACK_IMPORTED_MODULE_2__["ProcedureTypes"].Blank) {
            prod = prod.parent;
        }
        this.dataService.registerEdtAction([{ 'type': 'add',
                'parent': prod.parent, 'prod': prod }]);
    };
    // delete a procedure
    ViewEditorComponent.prototype.deleteChild = function (index) {
        this.dataService.registerEdtAction([{ 'type': 'del',
                'parent': undefined, 'index': index, 'prod': this.dataService.node.procedure[index] }]);
        this.dataService.node.procedure.splice(index, 1);
        _models_node__WEBPACK_IMPORTED_MODULE_1__["NodeUtils"].deselect_procedure(this.dataService.node);
    };
    // select a procedure
    ViewEditorComponent.prototype.selectProcedure = function (event) {
        if (event === 'clear') {
            _models_node__WEBPACK_IMPORTED_MODULE_1__["NodeUtils"].deselect_procedure(this.dataService.node);
            return;
        }
        if (!event.ctrl && document.activeElement.tagName === 'INPUT') {
            return;
        }
        _models_node__WEBPACK_IMPORTED_MODULE_1__["NodeUtils"].select_procedure(this.dataService.node, event.prod, event.ctrl || false, event.shift || false);
    };
    // copy selected procedures
    ViewEditorComponent.prototype.copyProd = function () {
        var node = this.dataService.node;
        var i = 0;
        while (i < node.state.procedure.length) {
            if (node.state.procedure[i].type === _models_procedure__WEBPACK_IMPORTED_MODULE_2__["ProcedureTypes"].Blank || node.state.procedure[i].type === _models_procedure__WEBPACK_IMPORTED_MODULE_2__["ProcedureTypes"].Return) {
                node.state.procedure[i].selected = false;
                node.state.procedure.splice(i, 1);
            }
            else {
                i += 1;
            }
        }
        if (!this.copyCheck || document.activeElement.nodeName === 'INPUT' || node.state.procedure.length === 0) {
            return;
        }
        var temp = node.state.procedure.slice();
        this.dataService.copiedProd = [];
        _models_node__WEBPACK_IMPORTED_MODULE_1__["NodeUtils"].rearrangeProcedures(this.dataService.copiedProd, temp, node.procedure);
        this.notificationMessage = "Copied " + this.dataService.copiedProd.length + " Procedures";
        this.notificationTrigger = !this.notificationTrigger;
    };
    // cut selected procedures
    ViewEditorComponent.prototype.cutProd = function () {
        var node = this.dataService.node;
        var i = 0;
        while (i < node.state.procedure.length) {
            if (node.state.procedure[i].type === _models_procedure__WEBPACK_IMPORTED_MODULE_2__["ProcedureTypes"].Blank || node.state.procedure[i].type === _models_procedure__WEBPACK_IMPORTED_MODULE_2__["ProcedureTypes"].Return) {
                node.state.procedure[i].selected = false;
                node.state.procedure.splice(i, 1);
            }
            else {
                i += 1;
            }
        }
        if (!this.copyCheck || document.activeElement.nodeName === 'INPUT' || node.state.procedure.length === 0) {
            return;
        }
        var temp = node.state.procedure.slice();
        this.dataService.copiedProd = [];
        _models_node__WEBPACK_IMPORTED_MODULE_1__["NodeUtils"].rearrangeProcedures(this.dataService.copiedProd, temp, node.procedure);
        var parentArray;
        var redoActions = [];
        for (var _i = 0, _a = this.dataService.copiedProd; _i < _a.length; _i++) {
            var prod = _a[_i];
            if (prod.type === _models_procedure__WEBPACK_IMPORTED_MODULE_2__["ProcedureTypes"].Blank) {
                continue;
            }
            if (prod.parent) {
                parentArray = prod.parent.children;
            }
            else {
                parentArray = node.procedure;
            }
            for (var j = 0; j < parentArray.length; j++) {
                if (parentArray[j] === prod) {
                    redoActions.unshift({ 'type': 'del', 'parent': parentArray[j].parent, 'index': j, 'prod': parentArray[j] });
                    parentArray.splice(j, 1);
                    break;
                }
            }
        }
        this.dataService.registerEdtAction(redoActions);
        Object(_shared_parser__WEBPACK_IMPORTED_MODULE_7__["checkNodeValidity"])(this.dataService.node);
        _models_node__WEBPACK_IMPORTED_MODULE_1__["NodeUtils"].deselect_procedure(node);
        this.notificationMessage = "Cut " + this.dataService.copiedProd.length + " Procedures";
        this.notificationTrigger = !this.notificationTrigger;
    };
    // paste copied procedures
    ViewEditorComponent.prototype.pasteProd = function () {
        var node = this.dataService.node;
        if (this.copyCheck
            && this.dataService.copiedProd
            && document.activeElement.nodeName !== 'INPUT'
            && document.activeElement.nodeName !== 'TEXTAREA') {
            var pastingPlace = node.state.procedure[node.state.procedure.length - 1];
            var toBePasted = this.dataService.copiedProd;
            var redoActions = [];
            if (pastingPlace === undefined) {
                for (var i = 0; i < toBePasted.length; i++) {
                    if (toBePasted[i].type === _models_procedure__WEBPACK_IMPORTED_MODULE_2__["ProcedureTypes"].Blank ||
                        toBePasted[i].type === _models_procedure__WEBPACK_IMPORTED_MODULE_2__["ProcedureTypes"].Return) {
                        continue;
                    }
                    _models_node__WEBPACK_IMPORTED_MODULE_1__["NodeUtils"].paste_procedure(node, toBePasted[i]);
                    redoActions.unshift({ 'type': 'add',
                        'parent': this.dataService.node.state.procedure[0].parent, 'prod': this.dataService.node.state.procedure[0] });
                    node.state.procedure[0].selected = false;
                    node.state.procedure = [];
                }
            }
            else {
                for (var i = toBePasted.length - 1; i >= 0; i--) {
                    if (toBePasted[i].type === _models_procedure__WEBPACK_IMPORTED_MODULE_2__["ProcedureTypes"].Blank ||
                        toBePasted[i].type === _models_procedure__WEBPACK_IMPORTED_MODULE_2__["ProcedureTypes"].Return) {
                        continue;
                    }
                    _models_node__WEBPACK_IMPORTED_MODULE_1__["NodeUtils"].paste_procedure(node, toBePasted[i]);
                    redoActions.unshift({ 'type': 'add',
                        'parent': this.dataService.node.state.procedure[0].parent, 'prod': this.dataService.node.state.procedure[0] });
                    // CHECK IF THE BELOW CAN BE CHANGED TO: node.state.procedure[0]
                    node.state.procedure[node.state.procedure.length - 1].selected = false;
                    pastingPlace.selected = true;
                    node.state.procedure = [pastingPlace];
                }
            }
            this.dataService.registerEdtAction(redoActions);
            Object(_shared_parser__WEBPACK_IMPORTED_MODULE_7__["checkNodeValidity"])(this.dataService.node);
            // toBePasted = undefined;
            this.notificationMessage = "Pasted " + toBePasted.length + " Procedures";
            this.notificationTrigger = !this.notificationTrigger;
        }
    };
    ViewEditorComponent.prototype.onKeyDown = function (event) {
        if (event.key === 'Control' || event.key === 'Shift' || event.key === 'Meta') {
            this.disableInput = true;
        }
        else if (event.key === 'z' && (event.ctrlKey || event.metaKey)) {
            event.preventDefault();
        }
    };
    ViewEditorComponent.prototype.regAction = function (act) {
        this.dataService.registerEdtAction(act);
    };
    ViewEditorComponent.prototype.disableSelectedProds = function () {
        event.stopPropagation();
        var prodList = this.dataService.node.state.procedure;
        var newEnabled = !prodList[prodList.length - 1].enabled;
        for (var _i = 0, prodList_1 = prodList; _i < prodList_1.length; _i++) {
            var prod = prodList_1[_i];
            if (prod.type === _models_procedure__WEBPACK_IMPORTED_MODULE_2__["ProcedureTypes"].Blank || prod.type === _models_procedure__WEBPACK_IMPORTED_MODULE_2__["ProcedureTypes"].Comment) {
                continue;
            }
            prod.enabled = newEnabled;
        }
        // this.data.enabled = !this.data.enabled;
    };
    ViewEditorComponent.prototype.deleteSelectedProds = function () {
        var node = this.dataService.node;
        var redoActions = [];
        for (var _i = 0, _a = node.state.procedure; _i < _a.length; _i++) {
            var prod = _a[_i];
            var prodList = void 0;
            if (prod.parent) {
                prodList = prod.parent.children;
            }
            else {
                prodList = node.procedure;
            }
            prod.selected = false;
            for (var i = 1; i < prodList.length; i++) {
                if (prodList[i].ID === prod.ID) {
                    redoActions.unshift({ 'type': 'del', 'parent': prodList[i].parent, 'index': i, 'prod': prodList[i] });
                    prodList.splice(i, 1);
                    break;
                }
            }
        }
        this.dataService.registerEdtAction(redoActions);
        Object(_shared_parser__WEBPACK_IMPORTED_MODULE_7__["checkNodeValidity"])(this.dataService.node);
        this.dataService.node.state.procedure = [];
    };
    ViewEditorComponent.prototype.onKeyUp = function (event) {
        if (!(event.ctrlKey && event.metaKey && event.shiftKey)) {
            this.disableInput = false;
        }
        if (!this.copyCheck) {
            return;
        }
        if (event.key === 'Delete') {
            this.deleteSelectedProds();
        }
        else if (event.key.toLowerCase() === 'z' && (event.ctrlKey === true || event.metaKey === true)) {
            var actions = void 0;
            // if ((<HTMLElement>event.target).nodeName === 'INPUT') {return; }
            if (event.shiftKey) {
                actions = this.dataService.redoEdt();
                if (!actions) {
                    return;
                }
                for (var _i = 0, actions_1 = actions; _i < actions_1.length; _i++) {
                    var act = actions_1[_i];
                    if (act.type === 'del') {
                        var prodList = void 0;
                        if (!act.parent) {
                            prodList = this.dataService.node.procedure;
                        }
                        else {
                            prodList = act.parent.children;
                        }
                        prodList.splice(act.index, 1);
                    }
                    else {
                        var prodList = void 0;
                        if (!act.parent) {
                            prodList = this.dataService.node.procedure;
                        }
                        else {
                            prodList = act.parent.children;
                        }
                        prodList.splice(act.index, 0, act.prod);
                    }
                }
            }
            else {
                actions = this.dataService.undoEdt();
                if (!actions) {
                    return;
                }
                for (var _a = 0, actions_2 = actions; _a < actions_2.length; _a++) {
                    var act = actions_2[_a];
                    if (act.type === 'add') {
                        var prodList = void 0;
                        if (!act.parent) {
                            prodList = this.dataService.node.procedure;
                        }
                        else {
                            prodList = act.parent.children;
                        }
                        if (act.index) {
                            prodList.splice(act.index, 1);
                        }
                        else {
                            for (var i = 0; i < prodList.length; i++) {
                                if (prodList[i].ID === act.prod.ID) {
                                    act.index = i;
                                    prodList.splice(i, 1);
                                    break;
                                }
                            }
                        }
                    }
                    else {
                        var prodList = void 0;
                        if (!act.parent) {
                            prodList = this.dataService.node.procedure;
                        }
                        else {
                            prodList = act.parent.children;
                        }
                        prodList.splice(act.index, 0, act.prod);
                    }
                }
            }
            _models_node__WEBPACK_IMPORTED_MODULE_1__["NodeUtils"].deselect_procedure(this.dataService.node);
            Object(_shared_parser__WEBPACK_IMPORTED_MODULE_7__["checkNodeValidity"])(this.dataService.node);
        }
    };
    ViewEditorComponent.prototype.notifyError = function (message) {
        this.notificationMessage = message;
        this.notificationTrigger = !this.notificationTrigger;
    };
    // activate copying/cutting/pasting when the mouse hovers over the procedure list
    ViewEditorComponent.prototype.activateCopyPaste = function () {
        this.copyCheck = true;
    };
    // deactivate copying/cutting/pasting when the mouse exit the procedure list
    ViewEditorComponent.prototype.deactivateCopyPaste = function () {
        this.copyCheck = false;
    };
    // import a flowchart as function
    ViewEditorComponent.prototype.importFunction = function (event) {
        for (var _i = 0, event_1 = event; _i < event_1.length; _i++) {
            var func = event_1[_i];
            this.dataService.flowchart.functions.push(func);
        }
    };
    // delete an imported function
    ViewEditorComponent.prototype.deleteFunction = function (event) {
        for (var i = 0; i < this.dataService.flowchart.functions.length; i++) {
            if (this.dataService.flowchart.functions[i] === event) {
                this.dataService.flowchart.functions.splice(i, 1);
                break;
            }
        }
    };
    ViewEditorComponent.prototype.updateHelpView = function (event) {
        if (typeof (event) === 'string') {
            for (var _i = 0, _a = this.dataService.flowchart.functions; _i < _a.length; _i++) {
                var func = _a[_i];
                if (func.name === event) {
                    this.dataService.helpView = func.doc;
                }
            }
        }
        else {
            this.dataService.helpView = event;
        }
        this.dataService.toggleHelp(true);
    };
    ViewEditorComponent.prototype.setViewOutput = function () {
        this.dataService.setModelOutputView(this.dataService.node.id, !this.getViewOutput());
        // this.dataService.modelOutputView = !this.dataService.modelOutputView;
    };
    ViewEditorComponent.prototype.getViewOutput = function () {
        return this.dataService.getModelOutputView(this.dataService.node.id);
    };
    // setTestModel() {
    //     this.dataService.testModel = !this.dataService.testModel;
    //     this.dataService.modelOutputView = this.dataService.testModel;
    // }
    // viewerData(): any {
    //     const node = this.dataService.flowchart.nodes[this.dataService.flowchart.meta.selected_nodes[0]];
    //     if (!node || !node.enabled) { return ''; }
    //     // if (node.type === 'output') { return node.input.value; }
    //     if (this.getViewOutput()) {
    //         return node.model;
    //     }
    //     return node.input.value;
    // }
    ViewEditorComponent.prototype.setSplit = function (event) {
        this.dataService.splitUpdate = true;
        this.dataService.splitVal = event.sizes[1];
        this.adjustTextArea();
    };
    ViewEditorComponent.prototype.unselectAll = function (event) {
        if (event.ctrlKey || event.metaKey) {
            return;
        }
        _models_node__WEBPACK_IMPORTED_MODULE_1__["NodeUtils"].deselect_procedure(this.dataService.node);
    };
    ViewEditorComponent.prototype.getSplit = function () { return this.dataService.splitVal; };
    ViewEditorComponent.prototype.getFlowchart = function () { return this.dataService.flowchart; };
    ViewEditorComponent.prototype.getNode = function () { return this.dataService.node; };
    ViewEditorComponent.prototype.getFlowchartName = function () { return this.dataService.file.name; };
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])(),
        __metadata("design:type", Object)
    ], ViewEditorComponent.prototype, "imported", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])(),
        __metadata("design:type", Object)
    ], ViewEditorComponent.prototype, "delete_Function", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["HostListener"])('window:keydown', ['$event']),
        __metadata("design:type", Function),
        __metadata("design:paramtypes", [KeyboardEvent]),
        __metadata("design:returntype", void 0)
    ], ViewEditorComponent.prototype, "onKeyDown", null);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["HostListener"])('window:keyup', ['$event']),
        __metadata("design:type", Function),
        __metadata("design:paramtypes", [KeyboardEvent]),
        __metadata("design:returntype", void 0)
    ], ViewEditorComponent.prototype, "onKeyUp", null);
    ViewEditorComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'view-editor',
            template: __webpack_require__(/*! ./view-editor.component.html */ "./src/app/views/view-editor/view-editor.component.html"),
            styles: [__webpack_require__(/*! ./view-editor.component.scss */ "./src/app/views/view-editor/view-editor.component.scss")]
        }),
        __metadata("design:paramtypes", [_services__WEBPACK_IMPORTED_MODULE_3__["DataService"], _angular_router__WEBPACK_IMPORTED_MODULE_4__["Router"]])
    ], ViewEditorComponent);
    return ViewEditorComponent;
}());



/***/ }),

/***/ "./src/app/views/view-editor/view-editor.module.ts":
/*!*********************************************************!*\
  !*** ./src/app/views/view-editor/view-editor.module.ts ***!
  \*********************************************************/
/*! exports provided: ViewEditorModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ViewEditorModule", function() { return ViewEditorModule; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/fesm5/common.js");
/* harmony import */ var _shared_shared_module__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @shared/shared.module */ "./src/app/shared/shared.module.ts");
/* harmony import */ var _view_editor_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./view-editor.component */ "./src/app/views/view-editor/view-editor.component.ts");
/* harmony import */ var _procedure_item_procedure_item_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./procedure-item/procedure-item.component */ "./src/app/views/view-editor/procedure-item/procedure-item.component.ts");
/* harmony import */ var _toolset_toolset_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./toolset/toolset.component */ "./src/app/views/view-editor/toolset/toolset.component.ts");
/* harmony import */ var _parameter_editor_parameter_editor_component__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./parameter-editor/parameter-editor.component */ "./src/app/views/view-editor/parameter-editor/parameter-editor.component.ts");
/* harmony import */ var _parameter_editor_procedure_input_editor_procedure_input_editor_component__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./parameter-editor/procedure-input-editor/procedure-input-editor.component */ "./src/app/views/view-editor/parameter-editor/procedure-input-editor/procedure-input-editor.component.ts");
/* harmony import */ var _view_editor_routing_module__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./view-editor-routing.module */ "./src/app/views/view-editor/view-editor-routing.module.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};









var ViewEditorModule = /** @class */ (function () {
    function ViewEditorModule() {
    }
    ViewEditorModule = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["NgModule"])({
            declarations: [
                _view_editor_component__WEBPACK_IMPORTED_MODULE_3__["ViewEditorComponent"],
                _procedure_item_procedure_item_component__WEBPACK_IMPORTED_MODULE_4__["ProcedureItemComponent"],
                _toolset_toolset_component__WEBPACK_IMPORTED_MODULE_5__["ToolsetComponent"],
                _parameter_editor_parameter_editor_component__WEBPACK_IMPORTED_MODULE_6__["ParameterEditorComponent"],
                _parameter_editor_procedure_input_editor_procedure_input_editor_component__WEBPACK_IMPORTED_MODULE_7__["ProcedureInputEditorComponent"],
            ],
            entryComponents: [],
            imports: [
                _angular_common__WEBPACK_IMPORTED_MODULE_1__["CommonModule"],
                _shared_shared_module__WEBPACK_IMPORTED_MODULE_2__["SharedModule"],
                _view_editor_routing_module__WEBPACK_IMPORTED_MODULE_8__["ViewEditorRoutingModule"]
            ],
            exports: [
                _view_editor_component__WEBPACK_IMPORTED_MODULE_3__["ViewEditorComponent"],
            ],
            providers: []
        }),
        __metadata("design:paramtypes", [])
    ], ViewEditorModule);
    return ViewEditorModule;
}());



/***/ }),

/***/ "./src/app/views/view-flowchart/edge/edge.component.html":
/*!***************************************************************!*\
  !*** ./src/app/views/view-flowchart/edge/edge.component.html ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<!--the main line-->\r\n<svg:polyline \r\nid=\"main-edge\" \r\nclass = \"edge\" \r\n[class.selected] = \"edge.selected\"\r\n[class.disabled] = \"!edge.source.parentNode.enabled\"\r\n[attr.points] = \"   (edge.source.parentNode.position.x + 50) + ',' +\r\n                    (edge.source.parentNode.position.y + 40) + ' ' +\r\n\r\n                    ((edge.target.parentNode.position.x + edge.source.parentNode.position.x) / 2 + 50) + ',' +\r\n                    ((edge.target.parentNode.position.y + edge.source.parentNode.position.y) / 2 + 40) + ' ' +\r\n\r\n                    (edge.target.parentNode.position.x + 50) + ',' +\r\n                    (edge.target.parentNode.position.y + 40)\" \r\n/>\r\n\r\n<!--a wider invisible line to make the wire easier to click-->\r\n<svg:polyline \r\nid=\"invisible-edge\" \r\nclass = \"inviEdge\" \r\n[attr.points] = \"   (edge.source.parentNode.position.x + 50) + ',' +\r\n                    (edge.source.parentNode.position.y + 40) + ' ' +\r\n\r\n                    ((edge.target.parentNode.position.x + edge.source.parentNode.position.x) / 2 + 50) + ',' +\r\n                    ((edge.target.parentNode.position.y + edge.source.parentNode.position.y) / 2 + 40) + ' ' +\r\n\r\n                    (edge.target.parentNode.position.x + 50) + ',' +\r\n                    (edge.target.parentNode.position.y + 40)\" \r\n(click)='select($event)'/>\r\n    \r\n\r\n"

/***/ }),

/***/ "./src/app/views/view-flowchart/edge/edge.component.scss":
/*!***************************************************************!*\
  !*** ./src/app/views/view-flowchart/edge/edge.component.scss ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".edge {\n  fill: none;\n  stroke: #373737;\n  stroke-linecap: round;\n  stroke-linejoin: round;\n  stroke-width: 2px;\n  opacity: 1;\n  pointer-events: stroke;\n  marker-mid: url(#arrow); }\n  .edge.selected {\n    stroke: #00006d;\n    opacity: 1;\n    marker-mid: url(#arrow_selected); }\n  .edge.disabled {\n    opacity: 0.4; }\n  .inviEdge {\n  fill: none;\n  stroke: #999999;\n  stroke-width: 30px;\n  opacity: 0;\n  pointer-events: stroke; }\n\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdmlld3Mvdmlldy1mbG93Y2hhcnQvZWRnZS9DOlxcRHJvcGJveFxcRmlsZXNcXFNvZnR3YXJlXFxHaXRIdWJcXGRlc2lnbi1hdXRvbWF0aW9uXFxtb2JpdXMtcGFyYW1ldHJpYy1tb2RlbGxlci9zcmNcXGFwcFxcdmlld3NcXHZpZXctZmxvd2NoYXJ0XFxlZGdlXFxlZGdlLmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC92aWV3cy92aWV3LWZsb3djaGFydC9lZGdlL0M6XFxEcm9wYm94XFxGaWxlc1xcU29mdHdhcmVcXEdpdEh1YlxcZGVzaWduLWF1dG9tYXRpb25cXG1vYml1cy1wYXJhbWV0cmljLW1vZGVsbGVyL3NyY1xcc2Nzc1xcY29sb3JzLnNjc3MiLCJzcmMvYXBwL3ZpZXdzL3ZpZXctZmxvd2NoYXJ0L2VkZ2UvQzpcXERyb3Bib3hcXEZpbGVzXFxTb2Z0d2FyZVxcR2l0SHViXFxkZXNpZ24tYXV0b21hdGlvblxcbW9iaXVzLXBhcmFtZXRyaWMtbW9kZWxsZXIvc3JjXFxzY3NzXFx2YXJpYWJsZXMuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFHQTtFQUNJLFVBQVU7RUFDVixlQ0tZO0VESloscUJBQXFCO0VBQ3JCLHNCQUFzQjtFQUN0QixpQkFBaUI7RUFDakIsVUFBVTtFQUNWLHNCQUFzQjtFQUN0Qix1QkFBdUIsRUFBQTtFQVIzQjtJQVVRLGVDRHVCO0lERXZCLFVBQVU7SUFDVixnQ0FBZ0MsRUFBQTtFQVp4QztJQWVRLFlFUGMsRUFBQTtFRlV0QjtFQUNJLFVBQVU7RUFDVixlQ3JCWTtFRHNCWixrQkFBa0I7RUFDbEIsVUFBVTtFQUNWLHNCQUFzQixFQUFBIiwiZmlsZSI6InNyYy9hcHAvdmlld3Mvdmlldy1mbG93Y2hhcnQvZWRnZS9lZGdlLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiQGltcG9ydCAnfnNjc3MvY29sb3JzJztcclxuQGltcG9ydCAnfnNjc3MvdmFyaWFibGVzJztcclxuXHJcbi5lZGdle1xyXG4gICAgZmlsbDogbm9uZTtcclxuICAgIHN0cm9rZTogJGNvbG9yODtcclxuICAgIHN0cm9rZS1saW5lY2FwOiByb3VuZDtcclxuICAgIHN0cm9rZS1saW5lam9pbjogcm91bmQ7XHJcbiAgICBzdHJva2Utd2lkdGg6IDJweDtcclxuICAgIG9wYWNpdHk6IDE7XHJcbiAgICBwb2ludGVyLWV2ZW50czogc3Ryb2tlO1xyXG4gICAgbWFya2VyLW1pZDogdXJsKCNhcnJvdyk7XHJcbiAgICAmLnNlbGVjdGVke1xyXG4gICAgICAgIHN0cm9rZTogJHNlbGVjdGVkLWNvbG9yO1xyXG4gICAgICAgIG9wYWNpdHk6IDE7XHJcbiAgICAgICAgbWFya2VyLW1pZDogdXJsKCNhcnJvd19zZWxlY3RlZCk7XHJcbiAgICB9XHJcbiAgICAmLmRpc2FibGVke1xyXG4gICAgICAgIG9wYWNpdHk6ICRkaXNhYmxlZC1vcGFjaXR5O1xyXG4gICAgfVxyXG59XHJcbi5pbnZpRWRnZXtcclxuICAgIGZpbGw6IG5vbmU7XHJcbiAgICBzdHJva2U6ICRjb2xvcjI7XHJcbiAgICBzdHJva2Utd2lkdGg6IDMwcHg7XHJcbiAgICBvcGFjaXR5OiAwO1xyXG4gICAgcG9pbnRlci1ldmVudHM6IHN0cm9rZTtcclxufVxyXG4iLCJcclxuJGNvbG9yMTogIzgwODA4MDtcclxuJGNvbG9yMjogIzk5OTk5OTtcclxuJGNvbG9yMzogI0IzQjNCMzsgXHJcbiRjb2xvcjQ6ICNDQ0NDQ0M7XHJcbiRjb2xvcjU6ICNFNkU2RTY7XHJcbiRjb2xvcjUtNTogcmdiKDI0NSwgMjQ1LCAyNDUpO1xyXG4kY29sb3I2OiByZ2IoMjUwLCAyNTAsIDI1MSk7XHJcblxyXG4kY29sb3I3OiB3aGl0ZTtcclxuJGNvbG9yODogIzM3MzczNztcclxuXHJcbiRzZWxlY3RlZC1jb2xvcjogcmdiKDAsIDAsIDEwOSk7XHJcbiRob3Zlci1jb2xvcjogJGNvbG9yMjtcclxuXHJcbiRlcnJvci1jb2xvcjogI0U5NDg1ODsgLy9waW5rLXJlZFxyXG4kZXJyb3ItY29sb3ItbHQ6IHJnYigyNTUsIDIyMCwgMjI0KTtcclxuJHBjb2xvcjI6ICNGM0EzMkE7IC8vb3JhbmdlLXllbGxvd1xyXG4kcHJpbnQtY29sb3I6IHJnYigxMzAsIDE5MSwgMTEwKTsgLy9saWdodGdyZWVuXHJcbiRwcmludC1jb2xvci1sdDogcmdiKDIzMCwgMjU1LCAyMjEpO1xyXG4kc2VsZWN0R2VvbS1jb2xvcjogcmdiKDI1NSwgMTc0LCAwKTsgLy8gbGlnaHQgb3JhbmdlXHJcbiRzZWxlY3RHZW9tLWNvbG9yLWx0OiByZ2IoMjU1LCAyMjUsIDE2MCk7XHJcblxyXG4vLyAkcHJvZC1iYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMjUwLDI1MCwyNTApO1xyXG4vLyAkYmFja2dyb3VuZC1jb2xvcjogcmdiKDIyMCwyMjAsMjIwKTtcclxuJGZ1bmN0aW9uLXRleHQtY29sb3I6IHJnYigxOTAsIDE0MCwgMzApO1xyXG4kZnVuY3Rpb24tdGV4dC1jb2xvcjI6IHJnYigxOCwgMTI2LCAxMzYpO1xyXG4kYmFzaWMtZnVuY3Rpb24tdGV4dC1jb2xvcjogcmdiKDIwMCwgNzAsIDE1MCk7XHJcbiRjb21tZW50LWNvbG9yOiBkYXJrZ3JlZW47XHJcbiIsIiRwYWRkaW5nOiA0MHB4OyAvLyA/IG5vdCB1c2VkXHJcbiRzbWFsbC1wYWRkaW5nOiAxNXB4O1xyXG4kaGVhZGVyLWhlaWdodDogNDBweDtcclxuXHJcbiRmc2l6ZTE6IDE1cHg7XHJcbiRmc2l6ZTI6IDEycHg7XHJcbiRmc2l6ZTM6IDMwcHg7XHJcblxyXG4kcG9ydC1zaXplOiAxNXB4O1xyXG4kZGVmYXVsdC1zaWRlLXBhZGRpbmc6IDE1cHg7XHJcblxyXG4kZGlzYWJsZWQtb3BhY2l0eTogMC40OyJdfQ== */"

/***/ }),

/***/ "./src/app/views/view-flowchart/edge/edge.component.ts":
/*!*************************************************************!*\
  !*** ./src/app/views/view-flowchart/edge/edge.component.ts ***!
  \*************************************************************/
/*! exports provided: EdgeComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EdgeComponent", function() { return EdgeComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};

var EdgeComponent = /** @class */ (function () {
    function EdgeComponent() {
        this.delete = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        this.selected = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
    }
    // select a wire
    EdgeComponent.prototype.select = function (event) {
        event.preventDefault();
        event.stopPropagation();
        if (this.edge.selected) {
            this.selected.emit(event.ctrlKey || event.metaKey);
        }
        else {
            if (event.ctrlKey || event.metaKey) {
                this.selected.emit('ctrl');
            }
            else {
                this.selected.emit('single');
            }
        }
    };
    // delete a wire
    EdgeComponent.prototype.deleteEdge = function () {
        this.delete.emit();
    };
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"])('canvas'),
        __metadata("design:type", _angular_core__WEBPACK_IMPORTED_MODULE_0__["ElementRef"])
    ], EdgeComponent.prototype, "canvas", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", Object)
    ], EdgeComponent.prototype, "edge", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", Object)
    ], EdgeComponent.prototype, "inputOffset", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", Object)
    ], EdgeComponent.prototype, "outputOffset", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])(),
        __metadata("design:type", Object)
    ], EdgeComponent.prototype, "delete", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])(),
        __metadata("design:type", Object)
    ], EdgeComponent.prototype, "selected", void 0);
    EdgeComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: '[edge]',
            template: __webpack_require__(/*! ./edge.component.html */ "./src/app/views/view-flowchart/edge/edge.component.html"),
            styles: [__webpack_require__(/*! ./edge.component.scss */ "./src/app/views/view-flowchart/edge/edge.component.scss")]
        })
    ], EdgeComponent);
    return EdgeComponent;
}());



/***/ }),

/***/ "./src/app/views/view-flowchart/node/node.actions.ts":
/*!***********************************************************!*\
  !*** ./src/app/views/view-flowchart/node/node.actions.ts ***!
  \***********************************************************/
/*! exports provided: ACTIONS */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ACTIONS", function() { return ACTIONS; });
var ACTIONS;
(function (ACTIONS) {
    ACTIONS[ACTIONS["SELECT"] = 0] = "SELECT";
    ACTIONS[ACTIONS["DELETE"] = 1] = "DELETE";
    ACTIONS[ACTIONS["COPY"] = 2] = "COPY";
    ACTIONS[ACTIONS["CONNECT"] = 3] = "CONNECT";
    ACTIONS[ACTIONS["DRAGNODE"] = 4] = "DRAGNODE";
    ACTIONS[ACTIONS["DROPPORT"] = 5] = "DROPPORT";
    ACTIONS[ACTIONS["DRAGPORT"] = 6] = "DRAGPORT";
    ACTIONS[ACTIONS["PROCEDURE"] = 7] = "PROCEDURE";
})(ACTIONS || (ACTIONS = {}));


/***/ }),

/***/ "./src/app/views/view-flowchart/node/node.component.html":
/*!***************************************************************!*\
  !*** ./src/app/views/view-flowchart/node/node.component.html ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\r\n<!-- svg group for the selectable and draggable area of normal node -->\r\n<svg:g (click)='nodeSelect($event)' draggable=\"true\" \r\n(mousedown)='startDragNode($event)' \r\n(dblclick)='switchToProcedure($event)'\r\n*ngIf='node.type==\"\"'>\r\n\r\n    <rect\r\n    width=\"110\" height=\"90\"\r\n    class='outputPort'\r\n    id = 'node.output.id'\r\n    (mousedown)='startDragPort($event, \"output\")'\r\n    [attr.x]=\"node.position.x - 5\" \r\n    [attr.y]=\"node.position.y - 5\"\r\n    />\r\n\r\n    <!-- rectangular box with border -->\r\n    <rect class=\"node\" \r\n    width=\"100\" height=\"80\"\r\n    [class.node--selected]='selected'\r\n    [class.node--editing]='editing'\r\n    [class.node--error]=\"node.hasError\"\r\n    [class.node--disabled]='!node.enabled'\r\n    [attr.x]=\"node.position.x\" \r\n    [attr.y]=\"node.position.y\"\r\n    />\r\n\r\n    <!-- node description inside the rectangular box -->\r\n    <svg:foreignObject [attr.x]=\"node.position.x\" [attr.y]=\"node.position.y + 3\" \r\n    width=\"100\" height = \"80\"\r\n    >\r\n        <xhtml:div class='textdiv'>\r\n            <xhtml:textarea \r\n                id={{node.id}}\r\n                autocomplete=off \r\n                [(ngModel)]='node.name'\r\n                [class.selected]='selected'\r\n                [class.disabled]='!node.enabled'\r\n                (focus)='editing = true'\r\n                (blur)='editing = false'\r\n                title={{node.name}}\r\n                style=\"font-weight: 600;\"\r\n                placeholder='Description of Node'/>  \r\n        </xhtml:div>\r\n    </svg:foreignObject>\r\n</svg:g>\r\n\r\n<!-- svg group for the selectable and draggable area of start node -->\r\n<svg:g (click)='nodeSelect($event)' draggable=\"true\" \r\n(mousedown)='startDragNode($event)' \r\n(dblclick)='switchToProcedure($event)'\r\n*ngIf='node.type==\"start\"'>\r\n\r\n    <path\r\n    class='outputPort'\r\n    id = 'node.output.id'\r\n    (mousedown)='startDragPort($event, \"output\")'\r\n    [attr.d]=\"'M' + (node.position.x - 5) +' '+ (node.position.y + 5) +\r\n             ' L' + (node.position.x - 5) +' '+ (node.position.y + 43) +\r\n             ' L' + (node.position.x + 50) +' '+ (node.position.y + 65) +\r\n             ' L' + (node.position.x + 105) +' '+ (node.position.y + 43) +\r\n             ' L' + (node.position.x + 105) +' '+ (node.position.y + 5) + ' Z'\" \r\n    />\r\n\r\n\r\n    <!-- Triangle with border -->\r\n    <path class=\"node\" \r\n        [class.node--selected]='selected'\r\n        [class.node--error]=\"node.hasError\"\r\n        [attr.d]=\"'M'+node.position.x +' '+ (node.position.y + 10) +\r\n                 ' L'+ node.position.x +' '+ (node.position.y + 40) +\r\n                 ' L'+ (node.position.x + 50) +' '+ (node.position.y + 60) +\r\n                 ' L'+ (node.position.x + 100) +' '+ (node.position.y + 40) +\r\n                 ' L'+ (node.position.x + 100) +' '+ (node.position.y + 10) + ' Z'\" \r\n        />\r\n\r\n    <!-- circles as inputs of the node -->\r\n    <!-- <svg:circle\r\n    *ngFor=\"let prod of node.procedure; let i=index\"\r\n    r=3\r\n    [attr.cx]=\"node.position.x + (100 * (i+1) / (node.procedure.length + 1))\" \r\n    [attr.cy]=\"node.position.y + 22\"\r\n    class='inputPort'/> -->\r\n\r\n\r\n\r\n    <!-- node description inside start node -->\r\n    <svg:foreignObject \r\n    [attr.x]=\"node.position.x\" [attr.y]=\"node.position.y + 18\" \r\n    width=\"100\" height = \"20\">\r\n        <xhtml:div class='textdiv'>\r\n            <xhtml:textarea \r\n                id={{node.id}}\r\n                class='textarea_startend'\r\n                autocomplete=off \r\n                [class.selected]='selected'\r\n                [(ngModel)]='node.name'/>  \r\n        </xhtml:div>\r\n    </svg:foreignObject>\r\n</svg:g>\r\n\r\n<!-- svg group for the selectable and draggable area of end node -->\r\n<svg:g (click)='nodeSelect($event)' draggable=\"true\" \r\n(mousedown)='startDragNode($event)' \r\n(dblclick)='switchToProcedure($event)'\r\n*ngIf='node.type==\"end\"'>\r\n\r\n    <path\r\n    class='outputPort'\r\n    id = 'node.output.id'\r\n    [attr.d]=\"'M'+ (node.position.x - 5)   +' '+ (node.position.y + 75) +\r\n            ' L' + (node.position.x - 5)   +' '+ (node.position.y + 37) +\r\n            ' L' + (node.position.x + 50)  +' '+ (node.position.y + 15) +\r\n            ' L' + (node.position.x + 105) +' '+ (node.position.y + 37) +\r\n            ' L' + (node.position.x + 105) +' '+ (node.position.y + 75) + ' Z'\" \r\n    />\r\n\r\n    <!-- Triangle with border -->\r\n    <path class=\"node\" \r\n        [class.node--selected]='selected'\r\n        [class.node--error]=\"node.hasError\"\r\n        [class.node--disabled]='!node.enabled'\r\n        [attr.d]=\"'M'+node.position.x +' '+ (node.position.y + 70) +\r\n                 ' L' + node.position.x +' '+ (node.position.y + 40) +\r\n                 ' L'+ (node.position.x + 50) +' '+ (node.position.y + 20) +\r\n                 ' L'+ (node.position.x + 100) +' '+ (node.position.y + 40) +\r\n                 ' L'+ (node.position.x + 100) +' '+ (node.position.y + 70) + ' Z'\" \r\n        />\r\n\r\n    <!-- <svg:circle\r\n    *ngIf=\"node.procedure.length > 0\"\r\n    r=3\r\n    [attr.cx]=\"node.position.x + 50\" \r\n    [attr.cy]=\"node.position.y + 58\"\r\n    class='inputPort'/> -->\r\n    \r\n\r\n    <!-- node description inside end node -->\r\n    <svg:foreignObject [attr.x]=\"node.position.x\" [attr.y]=\"node.position.y + 38\" \r\n    width=\"100\" height = \"20\">\r\n        <xhtml:div class='textdiv'>\r\n            <xhtml:textarea \r\n                id={{node.id}}\r\n                class='textarea_startend'\r\n                autocomplete=off \r\n                [class.selected]='selected'\r\n                [class.disabled]='!node.enabled'\r\n                [(ngModel)]='node.name'/>  \r\n        </xhtml:div>\r\n    </svg:foreignObject>\r\n</svg:g>\r\n\r\n\r\n\r\n\r\n<!-- <svg:circle\r\nr=3\r\n[attr.cx]=\"node.position.x + inputOffset[0]\" \r\n[attr.cy]=\"node.position.y + inputOffset[1]\"\r\n[class.disabled]='!node.enabled'\r\n*ngIf=\"inputDraggable()\" \r\nclass='inputPort'\r\nid = 'node.input.id'\r\n(mousedown)='startDragPort($event, \"input\")'/> -->\r\n\r\n<!-- <svg:circle *ngIf=\"outputDraggable()\" \r\nclass='outputPort'\r\nid = 'node.output.id'\r\n(mousedown)='startDragPort($event, \"output\")' \r\n[attr.cx]=\"node.position.x + outputOffset[0]\" \r\n[attr.cy]=\"node.position.y + outputOffset[1]\" \r\n[class.disabled]='!node.enabled'\r\npointer-events=\"all\"\r\nr=3\r\nfill=\"black\"/> -->\r\n\r\n"

/***/ }),

/***/ "./src/app/views/view-flowchart/node/node.component.scss":
/*!***************************************************************!*\
  !*** ./src/app/views/view-flowchart/node/node.component.scss ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".node {\n  fill: white;\n  stroke-width: 2px;\n  stroke: #373737;\n  stroke-opacity: 1;\n  stroke-linecap: round;\n  stroke-linejoin: round; }\n  .node.node--disabled {\n    stroke-opacity: 0.4; }\n  .node.node--selected {\n    fill: #E6E6E6;\n    stroke: #00006d; }\n  .node.node--editing {\n    fill: white; }\n  .node.node--error {\n    stroke: red; }\n  .textdiv {\n  text-align: center;\n  width: 94px; }\n  .foreignObject {\n  width: 100;\n  height: 80; }\n  textarea {\n  cursor: pointer;\n  font-family: sans-serif;\n  background: transparent;\n  display: inline-block;\n  border: none;\n  font-size: 15px;\n  width: 100%;\n  height: 70px;\n  font-weight: 600;\n  text-align: center;\n  vertical-align: middle;\n  resize: none;\n  overflow: hidden;\n  color: #373737; }\n  textarea.selected {\n    color: #00006d; }\n  textarea.disabled {\n    opacity: 0.4; }\n  .textarea_startend {\n  font-size: 15px;\n  font-weight: 600;\n  color: #373737;\n  height: 20px;\n  pointer-events: none; }\n  .inputPort {\n  stroke: transparent;\n  stroke-width: 20px;\n  pointer-events: stroke;\n  fill: #373737; }\n  .inputPort.disabled {\n    opacity: 0.4; }\n  .outputPort {\n  stroke: transparent;\n  stroke-width: 11px;\n  pointer-events: stroke;\n  fill: transparent; }\n  .outputPort.disabled {\n    opacity: 0.4; }\n  .outputPort:hover {\n    stroke: #E6E6E6; }\n\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdmlld3Mvdmlldy1mbG93Y2hhcnQvbm9kZS9DOlxcRHJvcGJveFxcRmlsZXNcXFNvZnR3YXJlXFxHaXRIdWJcXGRlc2lnbi1hdXRvbWF0aW9uXFxtb2JpdXMtcGFyYW1ldHJpYy1tb2RlbGxlci9zcmNcXGFwcFxcdmlld3NcXHZpZXctZmxvd2NoYXJ0XFxub2RlXFxub2RlLmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC92aWV3cy92aWV3LWZsb3djaGFydC9ub2RlL0M6XFxEcm9wYm94XFxGaWxlc1xcU29mdHdhcmVcXEdpdEh1YlxcZGVzaWduLWF1dG9tYXRpb25cXG1vYml1cy1wYXJhbWV0cmljLW1vZGVsbGVyL3NyY1xcc2Nzc1xcY29sb3JzLnNjc3MiLCJzcmMvYXBwL3ZpZXdzL3ZpZXctZmxvd2NoYXJ0L25vZGUvQzpcXERyb3Bib3hcXEZpbGVzXFxTb2Z0d2FyZVxcR2l0SHViXFxkZXNpZ24tYXV0b21hdGlvblxcbW9iaXVzLXBhcmFtZXRyaWMtbW9kZWxsZXIvc3JjXFxzY3NzXFx2YXJpYWJsZXMuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFNQTtFQUNJLFdDRVU7RUREVixpQkFMYztFQU1kLGVDQ1k7RURBWixpQkFBaUI7RUFDakIscUJBQXFCO0VBQ3JCLHNCQUFzQixFQUFBO0VBTjFCO0lBU1EsbUJFSmMsRUFBQTtFRkx0QjtJQWNRLGFDZlE7SURnQlIsZUNUdUIsRUFBQTtFRE4vQjtJQW1CUSxXQ2hCTSxFQUFBO0VESGQ7SUF1QlEsV0F6QlMsRUFBQTtFQThCakI7RUFDSSxrQkFBa0I7RUFDbEIsV0FBVyxFQUFBO0VBR2Y7RUFDSSxVQUFVO0VBQ1YsVUFBVSxFQUFBO0VBR2Q7RUFDSSxlQUFlO0VBQ2YsdUJBQXVCO0VBQ3ZCLHVCQUF1QjtFQUN2QixxQkFBb0I7RUFDcEIsWUFBVztFQUNYLGVFOUNTO0VGK0NULFdBQVc7RUFDWCxZQUFZO0VBQ1osZ0JBQWdCO0VBQ2hCLGtCQUFrQjtFQUNsQixzQkFBc0I7RUFDdEIsWUFBWTtFQUNaLGdCQUFnQjtFQUNoQixjQ2hEWSxFQUFBO0VEa0NoQjtJQWlCUSxjQ2pEdUIsRUFBQTtFRGdDL0I7SUFxQlEsWUV0RGMsRUFBQTtFRjBEdEI7RUFDSSxlRWxFUztFRm1FVCxnQkFBZ0I7RUFDaEIsY0M5RFk7RUQrRFosWUFBWTtFQUNaLG9CQUFvQixFQUFBO0VBR3hCO0VBQ0ksbUJBQW1CO0VBQ25CLGtCQUFrQjtFQUNsQixzQkFBc0I7RUFDdEIsYUN2RVksRUFBQTtFRG1FaEI7SUFPUSxZRXpFYyxFQUFBO0VGNkV0QjtFQUNJLG1CQUFtQjtFQUNuQixrQkFBa0I7RUFDbEIsc0JBQXNCO0VBQ3RCLGlCQUFpQixFQUFBO0VBSnJCO0lBT1EsWUVwRmMsRUFBQTtFRjZFdEI7SUFVUSxlQzdGUSxFQUFBIiwiZmlsZSI6InNyYy9hcHAvdmlld3Mvdmlldy1mbG93Y2hhcnQvbm9kZS9ub2RlLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiQGltcG9ydCAnfnNjc3MvY29sb3JzJztcclxuQGltcG9ydCAnfnNjc3MvdmFyaWFibGVzJztcclxuXHJcbiRzdHJva2Utd2lkdGg6IDJweDtcclxuJGVycm9yLWNvbG9yOiByZWQ7XHJcblxyXG4ubm9kZXtcclxuICAgIGZpbGw6JGNvbG9yNztcclxuICAgIHN0cm9rZS13aWR0aDokc3Ryb2tlLXdpZHRoO1xyXG4gICAgc3Ryb2tlOiAkY29sb3I4O1xyXG4gICAgc3Ryb2tlLW9wYWNpdHk6IDE7XHJcbiAgICBzdHJva2UtbGluZWNhcDogcm91bmQ7XHJcbiAgICBzdHJva2UtbGluZWpvaW46IHJvdW5kO1xyXG5cclxuICAgICYubm9kZS0tZGlzYWJsZWR7XHJcbiAgICAgICAgc3Ryb2tlLW9wYWNpdHk6ICRkaXNhYmxlZC1vcGFjaXR5O1xyXG4gICAgICAgIC8vIGZpbGwtb3BhY2l0eTogJGRpc2FibGVkLW9wYWNpdHk7XHJcbiAgICB9XHJcblxyXG4gICAgJi5ub2RlLS1zZWxlY3RlZHtcclxuICAgICAgICBmaWxsOiRjb2xvcjU7XHJcbiAgICAgICAgc3Ryb2tlOiAkc2VsZWN0ZWQtY29sb3I7XHJcbiAgICB9XHJcblxyXG4gICAgJi5ub2RlLS1lZGl0aW5ne1xyXG4gICAgICAgIGZpbGw6JGNvbG9yNztcclxuICAgIH1cclxuXHJcbiAgICAmLm5vZGUtLWVycm9ye1xyXG4gICAgICAgIHN0cm9rZTogJGVycm9yLWNvbG9yO1xyXG4gICAgfVxyXG5cclxufVxyXG5cclxuLnRleHRkaXZ7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7IFxyXG4gICAgd2lkdGg6IDk0cHg7XHJcbn1cclxuXHJcbi5mb3JlaWduT2JqZWN0e1xyXG4gICAgd2lkdGg6IDEwMDsgXHJcbiAgICBoZWlnaHQ6IDgwO1xyXG59XHJcblxyXG50ZXh0YXJlYXtcclxuICAgIGN1cnNvcjogcG9pbnRlcjtcclxuICAgIGZvbnQtZmFtaWx5OiBzYW5zLXNlcmlmOyBcclxuICAgIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50OyBcclxuICAgIGRpc3BsYXk6aW5saW5lLWJsb2NrO1xyXG4gICAgYm9yZGVyOm5vbmU7IFxyXG4gICAgZm9udC1zaXplOiAkZnNpemUxOyBcclxuICAgIHdpZHRoOiAxMDAlOyBcclxuICAgIGhlaWdodDogNzBweDtcclxuICAgIGZvbnQtd2VpZ2h0OiA2MDA7IFxyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyOyBcclxuICAgIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XHJcbiAgICByZXNpemU6IG5vbmU7IFxyXG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICAgIGNvbG9yOiAkY29sb3I4O1xyXG5cclxuICAgICYuc2VsZWN0ZWR7XHJcbiAgICAgICAgY29sb3I6ICRzZWxlY3RlZC1jb2xvcjtcclxuICAgIH1cclxuXHJcbiAgICAmLmRpc2FibGVke1xyXG4gICAgICAgIG9wYWNpdHk6ICRkaXNhYmxlZC1vcGFjaXR5O1xyXG4gICAgfVxyXG59XHJcblxyXG4udGV4dGFyZWFfc3RhcnRlbmR7XHJcbiAgICBmb250LXNpemU6ICRmc2l6ZTE7IFxyXG4gICAgZm9udC13ZWlnaHQ6IDYwMDsgXHJcbiAgICBjb2xvcjogJGNvbG9yODtcclxuICAgIGhlaWdodDogMjBweDtcclxuICAgIHBvaW50ZXItZXZlbnRzOiBub25lO1xyXG59XHJcblxyXG4uaW5wdXRQb3J0e1xyXG4gICAgc3Ryb2tlOiB0cmFuc3BhcmVudDtcclxuICAgIHN0cm9rZS13aWR0aDogMjBweDtcclxuICAgIHBvaW50ZXItZXZlbnRzOiBzdHJva2U7XHJcbiAgICBmaWxsOiRjb2xvcjg7XHJcbiAgICAvL2ZpbGw6bWlkbmlnaHRibHVlO1xyXG4gICAgJi5kaXNhYmxlZHtcclxuICAgICAgICBvcGFjaXR5OiAkZGlzYWJsZWQtb3BhY2l0eTtcclxuICAgIH1cclxuXHJcbn1cclxuLm91dHB1dFBvcnR7XHJcbiAgICBzdHJva2U6IHRyYW5zcGFyZW50O1xyXG4gICAgc3Ryb2tlLXdpZHRoOiAxMXB4O1xyXG4gICAgcG9pbnRlci1ldmVudHM6IHN0cm9rZTtcclxuICAgIGZpbGw6IHRyYW5zcGFyZW50O1xyXG4gICAgLy9maWxsOiBtaWRuaWdodGJsdWU7XHJcbiAgICAmLmRpc2FibGVke1xyXG4gICAgICAgIG9wYWNpdHk6ICRkaXNhYmxlZC1vcGFjaXR5O1xyXG4gICAgfVxyXG4gICAgJjpob3ZlciB7XHJcbiAgICAgICAgc3Ryb2tlOiAkY29sb3I1O1xyXG4gICAgfVxyXG59XHJcbiIsIlxyXG4kY29sb3IxOiAjODA4MDgwO1xyXG4kY29sb3IyOiAjOTk5OTk5O1xyXG4kY29sb3IzOiAjQjNCM0IzOyBcclxuJGNvbG9yNDogI0NDQ0NDQztcclxuJGNvbG9yNTogI0U2RTZFNjtcclxuJGNvbG9yNS01OiByZ2IoMjQ1LCAyNDUsIDI0NSk7XHJcbiRjb2xvcjY6IHJnYigyNTAsIDI1MCwgMjUxKTtcclxuXHJcbiRjb2xvcjc6IHdoaXRlO1xyXG4kY29sb3I4OiAjMzczNzM3O1xyXG5cclxuJHNlbGVjdGVkLWNvbG9yOiByZ2IoMCwgMCwgMTA5KTtcclxuJGhvdmVyLWNvbG9yOiAkY29sb3IyO1xyXG5cclxuJGVycm9yLWNvbG9yOiAjRTk0ODU4OyAvL3BpbmstcmVkXHJcbiRlcnJvci1jb2xvci1sdDogcmdiKDI1NSwgMjIwLCAyMjQpO1xyXG4kcGNvbG9yMjogI0YzQTMyQTsgLy9vcmFuZ2UteWVsbG93XHJcbiRwcmludC1jb2xvcjogcmdiKDEzMCwgMTkxLCAxMTApOyAvL2xpZ2h0Z3JlZW5cclxuJHByaW50LWNvbG9yLWx0OiByZ2IoMjMwLCAyNTUsIDIyMSk7XHJcbiRzZWxlY3RHZW9tLWNvbG9yOiByZ2IoMjU1LCAxNzQsIDApOyAvLyBsaWdodCBvcmFuZ2VcclxuJHNlbGVjdEdlb20tY29sb3ItbHQ6IHJnYigyNTUsIDIyNSwgMTYwKTtcclxuXHJcbi8vICRwcm9kLWJhY2tncm91bmQtY29sb3I6IHJnYigyNTAsMjUwLDI1MCk7XHJcbi8vICRiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMjIwLDIyMCwyMjApO1xyXG4kZnVuY3Rpb24tdGV4dC1jb2xvcjogcmdiKDE5MCwgMTQwLCAzMCk7XHJcbiRmdW5jdGlvbi10ZXh0LWNvbG9yMjogcmdiKDE4LCAxMjYsIDEzNik7XHJcbiRiYXNpYy1mdW5jdGlvbi10ZXh0LWNvbG9yOiByZ2IoMjAwLCA3MCwgMTUwKTtcclxuJGNvbW1lbnQtY29sb3I6IGRhcmtncmVlbjtcclxuIiwiJHBhZGRpbmc6IDQwcHg7IC8vID8gbm90IHVzZWRcclxuJHNtYWxsLXBhZGRpbmc6IDE1cHg7XHJcbiRoZWFkZXItaGVpZ2h0OiA0MHB4O1xyXG5cclxuJGZzaXplMTogMTVweDtcclxuJGZzaXplMjogMTJweDtcclxuJGZzaXplMzogMzBweDtcclxuXHJcbiRwb3J0LXNpemU6IDE1cHg7XHJcbiRkZWZhdWx0LXNpZGUtcGFkZGluZzogMTVweDtcclxuXHJcbiRkaXNhYmxlZC1vcGFjaXR5OiAwLjQ7Il19 */"

/***/ }),

/***/ "./src/app/views/view-flowchart/node/node.component.ts":
/*!*************************************************************!*\
  !*** ./src/app/views/view-flowchart/node/node.component.ts ***!
  \*************************************************************/
/*! exports provided: NodeComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NodeComponent", function() { return NodeComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _node_actions__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node.actions */ "./src/app/views/view-flowchart/node/node.actions.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};


var NodeComponent = /** @class */ (function () {
    function NodeComponent() {
        this.action = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        this.last = [0, 0];
        this.isDown = false;
    }
    /*
    update the position of the node
    */
    NodeComponent.prototype.updatePosition = function (position) {
        this.node.position = position;
    };
    /*
    select a node
    */
    NodeComponent.prototype.nodeSelect = function (event) {
        event.stopPropagation();
        this.action.emit({ action: _node_actions__WEBPACK_IMPORTED_MODULE_1__["ACTIONS"].SELECT, ctrlKey: event.ctrlKey || event.metaKey });
    };
    /*
    check if the input port of the node is draggable --> false only for start node, true otherwise
    */
    NodeComponent.prototype.inputDraggable = function () {
        return !(this.node.type === 'start');
    };
    /*
    check if the output port of the node is draggable --> false only for end node, true otherwise
    */
    NodeComponent.prototype.outputDraggable = function () {
        return !(this.node.type === 'end');
    };
    /*
    initiate dragging node when mousedown inside the node group
    */
    NodeComponent.prototype.startDragNode = function (event) {
        event.stopPropagation();
        // if (document.activeElement.tagName === 'TEXTAREA') { return; }
        event.preventDefault();
        this.action.emit({ action: _node_actions__WEBPACK_IMPORTED_MODULE_1__["ACTIONS"].DRAGNODE, data: event });
    };
    /*
    initiate dragging port when mousedown inside the port (inside the invisible stroke of the port)
    */
    NodeComponent.prototype.startDragPort = function (event, portType) {
        event.preventDefault();
        event.stopPropagation();
        var pos = this.node.position;
        var data;
        if (portType === 'input') {
            data = this.node.input;
            pos = [pos.x + this.inputOffset[0], pos.y + this.inputOffset[1]];
        }
        else {
            data = this.node.output;
            pos = [pos.x + this.outputOffset[0], pos.y + this.outputOffset[1]];
        }
        this.action.emit({ action: _node_actions__WEBPACK_IMPORTED_MODULE_1__["ACTIONS"].DRAGPORT, data: data, position: pos, type: portType });
    };
    /*
    switch the viewchild of the appModule to the node's procedure view when double-click on the node
    */
    NodeComponent.prototype.switchToProcedure = function (event) {
        event.stopPropagation();
        this.action.emit({ action: _node_actions__WEBPACK_IMPORTED_MODULE_1__["ACTIONS"].PROCEDURE });
    };
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", Object)
    ], NodeComponent.prototype, "node", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", Boolean)
    ], NodeComponent.prototype, "selected", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", Object)
    ], NodeComponent.prototype, "inputOffset", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", Object)
    ], NodeComponent.prototype, "outputOffset", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])(),
        __metadata("design:type", Object)
    ], NodeComponent.prototype, "action", void 0);
    NodeComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: '[node]',
            template: __webpack_require__(/*! ./node.component.html */ "./src/app/views/view-flowchart/node/node.component.html"),
            styles: [__webpack_require__(/*! ./node.component.scss */ "./src/app/views/view-flowchart/node/node.component.scss")]
        })
    ], NodeComponent);
    return NodeComponent;
}());



/***/ }),

/***/ "./src/app/views/view-flowchart/view-flowchart-routing.module.ts":
/*!***********************************************************************!*\
  !*** ./src/app/views/view-flowchart/view-flowchart-routing.module.ts ***!
  \***********************************************************************/
/*! exports provided: ViewFlowchartRoutingModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ViewFlowchartRoutingModule", function() { return ViewFlowchartRoutingModule; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var _view_flowchart_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./view-flowchart.component */ "./src/app/views/view-flowchart/view-flowchart.component.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};



var routes = [
    {
        path: '',
        component: _view_flowchart_component__WEBPACK_IMPORTED_MODULE_2__["ViewFlowchartComponent"],
        children: [
        // {
        //   path: '',
        //   loadChildren: '../../mobius-viewer/mobius-viewer.module#MobiusViewerModule',
        // }
        ]
    }
];
var ViewFlowchartRoutingModule = /** @class */ (function () {
    function ViewFlowchartRoutingModule() {
    }
    ViewFlowchartRoutingModule = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["NgModule"])({
            imports: [_angular_router__WEBPACK_IMPORTED_MODULE_1__["RouterModule"].forChild(routes)],
            exports: [_angular_router__WEBPACK_IMPORTED_MODULE_1__["RouterModule"]]
        })
    ], ViewFlowchartRoutingModule);
    return ViewFlowchartRoutingModule;
}());



/***/ }),

/***/ "./src/app/views/view-flowchart/view-flowchart.component.html":
/*!********************************************************************!*\
  !*** ./src/app/views/view-flowchart/view-flowchart.component.html ***!
  \********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class='container'>\r\n    <as-split #flowchartSplit\r\n    direction=\"horizontal\" \r\n    (dragStart)='dragSplitStart($event)'\r\n    (dragEnd)='dragSplitEnd($event)'>\r\n        <as-split-area [size]=\"100 - getSplit()\">\r\n            <panel-header [flowchart]='getFlowchart()'></panel-header>\r\n            <!-- viewchild content -->\r\n            <div id = 'flowchart-main-container' class='flowchart-container'>\r\n                <!--\r\n                -->\r\n            \r\n                <!-- svg component -->\r\n                <!--\r\n                (panstart)='panStart($event)'\r\n                (panmove)='handleMouseMove($event)'\r\n                (panend)='handleMouseUp($event)'\r\n                -->\r\n                <svg id=\"svg-canvas\" class = \"svgCanvas\" \r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n\r\n                [attr.viewBox]=\"viewbox\"\r\n                (mouseenter)='activateKeyEvent()'\r\n                (mouseleave)='deactivateKeyEvent($event)'\r\n                (mousedown)='panStart($event)'\r\n                (mousemove)='handleMouseMove($event)'\r\n                (mouseup)='handleMouseUp($event)'\r\n                (click)='deselectAll($event)'\r\n                (wheel)='scale($event)'\r\n                (dblclick)='addNode($event)'\r\n                >\r\n                    <!-- definitions for svg: grid patterns, arrow head for connecting wire-->\r\n                    <defs>\r\n                        <!-- grid pattern -->\r\n                        <!-- <pattern id=\"smallGrid\" width=\"20\" height=\"20\" patternUnits=\"userSpaceOnUse\">\r\n                            <path d=\"M 20 0 L 0 0 0 20\" fill=\"none\" stroke=\"gray\" stroke-width=\"0.5\"/>\r\n                        </pattern>\r\n                        <pattern id=\"grid\" width=\"100\" height=\"100\" patternUnits=\"userSpaceOnUse\">\r\n                            <rect width=\"100\" height=\"100\" fill=\"url(#smallGrid)\"/>\r\n                            <path d=\"M 100 0 L 0 0 0 100\" fill=\"none\" stroke=\"gray\" stroke-width=\"1\"/>\r\n                        </pattern> -->\r\n            \r\n                        <!-- arrow head -->\r\n                        <marker id=\"arrow\" markerWidth=\"30\" markerHeight=\"30\" refX=\"0\" refY=\"4\" orient=\"auto\" markerUnits=\"strokeWidth\" viewBox=\"0 0 40 40\">\r\n                            <path d=\"M0,0 L9,4 L0,8\"/>\r\n                        </marker>\r\n                        <marker id=\"arrow_selected\" markerWidth=\"30\" markerHeight=\"30\" refX=\"0\" refY=\"4\" orient=\"auto\" markerUnits=\"strokeWidth\" viewBox=\"0 0 40 40\">\r\n                            <path d=\"M0,0 L0,8 L9,4 z\"/>\r\n                        </marker>\r\n                    </defs>\r\n            \r\n                    <!-- svg frame-->\r\n                    <rect width=\"100%\" height=\"100%\" fill=\"url(#grid)\" />\r\n                                \r\n            \r\n                    <!-- wires => edge.component -->\r\n                    <g edge *ngFor=\"let edge of getFlowchart().edges; let edge_index = index\" \r\n                    [edge]='edge'\r\n                    [inputOffset]='inputOffset'\r\n                    [outputOffset]='outputOffset'\r\n                    (selected)='selectEdge($event, edge_index)'\r\n                    />\r\n            \r\n                    <!-- temporary wire while dragging port, default position to <(0,0),(0,0)>, modified when a port is being dragged -->\r\n                    <line id=\"temporary-wire\" class=\"temp-wire\" x1=\"0\" y1='0' x2='0' y2='0'></line>\r\n            \r\n                    <!-- nodes => node.component -->\r\n                    <g node *ngFor=\"let node of getFlowchart().nodes; let node_index = index\" \r\n                    id='flw_node_{{node_index}}'\r\n                    [node]='node' \r\n                    [selected]='isSelected(node_index)'\r\n                    [inputOffset]='inputOffset'\r\n                    [outputOffset]='outputOffset'\r\n                    (action)='nodeAction($event, node_index)'\r\n                    />\r\n                </svg>\r\n            \r\n                <!-- focus on flowchart button on the top right of the svg -->\r\n                <button id='zoomToFit' class='btn resetViewer-button' mat-icon-button disableRipple='true' (click)='focusFlowchart()' title=\"Zoom to Fit\">\r\n                    <mat-icon svgIcon=\"cZoom\"></mat-icon>\r\n                </button>\r\n                \r\n            \r\n            </div>\r\n                        \r\n        </as-split-area>\r\n\r\n        <as-split-area [size]=\"getSplit()\">\r\n            <!-- data viewers panel -->\r\n            <div class='content__viewer' >\r\n                <model-viewers-container [data]='viewerData(getNode(), true)'></model-viewers-container>\r\n            </div>\r\n        </as-split-area>\r\n        \r\n    </as-split>\r\n    <notification [message]='notificationMessage' [dummyTrigger]='notificationTrigger'></notification>\r\n\r\n</div>\r\n<spinner></spinner>\r\n<chrome></chrome>\r\n\r\n"

/***/ }),

/***/ "./src/app/views/view-flowchart/view-flowchart.component.scss":
/*!********************************************************************!*\
  !*** ./src/app/views/view-flowchart/view-flowchart.component.scss ***!
  \********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".flowchart-container {\n  position: relative;\n  width: 100%;\n  height: 100%;\n  overflow: visible;\n  background: transparent; }\n  .flowchart-container .svgCanvas {\n    -webkit-transform-origin: top left 0px;\n            transform-origin: top left 0px; }\n  .flowchart-container .svgCanvas .temp-wire {\n      stroke: #808080;\n      stroke-width: 2px;\n      stroke-dasharray: 10 15;\n      opacity: 0.4; }\n  .button-row {\n  position: absolute;\n  bottom: 50px;\n  left: 10px; }\n  .button-row button {\n    color: #808080;\n    background-color: transparent;\n    border: none;\n    height: 24px;\n    width: 24px;\n    text-align: center;\n    font-size: 24px;\n    padding: 0px; }\n  .resetViewer-button {\n  cursor: pointer;\n  z-index: 2;\n  background-color: transparent;\n  border: none;\n  position: absolute;\n  top: 34px;\n  right: 2px;\n  color: #808080;\n  padding: 0px;\n  width: 30px;\n  height: 34px;\n  outline: none; }\n  #arrow {\n  stroke: #373737;\n  fill: transparent; }\n  #arrow_selected {\n  stroke: #00006d;\n  fill: #00006d; }\n\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdmlld3Mvdmlldy1mbG93Y2hhcnQvQzpcXERyb3Bib3hcXEZpbGVzXFxTb2Z0d2FyZVxcR2l0SHViXFxkZXNpZ24tYXV0b21hdGlvblxcbW9iaXVzLXBhcmFtZXRyaWMtbW9kZWxsZXIvc3JjXFxhcHBcXHZpZXdzXFx2aWV3LWZsb3djaGFydFxcdmlldy1mbG93Y2hhcnQuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL3ZpZXdzL3ZpZXctZmxvd2NoYXJ0L0M6XFxEcm9wYm94XFxGaWxlc1xcU29mdHdhcmVcXEdpdEh1YlxcZGVzaWduLWF1dG9tYXRpb25cXG1vYml1cy1wYXJhbWV0cmljLW1vZGVsbGVyL3NyY1xcc2Nzc1xcY29sb3JzLnNjc3MiLCJzcmMvYXBwL3ZpZXdzL3ZpZXctZmxvd2NoYXJ0L0M6XFxEcm9wYm94XFxGaWxlc1xcU29mdHdhcmVcXEdpdEh1YlxcZGVzaWduLWF1dG9tYXRpb25cXG1vYml1cy1wYXJhbWV0cmljLW1vZGVsbGVyL3NyY1xcc2Nzc1xcdmFyaWFibGVzLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBSUE7RUFDSSxrQkFBa0I7RUFDbEIsV0FBVztFQUNYLFlBQVk7RUFDWixpQkFBaUI7RUFDakIsdUJBQXVCLEVBQUE7RUFMM0I7SUFVUSxzQ0FBOEI7WUFBOUIsOEJBQThCLEVBQUE7RUFWdEM7TUFhWSxlQ2hCSTtNRGlCSixpQkFBaUI7TUFDakIsdUJBQXVCO01BQ3ZCLFlFVFUsRUFBQTtFRmV0QjtFQUNJLGtCQUFrQjtFQUNsQixZQUFZO0VBQ1osVUFBVSxFQUFBO0VBSGQ7SUFNUSxjQy9CUTtJRGdDUiw2QkFBNkI7SUFDN0IsWUFBWTtJQUNaLFlBQVk7SUFDWixXQUFXO0lBQ1gsa0JBQWtCO0lBQ2xCLGVBQWU7SUFDZixZQUFZLEVBQUE7RUFJcEI7RUFDSSxlQUFlO0VBQ2YsVUFBVTtFQUNWLDZCQUE2QjtFQUM3QixZQUFZO0VBQ1osa0JBQWtCO0VBQ2xCLFNBQVU7RUFDVixVQUFVO0VBQ1YsY0NsRFk7RURtRFosWUFBWTtFQUNaLFdBQVc7RUFDWCxZQUFZO0VBQ1osYUFBYSxFQUFBO0VBR2pCO0VBQ0ksZUNqRFk7RURrRFosaUJBQWlCLEVBQUE7RUFFckI7RUFDSSxlQ25EMkI7RURvRDNCLGFDcEQyQixFQUFBIiwiZmlsZSI6InNyYy9hcHAvdmlld3Mvdmlldy1mbG93Y2hhcnQvdmlldy1mbG93Y2hhcnQuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJAaW1wb3J0ICd+c2Nzcy9jb2xvcnMnO1xyXG5AaW1wb3J0ICd+c2Nzcy92YXJpYWJsZXMnO1xyXG5cclxuXHJcbi5mbG93Y2hhcnQtY29udGFpbmVye1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgICBvdmVyZmxvdzogdmlzaWJsZTtcclxuICAgIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50O1xyXG5cclxuICAgIC5zdmdDYW52YXN7XHJcbiAgICAgICAgLy8gd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgLy8gaGVpZ2h0OiAxMDAlO1xyXG4gICAgICAgIHRyYW5zZm9ybS1vcmlnaW46IHRvcCBsZWZ0IDBweDtcclxuICAgIFxyXG4gICAgICAgIC50ZW1wLXdpcmV7XHJcbiAgICAgICAgICAgIHN0cm9rZTogJGNvbG9yMTtcclxuICAgICAgICAgICAgc3Ryb2tlLXdpZHRoOiAycHg7XHJcbiAgICAgICAgICAgIHN0cm9rZS1kYXNoYXJyYXk6IDEwIDE1O1xyXG4gICAgICAgICAgICBvcGFjaXR5OiAkZGlzYWJsZWQtb3BhY2l0eTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICBcclxufVxyXG5cclxuLmJ1dHRvbi1yb3cge1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlOyBcclxuICAgIGJvdHRvbTogNTBweDsgXHJcbiAgICBsZWZ0OiAxMHB4O1xyXG5cclxuICAgIGJ1dHRvbntcclxuICAgICAgICBjb2xvcjogJGNvbG9yMTtcclxuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcclxuICAgICAgICBib3JkZXI6IG5vbmU7XHJcbiAgICAgICAgaGVpZ2h0OiAyNHB4O1xyXG4gICAgICAgIHdpZHRoOiAyNHB4O1xyXG4gICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgICAgICBmb250LXNpemU6IDI0cHg7XHJcbiAgICAgICAgcGFkZGluZzogMHB4O1xyXG4gICAgfVxyXG59XHJcblxyXG4ucmVzZXRWaWV3ZXItYnV0dG9ue1xyXG4gICAgY3Vyc29yOiBwb2ludGVyO1xyXG4gICAgei1pbmRleDogMjtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xyXG4gICAgYm9yZGVyOiBub25lO1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlOyBcclxuICAgIHRvcDogIDM0cHg7IFxyXG4gICAgcmlnaHQ6IDJweDtcclxuICAgIGNvbG9yOiAkY29sb3IxO1xyXG4gICAgcGFkZGluZzogMHB4O1xyXG4gICAgd2lkdGg6IDMwcHg7XHJcbiAgICBoZWlnaHQ6IDM0cHg7XHJcbiAgICBvdXRsaW5lOiBub25lO1xyXG59XHJcblxyXG4jYXJyb3d7XHJcbiAgICBzdHJva2U6ICRjb2xvcjg7XHJcbiAgICBmaWxsOiB0cmFuc3BhcmVudDtcclxufVxyXG4jYXJyb3dfc2VsZWN0ZWR7XHJcbiAgICBzdHJva2U6ICRzZWxlY3RlZC1jb2xvcjtcclxuICAgIGZpbGw6ICRzZWxlY3RlZC1jb2xvcjtcclxufVxyXG4iLCJcclxuJGNvbG9yMTogIzgwODA4MDtcclxuJGNvbG9yMjogIzk5OTk5OTtcclxuJGNvbG9yMzogI0IzQjNCMzsgXHJcbiRjb2xvcjQ6ICNDQ0NDQ0M7XHJcbiRjb2xvcjU6ICNFNkU2RTY7XHJcbiRjb2xvcjUtNTogcmdiKDI0NSwgMjQ1LCAyNDUpO1xyXG4kY29sb3I2OiByZ2IoMjUwLCAyNTAsIDI1MSk7XHJcblxyXG4kY29sb3I3OiB3aGl0ZTtcclxuJGNvbG9yODogIzM3MzczNztcclxuXHJcbiRzZWxlY3RlZC1jb2xvcjogcmdiKDAsIDAsIDEwOSk7XHJcbiRob3Zlci1jb2xvcjogJGNvbG9yMjtcclxuXHJcbiRlcnJvci1jb2xvcjogI0U5NDg1ODsgLy9waW5rLXJlZFxyXG4kZXJyb3ItY29sb3ItbHQ6IHJnYigyNTUsIDIyMCwgMjI0KTtcclxuJHBjb2xvcjI6ICNGM0EzMkE7IC8vb3JhbmdlLXllbGxvd1xyXG4kcHJpbnQtY29sb3I6IHJnYigxMzAsIDE5MSwgMTEwKTsgLy9saWdodGdyZWVuXHJcbiRwcmludC1jb2xvci1sdDogcmdiKDIzMCwgMjU1LCAyMjEpO1xyXG4kc2VsZWN0R2VvbS1jb2xvcjogcmdiKDI1NSwgMTc0LCAwKTsgLy8gbGlnaHQgb3JhbmdlXHJcbiRzZWxlY3RHZW9tLWNvbG9yLWx0OiByZ2IoMjU1LCAyMjUsIDE2MCk7XHJcblxyXG4vLyAkcHJvZC1iYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMjUwLDI1MCwyNTApO1xyXG4vLyAkYmFja2dyb3VuZC1jb2xvcjogcmdiKDIyMCwyMjAsMjIwKTtcclxuJGZ1bmN0aW9uLXRleHQtY29sb3I6IHJnYigxOTAsIDE0MCwgMzApO1xyXG4kZnVuY3Rpb24tdGV4dC1jb2xvcjI6IHJnYigxOCwgMTI2LCAxMzYpO1xyXG4kYmFzaWMtZnVuY3Rpb24tdGV4dC1jb2xvcjogcmdiKDIwMCwgNzAsIDE1MCk7XHJcbiRjb21tZW50LWNvbG9yOiBkYXJrZ3JlZW47XHJcbiIsIiRwYWRkaW5nOiA0MHB4OyAvLyA/IG5vdCB1c2VkXHJcbiRzbWFsbC1wYWRkaW5nOiAxNXB4O1xyXG4kaGVhZGVyLWhlaWdodDogNDBweDtcclxuXHJcbiRmc2l6ZTE6IDE1cHg7XHJcbiRmc2l6ZTI6IDEycHg7XHJcbiRmc2l6ZTM6IDMwcHg7XHJcblxyXG4kcG9ydC1zaXplOiAxNXB4O1xyXG4kZGVmYXVsdC1zaWRlLXBhZGRpbmc6IDE1cHg7XHJcblxyXG4kZGlzYWJsZWQtb3BhY2l0eTogMC40OyJdfQ== */"

/***/ }),

/***/ "./src/app/views/view-flowchart/view-flowchart.component.ts":
/*!******************************************************************!*\
  !*** ./src/app/views/view-flowchart/view-flowchart.component.ts ***!
  \******************************************************************/
/*! exports provided: ViewFlowchartComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ViewFlowchartComponent", function() { return ViewFlowchartComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _models_node__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @models/node */ "./src/app/shared/models/node/index.ts");
/* harmony import */ var _node_node_actions__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./node/node.actions */ "./src/app/views/view-flowchart/node/node.actions.ts");
/* harmony import */ var circular_json__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! circular-json */ "./node_modules/circular-json/build/circular-json.node.js");
/* harmony import */ var circular_json__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(circular_json__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm5/index.js");
/* harmony import */ var _services__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @services */ "./src/app/shared/services/index.ts");
/* harmony import */ var _models_flowchart__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @models/flowchart */ "./src/app/shared/models/flowchart/index.ts");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var angular_split__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! angular-split */ "./node_modules/angular-split/fesm5/angular-split.js");
/* harmony import */ var _shared_components_file_loadurl_component__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @shared/components/file/loadurl.component */ "./src/app/shared/components/file/loadurl.component.ts");
/* harmony import */ var _shared_getViewerData__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @shared/getViewerData */ "./src/app/shared/getViewerData.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};






// import size of the canvas





var ViewFlowchartComponent = /** @class */ (function () {
    function ViewFlowchartComponent(dataService, router) {
        this.dataService = dataService;
        this.router = router;
        this.viewerData = _shared_getViewerData__WEBPACK_IMPORTED_MODULE_10__["getViewerData"];
        this.switch = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        this.viewbox = "0 0 " + _models_flowchart__WEBPACK_IMPORTED_MODULE_6__["canvasSize"] + " " + _models_flowchart__WEBPACK_IMPORTED_MODULE_6__["canvasSize"];
        this.starTxyzs = [];
        // variable for flowchart zooming
        this.mousePos = [0, 0];
        this.zoom = 10;
        this.minZoom = 5;
        this.maxZoom = 25;
        this.zoomFactor = 1;
        // variable for edge
        this.edge = { source: undefined, target: undefined, selected: false };
        this.selectedEdge = [];
        // listener for events, only activated when the mouse is hovering over the svg component
        this.keydownListener = Object(rxjs__WEBPACK_IMPORTED_MODULE_4__["fromEvent"])(document, 'keydown');
        this.copyListener = Object(rxjs__WEBPACK_IMPORTED_MODULE_4__["fromEvent"])(document, 'copy');
        this.pasteListener = Object(rxjs__WEBPACK_IMPORTED_MODULE_4__["fromEvent"])(document, 'paste');
        this.listenerActive = false;
        this.notificationMessage = '';
        this.notificationTrigger = true;
        // constants for offset positions of input/output port relative to the node's position
        this.inputOffset = [50, 40];
        this.outputOffset = [50, 40];
        new _shared_components_file_loadurl_component__WEBPACK_IMPORTED_MODULE_9__["LoadUrlComponent"](this.dataService, this.router).loadStartUpURL(this.router.url);
    }
    ViewFlowchartComponent_1 = ViewFlowchartComponent;
    ViewFlowchartComponent.disableNode = function (node) {
        for (var _i = 0, _a = node.input.edges; _i < _a.length; _i++) {
            var edge = _a[_i];
            if (edge.source.parentNode.enabled) {
                return;
            }
        }
        node.enabled = false;
        for (var _b = 0, _c = node.output.edges; _b < _c.length; _b++) {
            var edge = _c[_b];
            ViewFlowchartComponent_1.disableNode(edge.target.parentNode);
        }
    };
    ViewFlowchartComponent.enableNode = function (node) {
        node.enabled = true;
        for (var _i = 0, _a = node.output.edges; _i < _a.length; _i++) {
            var edge = _a[_i];
            ViewFlowchartComponent_1.enableNode(edge.target.parentNode);
        }
    };
    ViewFlowchartComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.canvas = document.getElementById('svg-canvas');
        // const panZoom = svgPanZoom(this.canvas);
        var bRect = this.canvas.getBoundingClientRect();
        var boundingDiv = document.getElementById('flowchart-main-container').getBoundingClientRect();
        this.offset = [bRect.left, bRect.top];
        /*
        */
        // transform
        if (!this.dataService.flowchartPos) {
            this.dataService.flowchartPos = 'matrix(' + this.zoom + ', 0, 0,' + this.zoom + ', -' +
                boundingDiv.width * this.zoom / 2 + ', -' + boundingDiv.width * this.zoom / 2 + ')';
        }
        else {
            this.zoom = Number(this.dataService.flowchartPos.split(',')[3]);
        }
        this.canvas.style.transform = this.dataService.flowchartPos;
        // copy: copy node
        this.copySub = this.copyListener.subscribe(function (val) {
            // || document.activeElement.tagName === 'TEXTAREA'
            if (!_this.listenerActive) {
                return;
            }
            var node = _this.dataService.node;
            if (node.type === '') {
                var saved = {
                    'input': node.input,
                    'output': node.output,
                    'model': node.model
                };
                node.input = undefined;
                node.output = undefined;
                node.model = undefined;
                _this.copied = circular_json__WEBPACK_IMPORTED_MODULE_3__["stringify"](node);
                node.input = saved.input;
                node.output = saved.output;
                node.model = saved.model;
                _this.notificationMessage = "Copied Last Selected Node";
                _this.notificationTrigger = !_this.notificationTrigger;
            }
        });
        // paste: paste copied node
        this.pasteSub = this.pasteListener.subscribe(function (val) {
            //
            if (!_this.listenerActive || document.activeElement.tagName === 'TEXTAREA') {
                return;
            }
            if (_this.copied) {
                event.preventDefault();
                var newNode = circular_json__WEBPACK_IMPORTED_MODULE_3__["parse"](_this.copied);
                var pt = _this.canvas.createSVGPoint();
                pt.x = 20;
                pt.y = 100;
                var svgP = _this.convertCoord(pt);
                _models_node__WEBPACK_IMPORTED_MODULE_1__["NodeUtils"].updateNode(newNode, svgP);
                newNode.enabled = false;
                _this.dataService.flowchart.nodes.push(newNode);
                _this.notificationMessage = "Pasted Node";
                _this.notificationTrigger = !_this.notificationTrigger;
                _this.dataService.registerFlwAction({ 'type': 'add', 'nodes': [newNode] });
            }
        });
        // delete: delete selected edge(s)
        this.keydownSub = this.keydownListener.subscribe(function (event) {
            if (!_this.listenerActive) {
                return;
            }
            if (event.key === 'Delete') {
                if (_this.selectedEdge.length > 0) {
                    _this.deleteSelectedEdges();
                }
                else {
                    if (document.activeElement.id !== _this.dataService.node.id) {
                        _this.deleteSelectedNodes();
                    }
                }
            }
            else if (event.key.toLowerCase() === 'z' && (event.ctrlKey === true || event.metaKey === true)) {
                var act = void 0;
                if (event.shiftKey) {
                    act = _this.dataService.redoFlw();
                }
                else {
                    act = _this.dataService.undoFlw();
                }
                if (!act) {
                    return;
                }
                if ((act.type === 'add') !== event.shiftKey) {
                    if (act.edges) {
                        for (var _i = 0, _a = act.edges; _i < _a.length; _i++) {
                            var tbrEdge = _a[_i];
                            for (var i = 0; i < _this.dataService.flowchart.edges.length; i++) {
                                if (_this.dataService.flowchart.edges[i] === tbrEdge) {
                                    _this.deleteEdge(i);
                                    break;
                                }
                            }
                        }
                    }
                    if (!act.nodes) {
                        return;
                    }
                    for (var _b = 0, _c = act.nodes; _b < _c.length; _b++) {
                        var tbrNode = _c[_b];
                        var nodeIndex = void 0;
                        for (var i = 0; i < _this.dataService.flowchart.nodes.length; i++) {
                            var node = _this.dataService.flowchart.nodes[i];
                            if (tbrNode.id === node.id) {
                                nodeIndex = i;
                                _this.dataService.flowchart.nodes.splice(i, 1);
                                break;
                            }
                        }
                        var tbrSel = void 0;
                        for (var j = 0; j < _this.dataService.flowchart.meta.selected_nodes.length; j++) {
                            if (tbrSel) {
                                _this.dataService.flowchart.meta.selected_nodes[j] -= 1;
                            }
                            if (_this.dataService.flowchart.meta.selected_nodes[j] === nodeIndex) {
                                tbrSel = nodeIndex;
                            }
                        }
                        _this.dataService.flowchart.meta.selected_nodes.splice(tbrSel, 1);
                    }
                }
                else {
                    if (act.nodes) {
                        for (var _d = 0, _e = act.nodes; _d < _e.length; _d++) {
                            var tbaNode = _e[_d];
                            _this.dataService.flowchart.nodes.push(tbaNode);
                        }
                    }
                    if (!act.edges) {
                        return;
                    }
                    for (var _f = 0, _g = act.edges; _f < _g.length; _f++) {
                        var tbaEdge = _g[_f];
                        _this.dataService.flowchart.edges.push(tbaEdge);
                        tbaEdge.target.edges.push(tbaEdge);
                        tbaEdge.source.edges.push(tbaEdge);
                        tbaEdge.selected = false;
                        if (tbaEdge.source.parentNode.enabled) {
                            tbaEdge.target.parentNode.enabled = true;
                        }
                    }
                    while (true) {
                        var check = false;
                        for (var _h = 0, _j = _this.dataService.flowchart.nodes; _h < _j.length; _h++) {
                            var node = _j[_h];
                            if (node.enabled) {
                                continue;
                            }
                            for (var _k = 0, _l = node.input.edges; _k < _l.length; _k++) {
                                var inp = _l[_k];
                                if (inp.source.parentNode.enabled) {
                                    node.enabled = true;
                                    check = true;
                                    break;
                                }
                            }
                        }
                        if (!check) {
                            break;
                        }
                    }
                }
            }
        });
    };
    ViewFlowchartComponent.prototype.convertCoord = function (pt) {
        var isFirefox = typeof InstallTrigger !== 'undefined';
        if (isFirefox) {
            var ctm = this.canvas.getScreenCTM();
            var bRect = this.canvas.getBoundingClientRect();
            ctm.a = ctm.a * this.zoom;
            ctm.d = ctm.d * this.zoom;
            ctm.e = bRect.x;
            ctm.f = bRect.y;
            return pt.matrixTransform(ctm.inverse());
        }
        else {
            return pt.matrixTransform(this.canvas.getScreenCTM().inverse());
        }
    };
    ViewFlowchartComponent.prototype.ngAfterViewInit = function () {
        if (this.dataService.newFlowchart) {
            this.focusFlowchart();
            this.dataService.newFlowchart = false;
        }
        else if (this.dataService.splitUpdate) {
            this.focusFlowchart();
            this.dataService.splitUpdate = false;
        }
    };
    /*
    handle event received from node component
    */
    ViewFlowchartComponent.prototype.nodeAction = function (event, node_index) {
        switch (event.action) {
            // switch the viewchild of the appModule to the node's procedure view when double-click on the node
            case _node_node_actions__WEBPACK_IMPORTED_MODULE_2__["ACTIONS"].PROCEDURE:
                this.router.navigate(['/editor']);
                // this.switch.emit('editor');
                this.deactivateKeyEvent();
                break;
            // select a node
            case _node_node_actions__WEBPACK_IMPORTED_MODULE_2__["ACTIONS"].SELECT:
                var selectedNode = this.dataService.flowchart.nodes[node_index];
                if (event.ctrlKey || event.metaKey) {
                    document.getElementById('executeButton').focus();
                    var index = this.dataService.flowchart.meta.selected_nodes.indexOf(node_index);
                    if (index === -1) {
                        this.dataService.flowchart.meta.selected_nodes = [node_index].concat(this.dataService.flowchart.meta.selected_nodes);
                    }
                    else {
                        if (this.dataService.flowchart.meta.selected_nodes.length > 1) {
                            this.dataService.flowchart.meta.selected_nodes.splice(index, 1);
                        }
                    }
                }
                else {
                    if (selectedNode.type === ''
                        && this.dataService.flowchart.meta.selected_nodes.length === 1
                        && this.dataService.flowchart.meta.selected_nodes[0] === node_index) {
                        if (document.activeElement.id !== selectedNode.id) {
                            var textarea = document.getElementById(selectedNode.id);
                            textarea.focus();
                            textarea.select();
                        }
                    }
                    else {
                        document.getElementById('executeButton').focus();
                    }
                    this.dataService.flowchart.meta.selected_nodes = [node_index];
                }
                break;
            // initiate dragging node
            case _node_node_actions__WEBPACK_IMPORTED_MODULE_2__["ACTIONS"].DRAGNODE:
                this.element = this.dataService.flowchart.nodes[node_index];
                var pt = this.canvas.createSVGPoint();
                // get current mouse position in the page
                pt.x = event.data.pageX;
                pt.y = event.data.pageY;
                // convert mouse position to svg position (special procedure for firefox)
                var svgP = this.convertCoord(pt);
                // save the svg position as starTxyzs
                this.starTxyzs = [
                    svgP.x,
                    svgP.y
                ];
                if (this.starTxyzs[0] === NaN) {
                    this.starTxyzs = [0, 0];
                }
                // mark the dragging mode as dragNode
                this.isDown = 2;
                break;
            // initiate dragging input/output port
            case _node_node_actions__WEBPACK_IMPORTED_MODULE_2__["ACTIONS"].DRAGPORT:
                // create a new edge
                this.edge = { source: undefined, target: undefined, selected: false };
                // assign the port to the edge's input/output accordingly
                if (event.type === 'input') {
                    this.edge.target = event.data;
                }
                else {
                    this.edge.source = event.data;
                }
                this.startType = event.type;
                // modify the temporary-edge's coordinate
                this.element = document.getElementById('temporary-wire');
                this.element.setAttribute('x1', event.position[0]);
                this.element.setAttribute('y1', event.position[1]);
                this.element.setAttribute('x2', event.position[0]);
                this.element.setAttribute('y2', event.position[1]);
                this.isDown = 3;
                break;
        }
    };
    // check if the node at node_index is selected
    ViewFlowchartComponent.prototype.isSelected = function (node_index) {
        return this.dataService.flowchart.meta.selected_nodes.indexOf(node_index) > -1;
    };
    // add a new node
    ViewFlowchartComponent.prototype.addNode = function (event) {
        // create a new node
        var newNode = _models_node__WEBPACK_IMPORTED_MODULE_1__["NodeUtils"].getNewNode();
        // the new node's position would be (20,100) relative to the current view
        var pt = this.canvas.createSVGPoint();
        pt.x = event.pageX - 40;
        pt.y = event.pageY - 35;
        // convert the position to svg position
        var svgP = this.convertCoord(pt);
        // assign the position to the new node and add it to the flowchart
        newNode.position.x = svgP.x;
        newNode.position.y = svgP.y;
        this.dataService.flowchart.nodes.splice(this.dataService.flowchart.nodes.length - 1, 0, newNode);
        this.dataService.registerFlwAction({ 'type': 'add', 'nodes': [newNode] });
    };
    // activate event listener for copy (ctrl+c), paste (ctrl+v), delete (Delete) when mouse hover over the svg component
    ViewFlowchartComponent.prototype.activateKeyEvent = function () {
        this.listenerActive = true;
    };
    // deactivate the event listeners when the mouse exit the svg component
    ViewFlowchartComponent.prototype.deactivateKeyEvent = function (event) {
        this.listenerActive = false;
        if (this.isDown) {
            this.handleMouseUp(event);
        }
    };
    // delete selected node
    ViewFlowchartComponent.prototype.deleteSelectedNodes = function () {
        var deletedNodes = [];
        var deletedEdges = [];
        this.dataService.flowchart.meta.selected_nodes = this.dataService.flowchart.meta.selected_nodes.sort();
        // for each of the selected node
        while (this.dataService.flowchart.meta.selected_nodes.length > 0) {
            var node_index = this.dataService.flowchart.meta.selected_nodes.pop();
            var node = this.dataService.flowchart.nodes[node_index];
            // continue if the node is a start/end node
            if (node.type !== '') {
                continue;
            }
            deletedNodes.push(node);
            var edge_index = 0;
            // delete all the edges connected to the node
            while (edge_index < this.dataService.flowchart.edges.length) {
                var tbrEdge = this.dataService.flowchart.edges[edge_index];
                if (tbrEdge.target.parentNode === node || tbrEdge.source.parentNode === node) {
                    deletedEdges.push(tbrEdge);
                    this.deleteEdge(edge_index);
                    continue;
                }
                edge_index += 1;
            }
            // remove the node from the flowchart
            this.dataService.flowchart.nodes.splice(Number(node_index), 1);
        }
        var nodes = this.dataService.flowchart.nodes;
        for (var i = 0; i < nodes.length; i++) {
            if (nodes[i].type === 'end') {
                this.dataService.flowchart.meta.selected_nodes = [i];
                break;
            }
        }
        this.dataService.registerFlwAction({ 'type': 'del', 'nodes': deletedNodes, 'edges': deletedEdges });
    };
    // delete an edge with a known index
    ViewFlowchartComponent.prototype.deleteEdge = function (edge_index) {
        var tbrEdge = this.dataService.flowchart.edges[edge_index];
        // remove the edge from the target node's list of edges
        for (var i in this.dataService.flowchart.edges) {
            if (tbrEdge.target.edges[i] === tbrEdge) {
                tbrEdge.target.edges.splice(Number(i), 1);
                break;
            }
        }
        // remove the edge from the source node's list of edges
        for (var i in tbrEdge.source.edges) {
            if (tbrEdge.source.edges[i] === tbrEdge) {
                tbrEdge.source.edges.splice(Number(i), 1);
                break;
            }
        }
        ViewFlowchartComponent_1.disableNode(tbrEdge.target.parentNode);
        // remove the edge from the general list of edges
        this.dataService.flowchart.edges.splice(edge_index, 1);
        this.dataService.flowchart.ordered = false;
    };
    // delete all the selected edges
    ViewFlowchartComponent.prototype.deleteSelectedEdges = function () {
        this.selectedEdge.sort().reverse();
        var deletedEdges = [];
        for (var _i = 0, _a = this.selectedEdge; _i < _a.length; _i++) {
            var edge_index = _a[_i];
            deletedEdges.push(this.dataService.flowchart.edges[edge_index]);
            this.deleteEdge(edge_index);
        }
        this.dataService.registerFlwAction({ 'type': 'del', 'edges': deletedEdges });
        this.selectedEdge = [];
    };
    // select an edge
    ViewFlowchartComponent.prototype.selectEdge = function (event, edge_index) {
        // if ctrl is pressed, add the edge into the list of selected edges
        if (event === 'ctrl') {
            this.selectedEdge.push(edge_index);
            this.dataService.flowchart.edges[edge_index].selected = true;
        }
        else if (event === 'single' || (event === false && this.selectedEdge.length > 1)) {
            if (this.selectedEdge.length > 0) {
                for (var _i = 0, _a = this.selectedEdge; _i < _a.length; _i++) {
                    var e = _a[_i];
                    this.dataService.flowchart.edges[e].selected = false;
                }
            }
            this.selectedEdge = [edge_index];
            this.dataService.flowchart.edges[edge_index].selected = true;
        }
        else {
            this.dataService.flowchart.edges[edge_index].selected = false;
            for (var i = 0; i < this.selectedEdge.length; i++) {
                if (this.selectedEdge[i] === edge_index) {
                    this.selectedEdge.splice(i, 1);
                    break;
                }
            }
        }
    };
    // focus view onto the flowchart
    ViewFlowchartComponent.prototype.focusFlowchart = function () {
        // find the frame of the flowchart: frame = [minX, minY, maxX, maxY]
        var frame = [this.dataService.flowchart.nodes[0].position.x, this.dataService.flowchart.nodes[0].position.y,
            this.dataService.flowchart.nodes[0].position.x, this.dataService.flowchart.nodes[0].position.y];
        for (var _i = 0, _a = this.dataService.flowchart.nodes; _i < _a.length; _i++) {
            var node = _a[_i];
            if (node.position.x < frame[0]) {
                frame[0] = node.position.x;
            }
            else if (node.position.x > frame[2]) {
                frame[2] = node.position.x;
            }
            if (node.position.y < frame[1]) {
                frame[1] = node.position.y;
            }
            else if (node.position.y > frame[3]) {
                frame[3] = node.position.y;
            }
        }
        frame[2] += 100;
        frame[3] += 100;
        // calculate the zoom to fit the whole flowchart
        var bRect = this.canvas.getBoundingClientRect();
        var zoom = _models_flowchart__WEBPACK_IMPORTED_MODULE_6__["canvasSize"] / (frame[2] - frame[0]);
        var heightZoom = _models_flowchart__WEBPACK_IMPORTED_MODULE_6__["canvasSize"] / (frame[3] - frame[1]);
        zoom = Math.min(zoom, heightZoom, this.maxZoom);
        var nX;
        var nY;
        if (zoom > this.minZoom) {
            var boundingDiv = document.getElementById('flowchart-main-container').getBoundingClientRect();
            // const ctm = this.zoom * boundingDiv.width / canvasSize;
            var ctm = bRect.width / _models_flowchart__WEBPACK_IMPORTED_MODULE_6__["canvasSize"];
            nX = (boundingDiv.width - (frame[2] + frame[0]) * ctm * zoom / this.zoom) / 2;
            nY = (boundingDiv.height - (frame[3] + frame[1]) * ctm * zoom / this.zoom) / 2;
            // if the minX or minY goes below 0 (outside of svg frame), change them back to 0
            if (nX > 0) {
                nX = 0;
            }
            if (nY > 0) {
                nY = 0;
            }
        }
        else {
            zoom = this.minZoom;
            var ctm = bRect.width / _models_flowchart__WEBPACK_IMPORTED_MODULE_6__["canvasSize"];
            nX = -frame[0] * ctm * zoom / this.zoom;
            nY = -frame[1] * ctm * zoom / this.zoom;
        }
        // transform
        this.dataService.flowchartPos = "matrix(" + zoom + ",0,0," + zoom + "," + nX + "," + nY + ")";
        this.canvas.style.transform = this.dataService.flowchartPos;
        this.zoom = zoom;
    };
    // scale view on mouse wheel
    ViewFlowchartComponent.prototype.scale = function (event) {
        event.preventDefault();
        event.stopPropagation();
        // calculate new zoom value
        var value = this.zoom - (Math.sign(event.deltaY)) * this.zoomFactor;
        // limit the zoom value to be between 1 and 2.5
        if (value >= this.minZoom && value <= this.maxZoom) {
            value = Number((value).toPrecision(5));
        }
        else {
            return;
        }
        /*
        // VER 1: translate before and after re-scaling
        this.mousePos = [event.pageX - this.offset[0], event.pageY - this.offset[1]];

        const bRect = <DOMRect>this.canvas.getBoundingClientRect();
        const beforeX = this.mousePos[0] - bRect.x + this.offset[0];
        const beforeY = this.mousePos[1] - bRect.y + this.offset[1];

        const afterX = beforeX / value + this.mousePos[0] * (value - this.zoom);
        const afterY = beforeY / value + this.mousePos[1] * (value - this.zoom);

        // find transformation matrix
        const m = this.canvas.createSVGMatrix()
        .translate(beforeX / this.zoom, beforeY / this.zoom)
        .scale(value)
        .translate(-afterX, -afterY);

        this.dataService.flowchartPos = 'matrix(' + m.a + ',' + m.b + ',' + m.c + ',' + m.d + ',' + m.e + ',' + m.f + ')';
        */
        /*
        // VER 2 : transform relative to the top-left of the bounding box of the canvas and adjust based on mouse position

        this.mousePos = [event.pageX - this.offset[0], event.pageY - this.offset[1]];

        const bRect = <DOMRect>this.canvas.getBoundingClientRect();
        let newX = (bRect.left - this.offset[0] - this.mousePos[0] * (value - this.zoom)) / this.zoom;
        let newY = (bRect.top - this.offset[1]  - this.mousePos[1] * (value - this.zoom)) / this.zoom;
        const boundingDiv = <DOMRect>document.getElementById('flowchart-main-container').getBoundingClientRect();

        const m = this.canvas.createSVGMatrix()
        .scale(value)
        .translate(newX, newY);

        newX = m.e;
        newY = m.f;

        if (newX > 0) {
            newX = 0;
        } else if (boundingDiv.width - newX > bRect.width * value / this.zoom) {
            newX = boundingDiv.width - bRect.width * value / this.zoom;
        }
        if (newY > 0) {
            newY = 0;
        } else if (boundingDiv.height - newY > bRect.height * value / this.zoom) {
            newY = boundingDiv.height - bRect.height * value / this.zoom;
        }
        if (newY > 0) { newY = 0; }


        this.dataService.flowchartPos = 'matrix(' + value + ', 0, 0,' + value + ',' + newX + ',' + newY + ')';
        */
        /*
        // VER 3: transform relative to the center of the canvas

        const bRect = <DOMRect>this.canvas.getBoundingClientRect();
        const boundingDiv = <DOMRect>document.getElementById('flowchart-main-container').getBoundingClientRect();

        let newX = (bRect.left - this.offset[0]) / this.zoom;
        let newY = (bRect.top - this.offset[1] ) / this.zoom;


        const m = this.canvas.createSVGMatrix()
        .scale(value)
        .translate(newX, newY);

        newX = m.e - boundingDiv.width * (value - this.zoom) / (2 * this.zoom);
        newY = m.f - boundingDiv.width * (value - this.zoom) / (2 * this.zoom);

        if (newX > 0) {
            newX = 0;
        } else if (boundingDiv.width - newX > bRect.width * value / this.zoom) {
            newX = boundingDiv.width - bRect.width * value / this.zoom;
        }
        if (newY > 0) {
            newY = 0;
        } else if (boundingDiv.height - newY > bRect.height * value / this.zoom) {
            newY = boundingDiv.height - bRect.height * value / this.zoom;
        }
        if (newY > 0) { newY = 0; }
        */
        // VER 4: transform relative to the mouse position
        this.mousePos = [event.pageX - this.offset[0], event.pageY - this.offset[1]];
        var bRect = this.canvas.getBoundingClientRect();
        var boundingDiv = document.getElementById('flowchart-main-container').getBoundingClientRect();
        var newX = ((bRect.left - this.offset[0]) * value - this.mousePos[0] * (value - this.zoom)) / this.zoom;
        var newY = ((bRect.top - this.offset[1]) * value - this.mousePos[1] * (value - this.zoom)) / this.zoom;
        // snapping back the x and y coordinates if the zoom goes out of the bounding box
        if (newX > 0) {
            newX = 0;
        }
        else if (boundingDiv.width - newX > bRect.width * value / this.zoom) {
            newX = boundingDiv.width - bRect.width * value / this.zoom;
        }
        if (newY > 0) {
            newY = 0;
        }
        else if (boundingDiv.height - newY > bRect.height * value / this.zoom) {
            newY = boundingDiv.height - bRect.height * value / this.zoom;
        }
        if (newY > 0) {
            newY = 0;
        }
        this.dataService.flowchartPos = 'matrix(' + value + ', 0, 0,' + value + ',' + newX + ',' + newY + ')';
        // transform
        this.canvas.style.transform = this.dataService.flowchartPos;
        this.zoom = value;
    };
    // initiate dragging the view window
    ViewFlowchartComponent.prototype.panStart = function (event) {
        event.preventDefault();
        var bRect = this.canvas.getBoundingClientRect();
        // set start coords to current view window position
        this.starTxyzs = [
            event.clientX - (bRect.left - this.offset[0]),
            event.clientY - (bRect.top - this.offset[1])
            // event.deltaX - (bRect.left - this.offset[0]),
            // event.deltaY - (bRect.top - this.offset[1])
        ];
        // set drag mode to drag view
        this.isDown = 1;
    };
    // handle mouse move for dragging view/node/port
    ViewFlowchartComponent.prototype.handleMouseMove = function (event) {
        // return if no dragging initiated
        if (!this.isDown) {
            return;
            // if drag view
        }
        else if (this.isDown === 1) {
            event.preventDefault();
            var bRect = this.canvas.getBoundingClientRect();
            var x = Number(event.clientX - this.starTxyzs[0]);
            var y = Number(event.clientY - this.starTxyzs[1]);
            // let x = Number(event.deltaX - this.starTxyzs[0]);
            // let y = Number(event.deltaY - this.starTxyzs[1]);
            var boundingDiv = document.getElementById('flowchart-main-container').getBoundingClientRect();
            if (x > 0 || bRect.width < boundingDiv.width) {
                x = 0;
            }
            else if (boundingDiv.width - x > bRect.width) {
                x = boundingDiv.width - bRect.width;
            }
            if (y > 0 || bRect.height < boundingDiv.height) {
                y = 0;
            }
            else if (boundingDiv.height - y > bRect.height) {
                y = boundingDiv.height - bRect.height;
            }
            this.dataService.flowchartPos = 'matrix(' + this.zoom + ',0,0,' + this.zoom + ',' + x + ',' + y + ')';
            this.canvas.style.transform = this.dataService.flowchartPos;
            // if drag node
        }
        else if (this.isDown === 2) {
            var pt = this.canvas.createSVGPoint();
            pt.x = event.pageX;
            pt.y = event.pageY;
            var svgP = this.convertCoord(pt);
            var xDiff = this.starTxyzs[0] - svgP.x;
            var yDiff = this.starTxyzs[1] - svgP.y;
            this.starTxyzs[0] = svgP.x;
            this.starTxyzs[1] = svgP.y;
            var check = void 0;
            for (var _i = 0, _a = this.dataService.flowchart.meta.selected_nodes; _i < _a.length; _i++) {
                var nodeIndex = _a[_i];
                if (this.dataService.flowchart.nodes[nodeIndex].id === this.element.id) {
                    check = nodeIndex;
                    break;
                }
            }
            if (check === undefined) {
                this.element.position.x -= xDiff;
                this.element.position.y -= yDiff;
                if (!event.shiftKey) {
                    var offsetx = this.element.position.x % 20;
                    var offsety = this.element.position.y % 20;
                    this.element.position.x = this.element.position.x - offsetx;
                    this.element.position.y = this.element.position.y - offsety;
                    this.starTxyzs[0] -= offsetx;
                    this.starTxyzs[1] -= offsety;
                }
            }
            else {
                for (var _b = 0, _c = this.dataService.flowchart.meta.selected_nodes; _b < _c.length; _b++) {
                    var nodeIndex = _c[_b];
                    var node = this.dataService.flowchart.nodes[nodeIndex];
                    node.position.x -= xDiff;
                    node.position.y -= yDiff;
                    if (!event.shiftKey) {
                        var offsetx = node.position.x % 20;
                        var offsety = node.position.y % 20;
                        node.position.x = node.position.x - offsetx;
                        node.position.y = node.position.y - offsety;
                        if (nodeIndex === check) {
                            this.starTxyzs[0] -= offsetx;
                            this.starTxyzs[1] -= offsety;
                        }
                    }
                }
            }
            // if drag port
        }
        else if (this.isDown === 3) {
            event.preventDefault();
            var pt = this.canvas.createSVGPoint();
            pt.x = event.pageX;
            pt.y = event.pageY;
            var svgP = this.convertCoord(pt);
            this.element.setAttribute('x2', svgP.x);
            this.element.setAttribute('y2', svgP.y);
        }
    };
    ViewFlowchartComponent.prototype.handleMouseUp = function (event) {
        this.element = undefined;
        if (this.isDown === 3) {
            var pt = this.canvas.createSVGPoint();
            pt.x = event.pageX;
            pt.y = event.pageY;
            var svgP = this.convertCoord(pt);
            // reset temporary edge position to <(0,0),(0,0)>
            var tempLine = document.getElementById('temporary-wire');
            tempLine.setAttribute('x1', '0');
            tempLine.setAttribute('y1', '0');
            tempLine.setAttribute('x2', '0');
            tempLine.setAttribute('y2', '0');
            // go through all of the nodes' input/output ports
            for (var _i = 0, _a = this.dataService.flowchart.nodes; _i < _a.length; _i++) {
                var n = _a[_i];
                var pPos = void 0;
                // find the node's corresponding port and its position
                if (this.startType === 'input') {
                    if (this.edge.target.parentNode === n || n.type === 'end') {
                        continue;
                    }
                    this.edge.source = n.output;
                    pPos = [n.position.x + this.outputOffset[0], n.position.y + this.outputOffset[1]];
                }
                else {
                    if (this.edge.source.parentNode === n || n.type === 'start') {
                        continue;
                    }
                    this.edge.target = n.input;
                    pPos = [n.position.x + this.inputOffset[0], n.position.y + this.inputOffset[1]];
                }
                // if the distance between the port's position and the dropped position is bigger than 15px, continue
                if (Math.abs(pPos[0] - svgP.x) > 60 || Math.abs(pPos[1] - svgP.y) > 50) {
                    continue;
                }
                // if there is already an existing edge with the same source and target as the new edge, return
                for (var _b = 0, _c = this.dataService.flowchart.edges; _b < _c.length; _b++) {
                    var edge = _c[_b];
                    if (edge.target === this.edge.target && edge.source === this.edge.source) {
                        this.isDown = 0;
                        return;
                    }
                }
                this.edge.target.edges.push(this.edge);
                this.edge.source.edges.push(this.edge);
                this.dataService.flowchart.edges.push(this.edge);
                this.dataService.flowchart.ordered = false;
                if (this.edge.source.parentNode.enabled) {
                    ViewFlowchartComponent_1.enableNode(this.edge.target.parentNode);
                }
                break;
            }
            this.dataService.registerFlwAction({ 'type': 'add', 'edges': [this.edge] });
        }
        this.isDown = 0;
    };
    ViewFlowchartComponent.prototype.newfile = function () {
        document.getElementById('newfile').click();
        this.focusFlowchart();
    };
    // viewerData(): any {
    //     const node = this.dataService.flowchart.nodes[this.dataService.flowchart.meta.selected_nodes[0]];
    //     if (!node || !node.enabled) { return ''; }
    //     // if (node.type === 'output') { return node.input.value; }
    //     return node.model;
    // }
    ViewFlowchartComponent.prototype.dragSplitStart = function (e) {
        var _this = this;
        var currentTransf = this.dataService.flowchartPos.split(',');
        currentTransf[5] = currentTransf[5].split(')')[0];
        // this.canvas.style.transition = 'transform 0ms linear';
        // @ts-ignore
        var dragProcess = this.flowchartSplit.dragProgress$ || this.flowchartSplit.dragProgress;
        var bW = this.canvas.getBoundingClientRect().width;
        this.splitDragSub = dragProcess.subscribe(function () {
            var nBW = _this.canvas.getBoundingClientRect().width / bW;
            var nX = currentTransf[4] * nBW;
            var nY = currentTransf[5] * nBW;
            _this.dataService.flowchartPos = currentTransf[0] + ', 0, 0,' + currentTransf[3] + ',' + nX + ',' + nY + ')';
            _this.canvas.style.transform = _this.dataService.flowchartPos;
        });
    };
    ViewFlowchartComponent.prototype.dragSplitEnd = function (e) {
        this.splitDragSub.unsubscribe();
        // this.canvas.style.transition = 'transform 0ms ease-in';
        this.dataService.splitVal = e.sizes[1];
    };
    ViewFlowchartComponent.prototype.deselectAll = function (e) {
        if (e.ctrlKey || e.metaKey) {
            return;
        }
        document.getElementById('executeButton').focus();
        this.dataService.flowchart.meta.selected_nodes.splice(1, this.dataService.flowchart.meta.selected_nodes.length - 1);
        for (var _i = 0, _a = this.selectedEdge; _i < _a.length; _i++) {
            var edgeIndex = _a[_i];
            this.dataService.flowchart.edges[edgeIndex].selected = false;
        }
        this.selectedEdge = [];
    };
    ViewFlowchartComponent.prototype.getSplit = function () { return this.dataService.splitVal; };
    ViewFlowchartComponent.prototype.getFlowchart = function () { return this.dataService.flowchart; };
    ViewFlowchartComponent.prototype.getNode = function () { return this.dataService.node; };
    ViewFlowchartComponent.prototype.getFlowchartName = function () { return this.dataService.file.name; };
    var ViewFlowchartComponent_1;
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])(),
        __metadata("design:type", Object)
    ], ViewFlowchartComponent.prototype, "switch", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"])('flowchartSplit'),
        __metadata("design:type", angular_split__WEBPACK_IMPORTED_MODULE_8__["SplitComponent"])
    ], ViewFlowchartComponent.prototype, "flowchartSplit", void 0);
    ViewFlowchartComponent = ViewFlowchartComponent_1 = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'view-flowchart',
            template: __webpack_require__(/*! ./view-flowchart.component.html */ "./src/app/views/view-flowchart/view-flowchart.component.html"),
            styles: [__webpack_require__(/*! ./view-flowchart.component.scss */ "./src/app/views/view-flowchart/view-flowchart.component.scss")]
        }),
        __metadata("design:paramtypes", [_services__WEBPACK_IMPORTED_MODULE_5__["DataService"], _angular_router__WEBPACK_IMPORTED_MODULE_7__["Router"]])
    ], ViewFlowchartComponent);
    return ViewFlowchartComponent;
}());



/***/ }),

/***/ "./src/app/views/view-flowchart/view-flowchart.module.ts":
/*!***************************************************************!*\
  !*** ./src/app/views/view-flowchart/view-flowchart.module.ts ***!
  \***************************************************************/
/*! exports provided: ViewFlowchartModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ViewFlowchartModule", function() { return ViewFlowchartModule; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/fesm5/common.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm5/forms.js");
/* harmony import */ var _view_flowchart_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./view-flowchart.component */ "./src/app/views/view-flowchart/view-flowchart.component.ts");
/* harmony import */ var _node_node_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./node/node.component */ "./src/app/views/view-flowchart/node/node.component.ts");
/* harmony import */ var _edge_edge_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./edge/edge.component */ "./src/app/views/view-flowchart/edge/edge.component.ts");
/* harmony import */ var _shared_shared_module__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @shared/shared.module */ "./src/app/shared/shared.module.ts");
/* harmony import */ var _view_flowchart_routing_module__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./view-flowchart-routing.module */ "./src/app/views/view-flowchart/view-flowchart-routing.module.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
// import @angular stuff



// import app components





/**
 * ViewFlowchartModule
 */
var ViewFlowchartModule = /** @class */ (function () {
    function ViewFlowchartModule() {
    }
    ViewFlowchartModule = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["NgModule"])({
            declarations: [
                _view_flowchart_component__WEBPACK_IMPORTED_MODULE_3__["ViewFlowchartComponent"],
                _node_node_component__WEBPACK_IMPORTED_MODULE_4__["NodeComponent"],
                _edge_edge_component__WEBPACK_IMPORTED_MODULE_5__["EdgeComponent"],
            ],
            exports: [_view_flowchart_component__WEBPACK_IMPORTED_MODULE_3__["ViewFlowchartComponent"]],
            imports: [
                _angular_common__WEBPACK_IMPORTED_MODULE_1__["CommonModule"],
                _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormsModule"],
                _shared_shared_module__WEBPACK_IMPORTED_MODULE_6__["SharedModule"],
                _view_flowchart_routing_module__WEBPACK_IMPORTED_MODULE_7__["ViewFlowchartRoutingModule"]
            ],
            entryComponents: [],
            providers: []
        }),
        __metadata("design:paramtypes", [])
    ], ViewFlowchartModule);
    return ViewFlowchartModule;
}());



/***/ }),

/***/ "./src/app/views/view-gallery/simple-name.pipe.ts":
/*!********************************************************!*\
  !*** ./src/app/views/view-gallery/simple-name.pipe.ts ***!
  \********************************************************/
/*! exports provided: SimpleNamePipe */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SimpleNamePipe", function() { return SimpleNamePipe; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};

/*
 * Shortens a name to a certain length and appends "..." infront of it
 * Usage:
 *   value | length:number
 * Example:
 *   {{ "some_very_long_string" | length:7 }}
 *   formats to: some_ve...
*/
var SimpleNamePipe = /** @class */ (function () {
    function SimpleNamePipe() {
    }
    SimpleNamePipe.prototype.transform = function (value) {
        return value.split('.mob')[0].replace(/_|-/g, ' ');
    };
    SimpleNamePipe = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Pipe"])({ name: 'simplename' })
    ], SimpleNamePipe);
    return SimpleNamePipe;
}());



/***/ }),

/***/ "./src/app/views/view-gallery/view-gallery-routing.module.ts":
/*!*******************************************************************!*\
  !*** ./src/app/views/view-gallery/view-gallery-routing.module.ts ***!
  \*******************************************************************/
/*! exports provided: ViewGalleryRoutingModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ViewGalleryRoutingModule", function() { return ViewGalleryRoutingModule; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var _view_gallery_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./view-gallery.component */ "./src/app/views/view-gallery/view-gallery.component.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};



var routes = [
    {
        path: '',
        component: _view_gallery_component__WEBPACK_IMPORTED_MODULE_2__["ViewGalleryComponent"],
        children: []
    }
];
var ViewGalleryRoutingModule = /** @class */ (function () {
    function ViewGalleryRoutingModule() {
    }
    ViewGalleryRoutingModule = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["NgModule"])({
            imports: [_angular_router__WEBPACK_IMPORTED_MODULE_1__["RouterModule"].forChild(routes)],
            exports: [_angular_router__WEBPACK_IMPORTED_MODULE_1__["RouterModule"]]
        })
    ], ViewGalleryRoutingModule);
    return ViewGalleryRoutingModule;
}());



/***/ }),

/***/ "./src/app/views/view-gallery/view-gallery.component.html":
/*!****************************************************************!*\
  !*** ./src/app/views/view-gallery/view-gallery.component.html ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class='container'>\r\n    <as-split direction=\"horizontal\" (dragEnd)='setSplit($event)'>\r\n        <as-split-area [size]=\"100 - getSplit()\">\r\n            <panel-header [flowchart]='getFlowchart()'></panel-header>\r\n            <!-- viewchild content -->\r\n            <div class='content__panel'>\r\n                <h3 id = 'gallery-tab' (click)='openGalleryMenu($event)'>{{getActiveGallery().name}}<span>▾</span></h3>\r\n                <div id=\"galleryMenu\">\r\n                    <div *ngFor='let galleryName of allGalleries;'>\r\n                        <li (click)=\"switchGallery(galleryName)\">\r\n                            {{galleryName}}\r\n                        </li>\r\n                    </div>\r\n                </div>\r\n                <div class = 'content--container'>\r\n                    <div class=\"container__element container__element--project-container\">\r\n                        <div class=\"project-container__project\" *ngFor=\"let f of getActiveGallery().files\">\r\n                            <div class=\"tile--contents\" (click)='loadFile(getActiveGallery().link + f)'>\r\n                                <img src ='{{getActiveGallery().link+\"imgs/\"+f.split(\".mob\")[0]+\".JPG\"}}' alt = 'project image'>\r\n                            </div>\r\n                            <span class = 'project__title'>{{ f | simplename }}</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </as-split-area>\r\n\r\n        <as-split-area [size]=\"getSplit()\">\r\n            <!-- data viewers panel -->\r\n            <div class='content__viewer' >\r\n                <model-viewers-container [data]='viewerData(getNode(), true)'></model-viewers-container>\r\n            </div>\r\n        </as-split-area>\r\n        \r\n    </as-split>\r\n\r\n</div>\r\n<spinner></spinner>\r\n<chrome></chrome>\r\n"

/***/ }),

/***/ "./src/app/views/view-gallery/view-gallery.component.scss":
/*!****************************************************************!*\
  !*** ./src/app/views/view-gallery/view-gallery.component.scss ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".content__panel {\n  margin-top: 40px;\n  margin-left: 11px;\n  height: calc(100vh - 40px);\n  overflow: hidden;\n  overflow-y: hidden; }\n\n.content--container {\n  display: inline-block;\n  box-sizing: border-box;\n  width: 100%;\n  margin-left: -11px;\n  height: calc(100vh - 70px);\n  overflow: hidden;\n  overflow-y: auto; }\n\n.container__element--project-container {\n  display: flex;\n  flex-flow: row wrap;\n  padding: 15px 19px 15px 30px;\n  font-size: 30px;\n  line-height: 32px;\n  font-weight: 300;\n  width: -webkit-fit-content;\n  width: -moz-fit-content;\n  width: fit-content;\n  box-sizing: border-box; }\n\n.project-container__project {\n  position: relative;\n  margin: 10px;\n  width: 200px;\n  display: flex;\n  flex-flow: column nowrap; }\n\n.project-container__project .tile--contents {\n    height: 150px;\n    width: inherit;\n    box-sizing: border-box;\n    display: flex;\n    flex-flow: column nowrap;\n    justify-content: center;\n    border: 1px solid #808080;\n    padding: 1px; }\n\n.project-container__project .tile--contents img {\n      height: 100%;\n      width: 100%;\n      transition: 0.4s; }\n\n.project-container__project .tile--contents:hover {\n      border: 2px solid #00006d;\n      opacity: 1;\n      padding: 0px; }\n\n.project-container__project .project__title {\n    width: 100%;\n    font-size: 12px;\n    line-height: 15px;\n    overflow: hidden; }\n\nh2 {\n  color: #CCCCCC;\n  background-color: #999999;\n  text-align: left;\n  padding-left: 15px;\n  font-size: 12px;\n  line-height: 19px; }\n\nh4 {\n  color: #808080;\n  text-align: left;\n  padding-left: 15px;\n  font-size: 12px;\n  line-height: 16px; }\n\np {\n  color: #808080;\n  text-align: left;\n  padding-left: 15px;\n  font-size: 12px;\n  line-height: 14px; }\n\nhr {\n  border-top: 2px solid #E6E6E6;\n  margin: 0px; }\n\nh3 {\n  cursor: pointer; }\n\n#gallery-tab {\n  line-height: 30px;\n  height: 30px;\n  color: #373737; }\n\n#galleryMenu {\n  display: none;\n  position: absolute;\n  width: -webkit-fit-content;\n  width: -moz-fit-content;\n  width: fit-content;\n  left: 10px;\n  transition: display 0.4s;\n  z-index: 1;\n  background-color: #fafafb;\n  border: 1px solid #808080; }\n\n#galleryMenu button {\n    cursor: pointer;\n    display: block;\n    min-width: 100px;\n    max-width: 200px;\n    background-color: #fafafb;\n    border: 0px;\n    margin: 0px;\n    padding: 0px;\n    line-height: 30px;\n    height: 30px;\n    font-size: 12px; }\n\n#galleryMenu li {\n    cursor: pointer;\n    display: block;\n    min-width: 100px;\n    max-width: 300px;\n    overflow: hidden;\n    line-height: 20px;\n    background-color: #fafafb;\n    border: 0px;\n    margin: 0px;\n    padding: 0px 10px 0px 10px;\n    line-height: 30px;\n    height: 30px;\n    font-size: 12px;\n    color: #373737; }\n\n#galleryMenu li:hover {\n      color: #00006d;\n      background-color: #E6E6E6; }\n\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdmlld3Mvdmlldy1nYWxsZXJ5L0M6XFxEcm9wYm94XFxGaWxlc1xcU29mdHdhcmVcXEdpdEh1YlxcZGVzaWduLWF1dG9tYXRpb25cXG1vYml1cy1wYXJhbWV0cmljLW1vZGVsbGVyL3NyY1xcYXBwXFx2aWV3c1xcdmlldy1nYWxsZXJ5XFx2aWV3LWdhbGxlcnkuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL3ZpZXdzL3ZpZXctZ2FsbGVyeS9DOlxcRHJvcGJveFxcRmlsZXNcXFNvZnR3YXJlXFxHaXRIdWJcXGRlc2lnbi1hdXRvbWF0aW9uXFxtb2JpdXMtcGFyYW1ldHJpYy1tb2RlbGxlci9zcmNcXHNjc3NcXHZhcmlhYmxlcy5zY3NzIiwic3JjL2FwcC92aWV3cy92aWV3LWdhbGxlcnkvQzpcXERyb3Bib3hcXEZpbGVzXFxTb2Z0d2FyZVxcR2l0SHViXFxkZXNpZ24tYXV0b21hdGlvblxcbW9iaXVzLXBhcmFtZXRyaWMtbW9kZWxsZXIvc3JjXFxzY3NzXFxjb2xvcnMuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFPQTtFQUNJLGdCQ05nQjtFRE9oQixpQkFBaUI7RUFFakIsMEJBQTBCO0VBQzFCLGdCQUFnQjtFQUNoQixrQkFBa0IsRUFBQTs7QUFHdEI7RUFDSSxxQkFBcUI7RUFFckIsc0JBQXNCO0VBQ3RCLFdBQVc7RUFDWCxrQkFBa0I7RUFFbEIsMEJBQTBCO0VBQzFCLGdCQUFnQjtFQUNoQixnQkFBZ0IsRUFBQTs7QUFHcEI7RUFDSSxhQUFhO0VBQ2IsbUJBQW1CO0VBRW5CLDRCQUFnRDtFQUVoRCxlQzVCUztFRDZCVCxpQkFBaUI7RUFDakIsZ0JBQWdCO0VBRWhCLDBCQUFrQjtFQUFsQix1QkFBa0I7RUFBbEIsa0JBQWtCO0VBQ2xCLHNCQUFzQixFQUFBOztBQVExQjtFQUNJLGtCQUFrQjtFQUNsQixZQUFZO0VBQ1osWUE5Q2M7RUFnRGQsYUFBYTtFQUNiLHdCQUF3QixFQUFBOztBQU41QjtJQVNRLGFBckRXO0lBc0RYLGNBQWM7SUFDZCxzQkFBc0I7SUFFdEIsYUFBYTtJQUNiLHdCQUF3QjtJQUN4Qix1QkFBdUI7SUFTdkIseUJFdEVRO0lGdUVSLFlBQVksRUFBQTs7QUF6QnBCO01BNEJZLFlBQVk7TUFDWixXQUFXO01BRVgsZ0JBQWdCLEVBQUE7O0FBL0I1QjtNQXNEWSx5QkV6Rm1CO01GMEZuQixVQUFVO01BQ1YsWUFBWSxFQUFBOztBQXhEeEI7SUFtRVEsV0FBVztJQUNYLGVDOUdLO0lEK0dMLGlCQ2hISztJRGlITCxnQkFBZ0IsRUFBQTs7QUFLeEI7RUFDSSxjRXZIWTtFRndIWix5QkUxSFk7RUY0SFosZ0JBQWdCO0VBQ2hCLGtCQzlIZ0I7RUQrSGhCLGVDM0hTO0VENEhULGlCQUFpQixFQUFBOztBQUdyQjtFQUNJLGNFcElZO0VGcUlaLGdCQUFnQjtFQUNoQixrQkN0SWdCO0VEdUloQixlQ25JUztFRG9JVCxpQkFBaUIsRUFBQTs7QUFHckI7RUFDSSxjRTVJWTtFRjZJWixnQkFBZ0I7RUFDaEIsa0JDOUlnQjtFRCtJaEIsZUMzSVM7RUQ0SVQsaUJBQWlCLEVBQUE7O0FBR3JCO0VBQ0ksNkJFaEpZO0VGaUpaLFdBQVcsRUFBQTs7QUFHZjtFQUNJLGVBQWUsRUFBQTs7QUFJbkI7RUFDSSxpQkN6SlM7RUQwSlQsWUMxSlM7RUQySlQsY0V2SlksRUFBQTs7QUYwSmhCO0VBQ0ksYUFBYTtFQUNiLGtCQUFrQjtFQUNsQiwwQkFBa0I7RUFBbEIsdUJBQWtCO0VBQWxCLGtCQUFrQjtFQUNsQixVQUFVO0VBRVYsd0JBQXdCO0VBR3hCLFVBQVU7RUFDVix5QkV2S3VCO0VGMEt2Qix5QkVoTFksRUFBQTs7QUZtS2hCO0lBZ0JRLGVBQWU7SUFDZixjQUFjO0lBQ2QsZ0JBQWdCO0lBQ2hCLGdCQUFnQjtJQUNoQix5QkVqTG1CO0lGa0xuQixXQUFXO0lBQ1gsV0FBVztJQUNYLFlBQVk7SUFDWixpQkN0TEs7SUR1TEwsWUN2TEs7SUR3TEwsZUN6TEssRUFBQTs7QUQrSmI7SUE4QlEsZUFBZTtJQUNmLGNBQWM7SUFDZCxnQkFBZ0I7SUFDaEIsZ0JBQWdCO0lBQ2hCLGdCQUFnQjtJQUNoQixpQkFBaUI7SUFDakIseUJFak1tQjtJRmtNbkIsV0FBVztJQUNYLFdBQVc7SUFDWCwwQkFBMEI7SUFDMUIsaUJDdE1LO0lEdU1MLFlDdk1LO0lEd01MLGVDek1LO0lEME1MLGNFck1RLEVBQUE7O0FGMEpoQjtNQTZDWSxjRXJNbUI7TUZzTW5CLHlCRTdNSSxFQUFBIiwiZmlsZSI6InNyYy9hcHAvdmlld3Mvdmlldy1nYWxsZXJ5L3ZpZXctZ2FsbGVyeS5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIkBpbXBvcnQgJ35zY3NzL2NvbG9ycyc7XHJcbkBpbXBvcnQgJ35zY3NzL3ZhcmlhYmxlcyc7XHJcblxyXG4kdGlsZS1oZWlnaHQ6IDE1MHB4O1xyXG4kdGlsZS13aWR0aDogMjAwcHg7XHJcbiRzY2FsZS1mYWN0b3I6IDEuMTtcclxuXHJcbi5jb250ZW50X19wYW5lbHtcclxuICAgIG1hcmdpbi10b3A6ICRoZWFkZXItaGVpZ2h0O1xyXG4gICAgbWFyZ2luLWxlZnQ6IDExcHg7IC8vc3BsaXQgYmFyIHdpZHRoXHJcblxyXG4gICAgaGVpZ2h0OiBjYWxjKDEwMHZoIC0gNDBweCk7IC8vaGVhZGVyIGhlaWdodFxyXG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICAgIG92ZXJmbG93LXk6IGhpZGRlbjtcclxufVxyXG5cclxuLmNvbnRlbnQtLWNvbnRhaW5lcntcclxuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuXHJcbiAgICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBtYXJnaW4tbGVmdDogLTExcHg7XHJcblxyXG4gICAgaGVpZ2h0OiBjYWxjKDEwMHZoIC0gNzBweCk7IC8vaGVhZGVyIGhlaWdodDsgJGZzaXplMSB0YWIgbWVudSBoZWlnaHRcclxuICAgIG92ZXJmbG93OiBoaWRkZW47XHJcbiAgICBvdmVyZmxvdy15OiBhdXRvO1xyXG59XHJcblxyXG4uY29udGFpbmVyX19lbGVtZW50LS1wcm9qZWN0LWNvbnRhaW5lcntcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBmbGV4LWZsb3c6IHJvdyB3cmFwO1xyXG5cclxuICAgIHBhZGRpbmc6ICRzbWFsbC1wYWRkaW5nIDE5cHggJHNtYWxsLXBhZGRpbmcgMzBweDtcclxuXHJcbiAgICBmb250LXNpemU6ICRmc2l6ZTM7XHJcbiAgICBsaW5lLWhlaWdodDogMzJweDtcclxuICAgIGZvbnQtd2VpZ2h0OiAzMDA7XHJcblxyXG4gICAgd2lkdGg6IGZpdC1jb250ZW50O1xyXG4gICAgYm94LXNpemluZzogYm9yZGVyLWJveDtcclxuXHJcbiAgICAvLyB0cmFuc2l0aW9uOiAwLjRzO1xyXG4gICAgLy8gJjpob3ZlciAucHJvamVjdF9fY29udGVudHtcclxuICAgIC8vICAgICBvcGFjaXR5OiAwLjM7XHJcbiAgICAvLyB9XHJcbn1cclxuXHJcbi5wcm9qZWN0LWNvbnRhaW5lcl9fcHJvamVjdCB7XHJcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICBtYXJnaW46IDEwcHg7XHJcbiAgICB3aWR0aDogJHRpbGUtd2lkdGg7IC8vZml4ZWQgd2lkdGhcclxuICAgIC8vIHRyYW5zaXRpb246IDAuNHM7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgZmxleC1mbG93OiBjb2x1bW4gbm93cmFwO1xyXG4gICAgXHJcbiAgICAudGlsZS0tY29udGVudHN7XHJcbiAgICAgICAgaGVpZ2h0OiAkdGlsZS1oZWlnaHQ7XHJcbiAgICAgICAgd2lkdGg6IGluaGVyaXQ7XHJcbiAgICAgICAgYm94LXNpemluZzogYm9yZGVyLWJveDtcclxuXHJcbiAgICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgICBmbGV4LWZsb3c6IGNvbHVtbiBub3dyYXA7XHJcbiAgICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgICAgICAgXHJcbiAgICAgICAgLy8gdHJhbnNpdGlvbjogMC40cztcclxuXHJcbiAgICAgICAgLy8gZm9udC1zaXplOiAkZnNpemUyO1xyXG4gICAgICAgIC8vIGxpbmUtaGVpZ2h0OiAyNHB4O1xyXG4gICAgICAgIC8vIGNvbG9yOiAkY29sb3I4O1xyXG4gICAgICAgIC8vIG92ZXJmbG93OiBoaWRkZW47XHJcblxyXG4gICAgICAgIGJvcmRlcjogMXB4IHNvbGlkICRjb2xvcjE7XHJcbiAgICAgICAgcGFkZGluZzogMXB4O1xyXG5cclxuICAgICAgICBpbWd7XHJcbiAgICAgICAgICAgIGhlaWdodDogMTAwJTtcclxuICAgICAgICAgICAgd2lkdGg6IDEwMCU7XHJcblxyXG4gICAgICAgICAgICB0cmFuc2l0aW9uOiAwLjRzO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgLy8gYXtcclxuICAgICAgICAvLyAgICAgZGlzcGxheTogYmxvY2s7XHJcblxyXG4gICAgICAgIC8vICAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgICAgICAgLy8gICAgIG1hcmdpbjogMTBweDtcclxuXHJcbiAgICAgICAgLy8gICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcclxuICAgICAgICAvLyAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgICAgIC8vICAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xyXG4gICAgICAgIC8vICAgICBjb2xvcjogaW5oZXJpdDtcclxuXHJcbiAgICAgICAgLy8gICAgIGZvbnQtd2VpZ2h0OiA2MDA7XHJcblxyXG4gICAgICAgIC8vICAgICAmOnZpc2l0ZWR7XHJcbiAgICAgICAgLy8gICAgICAgICBjb2xvcjogaW5oZXJpdDtcclxuICAgICAgICAvLyAgICAgfVxyXG5cclxuICAgICAgICAvLyB9XHJcblxyXG4gICAgICAgICY6aG92ZXJ7XHJcbiAgICAgICAgICAgIGJvcmRlcjogMnB4IHNvbGlkICRzZWxlY3RlZC1jb2xvcjtcclxuICAgICAgICAgICAgb3BhY2l0eTogMTtcclxuICAgICAgICAgICAgcGFkZGluZzogMHB4O1xyXG5cclxuICAgICAgICAgICAgLy8gaW1ne1xyXG4gICAgICAgICAgICAvLyAgICAgdHJhbnNmb3JtOiBzY2FsZSgkc2NhbGUtZmFjdG9yKTtcclxuICAgICAgICAgICAgLy8gfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIC5wcm9qZWN0X190aXRsZXtcclxuICAgICAgICAvLyBvdmVyZmxvdy13cmFwOiBicmVhay13b3JkO1xyXG4gICAgICAgIC8vIHdvcmQtd3JhcDogYnJlYWstd29yZDtcclxuICAgICAgICAvLyB3b3JkLWJyZWFrOiBicmVhay13b3JkO1xyXG4gICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgIGZvbnQtc2l6ZTogJGZzaXplMjtcclxuICAgICAgICBsaW5lLWhlaWdodDogJGZzaXplMTtcclxuICAgICAgICBvdmVyZmxvdzogaGlkZGVuO1xyXG4gICAgfVxyXG59XHJcblxyXG5cclxuaDJ7XHJcbiAgICBjb2xvcjogJGNvbG9yNDsvLyRjb2xvcjE7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkY29sb3IyO1xyXG5cclxuICAgIHRleHQtYWxpZ246IGxlZnQ7XHJcbiAgICBwYWRkaW5nLWxlZnQ6ICRzbWFsbC1wYWRkaW5nO1xyXG4gICAgZm9udC1zaXplOiAkZnNpemUyO1xyXG4gICAgbGluZS1oZWlnaHQ6IDE5cHg7XHJcbn1cclxuXHJcbmg0e1xyXG4gICAgY29sb3I6ICRjb2xvcjE7XHJcbiAgICB0ZXh0LWFsaWduOiBsZWZ0O1xyXG4gICAgcGFkZGluZy1sZWZ0OiAkc21hbGwtcGFkZGluZztcclxuICAgIGZvbnQtc2l6ZTogJGZzaXplMjtcclxuICAgIGxpbmUtaGVpZ2h0OiAxNnB4O1xyXG59XHJcblxyXG5we1xyXG4gICAgY29sb3I6ICRjb2xvcjE7XHJcbiAgICB0ZXh0LWFsaWduOiBsZWZ0O1xyXG4gICAgcGFkZGluZy1sZWZ0OiAkc21hbGwtcGFkZGluZztcclxuICAgIGZvbnQtc2l6ZTogJGZzaXplMjtcclxuICAgIGxpbmUtaGVpZ2h0OiAxNHB4O1xyXG59XHJcblxyXG5ocntcclxuICAgIGJvcmRlci10b3A6IDJweCBzb2xpZCAkY29sb3I1O1xyXG4gICAgbWFyZ2luOiAwcHg7XHJcbn1cclxuXHJcbmgzIHtcclxuICAgIGN1cnNvcjogcG9pbnRlcjtcclxufVxyXG5cclxuXHJcbiNnYWxsZXJ5LXRhYntcclxuICAgIGxpbmUtaGVpZ2h0OiAkZnNpemUzO1xyXG4gICAgaGVpZ2h0OiAkZnNpemUzO1xyXG4gICAgY29sb3I6ICRjb2xvcjg7XHJcbn1cclxuXHJcbiNnYWxsZXJ5TWVudSB7XHJcbiAgICBkaXNwbGF5OiBub25lO1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgd2lkdGg6IGZpdC1jb250ZW50O1xyXG4gICAgbGVmdDogMTBweDtcclxuXHJcbiAgICB0cmFuc2l0aW9uOiBkaXNwbGF5IDAuNHM7XHJcbiAgICAvLyB0b3A6IDYwcHg7XHJcblxyXG4gICAgei1pbmRleDogMTtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICRjb2xvcjY7XHJcbiAgICAvLyBib3JkZXItbGVmdDogMXB4IHNvbGlkICRjb2xvcjE7XHJcbiAgICAvLyBib3JkZXItYm90dG9tOiAxcHggc29saWQgJGNvbG9yMTtcclxuICAgIGJvcmRlcjogMXB4IHNvbGlkICRjb2xvcjE7XHJcblxyXG4gICAgYnV0dG9ue1xyXG4gICAgICAgIGN1cnNvcjogcG9pbnRlcjtcclxuICAgICAgICBkaXNwbGF5OiBibG9jaztcclxuICAgICAgICBtaW4td2lkdGg6IDEwMHB4O1xyXG4gICAgICAgIG1heC13aWR0aDogMjAwcHg7XHJcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJGNvbG9yNjtcclxuICAgICAgICBib3JkZXI6IDBweDtcclxuICAgICAgICBtYXJnaW46IDBweDtcclxuICAgICAgICBwYWRkaW5nOiAwcHg7XHJcbiAgICAgICAgbGluZS1oZWlnaHQ6ICRmc2l6ZTM7XHJcbiAgICAgICAgaGVpZ2h0OiAkZnNpemUzO1xyXG4gICAgICAgIGZvbnQtc2l6ZTogJGZzaXplMjtcclxuICAgIH1cclxuXHJcbiAgICBsaXtcclxuICAgICAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgICAgICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICAgICAgbWluLXdpZHRoOiAxMDBweDtcclxuICAgICAgICBtYXgtd2lkdGg6IDMwMHB4O1xyXG4gICAgICAgIG92ZXJmbG93OiBoaWRkZW47XHJcbiAgICAgICAgbGluZS1oZWlnaHQ6IDIwcHg7XHJcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJGNvbG9yNjtcclxuICAgICAgICBib3JkZXI6IDBweDtcclxuICAgICAgICBtYXJnaW46IDBweDtcclxuICAgICAgICBwYWRkaW5nOiAwcHggMTBweCAwcHggMTBweDtcclxuICAgICAgICBsaW5lLWhlaWdodDogJGZzaXplMztcclxuICAgICAgICBoZWlnaHQ6ICRmc2l6ZTM7XHJcbiAgICAgICAgZm9udC1zaXplOiAkZnNpemUyO1xyXG4gICAgICAgIGNvbG9yOiAkY29sb3I4O1xyXG4gICAgICAgICY6aG92ZXJ7XHJcbiAgICAgICAgICAgIGNvbG9yOiAkc2VsZWN0ZWQtY29sb3I7XHJcbiAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICRjb2xvcjU7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxufVxyXG4iLCIkcGFkZGluZzogNDBweDsgLy8gPyBub3QgdXNlZFxyXG4kc21hbGwtcGFkZGluZzogMTVweDtcclxuJGhlYWRlci1oZWlnaHQ6IDQwcHg7XHJcblxyXG4kZnNpemUxOiAxNXB4O1xyXG4kZnNpemUyOiAxMnB4O1xyXG4kZnNpemUzOiAzMHB4O1xyXG5cclxuJHBvcnQtc2l6ZTogMTVweDtcclxuJGRlZmF1bHQtc2lkZS1wYWRkaW5nOiAxNXB4O1xyXG5cclxuJGRpc2FibGVkLW9wYWNpdHk6IDAuNDsiLCJcclxuJGNvbG9yMTogIzgwODA4MDtcclxuJGNvbG9yMjogIzk5OTk5OTtcclxuJGNvbG9yMzogI0IzQjNCMzsgXHJcbiRjb2xvcjQ6ICNDQ0NDQ0M7XHJcbiRjb2xvcjU6ICNFNkU2RTY7XHJcbiRjb2xvcjUtNTogcmdiKDI0NSwgMjQ1LCAyNDUpO1xyXG4kY29sb3I2OiByZ2IoMjUwLCAyNTAsIDI1MSk7XHJcblxyXG4kY29sb3I3OiB3aGl0ZTtcclxuJGNvbG9yODogIzM3MzczNztcclxuXHJcbiRzZWxlY3RlZC1jb2xvcjogcmdiKDAsIDAsIDEwOSk7XHJcbiRob3Zlci1jb2xvcjogJGNvbG9yMjtcclxuXHJcbiRlcnJvci1jb2xvcjogI0U5NDg1ODsgLy9waW5rLXJlZFxyXG4kZXJyb3ItY29sb3ItbHQ6IHJnYigyNTUsIDIyMCwgMjI0KTtcclxuJHBjb2xvcjI6ICNGM0EzMkE7IC8vb3JhbmdlLXllbGxvd1xyXG4kcHJpbnQtY29sb3I6IHJnYigxMzAsIDE5MSwgMTEwKTsgLy9saWdodGdyZWVuXHJcbiRwcmludC1jb2xvci1sdDogcmdiKDIzMCwgMjU1LCAyMjEpO1xyXG4kc2VsZWN0R2VvbS1jb2xvcjogcmdiKDI1NSwgMTc0LCAwKTsgLy8gbGlnaHQgb3JhbmdlXHJcbiRzZWxlY3RHZW9tLWNvbG9yLWx0OiByZ2IoMjU1LCAyMjUsIDE2MCk7XHJcblxyXG4vLyAkcHJvZC1iYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMjUwLDI1MCwyNTApO1xyXG4vLyAkYmFja2dyb3VuZC1jb2xvcjogcmdiKDIyMCwyMjAsMjIwKTtcclxuJGZ1bmN0aW9uLXRleHQtY29sb3I6IHJnYigxOTAsIDE0MCwgMzApO1xyXG4kZnVuY3Rpb24tdGV4dC1jb2xvcjI6IHJnYigxOCwgMTI2LCAxMzYpO1xyXG4kYmFzaWMtZnVuY3Rpb24tdGV4dC1jb2xvcjogcmdiKDIwMCwgNzAsIDE1MCk7XHJcbiRjb21tZW50LWNvbG9yOiBkYXJrZ3JlZW47XHJcbiJdfQ== */"

/***/ }),

/***/ "./src/app/views/view-gallery/view-gallery.component.ts":
/*!**************************************************************!*\
  !*** ./src/app/views/view-gallery/view-gallery.component.ts ***!
  \**************************************************************/
/*! exports provided: ViewGalleryComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ViewGalleryComponent", function() { return ViewGalleryComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _shared_components_file_loadurl_component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @shared/components/file/loadurl.component */ "./src/app/shared/components/file/loadurl.component.ts");
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/common/http */ "./node_modules/@angular/common/fesm5/http.js");
/* harmony import */ var _view_gallery_config__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./view-gallery.config */ "./src/app/views/view-gallery/view-gallery.config.ts");
/* harmony import */ var _services__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @services */ "./src/app/shared/services/index.ts");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var _assets_gallery_config_json__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @assets/gallery/__config__.json */ "./src/assets/gallery/__config__.json");
var _assets_gallery_config_json__WEBPACK_IMPORTED_MODULE_6___namespace = /*#__PURE__*/__webpack_require__.t(/*! @assets/gallery/__config__.json */ "./src/assets/gallery/__config__.json", 1);
/* harmony import */ var _shared_getViewerData__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @shared/getViewerData */ "./src/app/shared/getViewerData.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};




// import {Router} from '@angular/router';




var ViewGalleryComponent = /** @class */ (function () {
    /*
    constructor(private http: HttpClient, private dataService: DataService, private router: Router) {
        this.allFiles = this.getFilesFromURL();
    }

    */
    function ViewGalleryComponent(http, dataService, router) {
        this.http = http;
        this.dataService = dataService;
        this.router = router;
        this.viewerData = _shared_getViewerData__WEBPACK_IMPORTED_MODULE_7__["getViewerData"];
        // private allFiles: Observable<any>;
        this.allGalleries = [];
        this.switch = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        this.allGalleries = _assets_gallery_config_json__WEBPACK_IMPORTED_MODULE_6__["data"].map(function (gallery) { return gallery.name; });
        if (!this.dataService.activeGallery || !this.switchGallery(this.dataService.activeGallery.name)) {
            this.dataService.activeGallery = _assets_gallery_config_json__WEBPACK_IMPORTED_MODULE_6__["data"][0];
        }
        /*
        if (!this.dataService.galleryFiles) {
            this.dataService.galleryFiles = this.getFilesFromURL();
        }
        */
        new _shared_components_file_loadurl_component__WEBPACK_IMPORTED_MODULE_1__["LoadUrlComponent"](this.dataService, this.router).loadStartUpURL(this.router.url);
    }
    ViewGalleryComponent.prototype.getFilesFromURL = function () {
        return this.http.get(_view_gallery_config__WEBPACK_IMPORTED_MODULE_3__["Constants"].GALLERY_URL, { responseType: 'json' });
    };
    ViewGalleryComponent.prototype.openGalleryMenu = function (e) {
        var stl = document.getElementById('galleryMenu').style;
        if (!stl.display || stl.display === 'none') {
            stl.display = 'block';
        }
        else {
            stl.display = 'none';
        }
        e.stopPropagation();
    };
    ViewGalleryComponent.prototype.switchGallery = function (galleryName) {
        for (var _i = 0, _a = _assets_gallery_config_json__WEBPACK_IMPORTED_MODULE_6__["data"]; _i < _a.length; _i++) {
            var gallery = _a[_i];
            if (gallery.name === galleryName) {
                this.dataService.activeGallery = gallery;
                return true;
            }
        }
        return false;
    };
    ViewGalleryComponent.prototype.loadFile = function (fileLink) {
        var linkSplit = fileLink.split(/\s*&*\s*node\s*=/);
        linkSplit[0] = linkSplit[0].trim();
        // if (!linkSplit[0].endsWith('.mob')) {
        //     linkSplit[0] = linkSplit[0].concat('.mob');
        // }
        if (linkSplit.length > 1) {
            new _shared_components_file_loadurl_component__WEBPACK_IMPORTED_MODULE_1__["LoadUrlComponent"](this.dataService, this.router).loadURL(linkSplit[0], linkSplit[1].split('&')[0].trim());
        }
        else {
            new _shared_components_file_loadurl_component__WEBPACK_IMPORTED_MODULE_1__["LoadUrlComponent"](this.dataService, this.router).loadURL(linkSplit[0]);
        }
        this.router.navigate(['/dashboard']);
        // const stream = Observable.create(observer => {
        //     const request = new XMLHttpRequest();
        //     request.open('GET', fileLink + '.mob');
        //     request.onload = () => {
        //         if (request.status === 200) {
        //             const f = circularJSON.parse(request.responseText);
        //             const file: IMobius = {
        //                 name: f.name,
        //                 author: f.author,
        //                 flowchart: f.flowchart,
        //                 last_updated: f.last_updated,
        //                 version: f.version,
        //                 settings: f.settings || {}
        //             };
        //             observer.next(file);
        //             observer.complete();
        //         } else {
        //             observer.error('error happened');
        //         }
        //     };
        //     request.onerror = () => {
        //     observer.error('error happened');
        //     };
        //     request.send();
        // });
        // stream.subscribe(loadeddata => {
        //     this.dataService.file = loadeddata;
        //     this.dataService.newFlowchart = true;
        //     if (this.dataService.node.type !== 'end') {
        //         for (let i = 0; i < loadeddata.flowchart.nodes.length; i++) {
        //             if (loadeddata.flowchart.nodes[i].type === 'end') {
        //                 loadeddata.flowchart.meta.selected_nodes = [i];
        //                 break;
        //             }
        //         }
        //     }
        //     this.router.navigate(['/dashboard']);
        //     document.getElementById('executeButton').click();
        // });
    };
    // viewerData(): any {
    //     const node = this.dataService.flowchart.nodes[this.dataService.flowchart.meta.selected_nodes[0]];
    //     if (!node || !node.enabled) { return ''; }
    //     // if (node.type === 'output') { return node.input.value; }
    //     return node.model;
    // }
    ViewGalleryComponent.prototype.setSplit = function (event) {
        this.dataService.splitUpdate = true;
        this.dataService.splitVal = event.sizes[1];
    };
    ViewGalleryComponent.prototype.getSplit = function () { return this.dataService.splitVal; };
    ViewGalleryComponent.prototype.getFlowchart = function () { return this.dataService.flowchart; };
    ViewGalleryComponent.prototype.getNode = function () { return this.dataService.node; };
    ViewGalleryComponent.prototype.getActiveGallery = function () { return this.dataService.activeGallery; };
    ViewGalleryComponent.prototype.getFlowchartName = function () { return this.dataService.file.name; };
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])(),
        __metadata("design:type", Object)
    ], ViewGalleryComponent.prototype, "switch", void 0);
    ViewGalleryComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'view-gallery',
            template: __webpack_require__(/*! ./view-gallery.component.html */ "./src/app/views/view-gallery/view-gallery.component.html"),
            styles: [__webpack_require__(/*! ./view-gallery.component.scss */ "./src/app/views/view-gallery/view-gallery.component.scss")]
        }),
        __metadata("design:paramtypes", [_angular_common_http__WEBPACK_IMPORTED_MODULE_2__["HttpClient"], _services__WEBPACK_IMPORTED_MODULE_4__["DataService"], _angular_router__WEBPACK_IMPORTED_MODULE_5__["Router"]])
    ], ViewGalleryComponent);
    return ViewGalleryComponent;
}());



/***/ }),

/***/ "./src/app/views/view-gallery/view-gallery.config.ts":
/*!***********************************************************!*\
  !*** ./src/app/views/view-gallery/view-gallery.config.ts ***!
  \***********************************************************/
/*! exports provided: Constants */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Constants", function() { return Constants; });
var Constants = /** @class */ (function () {
    function Constants() {
    }
    Object.defineProperty(Constants, "GALLERY_URL", {
        get: function () {
            return 'https://api.github.com/repos/design-automation/mobius-parametric-modeller/contents/src/assets/gallery?ref=master';
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Constants, "FILE_URL", {
        get: function () {
            return 'https://raw.githubusercontent.com/design-automation/mobius-gallery/master/examples/';
        },
        enumerable: true,
        configurable: true
    });
    return Constants;
}());



/***/ }),

/***/ "./src/app/views/view-gallery/view-gallery.module.ts":
/*!***********************************************************!*\
  !*** ./src/app/views/view-gallery/view-gallery.module.ts ***!
  \***********************************************************/
/*! exports provided: ViewGalleryModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ViewGalleryModule", function() { return ViewGalleryModule; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/fesm5/common.js");
/* harmony import */ var _shared_shared_module__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @shared/shared.module */ "./src/app/shared/shared.module.ts");
/* harmony import */ var _view_gallery_routing_module__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./view-gallery-routing.module */ "./src/app/views/view-gallery/view-gallery-routing.module.ts");
/* harmony import */ var _view_gallery_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./view-gallery.component */ "./src/app/views/view-gallery/view-gallery.component.ts");
/* harmony import */ var _simple_name_pipe__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./simple-name.pipe */ "./src/app/views/view-gallery/simple-name.pipe.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};






var ViewGalleryModule = /** @class */ (function () {
    function ViewGalleryModule() {
    }
    ViewGalleryModule = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["NgModule"])({
            declarations: [
                _view_gallery_component__WEBPACK_IMPORTED_MODULE_4__["ViewGalleryComponent"],
                _simple_name_pipe__WEBPACK_IMPORTED_MODULE_5__["SimpleNamePipe"]
            ],
            exports: [],
            imports: [
                _angular_common__WEBPACK_IMPORTED_MODULE_1__["CommonModule"],
                _view_gallery_routing_module__WEBPACK_IMPORTED_MODULE_3__["ViewGalleryRoutingModule"],
                _shared_shared_module__WEBPACK_IMPORTED_MODULE_2__["SharedModule"]
            ],
            entryComponents: [],
            providers: []
        }),
        __metadata("design:paramtypes", [])
    ], ViewGalleryModule);
    return ViewGalleryModule;
}());



/***/ }),

/***/ "./src/app/views/view-publish/view-publish-routing.module.ts":
/*!*******************************************************************!*\
  !*** ./src/app/views/view-publish/view-publish-routing.module.ts ***!
  \*******************************************************************/
/*! exports provided: ViewPublishRoutingModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ViewPublishRoutingModule", function() { return ViewPublishRoutingModule; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var _view_publish_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./view-publish.component */ "./src/app/views/view-publish/view-publish.component.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};



var routes = [
    {
        path: '',
        component: _view_publish_component__WEBPACK_IMPORTED_MODULE_2__["ViewPublishComponent"],
        children: []
    }
];
var ViewPublishRoutingModule = /** @class */ (function () {
    function ViewPublishRoutingModule() {
    }
    ViewPublishRoutingModule = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["NgModule"])({
            imports: [_angular_router__WEBPACK_IMPORTED_MODULE_1__["RouterModule"].forChild(routes)],
            exports: [_angular_router__WEBPACK_IMPORTED_MODULE_1__["RouterModule"]]
        })
    ], ViewPublishRoutingModule);
    return ViewPublishRoutingModule;
}());



/***/ }),

/***/ "./src/app/views/view-publish/view-publish.component.html":
/*!****************************************************************!*\
  !*** ./src/app/views/view-publish/view-publish.component.html ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class='container'>\r\n    <as-split direction=\"horizontal\" (dragEnd)='setSplit($event)'>\r\n        \r\n        <as-split-area [size]=\"100 - getSplit()\">\r\n            <publish-header [title]='getFlowchart().name'></publish-header>\r\n            <!-- viewchild content -->\r\n            <div class='content__panel'>\r\n                <parameter-viewer [flowchart]='getFlowchart()' [startNode]='getFlowchart().nodes[0]' [endNode]='getEndNode()'></parameter-viewer>\r\n            </div>\r\n            <div class='footer'>\r\n                <p><img  src=\"assets/logo/logo-16high.png\" alt=\"Möbius Modeller\">\r\n                Powered by <a href='https://mobius.design-automation.net'>Möbius Modeller</a></p>\r\n            </div>\r\n        </as-split-area>\r\n\r\n        <as-split-area [size]=\"getSplit()\">\r\n            <!-- data viewers panel -->\r\n            <div class='content__viewer' >\r\n                <model-viewers-container [data]='viewerData(getNode(), true)'></model-viewers-container>\r\n            </div>\r\n        </as-split-area>\r\n        \r\n    </as-split>\r\n</div>\r\n<spinner></spinner>\r\n<chrome></chrome>"

/***/ }),

/***/ "./src/app/views/view-publish/view-publish.component.scss":
/*!****************************************************************!*\
  !*** ./src/app/views/view-publish/view-publish.component.scss ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".content__panel {\n  margin-top: 40px;\n  padding-left: 11px;\n  height: calc(100% - 70px);\n  overflow-y: auto; }\n\nh3 {\n  line-height: 30px;\n  height: 30px;\n  color: #373737; }\n\n.footer {\n  border-top: 3px solid #E6E6E6;\n  padding-top: 5px;\n  color: #808080; }\n\n.footer a:link, .footer a:visited {\n    color: #808080;\n    text-decoration: underline; }\n\n.footer a:link:active, .footer a:visited:active {\n    color: #808080; }\n\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdmlld3Mvdmlldy1wdWJsaXNoL0M6XFxEcm9wYm94XFxGaWxlc1xcU29mdHdhcmVcXEdpdEh1YlxcZGVzaWduLWF1dG9tYXRpb25cXG1vYml1cy1wYXJhbWV0cmljLW1vZGVsbGVyL3NyY1xcYXBwXFx2aWV3c1xcdmlldy1wdWJsaXNoXFx2aWV3LXB1Ymxpc2guY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL3ZpZXdzL3ZpZXctcHVibGlzaC9DOlxcRHJvcGJveFxcRmlsZXNcXFNvZnR3YXJlXFxHaXRIdWJcXGRlc2lnbi1hdXRvbWF0aW9uXFxtb2JpdXMtcGFyYW1ldHJpYy1tb2RlbGxlci9zcmNcXHNjc3NcXHZhcmlhYmxlcy5zY3NzIiwic3JjL2FwcC92aWV3cy92aWV3LXB1Ymxpc2gvQzpcXERyb3Bib3hcXEZpbGVzXFxTb2Z0d2FyZVxcR2l0SHViXFxkZXNpZ24tYXV0b21hdGlvblxcbW9iaXVzLXBhcmFtZXRyaWMtbW9kZWxsZXIvc3JjXFxzY3NzXFxjb2xvcnMuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFHQTtFQUNJLGdCQ0ZnQjtFREdoQixrQkFBa0I7RUFFbEIseUJBQXlCO0VBQ3pCLGdCQUFnQixFQUFBOztBQUdwQjtFQUNJLGlCQUFpQjtFQUNqQixZQUFZO0VBQ1osY0VKWSxFQUFBOztBRk9oQjtFQUNJLDZCRWJZO0VGY1osZ0JBQWdCO0VBQ2hCLGNFbkJZLEVBQUE7O0FGZ0JoQjtJQU1RLGNFdEJRO0lGdUJSLDBCQUEwQixFQUFBOztBQVBsQztJQVdRLGNFM0JRLEVBQUEiLCJmaWxlIjoic3JjL2FwcC92aWV3cy92aWV3LXB1Ymxpc2gvdmlldy1wdWJsaXNoLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiQGltcG9ydCAnfnNjc3MvY29sb3JzJztcclxuQGltcG9ydCAnfnNjc3MvdmFyaWFibGVzJztcclxuXHJcbi5jb250ZW50X19wYW5lbHtcclxuICAgIG1hcmdpbi10b3A6ICRoZWFkZXItaGVpZ2h0O1xyXG4gICAgcGFkZGluZy1sZWZ0OiAxMXB4OyAvL3NwbGl0IGJhciB3aWR0aFxyXG5cclxuICAgIGhlaWdodDogY2FsYygxMDAlIC0gNzBweCk7IC8vaGVhZGVyIGhlaWdodDtcclxuICAgIG92ZXJmbG93LXk6IGF1dG87XHJcbn1cclxuXHJcbmgzIHtcclxuICAgIGxpbmUtaGVpZ2h0OiAzMHB4O1xyXG4gICAgaGVpZ2h0OiAzMHB4O1xyXG4gICAgY29sb3I6ICRjb2xvcjg7XHJcbn1cclxuXHJcbi5mb290ZXJ7XHJcbiAgICBib3JkZXItdG9wOiAzcHggc29saWQgJGNvbG9yNTtcclxuICAgIHBhZGRpbmctdG9wOiA1cHg7XHJcbiAgICBjb2xvcjogJGNvbG9yMTtcclxuXHJcbiAgICBhOmxpbmssIGE6dmlzaXRlZCB7IFxyXG4gICAgICAgIGNvbG9yOiAkY29sb3IxO1xyXG4gICAgICAgIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICBhOmxpbms6YWN0aXZlLCBhOnZpc2l0ZWQ6YWN0aXZlIHsgXHJcbiAgICAgICAgY29sb3I6ICRjb2xvcjE7XHJcbiAgICB9XHJcbn0iLCIkcGFkZGluZzogNDBweDsgLy8gPyBub3QgdXNlZFxyXG4kc21hbGwtcGFkZGluZzogMTVweDtcclxuJGhlYWRlci1oZWlnaHQ6IDQwcHg7XHJcblxyXG4kZnNpemUxOiAxNXB4O1xyXG4kZnNpemUyOiAxMnB4O1xyXG4kZnNpemUzOiAzMHB4O1xyXG5cclxuJHBvcnQtc2l6ZTogMTVweDtcclxuJGRlZmF1bHQtc2lkZS1wYWRkaW5nOiAxNXB4O1xyXG5cclxuJGRpc2FibGVkLW9wYWNpdHk6IDAuNDsiLCJcclxuJGNvbG9yMTogIzgwODA4MDtcclxuJGNvbG9yMjogIzk5OTk5OTtcclxuJGNvbG9yMzogI0IzQjNCMzsgXHJcbiRjb2xvcjQ6ICNDQ0NDQ0M7XHJcbiRjb2xvcjU6ICNFNkU2RTY7XHJcbiRjb2xvcjUtNTogcmdiKDI0NSwgMjQ1LCAyNDUpO1xyXG4kY29sb3I2OiByZ2IoMjUwLCAyNTAsIDI1MSk7XHJcblxyXG4kY29sb3I3OiB3aGl0ZTtcclxuJGNvbG9yODogIzM3MzczNztcclxuXHJcbiRzZWxlY3RlZC1jb2xvcjogcmdiKDAsIDAsIDEwOSk7XHJcbiRob3Zlci1jb2xvcjogJGNvbG9yMjtcclxuXHJcbiRlcnJvci1jb2xvcjogI0U5NDg1ODsgLy9waW5rLXJlZFxyXG4kZXJyb3ItY29sb3ItbHQ6IHJnYigyNTUsIDIyMCwgMjI0KTtcclxuJHBjb2xvcjI6ICNGM0EzMkE7IC8vb3JhbmdlLXllbGxvd1xyXG4kcHJpbnQtY29sb3I6IHJnYigxMzAsIDE5MSwgMTEwKTsgLy9saWdodGdyZWVuXHJcbiRwcmludC1jb2xvci1sdDogcmdiKDIzMCwgMjU1LCAyMjEpO1xyXG4kc2VsZWN0R2VvbS1jb2xvcjogcmdiKDI1NSwgMTc0LCAwKTsgLy8gbGlnaHQgb3JhbmdlXHJcbiRzZWxlY3RHZW9tLWNvbG9yLWx0OiByZ2IoMjU1LCAyMjUsIDE2MCk7XHJcblxyXG4vLyAkcHJvZC1iYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMjUwLDI1MCwyNTApO1xyXG4vLyAkYmFja2dyb3VuZC1jb2xvcjogcmdiKDIyMCwyMjAsMjIwKTtcclxuJGZ1bmN0aW9uLXRleHQtY29sb3I6IHJnYigxOTAsIDE0MCwgMzApO1xyXG4kZnVuY3Rpb24tdGV4dC1jb2xvcjI6IHJnYigxOCwgMTI2LCAxMzYpO1xyXG4kYmFzaWMtZnVuY3Rpb24tdGV4dC1jb2xvcjogcmdiKDIwMCwgNzAsIDE1MCk7XHJcbiRjb21tZW50LWNvbG9yOiBkYXJrZ3JlZW47XHJcbiJdfQ== */"

/***/ }),

/***/ "./src/app/views/view-publish/view-publish.component.ts":
/*!**************************************************************!*\
  !*** ./src/app/views/view-publish/view-publish.component.ts ***!
  \**************************************************************/
/*! exports provided: ViewPublishComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ViewPublishComponent", function() { return ViewPublishComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _services__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @services */ "./src/app/shared/services/index.ts");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var _shared_components_file_loadurl_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @shared/components/file/loadurl.component */ "./src/app/shared/components/file/loadurl.component.ts");
/* harmony import */ var _shared_getViewerData__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @shared/getViewerData */ "./src/app/shared/getViewerData.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};





var canvas = document.createElement('canvas');
var ctx = canvas.getContext('2d');
ctx.font = '12px sans-serif';
var ViewPublishComponent = /** @class */ (function () {
    function ViewPublishComponent(dataService, router) {
        this.dataService = dataService;
        this.router = router;
        this.viewerData = _shared_getViewerData__WEBPACK_IMPORTED_MODULE_4__["getViewerData"];
        new _shared_components_file_loadurl_component__WEBPACK_IMPORTED_MODULE_3__["LoadUrlComponent"](this.dataService, this.router).loadStartUpURL(this.router.url.split(/\s*&*\s*node\s*=/)[0]);
    }
    ViewPublishComponent.prototype.ngAfterViewInit = function () {
        var _this = this;
        setTimeout(function () {
            _this.adjustTextArea();
        }, 50);
    };
    ViewPublishComponent.prototype.adjustTextArea = function () {
        var textarea = document.getElementById('display-flowchart-desc');
        if (textarea) {
            var desc = this.dataService.flowchart.description.split('\n');
            var textareaWidth = textarea.getBoundingClientRect().width - 30;
            var lineCount = 0;
            for (var _i = 0, desc_1 = desc; _i < desc_1.length; _i++) {
                var line = desc_1[_i];
                lineCount += Math.floor(ctx.measureText(line).width / textareaWidth) + 1;
            }
            textarea.style.height = lineCount * 14 + 4 + 'px';
        }
        for (var _a = 0, _b = this.dataService.flowchart.nodes[0].procedure; _a < _b.length; _a++) {
            var prod = _b[_a];
            if (!prod.enabled || prod.type !== 10 || prod.meta.inputMode === 5) {
                continue;
            }
            textarea = document.getElementById(prod.ID + '_desc');
            if (textarea) {
                var desc = prod.meta.description.split('\n');
                var textareaWidth = textarea.getBoundingClientRect().width - 30;
                var lineCount = 0;
                for (var _c = 0, desc_2 = desc; _c < desc_2.length; _c++) {
                    var line = desc_2[_c];
                    lineCount += Math.floor(ctx.measureText(line).width / textareaWidth) + 1;
                }
                textarea.style.height = lineCount * 14 + 4 + 'px';
            }
        }
    };
    ViewPublishComponent.prototype.getEndNode = function () {
        for (var _i = 0, _a = this.dataService.flowchart.nodes; _i < _a.length; _i++) {
            var node = _a[_i];
            if (node.type === 'end') {
                return node;
            }
        }
    };
    ViewPublishComponent.prototype.setSplit = function (event) {
        this.dataService.splitUpdate = true;
        this.dataService.splitVal = event.sizes[1];
        this.adjustTextArea();
    };
    ViewPublishComponent.prototype.getSplit = function () { return this.dataService.splitVal; };
    ViewPublishComponent.prototype.getFlowchart = function () { return this.dataService.flowchart; };
    ViewPublishComponent.prototype.getNode = function () { return this.dataService.node; };
    ViewPublishComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'view-publish',
            template: __webpack_require__(/*! ./view-publish.component.html */ "./src/app/views/view-publish/view-publish.component.html"),
            styles: [__webpack_require__(/*! ./view-publish.component.scss */ "./src/app/views/view-publish/view-publish.component.scss")]
        }),
        __metadata("design:paramtypes", [_services__WEBPACK_IMPORTED_MODULE_1__["DataService"], _angular_router__WEBPACK_IMPORTED_MODULE_2__["Router"]])
    ], ViewPublishComponent);
    return ViewPublishComponent;
}());



/***/ }),

/***/ "./src/app/views/view-publish/view-publish.module.ts":
/*!***********************************************************!*\
  !*** ./src/app/views/view-publish/view-publish.module.ts ***!
  \***********************************************************/
/*! exports provided: ViewPublishModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ViewPublishModule", function() { return ViewPublishModule; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/fesm5/common.js");
/* harmony import */ var _shared_shared_module__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @shared/shared.module */ "./src/app/shared/shared.module.ts");
/* harmony import */ var _view_publish_routing_module__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./view-publish-routing.module */ "./src/app/views/view-publish/view-publish-routing.module.ts");
/* harmony import */ var _view_publish_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./view-publish.component */ "./src/app/views/view-publish/view-publish.component.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};





var ViewPublishModule = /** @class */ (function () {
    function ViewPublishModule() {
    }
    ViewPublishModule = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["NgModule"])({
            declarations: [
                _view_publish_component__WEBPACK_IMPORTED_MODULE_4__["ViewPublishComponent"],
            ],
            exports: [
                _view_publish_component__WEBPACK_IMPORTED_MODULE_4__["ViewPublishComponent"]
            ],
            imports: [
                _angular_common__WEBPACK_IMPORTED_MODULE_1__["CommonModule"],
                _shared_shared_module__WEBPACK_IMPORTED_MODULE_2__["SharedModule"],
                _view_publish_routing_module__WEBPACK_IMPORTED_MODULE_3__["ViewPublishRoutingModule"]
            ],
            entryComponents: [],
            providers: []
        }),
        __metadata("design:paramtypes", [])
    ], ViewPublishModule);
    return ViewPublishModule;
}());



/***/ }),

/***/ "./src/assets/core/depreciated.json":
/*!******************************************!*\
  !*** ./src/assets/core/depreciated.json ***!
  \******************************************/
/*! exports provided: 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, default */
/***/ (function(module) {

module.exports = [{"old_func":{"name":"Append","module":"list"},"new_func":{"name":"_Append","module":"list"}},{"old_func":{"name":"RemoveIndex","module":"list"},"new_func":{"name":"_RemoveIndex","module":"list"}},{"old_func":{"name":"RemoveValue","module":"list"},"new_func":{"name":"_RemoveValue","module":"list"}},{"old_func":{"name":"ReplaceValue","module":"list"},"new_func":{"name":"_ReplaceValue","module":"list"}},{"old_func":{"name":"IndexOf","module":"list"},"new_func":{"name":"_IndexOf","module":"list"}},{"old_func":{"name":"Includes","module":"list"},"new_func":{"name":"_Includes","module":"list"}},{"old_func":{"name":"Copy","module":"list"},"new_func":{"name":"_Copy","module":"list"}},{"old_func":{"name":"Concat","module":"list"},"new_func":{"name":"_Concat","module":"list"}},{"old_func":{"name":"Flatten","module":"list"},"new_func":{"name":"_Flatten","module":"list"}},{"old_func":{"name":"Slice","module":"list"},"new_func":{"name":"_Slice","module":"list"}},{"old_func":{"name":"Reverse","module":"list"},"new_func":{"name":"_Reverse","module":"list"}},{"old_func":{"name":"Loft","module":"make"},"new_func":{"name":"Loft","module":"make","values":{"divisions":"1","method":"'open_quads'"}}},{"old_func":{"name":"Extrude","module":"make"},"new_func":{"name":"Extrude","module":"make","values":{"divisions":"1","method":"'quads'"}}},{"old_func":{"name":"Normal","module":"calc"},"new_func":{"name":"Normal","module":"calc","values":{"scale":"1"}}},{"old_func":{"name":"IsClosed","module":"query"},"new_func":{"name":"_IsClosed","module":"query"}}];

/***/ }),

/***/ "./src/assets/core/inline/inline.ts":
/*!******************************************!*\
  !*** ./src/assets/core/inline/inline.ts ***!
  \******************************************/
/*! exports provided: inline_query_expr, inline_sort_expr, inline_func */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "inline_query_expr", function() { return inline_query_expr; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "inline_sort_expr", function() { return inline_sort_expr; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "inline_func", function() { return inline_func; });
var inline_query_expr = [
    ['#@name == value', 'Search for entities with attributes equal to a given value'],
    ['#@name[i] == value', 'Search for entities with attributes with index equal to a given value'],
    ['#@name != value', 'Search for entities with attributes not equal to a given value'],
    ['#@name[i] != value', 'Search for entities with attributes with index not equal to a given value'],
    ['#@name > value', 'Search for entities with attributes greater than a given value'],
    ['#@name[i] > value', 'Search for entities with attributes with index greater than a given value'],
    ['#@name >= value', 'Search for entities with attributes greater than or equal to a given value'],
    ['#@name[i] >= value', 'Search for entities with attributes with index greater than or equal to a given value'],
    ['#@name < value', 'Search for entities with attributes less than a given value'],
    ['#@name[i] < value', 'Search for entities with attributes with index less than a given value'],
    ['#@name <= value', 'Search for entities with attributes less than or equal to a given value'],
    ['#@name[i] <= value', 'Search for entities with attributes with index less than or equal to a given value']
];
var inline_sort_expr = [
    ['#@name', 'Sort based on attribute value'],
    ['#@name[i]', 'Sort based on attribute index value']
];
var constants = [
    ['PI', 'The mathematical constant PI, 3.141... '],
    ['XY', 'A plane at the origin, aligned with the XY plane'],
    ['YZ', 'A plane at the origin, aligned with the YZ plane'],
    ['ZX', 'A plane at the origin, aligned with the ZX plane'],
    ['YX', 'A plane at the origin, aligned with the YX plane'],
    ['ZY', 'A plane at the origin, aligned with the ZY plane'],
    ['XZ', 'A plane at the origin, aligned with the XZ plane']
];
var lists = [
    ['range(start, end)', 'Generates a list of integers, from start to end, with a step size of 1'],
    ['range(start, end, step?)', 'Generates a list of integers, from start to end, with a specified step size'],
    ['isList(list)', 'Returns true if this is a list, false otherwise.'],
    ['listLen(list)', 'Returns the number of items in the list'],
    ['listLast(list)', 'Returns the last item in a list'],
    ['listGet(list, index)', 'Returns the item in the list specified by index, either a positive or negative integer'],
    ['listFind(list, val)', 'Returns the index of the first occurence of the value in the list, or -1 if not found'],
    ['listHas(list, val)', 'Returns true if the list contains the value, false otherwise'],
    ['listCount(list, val)', 'Returns the number of times the value is in the list'],
    ['listCopy(list)', 'Returns a copy of the list'],
    ['listJoin(list1, list2)', 'Joins two lists into a single list'],
    ['listFlat(list)', 'Returns a copy of the nested list, flattened to a depth of 1'],
    ['listFlat(list, depth?)', 'Returns a copy of the nested list, flattened to the specified depth'],
    ['listSlice(list, start, end?)', 'Return a sub-list from the list'],
    ['listZip(lists)', 'Converts a set of lists from rows into columns, based on the shortest list'],
    ['lisZip2(lists)', 'Converts a set of lists from rows into columns, based on the longest list']
];
var vectors = [
    ['vecAdd(v1, v2)', 'Adds two vectors'],
    ['vecSub(v1, v2)', 'Subtracts vec2 from vec1'],
    ['vecDiv(v, num)', 'Divides a vector by a number'],
    ['vecMult(v, num)', 'Multiplies a vector by a number'],
    ['vecLen(v)', 'Calculates the magnitude of a vector'],
    ['vecSetLen(v, num)', 'Sets the magnitude of a vector'],
    ['vecNorm(v)', 'Sets the magnitude of a vector to 1'],
    ['vecRev(v)', 'Reverses the direction of a vector'],
    ['vecFromTo(pt1, pt2)', 'Creates a vector between two points'],
    ['vecAng(v1, v2)', 'Calculate the angle (0 to PI) between two vectors'],
    ['vecAng2(v1, v2, n)', 'Calculate the angle (0 to 2PI) between two vectors, relative to the plane normal'],
    ['vecDot(v1, v2)', 'Calculates the cross product of thre vectors'],
    ['vecCross(v1, v2)', 'Calculates the dot product of two vectors'],
    ['vecEqual(v1, v2, tol)', 'Returns true if the difference between two vectors is smaler than a specified tolerance']
];
var conversion = [
    ['boolean(val)', 'Converts the value to a boolean'],
    ['number(val)', 'Converts the value to a number'],
    ['string(val)', 'Converts the value to a string'],
    ['radToDeg(rad)', 'Converts radians to degrees'],
    ['degToRad(deg)', 'Converts degrees to radians']
];
var random = [
    ['rand(min, max)', 'Returns a random number in the specified range'],
    ['randInt(min, max)', 'Returns a random integer in the specified range'],
    ['randPick(list, num)', 'Returns a random set of items from the list']
];
var arithmetic = [
    ['abs(num)', 'Returns the absolute value of the number'],
    ['square(num)', 'Returns the square of the number'],
    ['cube(num)', 'Returns the cube of the number'],
    ['pow(numb, pow)', 'Returns the number to the specified power'],
    ['sqrt(num)', 'Returns the square root of the number'],
    ['exp(num)', 'Returns the value of E to the power of the number'],
    ['log(num)', 'Returns the natural logarithm (base E) of the number'],
    ['round(num)', 'Returns the value of the number rounded to its nearest integer'],
    ['ceil(num)', 'Returns the value of the number rounded up to its nearest integer'],
    ['floor(num)', 'Returns the value of the number rounded down to its nearest integer'],
    ['mod(num, num)', 'Converts the value to a boolean'],
    ['sum(list)', 'Returns the sum of all values in a list'],
    ['prod(list)', 'Returns the product of all values in a list'],
    ['hypot(list)', 'Returns the hypothenuse of all values in a list'],
    ['norm(list)', 'Returns the norm of a vector'],
    ['distance(list, list)', 'Returns the Eucledian distance between two locations (each as a list of xyz coordinates)']
];
var statistics = [
    ['min(list)', 'Returns the number with the lowest value'],
    ['max(list)', 'Returns the number with the highest value'],
    ['mad(list)', 'Returns the median absolute deviation of the list'],
    ['mean(list)', 'Returns the mean value of the list'],
    ['median(list)', 'Returns the median of the list'],
    ['mode(list)', 'Returns the mode of the list'],
    ['std(list)', 'Returns the standard deviation of the list'],
    ['vari(list)', 'Returns the variance of the list']
];
var trigonometry = [
    ['sin(rad)', 'Returns the sine of a value (in radians)'],
    ['asin(num)', 'Returns the inverse sine of a value (in radians)'],
    ['sinh(rad)', 'Returns the hyperbolic sine of a value (in radians)'],
    ['asinh(num)', 'Returns the hyperbolic arcsine of a value (in radians)'],
    ['cos(rad)', 'Returns the cosine of a value (in radians)'],
    ['acos(num)', 'Returns the inverse cosine of a value (in radians)'],
    ['cosh(rad)', 'Returns the hyperbolic cosine of a value (in radians)'],
    ['acosh(num)', 'Returns the hyperbolic arccos of a value (in radians)'],
    ['tan(rad)', 'Returns the tangent of a value (in radians)'],
    ['atan(num)', 'Returns the inverse tangent of a value (in radians)'],
    ['tanh(rad)', 'Returns the hyperbolic tangent of a value (in radians)'],
    ['atanh(num)', 'Returns the hyperbolic arctangent of a value (in radians)'],
    ['atan2(number1, number2)', 'Returns the inverse tangent function with two arguments, number1/number2']
];
var str = [
    ['replace(string,search_str,new_str)', 'Replace all instances of specified search with a new string']
];
var inline_func = [
    ['constants', constants],
    ['random', random],
    ['lists', lists],
    ['conversion', conversion],
    ['vectors', vectors],
    ['arithmetic', arithmetic],
    ['statistics', statistics],
    ['trigonometry', trigonometry]
];
// const inline_func_lst: string[][][] = inline_func.map(x => x[1]);
// const inline_func_lst = [
//     lists,
//     conversion,
//     arithmetic,
//     statistics,
//     trigonometry
// ];
// const inline_fn_names = [];
// for (let i = 0; i < inline_func_lst.length; i++) {
//     inline_func_lst[i].forEach((arr) => {
//         const mtch = arr[0].match(/^\w*(?=\()/);
//         let ret;
//         if (mtch !== null) {
//             ret = mtch[0];
//         } else {
//             ret = arr[0];
//         }
//         inline_fn_names.push(ret);
//     });
// }
// export const inline_fn_regEx = RegExp(inline_fn_names.join('|'), 'g');


/***/ }),

/***/ "./src/assets/core/modules/_check_args.ts":
/*!************************************************!*\
  !*** ./src/assets/core/modules/_check_args.ts ***!
  \************************************************/
/*! exports provided: checkAttribNameValue, TypeCheckObj, IDcheckObj, checkCommTypes, checkIDs, checkIDnTypes */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "checkAttribNameValue", function() { return checkAttribNameValue; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TypeCheckObj", function() { return TypeCheckObj; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "IDcheckObj", function() { return IDcheckObj; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "checkCommTypes", function() { return checkCommTypes; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "checkIDs", function() { return checkIDs; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "checkIDnTypes", function() { return checkIDnTypes; });
/* harmony import */ var _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @libs/geo-info/common */ "./src/assets/libs/geo-info/common.ts");
/* harmony import */ var _libs_geo_info_id__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @libs/geo-info/id */ "./src/assets/libs/geo-info/id.ts");

// import { isDim0, isDim1, isDim2 } from '@libs/geo-info/id';

// =========================================================================================================================================
// Attribute Checks
// =========================================================================================================================================
function isValidName(fn_name, arg_name, arg) {
    TypeCheckObj.isString(fn_name, arg_name, arg); // check arg is string
    if (arg.length === 0) {
        throw new Error(fn_name + ': ' + arg_name + ' not specified');
    }
    if (arg.search(/\W/) !== -1) {
        throw new Error(fn_name + ': ' + arg_name + ' contains restricted characters');
    }
    if (arg[0].search(/[0-9]/) !== -1) {
        throw new Error(fn_name + ': ' + arg_name + ' should not start with numbers');
    }
    return;
}
function checkAttribNameValue(fn_name, attrib_name, attrib_value, attrib_index) {
    isValidName(fn_name, 'attrib_name', attrib_name);
    // blocks writing to id
    if (attrib_name === 'id') {
        throw new Error(fn_name + ': id is not modifiable!');
    }
    // -- check defined index
    var ind = false;
    if (attrib_index !== null && attrib_index !== undefined) {
        ind = true;
        // check if index is number
        TypeCheckObj.isNumber(fn_name, 'attrib_index', attrib_index);
    }
    // -- check blocked name
    var blk_att_nm_lst = Object.values(_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EAttribNames"]);
    var blocked = false;
    var isTexture = false;
    var isName = false;
    for (var i = 0; i < blk_att_nm_lst.length; i++) {
        if (attrib_name === 'texture') {
            isTexture = true;
            blocked = true;
            break;
        }
        if (attrib_name === 'name') {
            isName = true;
            blocked = true;
            break;
        }
        if (attrib_name === blk_att_nm_lst[i]) {
            blocked = true;
            break;
        }
    }
    var check_fns = [];
    if (attrib_value !== null && attrib_value !== undefined) {
        if (blocked === true) {
            var pass = false;
            var err_arr = [fn_name + ': ' + 'attrib_name is one of the reserved attribute names - '
                    + Object.values(_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EAttribNames"]).toString() + '\n'];
            if (isName) {
                try {
                    isValidName(fn_name, 'attrib_value', attrib_value);
                    pass = true;
                }
                catch (err) {
                    err_arr.push(err);
                }
            }
            else {
                if (ind === false) {
                    try {
                        isListArg(fn_name, 'attrib_value', attrib_value, 'numbers');
                        var chkLstLen = void 0;
                        if (isTexture) {
                            chkLstLen = 2;
                        }
                        else {
                            chkLstLen = 3;
                        }
                        isListLenArg(fn_name, 'attrib_value', attrib_value, chkLstLen);
                    }
                    catch (err) {
                        err_arr.push(err.message);
                        throw new Error(err_arr.join(''));
                    }
                    check_fns = [TypeCheckObj.isNumberList];
                    for (var i = 0; i < check_fns.length; i++) {
                        try {
                            check_fns[i](fn_name + '.' + check_fns[i], 'attrib_value', attrib_value);
                        }
                        catch (err) {
                            err_arr.push(err.message + '\n');
                            continue;
                        }
                        pass = true;
                        break; // passed
                    }
                }
                else {
                    if (isTexture) {
                        if (attrib_index > 1 || attrib_index < 0) {
                            err_arr.push(fn_name + '.validIndex: attrib_index is not between 0 and 1 (inclusive)');
                            throw new Error(err_arr.join(''));
                        }
                    }
                    else {
                        if (attrib_index > 2 || attrib_index < 0) {
                            err_arr.push(fn_name + '.validIndex: attrib_index is not between 0 and 2 (inclusive)');
                            throw new Error(err_arr.join(''));
                        }
                    }
                    check_fns = [TypeCheckObj.isNumber];
                    for (var i = 0; i < check_fns.length; i++) {
                        try {
                            check_fns[i](fn_name + '[' + attrib_index + ']' + '.' + check_fns[i], 'attrib_value', attrib_value);
                        }
                        catch (err) {
                            err_arr.push(err.message + '\n');
                            continue;
                        }
                        pass = true;
                        break; // passed
                    }
                }
            }
            if (pass === false) {
                throw new Error(err_arr.join(''));
            }
        }
        else {
            if (ind === false) {
                checkCommTypes(fn_name, 'attrib_value', attrib_value, [TypeCheckObj.isString, TypeCheckObj.isNumber, TypeCheckObj.isStringList, TypeCheckObj.isNumberList]);
            }
            else { // no nested lists
                checkCommTypes(fn_name + '[' + attrib_index + ']', 'attrib_value', attrib_value, [TypeCheckObj.isString, TypeCheckObj.isNumber]);
            }
        }
    }
    return;
}
// =========================================================================================================================================
// Function Dictionaries
// =========================================================================================================================================
var TypeCheckObj = /** @class */ (function () {
    function TypeCheckObj() {
    }
    // entities: Check if string
    TypeCheckObj.isEntity = function (fn_name, arg_name, arg) {
        isStringArg(fn_name, arg_name, arg, 'entity');
        if (arg.slice(2).length === 0) {
            throw new Error(fn_name + ': ' + arg_name + ' needs to have an index specified');
        }
        return;
    };
    TypeCheckObj.isEntityList = function (fn_name, arg_name, arg_list) {
        isListArg(fn_name, arg_name, arg_list, 'entity');
        for (var i = 0; i < arg_list.length; i++) {
            TypeCheckObj.isEntity(fn_name, arg_name + '[' + i + ']', arg_list[i]);
        }
        return;
    };
    // any: to catch undefined
    TypeCheckObj.isAny = function (fn_name, arg_name, arg) {
        isAnyArg(fn_name, arg_name, arg);
        return;
    };
    // null: allow Null input
    TypeCheckObj.isNull = function (fn_name, arg_name, arg) {
        isNullArg(fn_name, arg_name, arg);
        return;
    };
    // list
    TypeCheckObj.isList = function (fn_name, arg_name, arg) {
        isListArg(fn_name, arg_name, arg, 'any');
        return;
    };
    // strings
    TypeCheckObj.isString = function (fn_name, arg_name, arg) {
        isStringArg(fn_name, arg_name, arg, 'string');
        return;
    };
    TypeCheckObj.isStringList = function (fn_name, arg_name, arg_list) {
        isStringListArg(fn_name, arg_name, arg_list, 'string');
        return;
    };
    // numbers and special numbers
    TypeCheckObj.isNumber = function (fn_name, arg_name, arg) {
        isNumberArg(fn_name, arg_name, arg);
        return;
    };
    TypeCheckObj.isNumberList = function (fn_name, arg_name, arg_list) {
        isNumberListArg(fn_name, arg_name, arg_list);
        return;
    };
    TypeCheckObj.isInt = function (fn_name, arg_name, arg) {
        isIntArg(fn_name, arg_name, arg);
        return;
    };
    TypeCheckObj.isXYlist = function (fn_name, arg_name, arg_list) {
        isListArg(fn_name, arg_name, arg_list, 'numbers');
        isListLenArg(fn_name, arg_name, arg_list, 2);
        isNumberListArg(fn_name, arg_name, arg_list);
        return;
    };
    TypeCheckObj.isXYlistInt = function (fn_name, arg_name, arg_list) {
        isListArg(fn_name, arg_name, arg_list, 'integers');
        isListLenArg(fn_name, arg_name, arg_list, 2);
        isIntListArg(fn_name, arg_name, arg_list);
        return;
    };
    TypeCheckObj.isXYZlist = function (fn_name, arg_name, arg_list) {
        TypeCheckObj.isCoord(fn_name, arg_name, arg_list);
        return;
    };
    // Other Geometry
    TypeCheckObj.isCoord = function (fn_name, arg_name, arg) {
        isListArg(fn_name, arg_name, arg, 'numbers');
        isListLenArg(fn_name, arg_name, arg, 3);
        isNumberListArg(fn_name, arg_name, arg);
        return;
    };
    TypeCheckObj.isCoordList = function (fn_name, arg_name, arg_list) {
        isListArg(fn_name, arg_name, arg_list, 'coordinates');
        for (var i = 0; i < arg_list.length; i++) {
            isListLenArg(fn_name, arg_name + '[' + i + ']', arg_list[i], 3);
            isNumberListArg(fn_name, arg_name + '[' + i + ']', arg_list[i]);
        }
        return;
    };
    TypeCheckObj.isCoordList_List = function (fn_name, arg_name, arg_list) {
        isListArg(fn_name, arg_name, arg_list, 'lists of coordinates');
        for (var i = 0; i < arg_list.length; i++) {
            for (var j = 0; j < arg_list[i].length; j++) {
                isListLenArg(fn_name, arg_name + '[' + i + ']' + '[' + j + ']', arg_list[i][j], 3);
                isNumberListArg(fn_name, arg_name + '[' + i + ']' + '[' + j + ']', arg_list[i][j]);
            }
        }
        return;
    };
    TypeCheckObj.isVector = function (fn_name, arg_name, arg_list) {
        TypeCheckObj.isCoord(fn_name, arg_name, arg_list);
        return;
    };
    TypeCheckObj.isVectorList = function (fn_name, arg_name, arg_list) {
        isListArg(fn_name, arg_name, arg_list, 'vectors');
        for (var i = 0; i < arg_list.length; i++) {
            TypeCheckObj.isVector(fn_name, arg_name + '[' + i + ']', arg_list[i]);
        }
        return;
    };
    TypeCheckObj.isOrigin = function (fn_name, arg_name, arg) {
        return checkIDnTypes(fn_name, arg_name, arg, [IDcheckObj.isID, TypeCheckObj.isCoord], [_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].POSI, _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].VERT, _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].POINT]);
    };
    TypeCheckObj.isPlane = function (fn_name, arg_name, arg_list) {
        // one origin: point, posi, vert, coord + 2 vectors
        isListArg(fn_name, arg_name, arg_list, 'origin and vectors');
        isListLenArg(fn_name, arg_name, arg_list, 3);
        TypeCheckObj.isCoord(fn_name, arg_name + '[0]', arg_list[0]);
        [1, 2].forEach(function (i) {
            TypeCheckObj.isVector(fn_name, arg_name + '[' + i + ']', arg_list[i]);
        });
        return;
    };
    TypeCheckObj.isPlaneList = function (fn_name, arg_name, arg_list) {
        isListArg(fn_name, arg_name, arg_list, 'planes');
        for (var i = 0; i < arg_list.length; i++) {
            TypeCheckObj.isPlane(fn_name, arg_name + '[' + i + ']', arg_list[i]);
        }
        return;
    };
    TypeCheckObj.isBBox = function (fn_name, arg_name, arg_list) {
        // four coords
        isListArg(fn_name, arg_name, arg_list, 'origin, min corner, max corner, size');
        isListLenArg(fn_name, arg_name, arg_list, 4);
        TypeCheckObj.isCoord(fn_name, arg_name + '[0]', arg_list[0]);
        [0, 1, 2, 3].forEach(function (i) {
            TypeCheckObj.isVector(fn_name, arg_name + '[' + i + ']', arg_list[i]);
        });
        return;
    };
    TypeCheckObj.isBBoxList = function (fn_name, arg_name, arg_list) {
        isListArg(fn_name, arg_name, arg_list, 'BBoxes');
        for (var i = 0; i < arg_list.length; i++) {
            TypeCheckObj.isBBox(fn_name, arg_name + '[' + i + ']', arg_list[i]);
        }
        return;
    };
    TypeCheckObj.isRay = function (fn_name, arg_name, arg_list) {
        isListArg(fn_name, arg_name, arg_list, 'origin and vector');
        isListLenArg(fn_name, arg_name, arg_list, 2);
        TypeCheckObj.isCoord(fn_name, arg_name + '[0]', arg_list[0]);
        TypeCheckObj.isVector(fn_name, arg_name + '[1]', arg_list[1]);
        return;
    };
    TypeCheckObj.isRayList = function (fn_name, arg_name, arg_list) {
        isListArg(fn_name, arg_name, arg_list, 'Rays');
        for (var i = 0; i < arg_list.length; i++) {
            TypeCheckObj.isBBox(fn_name, arg_name + '[' + i + ']', arg_list[i]);
        }
        return;
    };
    return TypeCheckObj;
}());

var IDcheckObj = /** @class */ (function () {
    function IDcheckObj() {
    }
    // IDs
    // entity types
    // POSI, TRI, VERT, EDGE, WIRE, FACE, POINT, PLINE, PGON, COLL
    IDcheckObj.isID = function (fn_name, arg_name, arg, ent_type_strs) {
        TypeCheckObj.isEntity(fn_name, arg_name, arg); // check is valid id
        var ent_arr = Object(_libs_geo_info_id__WEBPACK_IMPORTED_MODULE_1__["idsBreak"])(arg); // split
        if (ent_type_strs === null) {
            ent_type_strs = IDcheckObj.default_ent_type_strs;
        }
        var pass = false;
        for (var i = 0; i < ent_type_strs.length; i++) {
            if (ent_arr[0] === ent_type_strs[i]) {
                pass = true;
                break;
            }
        }
        if (pass === false) {
            throw new Error(fn_name + ': ' + arg_name + ' is not one of the following valid types - ' +
                ent_type_strs.map(function (test_ent) { return _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"][test_ent]; }).toString());
        }
        return ent_arr;
    };
    IDcheckObj.isIDList = function (fn_name, arg_name, arg_list, ent_type_strs) {
        TypeCheckObj.isEntityList(fn_name, arg_name, arg_list); // check is valid id list
        var ent_arr_lst = Object(_libs_geo_info_id__WEBPACK_IMPORTED_MODULE_1__["idsBreak"])(arg_list); // split
        if (ent_type_strs === null) {
            ent_type_strs = IDcheckObj.default_ent_type_strs;
        }
        var _loop_1 = function (i) {
            var pass = false;
            for (var j = 0; j < ent_type_strs.length; j++) {
                if (ent_arr_lst[i][0] === ent_type_strs[j]) {
                    pass = true;
                    break;
                }
            }
            if (pass === false) {
                var ret_str_arr_1 = [];
                ent_type_strs.forEach(function (test_ent) {
                    ret_str_arr_1.push(_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"][test_ent] + '_list');
                });
                throw new Error(fn_name + ': ' + arg_name + '[' + i + ']' + ' is not one of the following valid types - '
                    + ent_type_strs.map(function (test_ent) { return _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"][test_ent] + '_list'; }).toString());
            }
        };
        for (var i = 0; i < ent_arr_lst.length; i++) {
            _loop_1(i);
        }
        return ent_arr_lst;
    };
    IDcheckObj.isIDList_list = function (fn_name, arg_name, arg_list, ent_type_strs) {
        var ret_arr = [];
        for (var i = 0; i < arg_list.length; i++) {
            ret_arr.push(IDcheckObj.isIDList(fn_name, arg_name + '[' + i + ']', arg_list[i], ent_type_strs));
        }
        return ret_arr;
    };
    // static default_ent_type_strs = ['POSI', 'TRI', 'VERT', 'EDGE', 'WIRE', 'FACE', 'POINT', 'PLINE', 'PGON', 'COLL'];
    IDcheckObj.default_ent_type_strs = [_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].POSI,
        _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].TRI,
        _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].VERT,
        _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].EDGE,
        _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].WIRE,
        _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].FACE,
        _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].POINT,
        _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].PLINE,
        _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].PGON,
        _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].COLL];
    return IDcheckObj;
}());

// =========================================================================================================================================
// Specific Checks
// =========================================================================================================================================
function checkCommTypes(fn_name, arg_name, arg, check_fns) {
    var pass = false;
    var err_arr = [];
    var ret;
    for (var i = 0; i < check_fns.length; i++) {
        try {
            ret = check_fns[i](fn_name, arg_name, arg);
        }
        catch (err) {
            err_arr.push(err.message + '\n');
            continue;
        }
        pass = true;
        break; // passed
    }
    if (pass === false) { // Failed all tests: argument does not fall into any valid types
        var ret_msg = fn_name + ': ' + arg_name + ' failed the following tests:\n';
        throw new Error(ret_msg + err_arr.join(''));
    }
    return ret;
}
function checkIDs(fn_name, arg_name, arg, check_fns, IDchecks) {
    var pass = false;
    var err_arr = [];
    var ret;
    for (var i = 0; i < check_fns.length; i++) {
        try {
            ret = check_fns[i](fn_name, arg_name, arg, IDchecks);
        }
        catch (err) {
            err_arr.push(err.message + '\n');
            continue;
        }
        pass = true;
        break; // passed
    }
    if (pass === false) { // Failed all tests: argument does not fall into any valid types
        var ret_msg = fn_name + ': ' + arg_name + ' failed the following tests:\n';
        throw new Error(ret_msg + err_arr.join(''));
    }
    return ret; // returns TEntTypeIdx|TEntTypeIdx[]|TEntTypeIdx[][]; depends on which passes
}
// =========================================================================================================================================
// Most General Check
// =========================================================================================================================================
function checkIDnTypes(fn_name, arg_name, arg, check_fns, IDchecks) {
    var pass = false;
    var err_arr = [];
    var ret;
    for (var i = 0; i < check_fns.length; i++) {
        try {
            ret = check_fns[i](fn_name, arg_name, arg, IDchecks);
        }
        catch (err) {
            err_arr.push(err.message + '\n');
            continue;
        }
        pass = true;
        break; // passed
        // if (Object.keys(IDcheckObj).includes(check_fns[i])) {
        //     // checking for ID
        //     try {
        //         ret = IDcheckObj[check_fns[i]](fn_name + '.' + check_fns[i], arg_name, arg, IDchecks);
        //     } catch (err) {
        //         err_arr.push(err.message + '\n');
        //         continue;
        //     }
        //     pass = true;
        //     break; // passed
        // } else {
        //     // checking common types
        //     try {
        //         TypeCheckObj[check_fns[i]](fn_name + '.' + check_fns[i], arg_name, arg);
        //     } catch (err) {
        //         err_arr.push(err.message + '\n');
        //         continue;
        //     }
        //     pass = true;
        //     break; // passed
        // }
    }
    if (pass === false) { // Failed all tests: argument does not fall into any valid types
        var ret_msg = fn_name + ': ' + arg_name + ' failed the following tests:\n';
        throw new Error(ret_msg + err_arr.join(''));
    }
    return ret; // returns void|TEntTypeIdx|TEntTypeIdx[]|TEntTypeIdx[][]; depends on which passes
}
// =====================================================================================================================
// util
// =====================================================================================================================
// List
function isListArg(fn_name, arg_name, arg, typ) {
    if (!Array.isArray(arg)) {
        throw new Error(fn_name + ': ' + arg_name + ' is not a list of ' + typ);
    }
    return;
}
function isListLenArg(fn_name, arg_name, arg_list, len) {
    if (arg_list.length !== len) {
        throw new Error(fn_name + ': ' + arg_name + ' is not a list of length ' + len);
    }
    return;
}
// Any
function isAnyArg(fn_name, arg_name, arg) {
    if (arg === undefined) {
        throw new Error(fn_name + ': ' + arg_name + ' must be defined');
    }
    return;
}
// Null
function isNullArg(fn_name, arg_name, arg) {
    if (arg !== null) {
        throw new Error(fn_name + ': ' + arg_name + ' is not null');
    }
    return;
}
// String
function isStringArg(fn_name, arg_name, arg, typ) {
    if (typeof arg !== 'string') {
        throw new Error(fn_name + ': ' + arg_name + ' is not a ' + typ);
    }
    return;
}
function isStringListArg(fn_name, arg_name, arg_list, typ) {
    isListArg(fn_name, arg_name, arg_list, typ);
    for (var i = 0; i < arg_list.length; i++) {
        isStringArg(fn_name, arg_name + '[' + i + ']', arg_list[i], typ);
    }
    return;
}
// Numbers
function isNumberArg(fn_name, arg_name, arg) {
    if (typeof arg !== 'number') {
        throw new Error(fn_name + ': ' + arg_name + ' is not a number');
    }
    return;
}
function isNumberListArg(fn_name, arg_name, arg_list) {
    isListArg(fn_name, arg_name, arg_list, 'numbers');
    for (var i = 0; i < arg_list.length; i++) {
        if (typeof arg_list[i] !== 'number') {
            throw new Error(fn_name + ': ' + arg_name + '[' + i + ']' + ' is not a number');
        }
    }
    return;
}
function isIntArg(fn_name, arg_name, arg) {
    if (!Number.isInteger(arg)) {
        throw new Error(fn_name + ': ' + arg_name + ' is not an integer');
    }
    return;
}
function isIntListArg(fn_name, arg_name, arg_list) {
    isListArg(fn_name, arg_name, arg_list, 'integers');
    for (var i = 0; i < arg_list.length; i++) {
        if (!Number.isInteger(arg_list[i])) {
            throw new Error(fn_name + ': ' + arg_name + '[' + i + ']' + ' is not an integer');
        }
    }
    return;
}


/***/ }),

/***/ "./src/assets/core/modules/_constants.ts":
/*!***********************************************!*\
  !*** ./src/assets/core/modules/_constants.ts ***!
  \***********************************************/
/*! exports provided: XY, YZ, ZX, YX, ZY, XZ */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "XY", function() { return XY; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "YZ", function() { return YZ; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ZX", function() { return ZX; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "YX", function() { return YX; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ZY", function() { return ZY; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "XZ", function() { return XZ; });
/* harmony import */ var _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @libs/geo-info/common */ "./src/assets/libs/geo-info/common.ts");

var XY = _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["XYPLANE"];
var YZ = _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["YZPLANE"];
var ZX = _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["ZXPLANE"];
var YX = _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["YXPLANE"];
var ZY = _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["ZYPLANE"];
var XZ = _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["XZPLANE"];


/***/ }),

/***/ "./src/assets/core/modules/_conversion.ts":
/*!************************************************!*\
  !*** ./src/assets/core/modules/_conversion.ts ***!
  \************************************************/
/*! exports provided: radToDeg, degToRad */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "radToDeg", function() { return radToDeg; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "degToRad", function() { return degToRad; });
function radToDeg(rad) {
    return rad * (180 / Math.PI);
}
function degToRad(deg) {
    return deg * (Math.PI / 180);
}


/***/ }),

/***/ "./src/assets/core/modules/_list.ts":
/*!******************************************!*\
  !*** ./src/assets/core/modules/_list.ts ***!
  \******************************************/
/*! exports provided: range, isList, listLen, listCount, listCopy, listLast, listGet, listFind, listHas, listJoin, listFlat, listSlice, listZip, listZip2, shuffle, zip, zip2, length */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "range", function() { return range; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isList", function() { return isList; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "listLen", function() { return listLen; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "listCount", function() { return listCount; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "listCopy", function() { return listCopy; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "listLast", function() { return listLast; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "listGet", function() { return listGet; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "listFind", function() { return listFind; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "listHas", function() { return listHas; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "listJoin", function() { return listJoin; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "listFlat", function() { return listFlat; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "listSlice", function() { return listSlice; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "listZip", function() { return listZip; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "listZip2", function() { return listZip2; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "shuffle", function() { return shuffle; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "zip", function() { return zip; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "zip2", function() { return zip2; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "length", function() { return length; });
/**
 * list functions that obtain and return information from an input list. Does not modify input list.
 */
function range(start, end, step) {
    if (start === undefined) {
        throw new Error('Invalid inline arg: min must be defined.');
    }
    if (end === undefined) {
        throw new Error('Invalid inline arg: max must be defined.');
    }
    var len = end - start;
    if (len <= 0) {
        return [];
    }
    if (step === undefined) {
        step = 1;
    }
    var list = [];
    var current = start;
    while (current < end) {
        list.push(current);
        current += step;
    }
    return list;
}
function isList(list) {
    return Array.isArray(list);
}
function listLen(list) {
    return list.length;
}
function listCount(list, val) {
    var count = 0;
    for (var i = 0; i < list.length; i++) {
        if (list[i] === val) {
            count += 1;
        }
    }
    return count;
}
function listCopy(list) {
    return list.slice();
}
function listLast(list) {
    return list[list.length - 1];
}
function listGet(list, index) {
    if (Array.isArray(index)) {
        return index.map(function (i) { return listGet(list, i); });
    }
    if (index < 0) {
        index = list.length + index;
    }
    return list[index];
}
function listFind(list, val) {
    return list.indexOf(val);
}
function listHas(list, val) {
    for (var i = list.length - 1; i >= 0; i--) {
        if (list[i] === val) {
            return true;
        }
    }
    return false;
}
function listJoin(list1, list2) {
    if (!Array.isArray(list1)) {
        list1 = [list1];
    }
    if (!Array.isArray(list2)) {
        list2 = [list2];
    }
    return list1.concat(list2);
}
function listFlat(list, depth) {
    var list_copy = list.slice();
    // @ts-ignore
    return list_copy.flat(depth);
}
function listSlice(list, start, end) {
    return list.slice(start, end);
}
function listZip(lists) {
    var shortest = lists.length === 0 ? [] : lists.reduce(function (a, b) {
        return a.length < b.length ? a : b;
    });
    return shortest.map(function (_, i) { return lists.map(function (array) { return array[i]; }); });
}
function listZip2(lists) {
    var longest = lists.length === 0 ? [] : lists.reduce(function (a, b) {
        return a.length > b.length ? a : b;
    });
    return longest.map(function (_, i) { return lists.map(function (array) { return array[i]; }); });
}
// =============================== DEPRECATED
function shuffle(list) {
    console.log('WARNING: This function has been deprecated. Please use the list.Sort() function, and select random.');
    var new_list = list.slice();
    new_list.sort(function () { return .5 - Math.random(); });
    return new_list;
}
function zip(lists) {
    console.log('WARNING: This function has been deprecated. Please use the inline listZip() function.');
    return listZip(lists);
}
function zip2(lists) {
    console.log('WARNING: This function has been deprecated. Please use the inline listZip2() function.');
    return listZip2(lists);
}
function length(list) {
    if (list === undefined) {
        throw new Error('Invalid inline arg: list must be defined.');
    }
    return list.length;
}


/***/ }),

/***/ "./src/assets/core/modules/_mathjs.ts":
/*!********************************************!*\
  !*** ./src/assets/core/modules/_mathjs.ts ***!
  \********************************************/
/*! exports provided: boolean, number, string, mad, mean, median, mode, prod, std, vari, sum, hypot, norm, mod, square, cube, distance, random, randomInt, pickRandom */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "boolean", function() { return boolean; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "number", function() { return number; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "string", function() { return string; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "mad", function() { return mad; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "mean", function() { return mean; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "median", function() { return median; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "mode", function() { return mode; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "prod", function() { return prod; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "std", function() { return std; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "vari", function() { return vari; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sum", function() { return sum; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "hypot", function() { return hypot; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "norm", function() { return norm; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "mod", function() { return mod; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "square", function() { return square; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "cube", function() { return cube; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "distance", function() { return distance; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "random", function() { return random; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "randomInt", function() { return randomInt; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "pickRandom", function() { return pickRandom; });
/* harmony import */ var mathjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! mathjs */ "./node_modules/mathjs/index.js");
/* harmony import */ var mathjs__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(mathjs__WEBPACK_IMPORTED_MODULE_0__);

var boolean = mathjs__WEBPACK_IMPORTED_MODULE_0__["boolean"];
var number = mathjs__WEBPACK_IMPORTED_MODULE_0__["number"];
var string = mathjs__WEBPACK_IMPORTED_MODULE_0__["string"];
var mad = mathjs__WEBPACK_IMPORTED_MODULE_0__["mad"];
var mean = mathjs__WEBPACK_IMPORTED_MODULE_0__["mean"];
var median = mathjs__WEBPACK_IMPORTED_MODULE_0__["median"];
var mode = mathjs__WEBPACK_IMPORTED_MODULE_0__["mode"];
var prod = mathjs__WEBPACK_IMPORTED_MODULE_0__["prod"];
var std = mathjs__WEBPACK_IMPORTED_MODULE_0__["std"];
var vari = mathjs__WEBPACK_IMPORTED_MODULE_0__["var"];
var sum = mathjs__WEBPACK_IMPORTED_MODULE_0__["sum"];
var hypot = mathjs__WEBPACK_IMPORTED_MODULE_0__["hypot"];
var norm = mathjs__WEBPACK_IMPORTED_MODULE_0__["norm"];
var mod = mathjs__WEBPACK_IMPORTED_MODULE_0__["mod"];
var square = mathjs__WEBPACK_IMPORTED_MODULE_0__["square"];
var cube = mathjs__WEBPACK_IMPORTED_MODULE_0__["cube"];
var distance = mathjs__WEBPACK_IMPORTED_MODULE_0__["distance"];
var random = mathjs__WEBPACK_IMPORTED_MODULE_0__["random"];
var randomInt = mathjs__WEBPACK_IMPORTED_MODULE_0__["randomInt"];
var pickRandom = mathjs__WEBPACK_IMPORTED_MODULE_0__["pickRandom"];


/***/ }),

/***/ "./src/assets/core/modules/_model.ts":
/*!*******************************************!*\
  !*** ./src/assets/core/modules/_model.ts ***!
  \*******************************************/
/*! exports provided: __new__, __preprocess__, __postprocess__, __merge__, __stringify__, __setAttrib__, __getAttrib__, __select__, __checkModel__ */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__new__", function() { return __new__; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__preprocess__", function() { return __preprocess__; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__postprocess__", function() { return __postprocess__; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__merge__", function() { return __merge__; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__stringify__", function() { return __stringify__; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__setAttrib__", function() { return __setAttrib__; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__getAttrib__", function() { return __getAttrib__; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__select__", function() { return __select__; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__checkModel__", function() { return __checkModel__; });
/* harmony import */ var _libs_geo_info_GIModel__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @libs/geo-info/GIModel */ "./src/assets/libs/geo-info/GIModel.ts");
/* harmony import */ var _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @libs/geo-info/common */ "./src/assets/libs/geo-info/common.ts");
/* harmony import */ var _libs_geo_info_id__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @libs/geo-info/id */ "./src/assets/libs/geo-info/id.ts");
/* harmony import */ var _check_args__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./_check_args */ "./src/assets/core/modules/_check_args.ts");




//  ===============================================================================================
//  Functions used by Mobius
//  ===============================================================================================
/**
 * Creates a new empty model.
 *
 * @returns New model empty.
 */
function __new__() {
    var model = new _libs_geo_info_GIModel__WEBPACK_IMPORTED_MODULE_0__["GIModel"]();
    model.attribs.add.addAttrib(_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_1__["EEntType"].POSI, _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_1__["EAttribNames"].COORDS, _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_1__["EAttribDataTypeStrs"].FLOAT, 3);
    return model;
}
//  ===============================================================================================
/**
 * A function to preprocess the model, before it enters the node.
 * In cases where there is more than one model connected to a node,
 * the preprocess function will be called before the merge function.
 *
 * @param model The model to preprocess.
 */
function __preprocess__(__model__) {
    // TODO
}
//  ===============================================================================================
/**
 * A function to postprocess the model, after it enters the node.
 *
 * @param model The model to postprocess.
 */
function __postprocess__(__model__) {
    // TODO
    // Remove all undefined values for the arrays
}
//  ===============================================================================================
/**
 * Merges the second model into the first model. The geometry, attribues, and groups are all merged.
 * If the models contain contain groups with the same names, then the groups will be merged.
 *
 * @param model1 The model to merge into.
 * @param model2 The model to merge from    .
 */
function __merge__(model1, model2) {
    model1.merge(model2);
}
//  ===============================================================================================
/**
 * Returns a string representation of this model.
 * @param __model__
 */
function __stringify__(__model__) {
    return JSON.stringify(__model__.getData());
}
//  ===============================================================================================
function _setAttrib(__model__, ents_arr, attrib_name, attrib_values, attrib_index) {
    // check the ents_arr
    if (ents_arr === null) {
        var model_attrib_value = attrib_values;
        if (attrib_index !== null && attrib_index !== undefined) {
            __model__.attribs.add.setModelAttribIndexedValue(attrib_name, attrib_index, model_attrib_value);
        }
        else {
            __model__.attribs.add.setModelAttribValue(attrib_name, model_attrib_value);
        }
        return;
    }
    else if (ents_arr.length === 0) {
        return;
    }
    else if (Object(_libs_geo_info_id__WEBPACK_IMPORTED_MODULE_2__["getArrDepth"])(ents_arr) === 1) {
        ents_arr = [ents_arr];
    }
    // check attrib_values
    var attrib_values_depth = Object(_libs_geo_info_id__WEBPACK_IMPORTED_MODULE_2__["getArrDepth"])(attrib_values);
    if (attrib_values_depth === 2) {
        // attrib values is a list of lists
        var attrib_values_arrs = attrib_values;
        if (ents_arr.length !== attrib_values_arrs.length) {
            throw new Error('If multiple values are given, then the number of values must be equal to the number of entities.');
        }
        for (var i = 0; i < ents_arr.length; i++) {
            _setAttrib(__model__, ents_arr[i], attrib_name, attrib_values_arrs[i], attrib_index);
        }
        return;
    }
    else if (attrib_values_depth === 1) {
        // check if ents_arr.length equals attrib_values.length
        // if true, then maybe we are trying to set each ent to each value
        var attrib_values_arr = attrib_values;
        if (ents_arr.length === attrib_values_arr.length) {
            var first_ent_type = ents_arr[0][0];
            if (__model__.attribs.query.hasAttrib(first_ent_type, attrib_name)) {
                // if (__model__.attribs.query.getAttribDataSize(first_ent_type, attrib_name) === 1) {
                // we can assume that we are trying to set each ent to each value
                // we could also check that all ents are of same type but that seems unecessary
                for (var i = 0; i < ents_arr.length; i++) {
                    _setAttrib(__model__, ents_arr[i], attrib_name, attrib_values_arr[i], attrib_index);
                }
                return;
                //  }
            }
        }
    }
    // set the attribute value
    var attrib_value = attrib_values;
    // --- Error Check ---
    var fn_name = ents_arr + '.Inline.__setAttrib__' + '[\'' + attrib_name + '\']';
    Object(_check_args__WEBPACK_IMPORTED_MODULE_3__["checkAttribNameValue"])(fn_name, attrib_name, attrib_value, attrib_index);
    // --- Error Check ---
    for (var _i = 0, ents_arr_1 = ents_arr; _i < ents_arr_1.length; _i++) {
        var ent_arr = ents_arr_1[_i];
        var _a = ent_arr, ent_type = _a[0], ent_i = _a[1];
        if (attrib_index !== null && attrib_index !== undefined) {
            __model__.attribs.add.setAttribIndexedValue(ent_type, ent_i, attrib_name, attrib_index, attrib_value);
        }
        else {
            __model__.attribs.add.setAttribValue(ent_type, ent_i, attrib_name, attrib_value);
        }
    }
    // console.log(__model__);
}
/**
 * Sets an attribute value in the model.
 * @param __model__
 */
function __setAttrib__(__model__, entities, attrib_name, attrib_values, attrib_index) {
    // --- Error Check ---
    var fn_name = entities + '.Inline.__setAttrib__' + '[\'' + attrib_name + '\']';
    var ents_arr = null;
    if (entities !== null && entities !== undefined) {
        ents_arr = Object(_check_args__WEBPACK_IMPORTED_MODULE_3__["checkIDs"])(fn_name, 'entities', entities, [_check_args__WEBPACK_IMPORTED_MODULE_3__["IDcheckObj"].isID, _check_args__WEBPACK_IMPORTED_MODULE_3__["IDcheckObj"].isIDList], null);
    }
    // checkAttribNameValue(fn_name , attrib_name, attrib_value, attrib_index);
    // --- Error Check ---
    _setAttrib(__model__, ents_arr, attrib_name, attrib_values, attrib_index);
}
//  ===============================================================================================
function _getAttrib(__model__, ents_arr, attrib_name, attrib_index) {
    var has_index = attrib_index !== null && attrib_index !== undefined;
    if (ents_arr === null) {
        if (has_index) {
            return __model__.attribs.query.getModelAttribIndexedValue(attrib_name, attrib_index);
        }
        else {
            return __model__.attribs.query.getModelAttribValue(attrib_name);
        }
    }
    else if (ents_arr.length === 0) {
        return;
    }
    else if (Object(_libs_geo_info_id__WEBPACK_IMPORTED_MODULE_2__["getArrDepth"])(ents_arr) === 1) {
        var _a = ents_arr, ent_type = _a[0], ent_i = _a[1];
        if (attrib_name === 'id') {
            if (has_index) {
                throw new Error('The "id" attribute does have an index.');
            }
            return _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_1__["EEntTypeStr"][ent_type] + ent_i;
        }
        else if (has_index) {
            return __model__.attribs.query.getAttribIndexedValue(ent_type, attrib_name, ent_i, attrib_index);
        }
        else {
            return __model__.attribs.query.getAttribValue(ent_type, attrib_name, ent_i);
        }
    }
    else {
        return ents_arr.map(function (ent_arr) {
            return _getAttrib(__model__, ent_arr, attrib_name, attrib_index);
        });
    }
}
/**
 * Gets an attribute value from the model.
 * @param __model__
 */
function __getAttrib__(__model__, entities, attrib_name, attrib_index) {
    // --- Error Check ---
    var fn_name = 'Inline.__getAttrib__';
    var ents_arr = null;
    if (entities !== null && entities !== undefined) {
        ents_arr = Object(_check_args__WEBPACK_IMPORTED_MODULE_3__["checkIDs"])(fn_name, 'entities', entities, [_check_args__WEBPACK_IMPORTED_MODULE_3__["IDcheckObj"].isID, _check_args__WEBPACK_IMPORTED_MODULE_3__["IDcheckObj"].isIDList], null);
    }
    Object(_check_args__WEBPACK_IMPORTED_MODULE_3__["checkCommTypes"])(fn_name, 'attrib_name', attrib_name, [_check_args__WEBPACK_IMPORTED_MODULE_3__["TypeCheckObj"].isString]);
    if (attrib_index !== null && attrib_index !== undefined) {
        Object(_check_args__WEBPACK_IMPORTED_MODULE_3__["checkCommTypes"])(fn_name, 'attrib_index', attrib_index, [_check_args__WEBPACK_IMPORTED_MODULE_3__["TypeCheckObj"].isNumber]);
    }
    // --- Error Check ---
    return _getAttrib(__model__, ents_arr, attrib_name, attrib_index);
}
//  ===============================================================================================
function _flatten(arrs) {
    var arr_flat = [];
    var arr_indices = [];
    var count = 0;
    for (var _i = 0, arrs_1 = arrs; _i < arrs_1.length; _i++) {
        var item = arrs_1[_i];
        if (Array.isArray(item)) {
            var _a = _flatten(item), arr_flat2 = _a[0], arr_indices2 = _a[1];
            for (var i = 0; i < arr_flat2.length; i++) {
                arr_flat.push(arr_flat2[i]);
                arr_indices2[i].unshift(count);
                arr_indices.push(arr_indices2[i]);
            }
        }
        else {
            arr_flat.push(item);
            arr_indices.push([count]);
        }
        count += 1;
    }
    return [arr_flat, arr_indices];
}
/**
 * Select entities in the model.
 * @param __model__
 */
function __select__(__model__, ents_id, var_name) {
    __model__.geom.selected = [];
    ents_id = ((Array.isArray(ents_id)) ? ents_id : [ents_id]);
    var _a = _flatten(ents_id), ents_id_flat = _a[0], ents_indices = _a[1];
    var ents_arr = Object(_libs_geo_info_id__WEBPACK_IMPORTED_MODULE_2__["idsBreak"])(ents_id_flat);
    for (var i = 0; i < ents_arr.length; i++) {
        var ent_arr = ents_arr[i];
        var ent_indices = ents_indices[i];
        var attrib_name = '_' + var_name;
        var attrib_value = var_name + '[' + ent_indices.join('][') + ']';
        __model__.geom.selected.push(ent_arr);
        if (!__model__.attribs.query.hasAttrib(ent_arr[0], attrib_name)) {
            __model__.attribs.add.addAttrib(ent_arr[0], attrib_name, _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_1__["EAttribDataTypeStrs"].STRING, 1);
        }
        __model__.attribs.add.setAttribValue(ent_arr[0], ent_arr[1], attrib_name, attrib_value);
    }
}
//  ===============================================================================================
/**
 * Checks the model for internal consistency.
 * @param __model__
 */
function __checkModel__(__model__) {
    return __model__.check();
}


/***/ }),

/***/ "./src/assets/core/modules/_output.ts":
/*!********************************************!*\
  !*** ./src/assets/core/modules/_output.ts ***!
  \********************************************/
/*! exports provided: Return */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Return", function() { return Return; });
/**
* Return certain value from the model for the flowchart's end node
 * @summary Return a specific value
 * @param {any[]} __model__  Model of the node.
 * @param {number} value  Index of the value to be returned.
 * @returns {any} Value
 */
function Return(__model__, value) {
    return value;
}


/***/ }),

/***/ "./src/assets/core/modules/_parameterTypes.ts":
/*!****************************************************!*\
  !*** ./src/assets/core/modules/_parameterTypes.ts ***!
  \****************************************************/
/*! exports provided: _parameterTypes, _varString */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_parameterTypes", function() { return _parameterTypes; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_varString", function() { return _varString; });
/* harmony import */ var _model__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./_model */ "./src/assets/core/modules/_model.ts");

var _parameterTypes = {
    constList: '__constList__',
    model: '__model__',
    input: '__input__',
    new: '_model.__new__',
    newFn: _model__WEBPACK_IMPORTED_MODULE_0__["__new__"],
    merge: '_model.__merge__',
    mergeFn: _model__WEBPACK_IMPORTED_MODULE_0__["__merge__"],
    addData: '_model.addGiData',
    preprocess: '_model.__preprocess__',
    postprocess: '_model.__postprocess__',
    setattrib: '_model.__setAttrib__',
    getattrib: '_model.__getAttrib__',
    select: '_model.__select__',
    return: '_Output.Return'
};
var _varString = "\nPI = Math.PI;\nXY = __modules__._constants.XY;\nYZ = __modules__._constants.YZ;\nZX = __modules__._constants.ZX;\nYX = __modules__._constants.YX;\nZY = __modules__._constants.ZY;\nXZ = __modules__._constants.XZ;\nmin = Math.min;\nmax = Math.max;\npow = Math.pow;\nsqrt = Math.sqrt;\nexp = Math.exp;\nlog = Math.log;\nround = Math.round;\nceil = Math.ceil;\nfloor = Math.floor;\nabs = Math.abs;\nsin = Math.sin;\nasin = Math.asin;\nsinh = Math.sinh;\nasinh = Math.asinh;\ncos = Math.cos;\nacos = Math.acos;\ncosh = Math.cosh;\nacosh = Math.acosh;\ntan = Math.tan;\natan = Math.atan;\ntanh = Math.tanh;\natanh = Math.atanh;\natan2 = Math.atan2;\nboolean = __modules__._mathjs.boolean;\nnumber = __modules__._mathjs.number;\nstring = __modules__._mathjs.string;\nmad = __modules__._mathjs.mad;\nmean = __modules__._mathjs.mean;\nmedian = __modules__._mathjs.median;\nmode = __modules__._mathjs.mode;\nprod = __modules__._mathjs.prod;\nstd = __modules__._mathjs.std;\nvari = __modules__._mathjs.var;\nsum = __modules__._mathjs.sum;\nhypot = __modules__._mathjs.hypot;\nnorm = __modules__._mathjs.norm;\nmod = __modules__._mathjs.mod;\nsquare = __modules__._mathjs.square;\ncube = __modules__._mathjs.cube;\ndistance = __modules__._mathjs.distance;\nrange = __modules__._list.range;\nisList = __modules__._list.isList;\nlistLen = __modules__._list.listLen;\nlistCount = __modules__._list.listCount;\nlistCopy = __modules__._list.listCopy;\nlistLast = __modules__._list.listLast;\nlistGet = __modules__._list.listGet;\nlistFind = __modules__._list.listFind;\nlistHas = __modules__._list.listHas;\nlistJoin = __modules__._list.listJoin;\nlistFlat = __modules__._list.listFlat;\nlistSlice = __modules__._list.listSlice;\nlistZip = __modules__._list.listZip;\nlistZip2 = __modules__._list.listZip2;\nsetMake = __modules__._set.setMake;\nsetUni = __modules__._set.setUni;\nsetInt = __modules__._set.setInt;\nsetDif = __modules__._set.setDif;\nlength = __modules__._list.length;\nshuffle = __modules__._list.shuffle;\nconcat = __modules__._list.concat;\nzip = __modules__._list.zip;\nzip2 = __modules__._list.zip2;\nvecAdd = __modules__._vec.vecAdd;\nvecSub = __modules__._vec.vecSub;\nvecDiv = __modules__._vec.vecDiv;\nvecMult = __modules__._vec.vecMult;\nvecLen = __modules__._vec.vecLen;\nvecSetLen = __modules__._vec.vecSetLen;\nvecNorm = __modules__._vec.vecNorm;\nvecRev = __modules__._vec.vecRev;\nvecFromTo = __modules__._vec.vecFromTo;\nvecAng = __modules__._vec.vecAng;\nvecAng2 = __modules__._vec.vecAng2;\nvecDot = __modules__._vec.vecDot;\nvecCross = __modules__._vec.vecCross;\nvecEqual = __modules__._vec.vecEqual;\nradToDeg = __modules__._conversion.radToDeg;\ndegToRad = __modules__._conversion.degToRad;\nrand = __modules__._rand.rand;\nrandInt = __modules__._rand.randInt;\nrandPick = __modules__._rand.randPick;\n";


/***/ }),

/***/ "./src/assets/core/modules/_rand.ts":
/*!******************************************!*\
  !*** ./src/assets/core/modules/_rand.ts ***!
  \******************************************/
/*! exports provided: rand, randInt, randPick */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "rand", function() { return rand; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "randInt", function() { return randInt; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "randPick", function() { return randPick; });
/* harmony import */ var mathjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! mathjs */ "./node_modules/mathjs/index.js");
/* harmony import */ var mathjs__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(mathjs__WEBPACK_IMPORTED_MODULE_0__);

function rand(min, max) {
    return mathjs__WEBPACK_IMPORTED_MODULE_0__["random"](min, max);
}
function randInt(min, max) {
    return mathjs__WEBPACK_IMPORTED_MODULE_0__["randomInt"](min, max);
}
function randPick(list, num) {
    return mathjs__WEBPACK_IMPORTED_MODULE_0__["pickRandom"](list, num);
}


/***/ }),

/***/ "./src/assets/core/modules/_set.ts":
/*!*****************************************!*\
  !*** ./src/assets/core/modules/_set.ts ***!
  \*****************************************/
/*! exports provided: setMake, setUni, setInt, setDif */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setMake", function() { return setMake; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setUni", function() { return setUni; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setInt", function() { return setInt; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setDif", function() { return setDif; });
/* harmony import */ var mathjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! mathjs */ "./node_modules/mathjs/index.js");
/* harmony import */ var mathjs__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(mathjs__WEBPACK_IMPORTED_MODULE_0__);
/**
 * list functions that obtain and return information from an input list. Does not modify input list.
 */

function setMake(list) {
    return Array.from(new Set(list));
}
function setUni(list1, list2) {
    return mathjs__WEBPACK_IMPORTED_MODULE_0__["setUnion"](list1, list2);
}
function setInt(list1, list2) {
    return mathjs__WEBPACK_IMPORTED_MODULE_0__["setIntersect"](list1, list2);
}
function setDif(list1, list2) {
    return mathjs__WEBPACK_IMPORTED_MODULE_0__["setDifference"](list1, list2);
}


/***/ }),

/***/ "./src/assets/core/modules/_vec.ts":
/*!*****************************************!*\
  !*** ./src/assets/core/modules/_vec.ts ***!
  \*****************************************/
/*! exports provided: vecAdd, vecSub, vecDiv, vecMult, vecLen, vecSetLen, vecNorm, vecRev, vecFromTo, vecAng, vecAng2, vecDot, vecCross, vecEqual */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "vecAdd", function() { return vecAdd; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "vecSub", function() { return vecSub; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "vecDiv", function() { return vecDiv; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "vecMult", function() { return vecMult; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "vecLen", function() { return vecLen; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "vecSetLen", function() { return vecSetLen; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "vecNorm", function() { return vecNorm; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "vecRev", function() { return vecRev; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "vecFromTo", function() { return vecFromTo; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "vecAng", function() { return vecAng; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "vecAng2", function() { return vecAng2; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "vecDot", function() { return vecDot; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "vecCross", function() { return vecCross; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "vecEqual", function() { return vecEqual; });
/* harmony import */ var _libs_geom_vectors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @libs/geom/vectors */ "./src/assets/libs/geom/vectors.ts");

var vecAdd = _libs_geom_vectors__WEBPACK_IMPORTED_MODULE_0__["vecAdd"];
var vecSub = _libs_geom_vectors__WEBPACK_IMPORTED_MODULE_0__["vecSub"];
var vecDiv = _libs_geom_vectors__WEBPACK_IMPORTED_MODULE_0__["vecDiv"];
var vecMult = _libs_geom_vectors__WEBPACK_IMPORTED_MODULE_0__["vecMult"];
var vecLen = _libs_geom_vectors__WEBPACK_IMPORTED_MODULE_0__["vecLen"];
var vecSetLen = _libs_geom_vectors__WEBPACK_IMPORTED_MODULE_0__["vecSetLen"];
var vecNorm = _libs_geom_vectors__WEBPACK_IMPORTED_MODULE_0__["vecNorm"];
var vecRev = _libs_geom_vectors__WEBPACK_IMPORTED_MODULE_0__["vecRev"];
var vecFromTo = _libs_geom_vectors__WEBPACK_IMPORTED_MODULE_0__["vecFromTo"];
var vecAng = _libs_geom_vectors__WEBPACK_IMPORTED_MODULE_0__["vecAng"];
var vecAng2 = _libs_geom_vectors__WEBPACK_IMPORTED_MODULE_0__["vecAng2"];
var vecDot = _libs_geom_vectors__WEBPACK_IMPORTED_MODULE_0__["vecDot"];
var vecCross = _libs_geom_vectors__WEBPACK_IMPORTED_MODULE_0__["vecCross"];
var vecEqual = _libs_geom_vectors__WEBPACK_IMPORTED_MODULE_0__["vecEqual"];


/***/ }),

/***/ "./src/assets/core/modules/calc.ts":
/*!*****************************************!*\
  !*** ./src/assets/core/modules/calc.ts ***!
  \*****************************************/
/*! exports provided: _EDistanceMethod, Distance, Length, Area, Vector, Centroid, _normal, Normal, ParamTToXyz, _ParamXyzToT */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_EDistanceMethod", function() { return _EDistanceMethod; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Distance", function() { return Distance; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Length", function() { return Length; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Area", function() { return Area; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Vector", function() { return Vector; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Centroid", function() { return Centroid; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_normal", function() { return _normal; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Normal", function() { return Normal; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ParamTToXyz", function() { return ParamTToXyz; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_ParamXyzToT", function() { return _ParamXyzToT; });
/* harmony import */ var _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @libs/geo-info/common */ "./src/assets/libs/geo-info/common.ts");
/* harmony import */ var _libs_geo_info_id__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @libs/geo-info/id */ "./src/assets/libs/geo-info/id.ts");
/* harmony import */ var _libs_geom_distance__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @libs/geom/distance */ "./src/assets/libs/geom/distance.ts");
/* harmony import */ var _libs_geom_vectors__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @libs/geom/vectors */ "./src/assets/libs/geom/vectors.ts");
/* harmony import */ var _libs_triangulate_triangulate__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @libs/triangulate/triangulate */ "./src/assets/libs/triangulate/triangulate.ts");
/* harmony import */ var _libs_geom_triangle__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @libs/geom/triangle */ "./src/assets/libs/geom/triangle.ts");
/* harmony import */ var _check_args__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./_check_args */ "./src/assets/core/modules/_check_args.ts");
/**
 * The `calc` module has functions for performing various types of calculations with entities in the model.
 * These functions neither make nor modify anything in the model.
 * These functions all return either numbers or lists of numbers.
 */







// ================================================================================================
var _EDistanceMethod;
(function (_EDistanceMethod) {
    _EDistanceMethod["P_P_DISTANCE"] = "p_to_p_distance";
    _EDistanceMethod["MIN_DISTANCE"] = "min_distance";
})(_EDistanceMethod || (_EDistanceMethod = {}));
function _distanceMin(__model__, ent_arr1, ents_arr2) {
    var depth2 = Object(_libs_geo_info_id__WEBPACK_IMPORTED_MODULE_1__["getArrDepth"])(ents_arr2);
    if (depth2 === 1) {
        throw Error('Not implemented');
    }
    else if (depth2 === 2) {
        return ents_arr2.map(function (ent_arr2) { return _distanceMin(__model__, ent_arr1, ent_arr2); });
    }
}
function _distancePtoP(__model__, ent_arr1, ents_arr2) {
    var depth2 = Object(_libs_geo_info_id__WEBPACK_IMPORTED_MODULE_1__["getArrDepth"])(ents_arr2);
    if (depth2 === 1) {
        var ent_arr2 = ents_arr2;
        var ps1_xyz = __model__.attribs.query.getPosiCoords(ent_arr1[1]);
        var ps2_xyz = __model__.attribs.query.getPosiCoords(ent_arr2[1]);
        return Object(_libs_geom_distance__WEBPACK_IMPORTED_MODULE_2__["distance"])(ps1_xyz, ps2_xyz);
    }
    else if (depth2 === 2) {
        return ents_arr2.map(function (ent_arr2) { return _distancePtoP(__model__, ent_arr1, ent_arr2); });
    }
}
/**
 * Calculates the distance between two positions.
 * @param __model__
 * @param position1 First position.
 * @param position2 Second position, or list of positions.
 * @param method Enum; distance or min_distance.
 * @returns Distance, or list of distances (if position2 is a list).
 * @example distance1 = calc.Distance (position1, position2, p_to_p_distance)
 * @example_info position1 = [0,0,0], position2 = [[0,0,10],[0,0,20]], Expected value of distance is [10,20].
 */
function Distance(__model__, position1, position2, method) {
    // --- Error Check ---
    var fn_name = 'calc.Distance';
    var ents_arr1 = Object(_check_args__WEBPACK_IMPORTED_MODULE_6__["checkIDs"])(fn_name, 'position1', position1, [_check_args__WEBPACK_IMPORTED_MODULE_6__["IDcheckObj"].isID], [_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].POSI]);
    var ents_arr2 = Object(_check_args__WEBPACK_IMPORTED_MODULE_6__["checkIDs"])(fn_name, 'position2', position2, [_check_args__WEBPACK_IMPORTED_MODULE_6__["IDcheckObj"].isID], [_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].POSI]); // TODO
    // --- Error Check ---
    if (method === _EDistanceMethod.P_P_DISTANCE) {
        return _distancePtoP(__model__, ents_arr1, ents_arr2);
    }
    else if (method === _EDistanceMethod.MIN_DISTANCE) {
        return _distanceMin(__model__, ents_arr1, ents_arr2);
    }
}
// ================================================================================================
/**
 * Calculates the length of a line or a list of lines.
 * @param __model__
 * @param lines Edge, wire or polyline.
 * @returns Length.
 * @example length1 = calc.Length (line1)
 */
function Length(__model__, lines) {
    // --- Error Check ---
    Object(_check_args__WEBPACK_IMPORTED_MODULE_6__["checkIDs"])('calc.Length', 'lines', lines, [_check_args__WEBPACK_IMPORTED_MODULE_6__["IDcheckObj"].isID, _check_args__WEBPACK_IMPORTED_MODULE_6__["IDcheckObj"].isIDList], [_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].EDGE, _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].WIRE, _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].PLINE]);
    // --- Error Check ---
    if (!Array.isArray(lines)) {
        lines = [lines];
    }
    var edges_i = [];
    var dist = 0;
    for (var _i = 0, lines_1 = lines; _i < lines_1.length; _i++) {
        var line = lines_1[_i];
        var _a = Object(_libs_geo_info_id__WEBPACK_IMPORTED_MODULE_1__["idsBreak"])(line), ent_type = _a[0], index = _a[1];
        if (Object(_libs_geo_info_id__WEBPACK_IMPORTED_MODULE_1__["isEdge"])(ent_type)) {
            edges_i.push(index);
        }
        else if (Object(_libs_geo_info_id__WEBPACK_IMPORTED_MODULE_1__["isWire"])(ent_type)) {
            edges_i.push.apply(edges_i, __model__.geom.query.navWireToEdge(index));
        }
        else if (Object(_libs_geo_info_id__WEBPACK_IMPORTED_MODULE_1__["isPline"])(ent_type)) {
            var wire_i = __model__.geom.query.navPlineToWire(index);
            edges_i.push.apply(edges_i, __model__.geom.query.navWireToEdge(wire_i));
        }
        else {
            throw new Error('Entity is of wrong type. Must be a an edge, a wire or a polyline');
        }
    }
    for (var _b = 0, edges_i_1 = edges_i; _b < edges_i_1.length; _b++) {
        var edge_i = edges_i_1[_b];
        var posis_i = __model__.geom.query.navAnyToPosi(_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].EDGE, edge_i);
        var xyz_0 = __model__.attribs.query.getPosiCoords(posis_i[0]);
        var xyz_1 = __model__.attribs.query.getPosiCoords(posis_i[1]);
        dist += Object(_libs_geom_distance__WEBPACK_IMPORTED_MODULE_2__["distance"])(xyz_0, xyz_1);
    }
    return dist;
}
// ================================================================================================
function _area(__model__, ents_arrs) {
    if (Object(_libs_geo_info_id__WEBPACK_IMPORTED_MODULE_1__["getArrDepth"])(ents_arrs) === 1) {
        var _a = ents_arrs, ent_type = _a[0], index = _a[1];
        if (Object(_libs_geo_info_id__WEBPACK_IMPORTED_MODULE_1__["isPgon"])(ent_type) || Object(_libs_geo_info_id__WEBPACK_IMPORTED_MODULE_1__["isFace"])(ent_type)) {
            // faces, these are already triangulated
            var face_i = index;
            if (Object(_libs_geo_info_id__WEBPACK_IMPORTED_MODULE_1__["isPgon"])(ent_type)) {
                face_i = __model__.geom.query.navPgonToFace(index);
            }
            var tris_i = __model__.geom.query.navFaceToTri(face_i);
            var total_area = 0;
            for (var _i = 0, tris_i_1 = tris_i; _i < tris_i_1.length; _i++) {
                var tri_i = tris_i_1[_i];
                var corners_i = __model__.geom.query.navAnyToPosi(_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].TRI, tri_i);
                var corners_xyzs = corners_i.map(function (corner_i) { return __model__.attribs.query.getPosiCoords(corner_i); });
                var tri_area = Object(_libs_geom_triangle__WEBPACK_IMPORTED_MODULE_5__["area"])(corners_xyzs[0], corners_xyzs[1], corners_xyzs[2]);
                total_area += tri_area;
            }
            return total_area;
        }
        else if (Object(_libs_geo_info_id__WEBPACK_IMPORTED_MODULE_1__["isPline"])(ent_type) || Object(_libs_geo_info_id__WEBPACK_IMPORTED_MODULE_1__["isWire"])(ent_type)) {
            // wires, these need to be triangulated
            var wire_i = index;
            if (Object(_libs_geo_info_id__WEBPACK_IMPORTED_MODULE_1__["isPline"])(ent_type)) {
                wire_i = __model__.geom.query.navPlineToWire(index);
            }
            if (__model__.geom.query.istWireClosed(wire_i)) {
                throw new Error('To calculate area, wire must be closed');
            }
            var posis_i = __model__.geom.query.navAnyToPosi(_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].WIRE, index);
            var xyzs_1 = posis_i.map(function (posi_i) { return __model__.attribs.query.getPosiCoords(posi_i); });
            var tris = Object(_libs_triangulate_triangulate__WEBPACK_IMPORTED_MODULE_4__["triangulate"])(xyzs_1);
            var total_area = 0;
            for (var _b = 0, tris_1 = tris; _b < tris_1.length; _b++) {
                var tri = tris_1[_b];
                var corners_xyzs = tri.map(function (corner_i) { return xyzs_1[corner_i]; });
                var tri_area = Object(_libs_geom_triangle__WEBPACK_IMPORTED_MODULE_5__["area"])(corners_xyzs[0], corners_xyzs[1], corners_xyzs[2]);
                total_area += tri_area;
            }
            return total_area;
        }
        else {
            return 0;
        }
    }
    else {
        return ents_arrs.map(function (ents_arr) { return _area(__model__, ents_arr); });
    }
}
/**
 * Calculates the area of a surface or a list of surfaces.
 * @param __model__
 * @param entities A polygon, a face, a closed polyline, or a closed wire.
 * @returns Area.
 * @example area1 = calc.Area (surface1)
 */
function Area(__model__, entities) {
    // --- Error Check ---
    var fn_name = 'calc.Area';
    var ents_arr = Object(_check_args__WEBPACK_IMPORTED_MODULE_6__["checkIDs"])(fn_name, 'entities', entities, [_check_args__WEBPACK_IMPORTED_MODULE_6__["IDcheckObj"].isID, _check_args__WEBPACK_IMPORTED_MODULE_6__["IDcheckObj"].isIDList], [_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].PGON, _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].FACE, _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].PLINE, _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].WIRE]);
    // --- Error Check ---
    return _area(__model__, ents_arr);
}
// ================================================================================================
/**
 * Returns a vector along an edge.
 * @param __model__
 * @param edge An edge
 * @returns The vector [x, y, z] from the start point of an edge to the end point of an edge.
 */
function Vector(__model__, edge) {
    // --- Error Check ---
    Object(_check_args__WEBPACK_IMPORTED_MODULE_6__["checkIDs"])('calc.Vector', 'edge', edge, [_check_args__WEBPACK_IMPORTED_MODULE_6__["IDcheckObj"].isID], [_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].EDGE]);
    // --- Error Check ---
    var _a = Object(_libs_geo_info_id__WEBPACK_IMPORTED_MODULE_1__["idsBreak"])(edge), ent_type = _a[0], index = _a[1];
    var posis_i = __model__.geom.query.navAnyToPosi(ent_type, index);
    var start = __model__.attribs.query.getPosiCoords(posis_i[0]);
    var end = __model__.attribs.query.getPosiCoords(posis_i[1]);
    return Object(_libs_geom_vectors__WEBPACK_IMPORTED_MODULE_3__["vecSub"])(end, start);
}
// ================================================================================================
function _centroid(__model__, ents_arr) {
    // TODO optimise this, like bounding box code
    var posis_i = [];
    for (var _i = 0, ents_arr_1 = ents_arr; _i < ents_arr_1.length; _i++) {
        var ent_arr = ents_arr_1[_i];
        posis_i.push.apply(posis_i, __model__.geom.query.navAnyToPosi(ent_arr[0], ent_arr[1]));
    }
    var unique_posis_i = Array.from(new Set(posis_i));
    var unique_xyzs = unique_posis_i.map(function (posi_i) { return __model__.attribs.query.getPosiCoords(posi_i); });
    return Object(_libs_geom_vectors__WEBPACK_IMPORTED_MODULE_3__["vecDiv"])(Object(_libs_geom_vectors__WEBPACK_IMPORTED_MODULE_3__["vecSum"])(unique_xyzs), unique_xyzs.length);
}
/**
 * Calculates the centroid of a list of any entity.
 * @param __model__
 * @param entities List of positions, vertices, points, edges, wires, polylines, faces, polygons, or collections.
 * @returns The centroid [x, y, z] of the entities. (No position is created in the model.)
 * @example centroid1 = calc.Centroid (polygon1)
 */
function Centroid(__model__, entities) {
    if (!Array.isArray(entities)) {
        entities = [entities];
    }
    var ents_arr = Object(_libs_geo_info_id__WEBPACK_IMPORTED_MODULE_1__["idsBreak"])(entities);
    // --- Error Check ---
    Object(_check_args__WEBPACK_IMPORTED_MODULE_6__["checkIDs"])('calc.Centroid', 'geometry', entities, [_check_args__WEBPACK_IMPORTED_MODULE_6__["IDcheckObj"].isID, _check_args__WEBPACK_IMPORTED_MODULE_6__["IDcheckObj"].isIDList], [_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].POSI, _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].VERT, _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].POINT, _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].EDGE, _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].WIRE,
        _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].PLINE, _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].FACE, _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].PGON, _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].COLL]);
    // --- Error Check ---
    return _centroid(__model__, ents_arr);
}
// ================================================================================================
function _vertNormal(__model__, index) {
    var norm_vec;
    var edges_i = __model__.geom.query.navVertToEdge(index);
    if (edges_i.length === 1) {
        var posis0_i = __model__.geom.query.navAnyToPosi(_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].EDGE, edges_i[0]);
        var posis1_i = __model__.geom.query.navAnyToPosi(_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].EDGE, edges_i[1]);
        var p_mid = __model__.attribs.query.getPosiCoords(posis0_i[1]); // same as posis1_i[0]
        var p_a = __model__.attribs.query.getPosiCoords(posis0_i[0]);
        var p_b = __model__.attribs.query.getPosiCoords(posis1_i[1]);
        norm_vec = Object(_libs_geom_vectors__WEBPACK_IMPORTED_MODULE_3__["vecCross"])(Object(_libs_geom_vectors__WEBPACK_IMPORTED_MODULE_3__["vecFromTo"])(p_mid, p_a), Object(_libs_geom_vectors__WEBPACK_IMPORTED_MODULE_3__["vecFromTo"])(p_mid, p_b), true);
        if (Object(_libs_geom_vectors__WEBPACK_IMPORTED_MODULE_3__["vecLen"])(norm_vec) > 0) {
            return norm_vec;
        }
    }
    var wire_i = __model__.geom.query.navEdgeToWire(edges_i[0]);
    norm_vec = __model__.geom.query.getWireNormal(wire_i);
    return norm_vec;
}
function _normal(__model__, ents_arr, scale) {
    if (Object(_libs_geo_info_id__WEBPACK_IMPORTED_MODULE_1__["getArrDepth"])(ents_arr) === 1) {
        var ent_type = ents_arr[0];
        var index = ents_arr[1];
        if (Object(_libs_geo_info_id__WEBPACK_IMPORTED_MODULE_1__["isPgon"])(ent_type)) {
            var norm_vec = __model__.geom.query.getFaceNormal(__model__.geom.query.navPgonToFace(index));
            return Object(_libs_geom_vectors__WEBPACK_IMPORTED_MODULE_3__["vecMult"])(norm_vec, scale);
        }
        else if (Object(_libs_geo_info_id__WEBPACK_IMPORTED_MODULE_1__["isFace"])(ent_type)) {
            var norm_vec = __model__.geom.query.getFaceNormal(index);
            return Object(_libs_geom_vectors__WEBPACK_IMPORTED_MODULE_3__["vecMult"])(norm_vec, scale);
        }
        else if (Object(_libs_geo_info_id__WEBPACK_IMPORTED_MODULE_1__["isPline"])(ent_type)) {
            var norm_vec = __model__.geom.query.getWireNormal(__model__.geom.query.navPlineToWire(index));
            return Object(_libs_geom_vectors__WEBPACK_IMPORTED_MODULE_3__["vecMult"])(norm_vec, scale);
        }
        else if (Object(_libs_geo_info_id__WEBPACK_IMPORTED_MODULE_1__["isWire"])(ent_type)) {
            var norm_vec = __model__.geom.query.getWireNormal(index);
            return Object(_libs_geom_vectors__WEBPACK_IMPORTED_MODULE_3__["vecMult"])(norm_vec, scale);
        }
        else if (Object(_libs_geo_info_id__WEBPACK_IMPORTED_MODULE_1__["isEdge"])(ent_type)) {
            var verts_i = __model__.geom.query.navEdgeToVert(index);
            var norm_vecs = verts_i.map(function (vert_i) { return _vertNormal(__model__, vert_i); });
            var norm_vec = Object(_libs_geom_vectors__WEBPACK_IMPORTED_MODULE_3__["vecDiv"])(Object(_libs_geom_vectors__WEBPACK_IMPORTED_MODULE_3__["vecSum"])(norm_vecs), norm_vecs.length);
            return Object(_libs_geom_vectors__WEBPACK_IMPORTED_MODULE_3__["vecMult"])(norm_vec, scale);
        }
        else if (Object(_libs_geo_info_id__WEBPACK_IMPORTED_MODULE_1__["isVert"])(ent_type)) {
            var norm_vec = _vertNormal(__model__, index);
            return Object(_libs_geom_vectors__WEBPACK_IMPORTED_MODULE_3__["vecMult"])(norm_vec, scale);
        }
        else if (Object(_libs_geo_info_id__WEBPACK_IMPORTED_MODULE_1__["isPosi"])(ent_type)) {
            var verts_i = __model__.geom.query.navPosiToVert(index);
            if (verts_i.length > 0) {
                var norm_vecs = verts_i.map(function (vert_i) { return _vertNormal(__model__, vert_i); });
                var norm_vec = Object(_libs_geom_vectors__WEBPACK_IMPORTED_MODULE_3__["vecDiv"])(Object(_libs_geom_vectors__WEBPACK_IMPORTED_MODULE_3__["vecSum"])(norm_vecs), norm_vecs.length);
                return Object(_libs_geom_vectors__WEBPACK_IMPORTED_MODULE_3__["vecMult"])(norm_vec, scale);
            }
            return [0, 0, 0];
        }
        else if (Object(_libs_geo_info_id__WEBPACK_IMPORTED_MODULE_1__["isPoint"])(ent_type)) {
            return [0, 0, 0];
        }
        // if (isPgon(ent_type) || isFace(ent_type)) {
        //     // faces, these are already triangulated
        //     let face_i: number = index;
        //     if (isPgon(ent_type)) {
        //         face_i = __model__.geom.query.navPgonToFace(index);
        //     }
        //     const tris_i: number[] = __model__.geom.query.navFaceToTri(face_i);
        //     let normal_vec: Txyz = [0, 0, 0];
        //     for (const tri_i of tris_i) {
        //         const corners_i: number[] = __model__.geom.query.navAnyToPosi(EEntType.TRI, tri_i);
        //         const corners_xyzs: Txyz[] = corners_i.map(corner_i => __model__.attribs.query.getPosiCoords(corner_i));
        //         const tri_normal: Txyz = normal( corners_xyzs[2], corners_xyzs[1], corners_xyzs[0], true); // CCW
        //         normal_vec = vecAdd(normal_vec, tri_normal);
        //     }
        //     return vecNorm(vecDiv(normal_vec, tris_i.length)); // TODO should this be area weighted?
        // } else if (isPline(ent_type) || isWire(ent_type)) {
        //     // wires, these need to be triangulated
        //     let wire_i: number = index;
        //     if (isPline(ent_type)) {
        //         wire_i = __model__.geom.query.navPlineToWire(index);
        //     }
        //     if (!__model__.geom.query.istWireClosed(wire_i)) {
        //         throw new Error('To calculate normals, wire must be closed');
        //     }
        //     const posis_i: number[] = __model__.geom.query.navAnyToPosi(EEntType.WIRE, index);
        //     const xyzs:  Txyz[] = posis_i.map( posi_i => __model__.attribs.query.getPosiCoords(posi_i) );
        //     const tris: number[][] = triangulate(xyzs);
        //     let normal_vec: Txyz = [0, 0, 0];
        //     for (const tri of tris) {
        //         const corners_xyzs: Txyz[] = tri.map(corner_i => xyzs[corner_i]);
        //         const tri_normal: Txyz = normal( corners_xyzs[2], corners_xyzs[1], corners_xyzs[0], true ); // CCW
        //         normal_vec = vecAdd(normal_vec, tri_normal);
        //     }
        //     return vecNorm(vecDiv(normal_vec, tris.length)); // TODO should this be area weighted?
        // }
    }
    else {
        return ents_arr.map(function (ent_arr) { return _normal(__model__, ent_arr, scale); });
    }
}
// function _newell_normal(__model__: GIModel, ents_arr: TEntTypeIdx[]): Txyz {
//     const posis_i: number[] = [];
//     for (const ent_arr of ents_arr) {
//         posis_i.push(...__model__.geom.query.navAnyToPosi(ent_arr[0], ent_arr[1]));
//     }
//     const unique_posis_i = Array.from(new Set(posis_i));
//     const unique_xyzs: Txyz[] = unique_posis_i.map( posi_i => __model__.attribs.query.getPosiCoords(posi_i));
//     return newellNorm(unique_xyzs);
// }
/**
 * Calculates the normal vector of an entity or list of entities.
 * ~
 * For polygons, faces, and face wires the normal is calculated by taking the average of all the normals of the face triangles.
 * For polylines and polyline wires, the normal is calculated by triangulating the positions, and then
 * taking the average of all the normals of the triangles.
 * For edges, the normal is calculated by takingthe avery of teh normals of the two vertices.
 * For vertices, the normal is calculated by creating a triangle out of the two adjacent edges,
 * and then calculating the normal of the triangle.
 * (If there is only one edge, or if the two adjacent edges are colinear, the the normal of the wire is returned.)
 * For positions, the normal is calculated by taking the average of the normals of all the vertices linked to the position.
 * For points and positions with no vertices, the normal is [0, 0, 0].
 *
 * @param __model__
 * @param entities An entity, or list of entities.
 * @param scale The scale factor for the normal vector. (This is equivalent to the length of the normal vector.)
 * @returns The normal vector [x, y, z].
 * @example normal1 = calc.Normal (polygon1, 1)
 * @example_info If the input is non-planar, the output vector will be an average of all normals vector of the polygon triangles.
 */
function Normal(__model__, entities, scale) {
    var ents_arr = Object(_libs_geo_info_id__WEBPACK_IMPORTED_MODULE_1__["idsBreak"])(entities);
    // --- Error Check ---
    var fn_name = 'calc.Normal';
    Object(_check_args__WEBPACK_IMPORTED_MODULE_6__["checkIDs"])(fn_name, 'entities', entities, [_check_args__WEBPACK_IMPORTED_MODULE_6__["IDcheckObj"].isID, _check_args__WEBPACK_IMPORTED_MODULE_6__["IDcheckObj"].isIDList], null);
    // --- Error Check ---
    return _normal(__model__, ents_arr, scale);
}
// ================================================================================================
/**
 * Calculates the location on a linear entity, given a t parameter.
 * @param __model__
 * @param line Edge, wire, or polyline.
 * @param t_param A value between 0 to 1.
 * @returns The coordinates of the location, [x, y, z]. (No position is created in the model.)
 * @example coord1 = calc.ParamTToXyz (polyline1, 0.23)
 */
function ParamTToXyz(__model__, line, t_param) {
    // --- Error Check ---
    var fn_name = 'calc.ParamTToXyz';
    Object(_check_args__WEBPACK_IMPORTED_MODULE_6__["checkIDs"])(fn_name, 'line', line, [_check_args__WEBPACK_IMPORTED_MODULE_6__["IDcheckObj"].isID], [_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].EDGE, _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].WIRE, _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].PLINE]);
    Object(_check_args__WEBPACK_IMPORTED_MODULE_6__["checkCommTypes"])(fn_name, 't_param', t_param, [_check_args__WEBPACK_IMPORTED_MODULE_6__["TypeCheckObj"].isNumber]);
    if (t_param < 0 || t_param > 1) {
        throw new Error(fn_name + ': ' + 't_param is not between 0 and 1');
    }
    // --- Error Check ---
    var edges_i = [];
    var _a = Object(_libs_geo_info_id__WEBPACK_IMPORTED_MODULE_1__["idsBreak"])(line), ent_type = _a[0], index = _a[1];
    if (Object(_libs_geo_info_id__WEBPACK_IMPORTED_MODULE_1__["isEdge"])(ent_type)) {
        edges_i.push(index);
    }
    else if (Object(_libs_geo_info_id__WEBPACK_IMPORTED_MODULE_1__["isWire"])(ent_type)) {
        edges_i.push.apply(edges_i, __model__.geom.query.navWireToEdge(index));
    }
    else if (Object(_libs_geo_info_id__WEBPACK_IMPORTED_MODULE_1__["isPline"])(ent_type)) {
        var wire_i = __model__.geom.query.navPlineToWire(index);
        edges_i.push.apply(edges_i, __model__.geom.query.navWireToEdge(wire_i));
    }
    // } else {
    //     throw new Error('Entity is of wrong type. Must be a an edge, a wire or a polyline');
    // }
    var num_edges = edges_i.length;
    // get all the edge lengths
    var total_dist = 0;
    var dists = [];
    var xyz_pairs = [];
    for (var _i = 0, edges_i_2 = edges_i; _i < edges_i_2.length; _i++) {
        var edge_i = edges_i_2[_i];
        var posis_i = __model__.geom.query.navAnyToPosi(_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].EDGE, edge_i);
        var xyz_0 = __model__.attribs.query.getPosiCoords(posis_i[0]);
        var xyz_1 = __model__.attribs.query.getPosiCoords(posis_i[1]);
        var dist = Object(_libs_geom_distance__WEBPACK_IMPORTED_MODULE_2__["distance"])(xyz_0, xyz_1);
        total_dist += dist;
        dists.push(total_dist);
        xyz_pairs.push([xyz_0, xyz_1]);
    }
    // map the t_param
    var t_param_mapped = t_param * total_dist;
    // loop through and find the point
    for (var i = 0; i < num_edges; i++) {
        if (t_param_mapped < dists[i]) {
            var xyz_pair = xyz_pairs[i];
            var dist_a = 0;
            if (i > 0) {
                dist_a = dists[i - 1];
            }
            var dist_b = dists[i];
            var edge_length = dist_b - dist_a;
            var to_t = t_param_mapped - dist_a;
            var vec_len = to_t / edge_length;
            return Object(_libs_geom_vectors__WEBPACK_IMPORTED_MODULE_3__["vecAdd"])(xyz_pair[0], Object(_libs_geom_vectors__WEBPACK_IMPORTED_MODULE_3__["vecMult"])(Object(_libs_geom_vectors__WEBPACK_IMPORTED_MODULE_3__["vecSub"])(xyz_pair[1], xyz_pair[0]), vec_len));
        }
    }
    // t param must be 1 (or greater)
    return xyz_pairs[num_edges - 1][1];
}
// ================================================================================================
/**
 * Calculates the 't' parameter along a linear entity, given a location.
 * The 't' parameter varies between 0 and 1, where 0 indicates the start and 1 indicates the end.
 *
 * @param __model__
 * @param lines List of edges, wires, or polylines.
 * @param locations List of positions, vertices, points, or coordinates.
 * @return The 't' parameter vale, between 0 and 1.
 * @example coord1 = calc.ParamXyzToT (polyline1, [1,2,3])
 */
function _ParamXyzToT(__model__, lines, locations) {
    // --- Error Check ---
    // const fn_name = 'calc.ParamXyzToT';
    // checkIDs(fn_name, 'lines', lines, [IDcheckObj.isID, IDcheckObj.isIDList], [EEntType.EDGE, EEntType.WIRE, EEntType.PLINE]);
    // checkIDnTypes(fn_name, 'locations', locations,
    //               [IDcheckObj.isID, IDcheckObj.isIDList, TypeCheckObj.isNumberList], [EEntType.POSI, EEntType.VERT, EEntType.POINT]);
    // --- Error Check ---
    throw new Error('Not implemented.');
    return null;
}
// ================================================================================================


/***/ }),

/***/ "./src/assets/core/modules/index.ts":
/*!******************************************!*\
  !*** ./src/assets/core/modules/index.ts ***!
  \******************************************/
/*! exports provided: _model, query, make, modify, calc, pattern, virtual, util, render, list, _mathjs, _rand, _vec, _list, _set, _conversion, _constants, _Output, _parameterTypes, _varString */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _model__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./_model */ "./src/assets/core/modules/_model.ts");
/* harmony reexport (module object) */ __webpack_require__.d(__webpack_exports__, "_model", function() { return _model__WEBPACK_IMPORTED_MODULE_0__; });
/* harmony import */ var _query__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./query */ "./src/assets/core/modules/query.ts");
/* harmony reexport (module object) */ __webpack_require__.d(__webpack_exports__, "query", function() { return _query__WEBPACK_IMPORTED_MODULE_1__; });
/* harmony import */ var _make__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./make */ "./src/assets/core/modules/make.ts");
/* harmony reexport (module object) */ __webpack_require__.d(__webpack_exports__, "make", function() { return _make__WEBPACK_IMPORTED_MODULE_2__; });
/* harmony import */ var _modify__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./modify */ "./src/assets/core/modules/modify.ts");
/* harmony reexport (module object) */ __webpack_require__.d(__webpack_exports__, "modify", function() { return _modify__WEBPACK_IMPORTED_MODULE_3__; });
/* harmony import */ var _calc__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./calc */ "./src/assets/core/modules/calc.ts");
/* harmony reexport (module object) */ __webpack_require__.d(__webpack_exports__, "calc", function() { return _calc__WEBPACK_IMPORTED_MODULE_4__; });
/* harmony import */ var _pattern__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./pattern */ "./src/assets/core/modules/pattern.ts");
/* harmony reexport (module object) */ __webpack_require__.d(__webpack_exports__, "pattern", function() { return _pattern__WEBPACK_IMPORTED_MODULE_5__; });
/* harmony import */ var _virtual__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./virtual */ "./src/assets/core/modules/virtual.ts");
/* harmony reexport (module object) */ __webpack_require__.d(__webpack_exports__, "virtual", function() { return _virtual__WEBPACK_IMPORTED_MODULE_6__; });
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./util */ "./src/assets/core/modules/util.ts");
/* harmony reexport (module object) */ __webpack_require__.d(__webpack_exports__, "util", function() { return _util__WEBPACK_IMPORTED_MODULE_7__; });
/* harmony import */ var _render__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./render */ "./src/assets/core/modules/render.ts");
/* harmony reexport (module object) */ __webpack_require__.d(__webpack_exports__, "render", function() { return _render__WEBPACK_IMPORTED_MODULE_8__; });
/* harmony import */ var _list__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./list */ "./src/assets/core/modules/list.ts");
/* harmony reexport (module object) */ __webpack_require__.d(__webpack_exports__, "list", function() { return _list__WEBPACK_IMPORTED_MODULE_9__; });
/* harmony import */ var _mathjs__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./_mathjs */ "./src/assets/core/modules/_mathjs.ts");
/* harmony reexport (module object) */ __webpack_require__.d(__webpack_exports__, "_mathjs", function() { return _mathjs__WEBPACK_IMPORTED_MODULE_10__; });
/* harmony import */ var _rand__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./_rand */ "./src/assets/core/modules/_rand.ts");
/* harmony reexport (module object) */ __webpack_require__.d(__webpack_exports__, "_rand", function() { return _rand__WEBPACK_IMPORTED_MODULE_11__; });
/* harmony import */ var _vec__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./_vec */ "./src/assets/core/modules/_vec.ts");
/* harmony reexport (module object) */ __webpack_require__.d(__webpack_exports__, "_vec", function() { return _vec__WEBPACK_IMPORTED_MODULE_12__; });
/* harmony import */ var _list__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./_list */ "./src/assets/core/modules/_list.ts");
/* harmony reexport (module object) */ __webpack_require__.d(__webpack_exports__, "_list", function() { return _list__WEBPACK_IMPORTED_MODULE_13__; });
/* harmony import */ var _set__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./_set */ "./src/assets/core/modules/_set.ts");
/* harmony reexport (module object) */ __webpack_require__.d(__webpack_exports__, "_set", function() { return _set__WEBPACK_IMPORTED_MODULE_14__; });
/* harmony import */ var _conversion__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./_conversion */ "./src/assets/core/modules/_conversion.ts");
/* harmony reexport (module object) */ __webpack_require__.d(__webpack_exports__, "_conversion", function() { return _conversion__WEBPACK_IMPORTED_MODULE_15__; });
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./_constants */ "./src/assets/core/modules/_constants.ts");
/* harmony reexport (module object) */ __webpack_require__.d(__webpack_exports__, "_constants", function() { return _constants__WEBPACK_IMPORTED_MODULE_16__; });
/* harmony import */ var _output__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./_output */ "./src/assets/core/modules/_output.ts");
/* harmony reexport (module object) */ __webpack_require__.d(__webpack_exports__, "_Output", function() { return _output__WEBPACK_IMPORTED_MODULE_17__; });
/* harmony import */ var _parameterTypes__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./_parameterTypes */ "./src/assets/core/modules/_parameterTypes.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "_parameterTypes", function() { return _parameterTypes__WEBPACK_IMPORTED_MODULE_18__["_parameterTypes"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "_varString", function() { return _parameterTypes__WEBPACK_IMPORTED_MODULE_18__["_varString"]; });

// functions used by mobius
// import * as Model from './Model';
// export {Model};


// import * as _model from './Model';
// export {_model};
// functions for end users






// import * as isect from './isect';
// export {isect};












// helpers














// input, output ports





/***/ }),

/***/ "./src/assets/core/modules/list.ts":
/*!*****************************************!*\
  !*** ./src/assets/core/modules/list.ts ***!
  \*****************************************/
/*! exports provided: _EAddMethod, Add, _ERemoveMethod, Remove, _EReplaceMethod, Replace, _ESortMethod, Sort, Splice, _EAppendMethod, _Append, _RemoveIndex, _ERemoveValueMethod, _RemoveValue, _EReplaceValueMethod, _ReplaceValue, _EIndexOfMethod, _IndexOf, _Includes, _Copy, _Concat, _Flatten, _Slice, _Reverse */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_EAddMethod", function() { return _EAddMethod; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Add", function() { return Add; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_ERemoveMethod", function() { return _ERemoveMethod; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Remove", function() { return Remove; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_EReplaceMethod", function() { return _EReplaceMethod; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Replace", function() { return Replace; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_ESortMethod", function() { return _ESortMethod; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Sort", function() { return Sort; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Splice", function() { return Splice; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_EAppendMethod", function() { return _EAppendMethod; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_Append", function() { return _Append; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_RemoveIndex", function() { return _RemoveIndex; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_ERemoveValueMethod", function() { return _ERemoveValueMethod; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_RemoveValue", function() { return _RemoveValue; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_EReplaceValueMethod", function() { return _EReplaceValueMethod; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_ReplaceValue", function() { return _ReplaceValue; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_EIndexOfMethod", function() { return _EIndexOfMethod; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_IndexOf", function() { return _IndexOf; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_Includes", function() { return _Includes; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_Copy", function() { return _Copy; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_Concat", function() { return _Concat; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_Flatten", function() { return _Flatten; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_Slice", function() { return _Slice; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_Reverse", function() { return _Reverse; });
/* harmony import */ var _check_args__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./_check_args */ "./src/assets/core/modules/_check_args.ts");
/* harmony import */ var _libs_geo_info_id__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @libs/geo-info/id */ "./src/assets/libs/geo-info/id.ts");
/**
 * The `list` module has functions for working with lists of items.
 * These functions have no direct link with the model, the are generic functions for manipulating lists.
 * The functions are often used when manipulating lists of IDs of entities in the model.
 * These functions neither make nor modify anything in the model.
 * In addition to these functions, there are also various inline functions available for working with lists.
 */
/**
 *
 */


// ================================================================================================
var _EAddMethod;
(function (_EAddMethod) {
    _EAddMethod["TO_START"] = "to_start";
    _EAddMethod["TO_END"] = "to_end";
    _EAddMethod["SORTED_ALPHA"] = "alpha_descending";
    _EAddMethod["SORTED_REV_ALPHA"] = "alpha_ascending";
    _EAddMethod["SORTED_NUM"] = "numeric_descending";
    _EAddMethod["SORTED_REV_NUM"] = "numeric_ascending";
    _EAddMethod["SORTED_ID"] = "ID_descending";
    _EAddMethod["SORTED_REV_ID"] = "ID_ascending";
})(_EAddMethod || (_EAddMethod = {}));
/**
 * Adds an item to a list.
 * If item is a list, the entire list will be added as a single item.
 *
 * @param list List to add the item to.
 * @param item Item to add.
 * @param method Enum, select the method.
 * @returns void
 * @example append = list.Add(list, 4, 'at_end')
 * @example_info where list = [1,2,3]
 * Expected value of list is [1,2,3,4].
 */
function Add(list, item, method) {
    // --- Error Check ---
    var fn_name = 'list.Add';
    Object(_check_args__WEBPACK_IMPORTED_MODULE_0__["checkCommTypes"])(fn_name, 'list', list, [_check_args__WEBPACK_IMPORTED_MODULE_0__["TypeCheckObj"].isList]);
    Object(_check_args__WEBPACK_IMPORTED_MODULE_0__["checkCommTypes"])(fn_name, 'value', item, [_check_args__WEBPACK_IMPORTED_MODULE_0__["TypeCheckObj"].isAny]);
    // --- Error Check ---
    var str_value;
    switch (method) {
        case _EAddMethod.TO_START:
            list.unshift(item);
            break;
        case _EAddMethod.TO_END:
            list.push(item);
            break;
        case _EAddMethod.SORTED_ALPHA:
            str_value = item + '';
            for (var i = 0; i < list.length + 1; i++) {
                if (str_value < list[i] + '' || i === list.length) {
                    list.splice(i, 0, item);
                    break;
                }
            }
            break;
        case _EAddMethod.SORTED_REV_ALPHA:
            str_value = item + '';
            for (var i = 0; i < list.length + 1; i++) {
                if (str_value > list[i] + '' || i === list.length) {
                    list.splice(i, 0, item);
                    break;
                }
            }
            break;
        case _EAddMethod.SORTED_NUM:
            for (var i = 0; i < list.length + 1; i++) {
                if (item - list[i] > 0 || i === list.length) {
                    list.splice(i, 0, item);
                    break;
                }
            }
            break;
        case _EAddMethod.SORTED_REV_NUM:
            for (var i = 0; i < list.length + 1; i++) {
                if (item - list[i] < 0 || i === list.length) {
                    list.splice(i, 0, item);
                    break;
                }
            }
            break;
        case _EAddMethod.SORTED_ID:
            for (var i = 0; i < list.length + 1; i++) {
                if (_compareID(item, list[i]) > 0 || i === list.length) {
                    list.splice(i, 0, item);
                    break;
                }
            }
            break;
        case _EAddMethod.SORTED_REV_ID:
            for (var i = 0; i < list.length + 1; i++) {
                if (_compareID(item, list[i]) < 0 || i === list.length) {
                    list.splice(i, 0, item);
                    break;
                }
            }
            break;
        default:
            break;
    }
}
// ================================================================================================
var _ERemoveMethod;
(function (_ERemoveMethod) {
    _ERemoveMethod["REMOVE_INDEX"] = "remove_index";
    _ERemoveMethod["REMOVE_FIRST_VALUE"] = "remove_first_value";
    _ERemoveMethod["REMOVE_LAST_VALUE"] = "remove_last_value";
    _ERemoveMethod["REMOVE_ALL_VALUES"] = "remove_all_values";
})(_ERemoveMethod || (_ERemoveMethod = {}));
/**
 * Removes items in a list.
 *
 * @param list The list in which to remove items
 * @param item The item to remove, either the index of the item or the value. Negative indexes are allowed.
 * @param method Enum, select the method for removing items from the list.
 * @returns void
 */
function Remove(list, item, method) {
    // --- Error Check ---
    var fn_name = 'list.Remove';
    Object(_check_args__WEBPACK_IMPORTED_MODULE_0__["checkCommTypes"])(fn_name, 'list', list, [_check_args__WEBPACK_IMPORTED_MODULE_0__["TypeCheckObj"].isList]);
    Object(_check_args__WEBPACK_IMPORTED_MODULE_0__["checkCommTypes"])(fn_name, 'item', item, [_check_args__WEBPACK_IMPORTED_MODULE_0__["TypeCheckObj"].isAny]);
    // --- Error Check ---
    var index;
    switch (method) {
        case _ERemoveMethod.REMOVE_INDEX:
            index = item;
            if (!isNaN(index)) {
                if (index < 0) {
                    index = list.length + index;
                }
                list.splice(index, 1);
            }
            break;
        case _ERemoveMethod.REMOVE_FIRST_VALUE:
            index = list.indexOf(item);
            if (index !== -1) {
                list.splice(index, 1);
            }
            break;
        case _ERemoveMethod.REMOVE_LAST_VALUE:
            index = list.lastIndexOf(item);
            if (index !== -1) {
                list.splice(index, 1);
            }
            break;
        case _ERemoveMethod.REMOVE_ALL_VALUES:
            for (index = 0; index < list.length; index++) {
                if (list[index] === item) {
                    list.splice(index, 1);
                    index -= 1;
                }
            }
            break;
        default:
            throw new Error('list.Remove: Remove method not recognised.');
    }
}
// ================================================================================================
var _EReplaceMethod;
(function (_EReplaceMethod) {
    _EReplaceMethod["REPLACE_INDEX"] = "index";
    _EReplaceMethod["REPLACE_FIRST_VALUE"] = "first_value";
    _EReplaceMethod["REPLACE_LAST_VALUE"] = "last_value";
    _EReplaceMethod["REPLACE_ALL_VALUES"] = "all_values";
})(_EReplaceMethod || (_EReplaceMethod = {}));
/**
 * Replaces items in a list.
 *
 * @param list The list in which to replace items
 * @param item The item to replace, either the index of the item or the value. Negative indexes are allowed.
 * @param new_value The new value.
 * @param method Enum, select the method for replacing items in the list.
 * @returns void
 */
function Replace(list, item, new_value, method) {
    // --- Error Check ---
    var fn_name = 'list.Replace';
    Object(_check_args__WEBPACK_IMPORTED_MODULE_0__["checkCommTypes"])(fn_name, 'list', list, [_check_args__WEBPACK_IMPORTED_MODULE_0__["TypeCheckObj"].isList]);
    Object(_check_args__WEBPACK_IMPORTED_MODULE_0__["checkCommTypes"])(fn_name, 'item', item, [_check_args__WEBPACK_IMPORTED_MODULE_0__["TypeCheckObj"].isAny]);
    Object(_check_args__WEBPACK_IMPORTED_MODULE_0__["checkCommTypes"])(fn_name, 'new_value', new_value, [_check_args__WEBPACK_IMPORTED_MODULE_0__["TypeCheckObj"].isAny]);
    // --- Error Check ---
    var index;
    switch (method) {
        case _EReplaceMethod.REPLACE_INDEX:
            index = item;
            if (!isNaN(index)) {
                if (index < 0) {
                    index = list.length + index;
                }
                list[index] = new_value;
            }
            break;
        case _EReplaceMethod.REPLACE_FIRST_VALUE:
            index = list.indexOf(item);
            if (index !== -1) {
                list[index] = new_value;
            }
            break;
        case _EReplaceMethod.REPLACE_LAST_VALUE:
            index = list.lastIndexOf(item);
            if (index !== -1) {
                list[index] = new_value;
            }
            break;
        case _EReplaceMethod.REPLACE_ALL_VALUES:
            for (index = 0; index < list.length; index++) {
                if (list[index] === item) {
                    list[index] = new_value;
                }
            }
            break;
        default:
            throw new Error('list.Replace: Replace method not recognised.');
    }
}
// ================================================================================================
var _ESortMethod;
(function (_ESortMethod) {
    _ESortMethod["REV"] = "reverse";
    _ESortMethod["ALPHA"] = "alpha_descending";
    _ESortMethod["REV_ALPHA"] = "alpha_ascending";
    _ESortMethod["NUM"] = "numeric_descending";
    _ESortMethod["REV_NUM"] = "numeric_ascending";
    _ESortMethod["ID"] = "ID_descending";
    _ESortMethod["REV_ID"] = "ID_ascending";
    _ESortMethod["SHIFT"] = "shift_1";
    _ESortMethod["REV_SHIFT"] = "reverse_shift_1";
    _ESortMethod["RANDOM"] = "random";
})(_ESortMethod || (_ESortMethod = {}));
function _compareID(id1, id2) {
    var _a = Object(_libs_geo_info_id__WEBPACK_IMPORTED_MODULE_1__["idsBreak"])(id1), ent_type1 = _a[0], index1 = _a[1];
    var _b = Object(_libs_geo_info_id__WEBPACK_IMPORTED_MODULE_1__["idsBreak"])(id2), ent_type2 = _b[0], index2 = _b[1];
    if (ent_type1 !== ent_type2) {
        return ent_type1 - ent_type2;
    }
    if (index1 !== index2) {
        return index1 - index2;
    }
    return 0;
}
function _sort(list, method) {
    switch (method) {
        case _ESortMethod.REV:
            list.reverse();
            break;
        case _ESortMethod.ALPHA:
            list.sort();
            break;
        case _ESortMethod.REV_ALPHA:
            list.sort().reverse();
            break;
        case _ESortMethod.NUM:
            list.sort(function (a, b) { return a - b; });
            break;
        case _ESortMethod.REV_NUM:
            list.sort(function (a, b) { return a - b; }).reverse();
            break;
        case _ESortMethod.ID:
            list.sort(_compareID);
            break;
        case _ESortMethod.REV_ID:
            list.sort(_compareID).reverse();
            break;
        case _ESortMethod.SHIFT:
            var first = list.shift();
            list.push(first);
            break;
        case _ESortMethod.REV_SHIFT:
            var last = list.pop();
            list.unshift(last);
            break;
        case _ESortMethod.RANDOM:
            list.sort(function () { return .5 - Math.random(); });
            break;
        default:
            throw new Error('list.Sort: Sort method not recognised.');
    }
}
/**
 * Sorts an list, based on the values of the items in the list.
 * ~
 * For alphabetical sort, values are sorted character by character,
 * numbers before upper case alphabets, upper case alphabets before lower case alphabets.
 *
 * @param list List to sort.
 * @param method Enum; specifies the sort method to use.
 * @returns void
 * @example list.Sort(list, 'alpha')
 * @example_info where list = ["1","2","10","Orange","apple"]
 * Expected value of list is ["1","10","2","Orange","apple"].
 * @example list.Sort(list, 'numeric')
 * @example_info where list = [56,6,48]
 * Expected value of list is [6,48,56].
 */
function Sort(list, method) {
    // --- Error Check ---
    Object(_check_args__WEBPACK_IMPORTED_MODULE_0__["checkCommTypes"])('list.Sort', 'list', list, [_check_args__WEBPACK_IMPORTED_MODULE_0__["TypeCheckObj"].isList]);
    // --- Error Check ---
    _sort(list, method);
}
// ================================================================================================
/**
 * Removes and inserts items in a list.
 * ~
 * If no items_to_add are specified, then items are only removed.
 * If num_to_remove is 0, then values are only inserted.
 *
 * @param list List to splice.
 * @param index Zero-based index after which to starting removing or inserting items.
 * @param num_to_remove Number of items to remove.
 * @param items_to_insert List of items to add, or null.
 * @returns void
 * @example result = list.Splice(list1, 1, 3, [2.2, 3.3])
 * @example_info where list1 = [10, 20, 30, 40, 50]
 * Expected value of result is [10, 2.2, 3.3, 50]. New items were added where the items were removed.
 */
function Splice(list, index, num_to_remove, items_to_insert) {
    // --- Error Check ---
    var fn_name = 'list.Splice';
    Object(_check_args__WEBPACK_IMPORTED_MODULE_0__["checkCommTypes"])(fn_name, 'list', list, [_check_args__WEBPACK_IMPORTED_MODULE_0__["TypeCheckObj"].isList]);
    Object(_check_args__WEBPACK_IMPORTED_MODULE_0__["checkCommTypes"])(fn_name, 'index', index, [_check_args__WEBPACK_IMPORTED_MODULE_0__["TypeCheckObj"].isInt]);
    Object(_check_args__WEBPACK_IMPORTED_MODULE_0__["checkCommTypes"])(fn_name, 'num_to_remove', num_to_remove, [_check_args__WEBPACK_IMPORTED_MODULE_0__["TypeCheckObj"].isInt]);
    Object(_check_args__WEBPACK_IMPORTED_MODULE_0__["checkCommTypes"])(fn_name, 'values_to_add', items_to_insert, [_check_args__WEBPACK_IMPORTED_MODULE_0__["TypeCheckObj"].isList]);
    // --- Error Check ---
    // avoid the spread operator
    list.splice(index, num_to_remove);
    if (items_to_insert !== null && items_to_insert.length) {
        for (var i = 0; i < items_to_insert.length; i++) {
            list.splice(index + i, 0, items_to_insert[i]);
        }
    }
}
// ================================================================================================
// ================================================================================================
// ================================================================================================
// DEPRECATED
// ================================================================================================
// ================================================================================================
// ================================================================================================
/**
 * ================================================================================================
 * list functions that obtain and return information from an input list. Does not modify input list.
 */
var _EAppendMethod;
(function (_EAppendMethod) {
    _EAppendMethod["TO_START"] = "to_start";
    _EAppendMethod["TO_END"] = "to_end";
})(_EAppendMethod || (_EAppendMethod = {}));
/**
 * Adds an item to a list.
 * If item is a list, the entire list will be appended as a single item.
 *
 * @param list List to append the item to.
 * @param value Item to append.
 * @param method Enum, select the method.
 * @returns void
 * @example append = list.Append(list, 4, 'at_end')
 * @example_info where list = [1,2,3]
 * Expected value of list is [1,2,3,4].
 */
function _Append(list, value, method) {
    // --- Error Check ---
    var fn_name = 'list.Append';
    Object(_check_args__WEBPACK_IMPORTED_MODULE_0__["checkCommTypes"])(fn_name, 'list', list, [_check_args__WEBPACK_IMPORTED_MODULE_0__["TypeCheckObj"].isList]);
    Object(_check_args__WEBPACK_IMPORTED_MODULE_0__["checkCommTypes"])(fn_name, 'value', value, [_check_args__WEBPACK_IMPORTED_MODULE_0__["TypeCheckObj"].isAny]);
    // --- Error Check ---
    switch (method) {
        case _EAppendMethod.TO_START:
            list.unshift(value);
            break;
        case _EAppendMethod.TO_END:
            list.push(value);
            break;
        default:
            break;
    }
}
// ================================================================================================
/**
 * Removes the value at the specified index from a list.
 * ~
 * WARNING: This function has been deprecated. Please use the list.Modify() function.
 *
 * @param list List to remove value from.
 * @param index Zero-based index number of value to remove.
 * @example remove = list.RemoveIndex(list,1)
 * @example_info where list = [1,2,3]
 * Expected value of remove is [1,3].
 */
function _RemoveIndex(list, index) {
    // --- Error Check ---
    var fn_name = 'list.RemoveIndex';
    Object(_check_args__WEBPACK_IMPORTED_MODULE_0__["checkCommTypes"])(fn_name, 'list', list, [_check_args__WEBPACK_IMPORTED_MODULE_0__["TypeCheckObj"].isList]);
    Object(_check_args__WEBPACK_IMPORTED_MODULE_0__["checkCommTypes"])(fn_name, 'index', index, [_check_args__WEBPACK_IMPORTED_MODULE_0__["TypeCheckObj"].isInt]);
    // --- Error Check ---
    list.splice(index, 1);
}
// ================================================================================================
var _ERemoveValueMethod;
(function (_ERemoveValueMethod) {
    _ERemoveValueMethod["REMOVE_ALL"] = "remove_all";
    _ERemoveValueMethod["REMOVE_FIRST"] = "remove_first";
})(_ERemoveValueMethod || (_ERemoveValueMethod = {}));
/**
 * Removes values that matches specified value from a list.
 * Items must match both the value and type of specified value.
 * ~
 * Returns original list if no values in list match specified value.
 * ~
 * WARNING: This function has been deprecated. Please use the list.Modify() function.
 *
 * @param list List to remove value from.
 * @param value Value to search for.
 * @param method Enum; specifies whether to remove all occurances or only the first.
 * @example remove = list.RemoveValue(list,2,'remove_all')
 * @example_info where list = [1,2,2,3]
 * Expected value of remove is [1,3].
 */
function _RemoveValue(list, value, method) {
    // --- Error Check ---
    var fn_name = 'list.RemoveValue';
    Object(_check_args__WEBPACK_IMPORTED_MODULE_0__["checkCommTypes"])(fn_name, 'list', list, [_check_args__WEBPACK_IMPORTED_MODULE_0__["TypeCheckObj"].isList]);
    Object(_check_args__WEBPACK_IMPORTED_MODULE_0__["checkCommTypes"])(fn_name, 'value', value, [_check_args__WEBPACK_IMPORTED_MODULE_0__["TypeCheckObj"].isAny]);
    // --- Error Check ---
    for (var i = list.length - 1; i >= 0; i--) {
        if (list[i] === value) {
            list.splice(i, 1);
            if (method === _ERemoveValueMethod.REMOVE_FIRST) {
                break;
            }
        }
    }
}
// ================================================================================================
var _EReplaceValueMethod;
(function (_EReplaceValueMethod) {
    _EReplaceValueMethod["REPLACE_ALL"] = "replace_all";
    _EReplaceValueMethod["REPLACE_FIRST"] = "replace_first";
})(_EReplaceValueMethod || (_EReplaceValueMethod = {}));
/**
 * Replaces values that matches specified value from an list with a new value
 * Items must match both the value and type of specified value
 * ~
 * Returns original list if no value in list matches specified value.
 * ~
 * WARNING: This function has been deprecated. Please use the list.Modify() function.
 *
 * @param list List to remove value from.
 * @param value1 Value to search for.
 * @param value2 Value to replace existing value with.
 * @param method Enum; specifies whether to replace all occurances or only the first.
 * @example replace = list.ReplaceValue(list,2,9,'replace_all')
 * @example_info where list = [1,2,2,3]
 * Expected value of replace is [1,9,9,3].
 */
function _ReplaceValue(list, value1, value2, method) {
    // --- Error Check ---
    var fn_name = 'list.ReplaceValue';
    Object(_check_args__WEBPACK_IMPORTED_MODULE_0__["checkCommTypes"])(fn_name, 'list', list, [_check_args__WEBPACK_IMPORTED_MODULE_0__["TypeCheckObj"].isList]);
    Object(_check_args__WEBPACK_IMPORTED_MODULE_0__["checkCommTypes"])(fn_name, 'value1', value1, [_check_args__WEBPACK_IMPORTED_MODULE_0__["TypeCheckObj"].isAny]);
    Object(_check_args__WEBPACK_IMPORTED_MODULE_0__["checkCommTypes"])(fn_name, 'value2', value2, [_check_args__WEBPACK_IMPORTED_MODULE_0__["TypeCheckObj"].isAny]);
    // --- Error Check ---
    for (var i = 0; i < list.length; i++) {
        if (list[i] === value1) {
            list[i] = value2;
            if (method === _EReplaceValueMethod.REPLACE_FIRST) {
                break;
            }
        }
    }
}
var _EIndexOfMethod;
(function (_EIndexOfMethod) {
    _EIndexOfMethod["SEARCH_ALL"] = "search_all";
    _EIndexOfMethod["SEARCH_FIRST"] = "search_first";
})(_EIndexOfMethod || (_EIndexOfMethod = {}));
/**
 * Searches for a value in a list and returns the index position if found.
 * Items must match both the value and type of specified value.
 * ~
 * Returns -1 if no values in list match specified value.
 * ~
 * WARNING: This function has been deprecated. Please use the inline listFind() function.
 *
 * @param list List.
 * @param value Value to search for.
 * @param method Enum, specifies whether to search all occurances or only the first.
 * @returns Index position or list of index positions containing specified value.
 * @example positions = list.IndexOf(list,2,true)
 * @example_info where list = [6,2,2,7]
 * Expected value of positions is [1,2].
 */
function _IndexOf(list, value, method) {
    // --- Error Check ---
    var fn_name = 'list.IndexOf';
    Object(_check_args__WEBPACK_IMPORTED_MODULE_0__["checkCommTypes"])(fn_name, 'list', list, [_check_args__WEBPACK_IMPORTED_MODULE_0__["TypeCheckObj"].isList]);
    Object(_check_args__WEBPACK_IMPORTED_MODULE_0__["checkCommTypes"])(fn_name, 'value', value, [_check_args__WEBPACK_IMPORTED_MODULE_0__["TypeCheckObj"].isAny]);
    // --- Error Check ---
    console.log('WARNING: This function has been deprecated. Please use the inline listFind() function.');
    var positions = [];
    for (var i = 0; i < list.length; i++) {
        if (list[i] === value) {
            positions.push(i);
            if (method === _EIndexOfMethod.SEARCH_FIRST) {
                return i;
            }
        }
    }
    if (positions.length > 0) {
        return positions;
    }
    else {
        return -1;
    }
}
// ================================================================================================
/**
 * Searches for a value in an list and returns true if found.
 * Items must match both the value and type of specified value.
 * ~
 * Returns false if no values in list match specified value.
 * ~
 * WARNING: This function has been deprecated. Please use the inline listHas() function.
 *
 * @param list List.
 * @param value Value to search for.
 * @returns Returns true if value can be found in list, false if value cannot be found.
 * @example exists = list.Includes(list,2)
 * @example_info where list = [6,2,2,7]
 * Expected value of exists is true.
 */
function _Includes(list, value) {
    // --- Error Check ---
    var fn_name = 'list.Includes';
    Object(_check_args__WEBPACK_IMPORTED_MODULE_0__["checkCommTypes"])(fn_name, 'list', list, [_check_args__WEBPACK_IMPORTED_MODULE_0__["TypeCheckObj"].isList]);
    Object(_check_args__WEBPACK_IMPORTED_MODULE_0__["checkCommTypes"])(fn_name, 'value', value, [_check_args__WEBPACK_IMPORTED_MODULE_0__["TypeCheckObj"].isAny]);
    // --- Error Check ---
    console.log('WARNING: This function has been deprecated. Please use the inline listHas() function.');
    for (var i = list.length - 1; i >= 0; i--) {
        if (list[i] === value) {
            return true;
        }
    }
    return false;
}
// ================================================================================================
/**
 * Creates a new list by creating a new list by making a copy of an existing list.
 * ~
 * WARNING: This function has been deprecated. Please use the inline listCopy() function.
 *
 * @param entities List to copy.
 * @returns New duplicated list.
 * @example copy1 = list.Copy(list)
 * @example_info where list = [1,2,3]
 * Expected value of copy is [1,2,3].
 */
function _Copy(entities) {
    // --- Error Check ---
    Object(_check_args__WEBPACK_IMPORTED_MODULE_0__["checkCommTypes"])('list.Copy', 'list', entities, [_check_args__WEBPACK_IMPORTED_MODULE_0__["TypeCheckObj"].isList]);
    // --- Error Check ---
    console.log('WARNING: This function has been deprecated. Please use the inline listCopy() function.');
    return entities.slice();
}
// ================================================================================================
/**
 * Creates a new list by combining two lists into a new list.
 * ~
 * WARNING: This function has been deprecated. Please use the inline listJoin() function.
 *
 * @param list1 First list.
 * @param list2 Second list.
 * @returns Combined list (list1 first, followed by list2).
 * @example newlist = list.Concat(list1,list2)
 * @example_info where list1 = [1,2,3]
 * and list2 = [9,0]
 * Expected value of newlist is [1,2,3,9,0].
 */
function _Concat(list1, list2) {
    // --- Error Check ---
    var fn_name = 'list.Concat';
    Object(_check_args__WEBPACK_IMPORTED_MODULE_0__["checkCommTypes"])(fn_name, 'list1', list1, [_check_args__WEBPACK_IMPORTED_MODULE_0__["TypeCheckObj"].isList]);
    Object(_check_args__WEBPACK_IMPORTED_MODULE_0__["checkCommTypes"])(fn_name, 'list2', list2, [_check_args__WEBPACK_IMPORTED_MODULE_0__["TypeCheckObj"].isList]);
    // --- Error Check ---
    console.log('WARNING: This function has been deprecated. Please use the inline listJoin() function.');
    return list1.concat(list2);
}
// ================================================================================================
/**
 * Creates a new list by flattening an n-dimensional list into a one-dimensional list.
 * ~
 * WARNING: This function has been deprecated. Please use the inline listFlat() function.
 *
 * @param list List to flatten.
 * @returns Flattened list.
 * @example flatten = list.Flatten(list)
 * @example_info where list = [1,2,3,[4,5]]
 * Expected value of flatten is [1,2,3,4,5].
 */
function _Flatten(list) {
    // --- Error Check ---
    Object(_check_args__WEBPACK_IMPORTED_MODULE_0__["checkCommTypes"])('list.Flatten', 'list', list, [_check_args__WEBPACK_IMPORTED_MODULE_0__["TypeCheckObj"].isList]);
    // --- Error Check ---
    console.log('WARNING: This function has been deprecated. Please use the inline listFlat() function.');
    return _flattenDeep(list);
}
function _flattenDeep(list) {
    return list.reduce(function (acc, val) { return Array.isArray(val) ? acc.concat(_flattenDeep(val)) : acc.concat(val); }, []);
}
// ================================================================================================
/**
 * Creates a new list by copying a portion of an existing list, from start index to end index (end not included).
 * ~
 * WARNING: This function has been deprecated. Please use the inline listSlice() function.
 *
 * @param list List to slice.
 * @param start Zero-based index at which to begin slicing.
 *      A negative index can be used, indicating an offset from the end of the sequence.
 *      If start is undefined, slice begins from index 0.
 * @param end Zero-based index before which to end slicing. Slice extracts up to but not including end.
 *      A negative index can be used, indicating an offset from the end of the sequence.
 *      If end is undefined, slice extracts through the end of the sequence.
 * @returns A new list.
 * @example result = list.Slice(list,1,3)
 * @example_info where list = [1,2,3,4,5]
 * Expected value of result is [2,3].
 */
function _Slice(list, start, end) {
    // --- Error Check ---
    var fn_name = 'list.Slice';
    Object(_check_args__WEBPACK_IMPORTED_MODULE_0__["checkCommTypes"])(fn_name, 'list', list, [_check_args__WEBPACK_IMPORTED_MODULE_0__["TypeCheckObj"].isList]);
    Object(_check_args__WEBPACK_IMPORTED_MODULE_0__["checkCommTypes"])(fn_name, 'start', start, [_check_args__WEBPACK_IMPORTED_MODULE_0__["TypeCheckObj"].isInt]);
    Object(_check_args__WEBPACK_IMPORTED_MODULE_0__["checkCommTypes"])(fn_name, 'end', end, [_check_args__WEBPACK_IMPORTED_MODULE_0__["TypeCheckObj"].isInt]);
    // --- Error Check ---
    console.log('WARNING: This function has been deprecated. Please use the inline listSlice() function.');
    return list.slice(start, end);
}
// ================================================================================================
/**
 * Reverses the order of values in a list and returns a new list.
 * ~
 * WARNING: This function has been deprecated. Please use the list.Sort() function.
 *
 * @param entities List to reverse.
 * @returns New reversed list.
 * @example result = list.Reverse(list1)
 * @example_info where list1 = [1,2,3]
 * Expected value of result is [3,2,1].
 */
function _Reverse(entities) {
    // --- Error Check ---
    Object(_check_args__WEBPACK_IMPORTED_MODULE_0__["checkCommTypes"])('list.Reverse', 'entities', entities, [_check_args__WEBPACK_IMPORTED_MODULE_0__["TypeCheckObj"].isList]);
    // --- Error Check ---
    console.log('WARNING: This function has been deprecated. Please use the list.Sort() function.');
    entities.reverse();
}
// ================================================================================================


/***/ }),

/***/ "./src/assets/core/modules/make.ts":
/*!*****************************************!*\
  !*** ./src/assets/core/modules/make.ts ***!
  \*****************************************/
/*! exports provided: Position, Point, _EClose, Polyline, Polygon, _collection, Collection, _ECopyAttribues, Copy, Hole, _ELoftMethod, Loft, _EExtrudeMethod, Extrude, _Join, _EDivideMethod, Divide, Unweld */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Position", function() { return Position; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Point", function() { return Point; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_EClose", function() { return _EClose; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Polyline", function() { return Polyline; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Polygon", function() { return Polygon; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_collection", function() { return _collection; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Collection", function() { return Collection; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_ECopyAttribues", function() { return _ECopyAttribues; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Copy", function() { return Copy; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Hole", function() { return Hole; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_ELoftMethod", function() { return _ELoftMethod; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Loft", function() { return Loft; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_EExtrudeMethod", function() { return _EExtrudeMethod; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Extrude", function() { return Extrude; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_Join", function() { return _Join; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_EDivideMethod", function() { return _EDivideMethod; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Divide", function() { return Divide; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Unweld", function() { return Unweld; });
/* harmony import */ var _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @libs/geo-info/common */ "./src/assets/libs/geo-info/common.ts");
/* harmony import */ var _libs_geo_info_id__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @libs/geo-info/id */ "./src/assets/libs/geo-info/id.ts");
/* harmony import */ var _libs_geom_vectors__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @libs/geom/vectors */ "./src/assets/libs/geom/vectors.ts");
/* harmony import */ var _check_args__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./_check_args */ "./src/assets/core/modules/_check_args.ts");
/* harmony import */ var _assets_libs_geom_distance__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @assets/libs/geom/distance */ "./src/assets/libs/geom/distance.ts");
/**
 * The `make` module has functions for making new entities in the model.
 * All these functions all return the IDs of the entities that are created.
 */





// ================================================================================================
function _position(__model__, coords) {
    var depth = Object(_libs_geo_info_id__WEBPACK_IMPORTED_MODULE_1__["getArrDepth"])(coords);
    if (depth === 1) {
        var coord1 = coords;
        var posi_i = __model__.geom.add.addPosi();
        __model__.attribs.add.setAttribValue(_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].POSI, posi_i, _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EAttribNames"].COORDS, coord1);
        return [_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].POSI, posi_i];
    }
    else if (depth === 2) {
        var coords2 = coords;
        return coords2.map(function (coord) { return _position(__model__, coord); });
    }
    else {
        var coords3 = coords;
        return coords3.map(function (coord2) { return _position(__model__, coord2); });
    }
}
/**
 * Adds a new position to the model.
 *
 * @param __model__
 * @param coords XYZ coordinates as a list of three numbers.
 * @returns Entities, new position, or a list of new positions, or a list of lists of new positions .
 * @example position1 = make.Position([1,2,3])
 * @example_info Creates a position with coordinates x=1, y=2, z=3.
 * @example_link make.Position.mob&node=1
 */
function Position(__model__, coords) {
    // --- Error Check ---
    Object(_check_args__WEBPACK_IMPORTED_MODULE_3__["checkCommTypes"])('make.Position', 'coords', coords, [_check_args__WEBPACK_IMPORTED_MODULE_3__["TypeCheckObj"].isCoord, _check_args__WEBPACK_IMPORTED_MODULE_3__["TypeCheckObj"].isCoordList, _check_args__WEBPACK_IMPORTED_MODULE_3__["TypeCheckObj"].isCoordList_List]);
    // TODO allow to Txyz[][]
    // --- Error Check ---
    var new_ents_arr = _position(__model__, coords);
    return Object(_libs_geo_info_id__WEBPACK_IMPORTED_MODULE_1__["idsMake"])(new_ents_arr);
}
// ================================================================================================
function _point(__model__, ents_arr) {
    var depth = Object(_libs_geo_info_id__WEBPACK_IMPORTED_MODULE_1__["getArrDepth"])(ents_arr);
    if (depth === 1) {
        var _a = ents_arr, ent_type = _a[0], index = _a[1]; // either a posi or something else
        if (ent_type === _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].POSI) {
            var point_i = __model__.geom.add.addPoint(index);
            return [_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].POINT, point_i];
        }
        else {
            var posis_i = __model__.geom.query.navAnyToPosi(ent_type, index);
            return posis_i.map(function (posi_i) { return _point(__model__, [_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].POSI, posi_i]); });
        }
    }
    else { // depth === 2 or 3
        return ents_arr.map(function (_ents_arr) { return _point(__model__, _ents_arr); });
    }
}
/**
 * Adds a new point to the model. If a list of positions is provided as the input, then a list of points is generated.
 *
 * @param __model__
 * @param positions Position of point, or other entities from which positions will be extracted.
 * @returns Entities, new point or a list of new points.
 * @example_info Creates a point at position1.
 * @example point1 = make.Point(position1)
 * @example_info Creates a point at position1.
 * @example_link make.Point.mob&node=1
 */
function Point(__model__, positions) {
    // --- Error Check ---
    var ents_arr = Object(_check_args__WEBPACK_IMPORTED_MODULE_3__["checkIDs"])('make.Point', 'positions', positions, [_check_args__WEBPACK_IMPORTED_MODULE_3__["IDcheckObj"].isID, _check_args__WEBPACK_IMPORTED_MODULE_3__["IDcheckObj"].isIDList, _check_args__WEBPACK_IMPORTED_MODULE_3__["IDcheckObj"].isIDList_list], [_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].POSI, _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].VERT, _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].EDGE, _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].WIRE,
        _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].FACE, _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].POINT, _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].PLINE, _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].PGON]);
    // --- Error Check ---
    var new_ents_arr = _point(__model__, ents_arr);
    return Object(_libs_geo_info_id__WEBPACK_IMPORTED_MODULE_1__["idsMake"])(new_ents_arr);
}
// ================================================================================================
// Enums for Polyline()
var _EClose;
(function (_EClose) {
    _EClose["OPEN"] = "open";
    _EClose["CLOSE"] = "close";
})(_EClose || (_EClose = {}));
function _polyline(__model__, ents_arr, close) {
    if (Object(_libs_geo_info_id__WEBPACK_IMPORTED_MODULE_1__["getArrDepth"])(ents_arr) === 2) {
        var bool_close = (close === _EClose.CLOSE);
        var posis_i = Object(_libs_geo_info_id__WEBPACK_IMPORTED_MODULE_1__["idIndicies"])(ents_arr);
        var pline_i = __model__.geom.add.addPline(posis_i, bool_close);
        return [_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].PLINE, pline_i];
    }
    else {
        return ents_arr.map(function (ent_arr) { return _polyline(__model__, ent_arr, close); });
    }
}
function _getPlinePosisFromEnts(__model__, ents_arr) {
    // check if this is a single object ID
    if (Object(_libs_geo_info_id__WEBPACK_IMPORTED_MODULE_1__["getArrDepth"])(ents_arr) === 1) {
        ents_arr = [ents_arr];
    }
    // check if this is a list of posis, verts, or points
    if (Object(_libs_geo_info_id__WEBPACK_IMPORTED_MODULE_1__["getArrDepth"])(ents_arr) === 2 && Object(_libs_geo_info_id__WEBPACK_IMPORTED_MODULE_1__["isDim0"])(ents_arr[0][0])) {
        var ents_arr2 = [];
        for (var _i = 0, ents_arr_1 = ents_arr; _i < ents_arr_1.length; _i++) {
            var ent_arr = ents_arr_1[_i];
            var _a = ent_arr, ent_type = _a[0], index = _a[1];
            if (ent_type === _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].POSI) {
                ents_arr2.push(ent_arr);
            }
            else {
                var posis_i = __model__.geom.query.navAnyToPosi(ent_type, index);
                for (var _b = 0, posis_i_1 = posis_i; _b < posis_i_1.length; _b++) {
                    var posi_i = posis_i_1[_b];
                    ents_arr2.push([_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].POSI, posi_i]);
                }
            }
        }
        ents_arr = [ents_arr2];
    }
    // now process the ents
    var posis_arrs = [];
    for (var _c = 0, ents_arr_2 = ents_arr; _c < ents_arr_2.length; _c++) {
        var ent_arr = ents_arr_2[_c];
        if (Object(_libs_geo_info_id__WEBPACK_IMPORTED_MODULE_1__["getArrDepth"])(ent_arr) === 2) { // this must be a list of posis
            posis_arrs.push(ent_arr);
            continue;
        }
        var _d = ent_arr, ent_type = _d[0], index = _d[1];
        switch (ent_type) {
            case _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].EDGE:
            case _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].WIRE:
            case _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].PLINE:
                var posis_i = __model__.geom.query.navAnyToPosi(ent_type, index);
                var posis_arr = posis_i.map(function (posi_i) { return [_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].POSI, posi_i]; });
                posis_arrs.push(posis_arr);
                break;
            case _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].FACE:
            case _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].PGON:
                var wires_i = __model__.geom.query.navAnyToWire(ent_type, index);
                for (var j = 0; j < wires_i.length; j++) {
                    var wire_i = wires_i[j];
                    var wire_posis_i = __model__.geom.query.navAnyToPosi(_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].WIRE, wire_i);
                    var wire_posis_arr = wire_posis_i.map(function (posi_i) { return [_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].POSI, posi_i]; });
                    posis_arrs.push(wire_posis_arr);
                }
                break;
            default:
                break;
        }
    }
    return posis_arrs;
}
/**
 * Adds one or more new polylines to the model.
 *
 * @param __model__
 * @param entities List of positions, or list of lists of positions, or entities from which positions can be extracted.
 * @param close Enum, 'open' or 'close'.
 * @returns Entities, new polyline, or a list of new polylines.
 * @example polyline1 = make.Polyline([position1,position2,position3], close)
 * @example_info Creates a closed polyline with vertices position1, position2, position3 in sequence.
 * @example_link make.Polyline.mob&node=1
 */
function Polyline(__model__, entities, close) {
    // --- Error Check ---
    var ents_arr = Object(_check_args__WEBPACK_IMPORTED_MODULE_3__["checkIDs"])('make.Polyline', 'positions', entities, [_check_args__WEBPACK_IMPORTED_MODULE_3__["IDcheckObj"].isID, _check_args__WEBPACK_IMPORTED_MODULE_3__["IDcheckObj"].isIDList, _check_args__WEBPACK_IMPORTED_MODULE_3__["IDcheckObj"].isIDList_list], [_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].POSI, _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].VERT, _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].EDGE, _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].WIRE,
        _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].FACE, _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].PLINE, _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].PGON]);
    // --- Error Check ---
    var posis_arrs = _getPlinePosisFromEnts(__model__, ents_arr);
    var new_ents_arr = _polyline(__model__, posis_arrs, close);
    var depth = Object(_libs_geo_info_id__WEBPACK_IMPORTED_MODULE_1__["getArrDepth"])(ents_arr);
    if (depth === 1 || (depth === 2 && ents_arr[0][0] === _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].POSI)) {
        var first_ent = new_ents_arr[0];
        return Object(_libs_geo_info_id__WEBPACK_IMPORTED_MODULE_1__["idsMake"])(first_ent);
    }
    else {
        return Object(_libs_geo_info_id__WEBPACK_IMPORTED_MODULE_1__["idsMake"])(new_ents_arr);
    }
}
// ================================================================================================
function _polygon(__model__, ents_arr) {
    if (Object(_libs_geo_info_id__WEBPACK_IMPORTED_MODULE_1__["getArrDepth"])(ents_arr) === 2) {
        var posis_i = Object(_libs_geo_info_id__WEBPACK_IMPORTED_MODULE_1__["idIndicies"])(ents_arr);
        var pgon_i = __model__.geom.add.addPgon(posis_i);
        return [_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].PGON, pgon_i];
    }
    else {
        return ents_arr.map(function (_ents_arr) { return _polygon(__model__, _ents_arr); });
    }
}
function _getPgonPosisFromEnts(__model__, ents_arr) {
    // check if this is a single object ID
    if (Object(_libs_geo_info_id__WEBPACK_IMPORTED_MODULE_1__["getArrDepth"])(ents_arr) === 1) {
        ents_arr = [ents_arr];
    }
    // check if this is a list of posis
    if (Object(_libs_geo_info_id__WEBPACK_IMPORTED_MODULE_1__["getArrDepth"])(ents_arr) === 2 && ents_arr[0][0] === _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].POSI) {
        // ents_arr =  [ents_arr] as TEntTypeIdx[][];
        var ents_arr2 = [];
        for (var _i = 0, ents_arr_3 = ents_arr; _i < ents_arr_3.length; _i++) {
            var ent_arr = ents_arr_3[_i];
            var _a = ent_arr, ent_type = _a[0], index = _a[1];
            if (ent_type === _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].POSI) {
                ents_arr2.push(ent_arr);
            }
            else {
                var posis_i = __model__.geom.query.navAnyToPosi(ent_type, index);
                for (var _b = 0, posis_i_2 = posis_i; _b < posis_i_2.length; _b++) {
                    var posi_i = posis_i_2[_b];
                    ents_arr2.push([_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].POSI, posi_i]);
                }
            }
        }
        ents_arr = [ents_arr2];
    }
    // now process the ents
    var posis_arrs = [];
    for (var _c = 0, ents_arr_4 = ents_arr; _c < ents_arr_4.length; _c++) {
        var ent_arr = ents_arr_4[_c];
        if (Object(_libs_geo_info_id__WEBPACK_IMPORTED_MODULE_1__["getArrDepth"])(ent_arr) === 2) { // this must be a list of posis
            posis_arrs.push(ent_arr);
            continue;
        }
        var _d = ent_arr, ent_type = _d[0], index = _d[1];
        switch (ent_type) {
            case _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].WIRE:
            case _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].PLINE:
                var posis_i = __model__.geom.query.navAnyToPosi(ent_type, index);
                var posis_arr = posis_i.map(function (posi_i) { return [_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].POSI, posi_i]; });
                posis_arrs.push(posis_arr);
                break;
            case _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].FACE:
            case _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].PGON:
                var wires_i = __model__.geom.query.navAnyToWire(ent_type, index);
                for (var j = 0; j < wires_i.length; j++) {
                    var wire_i = wires_i[j];
                    var wire_posis_i = __model__.geom.query.navAnyToPosi(_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].WIRE, wire_i);
                    var wire_posis_arr = wire_posis_i.map(function (posi_i) { return [_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].POSI, posi_i]; });
                    posis_arrs.push(wire_posis_arr);
                }
                break;
            default:
                break;
        }
    }
    return posis_arrs;
}
/**
 * Adds one or more new polygons to the model.
 *
 * @param __model__
 * @param entities List of positions, or list of lists of positions, or entities from which positions can be extracted.
 * @returns Entities, new polygon, or a list of new polygons.
 * @example polygon1 = make.Polygon([position1,position2,position3])
 * @example_info Creates a polygon with vertices position1, position2, position3 in sequence.
 * @example_link make.Polygon.mob&node=1
 */
function Polygon(__model__, entities) {
    // --- Error Check ---
    var ents_arr = Object(_check_args__WEBPACK_IMPORTED_MODULE_3__["checkIDs"])('make.Polygon', 'positions', entities, [_check_args__WEBPACK_IMPORTED_MODULE_3__["IDcheckObj"].isID, _check_args__WEBPACK_IMPORTED_MODULE_3__["IDcheckObj"].isIDList, _check_args__WEBPACK_IMPORTED_MODULE_3__["IDcheckObj"].isIDList_list], [_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].POSI, _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].WIRE, _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].FACE, _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].PLINE, _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].PGON]);
    // --- Error Check ---
    var posis_arrs = _getPgonPosisFromEnts(__model__, ents_arr);
    var new_ents_arr = _polygon(__model__, posis_arrs);
    var depth = Object(_libs_geo_info_id__WEBPACK_IMPORTED_MODULE_1__["getArrDepth"])(ents_arr);
    if (depth === 1 || (depth === 2 && ents_arr[0][0] === _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].POSI)) {
        var first_ent = new_ents_arr[0];
        return Object(_libs_geo_info_id__WEBPACK_IMPORTED_MODULE_1__["idsMake"])(first_ent);
    }
    else {
        return Object(_libs_geo_info_id__WEBPACK_IMPORTED_MODULE_1__["idsMake"])(new_ents_arr);
    }
}
// ================================================================================================
function _collection(__model__, parent_index, ents_arr) {
    if (Object(_libs_geo_info_id__WEBPACK_IMPORTED_MODULE_1__["getArrDepth"])(ents_arr) === 1) {
        ents_arr = [ents_arr];
    }
    var points = [];
    var plines = [];
    var pgons = [];
    for (var _i = 0, ents_arr_5 = ents_arr; _i < ents_arr_5.length; _i++) {
        var ent_arr = ents_arr_5[_i];
        if (Object(_libs_geo_info_id__WEBPACK_IMPORTED_MODULE_1__["isPoint"])(ent_arr[0])) {
            points.push(ent_arr[1]);
        }
        if (Object(_libs_geo_info_id__WEBPACK_IMPORTED_MODULE_1__["isPline"])(ent_arr[0])) {
            plines.push(ent_arr[1]);
        }
        if (Object(_libs_geo_info_id__WEBPACK_IMPORTED_MODULE_1__["isPgon"])(ent_arr[0])) {
            pgons.push(ent_arr[1]);
        }
    }
    var coll_i = __model__.geom.add.addColl(parent_index, points, plines, pgons);
    return [_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].COLL, coll_i];
}
/**
 * Adds a new collection to the model.
 *
 * @param __model__
 * @param parent_coll Collection
 * @param geometry List of points, polylines, polygons.
 * @returns Entities, new collection, or a list of new collections.
 * @example collection1 = make.Collection([point1,polyine1,polygon1])
 * @example_info Creates a collection containing point1, polyline1, polygon1.
 * @example_link make.Collection.mob&node=1
 */
function Collection(__model__, parent_coll, geometry) {
    // --- Error Check ---
    var fn_name = 'make.Collection';
    var parent_index;
    if (parent_coll !== null && parent_coll !== undefined) {
        var parent_ent_arr = Object(_check_args__WEBPACK_IMPORTED_MODULE_3__["checkIDs"])(fn_name, 'parent_coll', parent_coll, [_check_args__WEBPACK_IMPORTED_MODULE_3__["IDcheckObj"].isID], [_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].COLL]);
        parent_index = parent_ent_arr[1];
    }
    else {
        parent_index = -1;
    }
    var ents_arr = Object(_check_args__WEBPACK_IMPORTED_MODULE_3__["checkIDs"])(fn_name, 'geometry', geometry, [_check_args__WEBPACK_IMPORTED_MODULE_3__["IDcheckObj"].isID, _check_args__WEBPACK_IMPORTED_MODULE_3__["IDcheckObj"].isIDList], [_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].POINT, _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].PLINE, _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].PGON]);
    // --- Error Check ---
    var new_ent_arr = _collection(__model__, parent_index, ents_arr);
    return Object(_libs_geo_info_id__WEBPACK_IMPORTED_MODULE_1__["idsMake"])(new_ent_arr);
}
// ================================================================================================
function _copyGeom(__model__, ents_arr, copy_attributes) {
    if (Object(_libs_geo_info_id__WEBPACK_IMPORTED_MODULE_1__["getArrDepth"])(ents_arr) === 1) {
        var _a = ents_arr, ent_type = _a[0], index = _a[1];
        if (Object(_libs_geo_info_id__WEBPACK_IMPORTED_MODULE_1__["isColl"])(ent_type)) {
            var coll_i = __model__.geom.add.copyColls(index, copy_attributes);
            return [ent_type, coll_i];
        }
        else if (Object(_libs_geo_info_id__WEBPACK_IMPORTED_MODULE_1__["isPgon"])(ent_type)) {
            var obj_i = __model__.geom.add.copyPgons(index, copy_attributes);
            return [ent_type, obj_i];
        }
        else if (Object(_libs_geo_info_id__WEBPACK_IMPORTED_MODULE_1__["isPline"])(ent_type)) {
            var obj_i = __model__.geom.add.copyPlines(index, copy_attributes);
            return [ent_type, obj_i];
        }
        else if (Object(_libs_geo_info_id__WEBPACK_IMPORTED_MODULE_1__["isPoint"])(ent_type)) {
            var obj_i = __model__.geom.add.copyPoints(index, copy_attributes);
            return [ent_type, obj_i];
        }
        else if (Object(_libs_geo_info_id__WEBPACK_IMPORTED_MODULE_1__["isPosi"])(ent_type)) {
            var posi_i = __model__.geom.add.copyPosis(index, copy_attributes);
            return [ent_type, posi_i];
        }
    }
    else {
        return ents_arr.map(function (one_ent) { return _copyGeom(__model__, one_ent, copy_attributes); });
    }
}
function _copyGeomPosis(__model__, ents_arr, copy_attributes) {
    if (Object(_libs_geo_info_id__WEBPACK_IMPORTED_MODULE_1__["getArrDepth"])(ents_arr) === 1) {
        ents_arr = [ents_arr];
    }
    // create the new positions
    var old_to_new_posis_i_map = new Map(); // count number of posis
    for (var _i = 0, ents_arr_6 = ents_arr; _i < ents_arr_6.length; _i++) {
        var ent_arr = ents_arr_6[_i];
        var _a = ent_arr, ent_type = _a[0], index = _a[1];
        if (!Object(_libs_geo_info_id__WEBPACK_IMPORTED_MODULE_1__["isPosi"])(ent_type)) { // obj or coll
            var old_posis_i = __model__.geom.query.navAnyToPosi(ent_type, index);
            var ent_new_posis_i = [];
            for (var _b = 0, old_posis_i_1 = old_posis_i; _b < old_posis_i_1.length; _b++) {
                var old_posi_i = old_posis_i_1[_b];
                var new_posi_i = void 0;
                if (old_to_new_posis_i_map.has(old_posi_i)) {
                    new_posi_i = old_to_new_posis_i_map.get(old_posi_i);
                }
                else {
                    new_posi_i = __model__.geom.add.copyPosis(old_posi_i, copy_attributes);
                    old_to_new_posis_i_map.set(old_posi_i, new_posi_i);
                }
                ent_new_posis_i.push(new_posi_i);
            }
            __model__.geom.modify.replacePosis(ent_type, index, ent_new_posis_i);
        }
    }
    // return all the new points
    var all_new_posis_i = Array.from(old_to_new_posis_i_map.values());
    return all_new_posis_i.map(function (posi_i) { return [_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].POSI, posi_i]; });
}
var _ECopyAttribues;
(function (_ECopyAttribues) {
    _ECopyAttribues["COPY_ATTRIBUTES"] = "copy_attributes";
    _ECopyAttribues["NO_ATTRIBUTES"] = "no_attributes";
})(_ECopyAttribues || (_ECopyAttribues = {}));
/**
 * Adds a new copy of specified entities to the model.
 *
 * @param __model__
 * @param entities Position, point, polyline, polygon, collection to be copied.
 * @param copy_positions Enum to create a copy of the existing positions or to reuse the existing positions.
 * @param copy_attributes Enum to copy attributes or to have no attributes copied.
 * @returns Entities, the copied entity or a list of copied entities.
 * @example copy1 = make.Copy([position1,polyine1,polygon1], copy_positions, copy_attributes)
 * @example_info Creates a list containing a copy of the entities in sequence of input.
 */
function Copy(__model__, entities, copy_attributes) {
    // --- Error Check ---
    var ents_arr = Object(_check_args__WEBPACK_IMPORTED_MODULE_3__["checkIDs"])('make.Copy', 'entities', entities, [_check_args__WEBPACK_IMPORTED_MODULE_3__["IDcheckObj"].isID, _check_args__WEBPACK_IMPORTED_MODULE_3__["IDcheckObj"].isIDList], [_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].POSI, _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].POINT, _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].PLINE, _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].PGON, _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].COLL]);
    // --- Error Check ---
    var bool_copy_attribs = (copy_attributes === _ECopyAttribues.COPY_ATTRIBUTES);
    // copy the list of entities
    var new_ents_arr = _copyGeom(__model__, ents_arr, bool_copy_attribs);
    // copy the positions that belong to the list of entities
    _copyGeomPosis(__model__, new_ents_arr, bool_copy_attribs);
    // return only the new entities
    return Object(_libs_geo_info_id__WEBPACK_IMPORTED_MODULE_1__["idsMake"])(new_ents_arr);
}
// ================================================================================================
// Hole modelling operation
function _hole(__model__, face_ent_arr, holes_ents_arr) {
    if (Object(_libs_geo_info_id__WEBPACK_IMPORTED_MODULE_1__["getArrDepth"])(holes_ents_arr) === 2) {
        holes_ents_arr = [holes_ents_arr];
    }
    // convert the holes to lists of posis_i
    var holes_posis_i = [];
    for (var _i = 0, _a = holes_ents_arr; _i < _a.length; _i++) {
        var hole_ents_arr = _a[_i];
        holes_posis_i.push(hole_ents_arr.map(function (ent_arr) { return ent_arr[1]; }));
    }
    // create the hole
    var wires_i = __model__.geom.modify.cutFaceHoles(face_ent_arr[1], holes_posis_i);
    return wires_i.map(function (wire_i) { return [_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].WIRE, wire_i]; });
}
function _getHolePosisFromEnts(__model__, ents_arr) {
    for (var i = 0; i < ents_arr.length; i++) {
        var depth = Object(_libs_geo_info_id__WEBPACK_IMPORTED_MODULE_1__["getArrDepth"])(ents_arr[i]);
        if (depth === 1) {
            var _a = ents_arr[i], ent_type = _a[0], index = _a[1];
            switch (ent_type) {
                case _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].WIRE:
                case _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].PLINE:
                    var posis_i = __model__.geom.query.navAnyToPosi(ent_type, index);
                    var posis_arr = posis_i.map(function (posi_i) { return [_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].POSI, posi_i]; });
                    Array.prototype.splice.apply(ents_arr, [i, 1, posis_arr]); // TODO
                    break;
                case _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].FACE:
                case _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].PGON:
                    // ignore holes, so only take the first wire
                    var wires_i = __model__.geom.query.navAnyToWire(ent_type, index);
                    var wire_i = wires_i[0];
                    var wire_posis_i = __model__.geom.query.navAnyToPosi(_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].WIRE, wire_i);
                    var wire_posis_arr = wire_posis_i.map(function (posi_i) { return [_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].POSI, posi_i]; });
                    Array.prototype.splice.apply(ents_arr, [i, 1, wire_posis_arr]); // TODO
                    break;
                default:
                    break;
            }
        }
    }
}
/**
 * Makes one or more holes in a polygon.
 * Each hole is defined by a list of positions.
 * The positions must be on the polygon, i.e. they must be co-planar with the polygon and
 * they must be within the boundary of the polygon.
 * If the list of positions consists of a single list, then one hole will be generated.
 * If the list of positions consists of a list of lists, then multiple holes will be generated.
 * ~
 * The hole positions should lie within the polygon surface.
 *
 * @param __model__
 * @param face A polygon or a face to make holes in.
 * @param positions List of positions, or list of lists of positions, or entities from which positions can be extracted.
 * @returns Entities, a list of wires resulting from the hole(s).
 */
function Hole(__model__, face, positions) {
    if (!Array.isArray(positions)) {
        positions = [positions];
    }
    // --- Error Check ---
    var face_ent_arr = Object(_check_args__WEBPACK_IMPORTED_MODULE_3__["checkIDs"])('make.Hole', 'face', face, [_check_args__WEBPACK_IMPORTED_MODULE_3__["IDcheckObj"].isID], [_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].FACE, _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].PGON]);
    var holes_ents_arr = Object(_check_args__WEBPACK_IMPORTED_MODULE_3__["checkIDs"])('make.Hole', 'positions', positions, [_check_args__WEBPACK_IMPORTED_MODULE_3__["IDcheckObj"].isID, _check_args__WEBPACK_IMPORTED_MODULE_3__["IDcheckObj"].isIDList, _check_args__WEBPACK_IMPORTED_MODULE_3__["IDcheckObj"].isIDList_list], [_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].POSI, _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].WIRE, _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].FACE, _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].PLINE, _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].PGON]);
    // --- Error Check ---
    _getHolePosisFromEnts(__model__, holes_ents_arr);
    var new_ents_arr = _hole(__model__, face_ent_arr, holes_ents_arr);
    return Object(_libs_geo_info_id__WEBPACK_IMPORTED_MODULE_1__["idsMake"])(new_ents_arr);
}
// ================================================================================================
// export enum _ELoftMethod {
//     OPEN =  'open',
//     CLOSED  =  'closed'
// }
var _ELoftMethod;
(function (_ELoftMethod) {
    _ELoftMethod["OPEN_QUADS"] = "open_quads";
    _ELoftMethod["CLOSED_QUADS"] = "closed_quads";
    _ELoftMethod["OPEN_STRINGERS"] = "open_stringers";
    _ELoftMethod["CLOSED_STRINGERS"] = "closed_stringers";
    _ELoftMethod["OPEN_RIBS"] = "open_ribs";
    _ELoftMethod["CLOSED_RIBS"] = "closed_ribs";
})(_ELoftMethod || (_ELoftMethod = {}));
function _loftQuads(__model__, ents_arr, divisions, method) {
    var edges_arrs_i = [];
    var num_edges = 0;
    for (var _i = 0, ents_arr_7 = ents_arr; _i < ents_arr_7.length; _i++) {
        var ents = ents_arr_7[_i];
        var _a = ents, ent_type = _a[0], index = _a[1];
        var edges_i = __model__.geom.query.navAnyToEdge(ent_type, index);
        if (edges_arrs_i.length === 0) {
            num_edges = edges_i.length;
        }
        if (edges_i.length !== num_edges) {
            throw new Error('make.Loft: Number of edges is not consistent.');
        }
        edges_arrs_i.push(edges_i);
    }
    if (method === _ELoftMethod.CLOSED_QUADS) {
        edges_arrs_i.push(edges_arrs_i[0]);
    }
    var new_pgons_i = [];
    for (var i = 0; i < edges_arrs_i.length - 1; i++) {
        var edges_i_a = edges_arrs_i[i];
        var edges_i_b = edges_arrs_i[i + 1];
        if (divisions > 0) {
            var strip_posis_map = new Map();
            for (var j = 0; j < num_edges; j++) {
                var edge_i_a = edges_i_a[j];
                var edge_i_b = edges_i_b[j];
                // get exist two posis_i
                var exist_posis_a_i = __model__.geom.query.navAnyToPosi(_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].EDGE, edge_i_a);
                var exist_posis_b_i = __model__.geom.query.navAnyToPosi(_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].EDGE, edge_i_b);
                // create the new posis strip if necessary
                for (var _b = 0, _c = [0, 1]; _b < _c.length; _b++) {
                    var k = _c[_b];
                    if (strip_posis_map.get(exist_posis_a_i[k]) === undefined) {
                        var xyz_a = __model__.attribs.query.getPosiCoords(exist_posis_a_i[k]);
                        var xyz_b = __model__.attribs.query.getPosiCoords(exist_posis_b_i[k]);
                        var extrude_vec_div = Object(_libs_geom_vectors__WEBPACK_IMPORTED_MODULE_2__["vecDiv"])(Object(_libs_geom_vectors__WEBPACK_IMPORTED_MODULE_2__["vecFromTo"])(xyz_a, xyz_b), divisions);
                        var strip_posis_i = [exist_posis_a_i[k]];
                        for (var d = 1; d < divisions; d++) {
                            var strip_posi_i = __model__.geom.add.addPosi();
                            var move_xyz = Object(_libs_geom_vectors__WEBPACK_IMPORTED_MODULE_2__["vecMult"])(extrude_vec_div, d);
                            __model__.attribs.add.setPosiCoords(strip_posi_i, Object(_libs_geom_vectors__WEBPACK_IMPORTED_MODULE_2__["vecAdd"])(xyz_a, move_xyz));
                            strip_posis_i.push(strip_posi_i);
                        }
                        strip_posis_i.push(exist_posis_b_i[k]);
                        strip_posis_map.set(exist_posis_a_i[k], strip_posis_i);
                    }
                }
                // get the two strips and make polygons
                var strip1_posis_i = strip_posis_map.get(exist_posis_a_i[0]);
                var strip2_posis_i = strip_posis_map.get(exist_posis_a_i[1]);
                for (var k = 0; k < strip1_posis_i.length - 1; k++) {
                    var c1 = strip1_posis_i[k];
                    var c2 = strip2_posis_i[k];
                    var c3 = strip2_posis_i[k + 1];
                    var c4 = strip1_posis_i[k + 1];
                    var pgon_i = __model__.geom.add.addPgon([c1, c2, c3, c4]);
                    new_pgons_i.push(pgon_i);
                }
            }
        }
        else {
            for (var j = 0; j < num_edges; j++) {
                var posis_i_a = __model__.geom.query.navAnyToPosi(_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].EDGE, edges_i_a[j]);
                var posis_i_b = __model__.geom.query.navAnyToPosi(_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].EDGE, edges_i_b[j]);
                var pgon_i = __model__.geom.add.addPgon([posis_i_a[0], posis_i_a[1], posis_i_b[1], posis_i_b[0]]);
                new_pgons_i.push(pgon_i);
            }
        }
    }
    return new_pgons_i.map(function (pgon_i) { return [_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].PGON, pgon_i]; });
}
function _loftStringers(__model__, ents_arr, divisions, method) {
    var posis_arrs_i = [];
    var num_posis = 0;
    for (var _i = 0, ents_arr_8 = ents_arr; _i < ents_arr_8.length; _i++) {
        var ents = ents_arr_8[_i];
        var _a = ents, ent_type = _a[0], index = _a[1];
        var posis_i = __model__.geom.query.navAnyToPosi(ent_type, index);
        if (posis_arrs_i.length === 0) {
            num_posis = posis_i.length;
        }
        if (posis_i.length !== num_posis) {
            throw new Error('make.Loft: Number of positions is not consistent.');
        }
        posis_arrs_i.push(posis_i);
    }
    var is_closed = method === _ELoftMethod.CLOSED_STRINGERS;
    if (is_closed) {
        posis_arrs_i.push(posis_arrs_i[0]);
    }
    var stringer_plines_i = [];
    for (var i = 0; i < num_posis; i++) {
        var stringer_posis_i = [];
        for (var j = 0; j < posis_arrs_i.length - 1; j++) {
            stringer_posis_i.push(posis_arrs_i[j][i]);
            if (divisions > 0) {
                var xyz1 = __model__.attribs.query.getPosiCoords(posis_arrs_i[j][i]);
                var xyz2 = __model__.attribs.query.getPosiCoords(posis_arrs_i[j + 1][i]);
                var vec = Object(_libs_geom_vectors__WEBPACK_IMPORTED_MODULE_2__["vecDiv"])(Object(_libs_geom_vectors__WEBPACK_IMPORTED_MODULE_2__["vecFromTo"])(xyz1, xyz2), divisions);
                for (var k = 1; k < divisions; k++) {
                    var new_xyz = Object(_libs_geom_vectors__WEBPACK_IMPORTED_MODULE_2__["vecAdd"])(xyz1, Object(_libs_geom_vectors__WEBPACK_IMPORTED_MODULE_2__["vecMult"])(vec, k));
                    var new_posi_i = __model__.geom.add.addPosi();
                    __model__.attribs.add.setPosiCoords(new_posi_i, new_xyz);
                    stringer_posis_i.push(new_posi_i);
                }
            }
        }
        if (!is_closed) {
            stringer_posis_i.push(posis_arrs_i[posis_arrs_i.length - 1][i]);
        }
        var pline_i = __model__.geom.add.addPline(stringer_posis_i, is_closed);
        stringer_plines_i.push(pline_i);
    }
    return stringer_plines_i.map(function (pline_i) { return [_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].PLINE, pline_i]; });
}
function _loftRibs(__model__, ents_arr, divisions, method) {
    var posis_arrs_i = [];
    var num_posis = 0;
    for (var _i = 0, ents_arr_9 = ents_arr; _i < ents_arr_9.length; _i++) {
        var ents = ents_arr_9[_i];
        var _a = ents, ent_type = _a[0], index = _a[1];
        var posis_i = __model__.geom.query.navAnyToPosi(ent_type, index);
        if (posis_arrs_i.length === 0) {
            num_posis = posis_i.length;
        }
        if (posis_i.length !== num_posis) {
            throw new Error('make.Loft: Number of positions is not consistent.');
        }
        posis_arrs_i.push(posis_i);
    }
    var is_closed = method === _ELoftMethod.CLOSED_RIBS;
    if (is_closed) {
        posis_arrs_i.push(posis_arrs_i[0]);
    }
    var ribs_is_closed = false;
    switch (ents_arr[0][0]) { // check if the first entity is closed
        case _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].PGON:
        case _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].FACE:
            ribs_is_closed = true;
            break;
        case _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].PLINE:
            var wire_i = __model__.geom.query.navPlineToWire(ents_arr[0][1]);
            ribs_is_closed = __model__.geom.query.istWireClosed(wire_i);
            break;
        case _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].WIRE:
            ribs_is_closed = __model__.geom.query.istWireClosed(ents_arr[0][1]);
            break;
        default:
            break;
    }
    var rib_plines_i = [];
    for (var i = 0; i < posis_arrs_i.length - 1; i++) {
        var pline_i = __model__.geom.add.addPline(posis_arrs_i[i], ribs_is_closed);
        rib_plines_i.push(pline_i);
        if (divisions > 0) {
            var xyzs1 = posis_arrs_i[i].map(function (posi_i) { return __model__.attribs.query.getPosiCoords(posi_i); });
            var xyzs2 = posis_arrs_i[i + 1].map(function (posi_i) { return __model__.attribs.query.getPosiCoords(posi_i); });
            var vecs = [];
            for (var k = 0; k < num_posis; k++) {
                var vec = Object(_libs_geom_vectors__WEBPACK_IMPORTED_MODULE_2__["vecDiv"])(Object(_libs_geom_vectors__WEBPACK_IMPORTED_MODULE_2__["vecFromTo"])(xyzs1[k], xyzs2[k]), divisions);
                vecs.push(vec);
            }
            for (var j = 1; j < divisions; j++) {
                var rib_posis_i = [];
                for (var k = 0; k < num_posis; k++) {
                    var new_xyz = Object(_libs_geom_vectors__WEBPACK_IMPORTED_MODULE_2__["vecAdd"])(xyzs1[k], Object(_libs_geom_vectors__WEBPACK_IMPORTED_MODULE_2__["vecMult"])(vecs[k], j));
                    var new_posi_i = __model__.geom.add.addPosi();
                    __model__.attribs.add.setPosiCoords(new_posi_i, new_xyz);
                    rib_posis_i.push(new_posi_i);
                }
                var new_rib_pline_i = __model__.geom.add.addPline(rib_posis_i, ribs_is_closed);
                rib_plines_i.push(new_rib_pline_i);
            }
        }
    }
    if (!is_closed) {
        var pline_i = __model__.geom.add.addPline(posis_arrs_i[posis_arrs_i.length - 1], ribs_is_closed);
        rib_plines_i.push(pline_i);
    }
    return rib_plines_i.map(function (pline_i) { return [_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].PLINE, pline_i]; });
}
function _loft(__model__, ents_arrs, divisions, method) {
    var depth = Object(_libs_geo_info_id__WEBPACK_IMPORTED_MODULE_1__["getArrDepth"])(ents_arrs);
    if (depth === 2) {
        var ents_arr = ents_arrs;
        switch (method) {
            case _ELoftMethod.OPEN_QUADS:
            case _ELoftMethod.CLOSED_QUADS:
                return _loftQuads(__model__, ents_arr, divisions, method);
            case _ELoftMethod.OPEN_STRINGERS:
            case _ELoftMethod.CLOSED_STRINGERS:
                return _loftStringers(__model__, ents_arr, divisions, method);
            case _ELoftMethod.OPEN_RIBS:
            case _ELoftMethod.CLOSED_RIBS:
                return _loftRibs(__model__, ents_arr, divisions, method);
            default:
                break;
        }
    }
    else if (depth === 3) {
        var all_loft_ents_1 = [];
        for (var _i = 0, _a = ents_arrs; _i < _a.length; _i++) {
            var ents_arr = _a[_i];
            var loft_ents = _loft(__model__, ents_arr, divisions, method);
            loft_ents.forEach(function (loft_ent) { return all_loft_ents_1.push(loft_ent); });
        }
        return all_loft_ents_1;
    }
}
/**
 * Lofts between entities.
 * ~
 * The geometry that is generated depends on the method that is selected.
 * The 'loft_quads' methods will generate polygons.
 * The 'loft_stringers' and 'loft_ribs' methods will generate polylines.
 *
 * @param __model__
 * @param entities List of entities, or list of lists of entities.
 * @param method Enum, if 'closed', then close the loft back to the first entity in the list.
 * @returns Entities, a list of new polygons or polylines resulting from the loft.
 * @example quads = make.Loft([polyline1,polyline2,polyline3], 1, 'open_quads')
 * @example_info Creates quad polygons lofting between polyline1, polyline2, polyline3.
 * @example quads = make.Loft([polyline1,polyline2,polyline3], 1, 'closed_quads')
 * @example_info Creates quad polygons lofting between polyline1, polyline2, polyline3, and back to polyline1.
 * @example quads = make.Loft([ [polyline1,polyline2], [polyline3,polyline4] ] , 1, 'open_quads')
 * @example_info Creates quad polygons lofting first between polyline1 and polyline2, and then between polyline3 and polyline4.
 */
function Loft(__model__, entities, divisions, method) {
    // --- Error Check ---
    var ents_arr = Object(_check_args__WEBPACK_IMPORTED_MODULE_3__["checkIDs"])('make.Loft', 'entities', entities, [_check_args__WEBPACK_IMPORTED_MODULE_3__["IDcheckObj"].isIDList, _check_args__WEBPACK_IMPORTED_MODULE_3__["IDcheckObj"].isIDList_list], [_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].EDGE, _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].WIRE, _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].FACE, _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].PLINE, _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].PGON]);
    // --- Error Check ---
    var new_ents_arr = _loft(__model__, ents_arr, divisions, method);
    return Object(_libs_geo_info_id__WEBPACK_IMPORTED_MODULE_1__["idsMake"])(new_ents_arr);
}
// The old loft
// export function _Loft(__model__: GIModel, edges: TId[], method: _ELoftMethod): TId[] {
//     // --- Error Check ---
//     const ents_arr = checkIDs('make.Loft', 'edges', edges,
//         [IDcheckObj.isIDList], [EEntType.EDGE, EEntType.WIRE, EEntType.FACE, EEntType.PLINE, EEntType.PGON]) as TEntTypeIdx[];
//     // --- Error Check ---
//     const new_ents_arr: TEntTypeIdx[] = _loft(__model__, ents_arr, method);
//     return idsMake(new_ents_arr) as TId[];
// }
// ================================================================================================
var _EExtrudeMethod;
(function (_EExtrudeMethod) {
    _EExtrudeMethod["QUADS"] = "quads";
    _EExtrudeMethod["STRINGERS"] = "stringers";
    _EExtrudeMethod["RIBS"] = "ribs";
})(_EExtrudeMethod || (_EExtrudeMethod = {}));
function _extrudeColl(__model__, index, extrude_vec, divisions, method) {
    var points_i = __model__.geom.query.navCollToPoint(index);
    var res1 = points_i.map(function (point_i) { return _extrude(__model__, [_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].POINT, point_i], extrude_vec, divisions, method); });
    var plines_i = __model__.geom.query.navCollToPline(index);
    var res2 = plines_i.map(function (pline_i) { return _extrude(__model__, [_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].PLINE, pline_i], extrude_vec, divisions, method); });
    var pgons_i = __model__.geom.query.navCollToPgon(index);
    var res3 = pgons_i.map(function (pgon_i) { return _extrude(__model__, [_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].PGON, pgon_i], extrude_vec, divisions, method); });
    return [].concat(res1, res2, res3);
}
function _extrudeDim0(__model__, ent_type, index, extrude_vec, divisions) {
    var extrude_vec_div = Object(_libs_geom_vectors__WEBPACK_IMPORTED_MODULE_2__["vecDiv"])(extrude_vec, divisions);
    var exist_posi_i = __model__.geom.query.navAnyToPosi(ent_type, index)[0];
    var xyz = __model__.attribs.query.getPosiCoords(exist_posi_i);
    var strip_posis_i = [exist_posi_i];
    for (var i = 1; i < divisions + 1; i++) {
        var strip_posi_i = __model__.geom.add.addPosi();
        var move_xyz = Object(_libs_geom_vectors__WEBPACK_IMPORTED_MODULE_2__["vecMult"])(extrude_vec_div, i);
        __model__.attribs.add.setPosiCoords(strip_posi_i, Object(_libs_geom_vectors__WEBPACK_IMPORTED_MODULE_2__["vecAdd"])(xyz, move_xyz));
        strip_posis_i.push(strip_posi_i);
    }
    // loft between the positions and create a single polyline
    var pline_i = __model__.geom.add.addPline(strip_posis_i);
    return [[_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].PLINE, pline_i]];
}
function _extrudeQuads(__model__, ent_type, index, extrude_vec, divisions) {
    var new_pgons_i = [];
    var extrude_vec_div = Object(_libs_geom_vectors__WEBPACK_IMPORTED_MODULE_2__["vecDiv"])(extrude_vec, divisions);
    var edges_i = __model__.geom.query.navAnyToEdge(ent_type, index);
    var strip_posis_map = new Map();
    for (var _i = 0, edges_i_1 = edges_i; _i < edges_i_1.length; _i++) {
        var edge_i = edges_i_1[_i];
        // get exist posis_i
        var exist_posis_i = __model__.geom.query.navAnyToPosi(_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].EDGE, edge_i);
        // create the new posis strip if necessary
        for (var _a = 0, exist_posis_i_1 = exist_posis_i; _a < exist_posis_i_1.length; _a++) {
            var exist_posi_i = exist_posis_i_1[_a];
            if (strip_posis_map.get(exist_posi_i) === undefined) {
                var xyz = __model__.attribs.query.getPosiCoords(exist_posi_i);
                var strip_posis_i = [exist_posi_i];
                for (var i = 1; i < divisions + 1; i++) {
                    var strip_posi_i = __model__.geom.add.addPosi();
                    var move_xyz = Object(_libs_geom_vectors__WEBPACK_IMPORTED_MODULE_2__["vecMult"])(extrude_vec_div, i);
                    __model__.attribs.add.setPosiCoords(strip_posi_i, Object(_libs_geom_vectors__WEBPACK_IMPORTED_MODULE_2__["vecAdd"])(xyz, move_xyz));
                    strip_posis_i.push(strip_posi_i);
                }
                strip_posis_map.set(exist_posi_i, strip_posis_i);
            }
        }
        // get the two strips and make polygons
        var strip1_posis_i = strip_posis_map.get(exist_posis_i[0]);
        var strip2_posis_i = strip_posis_map.get(exist_posis_i[1]);
        for (var i = 0; i < strip1_posis_i.length - 1; i++) {
            var c1 = strip1_posis_i[i];
            var c2 = strip2_posis_i[i];
            var c3 = strip2_posis_i[i + 1];
            var c4 = strip1_posis_i[i + 1];
            var pgon_i = __model__.geom.add.addPgon([c1, c2, c3, c4]);
            new_pgons_i.push(pgon_i);
        }
    }
    // cap the top
    if (Object(_libs_geo_info_id__WEBPACK_IMPORTED_MODULE_1__["isDim2"])(ent_type)) { // create a top -> polygon
        var face_i = Object(_libs_geo_info_id__WEBPACK_IMPORTED_MODULE_1__["isFace"])(ent_type) ? index : __model__.geom.query.navPgonToFace(index);
        var cap_pgon_i = _extrudeCap(__model__, face_i, strip_posis_map, divisions);
        new_pgons_i.push(cap_pgon_i);
    }
    return new_pgons_i.map(function (pgon_i) { return [_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].PGON, pgon_i]; });
}
function _extrudeStringers(__model__, ent_type, index, extrude_vec, divisions) {
    var new_plines_i = [];
    var extrude_vec_div = Object(_libs_geom_vectors__WEBPACK_IMPORTED_MODULE_2__["vecDiv"])(extrude_vec, divisions);
    var edges_i = __model__.geom.query.navAnyToEdge(ent_type, index);
    var strip_posis_map = new Map();
    for (var _i = 0, edges_i_2 = edges_i; _i < edges_i_2.length; _i++) {
        var edge_i = edges_i_2[_i];
        // get exist posis_i
        var exist_posis_i = __model__.geom.query.navAnyToPosi(_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].EDGE, edge_i);
        // create the new posis strip if necessary
        for (var _a = 0, exist_posis_i_2 = exist_posis_i; _a < exist_posis_i_2.length; _a++) {
            var exist_posi_i = exist_posis_i_2[_a];
            if (strip_posis_map.get(exist_posi_i) === undefined) {
                var xyz = __model__.attribs.query.getPosiCoords(exist_posi_i);
                var strip_posis_i = [exist_posi_i];
                for (var i = 1; i < divisions + 1; i++) {
                    var strip_posi_i = __model__.geom.add.addPosi();
                    var move_xyz = Object(_libs_geom_vectors__WEBPACK_IMPORTED_MODULE_2__["vecMult"])(extrude_vec_div, i);
                    __model__.attribs.add.setPosiCoords(strip_posi_i, Object(_libs_geom_vectors__WEBPACK_IMPORTED_MODULE_2__["vecAdd"])(xyz, move_xyz));
                    strip_posis_i.push(strip_posi_i);
                }
                strip_posis_map.set(exist_posi_i, strip_posis_i);
            }
        }
    }
    // make the stringers
    strip_posis_map.forEach(function (strip_posis_i) {
        var pline_i = __model__.geom.add.addPline(strip_posis_i);
        new_plines_i.push(pline_i);
    });
    // return the stringers
    return new_plines_i.map(function (pline_i) { return [_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].PLINE, pline_i]; });
}
function _extrudeRibs(__model__, ent_type, index, extrude_vec, divisions) {
    var new_plines_i = [];
    var extrude_vec_div = Object(_libs_geom_vectors__WEBPACK_IMPORTED_MODULE_2__["vecDiv"])(extrude_vec, divisions);
    var edges_i = __model__.geom.query.navAnyToEdge(ent_type, index);
    var strip_posis_map = new Map();
    for (var _i = 0, edges_i_3 = edges_i; _i < edges_i_3.length; _i++) {
        var edge_i = edges_i_3[_i];
        // get exist posis_i
        var exist_posis_i = __model__.geom.query.navAnyToPosi(_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].EDGE, edge_i);
        // create the new posis strip if necessary
        for (var _a = 0, exist_posis_i_3 = exist_posis_i; _a < exist_posis_i_3.length; _a++) {
            var exist_posi_i = exist_posis_i_3[_a];
            if (strip_posis_map.get(exist_posi_i) === undefined) {
                var xyz = __model__.attribs.query.getPosiCoords(exist_posi_i);
                var strip_posis_i = [exist_posi_i];
                for (var i = 1; i < divisions + 1; i++) {
                    var strip_posi_i = __model__.geom.add.addPosi();
                    var move_xyz = Object(_libs_geom_vectors__WEBPACK_IMPORTED_MODULE_2__["vecMult"])(extrude_vec_div, i);
                    __model__.attribs.add.setPosiCoords(strip_posi_i, Object(_libs_geom_vectors__WEBPACK_IMPORTED_MODULE_2__["vecAdd"])(xyz, move_xyz));
                    strip_posis_i.push(strip_posi_i);
                }
                strip_posis_map.set(exist_posi_i, strip_posis_i);
            }
        }
    }
    // make an array of ents to process as ribs
    var ribs_is_closed = false;
    var ribs_posis_i = [];
    switch (ent_type) { // check if the entity is closed
        case _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].PGON:
        case _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].FACE:
            ribs_is_closed = true;
            var face_wires_i = __model__.geom.query.navAnyToWire(ent_type, index);
            for (var _b = 0, face_wires_i_1 = face_wires_i; _b < face_wires_i_1.length; _b++) {
                var face_wire_i = face_wires_i_1[_b];
                var face_wire_posis_i = __model__.geom.query.navAnyToPosi(_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].WIRE, face_wire_i);
                ribs_posis_i.push(face_wire_posis_i);
            }
            break;
        case _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].PLINE:
            var pline_wire_i = __model__.geom.query.navPlineToWire(index);
            var pline_wire_posis_i = __model__.geom.query.navAnyToPosi(_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].WIRE, pline_wire_i);
            ribs_posis_i.push(pline_wire_posis_i);
            ribs_is_closed = __model__.geom.query.istWireClosed(pline_wire_i);
            break;
        case _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].WIRE:
            var wire_posis_i = __model__.geom.query.navAnyToPosi(_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].WIRE, index);
            ribs_posis_i.push(wire_posis_i);
            ribs_is_closed = __model__.geom.query.istWireClosed(index);
            break;
        default:
            var posis_i = __model__.geom.query.navAnyToPosi(ent_type, index);
            ribs_posis_i.push(posis_i);
            break;
    }
    var _loop_1 = function (i) {
        for (var _i = 0, ribs_posis_i_1 = ribs_posis_i; _i < ribs_posis_i_1.length; _i++) {
            var rib_posis_i = ribs_posis_i_1[_i];
            var mapped_rib_posis_i = rib_posis_i.map(function (rib_posi_i) { return strip_posis_map.get(rib_posi_i)[i]; });
            var pline_i = __model__.geom.add.addPline(mapped_rib_posis_i, ribs_is_closed);
            new_plines_i.push(pline_i);
        }
    };
    // make the ribs
    for (var i = 0; i < divisions + 1; i++) {
        _loop_1(i);
    }
    // return the ribs
    return new_plines_i.map(function (pline_i) { return [_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].PLINE, pline_i]; });
}
function _extrudeCap(__model__, index, strip_posis_map, divisions) {
    var face_i = __model__.geom.query.navPgonToFace(index);
    // get positions on boundary
    var old_wire_i = __model__.geom.query.getFaceBoundary(face_i);
    var old_posis_i = __model__.geom.query.navAnyToPosi(_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].WIRE, old_wire_i);
    var new_posis_i = old_posis_i.map(function (old_posi_i) { return strip_posis_map.get(old_posi_i)[divisions]; });
    // get positions for holes
    var old_holes_wires_i = __model__.geom.query.getFaceHoles(face_i);
    var new_holes_posis_i = [];
    for (var _i = 0, old_holes_wires_i_1 = old_holes_wires_i; _i < old_holes_wires_i_1.length; _i++) {
        var old_hole_wire_i = old_holes_wires_i_1[_i];
        var old_hole_posis_i = __model__.geom.query.navAnyToPosi(_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].WIRE, old_hole_wire_i);
        var new_hole_posis_i = old_hole_posis_i.map(function (old_posi_i) { return strip_posis_map.get(old_posi_i)[divisions]; });
        new_holes_posis_i.push(new_hole_posis_i);
    }
    // make new polygon
    var pgon_i = __model__.geom.add.addPgon(new_posis_i, new_holes_posis_i);
    return pgon_i;
}
function _extrude(__model__, ents_arr, dist, divisions, method) {
    var extrude_vec = (Array.isArray(dist) ? dist : [0, 0, dist]);
    if (Object(_libs_geo_info_id__WEBPACK_IMPORTED_MODULE_1__["getArrDepth"])(ents_arr) === 1) {
        var _a = ents_arr, ent_type = _a[0], index = _a[1];
        // check if this is a collection, call this function again
        if (Object(_libs_geo_info_id__WEBPACK_IMPORTED_MODULE_1__["isColl"])(ent_type)) {
            return _extrudeColl(__model__, index, extrude_vec, divisions, method);
        }
        // check if this is a position, a vertex, or a point -> pline
        if (Object(_libs_geo_info_id__WEBPACK_IMPORTED_MODULE_1__["isDim0"])(ent_type)) {
            return _extrudeDim0(__model__, ent_type, index, extrude_vec, divisions);
        }
        // extrude edges -> polygons
        switch (method) {
            case _EExtrudeMethod.QUADS:
                return _extrudeQuads(__model__, ent_type, index, extrude_vec, divisions);
            case _EExtrudeMethod.STRINGERS:
                return _extrudeStringers(__model__, ent_type, index, extrude_vec, divisions);
            case _EExtrudeMethod.RIBS:
                return _extrudeRibs(__model__, ent_type, index, extrude_vec, divisions);
            default:
                throw new Error('Extrude method not recognised.');
        }
    }
    else {
        var new_ents_arr_1 = [];
        ents_arr.forEach(function (ent_arr) {
            var result = _extrude(__model__, ent_arr, extrude_vec, divisions, method);
            result.forEach(function (new_ent_arr) { return new_ents_arr_1.push(new_ent_arr); });
        });
        return new_ents_arr_1;
    }
}
/**
 * Extrudes geometry by distance or by vector.
 * - Extrusion of a position, vertex, or point produces polylines;
 * - Extrusion of an edge, wire, or polyline produces polygons;
 * - Extrusion of a face or polygon produces polygons, capped at the top.
 *
 * @param __model__
 * @param entities Vertex, edge, wire, face, position, point, polyline, polygon, collection.
 * @param distance Number or vector. If number, assumed to be [0,0,value] (i.e. extrusion distance in z-direction).
 * @param divisions Number of divisions to divide extrusion by. Minimum is 1.
 * @param method Enum, when extruding edges, select quads, stringers, or ribs
 * @returns Entities, a list of new polygons or polylines resulting from the extrude.
 * @example extrusion1 = make.Extrude(point1, 10, 2, 'quads')
 * @example_info Creates a polyline of total length 10 (with two edges of length 5 each) in the z-direction.
 * In this case, the 'quads' setting is ignored.
 * @example extrusion2 = make.Extrude(polygon1, [0,5,0], 1, 'quads')
 * @example_info Extrudes polygon1 by 5 in the y-direction, creating a list of quad surfaces.
 */
function Extrude(__model__, entities, distance, divisions, method) {
    // --- Error Check ---
    var fn_name = 'make.Extrude';
    var ents_arr = Object(_check_args__WEBPACK_IMPORTED_MODULE_3__["checkIDs"])(fn_name, 'entities', entities, [_check_args__WEBPACK_IMPORTED_MODULE_3__["IDcheckObj"].isID, _check_args__WEBPACK_IMPORTED_MODULE_3__["IDcheckObj"].isIDList], [_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].VERT, _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].EDGE, _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].WIRE, _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].FACE,
        _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].POSI, _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].POINT, _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].PLINE, _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].PGON, _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].COLL]);
    Object(_check_args__WEBPACK_IMPORTED_MODULE_3__["checkCommTypes"])(fn_name, 'dist', distance, [_check_args__WEBPACK_IMPORTED_MODULE_3__["TypeCheckObj"].isNumber, _check_args__WEBPACK_IMPORTED_MODULE_3__["TypeCheckObj"].isVector]);
    Object(_check_args__WEBPACK_IMPORTED_MODULE_3__["checkCommTypes"])(fn_name, 'divisions', divisions, [_check_args__WEBPACK_IMPORTED_MODULE_3__["TypeCheckObj"].isInt]);
    // --- Error Check ---
    var new_ents_arr = _extrude(__model__, ents_arr, distance, divisions, method);
    if (!Array.isArray(entities) && new_ents_arr.length === 1) {
        return Object(_libs_geo_info_id__WEBPACK_IMPORTED_MODULE_1__["idsMake"])(new_ents_arr[0]);
    }
    else {
        return Object(_libs_geo_info_id__WEBPACK_IMPORTED_MODULE_1__["idsMake"])(new_ents_arr);
    }
}
// the old extrude
// export function _Extrude(__model__: GIModel, entities: TId|TId[], dist: number|Txyz, divisions: number): TId|TId[] {
//     // --- Error Check ---
//     const fn_name = 'make.Extrude';
//     const ents_arr =  checkIDs(fn_name, 'entities', entities,
//         [IDcheckObj.isID, IDcheckObj.isIDList],
//         [EEntType.VERT, EEntType.EDGE, EEntType.WIRE, EEntType.FACE, EEntType.POSI,
//          EEntType.POINT, EEntType.PLINE, EEntType.PGON, EEntType.COLL]) as TEntTypeIdx|TEntTypeIdx[];
//     checkCommTypes(fn_name, 'dist', dist, [TypeCheckObj.isNumber, TypeCheckObj.isVector]);
//     checkCommTypes(fn_name, 'divisions', divisions, [TypeCheckObj.isInt]);
//     // --- Error Check ---
//     const new_ents_arr: TEntTypeIdx[] = _extrude(__model__, ents_arr, dist, divisions);
//     if (!Array.isArray(entities) && new_ents_arr.length === 1) {
//         return idsMake(new_ents_arr[0]) as TId;
//     } else {
//         return idsMake(new_ents_arr) as TId|TId[];
//     }
// }
// ================================================================================================
/**
 * Joins polylines to polylines or polygons to polygons.
 * ~
 * New polylins or polygons are created. The original polyline or polygons are not affected.
 *
 * @param __model__
 * @param geometry Polylines or polygons.
 * @returns Entities, a list of new joined polylines or polygons.
 * @example joined1 = make.Join([polyline1,polyline2])
 * @example_info Creates a new polyline by joining polyline1 and polyline2. Geometries must be of the same type.
 */
function _Join(__model__, geometry) {
    // --- Error Check ---
    // const ents_arr =  checkIDs('make.Join', 'geometry', geometry, [IDcheckObj.isIDList], [EEntType.PLINE, EEntType.PGON]);
    // --- Error Check ---
    throw new Error('Not implemented.');
    return null;
}
// ================================================================================================
// Divide edge modelling operation
var _EDivideMethod;
(function (_EDivideMethod) {
    _EDivideMethod["BY_NUMBER"] = "by_number";
    _EDivideMethod["BY_LENGTH"] = "by_length";
    _EDivideMethod["BY_MIN_LENGTH"] = "by_min_length";
})(_EDivideMethod || (_EDivideMethod = {}));
function _divideEdge(__model__, edge_i, divisor, method) {
    var posis_i = __model__.geom.query.navAnyToPosi(_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].EDGE, edge_i);
    var start = __model__.attribs.query.getPosiCoords(posis_i[0]);
    var end = __model__.attribs.query.getPosiCoords(posis_i[1]);
    var new_xyzs;
    if (method === _EDivideMethod.BY_NUMBER) {
        new_xyzs = Object(_libs_geom_vectors__WEBPACK_IMPORTED_MODULE_2__["interpByNum"])(start, end, divisor - 1);
    }
    else if (method === _EDivideMethod.BY_LENGTH) {
        new_xyzs = Object(_libs_geom_vectors__WEBPACK_IMPORTED_MODULE_2__["interpByLen"])(start, end, divisor);
    }
    else { // BY_MIN_LENGTH
        var len = Object(_assets_libs_geom_distance__WEBPACK_IMPORTED_MODULE_4__["distance"])(start, end);
        var num_div = Math.ceil(len / divisor);
        new_xyzs = Object(_libs_geom_vectors__WEBPACK_IMPORTED_MODULE_2__["interpByNum"])(start, end, num_div - 1);
    }
    var new_edges_i = [];
    var old_edge_i = edge_i;
    for (var _i = 0, new_xyzs_1 = new_xyzs; _i < new_xyzs_1.length; _i++) {
        var new_xyz = new_xyzs_1[_i];
        var posi_i = __model__.geom.add.addPosi();
        __model__.attribs.add.setPosiCoords(posi_i, new_xyz);
        var new_edge_i = __model__.geom.modify.insertVertIntoWire(old_edge_i, posi_i);
        new_edges_i.push(old_edge_i);
        old_edge_i = new_edge_i;
    }
    new_edges_i.push(old_edge_i);
    return new_edges_i;
}
function _divide(__model__, ents_arr, divisor, method) {
    if (Object(_libs_geo_info_id__WEBPACK_IMPORTED_MODULE_1__["getArrDepth"])(ents_arr) === 1) {
        var _a = ents_arr, ent_type = _a[0], index = _a[1];
        var exist_edges_i = void 0;
        if (!Object(_libs_geo_info_id__WEBPACK_IMPORTED_MODULE_1__["isEdge"])(ent_type)) {
            exist_edges_i = __model__.geom.query.navAnyToEdge(ent_type, index).slice();
        }
        else {
            exist_edges_i = [index];
        }
        var all_new_edges_i = [];
        for (var _i = 0, exist_edges_i_1 = exist_edges_i; _i < exist_edges_i_1.length; _i++) {
            var exist_edge_i = exist_edges_i_1[_i];
            var new_edges_i = _divideEdge(__model__, exist_edge_i, divisor, method);
            all_new_edges_i.push.apply(all_new_edges_i, new_edges_i);
        }
        return all_new_edges_i.map(function (one_edge_i) { return [_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].EDGE, one_edge_i]; });
    }
    else {
        return [].concat.apply([], ents_arr.map(function (one_edge) { return _divide(__model__, one_edge, divisor, method); }));
    }
}
/**
 * Divides edges in a set of shorter edges.
 * ~
 * If the 'by_number' method is selected, then each edge is divided into a fixed number of equal length shorter edges.
 * If the 'by length' method is selected, then each edge is divided into shorter edges of the specified length.
 * The length of the last segment will be the remainder.
 * If the 'by_min_length' method is selected,
 * then the edge is divided into the maximum number of shorter edges
 * that have a new length that is equal to or greater than the minimum.
 * ~
 * @param __model__
 * @param edges Edges, or entities from which edges can be extracted.
 * @param divisor Segment length or number of segments.
 * @param method Enum, select the method for dividing edges.
 * @returns Entities, a list of new edges resulting from the divide.
 * @example segments1 = make.Divide(edge1, 5, by_number)
 * @example_info Creates a list of 5 equal segments from edge1.
 * @example segments2 = make.Divide(edge1, 5, by_length)
 * @example_info If edge1 has length 13, creates from edge a list of two segments of length 5 and one segment of length 3.
 */
function Divide(__model__, edges, divisor, method) {
    // --- Error Check ---
    var fn_name = 'make.Divide';
    var ents_arr = Object(_check_args__WEBPACK_IMPORTED_MODULE_3__["checkIDs"])('make.Copy', 'edges', edges, [_check_args__WEBPACK_IMPORTED_MODULE_3__["IDcheckObj"].isID, _check_args__WEBPACK_IMPORTED_MODULE_3__["IDcheckObj"].isIDList], [_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].EDGE, _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].WIRE, _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].PLINE, _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].PGON]);
    Object(_check_args__WEBPACK_IMPORTED_MODULE_3__["checkCommTypes"])(fn_name, 'divisor', divisor, [_check_args__WEBPACK_IMPORTED_MODULE_3__["TypeCheckObj"].isNumber]);
    // --- Error Check ---
    var new_ents_arr = _divide(__model__, ents_arr, divisor, method);
    return Object(_libs_geo_info_id__WEBPACK_IMPORTED_MODULE_1__["idsMake"])(new_ents_arr);
}
// ================================================================================================
/**
 * Unweld vertices so that they do not share positions.
 * For the vertices of the specified entities, if they share positions with other entities in the model,
 * then those positions will be replaced with new positions.
 * This function performs a simple unweld.
 * That is, the vertices within the set of specified entities are not unwelded.
 * @param __model__
 * @param entities Vertex, edge, wire, face, point, polyline, polygon, collection.
 * @param method Enum; the method to use for unweld.
 * @returns Entities, a list of new positions resulting from the unweld.
 * @example mod.Unweld(polyline1)
 * @example_info Unwelds polyline1 from all ther entities that shares the same position.
 */
function Unweld(__model__, entities) {
    // --- Error Check ---
    var ents_arr = Object(_check_args__WEBPACK_IMPORTED_MODULE_3__["checkIDs"])('modify.Unweld', 'entities', entities, [_check_args__WEBPACK_IMPORTED_MODULE_3__["IDcheckObj"].isID, _check_args__WEBPACK_IMPORTED_MODULE_3__["IDcheckObj"].isIDList], [_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].VERT, _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].EDGE, _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].WIRE, _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].FACE,
        _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].POINT, _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].PLINE, _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].PGON, _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].COLL]);
    // --- Error Check ---
    if (!Array.isArray(ents_arr[0])) {
        ents_arr = [ents_arr];
    }
    // get verts_i
    var all_verts_i = []; // count number of posis
    for (var _i = 0, ents_arr_10 = ents_arr; _i < ents_arr_10.length; _i++) {
        var ents = ents_arr_10[_i];
        var verts_i = __model__.geom.query.navAnyToVert(ents[0], ents[1]);
        for (var _a = 0, verts_i_1 = verts_i; _a < verts_i_1.length; _a++) {
            var vert_i = verts_i_1[_a];
            all_verts_i.push(vert_i);
        }
    }
    var new_posis_i = __model__.geom.modify.unweldVerts(all_verts_i);
    return new_posis_i.map(function (posi_i) { return Object(_libs_geo_info_id__WEBPACK_IMPORTED_MODULE_1__["idsMake"])([_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].POSI, posi_i]); });
}
// ================================================================================================
// Explode
// Pipe
// Offset
// ================================================================================================
function _polygonHoles(__model__, ents_arr, holes_ents_arr) {
    if (Object(_libs_geo_info_id__WEBPACK_IMPORTED_MODULE_1__["getArrDepth"])(holes_ents_arr) === 2) {
        holes_ents_arr = [holes_ents_arr];
    }
    var posis_i = ents_arr.map(function (ent_arr) { return ent_arr[1]; });
    var holes_posis_i = [];
    for (var _i = 0, _a = holes_ents_arr; _i < _a.length; _i++) {
        var hole_ents_arr = _a[_i];
        holes_posis_i.push(hole_ents_arr.map(function (ent_arr) { return ent_arr[1]; }));
    }
    var pgon_i = __model__.geom.add.addPgon(posis_i, holes_posis_i);
    return [_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].PGON, pgon_i];
}
/**
* Adds a single new polygon to the model with one or more holes.
* @param __model__
* @param positions List of positions.
* @param hole_positions List of positions for the holes. For multiple holes, a list of list can provided.
* @returns Entities, a list of new polygons.
* @example polygon1 = make.Polygon([position1,position2,position3], [position4,position5,position6])
* @example_info Creates a polygon with  a hole, with vertices in sequence from position1 to position6.
*/
function _PolygonHoles(__model__, positions, hole_positions) {
    // --- Error Check ---
    var pgon_ents_arr = Object(_check_args__WEBPACK_IMPORTED_MODULE_3__["checkIDs"])('make.Polygon', 'positions', positions, [_check_args__WEBPACK_IMPORTED_MODULE_3__["IDcheckObj"].isIDList], [_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].POSI]);
    var holes_ents_arr = Object(_check_args__WEBPACK_IMPORTED_MODULE_3__["checkIDs"])('make.Polygon', 'positions', hole_positions, [_check_args__WEBPACK_IMPORTED_MODULE_3__["IDcheckObj"].isIDList, _check_args__WEBPACK_IMPORTED_MODULE_3__["IDcheckObj"].isIDList_list], [_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].POSI]);
    // --- Error Check ---
    var new_ent_arr = _polygonHoles(__model__, pgon_ents_arr, holes_ents_arr);
    console.log(__model__);
    return Object(_libs_geo_info_id__WEBPACK_IMPORTED_MODULE_1__["idsMake"])(new_ent_arr);
}


/***/ }),

/***/ "./src/assets/core/modules/modify.ts":
/*!*******************************************!*\
  !*** ./src/assets/core/modules/modify.ts ***!
  \*******************************************/
/*! exports provided: Move, Rotate, Scale, Mirror, XForm, _EModifyCollectionMethod, Collection, Reverse, Shift, Close, _EPromoteMethod, _EPromoteTarget, PushAttribs, _Weld, _EDeleteMethod, Delete, Keep */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Move", function() { return Move; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Rotate", function() { return Rotate; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Scale", function() { return Scale; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Mirror", function() { return Mirror; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "XForm", function() { return XForm; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_EModifyCollectionMethod", function() { return _EModifyCollectionMethod; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Collection", function() { return Collection; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Reverse", function() { return Reverse; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Shift", function() { return Shift; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Close", function() { return Close; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_EPromoteMethod", function() { return _EPromoteMethod; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_EPromoteTarget", function() { return _EPromoteTarget; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PushAttribs", function() { return PushAttribs; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_Weld", function() { return _Weld; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_EDeleteMethod", function() { return _EDeleteMethod; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Delete", function() { return Delete; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Keep", function() { return Keep; });
/* harmony import */ var _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @libs/geo-info/common */ "./src/assets/libs/geo-info/common.ts");
/* harmony import */ var _libs_geo_info_id__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @libs/geo-info/id */ "./src/assets/libs/geo-info/id.ts");
/* harmony import */ var _libs_geom_vectors__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @libs/geom/vectors */ "./src/assets/libs/geom/vectors.ts");
/* harmony import */ var _check_args__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./_check_args */ "./src/assets/core/modules/_check_args.ts");
/* harmony import */ var _libs_geom_matrix__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @libs/geom/matrix */ "./src/assets/libs/geom/matrix.ts");
/**
 * The `modify` module has functions for modifying existing entities in the model.
 * These functions do not make any new entities, but they may change attribute values.
 * All these functions all return void.
 */





// ================================================================================================
/**
 * Moves entities. The directio and distance if movement is specified as a vector.
 * ~
 * If only one vector is given, then all entities are moved by the same vector.
 * If a list of vectors is given, the each entity will be moved by a different vector.
 * In this case, the number of vectors should be equal to the number of entities.
 * ~
 * If a position is shared between entites that are being moved by different vectors,
 * then the position will be moved by the average of the vectors.
 *
 * @param __model__
 * @param entities An entity or list of entities.
 * @param vector A vector or a list of vectors.
 * @returns void
 * @example modify.Move(pline1, [1,2,3])
 * @example_info Moves pline1 by [1,2,3].
 * @example modify.Move([pos1, pos2, pos3], [[0,0,1], [0,0,1], [0,1,0]] )
 * @example_info Moves pos1 by [0,0,1], pos2 by [0,0,1], and pos3 by [0,1,0].
 * @example modify.Move([pgon1, pgon2], [1,2,3] )
 * @example_info Moves both pgon1 and pgon2 by [1,2,3].
 */
function Move(__model__, entities, vectors) {
    // --- Error Check ---
    var fn_name = 'modify.Move';
    var ents_arr = Object(_check_args__WEBPACK_IMPORTED_MODULE_3__["checkIDs"])(fn_name, 'entities', entities, [_check_args__WEBPACK_IMPORTED_MODULE_3__["IDcheckObj"].isID, _check_args__WEBPACK_IMPORTED_MODULE_3__["IDcheckObj"].isIDList], [_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].POSI, _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].VERT, _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].EDGE, _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].WIRE,
        _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].FACE, _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].POINT, _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].PLINE, _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].PGON, _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].COLL]);
    Object(_check_args__WEBPACK_IMPORTED_MODULE_3__["checkCommTypes"])(fn_name, 'vectors', vectors, [_check_args__WEBPACK_IMPORTED_MODULE_3__["TypeCheckObj"].isVector, _check_args__WEBPACK_IMPORTED_MODULE_3__["TypeCheckObj"].isVectorList]);
    // --- Error Check ---
    if (!Array.isArray(ents_arr[0])) {
        ents_arr = [ents_arr];
    }
    if (Object(_libs_geo_info_id__WEBPACK_IMPORTED_MODULE_1__["getArrDepth"])(vectors) === 1) {
        var posis_i_2 = [];
        var vec = vectors;
        for (var _i = 0, ents_arr_1 = ents_arr; _i < ents_arr_1.length; _i++) {
            var ents = ents_arr_1[_i];
            __model__.geom.query.navAnyToPosi(ents[0], ents[1]).forEach(function (posi_i) { return posis_i_2.push(posi_i); });
        }
        var unique_posis_i = Array.from(new Set(posis_i_2));
        for (var _a = 0, unique_posis_i_1 = unique_posis_i; _a < unique_posis_i_1.length; _a++) {
            var unique_posi_i = unique_posis_i_1[_a];
            var old_xyz = __model__.attribs.query.getPosiCoords(unique_posi_i);
            var new_xyz = Object(_libs_geom_vectors__WEBPACK_IMPORTED_MODULE_2__["vecAdd"])(old_xyz, vec);
            __model__.attribs.add.setPosiCoords(unique_posi_i, new_xyz);
        }
    }
    else {
        if (ents_arr.length !== vectors.length) {
            throw new Error('If multiple vectors are given, then the number of vectors must be equal to the number of entities.');
        }
        var posis_i = [];
        var vecs_map = new Map();
        for (var i = 0; i < ents_arr.length; i++) {
            var _b = ents_arr[i], ent_type = _b[0], index = _b[1];
            var vec = vectors[i];
            var ent_posis_i = __model__.geom.query.navAnyToPosi(ent_type, index);
            for (var _c = 0, ent_posis_i_1 = ent_posis_i; _c < ent_posis_i_1.length; _c++) {
                var ent_posi_i = ent_posis_i_1[_c];
                posis_i.push(ent_posi_i);
                if (!vecs_map.has(ent_posi_i)) {
                    vecs_map.set(ent_posi_i, []);
                }
                vecs_map.get(ent_posi_i).push(vec);
            }
        }
        for (var _d = 0, posis_i_1 = posis_i; _d < posis_i_1.length; _d++) {
            var posi_i = posis_i_1[_d];
            var old_xyz = __model__.attribs.query.getPosiCoords(posi_i);
            var vecs = vecs_map.get(posi_i);
            var vec = Object(_libs_geom_vectors__WEBPACK_IMPORTED_MODULE_2__["vecDiv"])(Object(_libs_geom_vectors__WEBPACK_IMPORTED_MODULE_2__["vecSum"])(vecs), vecs.length);
            var new_xyz = Object(_libs_geom_vectors__WEBPACK_IMPORTED_MODULE_2__["vecAdd"])(old_xyz, vec);
            __model__.attribs.add.setPosiCoords(posi_i, new_xyz);
        }
    }
    return; // specifies that nothing is returned
}
// ================================================================================================
/**
 * Rotates entities on plane by angle.
 * @param __model__
 * @param entities Vertex, edge, wire, face, plane, position, point, polyline, polygon, collection.
 * @param origin A list of three numbers (or a position, point, or vertex).
 * @param axis A list of three numbers.
 * @param angle Angle (in radians).
 * @returns void
 * @example modify.Rotate(polyline1, plane1, PI)
 * @example_info Rotates polyline1 on plane1 by PI (i.e. 180 degrees).
 */
function Rotate(__model__, entities, origin, axis, angle) {
    // --- Error Check ---
    var fn_name = 'modify.Rotate';
    var ents_arr = Object(_check_args__WEBPACK_IMPORTED_MODULE_3__["checkIDs"])(fn_name, 'entities', entities, [_check_args__WEBPACK_IMPORTED_MODULE_3__["IDcheckObj"].isID, _check_args__WEBPACK_IMPORTED_MODULE_3__["IDcheckObj"].isIDList], [_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].POSI, _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].VERT, _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].EDGE, _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].WIRE,
        _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].FACE, _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].POINT, _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].PLINE, _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].PGON, _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].COLL]);
    var ori_ents_arr = Object(_check_args__WEBPACK_IMPORTED_MODULE_3__["checkCommTypes"])(fn_name, 'origin', origin, [_check_args__WEBPACK_IMPORTED_MODULE_3__["TypeCheckObj"].isOrigin, _check_args__WEBPACK_IMPORTED_MODULE_3__["TypeCheckObj"].isPlane]);
    Object(_check_args__WEBPACK_IMPORTED_MODULE_3__["checkCommTypes"])(fn_name, 'axis', axis, [_check_args__WEBPACK_IMPORTED_MODULE_3__["TypeCheckObj"].isXYZlist]);
    Object(_check_args__WEBPACK_IMPORTED_MODULE_3__["checkCommTypes"])(fn_name, 'angle', angle, [_check_args__WEBPACK_IMPORTED_MODULE_3__["TypeCheckObj"].isNumber]);
    // --- Error Check ---
    // handle geometry type
    if (!Array.isArray(ents_arr[0])) {
        ents_arr = [ents_arr];
    }
    // handle origin type
    if (!Array.isArray(origin)) {
        var origin_posi = __model__.geom.query.navAnyToPosi(ori_ents_arr[0], ori_ents_arr[1]);
        origin = __model__.attribs.query.getPosiCoords(origin_posi[0]);
    }
    if (Array.isArray(origin) && Array.isArray(origin[0])) { // handles plane type
        origin = origin[0];
    }
    // rotate all positions
    var posis_i = [];
    for (var _i = 0, ents_arr_2 = ents_arr; _i < ents_arr_2.length; _i++) {
        var ents = ents_arr_2[_i];
        posis_i.push.apply(posis_i, __model__.geom.query.navAnyToPosi(ents[0], ents[1]));
    }
    var unique_posis_i = Array.from(new Set(posis_i));
    var matrix = Object(_libs_geom_matrix__WEBPACK_IMPORTED_MODULE_4__["rotateMatrix"])(origin, axis, angle);
    for (var _a = 0, unique_posis_i_2 = unique_posis_i; _a < unique_posis_i_2.length; _a++) {
        var unique_posi_i = unique_posis_i_2[_a];
        var old_xyz = __model__.attribs.query.getPosiCoords(unique_posi_i);
        var new_xyz = Object(_libs_geom_matrix__WEBPACK_IMPORTED_MODULE_4__["multMatrix"])(old_xyz, matrix);
        __model__.attribs.add.setPosiCoords(unique_posi_i, new_xyz);
    }
    return; // specifies that nothing is returned
}
// ================================================================================================
/**
 * Scales entities on plane by factor.
 * @param __model__
 * @param entities Vertex, edge, wire, face, plane, position, point, polyline, polygon, collection.
 * @param origin Position, point, vertex, list of three numbers, plane.
 * @param scale Scale factor.
 * @returns void
 * @example modify.Scale(entities, plane1, 0.5)
 * @example_info Scales entities by 0.5 on plane1.
 */
function Scale(__model__, entities, origin, scale) {
    // --- Error Check ---
    var fn_name = 'modify.Scale';
    var ents_arr = Object(_check_args__WEBPACK_IMPORTED_MODULE_3__["checkIDs"])(fn_name, 'entities', entities, [_check_args__WEBPACK_IMPORTED_MODULE_3__["IDcheckObj"].isID, _check_args__WEBPACK_IMPORTED_MODULE_3__["IDcheckObj"].isIDList], [_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].POSI, _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].VERT, _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].EDGE, _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].WIRE,
        _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].FACE, _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].POINT, _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].PLINE, _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].PGON, _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].COLL]);
    var ori_ents_arr = Object(_check_args__WEBPACK_IMPORTED_MODULE_3__["checkCommTypes"])(fn_name, 'origin', origin, [_check_args__WEBPACK_IMPORTED_MODULE_3__["TypeCheckObj"].isOrigin, _check_args__WEBPACK_IMPORTED_MODULE_3__["TypeCheckObj"].isPlane]);
    Object(_check_args__WEBPACK_IMPORTED_MODULE_3__["checkCommTypes"])(fn_name, 'scale', scale, [_check_args__WEBPACK_IMPORTED_MODULE_3__["TypeCheckObj"].isNumber, _check_args__WEBPACK_IMPORTED_MODULE_3__["TypeCheckObj"].isXYZlist]);
    // --- Error Check ---
    // handle geometry type
    if (!Array.isArray(ents_arr[0])) {
        ents_arr = [ents_arr];
    }
    // handle origin type
    if (!Array.isArray(origin)) {
        var origin_posi = __model__.geom.query.navAnyToPosi(ori_ents_arr[0], ori_ents_arr[1]);
        origin = __model__.attribs.query.getPosiCoords(origin_posi[0]);
    }
    // handle scale type
    if (!Array.isArray(scale)) {
        scale = [scale, scale, scale];
    }
    // scale all positions
    var posis_i = [];
    for (var _i = 0, ents_arr_3 = ents_arr; _i < ents_arr_3.length; _i++) {
        var ents = ents_arr_3[_i];
        posis_i.push.apply(posis_i, __model__.geom.query.navAnyToPosi(ents[0], ents[1]));
    }
    var unique_posis_i = Array.from(new Set(posis_i));
    var matrix = Object(_libs_geom_matrix__WEBPACK_IMPORTED_MODULE_4__["scaleMatrix"])(origin, scale);
    for (var _a = 0, unique_posis_i_3 = unique_posis_i; _a < unique_posis_i_3.length; _a++) {
        var unique_posi_i = unique_posis_i_3[_a];
        var old_xyz = __model__.attribs.query.getPosiCoords(unique_posi_i);
        var new_xyz = Object(_libs_geom_matrix__WEBPACK_IMPORTED_MODULE_4__["multMatrix"])(old_xyz, matrix);
        __model__.attribs.add.setPosiCoords(unique_posi_i, new_xyz);
    }
    return; // specifies that nothing is returned
}
// ================================================================================================
/**
 * Mirrors entities across plane.
 * @param __model__
 * @param entities Vertex, edge, wire, face, plane, position, point, polyline, polygon, collection.
 * @param origin Position, vertex, point, list of three numbers.
 * @param direction Vector or a list of three numbers.
 * @returns void
 * @example modify.Mirror(polygon1, plane1)
 * @example_info Mirrors polygon1 across plane1.
 */
function Mirror(__model__, entities, origin, direction) {
    // --- Error Check ---
    var fn_name = 'modify.Mirror';
    var ents_arr = Object(_check_args__WEBPACK_IMPORTED_MODULE_3__["checkIDs"])(fn_name, 'entities', entities, [_check_args__WEBPACK_IMPORTED_MODULE_3__["IDcheckObj"].isID, _check_args__WEBPACK_IMPORTED_MODULE_3__["IDcheckObj"].isIDList], [_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].POSI, _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].VERT, _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].EDGE, _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].WIRE,
        _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].FACE, _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].POINT, _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].PLINE, _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].PGON, _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].COLL]);
    var ori_ents_arr = Object(_check_args__WEBPACK_IMPORTED_MODULE_3__["checkCommTypes"])(fn_name, 'origin', origin, [_check_args__WEBPACK_IMPORTED_MODULE_3__["TypeCheckObj"].isOrigin]);
    Object(_check_args__WEBPACK_IMPORTED_MODULE_3__["checkCommTypes"])(fn_name, 'direction', direction, [_check_args__WEBPACK_IMPORTED_MODULE_3__["TypeCheckObj"].isVector]);
    // --- Error Check ---
    // handle geometry type
    if (!Array.isArray(ents_arr[0])) {
        ents_arr = [ents_arr];
    }
    // handle origin type
    if (!Array.isArray(origin)) {
        var _a = ori_ents_arr, origin_ent_type = _a[0], origin_index = _a[1];
        var origin_posi = __model__.geom.query.navAnyToPosi(origin_ent_type, origin_index);
        origin = __model__.attribs.query.getPosiCoords(origin_posi[0]);
    }
    // mirror all positions
    var posis_i = [];
    for (var _i = 0, ents_arr_4 = ents_arr; _i < ents_arr_4.length; _i++) {
        var ents = ents_arr_4[_i];
        var _b = ents, ent_type = _b[0], index = _b[1];
        posis_i.push.apply(posis_i, __model__.geom.query.navAnyToPosi(ent_type, index));
    }
    var unique_posis_i = Array.from(new Set(posis_i));
    var matrix = Object(_libs_geom_matrix__WEBPACK_IMPORTED_MODULE_4__["mirrorMatrix"])(origin, direction);
    for (var _c = 0, unique_posis_i_4 = unique_posis_i; _c < unique_posis_i_4.length; _c++) {
        var unique_posi_i = unique_posis_i_4[_c];
        var old_xyz = __model__.attribs.query.getPosiCoords(unique_posi_i);
        var new_xyz = Object(_libs_geom_matrix__WEBPACK_IMPORTED_MODULE_4__["multMatrix"])(old_xyz, matrix);
        __model__.attribs.add.setPosiCoords(unique_posi_i, new_xyz);
    }
}
// ================================================================================================
/**
 * Transforms entities from one construction plane to another.
 * @param __model__
 * @param entities Vertex, edge, wire, face, position, point, polyline, polygon, collection.
 * @param from Plane defining target construction plane.
 * @param to Plane defining destination construction plane.
 * @returns void
 * @example modify.XForm(polygon1, plane1, plane2)
 * @example_info Transforms polygon1 from plane1 to plane2.
 */
function XForm(__model__, entities, from, to) {
    // --- Error Check ---
    var fn_name = 'modify.XForm';
    var ents_arr = Object(_check_args__WEBPACK_IMPORTED_MODULE_3__["checkIDs"])(fn_name, 'entities', entities, [_check_args__WEBPACK_IMPORTED_MODULE_3__["IDcheckObj"].isID, _check_args__WEBPACK_IMPORTED_MODULE_3__["IDcheckObj"].isIDList], [_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].POSI, _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].VERT, _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].EDGE, _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].WIRE,
        _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].FACE, _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].POINT, _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].PLINE, _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].PGON, _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].COLL]);
    Object(_check_args__WEBPACK_IMPORTED_MODULE_3__["checkCommTypes"])(fn_name, 'from', from, [_check_args__WEBPACK_IMPORTED_MODULE_3__["TypeCheckObj"].isPlane]);
    Object(_check_args__WEBPACK_IMPORTED_MODULE_3__["checkCommTypes"])(fn_name, 'to', to, [_check_args__WEBPACK_IMPORTED_MODULE_3__["TypeCheckObj"].isPlane]);
    // --- Error Check ---
    // handle geometry type
    if (!Array.isArray(ents_arr[0])) {
        ents_arr = [ents_arr];
    }
    // xform all positions
    var posis_i = [];
    for (var _i = 0, ents_arr_5 = ents_arr; _i < ents_arr_5.length; _i++) {
        var ents = ents_arr_5[_i];
        var _a = ents, ent_type = _a[0], index = _a[1];
        posis_i.push.apply(posis_i, __model__.geom.query.navAnyToPosi(ent_type, index));
    }
    var unique_posis_i = Array.from(new Set(posis_i));
    var matrix = Object(_libs_geom_matrix__WEBPACK_IMPORTED_MODULE_4__["xfromSourceTargetMatrix"])(from, to);
    for (var _b = 0, unique_posis_i_5 = unique_posis_i; _b < unique_posis_i_5.length; _b++) {
        var unique_posi_i = unique_posis_i_5[_b];
        var old_xyz = __model__.attribs.query.getPosiCoords(unique_posi_i);
        var new_xyz = Object(_libs_geom_matrix__WEBPACK_IMPORTED_MODULE_4__["multMatrix"])(old_xyz, matrix);
        __model__.attribs.add.setPosiCoords(unique_posi_i, new_xyz);
    }
}
// ================================================================================================
var _EModifyCollectionMethod;
(function (_EModifyCollectionMethod) {
    _EModifyCollectionMethod["SET_PARENT_ENTITY"] = "set_parent";
    _EModifyCollectionMethod["ADD_ENTITIES"] = "add_entities";
    _EModifyCollectionMethod["REMOVE_ENTITIES"] = "remove_entities";
})(_EModifyCollectionMethod || (_EModifyCollectionMethod = {}));
function _collection(__model__, coll_arr, ents_arr, method) {
    var _ = coll_arr[0], coll_i = coll_arr[1];
    if (Object(_libs_geo_info_id__WEBPACK_IMPORTED_MODULE_1__["getArrDepth"])(ents_arr) === 1 && ents_arr.length) {
        ents_arr = [ents_arr];
    }
    ents_arr = ents_arr;
    if (method === _EModifyCollectionMethod.SET_PARENT_ENTITY) {
        if (ents_arr.length !== 1) {
            throw new Error('Error setting collection parent. A collection can only have one parent.');
        }
        var _a = ents_arr[0], parent_ent_type = _a[0], parent_coll_i = _a[1];
        if (parent_ent_type !== _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].COLL) {
            throw new Error('Error setting collection parent. The parent must be another collection.');
        }
        __model__.geom.modify.setCollParent(coll_i, parent_coll_i);
        return;
    }
    var points_i = [];
    var plines_i = [];
    var pgons_i = [];
    for (var _i = 0, ents_arr_6 = ents_arr; _i < ents_arr_6.length; _i++) {
        var _b = ents_arr_6[_i], ent_type = _b[0], ent_i = _b[1];
        switch (ent_type) {
            case _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].POINT:
                points_i.push(ent_i);
                break;
            case _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].PLINE:
                plines_i.push(ent_i);
                break;
            case _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].PGON:
                pgons_i.push(ent_i);
                break;
            default:
                throw new Error('Error modifying collection. A collection can only contain points, polylines, and polygons.');
        }
    }
    if (method === _EModifyCollectionMethod.ADD_ENTITIES) {
        __model__.geom.modify.collAddEnts(coll_i, points_i, plines_i, pgons_i);
    }
    else { // Remove entities
        __model__.geom.modify.collRemoveEnts(coll_i, points_i, plines_i, pgons_i);
    }
}
/**
 * Modifies a collection.
 * ~
 * If the method is 'set_parent', then the parent can be updated by specifying a parent collection.
 * If the method is 'add_entities', then entities are added to the collection.
 * If the method is 'remove_entities', then entities are removed from the collection.
 * If adding or removing entities, then the entities must be points, polylines, or polygons.
 *
 * @param __model__
 * @param coll The collection to be updated.
 * @param entities Points, polylines, and polygons, or a single collection.
 * @param method Enum, the method to use when modifying the collection.
 * @returns void
 */
function Collection(__model__, coll, entities, method) {
    // --- Error Check ---
    var coll_arr = Object(_check_args__WEBPACK_IMPORTED_MODULE_3__["checkIDs"])('modify.Collection', 'coll', coll, [_check_args__WEBPACK_IMPORTED_MODULE_3__["IDcheckObj"].isID], [_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].COLL]);
    var ents_arr = Object(_check_args__WEBPACK_IMPORTED_MODULE_3__["checkIDs"])('modify.Collection', 'entities', entities, [_check_args__WEBPACK_IMPORTED_MODULE_3__["IDcheckObj"].isID, _check_args__WEBPACK_IMPORTED_MODULE_3__["IDcheckObj"].isIDList], [_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].POINT, _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].PLINE, _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].PGON, _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].COLL]);
    // --- Error Check ---
    _collection(__model__, coll_arr, ents_arr, method);
}
// ================================================================================================
function _reverse(__model__, ents_arr) {
    if (Object(_libs_geo_info_id__WEBPACK_IMPORTED_MODULE_1__["getArrDepth"])(ents_arr) === 1 && ents_arr.length) {
        var _a = ents_arr, ent_type = _a[0], index = _a[1];
        var wires_i = __model__.geom.query.navAnyToWire(ent_type, index);
        wires_i.forEach(function (wire_i) { return __model__.geom.modify.reverse(wire_i); });
    }
    else {
        ents_arr.forEach(function (ent_arr) { return _reverse(__model__, ent_arr); });
    }
}
/**
 * Reverses direction of entities.
 * @param __model__
 * @param entities Wire, face, polyline, polygon.
 * @returns void
 * @example modify.Reverse(face1)
 * @example_info Flips face1 and reverses its normal.
 * @example modify.Reverse(polyline1)
 * @example_info Reverses the order of vertices to reverse the direction of the polyline.
 */
function Reverse(__model__, entities) {
    // --- Error Check ---
    var ents_arr = Object(_check_args__WEBPACK_IMPORTED_MODULE_3__["checkIDs"])('modify.Reverse', 'entities', entities, [_check_args__WEBPACK_IMPORTED_MODULE_3__["IDcheckObj"].isID, _check_args__WEBPACK_IMPORTED_MODULE_3__["IDcheckObj"].isIDList], [_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].WIRE, _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].PLINE, _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].FACE, _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].PGON]);
    // --- Error Check ---
    _reverse(__model__, ents_arr);
}
// ================================================================================================
function _shift(__model__, ents_arr, offset) {
    if (Object(_libs_geo_info_id__WEBPACK_IMPORTED_MODULE_1__["getArrDepth"])(ents_arr) === 1 && ents_arr.length) {
        var _a = ents_arr, ent_type = _a[0], index = _a[1];
        var wires_i = __model__.geom.query.navAnyToWire(ent_type, index);
        wires_i.forEach(function (wire_i) { return __model__.geom.modify.shift(wire_i, offset); });
    }
    else {
        ents_arr.forEach(function (ent_arr) { return _shift(__model__, ent_arr, offset); });
    }
}
/**
 * Shifts the order of the edges in a closed wire.
 * ~
 * In a closed wire, any edge (or vertex) could be the first edge of the ring.
 * In some cases, it is useful to have an edge in a particular position in a ring.
 * This function allows the edges to be shifted either forwards or backwards around the ring.
 * The order of the edges in the ring will remain unchanged.
 *
 * @param __model__
 * @param entities Wire, face, polyline, polygon.
 * @returns void
 * @example modify.Shift(face1, 1)
 * @example_info Shifts the edges in the face wire, so that the every edge moves up by one position
 * in the ring. The last edge will become the first edge .
 * @example modify.Shift(polyline1, -1)
 * @example_info Shifts the edges in the closed polyline wire, so that every edge moves back by one position
 * in the ring. The first edge will become the last edge.
 */
function Shift(__model__, entities, offset) {
    // --- Error Check ---
    var ents_arr = Object(_check_args__WEBPACK_IMPORTED_MODULE_3__["checkIDs"])('modify.Reverse', 'entities', entities, [_check_args__WEBPACK_IMPORTED_MODULE_3__["IDcheckObj"].isID, _check_args__WEBPACK_IMPORTED_MODULE_3__["IDcheckObj"].isIDList], [_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].WIRE, _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].PLINE, _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].FACE, _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].PGON]);
    // --- Error Check ---
    _shift(__model__, ents_arr, offset);
}
// ================================================================================================
function _close(__model__, ents_arr) {
    if (Object(_libs_geo_info_id__WEBPACK_IMPORTED_MODULE_1__["getArrDepth"])(ents_arr) === 1 && ents_arr.length) {
        var _a = ents_arr, ent_type = _a[0], index = _a[1];
        var wire_i = index;
        if (ent_type === _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].PLINE) {
            wire_i = __model__.geom.query.navPlineToWire(index);
        }
        else if (ent_type !== _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].WIRE) {
            throw new Error('modify.Close: Entity is of wrong type. It must be either a polyline or a wire.');
        }
        __model__.geom.modify.closeWire(wire_i);
    }
    else {
        for (var _i = 0, ents_arr_7 = ents_arr; _i < ents_arr_7.length; _i++) {
            var ents = ents_arr_7[_i];
            _close(__model__, ents);
        }
    }
}
/**
 * Closes polyline(s) if open.
 * @param __model__
 * @param lines Polyline(s).
 * @returns void
 * @example modify.Close([polyline1,polyline2,...])
 * @example_info If open, polylines are changed to closed; if already closed, nothing happens.
 */
function Close(__model__, lines) {
    // --- Error Check ---
    var ents_arr = Object(_check_args__WEBPACK_IMPORTED_MODULE_3__["checkIDs"])('modify.Close', 'lines', lines, [_check_args__WEBPACK_IMPORTED_MODULE_3__["IDcheckObj"].isID, _check_args__WEBPACK_IMPORTED_MODULE_3__["IDcheckObj"].isIDList], [_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].PLINE]);
    // --- Error Check ---
    _close(__model__, ents_arr);
}
// ================================================================================================
// AttribPush modelling operation
var _EPromoteMethod;
(function (_EPromoteMethod) {
    _EPromoteMethod["FIRST"] = "first";
    _EPromoteMethod["LAST"] = "last";
    _EPromoteMethod["AVERAGE"] = "average";
    _EPromoteMethod["MEDIAN"] = "median";
    _EPromoteMethod["SUM"] = "sum";
    _EPromoteMethod["MIN"] = "min";
    _EPromoteMethod["MAX"] = "max";
})(_EPromoteMethod || (_EPromoteMethod = {}));
// Promote modelling operation
var _EPromoteTarget;
(function (_EPromoteTarget) {
    _EPromoteTarget["POSI"] = "positions";
    _EPromoteTarget["VERT"] = "vertices";
    _EPromoteTarget["EDGE"] = "edges";
    _EPromoteTarget["WIRE"] = "wires";
    _EPromoteTarget["FACE"] = "faces";
    _EPromoteTarget["POINT"] = "points";
    _EPromoteTarget["PLINE"] = "plines";
    _EPromoteTarget["PGON"] = "pgons";
    _EPromoteTarget["COLL"] = "collections";
    _EPromoteTarget["MOD"] = "model";
})(_EPromoteTarget || (_EPromoteTarget = {}));
function _convertPromoteMethod(selection) {
    switch (selection) {
        case _EPromoteMethod.AVERAGE:
            return _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EAttribPromote"].AVERAGE;
        case _EPromoteMethod.MEDIAN:
            return _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EAttribPromote"].MEDIAN;
        case _EPromoteMethod.SUM:
            return _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EAttribPromote"].SUM;
        case _EPromoteMethod.MIN:
            return _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EAttribPromote"].MIN;
        case _EPromoteMethod.MAX:
            return _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EAttribPromote"].MAX;
        case _EPromoteMethod.FIRST:
            return _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EAttribPromote"].FIRST;
        case _EPromoteMethod.LAST:
            return _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EAttribPromote"].LAST;
        default:
            break;
    }
}
function _convertPromoteTarget(selection) {
    switch (selection) {
        case _EPromoteTarget.POSI:
            return _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].POSI;
        case _EPromoteTarget.VERT:
            return _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].VERT;
        case _EPromoteTarget.EDGE:
            return _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].EDGE;
        case _EPromoteTarget.WIRE:
            return _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].WIRE;
        case _EPromoteTarget.FACE:
            return _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].FACE;
        case _EPromoteTarget.POINT:
            return _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].POINT;
        case _EPromoteTarget.PLINE:
            return _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].PLINE;
        case _EPromoteTarget.PGON:
            return _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].PGON;
        case _EPromoteTarget.COLL:
            return _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].COLL;
        case _EPromoteTarget.MOD:
            return _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].MOD;
        default:
            break;
    }
}
/**
 * Pushes existing attribute values onto other entities.
 * Attribute values can be promoted up the hierarchy, demoted down the hierarchy, or transferred across the hierarchy.
 * ~
 * In certain cases, when attributes are pushed, they may be aggregated. For example, if you are pushing attributes
 * from vertices to polygons, then there will be multiple vertex attributes that can be combined in
 * different ways.
 * The 'method' specifies how the attributes should be aggregated. Note that if no aggregation is required
 * then the aggregation method is ignored.
 * ~
 * The aggregation methods consist of numerical functions such as average, median, sum, max, and min. These will
 * only work if the attribute values are numbers or lists of numbers. If the attribute values are string, then
 * the numerical functions are ignored.
 * ~
 * If the attribute values are lists of numbers, then these aggregation methods work on the individual items in the list.
 * For example, lets say you have an attribute consisting of normal vectors on vertices. If you push these attributes
 * down to the positions, then aggregation may be required, since multiple vertices can share the same position.
 * In this case, if you choose the `average` aggregation method, then resulting vectors on the positions will be the
 * average of vertex vectors.
 *
 * @param __model__
 * @param entities The entities that currently contain the attribute values.
 * @param attrib_name The name of the attribute to be promoted, demoted, or transferred.
 * @param to_level Enum; The level to which to promote, demote, or transfer the attribute values.
 * @param method Enum; The method to use when attribute values need to be aggregated.
 * @returns void
 * @example promote1 = modify.PushAttribs([pgon1, pgon2], 'area', collections, sum)
 * @example_info For the two polygons (pgon1 and pgon2), it gets the attribute values from the attribute called `area`,
 * and pushes them up to the collection level. The `sum` method specifies that the two areas should be added up.
 * Note that in order to create an attribute at the collection level, the two polygons should be part of a
 * collection. If they are not part of the collection, then no attribute values will be push.
 */
function PushAttribs(__model__, entities, attrib_name, to_level, method) {
    // --- Error Check ---
    var ents_arr;
    if (entities !== null) {
        ents_arr = Object(_check_args__WEBPACK_IMPORTED_MODULE_3__["checkIDs"])('modify.Attribute', 'entities', entities, [_check_args__WEBPACK_IMPORTED_MODULE_3__["IDcheckObj"].isID, _check_args__WEBPACK_IMPORTED_MODULE_3__["IDcheckObj"].isIDList], null);
    }
    else {
        ents_arr = null;
    }
    // --- Error Check ---
    var from_ent_type;
    var indices = [];
    if (ents_arr !== null) {
        var ents_arrs = ((Object(_libs_geo_info_id__WEBPACK_IMPORTED_MODULE_1__["getArrDepth"])(ents_arr) === 1) ? [ents_arr] : ents_arr);
        from_ent_type = ents_arrs[0][0];
        for (var _i = 0, ents_arrs_1 = ents_arrs; _i < ents_arrs_1.length; _i++) {
            var _a = ents_arrs_1[_i], ent_type = _a[0], index = _a[1];
            if (ent_type !== from_ent_type) {
                throw new Error('All entities must be of the same type.');
            }
            indices.push(index);
        }
    }
    else {
        from_ent_type = _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].MOD;
    }
    var to_ent_type = _convertPromoteTarget(to_level);
    var promote_method = _convertPromoteMethod(method);
    if (from_ent_type === to_ent_type) {
        __model__.attribs.add.transferAttribValues(from_ent_type, attrib_name, indices, promote_method);
    }
    else {
        __model__.attribs.add.promoteAttribValues(from_ent_type, attrib_name, indices, to_ent_type, promote_method);
    }
}
// ================================================================================================
/**
 * Welds entities together.
 * @param __model__
 * @param entities Vertex, edge, wire, face, position, point, polyline, polygon, collection.
 * @returns void
 * @example modify.Weld([polyline1,polyline2])
 * @example_info Welds both polyline1 and polyline2 together. Entities must be of the same type.
 */
function _Weld(__model__, entities) {
    // --- Error Check ---
    // const ents_arr = checkIDs('modify.Weld', 'entities', entities, [IDcheckObj.isIDList],
    //                          [EEntType.POSI, EEntType.VERT, EEntType.EDGE, EEntType.WIRE,
    //                           EEntType.FACE, EEntType.POINT, EEntType.PLINE, EEntType.PGON, EEntType.COLL]);
    // --- Error Check ---
    throw new Error('Not implemented.');
}
// ================================================================================================
// Stuff for Delete()
var _EDeleteMethod;
(function (_EDeleteMethod) {
    _EDeleteMethod["DEL_UNUSED_POINTS"] = "del_unused_posis";
    _EDeleteMethod["KEEP_UNUSED_POINTS"] = "keep_unused_posis";
})(_EDeleteMethod || (_EDeleteMethod = {}));
function _delete(__model__, ents_arr, del_unused_posis) {
    ents_arr = ((Object(_libs_geo_info_id__WEBPACK_IMPORTED_MODULE_1__["getArrDepth"])(ents_arr) === 1) ? [ents_arr] : ents_arr);
    var colls_i = [];
    var pgons_i = [];
    var plines_i = [];
    var points_i = [];
    var posis_i = [];
    for (var _i = 0, ents_arr_8 = ents_arr; _i < ents_arr_8.length; _i++) {
        var ent_arr = ents_arr_8[_i];
        var _a = ent_arr, ent_type = _a[0], index = _a[1];
        if (Object(_libs_geo_info_id__WEBPACK_IMPORTED_MODULE_1__["isColl"])(ent_type)) {
            colls_i.push(index);
        }
        else if (Object(_libs_geo_info_id__WEBPACK_IMPORTED_MODULE_1__["isPgon"])(ent_type)) {
            pgons_i.push(index);
        }
        else if (Object(_libs_geo_info_id__WEBPACK_IMPORTED_MODULE_1__["isPline"])(ent_type)) {
            plines_i.push(index);
        }
        else if (Object(_libs_geo_info_id__WEBPACK_IMPORTED_MODULE_1__["isPoint"])(ent_type)) {
            points_i.push(index);
        }
        else if (Object(_libs_geo_info_id__WEBPACK_IMPORTED_MODULE_1__["isPosi"])(ent_type)) {
            posis_i.push(index);
        }
    }
    __model__.geom.modify.delColls(colls_i, del_unused_posis);
    __model__.geom.modify.delPgons(pgons_i, del_unused_posis);
    __model__.geom.modify.delPlines(plines_i, del_unused_posis);
    __model__.geom.modify.delPoints(points_i, del_unused_posis);
    __model__.geom.modify.delPosis(posis_i);
}
/**
 * Deletes geometric entities: positions, points, polylines, polygons, and collections.
 * When deleting positions, any topology that requires those positions will also be deleted.
 * (For example, any vertices linked to the deleted position will also be deleted,
 * which may in turn result in some edges being deleted, and so forth.)
 * For positions, the selection to delete or keep unused positions is ignored.
 * When deleting objects (point, polyline, and polygons), topology is also deleted.
 * When deleting collections, none of the objects in the collection are deleted.
 * @param __model__
 * @param entities Position, point, polyline, polygon, collection.
 * @param del_unused_posis Enum, delete or keep unused positions.
 * @returns void
 * @example modify.Delete(polygon1)
 * @example_info Deletes polygon1 from the model.
 */
function Delete(__model__, entities, del_unused_posis) {
    // @ts-ignore
    if (Array.isArray(entities)) {
        entities = entities.flat();
    }
    // --- Error Check ---
    var ents_arr = Object(_check_args__WEBPACK_IMPORTED_MODULE_3__["checkIDs"])('modify.Delete', 'entities', entities, [_check_args__WEBPACK_IMPORTED_MODULE_3__["IDcheckObj"].isID, _check_args__WEBPACK_IMPORTED_MODULE_3__["IDcheckObj"].isIDList], [_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].POSI, _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].POINT, _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].PLINE, _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].PGON, _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].COLL]);
    // --- Error Check ---
    var bool_del_unused_posis = (del_unused_posis === _EDeleteMethod.DEL_UNUSED_POINTS);
    _delete(__model__, ents_arr, bool_del_unused_posis);
}
// ================================================================================================
function _keep(__model__, ents_arr) {
    ents_arr = ((Object(_libs_geo_info_id__WEBPACK_IMPORTED_MODULE_1__["getArrDepth"])(ents_arr) === 1) ? [ents_arr] : ents_arr);
    var colls_i = new Set();
    var pgons_i = new Set();
    var plines_i = new Set();
    var points_i = new Set();
    var posis_i = new Set();
    for (var _i = 0, ents_arr_9 = ents_arr; _i < ents_arr_9.length; _i++) {
        var ent_arr = ents_arr_9[_i];
        var _a = ent_arr, ent_type = _a[0], index = _a[1];
        if (Object(_libs_geo_info_id__WEBPACK_IMPORTED_MODULE_1__["isColl"])(ent_type)) {
            colls_i.add(index);
            for (var _b = 0, _c = __model__.geom.query.navCollToPgon(index); _b < _c.length; _b++) {
                var pgon_i = _c[_b];
                pgons_i.add(pgon_i);
            }
            for (var _d = 0, _e = __model__.geom.query.navCollToPline(index); _d < _e.length; _d++) {
                var pline_i = _e[_d];
                plines_i.add(pline_i);
            }
            for (var _f = 0, _g = __model__.geom.query.navCollToPoint(index); _f < _g.length; _f++) {
                var point_i = _g[_f];
                points_i.add(point_i);
            }
        }
        else if (Object(_libs_geo_info_id__WEBPACK_IMPORTED_MODULE_1__["isPgon"])(ent_type)) {
            pgons_i.add(index);
        }
        else if (Object(_libs_geo_info_id__WEBPACK_IMPORTED_MODULE_1__["isPline"])(ent_type)) {
            plines_i.add(index);
        }
        else if (Object(_libs_geo_info_id__WEBPACK_IMPORTED_MODULE_1__["isPoint"])(ent_type)) {
            points_i.add(index);
        }
        else if (Object(_libs_geo_info_id__WEBPACK_IMPORTED_MODULE_1__["isPosi"])(ent_type)) {
            posis_i.add(index);
        }
    }
    var all_colls_i = __model__.geom.query.getEnts(_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].COLL, false);
    var del_colls_i = all_colls_i.filter(function (coll_i) { return !colls_i.has(coll_i); });
    __model__.geom.modify.delColls(del_colls_i, false);
    var all_pgons_i = __model__.geom.query.getEnts(_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].PGON, false);
    var del_pgons_i = all_pgons_i.filter(function (pgon_i) { return !pgons_i.has(pgon_i); });
    __model__.geom.modify.delPgons(del_pgons_i, false);
    var all_plines_i = __model__.geom.query.getEnts(_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].PLINE, false);
    var del_plines_i = all_plines_i.filter(function (pline_i) { return !plines_i.has(pline_i); });
    __model__.geom.modify.delPlines(del_plines_i, false);
    var all_points_i = __model__.geom.query.getEnts(_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].POINT, false);
    var del_points_i = all_points_i.filter(function (point_i) { return !points_i.has(point_i); });
    __model__.geom.modify.delPoints(del_points_i, false);
    // finally, only del posis that are unused and that are not in the keep list
    var all_unused_posis_i = __model__.geom.query.getUnusedPosis(false);
    var del_posis_i = all_unused_posis_i.filter(function (posi_i) { return !posis_i.has(posi_i); });
    __model__.geom.modify.delPosis(del_posis_i);
}
/**
 * Keeps the specified geometric entities: positions, points, polylines, polygons, and collections.
 * Everything else in the model is deleted.
 * When a collection is kept, all objects inside the collection are also kept.
 * When an object is kept, all positions used by the object are also kept.
 *
 * @param __model__
 * @param entities Position, point, polyline, polygon, collection.
 * @returns void
 * @example modify.Delete(polygon1)
 * @example_info Deletes polygon1 from the model.
 */
function Keep(__model__, entities) {
    // @ts-ignore
    if (Array.isArray(entities)) {
        entities = entities.flat();
    }
    // --- Error Check ---
    var ents_arr = Object(_check_args__WEBPACK_IMPORTED_MODULE_3__["checkIDs"])('modify.Delete', 'entities', entities, [_check_args__WEBPACK_IMPORTED_MODULE_3__["IDcheckObj"].isID, _check_args__WEBPACK_IMPORTED_MODULE_3__["IDcheckObj"].isIDList], [_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].POSI, _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].POINT, _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].PLINE, _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].PGON, _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].COLL]);
    // --- Error Check ---
    _keep(__model__, ents_arr);
}
// ExtendPline
// ProjectPosition
// Move position along vector (normals)


/***/ }),

/***/ "./src/assets/core/modules/pattern.ts":
/*!********************************************!*\
  !*** ./src/assets/core/modules/pattern.ts ***!
  \********************************************/
/*! exports provided: Arc, _EGridMethod, Grid, Rectangle */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Arc", function() { return Arc; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_EGridMethod", function() { return _EGridMethod; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Grid", function() { return Grid; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Rectangle", function() { return Rectangle; });
/* harmony import */ var _check_args__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./_check_args */ "./src/assets/core/modules/_check_args.ts");
/* harmony import */ var _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @libs/geo-info/common */ "./src/assets/libs/geo-info/common.ts");
/* harmony import */ var _libs_geo_info_id__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @libs/geo-info/id */ "./src/assets/libs/geo-info/id.ts");
/* harmony import */ var _libs_geom_vectors__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @libs/geom/vectors */ "./src/assets/libs/geom/vectors.ts");
/* harmony import */ var _libs_geom_matrix__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @libs/geom/matrix */ "./src/assets/libs/geom/matrix.ts");
/**
 * The `pattern` module has functions for creating patters of positions in the model.
 * All these functions all return lists of position IDs.
 * The list may be nested, depending on which function is selected.
 */
/**
 *
 */





// ================================================================================================
/**
 * Creates positions in an arc pattern, and returns the list of new positions.
 * If the angle of the arc is set to null, then circular patterns will be created.
 * For circular patterns, duplicates at start and end are automatically removed.
 *
 * @param __model__
 * @param origin XYZ coordinates as a list of three numbers.
 * @param radius Radius of circle as a number.
 * @param num_positions Number of positions distributed equally along the arc.
 * @param arc_angle Angle of arc (in radians).
 * @returns Entities, a list of positions.
 * @example coordinates1 = pattern.Arc([0,0,0], 10, 12, PI)
 * @example_info Creates a list of 12 XYZ coordinates distributed equally along a semicircle of radius 10.
 */
function Arc(__model__, origin, radius, num_positions, arc_angle) {
    // --- Error Check ---
    var fn_name = 'pattern.Arc';
    Object(_check_args__WEBPACK_IMPORTED_MODULE_0__["checkCommTypes"])(fn_name, 'origin', origin, [_check_args__WEBPACK_IMPORTED_MODULE_0__["TypeCheckObj"].isCoord, _check_args__WEBPACK_IMPORTED_MODULE_0__["TypeCheckObj"].isPlane]);
    Object(_check_args__WEBPACK_IMPORTED_MODULE_0__["checkCommTypes"])(fn_name, 'radius', radius, [_check_args__WEBPACK_IMPORTED_MODULE_0__["TypeCheckObj"].isNumber]);
    Object(_check_args__WEBPACK_IMPORTED_MODULE_0__["checkCommTypes"])(fn_name, 'num_positions', num_positions, [_check_args__WEBPACK_IMPORTED_MODULE_0__["TypeCheckObj"].isInt]);
    Object(_check_args__WEBPACK_IMPORTED_MODULE_0__["checkCommTypes"])(fn_name, 'arc_angle', arc_angle, [_check_args__WEBPACK_IMPORTED_MODULE_0__["TypeCheckObj"].isNumber, _check_args__WEBPACK_IMPORTED_MODULE_0__["TypeCheckObj"].isNull]);
    // --- Error Check ---
    // create the matrix one time
    var matrix;
    var origin_is_plane = Object(_libs_geo_info_id__WEBPACK_IMPORTED_MODULE_2__["getArrDepth"])(origin) === 2;
    if (origin_is_plane) {
        matrix = Object(_libs_geom_matrix__WEBPACK_IMPORTED_MODULE_4__["xfromSourceTargetMatrix"])(_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_1__["XYPLANE"], origin);
    }
    // calc the rot angle per position
    var rot = (arc_angle === null) ? (2 * Math.PI) / num_positions : arc_angle / (num_positions - 1);
    // create positions
    var posis_i = [];
    for (var i = 0; i < num_positions; i++) {
        var angle = rot * i; // CCW
        var x = (Math.cos(angle) * radius);
        var y = (Math.sin(angle) * radius);
        var xyz = [x, y, 0];
        if (origin_is_plane) {
            xyz = Object(_libs_geom_matrix__WEBPACK_IMPORTED_MODULE_4__["multMatrix"])(xyz, matrix);
        }
        else { // we have a plane
            xyz = Object(_libs_geom_vectors__WEBPACK_IMPORTED_MODULE_3__["vecAdd"])(xyz, origin);
        }
        var posi_i = __model__.geom.add.addPosi();
        __model__.attribs.add.setPosiCoords(posi_i, xyz);
        posis_i.push(posi_i);
    }
    // return the list of posis
    return Object(_libs_geo_info_id__WEBPACK_IMPORTED_MODULE_2__["idsMakeFromIndicies"])(_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_1__["EEntType"].POSI, posis_i);
}
// ================================================================================================
var _EGridMethod;
(function (_EGridMethod) {
    _EGridMethod["FLAT"] = "flat";
    _EGridMethod["COLUMNS"] = "columns";
    _EGridMethod["ROWS"] = "rows";
    _EGridMethod["SQUARES"] = "squares";
})(_EGridMethod || (_EGridMethod = {}));
/**
* Creates positions in a grid pattern, and returns the list (or list of lists) of new positions.
* @param __model__
* @param origin XYZ coordinates as a list of three numbers.
* @param size Size of grid. If number, assume square grid of that length; if list of two numbers, x and y lengths respectively.
* @param num_positions Number of positions.
* @param method Enum, define the way the coords will be return as lists.
* If integer, same number for x and y; if list of two numbers, number for x and y respectively.
* @returns Entities, a list of positions, or a list of lists of positions (depending on the 'method' setting).
* @example coordinates1 = pattern.Grid([0,0,0], 10, 3)
* @example_info Creates a list of 9 XYZ coordinates on a 3x3 square grid of length 10.
* @example coordinates1 = pattern.Grid([0,0,0], [10,20], [2,4])
* @example_info Creates a list of 8 XYZ coordinates on a 2x4 grid of length 10 by 20.
*/
function Grid(__model__, origin, size, num_positions, method) {
    // --- Error Check ---
    var fn_name = 'pattern.Grid';
    Object(_check_args__WEBPACK_IMPORTED_MODULE_0__["checkCommTypes"])(fn_name, 'origin', origin, [_check_args__WEBPACK_IMPORTED_MODULE_0__["TypeCheckObj"].isCoord, _check_args__WEBPACK_IMPORTED_MODULE_0__["TypeCheckObj"].isPlane]);
    Object(_check_args__WEBPACK_IMPORTED_MODULE_0__["checkCommTypes"])(fn_name, 'size', size, [_check_args__WEBPACK_IMPORTED_MODULE_0__["TypeCheckObj"].isNumber, _check_args__WEBPACK_IMPORTED_MODULE_0__["TypeCheckObj"].isXYlist]);
    Object(_check_args__WEBPACK_IMPORTED_MODULE_0__["checkCommTypes"])(fn_name, 'num_positions', num_positions, [_check_args__WEBPACK_IMPORTED_MODULE_0__["TypeCheckObj"].isInt, _check_args__WEBPACK_IMPORTED_MODULE_0__["TypeCheckObj"].isXYlistInt]);
    // --- Error Check ---
    // create the matrix one time
    var matrix;
    var origin_is_plane = Object(_libs_geo_info_id__WEBPACK_IMPORTED_MODULE_2__["getArrDepth"])(origin) === 2;
    if (origin_is_plane) {
        matrix = Object(_libs_geom_matrix__WEBPACK_IMPORTED_MODULE_4__["xfromSourceTargetMatrix"])(_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_1__["XYPLANE"], origin);
    }
    // create the positions
    var posis_i = [];
    var xy_size = (Array.isArray(size) ? size : [size, size]);
    var xy_num_positions = (Array.isArray(num_positions) ? num_positions : [num_positions, num_positions]);
    var x_offset = xy_size[0] / (xy_num_positions[0] - 1);
    var y_offset = xy_size[1] / (xy_num_positions[1] - 1);
    for (var i = 0; i < xy_num_positions[1]; i++) {
        var y = (i * y_offset) - (xy_size[1] / 2);
        for (var j = 0; j < xy_num_positions[0]; j++) {
            var x = (j * x_offset) - (xy_size[0] / 2);
            var xyz = [x, y, 0];
            if (origin_is_plane) {
                xyz = Object(_libs_geom_matrix__WEBPACK_IMPORTED_MODULE_4__["multMatrix"])(xyz, matrix);
            }
            else { // we have a plane
                xyz = Object(_libs_geom_vectors__WEBPACK_IMPORTED_MODULE_3__["vecAdd"])(xyz, origin);
            }
            var posi_i = __model__.geom.add.addPosi();
            __model__.attribs.add.setPosiCoords(posi_i, xyz);
            posis_i.push(posi_i);
        }
    }
    // structure the grid of posis, and return
    var posis_i2 = [];
    if (method === _EGridMethod.FLAT) {
        return Object(_libs_geo_info_id__WEBPACK_IMPORTED_MODULE_2__["idsMakeFromIndicies"])(_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_1__["EEntType"].POSI, posis_i);
    }
    else if (method === _EGridMethod.ROWS) {
        for (var i = 0; i < xy_num_positions[1]; i++) {
            var row = [];
            for (var j = 0; j < xy_num_positions[0]; j++) {
                var index = (i * xy_num_positions[0]) + j;
                row.push(posis_i[index]);
            }
            posis_i2.push(row);
        }
    }
    else if (method === _EGridMethod.COLUMNS) {
        for (var i = 0; i < xy_num_positions[0]; i++) {
            var col = [];
            for (var j = 0; j < xy_num_positions[1]; j++) {
                var index = (j * xy_num_positions[0]) + i;
                col.push(posis_i[index]);
            }
            posis_i2.push(col);
        }
    }
    else if (method === _EGridMethod.SQUARES) {
        for (var i = 0; i < xy_num_positions[1] - 1; i++) {
            for (var j = 0; j < xy_num_positions[0] - 1; j++) {
                var index = (i * xy_num_positions[0]) + j;
                var square = [
                    posis_i[index],
                    posis_i[index + 1],
                    posis_i[index + xy_num_positions[0] + 1],
                    posis_i[index + xy_num_positions[0]]
                ];
                posis_i2.push(square);
            }
        }
    }
    return Object(_libs_geo_info_id__WEBPACK_IMPORTED_MODULE_2__["idsMakeFromIndicies"])(_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_1__["EEntType"].POSI, posis_i2);
}
// ================================================================================================
/**
 * Creates four positions in a rectangle pattern, and returns the list of new positions.
 * @param __model__
 * @param origin XYZ coordinates as a list of three numbers.
 * @param size Size of rectangle. If number, assume square of that length; if list of two numbers, x and y lengths respectively.
 * @returns Entities, a list of four positions.
 * @example coordinates1 = pattern.Rectangle([0,0,0], 10)
 * @example_info Creates a list of 4 coords, being the vertices of a 10 by 10 square.
 * @example coordinates1 = pattern.Rectangle([0,0,0], [10,20])
 * @example_info Creates a list of 4 coords, being the vertices of a 10 by 20 rectangle.
 */
function Rectangle(__model__, origin, size) {
    // --- Error Check ---
    var fn_name = 'pattern.Rectangle';
    Object(_check_args__WEBPACK_IMPORTED_MODULE_0__["checkCommTypes"])(fn_name, 'origin', origin, [_check_args__WEBPACK_IMPORTED_MODULE_0__["TypeCheckObj"].isCoord, _check_args__WEBPACK_IMPORTED_MODULE_0__["TypeCheckObj"].isPlane]);
    Object(_check_args__WEBPACK_IMPORTED_MODULE_0__["checkCommTypes"])(fn_name, 'size', size, [_check_args__WEBPACK_IMPORTED_MODULE_0__["TypeCheckObj"].isNumber, _check_args__WEBPACK_IMPORTED_MODULE_0__["TypeCheckObj"].isXYlist]);
    // --- Error Check ---
    // create the matrix one time
    var matrix;
    var origin_is_plane = Object(_libs_geo_info_id__WEBPACK_IMPORTED_MODULE_2__["getArrDepth"])(origin) === 2;
    if (origin_is_plane) {
        matrix = Object(_libs_geom_matrix__WEBPACK_IMPORTED_MODULE_4__["xfromSourceTargetMatrix"])(_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_1__["XYPLANE"], origin);
    }
    // create the positions
    var posis_i = [];
    var xy_size = (Array.isArray(size) ? size : [size, size]);
    var coords = [
        [-(xy_size[0] / 2), -(xy_size[1] / 2), 0],
        [(xy_size[0] / 2), -(xy_size[1] / 2), 0],
        [(xy_size[0] / 2), (xy_size[1] / 2), 0],
        [-(xy_size[0] / 2), (xy_size[1] / 2), 0]
    ];
    for (var _i = 0, coords_1 = coords; _i < coords_1.length; _i++) {
        var coord = coords_1[_i];
        var xyz = coord;
        if (origin_is_plane) {
            xyz = Object(_libs_geom_matrix__WEBPACK_IMPORTED_MODULE_4__["multMatrix"])(xyz, matrix);
        }
        else { // we have a plane
            xyz = Object(_libs_geom_vectors__WEBPACK_IMPORTED_MODULE_3__["vecAdd"])(xyz, origin);
        }
        var posi_i = __model__.geom.add.addPosi();
        __model__.attribs.add.setPosiCoords(posi_i, xyz);
        posis_i.push(posi_i);
    }
    // return
    return Object(_libs_geo_info_id__WEBPACK_IMPORTED_MODULE_2__["idsMakeFromIndicies"])(_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_1__["EEntType"].POSI, posis_i);
}
// ================================================================================================


/***/ }),

/***/ "./src/assets/core/modules/query.ts":
/*!******************************************!*\
  !*** ./src/assets/core/modules/query.ts ***!
  \******************************************/
/*! exports provided: _EQuerySelect, Get, Invert, Count, _neighbours, Neighbours, _ESortMethod, Sort, _EQueryEntType, Type, _IsClosed */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_EQuerySelect", function() { return _EQuerySelect; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Get", function() { return Get; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Invert", function() { return Invert; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Count", function() { return Count; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_neighbours", function() { return _neighbours; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Neighbours", function() { return Neighbours; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_ESortMethod", function() { return _ESortMethod; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Sort", function() { return Sort; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_EQueryEntType", function() { return _EQueryEntType; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Type", function() { return Type; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_IsClosed", function() { return _IsClosed; });
/* harmony import */ var _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @libs/geo-info/common */ "./src/assets/libs/geo-info/common.ts");
/* harmony import */ var _libs_geo_info_id__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @libs/geo-info/id */ "./src/assets/libs/geo-info/id.ts");
/* harmony import */ var _check_args__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./_check_args */ "./src/assets/core/modules/_check_args.ts");
/**
 * The `query` module has functions for querying entities in the the model.
 * Most of these functions all return a list of IDs of entities in the model.
 * The Count function returns the number of entities, rather than the list of entities.
 *
 * The Get() function is an important function, and is used in many modelling workflows.
 */



// TQuery should be something like this:
//
// #@name != value
// #@name1 > 10 || #@name2 < 5 && #@name3 == 'red'
// #@xyz[2] > 5
//
// ================================================================================================
// These are used by Get(), Count(), and Neighbours()
var _EQuerySelect;
(function (_EQuerySelect) {
    _EQuerySelect["POSI"] = "positions";
    _EQuerySelect["VERT"] = "vertices";
    _EQuerySelect["EDGE"] = "edges";
    _EQuerySelect["WIRE"] = "wires";
    _EQuerySelect["FACE"] = "faces";
    _EQuerySelect["POINT"] = "points";
    _EQuerySelect["PLINE"] = "polylines";
    _EQuerySelect["PGON"] = "polygons";
    _EQuerySelect["COLL"] = "collections";
    _EQuerySelect["OBJS"] = "objects";
    _EQuerySelect["TOPOS"] = "topologies";
    _EQuerySelect["ALL"] = "all";
})(_EQuerySelect || (_EQuerySelect = {}));
function _convertSelectToEEntTypeStr(select) {
    switch (select) {
        case _EQuerySelect.POSI:
            return _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].POSI;
        case _EQuerySelect.VERT:
            return _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].VERT;
        case _EQuerySelect.EDGE:
            return _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].EDGE;
        case _EQuerySelect.WIRE:
            return _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].WIRE;
        case _EQuerySelect.FACE:
            return _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].FACE;
        case _EQuerySelect.POINT:
            return _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].POINT;
        case _EQuerySelect.PLINE:
            return _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].PLINE;
        case _EQuerySelect.PGON:
            return _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].PGON;
        case _EQuerySelect.COLL:
            return _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].COLL;
        case _EQuerySelect.OBJS:
            return [
                _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].POINT,
                _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].PLINE,
                _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].PGON
            ];
        case _EQuerySelect.TOPOS:
            return [
                _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].VERT,
                _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].EDGE,
                _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].WIRE,
                _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].FACE
            ];
        case _EQuerySelect.ALL:
            return [
                _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].POSI,
                _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].VERT,
                _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].EDGE,
                _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].WIRE,
                _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].FACE,
                _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].POINT,
                _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].PLINE,
                _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].PGON,
                _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].COLL
            ];
        default:
            throw new Error('Query select parameter not recognised.');
    }
}
// ================================================================================================
function _get(__model__, select_ent_types, ents_arr, query_expr) {
    if (!Array.isArray(select_ent_types)) {
        var select_ent_type_1 = select_ent_types;
        // get the list of entities
        var found_entities_i = [];
        if (ents_arr === null || ents_arr === undefined) {
            found_entities_i.push.apply(found_entities_i, __model__.geom.query.getEnts(select_ent_type_1, false));
        }
        else {
            if (ents_arr.length === 0) {
                return [];
            }
            else if (Object(_libs_geo_info_id__WEBPACK_IMPORTED_MODULE_1__["getArrDepth"])(ents_arr) === 1) {
                ents_arr = [ents_arr];
            }
            for (var _i = 0, ents_arr_1 = ents_arr; _i < ents_arr_1.length; _i++) {
                var ents = ents_arr_1[_i];
                found_entities_i.push.apply(found_entities_i, __model__.geom.query.navAnyToAny(ents[0], select_ent_type_1, ents[1]));
            }
        }
        // check if the query is null
        if (query_expr === null || query_expr === undefined) {
            // sort
            return found_entities_i.map(function (entity_i) { return [select_ent_type_1, entity_i]; });
        }
        // do the query on the list of entities
        var query_result = __model__.attribs.query.queryAttribs(select_ent_type_1, query_expr, found_entities_i);
        if (query_result.length === 0) {
            return [];
        }
        return query_result.map(function (entity_i) { return [select_ent_type_1, entity_i]; });
    }
    else {
        var query_results_arr = [];
        for (var _a = 0, select_ent_types_1 = select_ent_types; _a < select_ent_types_1.length; _a++) {
            var select_ent_type = select_ent_types_1[_a];
            var ent_type_query_results = _get(__model__, select_ent_type, ents_arr, query_expr);
            for (var _b = 0, ent_type_query_results_1 = ent_type_query_results; _b < ent_type_query_results_1.length; _b++) {
                var query_result = ent_type_query_results_1[_b];
                query_results_arr.push(query_result);
            }
        }
        // sort
        return query_results_arr;
    }
}
function _compareID(ent_arr1, ent_arr2) {
    var ent_type1 = ent_arr1[0], index1 = ent_arr1[1];
    var ent_type2 = ent_arr2[0], index2 = ent_arr2[1];
    if (ent_type1 !== ent_type2) {
        return ent_type1 - ent_type2;
    }
    if (index1 !== index2) {
        return index1 - index2;
    }
    return 0;
}
/**
 * Returns a list of entities based on a query expression. The list will be ordered by entity ID, in descending order
 * The result will always be a list of entities, even if there is only one entity.
 * In a case where you expect only one entity, remember to get the first item in the list.
 * ~
 * The query expression should use the following format: #@name == value,
 * where 'name' is the attribute name, and 'value' is the attribute value that you are searching for.
 * ~
 * If the attribute value is a string, then in must be in quotes, as follows: #@name == 'str_value'.
 * The '==' is the comparison operator. The other comparison operators are: !=, >, >=, <, =<.
 * ~
 * Entities can be search using multiple query expressions, as follows:  #@name1 == value1 &&  #@name2 == value2.
 * Query expressions can be combined with either && (and) and || (or), where
 * && takes precedence over ||.
 *
 * @param __model__
 * @param select Enum, specifies what type of entities will be returned.
 * @param entities List of entities to be searched. If 'null' (without quotes), all entities in the model will be searched.
 * @param query_expr Attribute condition. If 'null' (without quotes), no condition is set; all found entities are returned.
 * @returns Entities, a list of entities that match the type specified in 'select' and the conditions specified in 'query_expr'.
 * @example positions = query.Get(positions, polyline1, #@xyz[2]>10)
 * @example_info Returns a list of positions that are part of polyline1 where the z-coordinate is more than 10.
 * @example positions = query.Get(positions, null, #@xyz[2]>10)
 * @example_info Returns a list of positions in the model where the z-coordinate is more than 10.
 * @example positions = query.Get(positions, polyline1, null)
 * @example_info Returns a list of all of the positions that are part of polyline1.
 * @example polylines = query.Get(polylines, position1, null)
 * @example_info Returns a list of all of the polylines that use position1.
 * @example collections = query.Get(collections, null, #@type=="floors")
 * @example_info Returns a list of all the collections that have an attribute called "type" with a value "floors".
 */
function Get(__model__, select, entities, query_expr) {
    // --- Error Check ---
    var ents_arr = null;
    if (entities !== null && entities !== undefined) {
        ents_arr = Object(_check_args__WEBPACK_IMPORTED_MODULE_2__["checkIDs"])('query.Get', 'entities', entities, [_check_args__WEBPACK_IMPORTED_MODULE_2__["IDcheckObj"].isID, _check_args__WEBPACK_IMPORTED_MODULE_2__["IDcheckObj"].isIDList], null);
    }
    // TODO add a condition called isNull for entities
    // TODO check the query string
    // --- Error Check ---
    var select_ent_types = _convertSelectToEEntTypeStr(select);
    var found_ents_arr = _get(__model__, select_ent_types, ents_arr, query_expr);
    if (found_ents_arr.length === 0) {
        return [];
    }
    // sort entities
    found_ents_arr.sort(_compareID);
    // remove duplicates
    var found_ents_arr_no_dups = [found_ents_arr[0]];
    for (var i = 1; i < found_ents_arr.length; i++) {
        var current = found_ents_arr[i];
        var previous = found_ents_arr[i - 1];
        if (!(current[0] === previous[0] && current[1] === previous[1])) {
            found_ents_arr_no_dups.push(found_ents_arr[i]);
        }
    }
    return Object(_libs_geo_info_id__WEBPACK_IMPORTED_MODULE_1__["idsMake"])(found_ents_arr_no_dups);
}
// ================================================================================================
// ================================================================================================
function _invert(__model__, select_ent_types, ents_arr) {
    if (!Array.isArray(select_ent_types)) {
        var select_ent_type_2 = select_ent_types;
        // get the ents to exclude
        if (!Array.isArray(ents_arr[0])) {
            ents_arr = [ents_arr];
        }
        var excl_ents_i = ents_arr
            .filter(function (ent_arr) { return ent_arr[0] === select_ent_type_2; }).map(function (ent_arr) { return ent_arr[1]; });
        // get the list of entities
        var found_entities_i = [];
        var ents_i = __model__.geom.query.getEnts(select_ent_type_2, false);
        for (var _i = 0, ents_i_1 = ents_i; _i < ents_i_1.length; _i++) {
            var ent_i = ents_i_1[_i];
            if (excl_ents_i.indexOf(ent_i) === -1) {
                found_entities_i.push(ent_i);
            }
        }
        return found_entities_i.map(function (entity_i) { return [select_ent_type_2, entity_i]; });
    }
    else {
        var query_results_arr = [];
        for (var _a = 0, select_ent_types_2 = select_ent_types; _a < select_ent_types_2.length; _a++) {
            var select_ent_type = select_ent_types_2[_a];
            var ent_type_query_results = _invert(__model__, select_ent_type, ents_arr);
            for (var _b = 0, ent_type_query_results_2 = ent_type_query_results; _b < ent_type_query_results_2.length; _b++) {
                var query_result = ent_type_query_results_2[_b];
                query_results_arr.push(query_result);
            }
        }
        return query_results_arr;
    }
}
/**
 * Returns a list of entities excluding the specified entities.
 * @param __model__
 * @param select Enum, specifies what type of entities will be returned.
 * @param entities List of entities to be excluded.
 * @returns Entities, a list of entities that match the type specified in 'select'.
 * @example objects = query.Get(objects, polyline1, null)
 * @example_info Returns a list of all the objects in the model except polyline1.
 */
function Invert(__model__, select, entities) {
    // --- Error Check ---
    var ents_arr = null;
    if (entities !== null && entities !== undefined) {
        ents_arr = Object(_check_args__WEBPACK_IMPORTED_MODULE_2__["checkIDs"])('query.Get', 'entities', entities, [_check_args__WEBPACK_IMPORTED_MODULE_2__["IDcheckObj"].isID, _check_args__WEBPACK_IMPORTED_MODULE_2__["IDcheckObj"].isIDList], null);
    }
    // --- Error Check ---
    var select_ent_types = _convertSelectToEEntTypeStr(select);
    var found_ents_arr = _invert(__model__, select_ent_types, ents_arr);
    return Object(_libs_geo_info_id__WEBPACK_IMPORTED_MODULE_1__["idsMake"])(found_ents_arr);
}
// ================================================================================================
/**
 * Returns the number of entities based on a query expression.
 * The query expression should use the following format: #@name == value,
 * where 'name' is the attribute name, and 'value' is the attribute value.
 * If the attribute value is a string, then in must be in qoutes, as follows: #@name == 'str_value'.
 * The '==' is the comparison operator. The other comparison operators are: !=, >, >=, <, =<.
 * Entities can be search using multiple query expressions, as follows:  #@name1 == value1 &&  #@name2 == value2.
 * Query expressions can be combine with either && (and) and || (or), where
 * && takes precedence over ||.
 *
 * @param __model__
 * @param select Enum, specifies what type of entities are to be counted.
 * @param entities List of entities to be searched. If 'null' (without quotes), list of all entities in the model.
 * @param query_expr Attribute condition. If 'null' (without quotes), no condition is set; list of all search entities is returned.
 * @returns Number of entities.
 * @example num_ents = query.Count(positions, polyline1, #@xyz[2]>10)
 * @example_info Returns the number of positions defined by polyline1 where the z-coordinate is more than 10.
 */
function Count(__model__, select, entities, query_expr) {
    // --- Error Check ---
    // if (entities !== null && entities !== undefined) {
    //     checkIDs('query.Count', 'entities', entities, [IDcheckObj.isID, IDcheckObj.isIDList], null);
    // }
    // --- Error Check ---
    return Get(__model__, select, entities, query_expr).length; // Check done in Get
}
// ================================================================================================
function _neighbours(__model__, select_ent_types, ents_arr) {
    if (!Array.isArray(select_ent_types)) {
        var select_ent_type_3 = select_ent_types;
        if (!Array.isArray(ents_arr[0])) {
            ents_arr = [ents_arr];
        }
        var all_nbor_ents_i_1 = new Set();
        for (var _i = 0, ents_arr_2 = ents_arr; _i < ents_arr_2.length; _i++) {
            var ents = ents_arr_2[_i];
            var _a = ents, ent_type = _a[0], index = _a[1];
            var nbor_ents_i = __model__.geom.query.neighbours(ent_type, select_ent_type_3, index);
            nbor_ents_i.forEach(function (nbor_ent_i) { return all_nbor_ents_i_1.add(nbor_ent_i); });
        }
        return Array.from(all_nbor_ents_i_1).map(function (nbor_ent_i) { return [select_ent_type_3, nbor_ent_i]; });
    }
    else {
        var query_results = [];
        for (var _b = 0, select_ent_types_3 = select_ent_types; _b < select_ent_types_3.length; _b++) {
            var select_ent_type = select_ent_types_3[_b];
            query_results.push.apply(query_results, _neighbours(__model__, select_ent_type, ents_arr));
        }
        return query_results;
    }
}
/**
* Returns a list of welded neighbours of any entity
* @param __model__
* @param select Enum, select the types of neighbours to return
* @param entities List of entities.
* @returns Entities, a list of welded neighbours
* @example mod.Neighbours([polyline1,polyline2,polyline3])
* @example_info Returns list of entities that are welded to polyline1 and polyline2.
*/
function Neighbours(__model__, select, entities) {
    // --- Error Check ---
    var ents_arr = null;
    if (entities !== null && entities !== undefined) {
        ents_arr = Object(_check_args__WEBPACK_IMPORTED_MODULE_2__["checkIDs"])('query.Get', 'entities', entities, [_check_args__WEBPACK_IMPORTED_MODULE_2__["IDcheckObj"].isID, _check_args__WEBPACK_IMPORTED_MODULE_2__["IDcheckObj"].isIDList], null);
    }
    // --- Error Check ---
    var select_ent_types = _convertSelectToEEntTypeStr(select);
    var found_ents_arr = _neighbours(__model__, select_ent_types, ents_arr);
    return Object(_libs_geo_info_id__WEBPACK_IMPORTED_MODULE_1__["idsMake"])(found_ents_arr);
}
// ================================================================================================
function _sort(__model__, ents_arr, sort_expr, method) {
    // get the list of ents_i
    var ent_type = ents_arr[0][0];
    var ents_i = ents_arr.filter(function (ent_arr) { return ent_arr[0] === ent_type; }).map(function (ent_arr) { return ent_arr[1]; });
    // check if the sort expression is null
    if (sort_expr === null || sort_expr === undefined) {
        ents_i.sort();
        if (method === _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["ESort"].ASCENDING) {
            ents_i.reverse();
        }
        return ents_i.map(function (entity_i) { return [ent_type, entity_i]; });
    }
    // do the sort on the list of entities
    var sort_result = __model__.attribs.query.sortByAttribs(ent_type, ents_i, sort_expr, method);
    return sort_result.map(function (entity_i) { return [ent_type, entity_i]; });
}
var _ESortMethod;
(function (_ESortMethod) {
    _ESortMethod["DESCENDING"] = "descending";
    _ESortMethod["ASCENDING"] = "ascending";
})(_ESortMethod || (_ESortMethod = {}));
/**
 * Sorts entities based on a sort expression.
 * The sort expression should use the following format: #@name, where 'name' is the attribute name.
 * Entities can be sorted using multiple sort expresssions as follows: #@name1 && #@name2.
 * If the attribute is a list, and index can also be specified as follows: #@name1[index].
 * @param __model__
 * @param entities List of two or more entities to be sorted, all of the same entity type.
 * @param sort_expr Attribute condition. If 'null' (without quotes), entities will be sorted based on their ID.
 * @param method Enum, sort descending or ascending.
 * @returns Entities, a list of sorted entities.
 * @example sorted_list = query.Sort( [pos1, pos2, pos3], #@xyz[2], descending)
 * @example_info Returns a list of three positions, sorted according to the descending z value.
 */
function Sort(__model__, entities, sort_expr, method) {
    // --- Error Check ---
    var ents_arr = Object(_check_args__WEBPACK_IMPORTED_MODULE_2__["checkIDs"])('query.Sort', 'entities', entities, [_check_args__WEBPACK_IMPORTED_MODULE_2__["IDcheckObj"].isIDList], null);
    // TODO check the sort expression
    // --- Error Check ---
    var sort_method = (method === _ESortMethod.DESCENDING) ? _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["ESort"].DESCENDING : _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["ESort"].ASCENDING;
    var sorted_ents_arr = _sort(__model__, ents_arr, sort_expr, sort_method);
    return Object(_libs_geo_info_id__WEBPACK_IMPORTED_MODULE_1__["idsMake"])(sorted_ents_arr);
}
// ================================================================================================
function _isClosed(__model__, ents_arr) {
    if (!Array.isArray(ents_arr[0])) {
        var _a = ents_arr, ent_type = _a[0], index = _a[1];
        if (ent_type === _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].PGON) {
            return true;
        }
        else if (ent_type !== _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].WIRE && ent_type !== _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].PLINE) {
            return false;
        }
        var wire_i = index;
        if (ent_type === _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].PLINE) {
            wire_i = __model__.geom.query.navPlineToWire(index);
        }
        return __model__.geom.query.istWireClosed(wire_i);
    }
    else {
        return ents_arr.map(function (ents) { return _isClosed(__model__, ents); });
    }
}
var _EQueryEntType;
(function (_EQueryEntType) {
    _EQueryEntType["IS_POSI"] = "is_position";
    _EQueryEntType["IS_USED_POSI"] = "is_used_posi";
    _EQueryEntType["IS_UNUSED_POSI"] = "is_unused_posi";
    _EQueryEntType["IS_VERT"] = "is_vertex";
    _EQueryEntType["IS_EDGE"] = "is_edge";
    _EQueryEntType["IS_WIRE"] = "is_wire";
    _EQueryEntType["IS_FACE"] = "is_face";
    _EQueryEntType["IS_POINT"] = "is_point";
    _EQueryEntType["IS_PLINE"] = "is_polyline";
    _EQueryEntType["IS_PGON"] = "is_polygon";
    _EQueryEntType["IS_COLL"] = "is_collection";
    _EQueryEntType["IS_OBJ"] = "is_object";
    _EQueryEntType["IS_TOPO"] = "is_topology";
    _EQueryEntType["IS_POINT_TOPO"] = "is_point_topology";
    _EQueryEntType["IS_PLINE_TOPO"] = "is_polyline_topology";
    _EQueryEntType["IS_PGON_TOPO"] = "is_polygon_topology";
    _EQueryEntType["IS_OPEN"] = "is_open";
    _EQueryEntType["IS_CLOSED"] = "is_closed";
    _EQueryEntType["IS_HOLE"] = "is_hole";
    _EQueryEntType["HAS_HOLES"] = "has_holes";
    _EQueryEntType["HAS_NO_HOLES"] = "has_no_holes";
})(_EQueryEntType || (_EQueryEntType = {}));
function _isUsedPosi(__model__, ent_arr) {
    var ent_type = ent_arr[0], index = ent_arr[1];
    if (ent_type !== _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].POSI) {
        return false;
    }
    var verts_i = __model__.geom.query.navPosiToVert(index);
    if (verts_i === undefined || verts_i === null) {
        return false;
    }
    return verts_i.length > 0;
}
function _isObj(__model__, ent_arr) {
    var ent_type = ent_arr[0], index = ent_arr[1];
    if (ent_type === _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].POINT || ent_type === _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].PLINE || ent_type === _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].PGON) {
        return true;
    }
    return false;
}
function _isTopo(__model__, ent_arr) {
    var ent_type = ent_arr[0], index = ent_arr[1];
    if (ent_type === _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].VERT || ent_type === _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].EDGE || ent_type === _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].WIRE || ent_type === _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].FACE) {
        return true;
    }
    return false;
}
function _isPointTopo(__model__, ent_arr) {
    var ent_type = ent_arr[0], index = ent_arr[1];
    if (ent_type === _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].VERT || ent_type === _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].EDGE || ent_type === _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].WIRE || ent_type === _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].FACE) {
        var points_i = __model__.geom.query.navAnyToPoint(ent_type, index);
        if (points_i !== undefined && points_i !== null && points_i.length) {
            return true;
        }
    }
    return false;
}
function _isPlineTopo(__model__, ent_arr) {
    var ent_type = ent_arr[0], index = ent_arr[1];
    if (ent_type === _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].VERT || ent_type === _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].EDGE || ent_type === _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].WIRE || ent_type === _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].FACE) {
        var plines_i = __model__.geom.query.navAnyToPline(ent_type, index);
        if (plines_i !== undefined && plines_i !== null && plines_i.length) {
            return true;
        }
    }
    return false;
}
function _isPgonTopo(__model__, ent_arr) {
    var ent_type = ent_arr[0], index = ent_arr[1];
    if (ent_type === _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].VERT || ent_type === _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].EDGE || ent_type === _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].WIRE || ent_type === _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].FACE) {
        var pgons_i = __model__.geom.query.navAnyToPgon(ent_type, index);
        if (pgons_i !== undefined && pgons_i !== null && pgons_i.length) {
            return true;
        }
    }
    return false;
}
function _isClosed2(__model__, ent_arr) {
    var ent_type = ent_arr[0], index = ent_arr[1];
    if (ent_type === _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].PGON) {
        return true;
    }
    else if (ent_type !== _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].WIRE && ent_type !== _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].PLINE) {
        return false;
    }
    var wire_i = index;
    if (ent_type === _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].PLINE) {
        wire_i = __model__.geom.query.navPlineToWire(index);
    }
    return __model__.geom.query.istWireClosed(wire_i);
}
function _isHole(__model__, ent_arr) {
    var ent_type = ent_arr[0], index = ent_arr[1];
    if (ent_type !== _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].WIRE) {
        return false;
    }
    var face_i = __model__.geom.query.navWireToFace(index);
    if (face_i === undefined || face_i === null) {
        return false;
    }
    var wires_i = __model__.geom.query.navFaceToWire(face_i);
    return wires_i.indexOf(index) > 0;
}
function _hasNoHoles(__model__, ent_arr) {
    var ent_type = ent_arr[0], index = ent_arr[1];
    if (ent_type !== _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].FACE && ent_type !== _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].PGON) {
        return false;
    }
    var face_i = index;
    if (ent_type === _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].PGON) {
        face_i = __model__.geom.query.navPgonToFace(index);
    }
    var wires_i = __model__.geom.query.navFaceToWire(face_i);
    return wires_i.length === 1;
}
function _type(__model__, ents_arr, query_ent_type) {
    if (Object(_libs_geo_info_id__WEBPACK_IMPORTED_MODULE_1__["getArrDepth"])(ents_arr) === 1) {
        var ent_arr = ents_arr;
        var ent_type = ent_arr[0], _ = ent_arr[1];
        switch (query_ent_type) {
            case _EQueryEntType.IS_POSI:
                return ent_type === _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].POSI;
            case _EQueryEntType.IS_USED_POSI:
                return _isUsedPosi(__model__, ent_arr);
            case _EQueryEntType.IS_UNUSED_POSI:
                return !_isUsedPosi(__model__, ent_arr);
            case _EQueryEntType.IS_VERT:
                return ent_type === _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].VERT;
            case _EQueryEntType.IS_EDGE:
                return ent_type === _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].EDGE;
            case _EQueryEntType.IS_WIRE:
                return ent_type === _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].WIRE;
            case _EQueryEntType.IS_FACE:
                return ent_type === _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].FACE;
            case _EQueryEntType.IS_POINT:
                return ent_type === _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].POINT;
            case _EQueryEntType.IS_PLINE:
                return ent_type === _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].PLINE;
            case _EQueryEntType.IS_PGON:
                return ent_type === _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].PGON;
            case _EQueryEntType.IS_COLL:
                return ent_type === _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].COLL;
            case _EQueryEntType.IS_OBJ:
                return _isObj(__model__, ent_arr);
            case _EQueryEntType.IS_TOPO:
                return _isTopo(__model__, ent_arr);
            case _EQueryEntType.IS_POINT_TOPO:
                return _isPointTopo(__model__, ent_arr);
            case _EQueryEntType.IS_PLINE_TOPO:
                return _isPlineTopo(__model__, ent_arr);
            case _EQueryEntType.IS_PGON_TOPO:
                return _isPgonTopo(__model__, ent_arr);
            case _EQueryEntType.IS_OPEN:
                return !_isClosed2(__model__, ent_arr);
            case _EQueryEntType.IS_CLOSED:
                return _isClosed2(__model__, ent_arr);
            case _EQueryEntType.IS_HOLE:
                return _isHole(__model__, ent_arr);
            case _EQueryEntType.HAS_HOLES:
                return !_hasNoHoles(__model__, ent_arr);
            case _EQueryEntType.HAS_NO_HOLES:
                return _hasNoHoles(__model__, ent_arr);
            default:
                break;
        }
    }
    else {
        return ents_arr.map(function (ent_arr) { return _type(__model__, ent_arr, query_ent_type); });
    }
}
/**
 * Checks the type of an entity.
 * ~
 * For is_used_posi, returns true if the entity is a posi, and it is used by at least one vertex.
 * For is_unused_posi, it returns the opposite of is_used_posi.
 * For is_object, returns true if the entity is a point, a polyline, or a polygon.
 * For is_topology, returns true if the entity is a vertex, an edge, a wire, or a face.
 * For is_point_topology, is_polyline_topology, and is_polygon_topology, returns true
 * if the entity is a topological entity, and it is part of an object of the specified type.
 * ~
 * For is_open, returns true if the entity is a wire or polyline and is open. For is_closed, it returns the opposite of is_open.
 * For is_hole, returns ture if the entity is a wire, and it defines a hole in a face.
 * For has_holes, returns true if the entity is a face or polygon, and it has holes.
 * For has_no_holes, it returns the opposite of has_holes.
 *
 * @param __model__
 * @param entities An entity, or a list of entities.
 * @param query_ent_type Enum, select the conditions to test agains.
 * @returns Boolean or list of boolean in input sequence.
 * @example query.Type([polyline1, polyline2, polygon1], is_polyline )
 * @example_info Returns a list [true, true, false] if polyline1 and polyline2 are polylines but polygon1 is not a polyline.
 */
function Type(__model__, entities, query_ent_type) {
    // --- Error Check ---
    var fn_name = 'query.Type';
    var ents_arr = Object(_check_args__WEBPACK_IMPORTED_MODULE_2__["checkIDs"])(fn_name, 'entities', entities, [_check_args__WEBPACK_IMPORTED_MODULE_2__["IDcheckObj"].isID, _check_args__WEBPACK_IMPORTED_MODULE_2__["IDcheckObj"].isIDList], null);
    // --- Error Check ---
    return _type(__model__, ents_arr, query_ent_type);
}
// TODO IS_PLANAR
// TODO IS_QUAD
// ================================================================================================
/**
 * Checks if polyline(s) or wire(s) are closed.
 * ~
 * WARNING: This function has been deprecated. Plese use the query.Type() function instead.
 *
 * @param __model__
 * @param lines Wires, polylines, or polygons.
 * @returns Boolean or list of boolean in input sequence of lines.
 * @example mod.IsClosed([polyline1,polyline2,polyline3])
 * @example_info Returns list [true,true,false] if polyline1 and polyline2 are closed but polyline3 is open.
 */
function _IsClosed(__model__, lines) {
    // --- Error Check ---
    var ents_arr = Object(_check_args__WEBPACK_IMPORTED_MODULE_2__["checkIDs"])('query.isClosed', 'lines', lines, [_check_args__WEBPACK_IMPORTED_MODULE_2__["IDcheckObj"].isID, _check_args__WEBPACK_IMPORTED_MODULE_2__["IDcheckObj"].isIDList], [_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].PLINE, _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].WIRE, _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].PGON]);
    // --- Error Check ---
    return _isClosed(__model__, ents_arr);
}


/***/ }),

/***/ "./src/assets/core/modules/render.ts":
/*!*******************************************!*\
  !*** ./src/assets/core/modules/render.ts ***!
  \*******************************************/
/*! exports provided: _ESide, _EColours, GlassMaterial, BasicMaterial, LambertMaterial, PhongMaterial, StandardlMaterial, PhysicalMaterial */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_ESide", function() { return _ESide; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_EColours", function() { return _EColours; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GlassMaterial", function() { return GlassMaterial; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "BasicMaterial", function() { return BasicMaterial; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LambertMaterial", function() { return LambertMaterial; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PhongMaterial", function() { return PhongMaterial; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "StandardlMaterial", function() { return StandardlMaterial; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PhysicalMaterial", function() { return PhysicalMaterial; });
/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! three */ "./node_modules/three/build/three.module.js");
/**
 * The `render` module has functions for defining various settings for the 3D viewer.
 * These settings are saved as attributes at the model level.
 * These include things like creating more advanced materials.
 * For more informtion, see the threejs docs: https://threejs.org/
 */

var _ESide;
(function (_ESide) {
    _ESide["FRONT"] = "front";
    _ESide["BACK"] = "back";
    _ESide["BOTH"] = "both";
})(_ESide || (_ESide = {}));
function _convertSelectESideToNum(select) {
    switch (select) {
        case _ESide.FRONT:
            return three__WEBPACK_IMPORTED_MODULE_0__["FrontSide"];
        case _ESide.BACK:
            return three__WEBPACK_IMPORTED_MODULE_0__["BackSide"];
        default:
            return three__WEBPACK_IMPORTED_MODULE_0__["DoubleSide"];
    }
}
var _EColours;
(function (_EColours) {
    _EColours["NO_VERT_COLOURS"] = "none";
    _EColours["VERT_COLOURS"] = "apply_rgb";
})(_EColours || (_EColours = {}));
function _convertSelectEColoursToNum(select) {
    switch (select) {
        case _EColours.NO_VERT_COLOURS:
            return three__WEBPACK_IMPORTED_MODULE_0__["NoColors"];
        default:
            return three__WEBPACK_IMPORTED_MODULE_0__["VertexColors"];
    }
}
var _EMaterialType;
(function (_EMaterialType) {
    _EMaterialType["BASIC"] = "MeshBasicMaterial";
    _EMaterialType["LAMBERT"] = "MeshLambertMaterial";
    _EMaterialType["PHONG"] = "MeshPhongMaterial";
    _EMaterialType["STANDARD"] = "MeshStandardMaterial";
    _EMaterialType["PHYSICAL"] = "MeshPhysicalMaterial";
})(_EMaterialType || (_EMaterialType = {}));
// ================================================================================================
/**
 * Creates a glass material with an opacity setting. The material will default to a Phong material.
 * ~
 * In order to assign a material to polygons in the model, a polygon attribute called 'material'
 * needs to be created. The value for each polygon must either be null, or must be a material name.
 *
 * @param name The name of the material.
 * @param opacity The opacity of the glass, between 0 (totally transparent) and 1 (totally opaque).
 * @returns void
 */
function GlassMaterial(__model__, name, opacity) {
    opacity = _clamp01(opacity);
    var transparent = opacity < 1;
    var settings_obj = {
        type: _EMaterialType.PHONG,
        opacity: opacity,
        transparent: transparent,
        shininess: 90,
        color: new three__WEBPACK_IMPORTED_MODULE_0__["Color"](1, 1, 1),
        emissive: new three__WEBPACK_IMPORTED_MODULE_0__["Color"](0, 0, 0),
        side: three__WEBPACK_IMPORTED_MODULE_0__["DoubleSide"]
    };
    _setMaterialModelAttrib(__model__, name, settings_obj);
}
// ================================================================================================
/**
 * Creates a Basic material and saves it in the model attributes.
 * ~
 * [See the threejs docs](https://threejs.org/docs/#api/en/materials/MeshBasicMaterial)
 * ~
 * The colour pf teh material can either ignore or apply the vertex rgb colours.
 * If 'apply' id selected, then the actual colour will be a combination of the material colour
 * and the vertex colours, as specified by the a vertex attribute called 'rgb'.
 * In such a case, if material colour is set to white, then it will
 * have no effect, and the colour will be defined by the vertex [r,g,b] values.
 * ~
 * Additional material properties can be set by calling the functions for the more advanced materials.
 * These include LambertMaterial, PhongMaterial, StandardMaterial, and Physical Material.
 * Each of these more advanced materials allows you to specify certain additional settings.
 * ~
 * In order to assign a material to polygons in the model, a polygon attribute called 'material'.
 * needs to be created. The value for each polygon must either be null, or must be a material name.
 *
 * @param name The name of the material.
 * @param colour The diffuse colour, as [r, g, b] values between 0 and 1. White is [1, 1, 1].
 * @param opacity The opacity of the glass, between 0 (totally transparent) and 1 (totally opaque).
 * @param select_side Enum, select front, back, or both.
 * @param select_vert_colours Enum, select whether to use vertex colours if they exist.
 * @returns void
 */
function BasicMaterial(__model__, name, colour, opacity, select_side, select_vert_colours) {
    var side = _convertSelectESideToNum(select_side);
    var vert_colours = _convertSelectEColoursToNum(select_vert_colours);
    opacity = _clamp01(opacity);
    var transparent = opacity < 1;
    _clampArr01(colour);
    var settings_obj = {
        type: _EMaterialType.BASIC,
        side: side,
        vertexColors: vert_colours,
        opacity: opacity,
        transparent: transparent,
        color: _colour(colour)
    };
    _setMaterialModelAttrib(__model__, name, settings_obj);
}
// ================================================================================================
/**
 * Creates a Lambert material and saves it in the model attributes.
 * If a Basic material with the same name already exits, these settings will be added to the basic material.
 * ~
 * [See the threejs docs](https://threejs.org/docs/#api/en/materials/MeshLambertMaterial)
 * ~
 * In order to assign a material to polygons in the model, a polygon attribute called 'material'
 * needs to be created. The value for each polygon must either be null, or must be a material name.
 *
 * @param name The name of the material.
 * @param emissive The emissive colour, as [r, g, b] values between 0 and 1. White is [1, 1, 1].
 * @returns void
 */
function LambertMaterial(__model__, name, emissive) {
    _clampArr01(emissive);
    var settings_obj = {
        type: _EMaterialType.LAMBERT,
        emissive: _colour(emissive)
    };
    _setMaterialModelAttrib(__model__, name, settings_obj);
}
// ================================================================================================
/**
 * Creates a Phong material and saves it in the model attributes.
 * If a Basic material with the same name already exits, these settings will be added to the basic material.
 * ~
 * [See the threejs docs](https://threejs.org/docs/#api/en/materials/MeshPhongMaterial)
 * ~
 * In order to assign a material to polygons in the model, a polygon attribute called 'material'
 * needs to be created. The value for each polygon must either be null, or must be a material name.
 *
 * @param name The name of the material.
 * @param emissive The emissive colour, as [r, g, b] values between 0 and 1. White is [1, 1, 1].
 * @param specular The specular colour, as [r, g, b] values between 0 and 1. White is [1, 1, 1].
 * @param shininess The shininess, between 0 and 100.
 * @returns void
 */
function PhongMaterial(__model__, name, emissive, specular, shininess) {
    _clampArr01(emissive);
    _clampArr01(specular);
    shininess = Math.floor(_clamp0100(shininess));
    var settings_obj = {
        type: _EMaterialType.PHONG,
        emissive: _colour(emissive),
        specular: _colour(specular),
        shininess: shininess
    };
    _setMaterialModelAttrib(__model__, name, settings_obj);
}
// ================================================================================================
/**
 * Creates a Standard material and saves it in the model attributes.
 * If a Basic material with the same name already exits, these settings will be added to the basic material.
 * ~
 * [See the threejs docs](https://threejs.org/docs/#api/en/materials/MeshStandardMaterial)
 * ~
 * In order to assign a material to polygons in the model, a polygon attribute called 'material'
 * needs to be created. The value for each polygon must either be null, or must be a material name.
 *
 * @param name The name of the material.
 * @param emissive The emissive colour, as [r, g, b] values between 0 and 1. White is [1, 1, 1].
 * @param roughness The roughness, between 0 (smooth) and 1 (rough).
 * @param metalness The metalness, between 0 (non-metalic) and 1 (metalic).
 * @param reflectivity The reflectivity, between 0 (non-reflective) and 1 (reflective).
 * @returns void
 */
function StandardlMaterial(__model__, name, emissive, roughness, metalness) {
    _clampArr01(emissive);
    roughness = _clamp01(roughness);
    metalness = _clamp01(metalness);
    var settings_obj = {
        type: _EMaterialType.STANDARD,
        emissive: _colour(emissive),
        roughness: roughness,
        metalness: metalness
    };
    _setMaterialModelAttrib(__model__, name, settings_obj);
}
// ================================================================================================
/**
 * Creates a Physical material and saves it in the model attributes.
 * If a Basic material with the same name already exits, these settings will be added to the basic material.
 * ~
 * [See the threejs docs](https://threejs.org/docs/#api/en/materials/MeshPhysicalMaterial)
 * ~
 * In order to assign a material to polygons in the model, a polygon attribute called 'material'
 * needs to be created. The value for each polygon must either be null, or must be a material name.
 *
 * @param name The name of the material.
 * @param emissive The emissive colour, as [r, g, b] values between 0 and 1. White is [1, 1, 1].
 * @param roughness The roughness, between 0 (smooth) and 1 (rough).
 * @param metalness The metalness, between 0 (non-metalic) and 1 (metalic).
 * @param reflectivity The reflectivity, between 0 (non-reflective) and 1 (reflective).
 * @returns void
 */
function PhysicalMaterial(__model__, name, emissive, roughness, metalness, reflectivity) {
    _clampArr01(emissive);
    roughness = _clamp01(roughness);
    metalness = _clamp01(metalness);
    reflectivity = _clamp01(reflectivity);
    var settings_obj = {
        type: _EMaterialType.PHYSICAL,
        emissive: _colour(emissive),
        roughness: roughness,
        metalness: metalness,
        reflectivity: reflectivity
    };
    _setMaterialModelAttrib(__model__, name, settings_obj);
}
// ================================================================================================
function _clamp01(val) {
    val = (val > 1) ? 1 : val;
    val = (val < 0) ? 0 : val;
    return val;
}
function _clamp0100(val) {
    val = (val > 100) ? 100 : val;
    val = (val < 0) ? 0 : val;
    return val;
}
function _clampArr01(vals) {
    for (var i = 0; i < vals.length; i++) {
        vals[i] = _clamp01(vals[i]);
    }
}
function _colour(col) {
    return new three__WEBPACK_IMPORTED_MODULE_0__["Color"](col[0], col[1], col[2]);
}
function _setMaterialModelAttrib(__model__, name, settings_obj) {
    // if the material already exists, then existing settings will be added
    // but new settings will take precedence
    if (__model__.attribs.query.hasModelAttrib(name)) {
        var exist_settings_str = __model__.attribs.query.getModelAttribValue(name);
        var exist_settings_obj = JSON.parse(exist_settings_str);
        // check that the existing material is a Basic one
        if (exist_settings_obj['type'] !== _EMaterialType.BASIC) {
            if (settings_obj['type'] !== exist_settings_obj['type']) {
                throw new Error('Error creating material: non-basic material with this name already exists.');
            }
        }
        // copy the settings from the existing material to the new material
        for (var _i = 0, _a = Object.keys(exist_settings_obj); _i < _a.length; _i++) {
            var key = _a[_i];
            if (settings_obj[key] === undefined) {
                settings_obj[key] = exist_settings_obj[key];
            }
        }
    }
    var settings_str = JSON.stringify(settings_obj);
    __model__.attribs.add.setModelAttribValue(name, settings_str);
}


/***/ }),

/***/ "./src/assets/core/modules/util.ts":
/*!*****************************************!*\
  !*** ./src/assets/core/modules/util.ts ***!
  \*****************************************/
/*! exports provided: _EIODataFormat, ImportData, ExportData, ModelInfo, ModelCheck */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_EIODataFormat", function() { return _EIODataFormat; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ImportData", function() { return ImportData; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ExportData", function() { return ExportData; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ModelInfo", function() { return ModelInfo; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ModelCheck", function() { return ModelCheck; });
/* harmony import */ var _libs_geo_info_export__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @libs/geo-info/export */ "./src/assets/libs/geo-info/export.ts");
/* harmony import */ var _libs_filesys_download__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @libs/filesys/download */ "./src/assets/libs/filesys/download.ts");
/* harmony import */ var _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @libs/geo-info/common */ "./src/assets/libs/geo-info/common.ts");
/* harmony import */ var _libs_geo_info_id__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @libs/geo-info/id */ "./src/assets/libs/geo-info/id.ts");
/**
 * The `util` module has functions for importing data into the model and
 * exporting data out of the model.
 */




// ================================================================================================
// Import / Export data types
var _EIODataFormat;
(function (_EIODataFormat) {
    _EIODataFormat["GI"] = "gi";
    _EIODataFormat["OBJ"] = "obj";
})(_EIODataFormat || (_EIODataFormat = {}));
/**
 * Imports data into the model.
 * In order to get the model data from a file, you need to define the File or URL parameter
 * in the Start node of the flowchart.
 *
 * @param model_data The model data
 * @param data_format Enum, the file format.
 * @returns A list of the positions, points, polylines, polygons and collections added to the model.
 * @example util.ImportData (file1_data, obj)
 * @example_info Imports the data from file1 (defining the .obj file uploaded in 'Start' node).
 */
function ImportData(__model__, model_data, data_format) {
    var geom_pack;
    switch (data_format) {
        case _EIODataFormat.GI:
            var gi_json = JSON.parse(model_data);
            geom_pack = __model__.setData(gi_json);
            break;
        case _EIODataFormat.OBJ:
            throw new Error('Not implemented');
            // const obj_model: GIModel = importObj(model_data);
            // geom_pack = __merge__(__model__, obj_model);
            break;
        default:
            throw new Error('Data type not recognised');
            break;
    }
    var posis_id = geom_pack.posis_i.map(function (posi_i) { return Object(_libs_geo_info_id__WEBPACK_IMPORTED_MODULE_3__["idsMake"])([_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_2__["EEntType"].POSI, posi_i]); });
    var points_id = geom_pack.points_i.map(function (point_i) { return Object(_libs_geo_info_id__WEBPACK_IMPORTED_MODULE_3__["idsMake"])([_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_2__["EEntType"].POINT, point_i]); });
    var plines_id = geom_pack.plines_i.map(function (pline_i) { return Object(_libs_geo_info_id__WEBPACK_IMPORTED_MODULE_3__["idsMake"])([_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_2__["EEntType"].PLINE, pline_i]); });
    var pgons_id = geom_pack.pgons_i.map(function (pgon_i) { return Object(_libs_geo_info_id__WEBPACK_IMPORTED_MODULE_3__["idsMake"])([_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_2__["EEntType"].PGON, pgon_i]); });
    var colls_id = geom_pack.colls_i.map(function (coll_i) { return Object(_libs_geo_info_id__WEBPACK_IMPORTED_MODULE_3__["idsMake"])([_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_2__["EEntType"].COLL, coll_i]); });
    return posis_id.concat(points_id, plines_id, pgons_id, colls_id);
}
// ================================================================================================
/**
 * Export data from the model as a file.
 * This will result in a popup in your browser, asking you to save the filel.
 * @param __model__
 * @param filename Name of the file as a string.
 * @param data_format Enum, the file format.
 * @returns Boolean.
 * @example util.ExportData ('my_model.obj', obj)
 * @example_info Exports all the data in the model as an OBJ.
 */
function ExportData(__model__, filename, data_format) {
    switch (data_format) {
        case _EIODataFormat.GI:
            var gi_data = JSON.stringify(__model__.getData());
            gi_data = gi_data.replace(/\\\"/g, '\\\\\\"'); // TODO temporary fix
            return Object(_libs_filesys_download__WEBPACK_IMPORTED_MODULE_1__["download"])(gi_data, filename);
            break;
        case _EIODataFormat.OBJ:
            var obj_data = Object(_libs_geo_info_export__WEBPACK_IMPORTED_MODULE_0__["exportObj"])(__model__);
            return Object(_libs_filesys_download__WEBPACK_IMPORTED_MODULE_1__["download"])(obj_data, filename);
            break;
        default:
            throw new Error('Data type not recognised');
            break;
    }
}
// ================================================================================================
/**
 * Returns a text summary of the contents of this model
 *
 * @param __model__
 * @returns Text that summarises what is in the model, click print to see this text.
 */
function ModelInfo(__model__) {
    return JSON.stringify({
        'geometry': {
            'num_positions': __model__.geom.query.numEnts(_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_2__["EEntType"].POSI, false),
            'num_vertices': __model__.geom.query.numEnts(_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_2__["EEntType"].VERT, false),
            'num_edges': __model__.geom.query.numEnts(_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_2__["EEntType"].EDGE, false),
            'num_wires': __model__.geom.query.numEnts(_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_2__["EEntType"].WIRE, false),
            'num_faces': __model__.geom.query.numEnts(_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_2__["EEntType"].FACE, false),
            'num_points': __model__.geom.query.numEnts(_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_2__["EEntType"].POINT, false),
            'num_polylines': __model__.geom.query.numEnts(_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_2__["EEntType"].PLINE, false),
            'num_polygons': __model__.geom.query.numEnts(_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_2__["EEntType"].PGON, false),
            'num_collections': __model__.geom.query.numEnts(_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_2__["EEntType"].COLL, false)
        },
        'attributes': {
            'position_attribs': __model__.attribs.query.getAttribNames(_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_2__["EEntType"].POSI),
            'vertex_attribs': __model__.attribs.query.getAttribNames(_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_2__["EEntType"].VERT),
            'edge_attribs': __model__.attribs.query.getAttribNames(_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_2__["EEntType"].EDGE),
            'wire_attribs': __model__.attribs.query.getAttribNames(_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_2__["EEntType"].WIRE),
            'face_attribs': __model__.attribs.query.getAttribNames(_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_2__["EEntType"].FACE),
            'point_attribs': __model__.attribs.query.getAttribNames(_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_2__["EEntType"].POINT),
            'polyline_attribs': __model__.attribs.query.getAttribNames(_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_2__["EEntType"].PLINE),
            'polygon_attribs': __model__.attribs.query.getAttribNames(_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_2__["EEntType"].PGON),
            'collection_attribs': __model__.attribs.query.getAttribNames(_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_2__["EEntType"].COLL),
            'model_attribs': __model__.attribs.query.getAttribNames(_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_2__["EEntType"].MOD)
        }
    });
}
// ================================================================================================
/**
 * Check tje internal consistency of the model.
 *
 * @param __model__
 * @returns Text that summarises what is in the model, click print to see this text.
 */
function ModelCheck(__model__) {
    var check = __model__.check();
    if (check.length > 0) {
        console.log(__model__);
        return String(check);
    }
    return 'No internal inconsistencies have been found.';
}


/***/ }),

/***/ "./src/assets/core/modules/virtual.ts":
/*!********************************************!*\
  !*** ./src/assets/core/modules/virtual.ts ***!
  \********************************************/
/*! exports provided: Ray, Plane, RayFromPlane, GetRay, GetPlane, GetBBox, VisRay, VisPlane, VisBBox */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Ray", function() { return Ray; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Plane", function() { return Plane; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RayFromPlane", function() { return RayFromPlane; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GetRay", function() { return GetRay; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GetPlane", function() { return GetPlane; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GetBBox", function() { return GetBBox; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "VisRay", function() { return VisRay; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "VisPlane", function() { return VisPlane; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "VisBBox", function() { return VisBBox; });
/* harmony import */ var _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @libs/geo-info/common */ "./src/assets/libs/geo-info/common.ts");
/* harmony import */ var _check_args__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./_check_args */ "./src/assets/core/modules/_check_args.ts");
/* harmony import */ var _libs_geo_info_id__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @libs/geo-info/id */ "./src/assets/libs/geo-info/id.ts");
/* harmony import */ var _libs_geom_vectors__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @libs/geom/vectors */ "./src/assets/libs/geom/vectors.ts");
/* harmony import */ var _calc__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./calc */ "./src/assets/core/modules/calc.ts");
/**
 * The `virtual` module has functions for creating virtual geometric constructs.
 * They are called 'virtual' due to the fact that they are not saved in the model.
 * Currently there are two types of virtual constructs: planes and rays.
 * Most of these functions neither make nor modify anything in the model.
 * The exception is the `Vis` functions, that generate some polylines and polygons in the model
 * to aid with visualizing these virtual constructs.
 */
/**
 *
 */





// ================================================================================================
/**
 * Creates a ray, centered at the origin.
 * A ray is defined by a list of two lists, as follows: [origin, direction_vector].
 *
 * @param __model__
 * @param origin Origin of ray: Position, Vertex, Point, or a list of three numbers
 * @param dir_vec Direction of Ray: Vector, or list of three numbers
 * @returns A list consisting of an origin and a vector, [origin, vector].
 * @example virtual.Ray([1,2,3],[4,3,2])
 * @example_info Creates a ray from [1,2,3] with the vector [4,3,2].
 *
 */
function Ray(__model__, origin, dir_vec) {
    // --- Error Check ---
    var fn_name = 'virtual.Ray';
    var ents_arr = Object(_check_args__WEBPACK_IMPORTED_MODULE_1__["checkCommTypes"])(fn_name, 'origin', origin, [_check_args__WEBPACK_IMPORTED_MODULE_1__["TypeCheckObj"].isOrigin]);
    Object(_check_args__WEBPACK_IMPORTED_MODULE_1__["checkCommTypes"])(fn_name, 'dir_vec', dir_vec, [_check_args__WEBPACK_IMPORTED_MODULE_1__["TypeCheckObj"].isVector]);
    // --- Error Check ---
    if (!Array.isArray(origin)) {
        var _a = ents_arr, ent_type = _a[0], index = _a[1];
        var posi_i = __model__.geom.query.navAnyToPosi(ent_type, index)[0];
        origin = __model__.attribs.query.getPosiCoords(posi_i);
    }
    return [
        origin,
        Object(_libs_geom_vectors__WEBPACK_IMPORTED_MODULE_3__["vecNorm"])(dir_vec)
    ];
}
// ================================================================================================
/**
 * Creates a plane, centered at the origin.
 * A plane is define by a list of three lists, as folows: [origin, x_vector, y_vector].
 *
 * @param __model__
 * @param origin Origin of plane: Position, Vertex, Point, or a list of three numbers
 * @param x_vec X vector of the plane: List of three numbers
 * @param xy_vec A vector in the xy plane (parallel to teh x vector): List of three numbers
 * @returns A list consisting of an origin and two vectors, [origin, vector, vector].
 * @example virtual.Plane ([1,2,3],[4,3,2],[3,3,9])
 * @example_info Creates a plane with its origin positioned at [1,2,3] and two vectors [4,3,2] and [3,3,9] lie on it.
 */
function Plane(__model__, origin, x_vec, xy_vec) {
    // --- Error Check ---
    var fn_name = 'virtual.Plane';
    var ents_arr = Object(_check_args__WEBPACK_IMPORTED_MODULE_1__["checkCommTypes"])(fn_name, 'origin', origin, [_check_args__WEBPACK_IMPORTED_MODULE_1__["TypeCheckObj"].isOrigin]);
    Object(_check_args__WEBPACK_IMPORTED_MODULE_1__["checkCommTypes"])(fn_name, 'x_vec', x_vec, [_check_args__WEBPACK_IMPORTED_MODULE_1__["TypeCheckObj"].isVector]);
    Object(_check_args__WEBPACK_IMPORTED_MODULE_1__["checkCommTypes"])(fn_name, 'xy_vec', xy_vec, [_check_args__WEBPACK_IMPORTED_MODULE_1__["TypeCheckObj"].isVector]);
    // --- Error Check ---
    if (!Array.isArray(origin)) {
        var _a = ents_arr, ent_type = _a[0], index = _a[1];
        var posi_i = __model__.geom.query.navAnyToPosi(ent_type, index)[0];
        origin = __model__.attribs.query.getPosiCoords(posi_i);
    }
    return [
        origin,
        Object(_libs_geom_vectors__WEBPACK_IMPORTED_MODULE_3__["vecNorm"])(x_vec),
        Object(_libs_geom_vectors__WEBPACK_IMPORTED_MODULE_3__["vecNorm"])(Object(_libs_geom_vectors__WEBPACK_IMPORTED_MODULE_3__["vecMakeOrtho"])(xy_vec, x_vec))
    ];
}
// ================================================================================================
function _rayFromPlane(planes) {
    if (Object(_libs_geo_info_id__WEBPACK_IMPORTED_MODULE_2__["getArrDepth"])(planes) === 2) {
        var plane = planes;
        return [plane[0], Object(_libs_geom_vectors__WEBPACK_IMPORTED_MODULE_3__["vecCross"])(plane[1], plane[2])];
    }
    else {
        return planes.map(function (plane) { return _rayFromPlane(plane); });
    }
}
/**
 * Create a ray, from a plane.
 * The direction will be along the z axis.
 * A plane is define by a list of three lists, as folows: [origin, x_vector, y_vector].
 * A ray is defined by a list of two lists, as follows: [origin, direction_vector].
 *
 * @param __model__
 * @param plane Plane or list of planes.
 * @returns Ray or list of rays.
 */
function RayFromPlane(planes) {
    // --- Error Check ---
    // checkCommTypes('virtual.RayFromPlane', 'origin', planes, [TypeCheckObj.isPlane]); //TODO accept a list of planes
    // TODO allow list of planes
    // --- Error Check ---
    return _rayFromPlane(planes);
}
// ================================================================================================
function _getRayFromEdge(__model__, ent_arr) {
    var posis_i = __model__.geom.query.navAnyToPosi(ent_arr[0], ent_arr[1]);
    var xyzs = posis_i.map(function (posi_i) { return __model__.attribs.query.getPosiCoords(posi_i); });
    return [xyzs[0], Object(_libs_geom_vectors__WEBPACK_IMPORTED_MODULE_3__["vecSub"])(xyzs[1], xyzs[0])];
}
function _getRayFromFace(__model__, ent_arr) {
    var plane = _getPlane(__model__, ent_arr);
    return _rayFromPlane(plane);
}
function _getRay(__model__, ents_arr) {
    if (Object(_libs_geo_info_id__WEBPACK_IMPORTED_MODULE_2__["getArrDepth"])(ents_arr) === 1) {
        var ent_arr = ents_arr;
        if (ent_arr[0] === _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].EDGE) {
            return _getRayFromEdge(__model__, ent_arr);
        }
        else if (ent_arr[0] === _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].FACE) {
            return _getRayFromFace(__model__, ent_arr);
        }
        else { // must be a polygon
            var face_i = __model__.geom.query.navPgonToFace(ent_arr[1]);
            return _getRayFromFace(__model__, [_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].FACE, face_i]);
        }
    }
    else {
        return ents_arr.map(function (ent_arr) { return _getRay(__model__, ent_arr); });
    }
}
/**
 * Returns a ray for an edge, a face, or a polygons. For edges, it returns a ray along the edge, from teh start vertex to the end vertex
 * For a face or polygon, it returns the ray that is the z-axis of the plane.
 * ~
 * For an edge, the ray vector is not normalised. For a face or polygon, the ray vector is normalised.
 *
 * @param __model__
 * @param entities An edge, a face, or a polygon, or a list.
 * @returns The ray.
 */
function GetRay(__model__, entities) {
    // --- Error Check ---
    var ents_arr = Object(_check_args__WEBPACK_IMPORTED_MODULE_1__["checkIDs"])('virtual.GetRay', 'entities', entities, [_check_args__WEBPACK_IMPORTED_MODULE_1__["IDcheckObj"].isID, _check_args__WEBPACK_IMPORTED_MODULE_1__["IDcheckObj"].isIDList], [_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].EDGE, _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].FACE, _libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].PGON]);
    // --- Error Check ---
    return _getRay(__model__, ents_arr);
}
// ================================================================================================
function _getPlane(__model__, ents_arr) {
    if (Object(_libs_geo_info_id__WEBPACK_IMPORTED_MODULE_2__["getArrDepth"])(ents_arr) === 1) {
        var ent_arr = ents_arr;
        var posis_i = __model__.geom.query.navAnyToPosi(ent_arr[0], ent_arr[1]);
        var unique_posis_i = Array.from(new Set(posis_i));
        if (unique_posis_i.length < 3) {
            throw new Error('Too few points to calculate plane.');
        }
        var unique_xyzs = unique_posis_i.map(function (posi_i) { return __model__.attribs.query.getPosiCoords(posi_i); });
        var origin_1 = Object(_libs_geom_vectors__WEBPACK_IMPORTED_MODULE_3__["vecDiv"])(Object(_libs_geom_vectors__WEBPACK_IMPORTED_MODULE_3__["vecSum"])(unique_xyzs), unique_xyzs.length);
        // const normal: Txyz = newellNorm(unique_xyzs);
        var normal = Object(_calc__WEBPACK_IMPORTED_MODULE_4__["_normal"])(__model__, ent_arr, 1);
        var x_vec = Object(_libs_geom_vectors__WEBPACK_IMPORTED_MODULE_3__["vecNorm"])(Object(_libs_geom_vectors__WEBPACK_IMPORTED_MODULE_3__["vecFromTo"])(unique_xyzs[0], unique_xyzs[1]));
        var y_vec = Object(_libs_geom_vectors__WEBPACK_IMPORTED_MODULE_3__["vecCross"])(normal, x_vec); // must be z-axis, x-axis
        return [origin_1, x_vec, y_vec];
    }
    else {
        return ents_arr.map(function (ent_arr) { return _getPlane(__model__, ent_arr); });
    }
}
/**
 * Returns a plane from a polygon, a face, a polyline, or a wire.
 * For polylines or wires, there must be at least three non-colinear vertices.
 * ~
 * The winding order is counter-clockwise.
 * This means that if the vertices are ordered counter-clockwise relative to your point of view,
 * then the z axis of the plane will be pointing towards you.
 *
 * @param entities Any entities
 * @returns The plane.
 */
function GetPlane(__model__, entities) {
    // --- Error Check ---
    var ents_arr = Object(_check_args__WEBPACK_IMPORTED_MODULE_1__["checkIDs"])('virtual.GetPlane', 'entities', entities, [_check_args__WEBPACK_IMPORTED_MODULE_1__["IDcheckObj"].isID, _check_args__WEBPACK_IMPORTED_MODULE_1__["IDcheckObj"].isIDList], null); // takes in any
    // TODO [EEntType.PGON, EEntType.FACE, EEntType.PLINE, EEntType.WIRE]);
    // --- Error Check ---
    return _getPlane(__model__, ents_arr);
}
// ================================================================================================
function _getBoundingBox(__model__, ents_arr) {
    var posis_set_i = new Set();
    for (var _i = 0, ents_arr_1 = ents_arr; _i < ents_arr_1.length; _i++) {
        var ent_arr = ents_arr_1[_i];
        var ent_posis_i = __model__.geom.query.navAnyToPosi(ent_arr[0], ent_arr[1]);
        for (var _a = 0, ent_posis_i_1 = ent_posis_i; _a < ent_posis_i_1.length; _a++) {
            var ent_posi_i = ent_posis_i_1[_a];
            posis_set_i.add(ent_posi_i);
        }
    }
    var unique_posis_i = Array.from(posis_set_i);
    var unique_xyzs = unique_posis_i.map(function (posi_i) { return __model__.attribs.query.getPosiCoords(posi_i); });
    var corner_min = [Infinity, Infinity, Infinity];
    var corner_max = [-Infinity, -Infinity, -Infinity];
    for (var _b = 0, unique_xyzs_1 = unique_xyzs; _b < unique_xyzs_1.length; _b++) {
        var unique_xyz = unique_xyzs_1[_b];
        if (unique_xyz[0] < corner_min[0]) {
            corner_min[0] = unique_xyz[0];
        }
        if (unique_xyz[1] < corner_min[1]) {
            corner_min[1] = unique_xyz[1];
        }
        if (unique_xyz[2] < corner_min[2]) {
            corner_min[2] = unique_xyz[2];
        }
        if (unique_xyz[0] > corner_max[0]) {
            corner_max[0] = unique_xyz[0];
        }
        if (unique_xyz[1] > corner_max[1]) {
            corner_max[1] = unique_xyz[1];
        }
        if (unique_xyz[2] > corner_max[2]) {
            corner_max[2] = unique_xyz[2];
        }
    }
    return [
        [(corner_min[0] + corner_max[0]) / 2, (corner_min[1] + corner_max[1]) / 2, (corner_min[2] + corner_max[2]) / 2],
        corner_min,
        corner_max,
        [corner_max[0] - corner_min[0], corner_max[1] + corner_min[1], corner_max[2] + corner_min[2]]
    ];
}
/**
 * Returns the bounding box of the entities.
 * The bounding box is an imaginary box that completley contains all the geometry.
 * The box is always aligned with the global x, y, and z axes.
 * The bounding box consists of a list of lists, as follows [[x, y, z], [x, y, z], [x, y, z], [x, y, z]].
 * - The first [x, y, z] is the coordinates of the centre of the bounding box.
 * - The second [x, y, z] is the corner of the bounding box with the lowest x, y, z values.
 * - The third [x, y, z] is the corner of the bounding box with the highest x, y, z values.
 * - The fourth [x, y, z] is the dimensions of the bounding box.
 * @param __model__
 * @param entities The etities for which to calculate the bounding box.
 * @returns The bounding box consisting of a list of four lists.
 */
function GetBBox(__model__, entities) {
    if (!Array.isArray(entities)) {
        entities = [entities];
    }
    // --- Error Check ---
    var ents_arr = Object(_check_args__WEBPACK_IMPORTED_MODULE_1__["checkIDs"])('virtual.BBox', 'entities', entities, [_check_args__WEBPACK_IMPORTED_MODULE_1__["IDcheckObj"].isIDList], null); // all
    // --- Error Check ---
    return _getBoundingBox(__model__, ents_arr);
}
// ================================================================================================
function _visRay(__model__, rays, scale) {
    if (Object(_libs_geo_info_id__WEBPACK_IMPORTED_MODULE_2__["getArrDepth"])(rays) === 2) {
        var ray = rays;
        var origin_2 = ray[0];
        var vec = Object(_libs_geom_vectors__WEBPACK_IMPORTED_MODULE_3__["vecMult"])(ray[1], scale);
        var end = Object(_libs_geom_vectors__WEBPACK_IMPORTED_MODULE_3__["vecAdd"])(origin_2, vec);
        // create orign point
        var origin_posi_i = __model__.geom.add.addPosi();
        __model__.attribs.add.setPosiCoords(origin_posi_i, origin_2);
        var point_i = __model__.geom.add.addPoint(origin_posi_i);
        // create pline
        var end_posi_i = __model__.geom.add.addPosi();
        __model__.attribs.add.setPosiCoords(end_posi_i, end);
        var pline_i = __model__.geom.add.addPline([origin_posi_i, end_posi_i]);
        // return the geometry IDs
        return [
            [_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].POINT, point_i],
            [_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].PLINE, pline_i]
        ];
    }
    else {
        var ents_arr = [];
        for (var _i = 0, rays_1 = rays; _i < rays_1.length; _i++) {
            var ray = rays_1[_i];
            var ray_ents = _visRay(__model__, ray, scale);
            for (var _a = 0, ray_ents_1 = ray_ents; _a < ray_ents_1.length; _a++) {
                var ray_ent = ray_ents_1[_a];
                ents_arr.push(ray_ent);
            }
        }
        return ents_arr;
    }
}
/**
 * Visualises a ray by creating a line.
 *
 * @param __model__
 * @param ray A list of two list of three coordinates [origin, vector]: [[x,y,z],[x',y',z']]
 * @returns entities, a line representing the ray.
 * @example ray1 = virtual.visRay([[1,2,3],[0,0,1]])
 */
function VisRay(__model__, ray, scale) {
    // --- Error Check ---
    var fn_name = 'virtual.visRay';
    Object(_check_args__WEBPACK_IMPORTED_MODULE_1__["checkCommTypes"])(fn_name, 'ray', ray, [_check_args__WEBPACK_IMPORTED_MODULE_1__["TypeCheckObj"].isRay]); // TODO rays can be a list // add isRayList to enable check
    Object(_check_args__WEBPACK_IMPORTED_MODULE_1__["checkCommTypes"])(fn_name, 'scale', scale, [_check_args__WEBPACK_IMPORTED_MODULE_1__["TypeCheckObj"].isNumber]);
    // --- Error Check ---
    return Object(_libs_geo_info_id__WEBPACK_IMPORTED_MODULE_2__["idsMake"])(_visRay(__model__, ray, scale));
}
// ================================================================================================
function _visPlane(__model__, planes, scale) {
    if (Object(_libs_geo_info_id__WEBPACK_IMPORTED_MODULE_2__["getArrDepth"])(planes) === 2) {
        var plane = planes;
        var origin_3 = plane[0];
        var x_vec = Object(_libs_geom_vectors__WEBPACK_IMPORTED_MODULE_3__["vecMult"])(plane[1], scale);
        var y_vec = Object(_libs_geom_vectors__WEBPACK_IMPORTED_MODULE_3__["vecMult"])(plane[2], scale);
        var x_end = Object(_libs_geom_vectors__WEBPACK_IMPORTED_MODULE_3__["vecAdd"])(origin_3, x_vec);
        var y_end = Object(_libs_geom_vectors__WEBPACK_IMPORTED_MODULE_3__["vecAdd"])(origin_3, y_vec);
        var z_end = Object(_libs_geom_vectors__WEBPACK_IMPORTED_MODULE_3__["vecAdd"])(origin_3, Object(_libs_geom_vectors__WEBPACK_IMPORTED_MODULE_3__["vecMult"])(Object(_libs_geom_vectors__WEBPACK_IMPORTED_MODULE_3__["vecCross"])(x_vec, y_vec), 0.1));
        var plane_corners = [
            Object(_libs_geom_vectors__WEBPACK_IMPORTED_MODULE_3__["vecAdd"])(x_end, y_vec),
            Object(_libs_geom_vectors__WEBPACK_IMPORTED_MODULE_3__["vecSub"])(y_end, x_vec),
            Object(_libs_geom_vectors__WEBPACK_IMPORTED_MODULE_3__["vecSub"])(Object(_libs_geom_vectors__WEBPACK_IMPORTED_MODULE_3__["vecSub"])(origin_3, x_vec), y_vec),
            Object(_libs_geom_vectors__WEBPACK_IMPORTED_MODULE_3__["vecSub"])(x_end, y_vec),
        ];
        x_end = Object(_libs_geom_vectors__WEBPACK_IMPORTED_MODULE_3__["vecAdd"])(x_end, Object(_libs_geom_vectors__WEBPACK_IMPORTED_MODULE_3__["vecMult"])(x_vec, 0.1));
        y_end = Object(_libs_geom_vectors__WEBPACK_IMPORTED_MODULE_3__["vecSub"])(y_end, Object(_libs_geom_vectors__WEBPACK_IMPORTED_MODULE_3__["vecMult"])(y_vec, 0.1));
        // create the point
        var origin_posi_i = __model__.geom.add.addPosi();
        __model__.attribs.add.setPosiCoords(origin_posi_i, origin_3);
        var point_i = __model__.geom.add.addPoint(origin_posi_i);
        // create the x axis
        var x_end_posi_i = __model__.geom.add.addPosi();
        __model__.attribs.add.setPosiCoords(x_end_posi_i, x_end);
        var x_pline_i = __model__.geom.add.addPline([origin_posi_i, x_end_posi_i]);
        // create the y axis
        var y_end_posi_i = __model__.geom.add.addPosi();
        __model__.attribs.add.setPosiCoords(y_end_posi_i, y_end);
        var y_pline_i = __model__.geom.add.addPline([origin_posi_i, y_end_posi_i]);
        // create the z axis
        var z_end_posi_i = __model__.geom.add.addPosi();
        __model__.attribs.add.setPosiCoords(z_end_posi_i, z_end);
        var z_pline_i = __model__.geom.add.addPline([origin_posi_i, z_end_posi_i]);
        // create pline for plane
        var corner_posis_i = [];
        for (var _i = 0, plane_corners_1 = plane_corners; _i < plane_corners_1.length; _i++) {
            var corner = plane_corners_1[_i];
            var posi_i = __model__.geom.add.addPosi();
            __model__.attribs.add.setPosiCoords(posi_i, corner);
            corner_posis_i.push(posi_i);
        }
        var plane_i = __model__.geom.add.addPline(corner_posis_i, true);
        // return the geometry IDs
        return [
            [_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].POINT, point_i],
            [_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].PLINE, x_pline_i],
            [_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].PLINE, y_pline_i],
            [_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].PLINE, z_pline_i],
            [_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].PLINE, plane_i]
        ];
    }
    else {
        var ents_arr = [];
        for (var _a = 0, planes_1 = planes; _a < planes_1.length; _a++) {
            var plane = planes_1[_a];
            var plane_ents = _visPlane(__model__, plane, scale);
            for (var _b = 0, plane_ents_1 = plane_ents; _b < plane_ents_1.length; _b++) {
                var plane_ent = plane_ents_1[_b];
                ents_arr.push(plane_ent);
            }
        }
        return ents_arr;
    }
}
/**
 * Visualises a plane by creating a polygon and axis lines.
 *
 * @param __model__
 * @param plane A list of lists
 * @returns Entities, a polygon and two polyline representing the plane.
 * @example plane1 = virtual.visPlane(position1, vector1, [0,1,0])
 * @example_info Creates a plane with position1 on it and normal = cross product of vector1 with y-axis.
 */
function VisPlane(__model__, planes, scale) {
    // --- Error Check ---
    var fn_name = 'virtual.visPlane';
    Object(_check_args__WEBPACK_IMPORTED_MODULE_1__["checkCommTypes"])(fn_name, 'planes', planes, [_check_args__WEBPACK_IMPORTED_MODULE_1__["TypeCheckObj"].isPlane]); // TODO planes can be a list // add isPlaneList to enable check
    Object(_check_args__WEBPACK_IMPORTED_MODULE_1__["checkCommTypes"])(fn_name, 'scale', scale, [_check_args__WEBPACK_IMPORTED_MODULE_1__["TypeCheckObj"].isNumber]);
    // --- Error Check ---
    return Object(_libs_geo_info_id__WEBPACK_IMPORTED_MODULE_2__["idsMake"])(_visPlane(__model__, planes, scale));
}
// ================================================================================================
function _visBBox(__model__, bboxs) {
    if (Object(_libs_geo_info_id__WEBPACK_IMPORTED_MODULE_2__["getArrDepth"])(bboxs) === 2) {
        var bbox = bboxs;
        var min = bbox[1];
        var max = bbox[2];
        // bottom
        var ps0 = __model__.geom.add.addPosi();
        __model__.attribs.add.setPosiCoords(ps0, min);
        var ps1 = __model__.geom.add.addPosi();
        __model__.attribs.add.setPosiCoords(ps1, [max[0], min[1], min[2]]);
        var ps2 = __model__.geom.add.addPosi();
        __model__.attribs.add.setPosiCoords(ps2, [max[0], max[1], min[2]]);
        var ps3 = __model__.geom.add.addPosi();
        __model__.attribs.add.setPosiCoords(ps3, [min[0], max[1], min[2]]);
        // top
        var ps4 = __model__.geom.add.addPosi();
        __model__.attribs.add.setPosiCoords(ps4, [min[0], min[1], max[2]]);
        var ps5 = __model__.geom.add.addPosi();
        __model__.attribs.add.setPosiCoords(ps5, [max[0], min[1], max[2]]);
        var ps6 = __model__.geom.add.addPosi();
        __model__.attribs.add.setPosiCoords(ps6, max);
        var ps7 = __model__.geom.add.addPosi();
        __model__.attribs.add.setPosiCoords(ps7, [min[0], max[1], max[2]]);
        // plines bottom
        var pl0 = __model__.geom.add.addPline([ps0, ps1]);
        var pl1 = __model__.geom.add.addPline([ps1, ps2]);
        var pl2 = __model__.geom.add.addPline([ps2, ps3]);
        var pl3 = __model__.geom.add.addPline([ps3, ps0]);
        // plines top
        var pl4 = __model__.geom.add.addPline([ps4, ps5]);
        var pl5 = __model__.geom.add.addPline([ps5, ps6]);
        var pl6 = __model__.geom.add.addPline([ps6, ps7]);
        var pl7 = __model__.geom.add.addPline([ps7, ps4]);
        // plines vertical
        var pl8 = __model__.geom.add.addPline([ps0, ps4]);
        var pl9 = __model__.geom.add.addPline([ps1, ps5]);
        var pl10 = __model__.geom.add.addPline([ps2, ps6]);
        var pl11 = __model__.geom.add.addPline([ps3, ps7]);
        // return
        return [pl0, pl1, pl2, pl3, pl4, pl5, pl6, pl7, pl8, pl9, pl10, pl11].map(function (pl) { return [_libs_geo_info_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].PLINE, pl]; });
    }
    else {
        var ents_arr = [];
        for (var _i = 0, bboxs_1 = bboxs; _i < bboxs_1.length; _i++) {
            var bbox = bboxs_1[_i];
            var bbox_ents = _visBBox(__model__, bbox);
            for (var _a = 0, bbox_ents_1 = bbox_ents; _a < bbox_ents_1.length; _a++) {
                var bbox_ent = bbox_ents_1[_a];
                ents_arr.push(bbox_ent);
            }
        }
        return ents_arr;
    }
}
/**
 * Visualises a bounding box by adding geometry to the model.
 *
 * @param __model__
 * @param bbox A list of lists.
 * @returns Entities, twelve polylines representing the box.
 * @example bbox1 = virtual.viBBox(position1, vector1, [0,1,0])
 * @example_info Creates a plane with position1 on it and normal = cross product of vector1 with y-axis.
 */
function VisBBox(__model__, bbox) {
    // --- Error Check ---
    var fn_name = 'virtual.visBBox';
    Object(_check_args__WEBPACK_IMPORTED_MODULE_1__["checkCommTypes"])(fn_name, 'bbox', bbox, [_check_args__WEBPACK_IMPORTED_MODULE_1__["TypeCheckObj"].isBBox]); // TODO bboxs can be a list // add isBBoxList to enable check
    // --- Error Check ---
    return Object(_libs_geo_info_id__WEBPACK_IMPORTED_MODULE_2__["idsMake"])(_visBBox(__model__, bbox));
}
// ================================================================================================


/***/ }),

/***/ "./src/assets/gallery/__config__.json":
/*!********************************************!*\
  !*** ./src/assets/gallery/__config__.json ***!
  \********************************************/
/*! exports provided: data, default */
/***/ (function(module) {

module.exports = {"data":[{"name":"Basic Examples","files":["basic_variable.mob&node=1","basic_ifelse.mob&node=1","basic_foreach.mob&node=1","basic_while.mob&node=1"],"link":"https://raw.githubusercontent.com/design-automation/mobius-parametric-modeller/master/src/assets/gallery/basic_examples/"},{"name":"Function Examples","files":["make.Position.mob&node=1","make.Point.mob&node=1","make.Polyline.mob&node=1","make.Polygon.mob&node=1","make.Collection.mob&node=1"],"link":"https://raw.githubusercontent.com/design-automation/mobius-parametric-modeller/master/src/assets/gallery/function_examples/"},{"name":"Shapes Examples","files":["torus.mob&node=1"],"link":"https://raw.githubusercontent.com/design-automation/mobius-parametric-modeller/master/src/assets/gallery/shapes_examples/"},{"name":"Flow Examples","files":["podium_with_towers.mob&node=3"],"link":"https://raw.githubusercontent.com/design-automation/mobius-parametric-modeller/master/src/assets/gallery/flow_examples/"},{"name":"Rendering Examples","files":["glass_materials.mob&node=1","front_and_back_materials.mob&node=1"],"link":"https://raw.githubusercontent.com/design-automation/mobius-parametric-modeller/master/src/assets/gallery/rendering_examples/"},{"name":"User Function Examples","files":["hello_example.mob&node=1","hello_func.mob&node=0","pyramids_from_pgons_example.mob&node=1","pyramids_from_pgons_func.mob&node=0","div_pgons_example1.mob&node=1","div_pgons_example2.mob&node=1","div_pgons_func.mob&node=0","offset_floors_and_windows_example.mob&node=1","offset_pgons_func.mob&node=0"],"link":"https://raw.githubusercontent.com/design-automation/mobius-parametric-modeller/master/src/assets/gallery/user_functions_examples/"},{"name":"AR2524, Examples Exercise 1","files":["jiaying.mob&node=1"],"link":"https://raw.githubusercontent.com/design-automation-edu/spatial-computational-thinking-2019/master/exercise1/"}]};

/***/ }),

/***/ "./src/assets/libs/filesys/download.ts":
/*!*********************************************!*\
  !*** ./src/assets/libs/filesys/download.ts ***!
  \*********************************************/
/*! exports provided: download */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "download", function() { return download; });
/**
 * Download a file.
 * @param data
 * @param filename
 */
function download(data, filename) {
    var data_type = 'text/plain;charset=utf-8';
    var data_bom = decodeURIComponent('%ef%bb%bf');
    if (window.navigator.msSaveBlob) {
        var blob = new Blob([data_bom + data], { type: data_type });
        window.navigator.msSaveBlob(blob, data);
    }
    else {
        var link = document.createElement('a');
        var content = data_bom + data;
        var uriScheme = ['data:', data_type, ','].join('');
        link.href = uriScheme + content;
        link.download = filename;
        // FF requires the link in actual DOM
        document.body.appendChild(link);
        link.click();
        document.body.removeChild(link);
    }
    return true;
}


/***/ }),

/***/ "./src/assets/libs/geo-info/GIAttribMap.ts":
/*!*************************************************!*\
  !*** ./src/assets/libs/geo-info/GIAttribMap.ts ***!
  \*************************************************/
/*! exports provided: GIAttribMap */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GIAttribMap", function() { return GIAttribMap; });
/* harmony import */ var _common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./common */ "./src/assets/libs/geo-info/common.ts");
/* harmony import */ var _util_arrays__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/arrays */ "./src/assets/libs/util/arrays.ts");


/**
 * Geo-info attribute class for one attribute.
 * The attributs stores key-value pairs.
 * Multiple keys point to the same value.
 * So for example, [[1,3], "a"],[[0,4], "b"] can be converted into sequential arrays.
 * The values would be ["a", "b"]
 * The keys would be [1,0,,0,1] (Note the undefined value in the middle.)
 *
 */
var GIAttribMap = /** @class */ (function () {
    /**
     * Creates an attribute.
     * @param attrib_data
     */
    function GIAttribMap(name, data_type, data_size) {
        this._name = name;
        this._data_type = data_type;
        this._data_size = data_size;
        // the maps
        this._num_vals = 0;
        this._map_val_k_to_val_i = new Map();
        this._map_val_i_to_val = new Map();
        this._map_val_i_to_ents_i = new Map();
        this._map_ent_i_to_val_i = new Map();
    }
    /**
     * Returns the JSON data for this attribute.
     */
    GIAttribMap.prototype.getData = function () {
        var _this = this;
        var _data = [];
        this._map_val_i_to_ents_i.forEach(function (ents_i, val_i) {
            var val = _this._map_val_i_to_val.get(val_i);
            _data.push([ents_i, val]);
        });
        return {
            name: this._name,
            data_type: this._data_type,
            data_size: this._data_size,
            data: _data
        };
    };
    // /**
    //  * Adds ent_ities to this attribute from JSON data.
    //  * The existing attribute data in the model is not deleted.
    //  * @param attrib_data The JSON data for the new ent_ities.
    //  */
    // public addData(attrib_data: IAttribData, ent_i_offset: number): void {
    //     if (this._name !== attrib_data.name ||
    //         this._data_type !== attrib_data.data_type ||
    //         this._data_size !== attrib_data.data_size) {
    //         throw Error('Attributes do not match.');
    //     }
    //     // increment all the keys by the number of ent_ities in the existing data
    //     attrib_data.data.forEach( keys_value => {
    //         const new_keys: number[] = keys_value[0].map(key => key + ent_i_offset);
    //         const value: TAttribDataTypes = keys_value[1];
    //         this.setEntVal(new_keys, value);
    //     });
    // }
    /**
     * Returns the name of this attribute.
     */
    GIAttribMap.prototype.getName = function () {
        return this._name;
    };
    /**
     * Returns the data type of this attribute.
     */
    GIAttribMap.prototype.getDataType = function () {
        return this._data_type;
    };
    /**
     * Returns the data size of this attribute.
     */
    GIAttribMap.prototype.getDataSize = function () {
        return this._data_size;
    };
    /**
     * Returns true if this value exists in the attributes.
     */
    GIAttribMap.prototype.hasVal = function (val) {
        return this._map_val_k_to_val_i.has(this._valToValkey(val));
    };
    /**
     * Returns true if thereis an entity that has a value (i.e. the value is not undefined).
     */
    GIAttribMap.prototype.hasEnt = function (ent_i) {
        return this._map_ent_i_to_val_i.has(ent_i);
    };
    /**
     * Delete the entities from this attribute map.
     */
    GIAttribMap.prototype.delEnt = function (ents_i) {
        var _this = this;
        ents_i = (Array.isArray(ents_i)) ? ents_i : [ents_i];
        ents_i.forEach(function (ent_i) {
            // _map_ent_i_to_val_i: Map<number, number>
            var val_i = _this._map_ent_i_to_val_i.get(ent_i);
            if (val_i !== undefined) {
                // del the entity from _map_ent_i_to_val_i
                _this._map_ent_i_to_val_i.delete(ent_i);
                // del the entity from _map_val_i_to_ents_i
                var other_ents_i = _this._map_val_i_to_ents_i.get(val_i);
                other_ents_i.splice(other_ents_i.indexOf(ent_i), 1);
                // now clean up just in case that was the last entity with this value
                _this._cleanUp(val_i);
            }
        });
    };
    /**
     * Returns a nested array of entities and values, like this:
     * [ [[2,4,6,8], 'hello'], [[9,10], 'world']]
     * This is the same format as used in gi-json
     * This matches the method setEntsVals()
     */
    GIAttribMap.prototype.getEntsVals = function () {
        var _this = this;
        var ents_i_values = [];
        this._map_val_i_to_ents_i.forEach(function (ents_i, val_i) {
            var value = _this._map_val_i_to_val.get(val_i);
            ents_i_values.push([ents_i, value]);
        });
        return ents_i_values;
    };
    /**
     * Sets the value for multiple entity-value pairs at the same time.
     * @param ent_i
     * @param val
     */
    GIAttribMap.prototype.setEntsVals = function (ents_i_values) {
        for (var i = 0; i < ents_i_values.length; i++) {
            this.setEntVal(ents_i_values[i][0], ents_i_values[i][1]);
        }
    };
    /**
     * Sets the value for a given entity or entities.
     * @param ent_i
     * @param val
     */
    GIAttribMap.prototype.setEntVal = function (ents_i, val) {
        var _this = this;
        var val_k = this._valToValkey(val);
        // check if this val already exists, if not create it
        if (!this._map_val_k_to_val_i.has(val_k)) {
            this._map_val_k_to_val_i.set(val_k, this._num_vals);
            this._map_val_i_to_val.set(this._num_vals, val);
            this._map_val_i_to_ents_i.set(this._num_vals, []);
            this._num_vals += 1;
        }
        // get the new val_i
        var new_val_i = this._map_val_k_to_val_i.get(val_k);
        ents_i = (Array.isArray(ents_i)) ? ents_i : [ents_i];
        // loop through all the unique ents, and set _map_ent_i_to_val_i
        var unique_ents_i = Array.from(new Set(ents_i));
        unique_ents_i.forEach(function (ent_i) {
            // keep the old value for later
            var old_val_i = _this._map_ent_i_to_val_i.get(ent_i);
            // for each ent_i, set the new val_i
            _this._map_ent_i_to_val_i.set(ent_i, new_val_i);
            // clean up the old val_i
            if (old_val_i !== undefined && old_val_i !== new_val_i) {
                Object(_util_arrays__WEBPACK_IMPORTED_MODULE_1__["arrRem"])(_this._map_val_i_to_ents_i.get(old_val_i), ent_i);
                _this._cleanUp(old_val_i);
            }
        });
        // for the new val_i, set it ot point to all the ents that have this value
        var exist_ents_i = this._map_val_i_to_ents_i.get(new_val_i);
        var exist_new_ents_i = Array.from(new Set(exist_ents_i.concat(ents_i)));
        this._map_val_i_to_ents_i.set(new_val_i, exist_new_ents_i);
    };
    /**
     * Sets the indexed value for a given entity or entities.
     * This assumes that this attribute has a data_size > 1.
     * @param ent_i
     * @param val
     */
    GIAttribMap.prototype.setEntIdxVal = function (ent_i, val_index, val) {
        var exist_value_arr = this.getEntVal(ent_i);
        var new_value_arr = exist_value_arr.slice(); // IMPORTANT clone the array
        new_value_arr[val_index] = val;
        this.setEntVal(ent_i, new_value_arr);
        // check that none of the old values need to be cleaned up
        // TODO
    };
    /**
     * Gets the value for a given entity, or an array of values given an array of entities.
     * Returns undefined if the entity does not exist
     * @param ent_i
     */
    GIAttribMap.prototype.getEntVal = function (ents_i) {
        var _this = this;
        if (!Array.isArray(ents_i)) {
            var ent_i = ents_i;
            var val_i = this._map_ent_i_to_val_i.get(ent_i);
            if (val_i === undefined) {
                return undefined;
            }
            return this._map_val_i_to_val.get(val_i);
        }
        else {
            return ents_i.map(function (ent_i) { return _this.getEntVal(ent_i); });
        }
    };
    /**
     * Gets the indexed value for a given entity.
     * Returns undefined if the entity does not exist
     * This assumes that this attribute has a data_size > 1.
     * @param ent_i
     */
    GIAttribMap.prototype.getEntIdxVal = function (ents_i, val_index) {
        var _this = this;
        if (!Array.isArray(ents_i)) {
            var ent_i = ents_i;
            var exist_value_arr = this.getEntVal(ent_i);
            return exist_value_arr[val_index];
        }
        else {
            return ents_i.map(function (ent_i) { return _this.getEntVal(ent_i); });
        }
    };
    /**
     * Gets all the keys that have a given value
     * If the value does not exist an empty array is returned
     * @param val
     */
    GIAttribMap.prototype.getEntsFromVal = function (val) {
        var val_i = this._map_val_k_to_val_i.get(this._valToValkey(val));
        if (val_i === undefined) {
            return [];
        }
        return this._map_val_i_to_ents_i.get(val_i);
    };
    /**
     * Returns an array of entity indices which do not have a value (undefined)
     */
    GIAttribMap.prototype.getEntsWithoutVal = function (ents_i) {
        var _this = this;
        return ents_i.filter(function (ent_i) { return !_this._map_ent_i_to_val_i.has(ent_i); });
    };
    /**
     * Returns an array of entity indices which have a value (not undefined)
     */
    GIAttribMap.prototype.getEntsWithVal = function (ents_i) {
        var _this = this;
        return ents_i.filter(function (ent_i) { return _this._map_ent_i_to_val_i.has(ent_i); });
    };
    /**
     * Executes a query
     * @param ents_i
     * @param val_arr_index The index of the value in the array
     * @param operator The relational operator, ==, !=, <=, >=, etc
     * @param val_k The string version of the value.
     */
    GIAttribMap.prototype.queryVal = function (ents_i, val_arr_index, operator, val_k) {
        // check the validity of the arguments
        var indexed = (val_arr_index !== null && val_arr_index !== undefined);
        if (indexed) {
            if (!Number.isInteger(val_arr_index)) {
                throw new Error('Query index "' + val_arr_index + '" cannot be converted to an integer: ' + val_arr_index);
            }
            if (!(this._data_size > 0)) {
                throw new Error('Query attribute ' + this._name + ' is not a list.');
            }
        }
        if (this._data_type === _common__WEBPACK_IMPORTED_MODULE_0__["EAttribDataTypeStrs"].STRING) {
            if (operator !== _common__WEBPACK_IMPORTED_MODULE_0__["EQueryOperatorTypes"].IS_EQUAL && operator !== _common__WEBPACK_IMPORTED_MODULE_0__["EQueryOperatorTypes"].IS_NOT_EQUAL) {
                {
                    throw new Error('Query operator "' + operator + '" and query "' + val_k + '" value are incompatible.');
                }
            }
        }
        if (val_k === 'null') {
            if (operator !== _common__WEBPACK_IMPORTED_MODULE_0__["EQueryOperatorTypes"].IS_EQUAL && operator !== _common__WEBPACK_IMPORTED_MODULE_0__["EQueryOperatorTypes"].IS_NOT_EQUAL) {
                {
                    throw new Error('Query operator ' + operator + ' and query "null" value are incompatible.');
                }
            }
        }
        // search, no index
        if (indexed) {
            if (this._data_type === _common__WEBPACK_IMPORTED_MODULE_0__["EAttribDataTypeStrs"].FLOAT) {
                return this._searchIndexedNumValue(ents_i, val_arr_index, operator, val_k);
            }
            else {
                return this._searchIndexedStrValue(ents_i, val_arr_index, operator, val_k);
            }
        }
        else {
            if (this._data_type === _common__WEBPACK_IMPORTED_MODULE_0__["EAttribDataTypeStrs"].FLOAT) {
                return this._searchNumValue(ents_i, operator, val_k);
            }
            else {
                return this._searchStrValue(ents_i, operator, val_k);
            }
        }
    };
    //  ===============================================================================================================
    //  Private methods
    //  ===============================================================================================================
    /**
     * Convert a value into a map key
     */
    GIAttribMap.prototype._valToValkey = function (val) {
        if (this._data_size === 1 && this._data_type === _common__WEBPACK_IMPORTED_MODULE_0__["EAttribDataTypeStrs"].STRING) {
            if (typeof val === 'string') {
                return val;
            }
            else {
                return String(val);
            }
        }
        if (this._data_size === 1 && this._data_type === _common__WEBPACK_IMPORTED_MODULE_0__["EAttribDataTypeStrs"].FLOAT) {
            if (typeof val === 'string') {
                return parseFloat(val);
            }
            else {
                return val;
            }
        }
        return JSON.stringify(val);
    };
    /**
     * Checks if anything still points to this value
     * If not, cleans up the arrays
     * _map_val_i_to_ents_i
     * _map_val_i_to_val
     * _map_val_k_to_val_i
     */
    GIAttribMap.prototype._cleanUp = function (val_i) {
        if (val_i !== undefined) {
            // _map_val_i_to_ents_i: Map<number, number[]>
            var ents_i = this._map_val_i_to_ents_i.get(val_i);
            if (ents_i.length === 0) {
                this._map_val_i_to_ents_i.delete(val_i);
                // _map_val_i_to_val: Map<number, TAttribDataTypes>
                var val = this._map_val_i_to_val.get(val_i);
                this._map_val_i_to_val.delete(val_i);
                // _map_val_k_to_val_i: Map<string|number, number>
                this._map_val_k_to_val_i.delete(this._valToValkey(val));
            }
        }
    };
    /**
     * Compare two values
     * @param operator
     * @param val1
     * @param val2
     */
    GIAttribMap.prototype._compare = function (operator, val1, val2) {
        if (val1 === undefined) {
            val1 = null;
        }
        if (val2 === undefined) {
            val2 = null;
        }
        switch (operator) {
            // ==
            case _common__WEBPACK_IMPORTED_MODULE_0__["EQueryOperatorTypes"].IS_EQUAL:
                return val1 === val2;
            // !=
            case _common__WEBPACK_IMPORTED_MODULE_0__["EQueryOperatorTypes"].IS_NOT_EQUAL:
                return val1 !== val2;
            // >
            case _common__WEBPACK_IMPORTED_MODULE_0__["EQueryOperatorTypes"].IS_GREATER:
                return val1 > val2;
            // >=
            case _common__WEBPACK_IMPORTED_MODULE_0__["EQueryOperatorTypes"].IS_GREATER_OR_EQUAL:
                return val1 >= val2;
            // <
            case _common__WEBPACK_IMPORTED_MODULE_0__["EQueryOperatorTypes"].IS_LESS:
                return val1 < val2;
            // <=
            case _common__WEBPACK_IMPORTED_MODULE_0__["EQueryOperatorTypes"].IS_LESS_OR_EQUAL:
                return val1 <= val2;
            default:
                throw new Error('Query operator not found: ' + operator);
        }
    };
    /**
     * Searches for the value using the operator
     */
    GIAttribMap.prototype._searchNumValue = function (ents_i, operator, val_k) {
        // clean up
        val_k = val_k.replace(_common__WEBPACK_IMPORTED_MODULE_0__["RE_SPACES"], '');
        // first deal with null cases
        if (val_k === 'null' && operator === _common__WEBPACK_IMPORTED_MODULE_0__["EQueryOperatorTypes"].IS_EQUAL) {
            return this.getEntsWithoutVal(ents_i);
        }
        else if (val_k === 'null' && operator === _common__WEBPACK_IMPORTED_MODULE_0__["EQueryOperatorTypes"].IS_NOT_EQUAL) {
            return this.getEntsWithVal(ents_i);
        }
        // get the values to search for
        var search_val = Number(val_k);
        if (isNaN(search_val)) {
            throw new Error('Query error: the search value is not a number.');
        }
        // search
        var found_keys;
        switch (operator) {
            case _common__WEBPACK_IMPORTED_MODULE_0__["EQueryOperatorTypes"].IS_EQUAL:
                found_keys = this.getEntsFromVal(search_val);
                if (found_keys === undefined) {
                    return [];
                }
                return ents_i.filter(function (ent_i) { return found_keys.indexOf(ent_i) !== -1; });
            case _common__WEBPACK_IMPORTED_MODULE_0__["EQueryOperatorTypes"].IS_NOT_EQUAL:
                found_keys = this.getEntsFromVal(search_val);
                if (found_keys === undefined) {
                    return [];
                }
                return ents_i.filter(function (ent_i) { return found_keys.indexOf(ent_i) === -1; });
            case _common__WEBPACK_IMPORTED_MODULE_0__["EQueryOperatorTypes"].IS_GREATER:
            case _common__WEBPACK_IMPORTED_MODULE_0__["EQueryOperatorTypes"].IS_GREATER_OR_EQUAL:
            case _common__WEBPACK_IMPORTED_MODULE_0__["EQueryOperatorTypes"].IS_LESS:
            case _common__WEBPACK_IMPORTED_MODULE_0__["EQueryOperatorTypes"].IS_LESS_OR_EQUAL:
                found_keys = [];
                for (var _i = 0, ents_i_1 = ents_i; _i < ents_i_1.length; _i++) {
                    var ent_i = ents_i_1[_i];
                    var val = this.getEntVal(ent_i);
                    if ((val !== null && val !== undefined) && this._compare(operator, val, search_val)) {
                        found_keys.push(ent_i);
                    }
                }
                return found_keys;
            default:
                throw new Error('Query error: Operator not found.');
        }
    };
    /**
     * Searches for the value using the operator
     */
    GIAttribMap.prototype._searchStrValue = function (ents_i, operator, val_k) {
        // first deal with null cases
        if (val_k === 'null' && operator === _common__WEBPACK_IMPORTED_MODULE_0__["EQueryOperatorTypes"].IS_EQUAL) {
            return this.getEntsWithoutVal(ents_i);
        }
        else if (val_k === 'null' && operator === _common__WEBPACK_IMPORTED_MODULE_0__["EQueryOperatorTypes"].IS_NOT_EQUAL) {
            return this.getEntsWithVal(ents_i);
        }
        // get the values to search for
        var search_val = val_k;
        // search
        var found_keys;
        switch (operator) {
            case _common__WEBPACK_IMPORTED_MODULE_0__["EQueryOperatorTypes"].IS_EQUAL:
                found_keys = this.getEntsFromVal(search_val);
                if (found_keys === undefined) {
                    return [];
                }
                return ents_i.filter(function (ent_i) { return found_keys.indexOf(ent_i) !== -1; });
            case _common__WEBPACK_IMPORTED_MODULE_0__["EQueryOperatorTypes"].IS_NOT_EQUAL:
                found_keys = this.getEntsFromVal(search_val);
                if (found_keys === undefined) {
                    return [];
                }
                return ents_i.filter(function (ent_i) { return found_keys.indexOf(ent_i) === -1; });
            case _common__WEBPACK_IMPORTED_MODULE_0__["EQueryOperatorTypes"].IS_GREATER:
            case _common__WEBPACK_IMPORTED_MODULE_0__["EQueryOperatorTypes"].IS_GREATER_OR_EQUAL:
            case _common__WEBPACK_IMPORTED_MODULE_0__["EQueryOperatorTypes"].IS_LESS:
            case _common__WEBPACK_IMPORTED_MODULE_0__["EQueryOperatorTypes"].IS_LESS_OR_EQUAL:
                throw new Error('Query error: Operator not allowed with string values.');
            default:
                throw new Error('Query error: Operator not found.');
        }
    };
    /**
     * Searches for the value using the operator
     */
    GIAttribMap.prototype._searchIndexedNumValue = function (ents_i, val_arr_index, operator, val_k) {
        // clean up
        val_k = val_k.replace(_common__WEBPACK_IMPORTED_MODULE_0__["RE_SPACES"], '');
        // get the search value, null or a number
        var search_val;
        if (val_k === 'null') {
            search_val = null;
        }
        else { // value_str must be a number
            search_val = Number.parseFloat(val_k);
            if (isNaN(search_val)) {
                throw new Error('Query value "' + val_k + '" cannot be converted to a number: ' + val_k);
            }
        }
        // do the search
        var found_keys = [];
        for (var _i = 0, ents_i_2 = ents_i; _i < ents_i_2.length; _i++) {
            var ent_i = ents_i_2[_i];
            var search_value_arr = this.getEntVal(ent_i);
            if ((search_value_arr !== undefined) &&
                this._compare(operator, search_value_arr[val_arr_index], search_val)) {
                found_keys.push(ent_i);
            }
        }
        return found_keys;
    };
    /**
     * Searches for the value using the operator
     */
    GIAttribMap.prototype._searchIndexedStrValue = function (ents_i, val_arr_index, operator, val_k) {
        // clean up
        val_k = val_k.replace(_common__WEBPACK_IMPORTED_MODULE_0__["RE_SPACES"], '');
        // get the search value, null or a string
        var search_val;
        if (val_k === 'null') {
            search_val = null;
        }
        else { // value_str must be a number
            search_val = val_k;
        }
        // do the search
        var found_keys = [];
        for (var _i = 0, ents_i_3 = ents_i; _i < ents_i_3.length; _i++) {
            var ent_i = ents_i_3[_i];
            var search_value_arr = this.getEntVal(ent_i);
            if (this._compare(operator, search_value_arr[val_arr_index], search_val)) {
                found_keys.push(ent_i);
            }
        }
        return found_keys;
    };
    return GIAttribMap;
}());



/***/ }),

/***/ "./src/assets/libs/geo-info/GIAttribs.ts":
/*!***********************************************!*\
  !*** ./src/assets/libs/geo-info/GIAttribs.ts ***!
  \***********************************************/
/*! exports provided: GIAttribs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GIAttribs", function() { return GIAttribs; });
/* harmony import */ var _GIAttribsAdd__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./GIAttribsAdd */ "./src/assets/libs/geo-info/GIAttribsAdd.ts");
/* harmony import */ var _GIAttribsThreejs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./GIAttribsThreejs */ "./src/assets/libs/geo-info/GIAttribsThreejs.ts");
/* harmony import */ var _GIAttribsQuery__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./GIAttribsQuery */ "./src/assets/libs/geo-info/GIAttribsQuery.ts");
/* harmony import */ var _common__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./common */ "./src/assets/libs/geo-info/common.ts");
/* harmony import */ var _GIAttribsIO__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./GIAttribsIO */ "./src/assets/libs/geo-info/GIAttribsIO.ts");





/**
 * Class for attributes.
 */
var GIAttribs = /** @class */ (function () {
    /**
      * Creates an object to store the attribute data.
      * @param model The JSON data
      */
    function GIAttribs(model) {
        // maps, the key is the name, the value is the attrib map clas
        this._attribs_maps = {
            ps: new Map(),
            _v: new Map(),
            _e: new Map(),
            _w: new Map(),
            _f: new Map(),
            pt: new Map(),
            pl: new Map(),
            pg: new Map(),
            co: new Map(),
            mo: new Map()
        };
        this._model = model;
        this.io = new _GIAttribsIO__WEBPACK_IMPORTED_MODULE_4__["GIAttribsIO"](model, this._attribs_maps);
        this.add = new _GIAttribsAdd__WEBPACK_IMPORTED_MODULE_0__["GIAttribsAdd"](model, this._attribs_maps);
        this.query = new _GIAttribsQuery__WEBPACK_IMPORTED_MODULE_2__["GIAttribsQuery"](model, this._attribs_maps);
        this.threejs = new _GIAttribsThreejs__WEBPACK_IMPORTED_MODULE_1__["GIAttribsThreejs"](model, this._attribs_maps);
        this.add.addAttrib(_common__WEBPACK_IMPORTED_MODULE_3__["EEntType"].POSI, _common__WEBPACK_IMPORTED_MODULE_3__["EAttribNames"].COORDS, _common__WEBPACK_IMPORTED_MODULE_3__["EAttribDataTypeStrs"].FLOAT, 3);
    }
    return GIAttribs;
}());



/***/ }),

/***/ "./src/assets/libs/geo-info/GIAttribsAdd.ts":
/*!**************************************************!*\
  !*** ./src/assets/libs/geo-info/GIAttribsAdd.ts ***!
  \**************************************************/
/*! exports provided: GIAttribsAdd */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GIAttribsAdd", function() { return GIAttribsAdd; });
/* harmony import */ var _common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./common */ "./src/assets/libs/geo-info/common.ts");
/* harmony import */ var _GIAttribMap__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./GIAttribMap */ "./src/assets/libs/geo-info/GIAttribMap.ts");
/* harmony import */ var _libs_geom_vectors__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @libs/geom/vectors */ "./src/assets/libs/geom/vectors.ts");
/* harmony import */ var mathjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! mathjs */ "./node_modules/mathjs/index.js");
/* harmony import */ var mathjs__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(mathjs__WEBPACK_IMPORTED_MODULE_3__);




/**
 * Class for attributes.
 */
var GIAttribsAdd = /** @class */ (function () {
    /**
      * Creates an object to store the attribute data.
      * @param model The JSON data
      */
    function GIAttribsAdd(model, attribs_maps) {
        this._model = model;
        this._attribs_maps = attribs_maps;
    }
    /**
     * Creates a new attribte.
     * If the attribute already exists, then the existing attribute is returned.
     *
     * @param ent_type The level at which to create the attribute.
     * @param name The name of the attribute.
     * @param data_type The data type of the attribute.
     * @param data_size The data size of the attribute. For example, an XYZ vector has size=3.
     */
    GIAttribsAdd.prototype.addAttrib = function (ent_type, name, data_type, data_size) {
        var attribs_maps_key = _common__WEBPACK_IMPORTED_MODULE_0__["EEntTypeStr"][ent_type];
        var attribs = this._attribs_maps[attribs_maps_key];
        if (!attribs.has(name)) {
            var attrib = new _GIAttribMap__WEBPACK_IMPORTED_MODULE_1__["GIAttribMap"](name, data_type, data_size);
            attribs.set(name, attrib);
        }
        else {
            if (attribs.get(name).getDataType() !== data_type || attribs.get(name).getDataSize() !== data_size) {
                throw new Error('Attribute could not be created do to conflict with existing attribute with same name.');
            }
        }
        return attribs.get(name);
    };
    /**
     * Set a model attrib value
     * @param id
     * @param name
     * @param value
     */
    GIAttribsAdd.prototype.setModelAttribValue = function (name, value) {
        var attribs_maps_key = _common__WEBPACK_IMPORTED_MODULE_0__["EEntTypeStr"][_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].MOD];
        var attrib = this._attribs_maps[attribs_maps_key];
        attrib.set(name, value);
    };
    /**
     * Set a model attrib indexed value.
     * If the attribute does not exist, it throws an error.
     * @param id
     * @param name
     * @param value
     */
    GIAttribsAdd.prototype.setModelAttribIndexedValue = function (name, value_index, value) {
        var attribs_maps_key = _common__WEBPACK_IMPORTED_MODULE_0__["EEntTypeStr"][_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].MOD];
        var attrib = this._attribs_maps[attribs_maps_key];
        var list_value = attrib.get(name);
        if (list_value === undefined) {
            throw new Error('Attribute with this name does not exist.');
        }
        if (!Array.isArray(list_value)) {
            throw new Error('Attribute is not a list, so indexed values are not allowed.');
        }
        if (value_index >= list_value.length) {
            throw new Error('Value index is out of range for attribute list size.');
        }
        list_value[value_index] = value;
    };
    /**
     * Set an entity attrib value
     * If the attribute does not exist, then it is created.
     * @param id
     * @param name
     * @param value
     */
    GIAttribsAdd.prototype.setAttribValue = function (ent_type, ents_i, name, value) {
        var attribs_maps_key = _common__WEBPACK_IMPORTED_MODULE_0__["EEntTypeStr"][ent_type];
        var attribs = this._attribs_maps[attribs_maps_key];
        if (attribs.get(name) === undefined) {
            var _a = this._checkDataTypeSize(value), new_data_type = _a[0], new_data_size = _a[1];
            this.addAttrib(ent_type, name, new_data_type, new_data_size);
        }
        attribs.get(name).setEntVal(ents_i, value);
    };
    /**
     * Set an entity attrib indexed value.
     * If the attribute does not exist, it throws an error.
     * @param id
     * @param name
     * @param value
     */
    GIAttribsAdd.prototype.setAttribIndexedValue = function (ent_type, ents_i, name, value_index, value) {
        var attribs_maps_key = _common__WEBPACK_IMPORTED_MODULE_0__["EEntTypeStr"][ent_type];
        var attribs = this._attribs_maps[attribs_maps_key];
        var attrib = attribs.get(name);
        if (attrib === undefined) {
            throw new Error('Attribute does not exist.');
        }
        if (attrib.getDataSize() === 1) {
            throw new Error('Attribute is not a list, so indexed values are not allowed.');
        }
        if (value_index >= attrib.getDataSize()) {
            throw new Error('Value index is out of range for attribute list size.');
        }
        attrib.setEntIdxVal(ents_i, value_index, value);
    };
    /**
     * Delete the entity from an attribute
     * If there is no value for the entity, then this does nothing
     * If there is a value, then both the entity index and the value are deleted
     * @param ent_type
     * @param name
     */
    GIAttribsAdd.prototype.delEntFromAttribs = function (ent_type, ents_i) {
        // get the attrib names
        var attribs_maps_key = _common__WEBPACK_IMPORTED_MODULE_0__["EEntTypeStr"][ent_type];
        var attribs = this._attribs_maps[attribs_maps_key];
        attribs.forEach(function (attrib) { return attrib.delEnt(ents_i); });
    };
    /**
     * Set the xyz position by index
     * @param index
     * @param value
     */
    GIAttribsAdd.prototype.setPosiCoords = function (index, xyz) {
        this._attribs_maps.ps.get(_common__WEBPACK_IMPORTED_MODULE_0__["EAttribNames"].COORDS).setEntVal(index, xyz);
    };
    /**
     * Move the xyz position by index
     * @param index
     * @param value
     */
    GIAttribsAdd.prototype.movePosiCoords = function (index, xyz) {
        var old_xyz = this._attribs_maps.ps.get(_common__WEBPACK_IMPORTED_MODULE_0__["EAttribNames"].COORDS).getEntVal(index);
        var new_xyz = Object(_libs_geom_vectors__WEBPACK_IMPORTED_MODULE_2__["vecAdd"])(old_xyz, xyz);
        this._attribs_maps.ps.get(_common__WEBPACK_IMPORTED_MODULE_0__["EAttribNames"].COORDS).setEntVal(index, new_xyz);
    };
    /**
     * Copy all attribs from one entity to another entity
     * @param ent_type
     * @param name
     */
    GIAttribsAdd.prototype.copyAttribs = function (ent_type, from_ent_i, to_ent_i) {
        // get the attrib names
        var attribs_maps_key = _common__WEBPACK_IMPORTED_MODULE_0__["EEntTypeStr"][ent_type];
        var attribs = this._attribs_maps[attribs_maps_key];
        var attrib_names = Array.from(attribs.keys());
        // copy each attrib
        for (var _i = 0, attrib_names_1 = attrib_names; _i < attrib_names_1.length; _i++) {
            var attrib_name = attrib_names_1[_i];
            var attrib = attribs.get(attrib_name);
            var attrib_value = attrib.getEntVal(from_ent_i);
            attrib.setEntVal(to_ent_i, attrib_value);
        }
    };
    /**
     * Promotes attrib values up and down the hierarchy.
     */
    GIAttribsAdd.prototype.promoteAttribValues = function (ent_type, attrib_name, indices, to_ent_type, method) {
        var _this = this;
        if (ent_type === to_ent_type) {
            return;
        }
        // check that the attribute exists
        if (!this._model.attribs.query.hasAttrib(ent_type, attrib_name)) {
            throw new Error('The attribute does not exist.');
        }
        // get the data type and data size of the existing attribute
        var data_type = this._model.attribs.query.getAttribDataType(ent_type, attrib_name);
        var data_size = this._model.attribs.query.getAttribDataSize(ent_type, attrib_name);
        // move attributes from entities up to the model, or form model down to entities
        if (to_ent_type === _common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].MOD) {
            this.addAttrib(to_ent_type, attrib_name, data_type, data_size);
            var attrib_values = [];
            for (var _i = 0, indices_1 = indices; _i < indices_1.length; _i++) {
                var index = indices_1[_i];
                attrib_values.push(this._model.attribs.query.getAttribValue(ent_type, attrib_name, index));
            }
            var value = this._aggregateValues(attrib_values, data_size, method);
            this.setModelAttribValue(attrib_name, value);
            return;
        }
        else if (ent_type === _common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].MOD) {
            var value = this._model.attribs.query.getModelAttribValue(attrib_name);
            this.addAttrib(to_ent_type, attrib_name, data_type, data_size);
            var target_ents_i = this._model.geom.query.getEnts(to_ent_type, false);
            for (var _a = 0, target_ents_i_1 = target_ents_i; _a < target_ents_i_1.length; _a++) {
                var target_ent_i = target_ents_i_1[_a];
                this.setAttribValue(to_ent_type, target_ent_i, attrib_name, value);
            }
            return;
        }
        // get all the values for each target
        var attrib_values_map = new Map();
        for (var _b = 0, indices_2 = indices; _b < indices_2.length; _b++) {
            var index = indices_2[_b];
            var attrib_value = this._model.attribs.query.getAttribValue(ent_type, attrib_name, index);
            var target_ents_i = this._model.geom.query.navAnyToAny(ent_type, to_ent_type, index);
            for (var _c = 0, target_ents_i_2 = target_ents_i; _c < target_ents_i_2.length; _c++) {
                var target_ent_i = target_ents_i_2[_c];
                if (!attrib_values_map.has(target_ent_i)) {
                    attrib_values_map.set(target_ent_i, []);
                }
                attrib_values_map.get(target_ent_i).push(attrib_value);
            }
        }
        // create the new target attribute if it does not already exist
        this.addAttrib(to_ent_type, attrib_name, data_type, data_size);
        // calculate the new value and set the attribute
        attrib_values_map.forEach(function (attrib_values, target_ent_i) {
            var value = attrib_values[0];
            if (attrib_values.length > 1 && data_type === _common__WEBPACK_IMPORTED_MODULE_0__["EAttribDataTypeStrs"].FLOAT) {
                value = _this._aggregateValues(attrib_values, data_size, method);
            }
            _this.setAttribValue(to_ent_type, target_ent_i, attrib_name, value);
        });
    };
    /**
     * Transfer attrib values to neighbouring entities of the same type.
     * Neighbouring entities are those that share the same positions.
     */
    GIAttribsAdd.prototype.transferAttribValues = function (ent_type, attrib_name, indices, method) {
        throw new Error('Attribute transfer is not yet implemented.');
    };
    // ============================================================================
    // Private methods
    // ============================================================================
    GIAttribsAdd.prototype._aggregateValues = function (values, data_size, method) {
        switch (method) {
            case _common__WEBPACK_IMPORTED_MODULE_0__["EAttribPromote"].AVERAGE:
                if (data_size > 1) {
                    var result = [];
                    var _loop_1 = function (i) {
                        result[i] = mathjs__WEBPACK_IMPORTED_MODULE_3__["mean"](values.map(function (vec) { return vec[i]; }));
                    };
                    for (var i = 0; i < data_size; i++) {
                        _loop_1(i);
                    }
                    return result;
                }
                else {
                    return mathjs__WEBPACK_IMPORTED_MODULE_3__["mean"](values);
                }
            case _common__WEBPACK_IMPORTED_MODULE_0__["EAttribPromote"].MEDIAN:
                if (data_size > 1) {
                    var result = [];
                    var _loop_2 = function (i) {
                        result[i] = mathjs__WEBPACK_IMPORTED_MODULE_3__["median"](values.map(function (vec) { return vec[i]; }));
                    };
                    for (var i = 0; i < data_size; i++) {
                        _loop_2(i);
                    }
                    return result;
                }
                else {
                    return mathjs__WEBPACK_IMPORTED_MODULE_3__["median"](values);
                }
            case _common__WEBPACK_IMPORTED_MODULE_0__["EAttribPromote"].SUM:
                if (data_size > 1) {
                    var result = [];
                    var _loop_3 = function (i) {
                        result[i] = mathjs__WEBPACK_IMPORTED_MODULE_3__["sum"](values.map(function (vec) { return vec[i]; }));
                    };
                    for (var i = 0; i < data_size; i++) {
                        _loop_3(i);
                    }
                    return result;
                }
                else {
                    return mathjs__WEBPACK_IMPORTED_MODULE_3__["sum"](values);
                }
            case _common__WEBPACK_IMPORTED_MODULE_0__["EAttribPromote"].MIN:
                if (data_size > 1) {
                    var result = [];
                    var _loop_4 = function (i) {
                        result[i] = mathjs__WEBPACK_IMPORTED_MODULE_3__["min"](values.map(function (vec) { return vec[i]; }));
                    };
                    for (var i = 0; i < data_size; i++) {
                        _loop_4(i);
                    }
                    return result;
                }
                else {
                    return mathjs__WEBPACK_IMPORTED_MODULE_3__["min"](values);
                }
            case _common__WEBPACK_IMPORTED_MODULE_0__["EAttribPromote"].MAX:
                if (data_size > 1) {
                    var result = [];
                    var _loop_5 = function (i) {
                        result[i] = mathjs__WEBPACK_IMPORTED_MODULE_3__["max"](values.map(function (vec) { return vec[i]; }));
                    };
                    for (var i = 0; i < data_size; i++) {
                        _loop_5(i);
                    }
                    return result;
                }
                else {
                    return mathjs__WEBPACK_IMPORTED_MODULE_3__["max"](values);
                }
            case _common__WEBPACK_IMPORTED_MODULE_0__["EAttribPromote"].LAST:
                return values[values.length - 1];
            default:
                return values[0]; // EAttribPromote.FIRST
        }
    };
    /**
     * Utility method to check the data type and size of a value
     * @param value
     */
    GIAttribsAdd.prototype._checkDataTypeSize = function (value) {
        var data_size;
        var first_value = null;
        if (Array.isArray(value)) {
            var values = value;
            if (values.length === 1) {
                throw new Error('An array data type must have more than one value.');
            }
            first_value = values[0];
            data_size = values.length;
        }
        else {
            first_value = value;
            data_size = 1;
        }
        var data_type = null;
        if (typeof first_value === 'number') {
            data_type = _common__WEBPACK_IMPORTED_MODULE_0__["EAttribDataTypeStrs"].FLOAT;
        }
        else if (typeof first_value === 'string') {
            data_type = _common__WEBPACK_IMPORTED_MODULE_0__["EAttribDataTypeStrs"].STRING;
        }
        else {
            throw new Error('Data type for new attribute not recognised.');
        }
        return [data_type, data_size];
    };
    return GIAttribsAdd;
}());



/***/ }),

/***/ "./src/assets/libs/geo-info/GIAttribsIO.ts":
/*!*************************************************!*\
  !*** ./src/assets/libs/geo-info/GIAttribsIO.ts ***!
  \*************************************************/
/*! exports provided: GIAttribsIO */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GIAttribsIO", function() { return GIAttribsIO; });
/* harmony import */ var _common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./common */ "./src/assets/libs/geo-info/common.ts");
/* harmony import */ var _GIAttribMap__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./GIAttribMap */ "./src/assets/libs/geo-info/GIAttribMap.ts");


/**
 * Class for attributes.
 */
var GIAttribsIO = /** @class */ (function () {
    /**
      * Creates an object to store the attribute data.
      * @param model The JSON data
      */
    function GIAttribsIO(model, attribs_maps) {
        this._model = model;
        this._attribs_maps = attribs_maps;
    }
    /**
     * Adds data to this model from JSON data.
     * The existing data in the model is not deleted.
     * @param model_data The JSON data for the model.
     */
    GIAttribsIO.prototype.merge = function (attribs_maps) {
        // add the attribute data
        if (attribs_maps.ps !== undefined) {
            this._mergeAttribs(attribs_maps, _common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].POSI);
        }
        if (attribs_maps._v !== undefined) {
            this._mergeAttribs(attribs_maps, _common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].VERT);
        }
        if (attribs_maps._e !== undefined) {
            this._mergeAttribs(attribs_maps, _common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].EDGE);
        }
        if (attribs_maps._w !== undefined) {
            this._mergeAttribs(attribs_maps, _common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].WIRE);
        }
        if (attribs_maps._f !== undefined) {
            this._mergeAttribs(attribs_maps, _common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].FACE);
        }
        if (attribs_maps.pt !== undefined) {
            this._mergeAttribs(attribs_maps, _common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].POINT);
        }
        if (attribs_maps.pl !== undefined) {
            this._mergeAttribs(attribs_maps, _common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].PLINE);
        }
        if (attribs_maps.pg !== undefined) {
            this._mergeAttribs(attribs_maps, _common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].PGON);
        }
        if (attribs_maps.co !== undefined) {
            this._mergeAttribs(attribs_maps, _common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].COLL);
        }
        if (attribs_maps.mo !== undefined) {
            this._mergeModelAttribs(attribs_maps);
        }
    };
    /**
     * Adds data to this model from JSON data.
     * The existing data in the model is not deleted.
     * @param model_data The JSON data for the model.
     */
    GIAttribsIO.prototype.setData = function (attribs_data) {
        // add the attribute data
        if (attribs_data.positions !== undefined) {
            this._setAttribs(attribs_data.positions, _common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].POSI);
        }
        if (attribs_data.vertices !== undefined) {
            this._setAttribs(attribs_data.vertices, _common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].VERT);
        }
        if (attribs_data.edges !== undefined) {
            this._setAttribs(attribs_data.edges, _common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].EDGE);
        }
        if (attribs_data.wires !== undefined) {
            this._setAttribs(attribs_data.wires, _common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].WIRE);
        }
        if (attribs_data.faces !== undefined) {
            this._setAttribs(attribs_data.faces, _common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].FACE);
        }
        if (attribs_data.points !== undefined) {
            this._setAttribs(attribs_data.points, _common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].POINT);
        }
        if (attribs_data.polylines !== undefined) {
            this._setAttribs(attribs_data.polylines, _common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].PLINE);
        }
        if (attribs_data.polygons !== undefined) {
            this._setAttribs(attribs_data.polygons, _common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].PGON);
        }
        if (attribs_data.collections !== undefined) {
            this._setAttribs(attribs_data.collections, _common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].COLL);
        }
        if (attribs_data.model !== undefined) {
            this._setModelAttribs(attribs_data.model);
        }
    };
    /**
     * Returns the JSON data for this model.
     */
    GIAttribsIO.prototype.getData = function () {
        return {
            positions: Array.from(this._attribs_maps.ps.values()).map(function (attrib) { return attrib.getData(); }),
            vertices: Array.from(this._attribs_maps._v.values()).map(function (attrib) { return attrib.getData(); }),
            edges: Array.from(this._attribs_maps._e.values()).map(function (attrib) { return attrib.getData(); }),
            wires: Array.from(this._attribs_maps._w.values()).map(function (attrib) { return attrib.getData(); }),
            faces: Array.from(this._attribs_maps._f.values()).map(function (attrib) { return attrib.getData(); }),
            points: Array.from(this._attribs_maps.pt.values()).map(function (attrib) { return attrib.getData(); }),
            polylines: Array.from(this._attribs_maps.pl.values()).map(function (attrib) { return attrib.getData(); }),
            polygons: Array.from(this._attribs_maps.pg.values()).map(function (attrib) { return attrib.getData(); }),
            collections: Array.from(this._attribs_maps.co.values()).map(function (attrib) { return attrib.getData(); }),
            model: Array.from(this._attribs_maps.mo)
        };
    };
    // ============================================================================
    // Private methods
    // ============================================================================
    /**
     * From another model
     * The existing attributes are not deleted
     * @param attribs_maps
     */
    GIAttribsIO.prototype._mergeModelAttribs = function (attribs_maps) {
        var from_attrib = attribs_maps[_common__WEBPACK_IMPORTED_MODULE_0__["EEntTypeStr"][_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].MOD]];
        var to_attrib = this._attribs_maps[_common__WEBPACK_IMPORTED_MODULE_0__["EEntTypeStr"][_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].MOD]];
        from_attrib.forEach(function (value, name) {
            to_attrib.set(name, value);
        });
    };
    /**
     * From JSON data
     * Existing attributes are deleted
     * @param new_attribs_data
     */
    GIAttribsIO.prototype._setModelAttribs = function (new_attribs_data) {
        this._attribs_maps[_common__WEBPACK_IMPORTED_MODULE_0__["EEntTypeStr"][_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].MOD]] = new Map(new_attribs_data);
    };
    /**
     * From another model
     * The existing attributes are not deleted
     * @param attribs_maps
     */
    GIAttribsIO.prototype._mergeAttribs = function (attribs_maps, ent_type) {
        var from_attribs = attribs_maps[_common__WEBPACK_IMPORTED_MODULE_0__["EEntTypeStr"][ent_type]];
        var to_attribs = this._attribs_maps[_common__WEBPACK_IMPORTED_MODULE_0__["EEntTypeStr"][ent_type]];
        var num_ents = this._model.geom.query.numEnts(ent_type, true); // incude deleted ents
        from_attribs.forEach(function (from_attrib) {
            var name = from_attrib.getName();
            // get or create the existing attrib
            if (!to_attribs.has(name)) {
                to_attribs.set(name, new _GIAttribMap__WEBPACK_IMPORTED_MODULE_1__["GIAttribMap"](name, from_attrib.getDataType(), from_attrib.getDataSize()));
            }
            var to_attrib = to_attribs.get(name);
            // get the data and shift the ents_i indices
            var ents_i_values = from_attrib.getEntsVals();
            for (var _i = 0, ents_i_values_1 = ents_i_values; _i < ents_i_values_1.length; _i++) {
                var ents_i_value = ents_i_values_1[_i];
                ents_i_value[0] = ents_i_value[0].map(function (ent_i) { return ent_i + num_ents; }); // shift
            }
            // set the data
            to_attrib.setEntsVals(ents_i_values);
        });
    };
    /**
     * From JSON data
     * Existing attributes are deleted
     * @param new_attribs_data
     */
    GIAttribsIO.prototype._setAttribs = function (new_attribs_data, ent_type) {
        var to_attribs = new Map();
        new_attribs_data.forEach(function (new_attrib_data) {
            var name = new_attrib_data.name;
            // create a new attrib
            var to_attrib = new _GIAttribMap__WEBPACK_IMPORTED_MODULE_1__["GIAttribMap"](name, new_attrib_data.data_type, new_attrib_data.data_size);
            to_attribs.set(name, to_attrib);
            // set the data
            to_attrib.setEntsVals(new_attrib_data.data);
        });
        this._attribs_maps[_common__WEBPACK_IMPORTED_MODULE_0__["EEntTypeStr"][ent_type]] = to_attribs;
    };
    return GIAttribsIO;
}());



/***/ }),

/***/ "./src/assets/libs/geo-info/GIAttribsQuery.ts":
/*!****************************************************!*\
  !*** ./src/assets/libs/geo-info/GIAttribsQuery.ts ***!
  \****************************************************/
/*! exports provided: GIAttribsQuery */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GIAttribsQuery", function() { return GIAttribsQuery; });
/* harmony import */ var _common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./common */ "./src/assets/libs/geo-info/common.ts");

/**
 * Class for attributes.
 */
var GIAttribsQuery = /** @class */ (function () {
    /**
      * Creates an object to store the attribute data.
      * @param model The JSON data
      */
    function GIAttribsQuery(model, attribs_maps) {
        this._model = model;
        this._attribs_maps = attribs_maps;
    }
    /**
     * Checks if an attribute with this name exists.
     * @param name
     */
    GIAttribsQuery.prototype.hasModelAttrib = function (name) {
        var attribs_maps_key = _common__WEBPACK_IMPORTED_MODULE_0__["EEntTypeStr"][_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].MOD];
        var attrib = this._attribs_maps[attribs_maps_key];
        return attrib.has(name);
    };
    /**
     * Get attrib data type. Also works for MOD attribs.
     *
     * @param ent_type
     * @param name
     */
    GIAttribsQuery.prototype.getAttribDataType = function (ent_type, name) {
        var attribs_maps_key = _common__WEBPACK_IMPORTED_MODULE_0__["EEntTypeStr"][ent_type];
        var attribs = this._attribs_maps[attribs_maps_key];
        if (attribs.get(name) === undefined) {
            throw new Error('Attribute with this name does not exist.');
        }
        if (ent_type === _common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].MOD) {
            var mod_attribs = attribs;
            var value = mod_attribs.get(name);
            var first_value = void 0;
            if (Array.isArray(value)) {
                first_value = value[0];
            }
            else {
                first_value = value;
            }
            if (typeof first_value === 'string') {
                return _common__WEBPACK_IMPORTED_MODULE_0__["EAttribDataTypeStrs"].STRING;
            }
            return _common__WEBPACK_IMPORTED_MODULE_0__["EAttribDataTypeStrs"].FLOAT;
        }
        else {
            var ent_attribs = attribs;
            return ent_attribs.get(name).getDataType();
        }
    };
    /**
     * Get attrib data size. Also works for MOD attribs.
     *
     * @param ent_type
     * @param name
     */
    GIAttribsQuery.prototype.getAttribDataSize = function (ent_type, name) {
        var attribs_maps_key = _common__WEBPACK_IMPORTED_MODULE_0__["EEntTypeStr"][ent_type];
        var attribs = this._attribs_maps[attribs_maps_key];
        if (attribs.get(name) === undefined) {
            throw new Error('Attribute with this name does not exist.');
        }
        if (ent_type === _common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].MOD) {
            var mod_attribs = attribs;
            var value = mod_attribs.get(name);
            if (Array.isArray(value)) {
                return value.length;
            }
            else {
                return 1;
            }
        }
        else {
            var ent_attribs = attribs;
            return ent_attribs.get(name).getDataSize();
        }
    };
    /**
     * Get a model attrib value
     * @param name
     */
    GIAttribsQuery.prototype.getModelAttribValue = function (name) {
        var attribs_maps_key = _common__WEBPACK_IMPORTED_MODULE_0__["EEntTypeStr"][_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].MOD];
        var attrib = this._attribs_maps[attribs_maps_key];
        if (attrib.get(name) === undefined) {
            throw new Error('Attribute with this name does not exist.');
        }
        return attrib.get(name);
    };
    /**
     * Get a model attrib indexed value
     * @param ent_type
     * @param name
     */
    GIAttribsQuery.prototype.getModelAttribIndexedValue = function (name, value_index) {
        var attribs_maps_key = _common__WEBPACK_IMPORTED_MODULE_0__["EEntTypeStr"][_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].MOD];
        var attrib = this._attribs_maps[attribs_maps_key];
        var list_value = attrib.get(name);
        if (list_value === undefined) {
            throw new Error('Attribute with this name does not exist.');
        }
        if (!Array.isArray(list_value)) {
            throw new Error('Attribute is not a list, so indexed values are not allowed.');
        }
        if (value_index >= list_value.length) {
            throw new Error('Value index is out of range for attribute list size.');
        }
        return list_value[value_index];
    };
    /**
     * Get an entity attrib value
     * @param ent_type
     * @param name
     */
    GIAttribsQuery.prototype.getAttribValue = function (ent_type, name, ents_i) {
        var attribs_maps_key = _common__WEBPACK_IMPORTED_MODULE_0__["EEntTypeStr"][ent_type];
        var attribs = this._attribs_maps[attribs_maps_key];
        if (attribs.get(name) === undefined) {
            throw new Error('Attribute with this name does not exist.');
        }
        return attribs.get(name).getEntVal(ents_i);
    };
    /**
     * Get an entity attrib indexed value
     * @param ent_type
     * @param name
     */
    GIAttribsQuery.prototype.getAttribIndexedValue = function (ent_type, name, ents_i, value_index) {
        var attribs_maps_key = _common__WEBPACK_IMPORTED_MODULE_0__["EEntTypeStr"][ent_type];
        var attribs = this._attribs_maps[attribs_maps_key];
        var attrib = attribs.get(name);
        if (attrib === undefined) {
            throw new Error('Attribute with this name does not exist.');
        }
        // if (attrib.getDataSize() === 1) { throw new Error('Attribute is not a list, so indexed values are not allowed.'); }
        if (value_index >= attrib.getDataSize()) {
            throw new Error('Value index is out of range for attribute list size.');
        }
        return attrib.getEntIdxVal(ents_i, value_index);
    };
    /**
     * Check if attribute exists
     * @param ent_type
     * @param name
     */
    GIAttribsQuery.prototype.hasAttrib = function (ent_type, name) {
        var attribs_maps_key = _common__WEBPACK_IMPORTED_MODULE_0__["EEntTypeStr"][ent_type];
        var attribs = this._attribs_maps[attribs_maps_key];
        return attribs.has(name);
    };
    /**
     * Get all the attribute names for an entity type
     * @param ent_type
     */
    GIAttribsQuery.prototype.getAttribNames = function (ent_type) {
        var attribs_maps_key = _common__WEBPACK_IMPORTED_MODULE_0__["EEntTypeStr"][ent_type];
        var attribs = this._attribs_maps[attribs_maps_key];
        return Array.from(attribs.keys());
    };
    /**
     * Get attrib
     * @param ent_type
     * @param name
     */
    GIAttribsQuery.prototype.getAttrib = function (ent_type, name) {
        var attribs_maps_key = _common__WEBPACK_IMPORTED_MODULE_0__["EEntTypeStr"][ent_type];
        var attribs = this._attribs_maps[attribs_maps_key];
        return attribs.get(name);
    };
    /**
     * Query the model using a query strings.
     * Returns a list of entities in the model.
     * @param ent_type The type of the entities being search for
     * @param query_str The query string, e.g. '#@name == value'
     * @param indices The indices of entites in the model. These are assumed to be of type ent_type.
     */
    GIAttribsQuery.prototype.queryAttribs = function (ent_type, query_str, indices) {
        // get the map that contains all the ettributes for the ent_type
        var attribs_maps_key = _common__WEBPACK_IMPORTED_MODULE_0__["EEntTypeStr"][ent_type];
        var attribs = this._attribs_maps[attribs_maps_key];
        // parse the query
        var queries = parseQuery(query_str);
        if (!queries) {
            return [];
        }
        // do the query, one by one
        // [[query1 && query2] || [query3 && query4]]
        var union_query_results = [];
        for (var _i = 0, queries_1 = queries; _i < queries_1.length; _i++) {
            var and_queries = queries_1[_i];
            // get the ents_i to start the '&&' query
            var query_ents_i = null;
            if (indices !== null && indices !== undefined) {
                query_ents_i = indices;
            }
            else {
                query_ents_i = this._model.geom.query.getEnts(ent_type, false);
            }
            // do the '&&' queries
            for (var _a = 0, and_queries_1 = and_queries; _a < and_queries_1.length; _a++) {
                var and_query = and_queries_1[_a];
                if (attribs && attribs.has(and_query.attrib_name)) {
                    var attrib = attribs.get(and_query.attrib_name);
                    query_ents_i = attrib.queryVal(query_ents_i, and_query.attrib_index, and_query.operator_type, and_query.attrib_value_str);
                }
                else {
                    throw new Error('Attribute "' + and_query.attrib_name + '" does not exist.');
                    // query_ents_i = [];
                }
            }
            // combine the results of the '&&' queries
            if (query_ents_i !== null && query_ents_i.length > 0) {
                union_query_results = Array.from(new Set(union_query_results.concat(query_ents_i)));
            }
        }
        // return the result
        return union_query_results;
    };
    /**
     * Query the model using a sort strings.
     * Returns a list of entities in the model.
     * @param ent_type The type of the entities being search for
     * @param sort_str The sort string, e.g. '#@name && #@name2[3]'
     * @param indices The indices of entites in the model. These are assumed to be of type ent_type.
     */
    GIAttribsQuery.prototype.sortByAttribs = function (ent_type, indices, sort_str, method) {
        // get the map that contains all the ettributes for the ent_type
        var attribs_maps_key = _common__WEBPACK_IMPORTED_MODULE_0__["EEntTypeStr"][ent_type];
        var attribs = this._attribs_maps[attribs_maps_key];
        if (!attribs) {
            throw new Error('Bad sort: Attribute does not exist.');
        }
        // parse the query
        var sorts = parseSort(sort_str);
        if (!sorts) {
            return [];
        }
        // create the sort copmapre function
        function _sortCompare(ent1_i, ent2_i) {
            // do the '&&' sorts
            for (var _i = 0, sorts_1 = sorts; _i < sorts_1.length; _i++) {
                var sort = sorts_1[_i];
                if (!attribs.has(sort.attrib_name)) {
                    throw new Error('Bad sort: Attribute does not exist.');
                }
                var attrib = attribs.get(sort.attrib_name);
                var data_size = attrib.getDataSize();
                if (sort.attrib_index !== undefined && data_size === 1) {
                    throw new Error('Bad sort: Attribute with index must have a size greater than 1.');
                }
                var val1 = attrib.getEntVal(ent1_i);
                var val2 = attrib.getEntVal(ent2_i);
                if (sort.attrib_index !== undefined && sort.attrib_index !== null) {
                    if (val1 !== undefined && val1 !== null) {
                        val1 = val1[sort.attrib_index];
                    }
                    if (val2 !== undefined && val2 !== null) {
                        val2 = val2[sort.attrib_index];
                    }
                }
                if (method === _common__WEBPACK_IMPORTED_MODULE_0__["ESort"].DESCENDING) {
                    if (val1 < val2) {
                        return -1;
                    }
                    if (val1 > val2) {
                        return 1;
                    }
                }
                else {
                    if (val1 < val2) {
                        return 1;
                    }
                    if (val1 > val2) {
                        return -1;
                    }
                }
            }
            return 0;
        }
        // do the sort
        indices.sort(_sortCompare);
        return indices;
    };
    // ============================================================================
    // Shortcuts for getting xyz
    // ============================================================================
    /**
     * Shortcut for getting a coordinate from a numeric position index (i.e. this is not an ID)
     * @param posi_i
     */
    GIAttribsQuery.prototype.getPosiCoords = function (posi_i) {
        var result = this._attribs_maps.ps.get(_common__WEBPACK_IMPORTED_MODULE_0__["EAttribNames"].COORDS).getEntVal(posi_i);
        return result;
    };
    // /**
    //  * Shortcut for getting all coordinates
    //  * @param posi_i
    //  */
    // public getAllPosisCoords(): Txyz[] {
    //     const posis_i: number[] = this._model.geom.query.getEnts(EEntType.POSI);
    //     const coords_map: GIAttribMap = this._attribs_maps.ps.get(EAttribNames.COORDS);
    //     return coords_map.getEntVal(posis_i) as Txyz[];
    // }
    /**
     * Shortcut for getting a coordinate from a numeric vertex index (i.e. this is not an ID)
     * @param vert_i
     */
    GIAttribsQuery.prototype.getVertCoords = function (vert_i) {
        var posi_i = this._model.geom.query.navVertToPosi(vert_i);
        return this._attribs_maps.ps.get(_common__WEBPACK_IMPORTED_MODULE_0__["EAttribNames"].COORDS).getEntVal(posi_i);
    };
    return GIAttribsQuery;
}());

// ================================================================================================
// Functions for parsing queries
// ================================================================================================
/**
 * Parse a query string.
 * && takes precedence over ||
 * [ [ query1 && query2 ] || [ query3 && query4 ] ]
 */
function parseQuery(query_str) {
    if (!query_str.startsWith('#')) {
        throw new Error('Bad query, query string must start with #.');
    }
    var or_query_strs = query_str.split('||');
    var query_list = [];
    or_query_strs.forEach(function (or_query_str) {
        var and_query_strs = or_query_str.split('&&');
        query_list.push(and_query_strs.map(function (and_query_str) { return _parse_query_component(and_query_str); }));
    });
    return query_list;
}
/**
 * Parse a query component string.
 */
function _parse_query_component(query_component) {
    var attrib_name_str = '';
    var attrib_value_str = '';
    var operator_type = null;
    // split the query at the @ sign
    var _a = query_component.split('@'), _ = _a[0], attrib_name_value_str = _a[1];
    if (!attrib_name_value_str) {
        throw new Error('Bad query.');
    }
    // split the attrib_name_value_str based on operator, ==, !=, etc...
    for (var _i = 0, _b = Object.keys(_common__WEBPACK_IMPORTED_MODULE_0__["EQueryOperatorTypes"]); _i < _b.length; _i++) {
        var key = _b[_i];
        var split_query = attrib_name_value_str.split(_common__WEBPACK_IMPORTED_MODULE_0__["EQueryOperatorTypes"][key]);
        if (split_query.length === 2) {
            attrib_name_str = split_query[0].trim();
            attrib_value_str = split_query[1].trim();
            operator_type = _common__WEBPACK_IMPORTED_MODULE_0__["EQueryOperatorTypes"][key];
            break;
        }
    }
    // check
    if (!operator_type) {
        throw new Error('Bad operator in query.');
    }
    if (!attrib_name_str) {
        throw new Error('Bad attribute name in query.');
    }
    if (!attrib_value_str) {
        throw new Error('Bad attribute value in query.');
    }
    // parse the name
    var attrib_name_index = _parse_name_str(attrib_name_str);
    var attrib_name = attrib_name_index[0];
    var attrib_index = attrib_name_index[1];
    // parse the value
    attrib_value_str = _parse_value_str(attrib_value_str);
    // return the data for the query component as an object
    return {
        attrib_name: attrib_name,
        attrib_index: attrib_index,
        attrib_value_str: attrib_value_str,
        operator_type: operator_type
    };
}
/**
 * Parse a sort string. #@name1 && #@name2
 * Rerurns an array,[ query1, query2 ]
 */
function parseSort(sort_str) {
    if (!sort_str.startsWith('#')) {
        throw new Error('Bad sort, sort string must start with #.');
    }
    if (sort_str.indexOf('||') !== -1) {
        throw new Error('Bad sort, sort string cannot contain || conditions.');
    }
    var sort_str_clean = sort_str.replace(/\s/g, '');
    var component_strs = sort_str_clean.split('&&');
    var sort_list = [];
    component_strs.forEach(function (component_str) {
        sort_list.push(_parse_sort_component(component_str));
    });
    return sort_list;
}
/**
 * Parse a query component string.
 */
function _parse_sort_component(sort_component) {
    // split the query at the @ sign
    var _a = sort_component.split('@'), _ = _a[0], attrib_name_str = _a[1];
    // check
    if (!attrib_name_str) {
        throw new Error('Bad attribute name in query.');
    }
    // parse the name
    var attrib_name_index = _parse_name_str(attrib_name_str);
    var attrib_name = attrib_name_index[0];
    var attrib_index = attrib_name_index[1];
    // return the data for the query component as an object
    return {
        attrib_name: attrib_name,
        attrib_index: attrib_index
    };
}
/**
 * Parse the attribute value. Handles sting with quotes, e.g. 'this' and "that".
 * Remove quotes from value string
 */
function _parse_value_str(value_str) {
    var first_char = value_str.slice(0, 1);
    if (first_char === '\'' || first_char === '"') {
        return value_str.slice(1, -1);
    }
    return value_str;
}
/**
 * Parese the attribute name. Handles names with indexes, e.g. 'name[2]'
 * Split the name into the string name and the numeric index
 */
function _parse_name_str(value_str) {
    var last_char = value_str.slice(-1);
    if (last_char === ']') {
        var _a = value_str.slice(0, -1).split('['), name_str = _a[0], index_str = _a[1];
        var index = Number(index_str);
        if (isNaN(index)) {
            throw new Error('Bad query');
        }
        return [name_str, index];
    }
    return [value_str, null];
}


/***/ }),

/***/ "./src/assets/libs/geo-info/GIAttribsThreejs.ts":
/*!******************************************************!*\
  !*** ./src/assets/libs/geo-info/GIAttribsThreejs.ts ***!
  \******************************************************/
/*! exports provided: GIAttribsThreejs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GIAttribsThreejs", function() { return GIAttribsThreejs; });
/* harmony import */ var _common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./common */ "./src/assets/libs/geo-info/common.ts");
/* harmony import */ var util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! util */ "./node_modules/util/util.js");
/* harmony import */ var util__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(util__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _util_maps__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/maps */ "./src/assets/libs/util/maps.ts");



/**
 * Class for attributes.
 */
var GIAttribsThreejs = /** @class */ (function () {
    /**
      * Creates an object to store the attribute data.
      * @param model The JSON data
      */
    function GIAttribsThreejs(model, attribs_maps) {
        this._model = model;
        this._attribs_maps = attribs_maps;
    }
    // ============================================================================
    // Threejs
    // For methods to get the array of edges and triangles, see the geom class
    // get3jsTris() and get3jsEdges()
    // ============================================================================
    /**
     * Get a flat array of all the coordinates of all the vertices.
     * Verts that have been deleted will not be included
     * @param verts An array of vertex indices pointing to the positio.
     */
    GIAttribsThreejs.prototype.get3jsSeqPosisCoords = function () {
        var coords_attrib = this._attribs_maps.ps.get(_common__WEBPACK_IMPORTED_MODULE_0__["EAttribNames"].COORDS);
        //
        var coords = [];
        var posi_map = new Map();
        var posis_i = this._model.geom.query.getEnts(_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].POSI, true);
        posis_i.forEach(function (posi_i, gi_index) {
            if (posi_i !== null) {
                var tjs_index = coords.push(coords_attrib.getEntVal(posi_i)) - 1;
                posi_map.set(gi_index, tjs_index);
            }
        });
        // @ts-ignore
        return [coords.flat(1), posi_map];
    };
    /**
     * Get a flat array of all the coordinates of all the vertices.
     * Verts that have been deleted will not be included
     * @param verts An array of vertex indices pointing to the positio.
     */
    GIAttribsThreejs.prototype.get3jsSeqVertsCoords = function () {
        var _this = this;
        var coords_attrib = this._attribs_maps.ps.get(_common__WEBPACK_IMPORTED_MODULE_0__["EAttribNames"].COORDS);
        //
        var coords = [];
        var vertex_map = new Map();
        var verts_i = this._model.geom.query.getEnts(_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].VERT, true);
        verts_i.forEach(function (vert_i, gi_index) {
            if (vert_i !== null) {
                var posi_i = _this._model.geom.query.navVertToPosi(vert_i);
                var tjs_index = coords.push(coords_attrib.getEntVal(posi_i)) - 1;
                vertex_map.set(gi_index, tjs_index);
            }
        });
        // @ts-ignore
        return [coords.flat(1), vertex_map];
    };
    /**
     * Get a flat array of attribute values for all the vertices.
     * Verts that have been deleted will not be included
     * @param attrib_name The name of the vertex attribute. Either NORMAL or COLOR.
     */
    GIAttribsThreejs.prototype.get3jsSeqVertsAttrib = function (attrib_name) {
        if (!this._attribs_maps._v.has(attrib_name)) {
            return null;
        }
        var verts_attrib = this._attribs_maps._v.get(attrib_name);
        //
        var verts_attribs_values = [];
        var verts_i = this._model.geom.query.getEnts(_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].VERT, true);
        verts_i.forEach(function (vert_i, gi_index) {
            if (vert_i !== null) {
                var value = verts_attrib.getEntVal(vert_i);
                if (attrib_name === _common__WEBPACK_IMPORTED_MODULE_0__["EAttribNames"].COLOUR) {
                    var _value = value === undefined ? [1, 1, 1] : value;
                    verts_attribs_values.push(_value);
                }
                else {
                    verts_attribs_values.push(value);
                }
            }
        });
        // @ts-ignore
        return verts_attribs_values.flat(1);
    };
    /**
     *
     */
    GIAttribsThreejs.prototype.getModelAttribsForTable = function () {
        var attribs_maps_key = _common__WEBPACK_IMPORTED_MODULE_0__["EEntTypeStr"][_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].MOD];
        var attribs = this._attribs_maps[attribs_maps_key];
        if (attribs === undefined) {
            return [];
        }
        var arr = [];
        attribs.forEach(function (value, key) {
            // const _value = isString(value) ? `'${value}'` : value;
            var _value = value;
            var obj = { Name: key, Value: _value };
            arr.push(obj);
        });
        // console.log(arr);
        return arr;
    };
    /**
     *
     * @param ent_type
     */
    GIAttribsThreejs.prototype.getAttribsForTable = function (ent_type) {
        // get the attribs map for this ent type
        var attribs_maps_key = _common__WEBPACK_IMPORTED_MODULE_0__["EEntTypeStr"][ent_type];
        var attribs = this._attribs_maps[attribs_maps_key];
        // create a map of objects to store the data
        var data_obj_map = new Map();
        // create the ID for each table row
        var ents_i = this._model.geom.query.getEnts(ent_type, false);
        var i = 0;
        for (var _i = 0, ents_i_1 = ents_i; _i < ents_i_1.length; _i++) {
            var ent_i = ents_i_1[_i];
            data_obj_map.set(ent_i, { '#': i, _id: "" + attribs_maps_key + ent_i });
            i++;
        }
        // loop through all the attributes
        attribs.forEach(function (attrib, attrib_name) {
            var data_size = attrib.getDataSize();
            var _loop_1 = function (ent_i) {
                if (attrib_name.substr(0, 1) === '_') {
                    var attrib_value = attrib.getEntVal(ent_i);
                    data_obj_map.get(ent_i)["" + attrib_name] = attrib_value;
                }
                else {
                    var attrib_value = attrib.getEntVal(ent_i);
                    if (data_size > 1) {
                        if (attrib_value !== undefined) {
                            attrib_value.forEach(function (v, idx) {
                                var _v = v;
                                data_obj_map.get(ent_i)[attrib_name + "[" + idx + "]"] = _v;
                            });
                        }
                        else {
                            for (var idx = 0; idx < data_size; idx++) {
                                data_obj_map.get(ent_i)[attrib_name + "[" + idx + "]"] = undefined;
                            }
                        }
                    }
                    else {
                        var _attrib_value = Object(util__WEBPACK_IMPORTED_MODULE_1__["isString"])(attrib_value) ? "'" + attrib_value + "'" : attrib_value;
                        data_obj_map.get(ent_i)["" + attrib_name] = _attrib_value;
                    }
                }
            };
            for (var _i = 0, ents_i_2 = ents_i; _i < ents_i_2.length; _i++) {
                var ent_i = ents_i_2[_i];
                _loop_1(ent_i);
            }
        });
        return Array.from(data_obj_map.values());
    };
    /**
     * @param ent_type
     * @param ents_i
     */
    GIAttribsThreejs.prototype.getEntsVals = function (selected_ents, ent_type) {
        var attribs_maps_key = _common__WEBPACK_IMPORTED_MODULE_0__["EEntTypeStr"][ent_type];
        var attribs = this._attribs_maps[attribs_maps_key];
        var data_obj_map = new Map();
        if (!selected_ents || selected_ents === undefined) {
            return [];
        }
        var i = 0;
        var selected_ents_sorted = Object(_util_maps__WEBPACK_IMPORTED_MODULE_2__["sortByKey"])(selected_ents);
        selected_ents_sorted.forEach(function (ent) {
            data_obj_map.set(ent, { '#': i, _id: "" + attribs_maps_key + ent });
            i++;
        });
        attribs.forEach(function (attrib, attrib_name) {
            var data_size = attrib.getDataSize();
            var _loop_2 = function (ent_i) {
                if (attrib_name.substr(0, 1) === '_') {
                    var attrib_value = attrib.getEntVal(ent_i);
                    data_obj_map.get(ent_i)["" + attrib_name] = attrib_value;
                }
                else {
                    var attrib_value = attrib.getEntVal(ent_i);
                    if (data_size > 1) {
                        if (attrib_value !== undefined) {
                            attrib_value.forEach(function (v, idx) {
                                data_obj_map.get(ent_i)[attrib_name + "[" + idx + "]"] = v;
                            });
                        }
                        else {
                            for (var idx = 0; idx < data_size; idx++) {
                                data_obj_map.get(ent_i)[attrib_name + "[" + idx + "]"] = undefined;
                            }
                        }
                    }
                    else {
                        var _attrib_value = Object(util__WEBPACK_IMPORTED_MODULE_1__["isString"])(attrib_value) ? "'" + attrib_value + "'" : attrib_value;
                        data_obj_map.get(ent_i)["" + attrib_name] = _attrib_value;
                    }
                }
            };
            for (var _i = 0, _a = Array.from(selected_ents.values()); _i < _a.length; _i++) {
                var ent_i = _a[_i];
                _loop_2(ent_i);
            }
        });
        return Array.from(data_obj_map.values());
    };
    GIAttribsThreejs.prototype.getIdIndex = function (ent_type, id) {
        var ents_i = this._model.geom.query.getEnts(ent_type, false);
        var index = ents_i.findIndex(function (ent_i) { return ent_i === id; });
        return index;
    };
    return GIAttribsThreejs;
}());



/***/ }),

/***/ "./src/assets/libs/geo-info/GIGeom.ts":
/*!********************************************!*\
  !*** ./src/assets/libs/geo-info/GIGeom.ts ***!
  \********************************************/
/*! exports provided: GIGeom */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GIGeom", function() { return GIGeom; });
/* harmony import */ var _GIGeomAdd__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./GIGeomAdd */ "./src/assets/libs/geo-info/GIGeomAdd.ts");
/* harmony import */ var _GIGeomModify__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./GIGeomModify */ "./src/assets/libs/geo-info/GIGeomModify.ts");
/* harmony import */ var _GIGeomQuery__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./GIGeomQuery */ "./src/assets/libs/geo-info/GIGeomQuery.ts");
/* harmony import */ var _GIGeomThreejs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./GIGeomThreejs */ "./src/assets/libs/geo-info/GIGeomThreejs.ts");
/* harmony import */ var _GIGeomIO__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./GIGeomIO */ "./src/assets/libs/geo-info/GIGeomIO.ts");





/**
 * Class for geometry.
 */
var GIGeom = /** @class */ (function () {
    /**
     * Creates an object to store the geometry data.
     * @param geom_data The JSON data
     */
    function GIGeom(model) {
        //  all arrays
        this._geom_arrays = {
            // num_posis: 0,
            dn_verts_posis: [],
            dn_tris_verts: [],
            dn_edges_verts: [],
            dn_wires_edges: [],
            dn_faces_wirestris: [],
            dn_points_verts: [],
            dn_plines_wires: [],
            dn_pgons_faces: [],
            dn_colls_objs: [],
            up_posis_verts: [],
            up_tris_faces: [],
            up_verts_edges: [],
            up_verts_tris: [],
            up_verts_points: [],
            up_edges_wires: [],
            up_wires_faces: [],
            up_wires_plines: [],
            up_faces_pgons: [],
            up_points_colls: [],
            up_plines_colls: [],
            up_pgons_colls: []
        };
        this.model = model;
        this.io = new _GIGeomIO__WEBPACK_IMPORTED_MODULE_4__["GIGeomIO"](this, this._geom_arrays);
        this.add = new _GIGeomAdd__WEBPACK_IMPORTED_MODULE_0__["GIGeomAdd"](this, this._geom_arrays);
        this.modify = new _GIGeomModify__WEBPACK_IMPORTED_MODULE_1__["GIGeomModify"](this, this._geom_arrays);
        this.query = new _GIGeomQuery__WEBPACK_IMPORTED_MODULE_2__["GIGeomQuery"](this, this._geom_arrays);
        this.threejs = new _GIGeomThreejs__WEBPACK_IMPORTED_MODULE_3__["GIGeomThreejs"](this, this._geom_arrays);
        this.selected = [];
    }
    /**
     * Checks geometry for internal consistency
     */
    GIGeom.prototype.check = function () {
        var errors = [];
        this._checkPosis().forEach(function (error) { return errors.push(error); });
        this._checkVerts().forEach(function (error) { return errors.push(error); });
        this._checkEdges().forEach(function (error) { return errors.push(error); });
        this._checkWires().forEach(function (error) { return errors.push(error); });
        this._checkFaces().forEach(function (error) { return errors.push(error); });
        this._checkPlines().forEach(function (error) { return errors.push(error); });
        this._checkPgons().forEach(function (error) { return errors.push(error); });
        return errors;
    };
    /**
     * Checks geometry for internal consistency
     */
    GIGeom.prototype._checkPosis = function () {
        var errors = [];
        for (var posi_i = 0; posi_i < this._geom_arrays.up_posis_verts.length; posi_i++) {
            // up
            var verts_i = this._geom_arrays.up_posis_verts[posi_i];
            if (verts_i === undefined) {
                errors.push('Posi ' + posi_i + ': Posi->Vert undefined.');
            }
            if (verts_i === null) {
                continue;
            } // deleted
            // down
            for (var _i = 0, verts_i_1 = verts_i; _i < verts_i_1.length; _i++) {
                var vert_i = verts_i_1[_i];
                var vert = this._geom_arrays.dn_verts_posis[vert_i];
                if (vert === undefined) {
                    errors.push('Posi ' + posi_i + ': Vert->Posi undefined.');
                }
                if (vert === null) {
                    errors.push('Posi ' + posi_i + ': Vert->Posi null.');
                }
            }
        }
        return errors;
    };
    GIGeom.prototype._checkVerts = function () {
        var errors = [];
        for (var vert_i = 0; vert_i < this._geom_arrays.dn_verts_posis.length; vert_i++) {
            // down
            var vert = this._geom_arrays.dn_verts_posis[vert_i];
            if (vert === undefined) {
                errors.push('Vert ' + vert_i + ': Vert->Posi undefined.');
            }
            if (vert === null) {
                continue;
            } // deleted
            // up
            var edges_i = this._geom_arrays.up_verts_edges[vert_i];
            if (edges_i === undefined) {
                errors.push('Vert ' + vert_i + ': Vert->Edge undefined.');
                continue;
            }
            if (edges_i === null) {
                errors.push('Vert ' + vert_i + ': Vert->Edge null.');
                continue;
            }
            for (var _i = 0, edges_i_1 = edges_i; _i < edges_i_1.length; _i++) {
                var edge_i = edges_i_1[_i];
                if (edge_i === undefined) {
                    errors.push('Vert ' + vert_i + ': Vert->Edge undefined.');
                }
                if (edge_i === null) {
                    errors.push('Vert ' + vert_i + ': Vert->Edge null.');
                }
                // down
                var edge = this._geom_arrays.dn_edges_verts[edge_i];
                if (edge === undefined) {
                    errors.push('Vert ' + vert_i + ': Edge->Vert undefined.');
                }
                if (edge === null) {
                    errors.push('Vert ' + vert_i + ': Edge->Vert null.');
                }
            }
        }
        return errors;
    };
    GIGeom.prototype._checkEdges = function () {
        var errors = [];
        for (var edge_i = 0; edge_i < this._geom_arrays.dn_edges_verts.length; edge_i++) {
            // down
            var edge = this._geom_arrays.dn_edges_verts[edge_i];
            if (edge === undefined) {
                errors.push('Edge ' + edge_i + ': Edge->Vert undefined.');
            }
            if (edge === null) {
                continue;
            } // deleted
            // up
            var wire_i = this._geom_arrays.up_edges_wires[edge_i];
            if (wire_i === undefined) {
                continue;
            } // no wire, must be a point
            if (wire_i === null) {
                errors.push('Edge ' + edge_i + ': Edge->Wire null.');
            }
            // down
            var wire = this._geom_arrays.dn_wires_edges[wire_i];
            if (wire === undefined) {
                errors.push('Edge ' + edge_i + ': Wire->Edge undefined.');
            }
            if (wire === null) {
                errors.push('Edge ' + edge_i + ': Wire->Edge null.');
            }
        }
        return errors;
    };
    GIGeom.prototype._checkWires = function () {
        var errors = [];
        for (var wire_i = 0; wire_i < this._geom_arrays.dn_wires_edges.length; wire_i++) {
            // down
            var wire = this._geom_arrays.dn_wires_edges[wire_i];
            if (wire === undefined) {
                errors.push('Wire ' + wire_i + ': Wire->Edge undefined.');
            }
            if (wire === null) {
                continue;
            } // deleted
            // up
            var face_i = this._geom_arrays.up_wires_faces[wire_i];
            var pline_i = this._geom_arrays.up_wires_plines[wire_i];
            if (face_i !== undefined) {
                if (face_i === null) {
                    errors.push('Wire ' + wire_i + ': Wire->Face null.');
                }
                // down
                var face = this._geom_arrays.dn_faces_wirestris[face_i];
                if (face === undefined) {
                    errors.push('Wire ' + wire_i + ': Face->Wire undefined.');
                }
                if (face === null) {
                    errors.push('Wire ' + wire_i + ': Face->Wire null.');
                }
            }
            else if (pline_i !== undefined) {
                if (pline_i === null) {
                    errors.push('Wire ' + wire_i + ': Wire->Pline null.');
                }
                // down
                var pline = this._geom_arrays.dn_plines_wires[pline_i];
                if (pline === undefined) {
                    errors.push('Wire ' + wire_i + ': Pline->Wire undefined.');
                }
                if (pline === null) {
                    errors.push('Wire ' + wire_i + ': Pline->Wire null.');
                }
            }
            else {
                // down
                errors.push('Wire ' + wire_i + ': Both Wire->Face and Wire->Pline undefined.');
            }
        }
        return errors;
    };
    GIGeom.prototype._checkFaces = function () {
        var errors = [];
        for (var face_i = 0; face_i < this._geom_arrays.dn_faces_wirestris.length; face_i++) {
            // down
            var face = this._geom_arrays.dn_faces_wirestris[face_i];
            if (face === undefined) {
                errors.push('Face ' + face_i + ': Face->WireTri undefined.');
            }
            if (face === null) {
                continue;
            } // deleted
            // up
            var pgon_i = this._geom_arrays.up_faces_pgons[face_i];
            if (pgon_i === undefined) {
                errors.push('Face ' + face_i + ': Face->Pgon undefined.');
            }
            if (pgon_i === null) {
                errors.push('Face ' + face_i + ': Face->Pgon null.');
            }
            // down
            var pgon = this._geom_arrays.dn_pgons_faces[pgon_i];
            if (pgon === undefined) {
                errors.push('Face ' + face_i + ': Pgon->Face undefined.');
            }
            if (pgon === null) {
                errors.push('Face ' + face_i + ': Pgon->Face null.');
            }
        }
        return errors;
    };
    GIGeom.prototype._checkPlines = function () {
        var errors = [];
        for (var pline_i = 0; pline_i < this._geom_arrays.dn_plines_wires.length; pline_i++) {
            // down
            var pline = this._geom_arrays.dn_plines_wires[pline_i];
            if (pline === undefined) {
                errors.push('Pline ' + pline_i + ': Pline->Wire undefined.');
            }
            if (pline === null) {
                continue;
            } // deleted
            // up
            var colls_i = this._geom_arrays.up_plines_colls[pline_i];
            if (colls_i === undefined) {
                continue;
            } // not in coll
            for (var _i = 0, colls_i_1 = colls_i; _i < colls_i_1.length; _i++) {
                var coll_i = colls_i_1[_i];
                if (coll_i === undefined) {
                    errors.push('Pline ' + pline_i + ': Pline->Coll undefined.');
                }
                if (coll_i === null) {
                    errors.push('Pline ' + pline_i + ': Pline->Coll null.');
                }
                // down
                var coll = this._geom_arrays.dn_colls_objs[coll_i];
                if (coll === undefined) {
                    errors.push('Pline ' + pline_i + ': Coll->Objs undefined.');
                }
                if (coll === null) {
                    errors.push('Pline ' + pline_i + ': Coll->Objs null.');
                }
                if (coll[2].indexOf(pline_i) === -1) {
                    errors.push('Pline ' + pline_i + ': Coll->Pline missing.');
                }
            }
        }
        return errors;
    };
    GIGeom.prototype._checkPgons = function () {
        var errors = [];
        for (var pgon_i = 0; pgon_i < this._geom_arrays.dn_pgons_faces.length; pgon_i++) {
            // down
            var pgon = this._geom_arrays.dn_pgons_faces[pgon_i];
            if (pgon === undefined) {
                errors.push('Pgon ' + pgon_i + ': Pgon->Face undefined.');
            }
            if (pgon === null) {
                continue;
            } // deleted
            // up
            var colls_i = this._geom_arrays.up_pgons_colls[pgon_i];
            if (colls_i === undefined) {
                continue;
            } // not in coll
            for (var _i = 0, colls_i_2 = colls_i; _i < colls_i_2.length; _i++) {
                var coll_i = colls_i_2[_i];
                if (coll_i === undefined) {
                    errors.push('Pgon ' + pgon_i + ': Pgon->Coll undefined.');
                }
                if (coll_i === null) {
                    errors.push('Pgon ' + pgon_i + ': Pgon->Coll null.');
                }
                // down
                var coll = this._geom_arrays.dn_colls_objs[coll_i];
                if (coll === undefined) {
                    errors.push('Pgon ' + pgon_i + ': Coll->Objs undefined.');
                }
                if (coll === null) {
                    errors.push('Pgon ' + pgon_i + ': Coll->Objs null.');
                }
                if (coll[3].indexOf(pgon_i) === -1) {
                    errors.push('Pgon ' + pgon_i + ': Coll->Pgon missing.');
                }
            }
        }
        return errors;
    };
    return GIGeom;
}());



/***/ }),

/***/ "./src/assets/libs/geo-info/GIGeomAdd.ts":
/*!***********************************************!*\
  !*** ./src/assets/libs/geo-info/GIGeomAdd.ts ***!
  \***********************************************/
/*! exports provided: GIGeomAdd */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GIGeomAdd", function() { return GIGeomAdd; });
/* harmony import */ var _common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./common */ "./src/assets/libs/geo-info/common.ts");
/* harmony import */ var _triangulate_triangulate__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../triangulate/triangulate */ "./src/assets/libs/triangulate/triangulate.ts");


/**
 * Class for geometry.
 */
var GIGeomAdd = /** @class */ (function () {
    /**
     * Creates an object to store the geometry data.
     * @param geom_data The JSON data
     */
    function GIGeomAdd(geom, geom_arrays) {
        this._geom = geom;
        this._geom_arrays = geom_arrays;
    }
    // ============================================================================
    // Add geometry
    // ============================================================================
    /**
     * Adds a new position to the model and returns the index to that position.
     */
    GIGeomAdd.prototype.addPosi = function () {
        // create posi
        var posi_i = this._addPosi();
        return posi_i;
    };
    /**
     * Adds a new point entity to the model.
     * @param posi_i The position for the point.
     */
    GIGeomAdd.prototype.addPoint = function (posi_i) {
        // create vert
        var vert_i = this._addVertex(posi_i);
        // create point
        var point_i = this._geom_arrays.dn_points_verts.push(vert_i) - 1;
        this._geom_arrays.up_verts_points[vert_i] = point_i;
        return point_i;
    };
    /**
     * Adds a new pline entity to the model using numeric indices.
     * @param posis_i
     */
    GIGeomAdd.prototype.addPline = function (posis_i, close) {
        var _this = this;
        if (close === void 0) { close = false; }
        // create verts, edges, wires
        var vert_i_arr = posis_i.map(function (posi_i) { return _this._addVertex(posi_i); });
        var edges_i_arr = [];
        for (var i = 0; i < vert_i_arr.length - 1; i++) {
            edges_i_arr.push(this._addEdge(vert_i_arr[i], vert_i_arr[i + 1]));
        }
        if (close) {
            edges_i_arr.push(this._addEdge(vert_i_arr[vert_i_arr.length - 1], vert_i_arr[0]));
        }
        var wire_i = this._addWire(edges_i_arr, close);
        // create pline
        var pline_i = this._geom_arrays.dn_plines_wires.push(wire_i) - 1;
        this._geom_arrays.up_wires_plines[wire_i] = pline_i;
        return pline_i;
    };
    /**
     * Adds a new polygon + hole entity to the model using numeric indices.
     * @param posis_id
     */
    GIGeomAdd.prototype.addPgon = function (posis_i, holes_posis_i) {
        var _this = this;
        var has_holes = (holes_posis_i !== undefined) && (holes_posis_i.length) ? true : false;
        // create verts, edges, wire for face
        var vert_i_arr = posis_i.map(function (posi_i) { return _this._addVertex(posi_i); });
        var edges_i_arr = [];
        for (var i = 0; i < vert_i_arr.length - 1; i++) {
            edges_i_arr.push(this._addEdge(vert_i_arr[i], vert_i_arr[i + 1]));
        }
        edges_i_arr.push(this._addEdge(vert_i_arr[vert_i_arr.length - 1], vert_i_arr[0]));
        var wire_i = this._addWire(edges_i_arr, true);
        var face_i;
        if (has_holes) {
            // create verts, edges, wire for holes
            var holes_wires_i = [];
            for (var _i = 0, holes_posis_i_1 = holes_posis_i; _i < holes_posis_i_1.length; _i++) {
                var hole_posis_i = holes_posis_i_1[_i];
                var hole_vert_i_arr = hole_posis_i.map(function (posi_i) { return _this._addVertex(posi_i); });
                var hole_edges_i_arr = [];
                for (var i = 0; i < hole_vert_i_arr.length - 1; i++) {
                    hole_edges_i_arr.push(this._addEdge(hole_vert_i_arr[i], hole_vert_i_arr[i + 1]));
                }
                hole_edges_i_arr.push(this._addEdge(hole_vert_i_arr[hole_vert_i_arr.length - 1], hole_vert_i_arr[0]));
                var hole_wire_i = this._addWire(hole_edges_i_arr, true);
                holes_wires_i.push(hole_wire_i);
            }
            // create the new face with a hole
            face_i = this._addFaceWithHoles(wire_i, holes_wires_i);
        }
        else {
            face_i = this._addFace(wire_i);
        }
        // create polygon
        var pgon_i = this._geom_arrays.dn_pgons_faces.push(face_i) - 1;
        this._geom_arrays.up_faces_pgons[face_i] = pgon_i;
        return pgon_i;
    };
    /**
     * Adds a collection and updates the rev array using numeric indices.
     * @param parent_i
     * @param points_i
     * @param plines_i
     * @param pgons_i
     */
    GIGeomAdd.prototype.addColl = function (parent_i, points_i, plines_i, pgons_i) {
        // create collection
        var coll_i = this._geom_arrays.dn_colls_objs.push([parent_i, points_i, plines_i, pgons_i]) - 1;
        for (var _i = 0, points_i_1 = points_i; _i < points_i_1.length; _i++) {
            var point_i = points_i_1[_i];
            if (this._geom_arrays.up_points_colls[point_i] === undefined) {
                this._geom_arrays.up_points_colls[point_i] = [coll_i];
            }
            else {
                this._geom_arrays.up_points_colls[point_i].push(coll_i);
            }
        }
        for (var _a = 0, plines_i_1 = plines_i; _a < plines_i_1.length; _a++) {
            var pline_i = plines_i_1[_a];
            if (this._geom_arrays.up_plines_colls[pline_i] === undefined) {
                this._geom_arrays.up_plines_colls[pline_i] = [coll_i];
            }
            else {
                this._geom_arrays.up_plines_colls[pline_i].push(coll_i);
            }
        }
        for (var _b = 0, pgons_i_1 = pgons_i; _b < pgons_i_1.length; _b++) {
            var pgon_i = pgons_i_1[_b];
            if (this._geom_arrays.up_pgons_colls[pgon_i] === undefined) {
                this._geom_arrays.up_pgons_colls[pgon_i] = [coll_i];
            }
            else {
                this._geom_arrays.up_pgons_colls[pgon_i].push(coll_i);
            }
        }
        return coll_i;
    };
    // ============================================================================
    // Copy geometry
    // ============================================================================
    /**
     * Copy positions.
     * @param posis_i
     * @param copy_attribs
     */
    GIGeomAdd.prototype.copyPosis = function (posis_i, copy_attribs) {
        var _this = this;
        if (!Array.isArray(posis_i)) {
            var posi_i = posis_i;
            var xyz = this._geom.model.attribs.query.getPosiCoords(posi_i);
            var new_posi_i = this.addPosi();
            this._geom.model.attribs.add.setPosiCoords(new_posi_i, xyz);
            if (copy_attribs) {
                var attrib_names = this._geom.model.attribs.query.getAttribNames(_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].POSI);
                for (var _i = 0, attrib_names_1 = attrib_names; _i < attrib_names_1.length; _i++) {
                    var attrib_name = attrib_names_1[_i];
                    var value = this._geom.model.attribs.query.getAttribValue(_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].POSI, attrib_name, posis_i);
                    this._geom.model.attribs.add.setAttribValue(_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].POSI, new_posi_i, attrib_name, value);
                }
            }
            return new_posi_i;
        }
        else {
            return posis_i.map(function (posi_i) { return _this.copyPosis(posi_i, copy_attribs); });
        }
    };
    /**
     * Copy points.
     * TODO copy attribs of topo entities
     * @param index
     * @param copy_attribs
     */
    GIGeomAdd.prototype.copyPoints = function (points_i, copy_attribs) {
        var _this = this;
        // make copies
        if (!Array.isArray(points_i)) {
            var old_point_i = points_i;
            var posis_i = this._geom.query.navAnyToPosi(_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].POINT, old_point_i);
            var new_point_i = this.addPoint(posis_i[0]);
            if (copy_attribs) {
                this._geom.model.attribs.add.copyAttribs(_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].POINT, old_point_i, new_point_i);
            }
            return new_point_i;
        }
        else { // An array of ent_i
            return points_i.map(function (point_i) { return _this.copyPoints(point_i, copy_attribs); });
        }
    };
    /**
     * Copy plines.
     * TODO copy attribs of topo entities
     * @param index
     * @param copy_attribs
     */
    GIGeomAdd.prototype.copyPlines = function (plines_i, copy_attribs) {
        var _this = this;
        // make copies
        if (!Array.isArray(plines_i)) {
            var old_pline_i = plines_i;
            var posis_i = this._geom.query.navAnyToPosi(_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].PLINE, old_pline_i);
            var wire_i = this._geom.query.navPlineToWire(old_pline_i);
            var is_closed = this._geom.query.istWireClosed(wire_i);
            var new_pline_i = this.addPline(posis_i, is_closed);
            if (copy_attribs) {
                this._geom.model.attribs.add.copyAttribs(_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].PLINE, old_pline_i, new_pline_i);
            }
            return new_pline_i;
        }
        else { // An array of ent_i
            return plines_i.map(function (pline_i) { return _this.copyPlines(pline_i, copy_attribs); });
        }
    };
    /**
     * Copy polygons.
     * TODO copy attribs of topo entities
     * @param index
     * @param copy_attribs
     */
    GIGeomAdd.prototype.copyPgons = function (pgons_i, copy_attribs) {
        var _this = this;
        // make copies
        if (!Array.isArray(pgons_i)) {
            var old_pgon_i = pgons_i;
            var wires_i = this._geom.query.navAnyToWire(_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].PGON, old_pgon_i);
            var posis_i = this._geom.query.navAnyToPosi(_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].WIRE, wires_i[0]);
            var new_pgon_i = void 0;
            if (wires_i.length === 1) {
                new_pgon_i = this.addPgon(posis_i);
            }
            else {
                var holes_posis_i = [];
                for (var i = 1; i < wires_i.length; i++) {
                    var hole_posis_i = this._geom.query.navAnyToPosi(_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].WIRE, wires_i[i]);
                    holes_posis_i.push(hole_posis_i);
                }
                new_pgon_i = this.addPgon(posis_i, holes_posis_i);
            }
            if (copy_attribs) {
                this._geom.model.attribs.add.copyAttribs(_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].PGON, old_pgon_i, new_pgon_i);
            }
            return new_pgon_i;
        }
        else { // AN array of ent_i
            return pgons_i.map(function (pgon_i) { return _this.copyPgons(pgon_i, copy_attribs); });
        }
    };
    /**
      * Copy a collection
      * TODO Copy attribs of object and topo entities
      * @param ent_type
      * @param index
      * @param copy_posis
      * @param copy_attribs
      */
    GIGeomAdd.prototype.copyColls = function (colls_i, copy_attribs) {
        var _this = this;
        // make copies
        if (!Array.isArray(colls_i)) {
            var old_coll_i = colls_i;
            // make a deep copy of the objects in the collection
            var points_i = this._geom.query.navCollToPoint(old_coll_i);
            var res1 = this.copyPoints(points_i, copy_attribs);
            var plines_i = this._geom.query.navCollToPline(old_coll_i);
            var res2 = this.copyPlines(plines_i, copy_attribs);
            var pgons_i = this._geom.query.navCollToPgon(old_coll_i);
            var res3 = this.copyPgons(pgons_i, copy_attribs);
            var parent_1 = this._geom.query.getCollParent(old_coll_i);
            // add the new collection
            var new_coll_i = this.addColl(parent_1, res1, res2, res3);
            // copy the attributes from old collection to new collection
            if (copy_attribs) {
                this._geom.model.attribs.add.copyAttribs(_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].COLL, old_coll_i, new_coll_i);
            }
            // return the new collection
            return new_coll_i;
        }
        else {
            return colls_i.map(function (coll_i) { return _this.copyColls(coll_i, copy_attribs); });
        }
    };
    // ============================================================================
    // Methods to create the topological entities
    // These methods have been made public for access from GIGeomModify
    // They should not be called externally, hence the underscore.
    // ============================================================================
    /**
     * Adds a position and updates the arrays.
     */
    GIGeomAdd.prototype._addPosi = function () {
        // in this case, there are no down arrays
        // because posis are the bottom of the hierarchy
        // update up arrays
        var posi_i = this._geom_arrays.up_posis_verts.push([]) - 1;
        // return the numeric index of the posi
        return posi_i;
    };
    /**
     * Adds a vertex and updates the arrays.
     * @param posi_i
     */
    GIGeomAdd.prototype._addVertex = function (posi_i) {
        // update down arrays
        var vert_i = this._geom_arrays.dn_verts_posis.push(posi_i) - 1;
        // update up arrays
        // if (this._geom_arrays.up_posis_verts[posi_i] === undefined) {
        //     this._geom_arrays.up_posis_verts[posi_i] = [];
        // }
        this._geom_arrays.up_posis_verts[posi_i].push(vert_i);
        // return the numeric index of the vertex
        return vert_i;
    };
    /**
     * Adds an edge and updates the arrays.
     * @param vert_i1
     * @param vert_i2
     */
    GIGeomAdd.prototype._addEdge = function (vert_i1, vert_i2) {
        // update down arrays
        var edge_i = this._geom_arrays.dn_edges_verts.push([vert_i1, vert_i2]) - 1;
        // update up arrays
        if (this._geom_arrays.up_verts_edges[vert_i1] === undefined) {
            this._geom_arrays.up_verts_edges[vert_i1] = [];
        }
        this._geom_arrays.up_verts_edges[vert_i1].push(edge_i);
        if (this._geom_arrays.up_verts_edges[vert_i2] === undefined) {
            this._geom_arrays.up_verts_edges[vert_i2] = [];
        }
        this._geom_arrays.up_verts_edges[vert_i2].push(edge_i);
        // return the numeric index of the edge
        return edge_i;
    };
    /**
     * Adds a wire and updates the arrays.
     * Edges are assumed to be sequential!
     * @param edges_i
     */
    GIGeomAdd.prototype._addWire = function (edges_i, close) {
        var _this = this;
        if (close === void 0) { close = false; }
        // update down arrays
        var wire_i = this._geom_arrays.dn_wires_edges.push(edges_i) - 1;
        // update up arrays
        edges_i.forEach(function (edge_i) { return _this._geom_arrays.up_edges_wires[edge_i] = wire_i; });
        // return the numeric index of the wire
        return wire_i;
    };
    /**
     * Adds trangles and updates the arrays.
     * Wires are assumed to be closed!
     * @param wire_i
     */
    GIGeomAdd.prototype._addTris = function (wire_i, hole_wires_i) {
        var _this = this;
        // save all verts
        var all_verts_i = [];
        // get the coords of the outer perimeter edge
        var wire_verts_i = this._geom.query.navAnyToVert(_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].WIRE, wire_i);
        wire_verts_i.forEach(function (wire_vert_i) { return all_verts_i.push(wire_vert_i); });
        var wire_posis_i = wire_verts_i.map(function (vert_i) { return _this._geom_arrays.dn_verts_posis[vert_i]; });
        var wire_coords = wire_posis_i.map(function (posi_i) { return _this._geom.model.attribs.query.getPosiCoords(posi_i); });
        // get the coords of the holes
        var all_hole_coords = [];
        if (hole_wires_i !== undefined) {
            for (var _i = 0, hole_wires_i_1 = hole_wires_i; _i < hole_wires_i_1.length; _i++) {
                var hole_wire_i = hole_wires_i_1[_i];
                var hole_wire_verts_i = this._geom.query.navAnyToVert(_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].WIRE, hole_wire_i);
                hole_wire_verts_i.forEach(function (wire_vert_i) { return all_verts_i.push(wire_vert_i); });
                var hole_wire_posis_i = hole_wire_verts_i.map(function (vert_i) { return _this._geom_arrays.dn_verts_posis[vert_i]; });
                var hole_wire_coords = hole_wire_posis_i.map(function (posi_i) { return _this._geom.model.attribs.query.getPosiCoords(posi_i); });
                all_hole_coords.push(hole_wire_coords);
            }
        }
        // create the triangles
        var tris_corners = Object(_triangulate_triangulate__WEBPACK_IMPORTED_MODULE_1__["triangulate"])(wire_coords, all_hole_coords);
        var tris_verts_i = tris_corners.map(function (tri_corners) { return tri_corners.map(function (corner) { return all_verts_i[corner]; }); });
        // update down arrays
        var tris_i = tris_verts_i.map(function (tri_verts_i) { return _this._geom_arrays.dn_tris_verts.push(tri_verts_i) - 1; });
        // update up arrays
        for (var i = 0; i < tris_verts_i.length; i++) {
            var tri_verts_i = tris_verts_i[i];
            var tri_i = tris_i[i];
            for (var _a = 0, tri_verts_i_1 = tri_verts_i; _a < tri_verts_i_1.length; _a++) {
                var tri_vert_i = tri_verts_i_1[_a];
                if (this._geom_arrays.up_verts_tris[tri_vert_i] === undefined) {
                    this._geom_arrays.up_verts_tris[tri_vert_i] = [];
                }
                this._geom_arrays.up_verts_tris[tri_vert_i].push(tri_i);
            }
        }
        // return an array of numeric indices of the triangles
        return tris_i;
    };
    /**
     * Adds a face and updates the arrays.
     * Wires are assumed to be closed!
     * This also calls addTris()
     * @param wire_i
     */
    GIGeomAdd.prototype._addFace = function (wire_i) {
        var _this = this;
        // create the triangles
        var tris_i = this._addTris(wire_i);
        // create the face
        var face = [[wire_i], tris_i];
        // update down arrays
        var face_i = this._geom_arrays.dn_faces_wirestris.push(face) - 1;
        // update up arrays
        this._geom_arrays.up_wires_faces[wire_i] = face_i;
        tris_i.forEach(function (tri_i) { return _this._geom_arrays.up_tris_faces[tri_i] = face_i; });
        // return the numeric index of the face
        return face_i;
    };
    /**
     * Adds a face with a hole and updates the arrays.
     * Wires are assumed to be closed!
     * This also calls addTris()
     * @param wire_i
     */
    GIGeomAdd.prototype._addFaceWithHoles = function (wire_i, holes_wires_i) {
        var _this = this;
        // create the triangles
        var tris_i = this._addTris(wire_i, holes_wires_i);
        // create the face
        var face_wires_i = [wire_i].concat(holes_wires_i);
        var face = [face_wires_i, tris_i];
        // update down arrays
        var face_i = this._geom_arrays.dn_faces_wirestris.push(face) - 1;
        // update up arrays
        face_wires_i.forEach(function (face_wire_i) { return _this._geom_arrays.up_wires_faces[face_wire_i] = face_i; });
        tris_i.forEach(function (tri_i) { return _this._geom_arrays.up_tris_faces[tri_i] = face_i; });
        // return the numeric index of the face
        return face_i;
    };
    return GIGeomAdd;
}());



/***/ }),

/***/ "./src/assets/libs/geo-info/GIGeomIO.ts":
/*!**********************************************!*\
  !*** ./src/assets/libs/geo-info/GIGeomIO.ts ***!
  \**********************************************/
/*! exports provided: GIGeomIO */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GIGeomIO", function() { return GIGeomIO; });
/**
 * Class for geometry.
 */
var GIGeomIO = /** @class */ (function () {
    /**
     * Creates an object to store the geometry data.
     * @param geom_data The JSON data
     */
    function GIGeomIO(geom, geom_arrays) {
        this._geom = geom;
        this._geom_arrays = geom_arrays;
    }
    /**
     * Adds data to this model from another model.
     * The existing data in the model is not deleted.
     * Both models may have deleted items, resulting in null values.
     * @param geom_arrays The geom_arrays of the other model.
     */
    GIGeomIO.prototype.merge = function (geom_arrays) {
        // get lengths of existing entities before we start adding stuff
        // const num_posis: number = this._geom_arrays.num_posis;
        var num_posis = this._geom_arrays.up_posis_verts.length;
        var num_verts = this._geom_arrays.dn_verts_posis.length;
        var num_tris = this._geom_arrays.dn_tris_verts.length;
        var num_edges = this._geom_arrays.dn_edges_verts.length;
        var num_wires = this._geom_arrays.dn_wires_edges.length;
        var num_faces = this._geom_arrays.dn_faces_wirestris.length;
        var num_points = this._geom_arrays.dn_points_verts.length;
        var num_plines = this._geom_arrays.dn_plines_wires.length;
        var num_pgons = this._geom_arrays.dn_pgons_faces.length;
        var num_colls = this._geom_arrays.dn_colls_objs.length;
        // for the down arrays, it is important the values are never undefined
        // undefined cannot be exported as json
        // if anything is deleted, then the value should be null
        // add vertices to model
        for (var _i = 0, _a = geom_arrays.dn_verts_posis; _i < _a.length; _i++) {
            var posi_i = _a[_i];
            if (posi_i === null) {
                this._geom_arrays.dn_verts_posis.push(null);
            }
            else {
                var new_vert = posi_i + num_posis;
                this._geom_arrays.dn_verts_posis.push(new_vert);
            }
        }
        // add triangles to model
        for (var _b = 0, _c = geom_arrays.dn_tris_verts; _b < _c.length; _b++) {
            var verts_i = _c[_b];
            if (verts_i === null) {
                this._geom_arrays.dn_tris_verts.push(null);
            }
            else {
                var new_triangle = verts_i.map(function (v) { return v + num_verts; });
                this._geom_arrays.dn_tris_verts.push(new_triangle);
            }
        }
        // add edges to model
        for (var _d = 0, _e = geom_arrays.dn_edges_verts; _d < _e.length; _d++) {
            var verts_i = _e[_d];
            if (verts_i === null) {
                this._geom_arrays.dn_edges_verts.push(null);
            }
            else {
                var new_edge = verts_i.map(function (v) { return v + num_verts; });
                this._geom_arrays.dn_edges_verts.push(new_edge);
            }
        }
        // add wires to model
        for (var _f = 0, _g = geom_arrays.dn_wires_edges; _f < _g.length; _f++) {
            var edges_i = _g[_f];
            if (edges_i === null) {
                this._geom_arrays.dn_wires_edges.push(null);
            }
            else {
                var new_wire = edges_i.map(function (e) { return e + num_edges; });
                this._geom_arrays.dn_wires_edges.push(new_wire);
            }
        }
        // add faces to model
        for (var _h = 0, _j = geom_arrays.dn_faces_wirestris; _h < _j.length; _h++) {
            var wires_tris_i = _j[_h];
            if (wires_tris_i === null) {
                this._geom_arrays.dn_faces_wirestris.push(null);
            }
            else {
                var new_face = [
                    wires_tris_i[0].map(function (w) { return w + num_wires; }),
                    wires_tris_i[1].map(function (t) { return t + num_tris; })
                ];
                this._geom_arrays.dn_faces_wirestris.push(new_face);
            }
        }
        // add points to model
        for (var _k = 0, _l = geom_arrays.dn_points_verts; _k < _l.length; _k++) {
            var vert_i = _l[_k];
            if (vert_i === null) {
                this._geom_arrays.dn_points_verts.push(null);
            }
            else {
                var new_point = vert_i + num_verts;
                this._geom_arrays.dn_points_verts.push(new_point);
            }
        }
        // add plines to model
        for (var _m = 0, _o = geom_arrays.dn_plines_wires; _m < _o.length; _m++) {
            var wire_i = _o[_m];
            if (wire_i === null) {
                this._geom_arrays.dn_plines_wires.push(null);
            }
            else {
                var new_pline = wire_i + num_wires;
                this._geom_arrays.dn_plines_wires.push(new_pline);
            }
        }
        // add pgons to model
        for (var _p = 0, _q = geom_arrays.dn_pgons_faces; _p < _q.length; _p++) {
            var face_i = _q[_p];
            if (face_i === null) {
                this._geom_arrays.dn_pgons_faces.push(null);
            }
            else {
                var new_pgon = face_i + num_faces;
                this._geom_arrays.dn_pgons_faces.push(new_pgon);
            }
        }
        // add collections to model
        for (var _r = 0, _s = geom_arrays.dn_colls_objs; _r < _s.length; _r++) {
            var coll = _s[_r];
            if (coll === null) {
                this._geom_arrays.dn_colls_objs.push(null);
            }
            else {
                var parent_1 = (coll[0] === -1) ? -1 : coll[0] + num_colls;
                var coll_points_i = coll[1].map(function (point) { return point + num_points; });
                var coll_plines_i = coll[2].map(function (line) { return line + num_plines; });
                var coll_pgons_i = coll[3].map(function (pgon) { return pgon + num_pgons; });
                var new_coll = [parent_1, coll_points_i, coll_plines_i, coll_pgons_i];
                this._geom_arrays.dn_colls_objs.push(new_coll);
            }
        }
        // update reverse arrays
        // undefined = no value
        // in typescript, undefined behaves in strange ways, try this
        //     const x = [0, undefined, 2, , 4];
        //     for (const i of x) { console.log("i in for loop:", i);}
        //     x.forEach(i => console.log("i in foreach loop:", i) );
        // for the undefined values, explicitly setting the value to undefined is not the same as not setting it at all
        // with a foreach loop, if there is no value, then it skips it completley
        // in this case, we want to make sure there is no value
        // update posis to verts (they can be null or [])
        for (var i = 0; i < geom_arrays.up_posis_verts.length; i++) {
            var verts_i = geom_arrays.up_posis_verts[i];
            if (verts_i === undefined) {
                continue;
            }
            else if (verts_i === null) {
                this._geom_arrays.up_posis_verts[i + num_posis] = null;
            }
            else {
                var new_verts_i = verts_i.map(function (vert_i) { return vert_i + num_verts; });
                this._geom_arrays.up_posis_verts[i + num_posis] = new_verts_i;
            }
        }
        // update verts to tris
        for (var i = 0; i < geom_arrays.up_verts_tris.length; i++) {
            var tris_i = geom_arrays.up_verts_tris[i];
            if (tris_i === undefined) {
                continue;
            }
            else if (tris_i === null) {
                this._geom_arrays.up_verts_tris[i + num_verts] = null;
            }
            else {
                var new_tris_i = tris_i.map(function (tri_i) { return tri_i + num_tris; });
                this._geom_arrays.up_verts_tris[i + num_verts] = new_tris_i;
            }
        }
        // update tris to faces
        for (var i = 0; i < geom_arrays.up_tris_faces.length; i++) {
            var face_i = geom_arrays.up_tris_faces[i];
            if (face_i === undefined) {
                continue;
            }
            else if (face_i === null) {
                this._geom_arrays.up_tris_faces[i + num_tris] = null;
            }
            else {
                var new_face_i = face_i + num_faces;
                this._geom_arrays.up_tris_faces[i + num_tris] = new_face_i;
            }
        }
        // update verts to edges
        for (var i = 0; i < geom_arrays.up_verts_edges.length; i++) {
            var edges_i = geom_arrays.up_verts_edges[i];
            if (edges_i === undefined) {
                continue;
            }
            else if (edges_i === null) {
                this._geom_arrays.up_verts_edges[i + num_verts] = null;
            }
            else {
                var new_edges_i = edges_i.map(function (edge_i) { return edge_i + num_edges; });
                this._geom_arrays.up_verts_edges[i + num_verts] = new_edges_i;
            }
        }
        // update edges to wires
        for (var i = 0; i < geom_arrays.up_edges_wires.length; i++) {
            var wire_i = geom_arrays.up_edges_wires[i];
            if (wire_i === undefined) {
                continue;
            }
            else if (wire_i === null) {
                this._geom_arrays.up_edges_wires[i + num_edges] = null;
            }
            else {
                var new_wire_i = wire_i + num_wires;
                this._geom_arrays.up_edges_wires[i + num_edges] = new_wire_i;
            }
        }
        // update wires to faces
        for (var i = 0; i < geom_arrays.up_wires_faces.length; i++) {
            var face_i = geom_arrays.up_wires_faces[i];
            if (face_i === undefined) {
                continue;
            }
            else if (face_i === null) {
                this._geom_arrays.up_wires_faces[i + num_wires] = null;
            }
            else {
                var new_face_i = face_i + num_faces;
                this._geom_arrays.up_wires_faces[i + num_wires] = new_face_i;
            }
        }
        // update verts to points
        for (var i = 0; i < geom_arrays.up_verts_points.length; i++) {
            var point_i = geom_arrays.up_verts_points[i];
            if (point_i === undefined) {
                continue;
            }
            else if (point_i === null) {
                this._geom_arrays.up_verts_points[i + num_points] = null;
            }
            else {
                var new_point_i = point_i + num_points;
                this._geom_arrays.up_verts_points[i + num_points] = new_point_i;
            }
        }
        // update wires to plines
        for (var i = 0; i < geom_arrays.up_wires_plines.length; i++) {
            var pline_i = geom_arrays.up_wires_plines[i];
            if (pline_i === undefined) {
                continue;
            }
            else if (pline_i === null) {
                this._geom_arrays.up_wires_plines[i + num_wires] = null;
            }
            else {
                var new_pline_i = pline_i + num_plines;
                this._geom_arrays.up_wires_plines[i + num_wires] = new_pline_i;
            }
        }
        // update faces to pgons
        for (var i = 0; i < geom_arrays.up_faces_pgons.length; i++) {
            var pgon_i = geom_arrays.up_faces_pgons[i];
            if (pgon_i === undefined) {
                continue;
            }
            else if (pgon_i === null) {
                this._geom_arrays.up_faces_pgons[i + num_faces] = null;
            }
            else {
                var new_pgon_i = pgon_i + num_pgons;
                this._geom_arrays.up_faces_pgons[i + num_faces] = new_pgon_i;
            }
        }
        // update points to colls
        for (var i = 0; i < geom_arrays.up_points_colls.length; i++) {
            var colls_i = geom_arrays.up_points_colls[i];
            if (colls_i === undefined) {
                continue;
            }
            else if (colls_i === null) {
                this._geom_arrays.up_points_colls[i + num_points] = null;
            }
            else {
                var new_colls_i = colls_i.map(function (coll_i) { return coll_i + num_colls; });
                this._geom_arrays.up_points_colls[i + num_points] = new_colls_i;
            }
        }
        // update plines to colls
        for (var i = 0; i < geom_arrays.up_plines_colls.length; i++) {
            var colls_i = geom_arrays.up_plines_colls[i];
            if (colls_i === undefined) {
                continue;
            }
            else if (colls_i === null) {
                this._geom_arrays.up_plines_colls[i + num_plines] = null;
            }
            else {
                var new_colls_i = colls_i.map(function (coll_i) { return coll_i + num_colls; });
                this._geom_arrays.up_plines_colls[i + num_plines] = new_colls_i;
            }
        }
        // update pgons to colls
        for (var i = 0; i < geom_arrays.up_pgons_colls.length; i++) {
            var colls_i = geom_arrays.up_pgons_colls[i];
            if (colls_i === undefined) {
                continue;
            }
            else if (colls_i === null) {
                this._geom_arrays.up_pgons_colls[i + num_pgons] = null;
            }
            else {
                var new_colls_i = colls_i.map(function (coll_i) { return coll_i + num_colls; });
                this._geom_arrays.up_pgons_colls[i + num_pgons] = new_colls_i;
            }
        }
    };
    /**
     * Sets the data in this model from JSON data.
     * The existing data in the model is deleted.
     * @param geom_data The JSON data
     */
    GIGeomIO.prototype.setData = function (geom_data) {
        // update the down arrays
        // these are assumed never to undefined
        var _this = this;
        // add vertices to model
        this._geom_arrays.dn_verts_posis = geom_data.vertices;
        // add triangles to model
        this._geom_arrays.dn_tris_verts = geom_data.triangles;
        // add edges to model
        this._geom_arrays.dn_edges_verts = geom_data.edges;
        // add wires to model
        this._geom_arrays.dn_wires_edges = geom_data.wires;
        // add faces to model
        this._geom_arrays.dn_faces_wirestris = geom_data.faces;
        // add points to model
        this._geom_arrays.dn_points_verts = geom_data.points;
        // add lines to model
        this._geom_arrays.dn_plines_wires = geom_data.polylines;
        // add pgons to model
        this._geom_arrays.dn_pgons_faces = geom_data.polygons;
        // add collections to model
        this._geom_arrays.dn_colls_objs = geom_data.collections;
        // update the up arrays
        // many of the values will be undefined
        // they could be null, since we might have saved some data with deleted ents
        // fill up_posis_verts with either null or empty arrays
        // the up_posis_verts array is special, it can have no undefine values
        // its length is used to determine how many posis there are in the model
        this._geom_arrays.up_posis_verts = [];
        for (var posi_i = 0; posi_i < geom_data.num_positions; posi_i++) {
            if (this._geom.model.attribs.query.getPosiCoords(posi_i) === undefined) {
                this._geom_arrays.up_posis_verts[posi_i] = null;
            }
            else {
                this._geom_arrays.up_posis_verts[posi_i] = [];
            }
        }
        // posis->verts
        this._geom_arrays.dn_verts_posis.forEach(function (posi_i, vert_i) {
            if (posi_i !== null) {
                _this._geom_arrays.up_posis_verts[posi_i].push(vert_i);
            }
        });
        // verts->tris, one to many
        this._geom_arrays.up_verts_tris = [];
        this._geom_arrays.dn_tris_verts.forEach(function (vert_i_arr, tri_i) {
            if (vert_i_arr !== null) {
                vert_i_arr.forEach(function (vert_i) {
                    if (_this._geom_arrays.up_verts_tris[vert_i] === undefined) {
                        _this._geom_arrays.up_verts_tris[vert_i] = [];
                    }
                    _this._geom_arrays.up_verts_tris[vert_i].push(tri_i);
                });
            }
        });
        // verts->edges, one to two
        this._geom_arrays.up_verts_edges = [];
        this._geom_arrays.dn_edges_verts.forEach(function (vert_i_arr, edge_i) {
            if (vert_i_arr !== null) {
                vert_i_arr.forEach(function (vert_i) {
                    if (_this._geom_arrays.up_verts_edges[vert_i] === undefined) {
                        _this._geom_arrays.up_verts_edges[vert_i] = [];
                    }
                    _this._geom_arrays.up_verts_edges[vert_i].push(edge_i);
                });
            }
        });
        // edges->wires
        this._geom_arrays.up_edges_wires = [];
        this._geom_arrays.dn_wires_edges.forEach(function (edge_i_arr, wire_i) {
            if (edge_i_arr !== null) {
                edge_i_arr.forEach(function (edge_i) {
                    _this._geom_arrays.up_edges_wires[edge_i] = wire_i;
                });
            }
        });
        // wires->faces, tris->faces, faces->wirestris
        this._geom_arrays.up_wires_faces = [];
        this._geom_arrays.up_tris_faces = [];
        this._geom_arrays.dn_faces_wirestris.forEach(function (face, face_i) {
            if (face !== null) {
                var wire_i_arr = face[0], tri_i_arr = face[1];
                wire_i_arr.forEach(function (wire_i) {
                    _this._geom_arrays.up_wires_faces[wire_i] = face_i;
                });
                tri_i_arr.forEach(function (tri_i) {
                    _this._geom_arrays.up_tris_faces[tri_i] = face_i;
                });
            }
        });
        // points, lines, polygons
        this._geom_arrays.up_verts_points = [];
        this._geom_arrays.dn_points_verts.forEach(function (vert_i, point_i) {
            if (vert_i !== null) {
                _this._geom_arrays.up_verts_points[vert_i] = point_i;
            }
        });
        this._geom_arrays.up_wires_plines = [];
        this._geom_arrays.dn_plines_wires.forEach(function (wire_i, line_i) {
            if (wire_i !== null) {
                _this._geom_arrays.up_wires_plines[wire_i] = line_i;
            }
        });
        this._geom_arrays.up_faces_pgons = [];
        this._geom_arrays.dn_pgons_faces.forEach(function (face_i, pgon_i) {
            if (face_i !== null) {
                _this._geom_arrays.up_faces_pgons[face_i] = pgon_i;
            }
        });
        // collections of points, polylines, polygons
        this._geom_arrays.up_points_colls = [];
        this._geom_arrays.up_plines_colls = [];
        this._geom_arrays.up_pgons_colls = [];
        this._geom_arrays.dn_colls_objs.forEach(function (coll, coll_i) {
            if (coll !== null) {
                var parent_2 = coll[0], point_i_arr = coll[1], pline_i_arr = coll[2], pgon_i_arr = coll[3];
                point_i_arr.forEach(function (point_i) {
                    if (_this._geom_arrays.up_points_colls[point_i] === undefined) {
                        _this._geom_arrays.up_points_colls[point_i] = [coll_i];
                    }
                    else {
                        _this._geom_arrays.up_points_colls[point_i].push(coll_i);
                    }
                });
                pline_i_arr.forEach(function (pline_i) {
                    if (_this._geom_arrays.up_plines_colls[pline_i] === undefined) {
                        _this._geom_arrays.up_plines_colls[pline_i] = [coll_i];
                    }
                    else {
                        _this._geom_arrays.up_plines_colls[pline_i].push(coll_i);
                    }
                });
                pgon_i_arr.forEach(function (pgon_i) {
                    if (_this._geom_arrays.up_pgons_colls[pgon_i] === undefined) {
                        _this._geom_arrays.up_pgons_colls[pgon_i] = [coll_i];
                    }
                    else {
                        _this._geom_arrays.up_pgons_colls[pgon_i].push(coll_i);
                    }
                });
            }
        });
        // return data
        return {
            posis_i: Array.from(Array(geom_data.num_positions).keys()),
            points_i: Array.from(Array(geom_data.points.length).keys()),
            plines_i: Array.from(Array(geom_data.polylines.length).keys()),
            pgons_i: Array.from(Array(geom_data.polygons.length).keys()),
            colls_i: Array.from(Array(geom_data.collections.length).keys()) // .map(v => v + num_old_colls)
        };
    };
    /**
     * Returns the JSON data for this model.
     */
    GIGeomIO.prototype.getData = function () {
        return {
            num_positions: this._geom_arrays.up_posis_verts.length,
            triangles: this._geom_arrays.dn_tris_verts,
            vertices: this._geom_arrays.dn_verts_posis,
            edges: this._geom_arrays.dn_edges_verts,
            wires: this._geom_arrays.dn_wires_edges,
            faces: this._geom_arrays.dn_faces_wirestris,
            points: this._geom_arrays.dn_points_verts,
            polylines: this._geom_arrays.dn_plines_wires,
            polygons: this._geom_arrays.dn_pgons_faces,
            collections: this._geom_arrays.dn_colls_objs
        };
    };
    return GIGeomIO;
}());



/***/ }),

/***/ "./src/assets/libs/geo-info/GIGeomModify.ts":
/*!**************************************************!*\
  !*** ./src/assets/libs/geo-info/GIGeomModify.ts ***!
  \**************************************************/
/*! exports provided: GIGeomModify */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GIGeomModify", function() { return GIGeomModify; });
/* harmony import */ var _common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./common */ "./src/assets/libs/geo-info/common.ts");
/* harmony import */ var _util_arrays__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/arrays */ "./src/assets/libs/util/arrays.ts");
/* harmony import */ var _geom_vectors__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../geom/vectors */ "./src/assets/libs/geom/vectors.ts");



/**
 * Class for geometry.
 */
var GIGeomModify = /** @class */ (function () {
    /**
     * Creates an object to store the geometry data.
     * @param geom_data The JSON data
     */
    function GIGeomModify(geom, geom_arrays) {
        this._geom = geom;
        this._geom_arrays = geom_arrays;
    }
    // ============================================================================
    // Delete geometry
    // ============================================================================
    /**
     * Del all unused posis in the model.
     * Posi attributes will also be deleted.
     * @param posis_i
     */
    GIGeomModify.prototype.delUnusedPosis = function (posis_i) {
        // create array
        posis_i = (Array.isArray(posis_i)) ? posis_i : [posis_i];
        if (posis_i.length === 0) {
            return;
        }
        // loop
        var deleted_posis_i = [];
        for (var _i = 0, posis_i_1 = posis_i; _i < posis_i_1.length; _i++) {
            var posi_i = posis_i_1[_i];
            // update up arrays
            var verts_i = this._geom_arrays.up_posis_verts[posi_i];
            if (verts_i.length === 0) { // only delete posis with no verts
                this._geom_arrays.up_posis_verts[posi_i] = null;
                deleted_posis_i.push(posi_i);
            }
            // no need to update down arrays
        }
        // delete all the posi attributes, for all posis that were deleted
        this._geom.model.attribs.add.delEntFromAttribs(_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].POSI, deleted_posis_i);
    };
    /**
     * Del posis.
     * Posi attributes will also be deleted.
     * @param posis_i
     */
    GIGeomModify.prototype.delPosis = function (posis_i) {
        var _this = this;
        // create array
        posis_i = (Array.isArray(posis_i)) ? posis_i : [posis_i];
        if (posis_i.length === 0) {
            return;
        }
        // loop
        var deleted_posis_i = [];
        for (var _i = 0, posis_i_2 = posis_i; _i < posis_i_2.length; _i++) {
            var posi_i = posis_i_2[_i];
            if (this._geom_arrays.up_posis_verts[posi_i] === null) {
                continue;
            } // already deleted
            // delete all verts for this posi
            var copy_verts_i = this._geom_arrays.up_posis_verts[posi_i].slice(); // make a copy
            copy_verts_i.forEach(function (vert_i) { return _this._delVert(vert_i); });
            // delete the posi
            this._geom_arrays.up_posis_verts[posi_i] = null;
            deleted_posis_i.push(posi_i);
            // no need to update down arrays
        }
        // delete all the posi attributes, for all posis that were deleted
        this._geom.model.attribs.add.delEntFromAttribs(_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].POSI, deleted_posis_i);
    };
    /**
     * Del points.
     * Point attributes will also be deleted.
     * @param points_i
     */
    GIGeomModify.prototype.delPoints = function (points_i, del_unused_posis) {
        // create array
        points_i = (Array.isArray(points_i)) ? points_i : [points_i];
        if (!points_i.length) {
            return;
        }
        // del attribs
        this._geom.model.attribs.add.delEntFromAttribs(_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].POINT, points_i);
        // loop
        for (var _i = 0, points_i_1 = points_i; _i < points_i_1.length; _i++) {
            var point_i = points_i_1[_i];
            // first get all the arrays so we dont break navigation
            var vert_i = this._geom_arrays.dn_points_verts[point_i];
            if (vert_i === null) {
                continue;
            } // already deleted
            var posi_i = this._geom_arrays.dn_verts_posis[vert_i];
            // delete the point and check collections
            this._geom_arrays.dn_points_verts[point_i] = null;
            for (var _a = 0, _b = this._geom_arrays.dn_colls_objs; _a < _b.length; _a++) {
                var coll = _b[_a];
                var coll_points_i = coll[1];
                Object(_util_arrays__WEBPACK_IMPORTED_MODULE_1__["arrRem"])(coll_points_i, point_i);
            }
            // delete the vert by setting the up and down arrays to null
            this._geom_arrays.dn_verts_posis[vert_i] = null;
            delete this._geom_arrays.up_verts_points[vert_i];
            // remove the vert from up_posis_verts
            var posi_verts_i = this._geom_arrays.up_posis_verts[posi_i];
            Object(_util_arrays__WEBPACK_IMPORTED_MODULE_1__["arrRem"])(posi_verts_i, vert_i);
            // delete unused posis
            if (del_unused_posis) {
                this.delUnusedPosis(posi_i);
            }
        }
    };
    /**
     * Del plines.
     * Pline attributes will also be deleted.
     * @param plines_i
     */
    GIGeomModify.prototype.delPlines = function (plines_i, del_unused_posis) {
        var _this = this;
        // del attribs
        this._geom.model.attribs.add.delEntFromAttribs(_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].PLINE, plines_i);
        // create array
        plines_i = (Array.isArray(plines_i)) ? plines_i : [plines_i];
        if (!plines_i.length) {
            return;
        }
        // loop
        for (var _i = 0, plines_i_1 = plines_i; _i < plines_i_1.length; _i++) {
            var pline_i = plines_i_1[_i];
            // first get all the arrays so we dont break navigation
            var wire_i = this._geom_arrays.dn_plines_wires[pline_i];
            if (wire_i === null) {
                continue;
            } // already deleted
            var edges_i = this._geom.query.navAnyToEdge(_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].PLINE, pline_i);
            var verts_i = this._geom.query.navAnyToVert(_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].PLINE, pline_i);
            var posis_i = this._geom.query.navAnyToPosi(_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].PLINE, pline_i);
            // delete the pline and check collections
            this._geom_arrays.dn_plines_wires[pline_i] = null;
            for (var _a = 0, _b = this._geom_arrays.dn_colls_objs; _a < _b.length; _a++) {
                var coll = _b[_a];
                if (coll !== null) {
                    var coll_plines_i = coll[2];
                    Object(_util_arrays__WEBPACK_IMPORTED_MODULE_1__["arrRem"])(coll_plines_i, pline_i);
                }
            }
            // delete the wire
            this._geom_arrays.dn_wires_edges[wire_i] = null;
            delete this._geom_arrays.up_wires_plines[wire_i];
            // delete the edges
            edges_i.forEach(function (edge_i) {
                _this._geom_arrays.dn_edges_verts[edge_i] = null;
                delete _this._geom_arrays.up_edges_wires[edge_i];
            });
            // delete the verts
            verts_i.forEach(function (vert_i) {
                _this._geom_arrays.dn_verts_posis[vert_i] = null;
                delete _this._geom_arrays.up_verts_edges[vert_i];
            });
            // remove the verts from up_posis_verts
            for (var _c = 0, posis_i_3 = posis_i; _c < posis_i_3.length; _c++) {
                var posi_i = posis_i_3[_c];
                var posi_verts_i = this._geom_arrays.up_posis_verts[posi_i];
                // loop through deleted verts
                for (var _d = 0, verts_i_1 = verts_i; _d < verts_i_1.length; _d++) {
                    var vert_i = verts_i_1[_d];
                    Object(_util_arrays__WEBPACK_IMPORTED_MODULE_1__["arrRem"])(posi_verts_i, vert_i);
                    if (posi_verts_i.length === 0) {
                        break;
                    }
                }
            }
            // delete unused posis
            if (del_unused_posis) {
                this.delUnusedPosis(posis_i);
            }
        }
    };
    /**
     * Del pgons.
     * Pgon attributes will also be deleted.
     * @param pgons_i
     */
    GIGeomModify.prototype.delPgons = function (pgons_i, del_unused_posis) {
        var _this = this;
        // del attribs
        this._geom.model.attribs.add.delEntFromAttribs(_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].PGON, pgons_i);
        // create array
        pgons_i = (Array.isArray(pgons_i)) ? pgons_i : [pgons_i];
        if (!pgons_i.length) {
            return;
        }
        // loop
        for (var _i = 0, pgons_i_1 = pgons_i; _i < pgons_i_1.length; _i++) {
            var pgon_i = pgons_i_1[_i];
            // first get all the arrays so we dont break navigation
            var face_i = this._geom_arrays.dn_pgons_faces[pgon_i];
            if (face_i === null) {
                continue;
            } // already deleted
            var wires_i = this._geom.query.navAnyToWire(_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].PGON, pgon_i);
            var edges_i = this._geom.query.navAnyToEdge(_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].PGON, pgon_i);
            var verts_i = this._geom.query.navAnyToVert(_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].PGON, pgon_i);
            var tris_i = this._geom.query.navAnyToTri(_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].PGON, pgon_i);
            var posis_i = this._geom.query.navAnyToPosi(_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].PGON, pgon_i);
            // delete the pgon and check the collections
            this._geom_arrays.dn_pgons_faces[pgon_i] = null;
            for (var _a = 0, _b = this._geom_arrays.dn_colls_objs; _a < _b.length; _a++) {
                var coll = _b[_a];
                if (coll !== null) {
                    var coll_pgons_i = coll[3];
                    Object(_util_arrays__WEBPACK_IMPORTED_MODULE_1__["arrRem"])(coll_pgons_i, pgon_i);
                }
            }
            // delete the face
            this._geom_arrays.dn_faces_wirestris[face_i] = null;
            delete this._geom_arrays.up_faces_pgons[face_i];
            // delete the wires
            wires_i.forEach(function (wire_i) {
                _this._geom_arrays.dn_wires_edges[wire_i] = null;
                delete _this._geom_arrays.up_wires_faces[wire_i];
            });
            // delete the edges
            edges_i.forEach(function (edge_i) {
                _this._geom_arrays.dn_edges_verts[edge_i] = null;
                delete _this._geom_arrays.up_edges_wires[edge_i];
            });
            // delete the verts
            verts_i.forEach(function (vert_i) {
                _this._geom_arrays.dn_verts_posis[vert_i] = null;
                delete _this._geom_arrays.up_verts_edges[vert_i];
                delete _this._geom_arrays.up_verts_tris[vert_i];
            });
            // delete the tris
            tris_i.forEach(function (tri_i) {
                _this._geom_arrays.dn_tris_verts[tri_i] = null;
                delete _this._geom_arrays.up_tris_faces[tri_i];
            });
            // clean up, posis up arrays point to verts that may have been deleted
            for (var _c = 0, posis_i_4 = posis_i; _c < posis_i_4.length; _c++) {
                var posi_i = posis_i_4[_c];
                var posi_verts_i = this._geom_arrays.up_posis_verts[posi_i];
                // loop through deleted verts
                for (var _d = 0, verts_i_2 = verts_i; _d < verts_i_2.length; _d++) {
                    var vert_i = verts_i_2[_d];
                    Object(_util_arrays__WEBPACK_IMPORTED_MODULE_1__["arrRem"])(posi_verts_i, vert_i);
                    if (posi_verts_i.length === 0) {
                        break;
                    }
                }
            }
            // delete unused posis
            if (del_unused_posis) {
                this.delUnusedPosis(posis_i);
            }
        }
    };
    /**
     * Delete a collection.
     * Collection attributes will also be deleted.
     * This does not delete any of the object in the collection.
     * Also, does not delete any positions.
     * @param colls_i The collections to delete
     */
    GIGeomModify.prototype.delColls = function (colls_i, del_unused_posis) {
        var _this = this;
        // del attribs
        this._geom.model.attribs.add.delEntFromAttribs(_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].COLL, colls_i);
        // create array
        colls_i = (Array.isArray(colls_i)) ? colls_i : [colls_i];
        if (!colls_i.length) {
            return;
        }
        var _loop_1 = function (coll_i) {
            var coll = this_1._geom_arrays.dn_colls_objs[coll_i];
            if (coll === null) {
                return "continue";
            } // already deleted
            // up arrays, delete points, plines, pgons
            var points_i = coll[1];
            points_i.forEach(function (point_i) {
                var other_colls_i = _this._geom_arrays.up_points_colls[point_i];
                Object(_util_arrays__WEBPACK_IMPORTED_MODULE_1__["arrRem"])(other_colls_i, coll_i);
            });
            var plines_i = coll[2];
            plines_i.forEach(function (pline_i) {
                var other_colls_i = _this._geom_arrays.up_plines_colls[pline_i];
                Object(_util_arrays__WEBPACK_IMPORTED_MODULE_1__["arrRem"])(other_colls_i, coll_i);
            });
            var pgons_i = coll[3];
            pgons_i.forEach(function (pgon_i) {
                var other_colls_i = _this._geom_arrays.up_pgons_colls[pgon_i];
                Object(_util_arrays__WEBPACK_IMPORTED_MODULE_1__["arrRem"])(other_colls_i, coll_i);
            });
            // down arrays
            this_1._geom_arrays.dn_colls_objs[coll_i] = null;
        };
        var this_1 = this;
        // loop
        for (var _i = 0, colls_i_1 = colls_i; _i < colls_i_1.length; _i++) {
            var coll_i = colls_i_1[_i];
            _loop_1(coll_i);
        }
    };
    // ============================================================================
    // Modify geometry
    // ============================================================================
    /**
     *
     * @param coll_i Set collection parent
     * @param parent_coll_i
     */
    GIGeomModify.prototype.setCollParent = function (coll_i, parent_coll_i) {
        this._geom_arrays.dn_colls_objs[coll_i][0] = parent_coll_i;
    };
    /**
     * Add entities to a collection
     * @param coll_i
     * @param points_i
     * @param plines_i
     * @param pgons_i
     */
    GIGeomModify.prototype.collAddEnts = function (coll_i, points_i, plines_i, pgons_i) {
        var coll = this._geom_arrays.dn_colls_objs[coll_i];
        var coll_points = coll[1];
        if (points_i && points_i.length) {
            for (var _i = 0, points_i_2 = points_i; _i < points_i_2.length; _i++) {
                var point_i = points_i_2[_i];
                if (coll_points.indexOf(point_i) === -1) {
                    // update down arrays
                    coll_points.push(point_i);
                    // update up arrays
                    Object(_util_arrays__WEBPACK_IMPORTED_MODULE_1__["arrIdxAdd"])(this._geom_arrays.up_points_colls, point_i, coll_i);
                }
            }
        }
        var coll_plines = coll[2];
        if (plines_i && plines_i.length) {
            for (var _a = 0, plines_i_2 = plines_i; _a < plines_i_2.length; _a++) {
                var pline_i = plines_i_2[_a];
                if (coll_plines.indexOf(pline_i) === -1) {
                    // update down arrays
                    coll_plines.push(pline_i);
                    // update up arrays
                    Object(_util_arrays__WEBPACK_IMPORTED_MODULE_1__["arrIdxAdd"])(this._geom_arrays.up_plines_colls, pline_i, coll_i);
                }
            }
        }
        var coll_pgons = coll[3];
        if (pgons_i && pgons_i.length) {
            for (var _b = 0, pgons_i_2 = pgons_i; _b < pgons_i_2.length; _b++) {
                var pgon_i = pgons_i_2[_b];
                if (coll_pgons.indexOf(pgon_i) === -1) {
                    // update down arrays
                    coll_pgons.push(pgon_i);
                    // update up arrays
                    Object(_util_arrays__WEBPACK_IMPORTED_MODULE_1__["arrIdxAdd"])(this._geom_arrays.up_pgons_colls, pgon_i, coll_i);
                }
            }
        }
    };
    /**
     * Remove entities from a collection
     * @param coll_i
     * @param points_i
     * @param plines_i
     * @param pgons_i
     */
    GIGeomModify.prototype.collRemoveEnts = function (coll_i, points_i, plines_i, pgons_i) {
        var coll = this._geom_arrays.dn_colls_objs[coll_i];
        var coll_points = coll[1];
        if (points_i && points_i.length) {
            for (var _i = 0, points_i_3 = points_i; _i < points_i_3.length; _i++) {
                var point_i = points_i_3[_i];
                // update down arrays
                Object(_util_arrays__WEBPACK_IMPORTED_MODULE_1__["arrRem"])(coll_points, point_i);
                // update up arrays
                Object(_util_arrays__WEBPACK_IMPORTED_MODULE_1__["arrRem"])(this._geom_arrays.up_points_colls[point_i], coll_i);
            }
        }
        var coll_plines = coll[2];
        if (plines_i && plines_i.length) {
            for (var _a = 0, plines_i_3 = plines_i; _a < plines_i_3.length; _a++) {
                var pline_i = plines_i_3[_a];
                // update down arrays
                Object(_util_arrays__WEBPACK_IMPORTED_MODULE_1__["arrRem"])(coll_plines, pline_i);
                // update up arrays
                Object(_util_arrays__WEBPACK_IMPORTED_MODULE_1__["arrRem"])(this._geom_arrays.up_plines_colls[pline_i], coll_i);
            }
        }
        var coll_pgons = coll[3];
        if (pgons_i && pgons_i.length) {
            for (var _b = 0, pgons_i_3 = pgons_i; _b < pgons_i_3.length; _b++) {
                var pgon_i = pgons_i_3[_b];
                // update down arrays
                Object(_util_arrays__WEBPACK_IMPORTED_MODULE_1__["arrRem"])(coll_pgons, pgon_i);
                // update up arrays
                Object(_util_arrays__WEBPACK_IMPORTED_MODULE_1__["arrRem"])(this._geom_arrays.up_pgons_colls[pgon_i], coll_i);
            }
        }
    };
    /**
     * Creates hole in a face
     * @param posis_id
     */
    GIGeomModify.prototype.cutFaceHoles = function (face_i, posis_i_arr) {
        var _this = this;
        // get the normal of the face
        var face_normal = this._geom.query.getFaceNormal(face_i);
        // make the wires for the holes
        var hole_wires_i = [];
        for (var _i = 0, posis_i_arr_1 = posis_i_arr; _i < posis_i_arr_1.length; _i++) {
            var hole_posis_i = posis_i_arr_1[_i];
            var hole_vert_i_arr = hole_posis_i.map(function (posi_i) { return _this._geom.add._addVertex(posi_i); });
            var hole_edges_i_arr = [];
            for (var i = 0; i < hole_vert_i_arr.length - 1; i++) {
                hole_edges_i_arr.push(this._geom.add._addEdge(hole_vert_i_arr[i], hole_vert_i_arr[i + 1]));
            }
            hole_edges_i_arr.push(this._geom.add._addEdge(hole_vert_i_arr[hole_vert_i_arr.length - 1], hole_vert_i_arr[0]));
            var hole_wire_i = this._geom.add._addWire(hole_edges_i_arr, true);
            // get normal of wire and check if we need to reverse the wire
            var wire_normal = this._geom.query.getWireNormal(hole_wire_i);
            if (Object(_geom_vectors__WEBPACK_IMPORTED_MODULE_2__["vecDot"])(face_normal, wire_normal) > 0) {
                this.reverse(hole_wire_i);
            }
            // add to list of holes
            hole_wires_i.push(hole_wire_i);
        }
        // create the holes, does everything at face level
        this._cutFaceHoles(face_i, hole_wires_i);
        // no need to change either the up or down arrays
        // return the new wires
        return hole_wires_i;
    };
    /**
     * Close a wire
     * @param wire_i The wire to close.
     */
    GIGeomModify.prototype.closeWire = function (wire_i) {
        // get the wire start and end verts
        var wire = this._geom_arrays.dn_wires_edges[wire_i];
        var num_edges = wire.length;
        var start_edge_i = wire[0];
        var end_edge_i = wire[num_edges - 1];
        var start_vert_i = this._geom.query.navEdgeToVert(start_edge_i)[0];
        var end_vert_i = this._geom.query.navEdgeToVert(end_edge_i)[1];
        if (start_vert_i === end_vert_i) {
            return;
        }
        // add the edge to the model
        var new_edge_i = this._geom.add._addEdge(end_vert_i, start_vert_i);
        // update the down arrays
        this._geom_arrays.dn_wires_edges[wire_i].push(new_edge_i);
        // update the up arrays
        this._geom_arrays.up_edges_wires[new_edge_i] = wire_i;
        // return the new edge
        return new_edge_i;
    };
    /**
     * Open a wire, by making a new position for the last vertex.
     * @param wire_i The wire to close.
     */
    GIGeomModify.prototype.openWire = function (wire_i) {
        // This deletes an edge
        throw new Error('Not implemented');
    };
    /**
     * Insert a vertex into an edge and updates the wire with the new edge
     * @param edge_i The edge to insert teh vertex into
     */
    GIGeomModify.prototype.insertVertIntoWire = function (edge_i, posi_i) {
        var wire_i = this._geom.query.navEdgeToWire(edge_i);
        var wire = this._geom_arrays.dn_wires_edges[wire_i];
        var old_edge = this._geom_arrays.dn_edges_verts[edge_i];
        // create one new vertex and one new edge
        var new_vert_i = this._geom.add._addVertex(posi_i);
        var new_edge_i = this._geom.add._addEdge(new_vert_i, old_edge[1]);
        // update the down arrays
        old_edge[1] = new_vert_i;
        wire.splice(wire.indexOf(edge_i), 1, edge_i, new_edge_i);
        // update the up arrays
        this._geom_arrays.up_edges_wires[new_edge_i] = wire_i;
        // return the new edge
        return new_edge_i;
    };
    /**
     * Adds a vertex to a wire and updates the wire with the new edge
     * @param wire_i The wire to add to.
     */
    GIGeomModify.prototype.addVertToWire = function (wire_i, posi_i, to_end) {
        var wire = this._geom_arrays.dn_wires_edges[wire_i];
        // create one new vertex and one new edge
        var new_vert_i = this._geom.add._addVertex(posi_i);
        var new_edge_i;
        if (to_end) {
            var exist_edge_i = wire[wire.length - 1];
            var exist_vert_i = this._geom_arrays.dn_edges_verts[exist_edge_i][1];
            new_edge_i = this._geom.add._addEdge(exist_vert_i, new_vert_i);
            // update the down arrays
            wire.push(new_edge_i);
        }
        else {
            var exist_edge_i = wire[0];
            var exist_vert_i = this._geom_arrays.dn_edges_verts[exist_edge_i][0];
            new_edge_i = this._geom.add._addEdge(new_vert_i, exist_vert_i);
            // update the down arrays
            wire.splice(0, 0, new_edge_i);
        }
        // update the up arrays
        this._geom_arrays.up_edges_wires[new_edge_i] = wire_i;
        // return the new edge
        return new_edge_i;
    };
    /**
     * Replace positions
     * @param ent_type
     * @param ent_i
     * @param new_posis_i
     */
    GIGeomModify.prototype.replacePosis = function (ent_type, ent_i, new_posis_i) {
        var verts_i = this._geom.query.navAnyToVert(ent_type, ent_i);
        if (verts_i.length !== new_posis_i.length) {
            throw new Error('Replacing positions operation failed due to incorrect number of positions.');
        }
        for (var i = 0; i < verts_i.length; i++) {
            var vert_i = verts_i[i];
            var old_posi_i = this._geom_arrays.dn_verts_posis[vert_i];
            var new_posi_i = new_posis_i[i];
            // set the down array
            this._geom_arrays.dn_verts_posis[vert_i] = new_posi_i;
            // update the up arrays for the old posi, i.e. remove this vert
            Object(_util_arrays__WEBPACK_IMPORTED_MODULE_1__["arrRem"])(this._geom_arrays.up_posis_verts[old_posi_i], vert_i);
            // update the up arrays for the new posi, i.e. add this vert
            this._geom_arrays.up_posis_verts[new_posi_i].push(vert_i);
        }
    };
    /**
     * Unweld the vertices
     * TODO copy attributes onto new positions?
     * @param verts_i
     */
    GIGeomModify.prototype.unweldVerts = function (verts_i) {
        var _this = this;
        // create a map, for each posi_i, count how many verts there are in the input verts
        var exist_posis_i_map = new Map(); // posi_i -> count
        for (var _i = 0, verts_i_3 = verts_i; _i < verts_i_3.length; _i++) {
            var vert_i = verts_i_3[_i];
            var posi_i = this._geom.query.navVertToPosi(vert_i);
            if (!exist_posis_i_map.has(posi_i)) {
                exist_posis_i_map.set(posi_i, 0);
            }
            var vert_count = exist_posis_i_map.get(posi_i);
            exist_posis_i_map.set(posi_i, vert_count + 1);
        }
        // copy positions on the perimeter and make a map
        var old_to_new_posis_i_map = new Map();
        exist_posis_i_map.forEach(function (vert_count, old_posi_i) {
            var all_old_verts_i = _this._geom.query.navPosiToVert(old_posi_i);
            var all_vert_count = all_old_verts_i.length;
            if (vert_count !== all_vert_count) {
                if (!old_to_new_posis_i_map.has(old_posi_i)) {
                    var new_posi_i = _this._geom.add.copyPosis(old_posi_i, true);
                    old_to_new_posis_i_map.set(old_posi_i, new_posi_i);
                }
            }
        });
        // now go through the geom again and rewire to the new posis
        for (var _a = 0, verts_i_4 = verts_i; _a < verts_i_4.length; _a++) {
            var vert_i = verts_i_4[_a];
            var old_posi_i = this._geom.query.navVertToPosi(vert_i);
            if (old_to_new_posis_i_map.has(old_posi_i)) {
                var new_posi_i = old_to_new_posis_i_map.get(old_posi_i);
                // update the down arrays
                this._geom_arrays.dn_verts_posis[vert_i] = new_posi_i;
                // update the up arrays for the old posi, i.e. remove this vert
                Object(_util_arrays__WEBPACK_IMPORTED_MODULE_1__["arrRem"])(this._geom_arrays.up_posis_verts[old_posi_i], vert_i);
                // update the up arrays for the new posi, i.e. add this vert
                this._geom_arrays.up_posis_verts[new_posi_i].push(vert_i);
            }
        }
        // return all the new positions
        return Array.from(old_to_new_posis_i_map.values());
    };
    /**
     * Reverse the edges of a wire.
     * This lists the edges in reverse order, and flips each edge.
     * The attributes ... TODO
     */
    GIGeomModify.prototype.reverse = function (wire_i) {
        var wire = this._geom_arrays.dn_wires_edges[wire_i];
        wire.reverse();
        // reverse the edges
        for (var _i = 0, wire_1 = wire; _i < wire_1.length; _i++) {
            var edge_i = wire_1[_i];
            var edge = this._geom_arrays.dn_edges_verts[edge_i];
            edge.reverse();
        }
        // if this is a face, reverse the triangles
        if (this._geom_arrays.up_wires_faces[wire_i] !== undefined) {
            var face_i = this._geom_arrays.up_wires_faces[wire_i];
            var face = this._geom_arrays.dn_faces_wirestris[face_i];
            for (var _a = 0, _b = face[1]; _a < _b.length; _a++) {
                var tri_i = _b[_a];
                var tri = this._geom_arrays.dn_tris_verts[tri_i];
                tri.reverse();
            }
        }
    };
    /**
     * Shifts the edges of a wire.
     * The attributes ... TODO
     */
    GIGeomModify.prototype.shift = function (wire_i, offset) {
        var wire = this._geom_arrays.dn_wires_edges[wire_i];
        wire.unshift.apply(wire, wire.splice(offset, wire.length));
    };
    // ============================================================================
    // Private methods
    // ============================================================================
    /**
     * Adds a hole to a face and updates the arrays.
     * Wires are assumed to be closed!
     * This also calls addTris()
     * @param wire_i
     */
    GIGeomModify.prototype._cutFaceHoles = function (face_i, hole_wires_i) {
        var _this = this;
        // get the wires and triangles arrays
        var _a = this._geom_arrays.dn_faces_wirestris[face_i], face_wires_i = _a[0], old_face_tris_i = _a[1];
        // get the outer wire
        var outer_wire_i = face_wires_i[0];
        // get the hole wires
        var all_hole_wires_i = [];
        if (face_wires_i.length > 1) {
            face_wires_i.slice(1).forEach(function (wire_i) { return all_hole_wires_i.push(wire_i); });
        }
        hole_wires_i.forEach(function (wire_i) { return all_hole_wires_i.push(wire_i); });
        // create the triangles
        var new_tris_i = this._geom.add._addTris(outer_wire_i, all_hole_wires_i);
        // create the face
        var new_wires_i = face_wires_i.concat(hole_wires_i);
        var new_face = [new_wires_i, new_tris_i];
        // update down arrays
        this._geom_arrays.dn_faces_wirestris[face_i] = new_face;
        // update up arrays
        hole_wires_i.forEach(function (hole_wire_i) { return _this._geom_arrays.up_wires_faces[hole_wire_i] = face_i; });
        new_tris_i.forEach(function (tri_i) { return _this._geom_arrays.up_tris_faces[tri_i] = face_i; });
        // delete the old trianges
        for (var _i = 0, old_face_tris_i_1 = old_face_tris_i; _i < old_face_tris_i_1.length; _i++) {
            var old_face_tri_i = old_face_tris_i_1[_i];
            // remove these deleted tris from the verts
            for (var _b = 0, _c = this._geom_arrays.dn_tris_verts[old_face_tri_i]; _b < _c.length; _b++) {
                var vertex_i = _c[_b];
                var tris_i = this._geom_arrays.up_verts_tris[vertex_i];
                Object(_util_arrays__WEBPACK_IMPORTED_MODULE_1__["arrRem"])(tris_i, old_face_tri_i);
            }
            // tris to verts
            this._geom_arrays.dn_tris_verts[old_face_tri_i] = null;
            // tris to faces
            delete this._geom_arrays.up_tris_faces[old_face_tri_i];
        }
        // TODO deal with the old triangles, stored in face_tris_i
        // TODO These are still there and are still pointing up at this face
        // TODO the have to be deleted...
        // return the numeric index of the face
        return face_i;
    };
    // ============================================================================
    // Private methods to delete topo
    // ============================================================================
    /**
     * Deletes a vert.
     *
     * In the general case, the two edges adjacent to the deleted vert will be merged.
     * This means that the next edge will be deleted.
     * The end vert of the previous edge will connect to the end posi of the next edge.
     *
     * The first special case is if the vert is for a point. In that case, just delete the point.
     *
     * Then there are two special cases for whicj we delete the whole object
     *
     * 1) If the wire is open and has only 1 edge, then delete the wire
     * 2) if the wire is closed pgon and has only 3 edges, then:
     *    a) If the wire is the boundary of the pgon, then delete the whole pgon
     *    b) If the wire is a hole in the pgon, then delete the hole
     *
     * Assuming the special cases above do not apply,
     * then there are two more special cases for open wires
     *
     * 1) If the vert is at the start of an open wire, then delete the first edge
     * 2) If teh vert is at the end of an open wire, then delete the last edge
     *
     * Finally, we come to the standard case.
     * The next edge is deleted, and the prev edge gets rewired.
     *
     * @param vert_i
     */
    GIGeomModify.prototype._delVert = function (vert_i) {
        // check, has it already been deleted
        if (this._geom_arrays.dn_verts_posis[vert_i] === null) {
            return;
        }
        // check, is this a point, then delete the point and vertex
        var point_i = this._geom_arrays.up_verts_points[vert_i];
        if (point_i !== undefined && point_i !== null) {
            this.delPoints(point_i, false);
            return;
        }
        // get the posis, edges, and wires, and other info
        var edges_i = this._geom_arrays.up_verts_edges[vert_i];
        var wire_i = this._geom_arrays.up_edges_wires[edges_i[0]];
        var face_i = this._geom_arrays.up_wires_faces[wire_i]; // this may be undefined
        var wire_edges_i = this._geom_arrays.dn_wires_edges[wire_i];
        var wire_verts_i = this._geom.query.navAnyToVert(_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].WIRE, wire_i);
        var wire_is_closed = this._geom.query.istWireClosed(wire_i);
        var index_vert_i = wire_verts_i.indexOf(vert_i);
        var num_verts = wire_verts_i.length;
        // update the edges and wires
        if (!wire_is_closed && num_verts === 2) {
            // special case, open pline with 2 verts
            this.__delVert__OpenPline1Edge(wire_i);
        }
        else if (face_i !== undefined && face_i !== null && num_verts === 3) {
            // special case, pgon with three verts
            var wires_i = this._geom_arrays.dn_faces_wirestris[face_i][0];
            var index_face_wire = wires_i.indexOf(wire_i);
            if (index_face_wire === 0) {
                // special case, pgon boundary with verts, delete the pgon
                this.__delVert__PgonBoundaryWire3Edge(face_i);
            }
            else {
                // special case, pgon hole with verts, delete the hole
                this.__delVert__PgonHoleWire3Edge(face_i, wire_i);
            }
        }
        else if (!wire_is_closed && index_vert_i === 0) {
            // special case, open pline, delete start edge and vert
            this.__delVert__OpenPlineStart(wire_edges_i, wire_verts_i, vert_i);
        }
        else if (!wire_is_closed && index_vert_i === num_verts - 1) {
            // special case, open pline, delete end edge and vert
            this.__delVert__OpenPlineEnd(wire_edges_i, wire_verts_i, vert_i);
        }
        else {
            // standard case, delete the prev edge and reqire the next edge
            this.__delVert__StandardCase(wire_edges_i, vert_i, index_vert_i === 0);
            if (face_i !== undefined) {
                // for pgons, also update tris
                this._updateFaceTris(face_i);
            }
        }
    };
    /**
     * Special case, delete the pline
     * @param wire_i
     */
    GIGeomModify.prototype.__delVert__OpenPline1Edge = function (wire_i) {
        var pline_i = this._geom_arrays.up_wires_plines[wire_i];
        this.delPlines(pline_i, false);
    };
    /**
     * Special case, delete either the pgon
     * @param face_i
     */
    GIGeomModify.prototype.__delVert__PgonBoundaryWire3Edge = function (face_i) {
        var pgon_i = this._geom_arrays.up_faces_pgons[face_i];
        this.delPgons(pgon_i, false);
    };
    /**
     * Special case, delete either the hole
     * @param vert_i
     */
    GIGeomModify.prototype.__delVert__PgonHoleWire3Edge = function (face_i, wire_i) {
    };
    /**
     * Special case, delete the first edge
     * @param vert_i
     */
    GIGeomModify.prototype.__delVert__OpenPlineStart = function (wire_edges_i, wire_verts_i, vert_i) {
        var posi_i = this._geom_arrays.dn_verts_posis[vert_i];
        // vert_i is at the star of an open wire, we have one edge
        var start_edge_i = wire_edges_i[0];
        // delete the first edge
        this._geom_arrays.dn_edges_verts[start_edge_i] = null;
        delete this._geom_arrays.up_edges_wires[start_edge_i];
        this._geom.model.attribs.add.delEntFromAttribs(_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].EDGE, start_edge_i);
        // update the second vert
        var second_vert_i = wire_verts_i[1];
        Object(_util_arrays__WEBPACK_IMPORTED_MODULE_1__["arrRem"])(this._geom_arrays.up_verts_edges[second_vert_i], start_edge_i);
        // update the wire
        Object(_util_arrays__WEBPACK_IMPORTED_MODULE_1__["arrRem"])(wire_edges_i, start_edge_i);
        // delete the vert
        this._geom_arrays.dn_verts_posis[vert_i] = null;
        delete this._geom_arrays.up_verts_edges[vert_i];
        this._geom.model.attribs.add.delEntFromAttribs(_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].VERT, vert_i);
        // update the posis
        Object(_util_arrays__WEBPACK_IMPORTED_MODULE_1__["arrRem"])(this._geom_arrays.up_posis_verts[posi_i], vert_i);
    };
    /**
     * Special case, delete the last edge
     * @param vert_i
     */
    GIGeomModify.prototype.__delVert__OpenPlineEnd = function (wire_edges_i, wire_verts_i, vert_i) {
        var posi_i = this._geom_arrays.dn_verts_posis[vert_i];
        // vert_i is at the end of an open wire, we have one edge
        var end_edge_i = wire_edges_i[wire_edges_i.length - 1];
        // delete the last edge
        this._geom_arrays.dn_edges_verts[end_edge_i] = null;
        delete this._geom_arrays.up_edges_wires[end_edge_i];
        this._geom.model.attribs.add.delEntFromAttribs(_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].EDGE, end_edge_i);
        // update the one before last vert
        var before_last_vert_i = wire_verts_i[wire_verts_i.length - 2];
        Object(_util_arrays__WEBPACK_IMPORTED_MODULE_1__["arrRem"])(this._geom_arrays.up_verts_edges[before_last_vert_i], end_edge_i);
        // update the wire
        Object(_util_arrays__WEBPACK_IMPORTED_MODULE_1__["arrRem"])(wire_edges_i, end_edge_i);
        // delete the vert
        this._geom_arrays.dn_verts_posis[vert_i] = null;
        delete this._geom_arrays.up_verts_edges[vert_i];
        this._geom.model.attribs.add.delEntFromAttribs(_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].VERT, vert_i);
        // update the posis
        Object(_util_arrays__WEBPACK_IMPORTED_MODULE_1__["arrRem"])(this._geom_arrays.up_posis_verts[posi_i], vert_i);
    };
    /**
     * Final case, delete the next edge, reqire the previous edge
     * For pgons, this does not update the tris
     * @param vert_i
     */
    GIGeomModify.prototype.__delVert__StandardCase = function (wire_edges_i, vert_i, is_first) {
        var posi_i = this._geom_arrays.dn_verts_posis[vert_i];
        // vert_i is in the middle of a wire, we must have two edges
        var edges_i = this._geom_arrays.up_verts_edges[vert_i];
        var prev_edge_i = is_first ? edges_i[1] : edges_i[0];
        var next_edge_i = is_first ? edges_i[0] : edges_i[1];
        // get the verts of the two edges
        var prev_edge_verts_i = this._geom_arrays.dn_edges_verts[prev_edge_i];
        var next_edge_verts_i = this._geom_arrays.dn_edges_verts[next_edge_i];
        var prev_vert_i = prev_edge_verts_i[0];
        var next_vert_i = next_edge_verts_i[1];
        // run some checks, TODO this can be removed later
        if (prev_vert_i === vert_i) {
            throw new Error('Unexpected vertex ordering 1');
        }
        if (next_vert_i === vert_i) {
            throw new Error('Unexpected vertex ordering 2');
        }
        if (prev_edge_verts_i[1] !== next_edge_verts_i[0]) {
            throw new Error('Unexpected vertex ordering 3');
        }
        if (prev_edge_verts_i[1] !== vert_i) {
            throw new Error('Unexpected vertex ordering 4');
        }
        // rewire the end vert of the previous edge to the end vert of the next edge
        prev_edge_verts_i[1] = next_vert_i;
        this._geom_arrays.up_verts_edges[next_vert_i][0] = prev_edge_i;
        // delete the next edge
        this._geom_arrays.dn_edges_verts[next_edge_i] = null;
        delete this._geom_arrays.up_edges_wires[next_edge_i];
        this._geom.model.attribs.add.delEntFromAttribs(_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].EDGE, next_edge_i);
        // update the wire
        Object(_util_arrays__WEBPACK_IMPORTED_MODULE_1__["arrRem"])(wire_edges_i, next_edge_i);
        // delete the vert
        this._geom_arrays.dn_verts_posis[vert_i] = null;
        delete this._geom_arrays.up_verts_edges[vert_i];
        this._geom.model.attribs.add.delEntFromAttribs(_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].VERT, vert_i);
        // update the posis
        Object(_util_arrays__WEBPACK_IMPORTED_MODULE_1__["arrRem"])(this._geom_arrays.up_posis_verts[posi_i], vert_i);
    };
    /**
     * Updates the tris in a face
     * @param face_i
     */
    GIGeomModify.prototype._updateFaceTris = function (face_i) {
        // get the wires
        var border_wire_i = this._geom_arrays.dn_faces_wirestris[face_i][0][0];
        // get the border and holes
        var holes_wires_i = [];
        var num_holes = this._geom_arrays.dn_faces_wirestris[face_i][0].length - 1;
        if (num_holes > 1) {
            for (var i = 1; i < num_holes + 1; i++) {
                var hole_wire_i = this._geom_arrays.dn_faces_wirestris[face_i][0][i];
                holes_wires_i.push(hole_wire_i);
            }
        }
        var tris_i = this._geom.add._addTris(border_wire_i, holes_wires_i);
        // delete the old tris
        for (var _i = 0, _a = this._geom_arrays.dn_faces_wirestris[face_i][1]; _i < _a.length; _i++) {
            var tri_i = _a[_i];
            // update the verts
            var verts_i = this._geom_arrays.dn_tris_verts[tri_i];
            for (var _b = 0, verts_i_5 = verts_i; _b < verts_i_5.length; _b++) {
                var vert_i = verts_i_5[_b];
                delete this._geom_arrays.up_verts_tris[vert_i]; // up
            }
            // delete the tri
            this._geom_arrays.dn_tris_verts[tri_i] = null;
            delete this._geom_arrays.up_tris_faces[tri_i]; // up
        }
        // update down arrays
        this._geom_arrays.dn_faces_wirestris[face_i][1] = tris_i;
        // update up arrays
        for (var _c = 0, tris_i_1 = tris_i; _c < tris_i_1.length; _c++) {
            var tri_i = tris_i_1[_c];
            this._geom_arrays.up_tris_faces[tri_i] = face_i;
        }
    };
    return GIGeomModify;
}());



/***/ }),

/***/ "./src/assets/libs/geo-info/GIGeomQuery.ts":
/*!*************************************************!*\
  !*** ./src/assets/libs/geo-info/GIGeomQuery.ts ***!
  \*************************************************/
/*! exports provided: GIGeomQuery */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GIGeomQuery", function() { return GIGeomQuery; });
/* harmony import */ var _common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./common */ "./src/assets/libs/geo-info/common.ts");
/* harmony import */ var _id__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./id */ "./src/assets/libs/geo-info/id.ts");
/* harmony import */ var _geom_vectors__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../geom/vectors */ "./src/assets/libs/geom/vectors.ts");



/**
 * Class for geometry.
 */
var GIGeomQuery = /** @class */ (function () {
    /**
     * Creates an object to store the geometry data.
     * @param geom_data The JSON data
     */
    function GIGeomQuery(geom, geom_arrays) {
        this._geom = geom;
        this._geom_arrays = geom_arrays;
    }
    // ============================================================================
    // Get entity indices, and num ents
    // ============================================================================
    /**
     * Returns a list of indices for all, including ents that are null
     * @param ent_type
     */
    GIGeomQuery.prototype.getEnts = function (ent_type, include_deleted) {
        // get posis indices array from up array: up_posis_verts
        if (Object(_id__WEBPACK_IMPORTED_MODULE_1__["isPosi"])(ent_type)) {
            var posis = this._geom_arrays.up_posis_verts;
            var posis_i = [];
            if (include_deleted) {
                for (var i = 0; i < posis.length; i++) {
                    var posi = posis[i];
                    if (posi !== null) {
                        posis_i.push(i);
                    }
                    else {
                        posis_i.push(null); // TODO
                    }
                }
            }
            else {
                for (var i = 0; i < posis.length; i++) {
                    var posi = posis[i];
                    if (posi !== null) {
                        posis_i.push(i);
                    }
                }
            }
            return posis_i;
        }
        // get ents indices array from down arrays
        var geom_array_key = _common__WEBPACK_IMPORTED_MODULE_0__["EEntStrToGeomArray"][ent_type];
        var geom_array = this._geom_arrays[geom_array_key];
        var ents_i = [];
        if (include_deleted) {
            for (var i = 0; i < geom_array.length; i++) {
                var ent = geom_array[i];
                if (ent !== null) {
                    ents_i.push(i);
                }
                else {
                    ents_i.push(null); // TODO
                }
            }
        }
        else {
            for (var i = 0; i < geom_array.length; i++) {
                var ent = geom_array[i];
                if (ent !== null) {
                    ents_i.push(i);
                }
            }
        }
        return ents_i;
    };
    /**
     * Returns the number of entities
     * @param ent_type
     */
    GIGeomQuery.prototype.numEnts = function (ent_type, include_deleted) {
        return this.getEnts(ent_type, include_deleted).length;
    };
    /**
     * Returns a list of indices for all posis that have no verts
     * @param ent_type
     */
    GIGeomQuery.prototype.getUnusedPosis = function (include_deleted) {
        // get posis indices array from up array: up_posis_verts
        var posis = this._geom_arrays.up_posis_verts;
        var posis_i = [];
        if (include_deleted) {
            for (var i = 0; i < posis.length; i++) {
                var posi = posis[i];
                if (posi !== null) {
                    if (posi.length === 0) {
                        posis_i.push(i);
                    }
                }
                else {
                    posis_i.push(null);
                }
            }
        }
        else {
            for (var i = 0; i < posis.length; i++) {
                var posi = posis[i];
                if (posi !== null) {
                    if (posi.length === 0) {
                        posis_i.push(i);
                    }
                }
            }
        }
        return posis_i;
    };
    // ============================================================================
    // Util
    // ============================================================================
    /**
     * Check if an entity exists
     * @param ent_type
     * @param index
     */
    GIGeomQuery.prototype.entExists = function (ent_type, index) {
        var geom_arrays_key = _common__WEBPACK_IMPORTED_MODULE_0__["EEntStrToGeomArray"][ent_type];
        return (this._geom_arrays[geom_arrays_key][index] !== undefined);
    };
    /**
     * Check if a wire is closed.
     * @param wire_i
     */
    GIGeomQuery.prototype.istWireClosed = function (wire_i) {
        // get the wire start and end verts
        var wire = this._geom_arrays.dn_wires_edges[wire_i];
        var num_edges = wire.length;
        var start_edge_i = wire[0];
        var end_edge_i = wire[num_edges - 1];
        var start_vert_i = this._geom.query.navEdgeToVert(start_edge_i)[0];
        var end_vert_i = this._geom.query.navEdgeToVert(end_edge_i)[1];
        // if start and end verts are the same, then wire is closed
        return (start_vert_i === end_vert_i);
    };
    /**
     * Returns the vertices.
     * For a closed wire, #vertices = #edges
     * For an open wire, #vertices = #edges + 1
     * @param wire_i
     */
    GIGeomQuery.prototype.getWireVerts = function (wire_i) {
        var _this = this;
        var edges_i = this._geom_arrays.dn_wires_edges[wire_i];
        var verts_i = edges_i.map(function (edge_i) { return _this._geom_arrays.dn_edges_verts[edge_i][0]; });
        // if wire is open, then add final vertex
        if (this._geom_arrays.dn_edges_verts[edges_i[0]][0] !== this._geom_arrays.dn_edges_verts[edges_i[edges_i.length - 1]][1]) {
            verts_i.push(this._geom_arrays.dn_edges_verts[edges_i[edges_i.length - 1]][1]);
        }
        return verts_i;
    };
    /**
     * Get the parent of a collection.
     * @param coll_i
     */
    GIGeomQuery.prototype.getCollParent = function (coll_i) {
        return this._geom_arrays.dn_colls_objs[coll_i][0];
    };
    /**
     *
     * @param face_i
     */
    GIGeomQuery.prototype.getFaceBoundary = function (face_i) {
        var wires_i = this._geom_arrays.dn_faces_wirestris[face_i][0];
        return wires_i[0];
    };
    /**
     *
     * @param face_i
     */
    GIGeomQuery.prototype.getFaceHoles = function (face_i) {
        var wires_i = this._geom_arrays.dn_faces_wirestris[face_i][0];
        return wires_i.slice(1);
    };
    /**
     *
     * @param ent_i
     */
    GIGeomQuery.prototype.getCentroid = function (ent_type, ent_i) {
        var posis_i = this.navAnyToPosi(ent_type, ent_i);
        var centroid = [0, 0, 0];
        for (var _i = 0, posis_i_1 = posis_i; _i < posis_i_1.length; _i++) {
            var posi_i = posis_i_1[_i];
            var xyz = this._geom.model.attribs.query.getPosiCoords(posi_i);
            centroid[0] += xyz[0];
            centroid[1] += xyz[1];
            centroid[2] += xyz[2];
        }
        return Object(_geom_vectors__WEBPACK_IMPORTED_MODULE_2__["vecDiv"])(centroid, posis_i.length);
    };
    /**
     *
     * @param face_i
     */
    GIGeomQuery.prototype.getFaceNormal = function (face_i) {
        var _this = this;
        var normal = [0, 0, 0];
        var tris_i = this._geom._geom_arrays.dn_faces_wirestris[face_i][1];
        var count = 0;
        for (var _i = 0, tris_i_1 = tris_i; _i < tris_i_1.length; _i++) {
            var tri_i = tris_i_1[_i];
            var posis_i = this._geom_arrays.dn_tris_verts[tri_i].map(function (vert_i) { return _this._geom_arrays.dn_verts_posis[vert_i]; });
            var xyzs = posis_i.map(function (posi_i) { return _this._geom.model.attribs.query.getPosiCoords(posi_i); });
            var vec_a = Object(_geom_vectors__WEBPACK_IMPORTED_MODULE_2__["vecFromTo"])(xyzs[0], xyzs[1]);
            var vec_b = Object(_geom_vectors__WEBPACK_IMPORTED_MODULE_2__["vecFromTo"])(xyzs[0], xyzs[2]); // CCW
            var tri_normal = Object(_geom_vectors__WEBPACK_IMPORTED_MODULE_2__["vecCross"])(vec_a, vec_b, true);
            if (!(tri_normal[0] === 0 && tri_normal[1] === 0 && tri_normal[2] === 0)) {
                count += 1;
                normal[0] += tri_normal[0];
                normal[1] += tri_normal[1];
                normal[2] += tri_normal[2];
            }
        }
        if (count === 0) {
            return [0, 0, 0];
        }
        return Object(_geom_vectors__WEBPACK_IMPORTED_MODULE_2__["vecDiv"])(normal, count);
    };
    /**
     *
     * @param wire_i
     */
    GIGeomQuery.prototype.getWireNormal = function (wire_i) {
        var _this = this;
        var centroid = this.getCentroid(_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].WIRE, wire_i);
        var edges_i = this._geom._geom_arrays.dn_wires_edges[wire_i];
        var normal = [0, 0, 0];
        var count = 0;
        for (var _i = 0, edges_i_1 = edges_i; _i < edges_i_1.length; _i++) {
            var edge_i = edges_i_1[_i];
            var posis_i = this._geom_arrays.dn_edges_verts[edge_i].map(function (vert_i) { return _this._geom_arrays.dn_verts_posis[vert_i]; });
            var xyzs = posis_i.map(function (posi_i) { return _this._geom.model.attribs.query.getPosiCoords(posi_i); });
            var vec_a = Object(_geom_vectors__WEBPACK_IMPORTED_MODULE_2__["vecFromTo"])(centroid, xyzs[0]);
            var vec_b = Object(_geom_vectors__WEBPACK_IMPORTED_MODULE_2__["vecFromTo"])(centroid, xyzs[1]); // CCW
            var tri_normal = Object(_geom_vectors__WEBPACK_IMPORTED_MODULE_2__["vecCross"])(vec_a, vec_b, true);
            if (!(tri_normal[0] === 0 && tri_normal[1] === 0 && tri_normal[2] === 0)) {
                count += 1;
                normal[0] += tri_normal[0];
                normal[1] += tri_normal[1];
                normal[2] += tri_normal[2];
            }
        }
        if (count === 0) {
            return [0, 0, 0];
        }
        return Object(_geom_vectors__WEBPACK_IMPORTED_MODULE_2__["vecDiv"])(normal, count);
    };
    // ============================================================================
    // Navigate down the hierarchy
    // ============================================================================
    GIGeomQuery.prototype.navVertToPosi = function (vert_i) {
        return this._geom_arrays.dn_verts_posis[vert_i];
    };
    GIGeomQuery.prototype.navTriToVert = function (tri_i) {
        return this._geom_arrays.dn_tris_verts[tri_i];
    };
    GIGeomQuery.prototype.navEdgeToVert = function (edge_i) {
        return this._geom_arrays.dn_edges_verts[edge_i];
    };
    GIGeomQuery.prototype.navWireToEdge = function (wire_i) {
        return this._geom_arrays.dn_wires_edges[wire_i];
    };
    GIGeomQuery.prototype.navFaceToWire = function (face_i) {
        return this._geom_arrays.dn_faces_wirestris[face_i][0];
    };
    GIGeomQuery.prototype.navFaceToTri = function (face_i) {
        return this._geom_arrays.dn_faces_wirestris[face_i][1];
    };
    GIGeomQuery.prototype.navPointToVert = function (point_i) {
        return this._geom_arrays.dn_points_verts[point_i];
    };
    GIGeomQuery.prototype.navPlineToWire = function (line_i) {
        return this._geom_arrays.dn_plines_wires[line_i];
    };
    GIGeomQuery.prototype.navPgonToFace = function (pgon_i) {
        return this._geom_arrays.dn_pgons_faces[pgon_i];
    };
    GIGeomQuery.prototype.navCollToPoint = function (coll_i) {
        return this._geom_arrays.dn_colls_objs[coll_i][1]; // coll points
    };
    GIGeomQuery.prototype.navCollToPline = function (coll_i) {
        return this._geom_arrays.dn_colls_objs[coll_i][2]; // coll lines
    };
    GIGeomQuery.prototype.navCollToPgon = function (coll_i) {
        return this._geom_arrays.dn_colls_objs[coll_i][3]; // coll pgons
    };
    GIGeomQuery.prototype.navCollToColl = function (coll_i) {
        return coll_i[0]; // coll parent
    };
    // ============================================================================
    // Navigate up the hierarchy
    // ============================================================================
    GIGeomQuery.prototype.navPosiToVert = function (posi_i) {
        return this._geom_arrays.up_posis_verts[posi_i];
    };
    GIGeomQuery.prototype.navVertToTri = function (vert_i) {
        return this._geom_arrays.up_verts_tris[vert_i];
    };
    GIGeomQuery.prototype.navVertToEdge = function (vert_i) {
        return this._geom_arrays.up_verts_edges[vert_i];
    };
    GIGeomQuery.prototype.navTriToFace = function (tri_i) {
        return this._geom_arrays.up_tris_faces[tri_i];
    };
    GIGeomQuery.prototype.navEdgeToWire = function (edge_i) {
        return this._geom_arrays.up_edges_wires[edge_i];
    };
    GIGeomQuery.prototype.navWireToFace = function (wire_i) {
        return this._geom_arrays.up_wires_faces[wire_i];
    };
    GIGeomQuery.prototype.navVertToPoint = function (vert_i) {
        return this._geom_arrays.up_verts_points[vert_i];
    };
    GIGeomQuery.prototype.navWireToPline = function (wire_i) {
        return this._geom_arrays.up_wires_plines[wire_i];
    };
    GIGeomQuery.prototype.navFaceToPgon = function (face) {
        return this._geom_arrays.up_faces_pgons[face];
    };
    GIGeomQuery.prototype.navPointToColl = function (point_i) {
        return this._geom_arrays.up_points_colls[point_i];
    };
    GIGeomQuery.prototype.navPlineToColl = function (line_i) {
        return this._geom_arrays.up_plines_colls[line_i];
    };
    GIGeomQuery.prototype.navPgonToColl = function (pgon_i) {
        return this._geom_arrays.up_pgons_colls[pgon_i];
    };
    // ============================================================================
    // Navigate from any level to ? (up or down)
    // ============================================================================
    /**
     * Navigate from any level to the colls
     * @param ent_type
     * @param index
     */
    GIGeomQuery.prototype.navAnyToColl = function (ent_type, index) {
        var _this = this;
        if (Object(_id__WEBPACK_IMPORTED_MODULE_1__["isColl"])(ent_type)) {
            return [index];
        }
        var points_i = this.navAnyToPoint(ent_type, index);
        var colls1_i = [].concat.apply([], points_i.map(function (point_i) { return _this.navPointToColl(point_i); }));
        var plines_i = this.navAnyToPline(ent_type, index);
        var colls2_i = [].concat.apply([], plines_i.map(function (pline_i) { return _this.navPlineToColl(pline_i); }));
        var pgons_i = this.navAnyToPgon(ent_type, index);
        var colls3_i = [].concat.apply([], pgons_i.map(function (pgon_i) { return _this.navPgonToColl(pgon_i); }));
        return Array.from(new Set(colls1_i.concat(colls2_i, colls3_i))).filter(function (coll_i) { return coll_i !== undefined; }); // remove duplicates
    };
    /**
     * Navigate from any level to the pgons
     * @param ent_type
     * @param index
     */
    GIGeomQuery.prototype.navAnyToPgon = function (ent_type, index) {
        var _this = this;
        if (Object(_id__WEBPACK_IMPORTED_MODULE_1__["isPgon"])(ent_type)) {
            return [index];
        }
        var faces_i = this.navAnyToFace(ent_type, index);
        return faces_i.map(function (face_i) { return _this.navFaceToPgon(face_i); }).filter(function (pgon_i) { return pgon_i !== undefined; });
    };
    /**
     * Navigate from any level to the plines
     * @param ent_type
     * @param index
     */
    GIGeomQuery.prototype.navAnyToPline = function (ent_type, index) {
        var _this = this;
        if (Object(_id__WEBPACK_IMPORTED_MODULE_1__["isPline"])(ent_type)) {
            return [index];
        }
        var wires_i = this.navAnyToWire(ent_type, index);
        return wires_i.map(function (wire_i) { return _this.navWireToPline(wire_i); }).filter(function (pline_i) { return pline_i !== undefined; });
    };
    /**
     * Navigate from any level to the points
     * @param ent_type
     * @param index
     */
    GIGeomQuery.prototype.navAnyToPoint = function (ent_type, index) {
        var _this = this;
        if (Object(_id__WEBPACK_IMPORTED_MODULE_1__["isPoint"])(ent_type)) {
            return [index];
        }
        var verts_i = this.navAnyToVert(ent_type, index);
        return verts_i.map(function (vert_i) { return _this.navVertToPoint(vert_i); }).filter(function (point_i) { return point_i !== undefined; });
    };
    /**
     * Navigate from any level to the faces
     * @param ent_type
     * @param index
     */
    GIGeomQuery.prototype.navAnyToFace = function (ent_type, index) {
        var _this = this;
        if (Object(_id__WEBPACK_IMPORTED_MODULE_1__["isPosi"])(ent_type)) {
            var verts_i = this.navPosiToVert(index);
            return [].concat.apply([], verts_i.map(function (vert_i) { return _this.navAnyToFace(_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].VERT, vert_i); }));
        }
        else if (Object(_id__WEBPACK_IMPORTED_MODULE_1__["isVert"])(ent_type)) {
            var edges_i = this.navVertToEdge(index);
            return [].concat.apply([], edges_i.map(function (edge_i) { return _this.navAnyToFace(_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].EDGE, edge_i); }));
        }
        else if (Object(_id__WEBPACK_IMPORTED_MODULE_1__["isTri"])(ent_type)) {
            return [this.navTriToFace(index)];
        }
        else if (Object(_id__WEBPACK_IMPORTED_MODULE_1__["isEdge"])(ent_type)) {
            var wire_i = this.navEdgeToWire(index);
            return this.navAnyToFace(_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].WIRE, wire_i);
        }
        else if (Object(_id__WEBPACK_IMPORTED_MODULE_1__["isWire"])(ent_type)) {
            return [this.navWireToFace(index)];
        }
        else if (Object(_id__WEBPACK_IMPORTED_MODULE_1__["isFace"])(ent_type)) { // target
            return [index];
        }
        else if (Object(_id__WEBPACK_IMPORTED_MODULE_1__["isPoint"])(ent_type)) {
            return [];
        }
        else if (Object(_id__WEBPACK_IMPORTED_MODULE_1__["isPline"])(ent_type)) {
            return [];
        }
        else if (Object(_id__WEBPACK_IMPORTED_MODULE_1__["isPgon"])(ent_type)) {
            return [this.navPgonToFace(index)];
        }
        else if (Object(_id__WEBPACK_IMPORTED_MODULE_1__["isColl"])(ent_type)) {
            var pgons_i = this.navCollToPgon(index);
            return pgons_i.map(function (pgon_i) { return _this.navPgonToFace(pgon_i); });
        }
        throw new Error('Bad navigation in geometry data structure: ' + ent_type + index);
    };
    /**
     * Navigate from any level to the wires
     * @param ent_type
     * @param index
     */
    GIGeomQuery.prototype.navAnyToWire = function (ent_type, index) {
        var _this = this;
        if (Object(_id__WEBPACK_IMPORTED_MODULE_1__["isPosi"])(ent_type)) {
            var verts_i = this.navPosiToVert(index);
            return [].concat.apply([], verts_i.map(function (vert_i) { return _this.navAnyToWire(_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].VERT, vert_i); }));
        }
        else if (Object(_id__WEBPACK_IMPORTED_MODULE_1__["isVert"])(ent_type)) {
            var edges_i = this.navVertToEdge(index);
            return [].concat.apply([], edges_i.map(function (edge_i) { return _this.navEdgeToWire(edge_i); }));
        }
        else if (Object(_id__WEBPACK_IMPORTED_MODULE_1__["isTri"])(ent_type)) {
            return [];
        }
        else if (Object(_id__WEBPACK_IMPORTED_MODULE_1__["isEdge"])(ent_type)) {
            return [this.navEdgeToWire(index)];
        }
        else if (Object(_id__WEBPACK_IMPORTED_MODULE_1__["isWire"])(ent_type)) { // target
            return [index];
        }
        else if (Object(_id__WEBPACK_IMPORTED_MODULE_1__["isFace"])(ent_type)) {
            return this.navFaceToWire(index);
        }
        else if (Object(_id__WEBPACK_IMPORTED_MODULE_1__["isPoint"])(ent_type)) {
            return [];
        }
        else if (Object(_id__WEBPACK_IMPORTED_MODULE_1__["isPline"])(ent_type)) {
            return [this.navPlineToWire(index)];
        }
        else if (Object(_id__WEBPACK_IMPORTED_MODULE_1__["isPgon"])(ent_type)) {
            var face_i = this.navPgonToFace(index);
            return this.navFaceToWire(face_i);
        }
        else if (Object(_id__WEBPACK_IMPORTED_MODULE_1__["isColl"])(ent_type)) {
            var all_wires_i = [];
            var plines_i = this.navCollToPline(index);
            for (var _i = 0, plines_i_1 = plines_i; _i < plines_i_1.length; _i++) {
                var pline_i = plines_i_1[_i];
                var wire_i = this.navPlineToWire(index);
                all_wires_i.push(wire_i);
            }
            var pgons_i = this.navCollToPgon(index);
            for (var _a = 0, pgons_i_1 = pgons_i; _a < pgons_i_1.length; _a++) {
                var pgon_i = pgons_i_1[_a];
                var wires_i = this.navAnyToWire(_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].PGON, pgon_i);
                for (var _b = 0, wires_i_1 = wires_i; _b < wires_i_1.length; _b++) {
                    var wire_i = wires_i_1[_b];
                    all_wires_i.push(wire_i);
                }
            }
            return all_wires_i;
        }
        throw new Error('Bad navigation in geometry data structure: ' + ent_type + index);
    };
    /**
     * Navigate from any level to the edges
     * @param ent_type
     * @param index
     */
    GIGeomQuery.prototype.navAnyToEdge = function (ent_type, index) {
        var _this = this;
        if (Object(_id__WEBPACK_IMPORTED_MODULE_1__["isPosi"])(ent_type)) {
            var verts_i = this.navPosiToVert(index);
            return [].concat.apply([], verts_i.map(function (vert_i) { return _this.navVertToEdge(vert_i); }));
        }
        else if (Object(_id__WEBPACK_IMPORTED_MODULE_1__["isVert"])(ent_type)) {
            return this.navVertToEdge(index);
        }
        else if (Object(_id__WEBPACK_IMPORTED_MODULE_1__["isTri"])(ent_type)) {
            return [];
        }
        else if (Object(_id__WEBPACK_IMPORTED_MODULE_1__["isEdge"])(ent_type)) {
            return [index];
        }
        else if (Object(_id__WEBPACK_IMPORTED_MODULE_1__["isWire"])(ent_type)) {
            return this.navWireToEdge(index);
        }
        else if (Object(_id__WEBPACK_IMPORTED_MODULE_1__["isFace"])(ent_type)) {
            var wires_i = this.navFaceToWire(index);
            return [].concat.apply([], wires_i.map(function (wire_i) { return _this.navWireToEdge(wire_i); }));
        }
        else if (Object(_id__WEBPACK_IMPORTED_MODULE_1__["isPoint"])(ent_type)) {
            return [];
        }
        else if (Object(_id__WEBPACK_IMPORTED_MODULE_1__["isPline"])(ent_type)) {
            var wire_i = this.navPlineToWire(index);
            return this.navAnyToEdge(_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].WIRE, wire_i);
        }
        else if (Object(_id__WEBPACK_IMPORTED_MODULE_1__["isPgon"])(ent_type)) {
            var face_i = this.navPgonToFace(index);
            return this.navAnyToEdge(_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].FACE, face_i);
        }
        else if (Object(_id__WEBPACK_IMPORTED_MODULE_1__["isColl"])(ent_type)) {
            var all_edges_i = [];
            var plines_i = this.navCollToPline(index);
            for (var _i = 0, plines_i_2 = plines_i; _i < plines_i_2.length; _i++) {
                var pline_i = plines_i_2[_i];
                var edges_i = this.navAnyToVert(_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].PLINE, pline_i);
                for (var _a = 0, edges_i_2 = edges_i; _a < edges_i_2.length; _a++) {
                    var edge_i = edges_i_2[_a];
                    all_edges_i.push(edge_i);
                }
            }
            var pgons_i = this.navCollToPgon(index);
            for (var _b = 0, pgons_i_2 = pgons_i; _b < pgons_i_2.length; _b++) {
                var pgon_i = pgons_i_2[_b];
                var edges_i = this.navAnyToVert(_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].PGON, pgon_i);
                for (var _c = 0, edges_i_3 = edges_i; _c < edges_i_3.length; _c++) {
                    var edge_i = edges_i_3[_c];
                    all_edges_i.push(edge_i);
                }
            }
            return all_edges_i;
        }
        throw new Error('Bad navigation in geometry data structure: ' + ent_type + index);
    };
    /**
     * Navigate from any level to the vertices
     * @param ent_type
     * @param index
     */
    GIGeomQuery.prototype.navAnyToVert = function (ent_type, index) {
        if (Object(_id__WEBPACK_IMPORTED_MODULE_1__["isPosi"])(ent_type)) {
            return this.navPosiToVert(index);
        }
        else if (Object(_id__WEBPACK_IMPORTED_MODULE_1__["isVert"])(ent_type)) {
            return [index];
        }
        else if (Object(_id__WEBPACK_IMPORTED_MODULE_1__["isTri"])(ent_type)) {
            return this.navTriToVert(index);
        }
        else if (Object(_id__WEBPACK_IMPORTED_MODULE_1__["isEdge"])(ent_type)) {
            return this.navEdgeToVert(index);
        }
        else if (Object(_id__WEBPACK_IMPORTED_MODULE_1__["isWire"])(ent_type)) {
            return this.getWireVerts(index); // avoids duplicate verts
        }
        else if (Object(_id__WEBPACK_IMPORTED_MODULE_1__["isFace"])(ent_type)) {
            var wires_i = this.navFaceToWire(index);
            var verts_i = [];
            for (var _i = 0, wires_i_2 = wires_i; _i < wires_i_2.length; _i++) {
                var wire_i = wires_i_2[_i];
                var wire_verts_i = this.getWireVerts(wire_i); // avoids duplicate verts
                for (var _a = 0, wire_verts_i_1 = wire_verts_i; _a < wire_verts_i_1.length; _a++) {
                    var vert_i = wire_verts_i_1[_a];
                    verts_i.push(vert_i);
                }
            }
            return verts_i;
        }
        else if (Object(_id__WEBPACK_IMPORTED_MODULE_1__["isPoint"])(ent_type)) {
            return [this.navPointToVert(index)];
        }
        else if (Object(_id__WEBPACK_IMPORTED_MODULE_1__["isPline"])(ent_type)) {
            var wire_i = this.navPlineToWire(index);
            return this.navAnyToVert(_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].WIRE, wire_i);
        }
        else if (Object(_id__WEBPACK_IMPORTED_MODULE_1__["isPgon"])(ent_type)) {
            var face_i = this.navPgonToFace(index);
            return this.navAnyToVert(_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].FACE, face_i);
        }
        else if (Object(_id__WEBPACK_IMPORTED_MODULE_1__["isColl"])(ent_type)) {
            var all_verts_i = [];
            var points_i = this.navCollToPoint(index);
            for (var _b = 0, points_i_1 = points_i; _b < points_i_1.length; _b++) {
                var point_i = points_i_1[_b];
                var vert_i = this.navPointToVert(point_i);
                all_verts_i.push(vert_i);
            }
            var plines_i = this.navCollToPline(index);
            for (var _c = 0, plines_i_3 = plines_i; _c < plines_i_3.length; _c++) {
                var pline_i = plines_i_3[_c];
                var verts_i = this.navAnyToVert(_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].PLINE, pline_i);
                for (var _d = 0, verts_i_1 = verts_i; _d < verts_i_1.length; _d++) {
                    var vert_i = verts_i_1[_d];
                    all_verts_i.push(vert_i);
                }
            }
            var pgons_i = this.navCollToPgon(index);
            for (var _e = 0, pgons_i_3 = pgons_i; _e < pgons_i_3.length; _e++) {
                var pgon_i = pgons_i_3[_e];
                var verts_i = this.navAnyToVert(_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].PGON, pgon_i);
                for (var _f = 0, verts_i_2 = verts_i; _f < verts_i_2.length; _f++) {
                    var vert_i = verts_i_2[_f];
                    all_verts_i.push(vert_i);
                }
            }
            return all_verts_i;
        }
        throw new Error('Bad navigation in geometry data structure: ' + ent_type + index);
    };
    /**
     * Navigate from any level to the triangles
     * @param ent_type
     * @param index
     */
    GIGeomQuery.prototype.navAnyToTri = function (ent_type, index) {
        var _this = this;
        if (Object(_id__WEBPACK_IMPORTED_MODULE_1__["isPosi"])(ent_type)) {
            var verts_i = this.navPosiToVert(index);
            return [].concat.apply([], verts_i.map(function (vert_i) { return _this.navVertToTri(vert_i); }));
        }
        else if (Object(_id__WEBPACK_IMPORTED_MODULE_1__["isVert"])(ent_type)) {
            return this.navVertToTri(index);
        }
        else if (Object(_id__WEBPACK_IMPORTED_MODULE_1__["isTri"])(ent_type)) {
            return [index];
        }
        else if (Object(_id__WEBPACK_IMPORTED_MODULE_1__["isEdge"])(ent_type)) {
            return [];
        }
        else if (Object(_id__WEBPACK_IMPORTED_MODULE_1__["isWire"])(ent_type)) {
            return [];
        }
        else if (Object(_id__WEBPACK_IMPORTED_MODULE_1__["isFace"])(ent_type)) {
            return this.navFaceToTri(index);
        }
        else if (Object(_id__WEBPACK_IMPORTED_MODULE_1__["isPoint"])(ent_type)) {
            return [];
        }
        else if (Object(_id__WEBPACK_IMPORTED_MODULE_1__["isPline"])(ent_type)) {
            return [];
        }
        else if (Object(_id__WEBPACK_IMPORTED_MODULE_1__["isPgon"])(ent_type)) {
            var face_i = this.navPgonToFace(index);
            return this.navFaceToTri(face_i);
        }
        else if (Object(_id__WEBPACK_IMPORTED_MODULE_1__["isColl"])(ent_type)) {
            var all_tris_i = [];
            var pgons_i = this.navCollToPgon(index);
            for (var _i = 0, pgons_i_4 = pgons_i; _i < pgons_i_4.length; _i++) {
                var pgon_i = pgons_i_4[_i];
                var tris_i = this.navAnyToTri(_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].PGON, pgon_i);
                for (var _a = 0, tris_i_2 = tris_i; _a < tris_i_2.length; _a++) {
                    var tri_i = tris_i_2[_a];
                    all_tris_i.push(tri_i);
                }
            }
            return all_tris_i;
        }
        throw new Error('Bad navigation in geometry data structure: ' + ent_type + index);
    };
    /**
     * Navigate from any level to the positions
     * @param ent_type
     * @param index
     */
    GIGeomQuery.prototype.navAnyToPosi = function (ent_type, index) {
        var _this = this;
        if (Object(_id__WEBPACK_IMPORTED_MODULE_1__["isPosi"])(ent_type)) {
            return [index];
        }
        var verts_i = this.navAnyToVert(ent_type, index);
        var posis_i = verts_i.map(function (vert_i) { return _this.navVertToPosi(vert_i); });
        return Array.from(new Set(posis_i)); // remove duplicates
    };
    // ============================================================================
    // Navigate from any to any, general method
    // ============================================================================
    /**
     * Navigate from any level down to the positions
     * @param index
     */
    GIGeomQuery.prototype.navAnyToAny = function (from_ets, to_ets, index) {
        // same level
        if (from_ets === to_ets) {
            return [index];
        }
        // from -> to
        switch (to_ets) {
            case _common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].POSI:
                return this.navAnyToPosi(from_ets, index);
            case _common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].VERT:
                return this.navAnyToVert(from_ets, index);
            case _common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].EDGE:
                return this.navAnyToEdge(from_ets, index);
            case _common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].WIRE:
                return this.navAnyToWire(from_ets, index);
            case _common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].FACE:
                return this.navAnyToFace(from_ets, index);
            case _common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].POINT:
                return this.navAnyToPoint(from_ets, index);
            case _common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].PLINE:
                return this.navAnyToPline(from_ets, index);
            case _common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].PGON:
                return this.navAnyToPgon(from_ets, index);
            case _common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].COLL:
                return this.navAnyToColl(from_ets, index);
            default:
                throw new Error('Bad navigation in geometry data structure: ' + to_ets + index);
        }
    };
    // ============================================================================
    // Other methods
    // ============================================================================
    /**
     * Get the welded neighbour vertices of a set of vertices.
     * @param ent_type
     * @param index
     */
    GIGeomQuery.prototype.neighbours = function (from_ets, to_ets, index) {
        var verts_i = this.navAnyToVert(from_ets, index);
        var posis_i = this.navAnyToPosi(from_ets, index);
        var neighbour_ents_i = new Set();
        for (var _i = 0, posis_i_2 = posis_i; _i < posis_i_2.length; _i++) {
            var posi_i = posis_i_2[_i];
            var found_verts_i = this.navPosiToVert(posi_i);
            for (var _a = 0, found_verts_i_1 = found_verts_i; _a < found_verts_i_1.length; _a++) {
                var found_vert_i = found_verts_i_1[_a];
                if (verts_i.indexOf(found_vert_i) === -1) {
                    var found_ents_i = this.navAnyToAny(_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].VERT, to_ets, found_vert_i);
                    found_ents_i.forEach(function (found_ent_i) { return neighbour_ents_i.add(found_ent_i); });
                }
            }
        }
        return Array.from(neighbour_ents_i);
    };
    return GIGeomQuery;
}());



/***/ }),

/***/ "./src/assets/libs/geo-info/GIGeomThreejs.ts":
/*!***************************************************!*\
  !*** ./src/assets/libs/geo-info/GIGeomThreejs.ts ***!
  \***************************************************/
/*! exports provided: GIGeomThreejs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GIGeomThreejs", function() { return GIGeomThreejs; });
/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! three */ "./node_modules/three/build/three.module.js");

/**
 * Class for geometry.
 */
var GIGeomThreejs = /** @class */ (function () {
    /**
     * Creates an object to store the geometry data.
     * @param geom The GIGeom obect
     * @param geom_arrays The geometry arrays
     */
    function GIGeomThreejs(geom, geom_arrays) {
        this._geom = geom;
        this._geom_arrays = geom_arrays;
    }
    // ============================================================================
    // ThreeJS
    // Get arrays for threejs, these retrun arrays of indexes to positions
    // For a method to get the array of positions, see the attrib class
    // getSeqCoords()
    // ============================================================================
    /**
     * Returns a flat list of all vertices.
     * The indices in the list point to the sequential coordinates.
     */
    GIGeomThreejs.prototype.get3jsVerts = function () {
        return this._geom_arrays.dn_verts_posis;
    };
    /**
     * Returns that data required for threejs triangles.
     * 0) the vertices, as a flat array
     * 1) the select map, that maps from the threejs tri indices to the gi model tri indices
     * 2) the materials array, which is an array of objects
     * 3) the material groups array, which is an array of [ start, count, mat_index ]
     */
    GIGeomThreejs.prototype.get3jsTris = function (vertex_map) {
        // arrays to store threejs data
        var tri_data_arrs = []; // tri_mat_indices, new_tri_verts_i, tri_i
        var mat_f = {
            specular: 0x000000,
            emissive: 0x000000,
            shininess: 0,
            side: three__WEBPACK_IMPORTED_MODULE_0__["FrontSide"]
        };
        var mat_b = {
            specular: 0x000000,
            emissive: 0x000000,
            shininess: 0,
            side: three__WEBPACK_IMPORTED_MODULE_0__["BackSide"]
        };
        var materials = [this._getMaterial(mat_f), this._getMaterial(mat_b)];
        var material_names = ['default_front', 'default_back'];
        // get the material attribute from polygons
        var material_attrib = this._geom.model.attribs._attribs_maps.pg.get('material');
        // loop through all tris
        for (var tri_i = 0; tri_i < this._geom_arrays.dn_tris_verts.length; tri_i++) {
            var tri_verts_i = this._geom_arrays.dn_tris_verts[tri_i];
            if (tri_verts_i !== null) {
                // get the verts, face and the polygon for this tri
                var new_tri_verts_i = tri_verts_i.map(function (v) { return vertex_map.get(v); });
                // get the materials for this tri from the polygon
                var tri_face_i = this._geom_arrays.up_tris_faces[tri_i];
                var tri_pgon_i = this._geom_arrays.up_faces_pgons[tri_face_i];
                var tri_mat_indices = [];
                if (material_attrib !== undefined) {
                    var mat_attrib_val = material_attrib.getEntVal(tri_pgon_i);
                    var pgon_mat_names = (Array.isArray(mat_attrib_val)) ? mat_attrib_val : [mat_attrib_val];
                    for (var _i = 0, pgon_mat_names_1 = pgon_mat_names; _i < pgon_mat_names_1.length; _i++) {
                        var pgon_mat_name = pgon_mat_names_1[_i];
                        var pgon_mat_index = material_names.indexOf(pgon_mat_name);
                        if (pgon_mat_index === -1) {
                            var mat = this._geom.model.attribs._attribs_maps.mo.get(pgon_mat_name);
                            if (mat !== undefined) {
                                pgon_mat_index = materials.length;
                                material_names.push(pgon_mat_name);
                                var mat_settings_obj = JSON.parse(mat);
                                materials.push(this._getMaterial(mat_settings_obj));
                            }
                        }
                        if (pgon_mat_index !== -1) {
                            tri_mat_indices.push(pgon_mat_index);
                        }
                    }
                }
                if (tri_mat_indices.length === 0) {
                    tri_mat_indices.push(0); // default material front
                    tri_mat_indices.push(1); // default material back
                }
                // add the data to the data_array
                tri_data_arrs.push([tri_mat_indices, new_tri_verts_i, tri_i]);
            }
        }
        // sort that data_array, so that we get triangls sorted according to their materials
        // for each entry in the data_array, the first item is the material indices, so that they are sorted correctly
        tri_data_arrs.sort();
        // loop through the sorted array and create the tris and groups data for threejs
        var tris_verts_i = [];
        var tri_select_map = new Map();
        var mat_groups_map = new Map(); // mat_index -> [start, end][]
        for (var _a = 0, tri_data_arrs_1 = tri_data_arrs; _a < tri_data_arrs_1.length; _a++) {
            var tri_data_arr = tri_data_arrs_1[_a];
            // save the tri data
            var tjs_i = tris_verts_i.push(tri_data_arr[1]) - 1;
            tri_select_map.set(tjs_i, tri_data_arr[2]);
            // go through all materials for this tri and add save the mat groups data
            for (var _b = 0, _c = tri_data_arr[0]; _b < _c.length; _b++) {
                var mat_index = _c[_b];
                var start_end_arrs = mat_groups_map.get(mat_index);
                if (start_end_arrs === undefined) {
                    start_end_arrs = [[tjs_i, tjs_i]];
                    mat_groups_map.set(mat_index, start_end_arrs);
                }
                else {
                    var start_end = start_end_arrs[start_end_arrs.length - 1];
                    if (tjs_i === start_end[1] + 1) {
                        start_end[1] = tjs_i;
                    }
                    else {
                        start_end_arrs.push([tjs_i, tjs_i]);
                    }
                }
            }
        }
        // convert the mat_groups_map into the format required for threejs
        // for each material group, we need an array [start, count, mat_index]
        var material_groups = []; // [start, count, mat_index][]
        mat_groups_map.forEach(function (start_end_arrs, mat_index) {
            for (var _i = 0, start_end_arrs_1 = start_end_arrs; _i < start_end_arrs_1.length; _i++) {
                var start_end = start_end_arrs_1[_i];
                var start = start_end[0];
                var count = start_end[1] - start_end[0] + 1;
                material_groups.push([start * 3, count * 3, mat_index]);
            }
        });
        // convert the verts list to a flat array
        // tslint:disable-next-line:no-unused-expression
        // @ts-ignore
        var tris_verts_i_flat = tris_verts_i.flat(1);
        // return the data
        // there are four sets of data that are returns
        return [
            tris_verts_i_flat,
            tri_select_map,
            materials,
            material_groups // 3) the material groups array, which is an array of [ start, count, mat_index ]
        ];
        // let gi_i = 0;
        // const l = this._geom_arrays.dn_tris_verts.length;
        // for (; gi_i < l; gi_i++) {
        //     const tri_verts_i: TTri = this._geom_arrays.dn_tris_verts[gi_i];
        //     if (tri_verts_i !== null) {
        //         const new_tri_verts_i: TTri = tri_verts_i.map(v => vertex_map.get(v)) as TTri;
        //         const tjs_i = tris_verts_i_filt.push(new_tri_verts_i) - 1;
        //         tri_select_map.set(tjs_i, gi_i);
        //     }
        // }
        // @ts-ignore
        // return [tris_verts_i.flat(1), tri_select_map];
        // return this._geom_arrays.dn_tris_verts.flat(1);
        // return [].concat(...this._geom_arrays.dn_tris_verts);
    };
    /**
     * Returns a flat list of the sequence of verices for all the edges.
     * This list will be assumed to be in pairs.
     * The indices in the list point to the vertices.
     */
    GIGeomThreejs.prototype.get3jsEdges = function (vertex_map) {
        var edges_verts_i_filt = [];
        var edge_select_map = new Map();
        var gi_i = 0;
        var l = this._geom_arrays.dn_edges_verts.length;
        for (; gi_i < l; gi_i++) {
            var edge_verts_i = this._geom_arrays.dn_edges_verts[gi_i];
            if (edge_verts_i !== null) {
                var new_edge_verts_i = edge_verts_i.map(function (e) { return vertex_map.get(e); });
                var tjs_i = edges_verts_i_filt.push(new_edge_verts_i) - 1;
                edge_select_map.set(tjs_i, gi_i);
            }
        }
        // @ts-ignore
        return [edges_verts_i_filt.flat(1), edge_select_map];
        // @ts-ignore
        // return this._geom_arrays.dn_edges_verts.flat(1);
        // return [].concat(...this._geom_arrays.dn_edges_verts);
    };
    /**
     * Returns a flat list of the sequence of verices for all the points.
     * The indices in the list point to the vertices.
     */
    GIGeomThreejs.prototype.get3jsPoints = function (vertex_map) {
        var points_verts_i_filt = [];
        var point_select_map = new Map();
        var gi_i = 0;
        var l = this._geom_arrays.dn_points_verts.length;
        for (; gi_i < l; gi_i++) {
            var point_verts_i = this._geom_arrays.dn_points_verts[gi_i];
            if (point_verts_i !== null) {
                var new_point_verts_i = vertex_map.get(point_verts_i);
                var tjs_i = points_verts_i_filt.push(new_point_verts_i) - 1;
                point_select_map.set(tjs_i, gi_i);
            }
        }
        return [points_verts_i_filt, point_select_map];
        // return this._geom_arrays.dn_points_verts;
    };
    /**
     * Create a threejs material
     * @param settings
     */
    GIGeomThreejs.prototype._getMaterial = function (settings) {
        var material = {
            type: 'MeshPhongMaterial',
            side: three__WEBPACK_IMPORTED_MODULE_0__["DoubleSide"],
            vertexColors: three__WEBPACK_IMPORTED_MODULE_0__["VertexColors"]
        };
        if (settings) {
            for (var _i = 0, _a = Object.keys(settings); _i < _a.length; _i++) {
                var key = _a[_i];
                material[key] = settings[key];
            }
        }
        return material;
    };
    return GIGeomThreejs;
}());



/***/ }),

/***/ "./src/assets/libs/geo-info/GIModel.ts":
/*!*********************************************!*\
  !*** ./src/assets/libs/geo-info/GIModel.ts ***!
  \*********************************************/
/*! exports provided: GIModel */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GIModel", function() { return GIModel; });
/* harmony import */ var _GIGeom__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./GIGeom */ "./src/assets/libs/geo-info/GIGeom.ts");
/* harmony import */ var _GIAttribs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./GIAttribs */ "./src/assets/libs/geo-info/GIAttribs.ts");
/* harmony import */ var _GIModelThreejs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./GIModelThreejs */ "./src/assets/libs/geo-info/GIModelThreejs.ts");



/**
 * Geo-info model class.
 */
var GIModel = /** @class */ (function () {
    /**
     * Creates a model.
     * @param model_data The JSON data
     */
    function GIModel(model_data) {
        this.geom = new _GIGeom__WEBPACK_IMPORTED_MODULE_0__["GIGeom"](this);
        this.attribs = new _GIAttribs__WEBPACK_IMPORTED_MODULE_1__["GIAttribs"](this);
        this.threejs = new _GIModelThreejs__WEBPACK_IMPORTED_MODULE_2__["GIModelThreejs"](this);
        if (model_data) {
            this.addData(model_data);
        }
    }
    /**
     * Copys the data from a second model into this model.
     * The existing data in this model is not deleted.
     * @param model_data The GI model.
     */
    GIModel.prototype.merge = function (model) {
        this.attribs.io.merge(model.attribs._attribs_maps); // warning: must be before this.geom.add.addData()
        this.geom.io.merge(model.geom._geom_arrays);
    };
    /**
     * Sets the data in this model from JSON data.
     * Any existing data in the model is deleted.
     * @param model_data The JSON data.
     */
    GIModel.prototype.setData = function (model_data) {
        this.attribs.io.setData(model_data.attributes); // warning: must be before this.geom.add.addData()
        var new_ents_i = this.geom.io.setData(model_data.geometry);
        return new_ents_i;
    };
    /**
     * Returns the JSON data for this model.
     */
    GIModel.prototype.getData = function () {
        return {
            geometry: this.geom.io.getData(),
            attributes: this.attribs.io.getData()
        };
    };
    /**
     * Check model for internal consistency
     */
    GIModel.prototype.check = function () {
        return this.geom.check();
    };
    return GIModel;
}());



/***/ }),

/***/ "./src/assets/libs/geo-info/GIModelThreejs.ts":
/*!****************************************************!*\
  !*** ./src/assets/libs/geo-info/GIModelThreejs.ts ***!
  \****************************************************/
/*! exports provided: GIModelThreejs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GIModelThreejs", function() { return GIModelThreejs; });
/* harmony import */ var _common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./common */ "./src/assets/libs/geo-info/common.ts");

/**
 * Geo-info model class.
 */
var GIModelThreejs = /** @class */ (function () {
    /**
      * Creates an object to store the attribute data.
      * @param model The JSON data
      */
    function GIModelThreejs(model) {
        this._model = model;
    }
    /**
     * Generate a default color if none exists.
     */
    GIModelThreejs.prototype._generateColors = function () {
        var colors = [];
        var numEnts = this._model.geom.query.numEnts(_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].VERT, false);
        for (var index = 0; index < numEnts; index++) {
            colors.push(1, 1, 1);
        }
        return colors;
    };
    // /**
    //  * Generate default normals if non exist.
    //  */
    // private _generateNormals(): number[] {
    //     const normals = [];
    //     const numEnts = this.geom.query.numEnts(EEntType.VERT, false);
    //     for (let index = 0; index < numEnts; index++) {
    //         normals.push(0, 0, 0);
    //     }
    //     return normals;
    // }
    /**
     * Returns arrays for visualization in Threejs.
     */
    GIModelThreejs.prototype.get3jsData = function () {
        // get the attribs at the vertex level
        var _a = this._model.attribs.threejs.get3jsSeqPosisCoords(), posis_xyz = _a[0], posis_map = _a[1];
        var _b = this._model.attribs.threejs.get3jsSeqVertsCoords(), vertex_xyz = _b[0], vertex_map = _b[1];
        var normals_values = this._model.attribs.threejs.get3jsSeqVertsAttrib(_common__WEBPACK_IMPORTED_MODULE_0__["EAttribNames"].NORMAL);
        var colors_values = this._model.attribs.threejs.get3jsSeqVertsAttrib(_common__WEBPACK_IMPORTED_MODULE_0__["EAttribNames"].COLOUR);
        // add normals and colours
        // if (!normals_values) {
        //     normals_values = this._generateNormals();
        // }
        if (!colors_values) {
            colors_values = this._generateColors();
        }
        // get posi indices
        var posis_indices = Array.from(posis_map.values());
        // get the indices of the vertices for edges, points and triangles
        var _c = this._model.geom.threejs.get3jsTris(vertex_map), tris_verts_i = _c[0], triangle_select_map = _c[1], materials = _c[2], material_groups = _c[3];
        var _d = this._model.geom.threejs.get3jsEdges(vertex_map), edges_verts_i = _d[0], edge_select_map = _d[1];
        var _e = this._model.geom.threejs.get3jsPoints(vertex_map), points_verts_i = _e[0], point_select_map = _e[1];
        // return an object containing all the data
        var data = {
            posis_xyz: posis_xyz,
            posis_indices: posis_indices,
            posis_map: posis_map,
            vertex_xyz: vertex_xyz,
            vertex_map: vertex_map,
            normals: normals_values,
            colors: colors_values,
            point_indices: points_verts_i,
            point_select_map: point_select_map,
            edge_indices: edges_verts_i,
            edge_select_map: edge_select_map,
            triangle_indices: tris_verts_i,
            triangle_select_map: triangle_select_map,
            materials: materials,
            material_groups: material_groups
        };
        // console.log(data);
        return data;
    };
    return GIModelThreejs;
}());



/***/ }),

/***/ "./src/assets/libs/geo-info/common.ts":
/*!********************************************!*\
  !*** ./src/assets/libs/geo-info/common.ts ***!
  \********************************************/
/*! exports provided: XYPLANE, YZPLANE, ZXPLANE, YXPLANE, ZYPLANE, XZPLANE, EEntType, EEntTypeStr, EEntStrToGeomArray, EAttribNames, EQueryOperatorTypes, ESort, EAttribPromote, EAttribDataTypeStrs, RE_SPACES */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "XYPLANE", function() { return XYPLANE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "YZPLANE", function() { return YZPLANE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ZXPLANE", function() { return ZXPLANE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "YXPLANE", function() { return YXPLANE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ZYPLANE", function() { return ZYPLANE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "XZPLANE", function() { return XZPLANE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EEntType", function() { return EEntType; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EEntTypeStr", function() { return EEntTypeStr; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EEntStrToGeomArray", function() { return EEntStrToGeomArray; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EAttribNames", function() { return EAttribNames; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EQueryOperatorTypes", function() { return EQueryOperatorTypes; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ESort", function() { return ESort; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EAttribPromote", function() { return EAttribPromote; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EAttribDataTypeStrs", function() { return EAttribDataTypeStrs; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RE_SPACES", function() { return RE_SPACES; });
// some constants
var XYPLANE = [[0, 0, 0], [1, 0, 0], [0, 1, 0]];
var YZPLANE = [[0, 0, 0], [0, 1, 0], [0, 0, 1]];
var ZXPLANE = [[0, 0, 0], [0, 0, 1], [1, 0, 0]];
var YXPLANE = [[0, 0, 0], [0, 1, 0], [1, 0, 0]];
var ZYPLANE = [[0, 0, 0], [0, 0, 1], [0, 1, 0]];
var XZPLANE = [[0, 0, 0], [1, 0, 0], [0, 0, 1]];
// Types of entities
var EEntType;
(function (EEntType) {
    EEntType[EEntType["POSI"] = 0] = "POSI";
    EEntType[EEntType["TRI"] = 1] = "TRI";
    EEntType[EEntType["VERT"] = 2] = "VERT";
    EEntType[EEntType["EDGE"] = 3] = "EDGE";
    EEntType[EEntType["WIRE"] = 4] = "WIRE";
    EEntType[EEntType["FACE"] = 5] = "FACE";
    EEntType[EEntType["POINT"] = 6] = "POINT";
    EEntType[EEntType["PLINE"] = 7] = "PLINE";
    EEntType[EEntType["PGON"] = 8] = "PGON";
    EEntType[EEntType["COLL"] = 9] = "COLL";
    EEntType[EEntType["MOD"] = 10] = "MOD";
})(EEntType || (EEntType = {}));
// Types of entities
var EEntTypeStr;
(function (EEntTypeStr) {
    EEntTypeStr[EEntTypeStr["ps"] = 0] = "ps";
    EEntTypeStr[EEntTypeStr["_t"] = 1] = "_t";
    EEntTypeStr[EEntTypeStr["_v"] = 2] = "_v";
    EEntTypeStr[EEntTypeStr["_e"] = 3] = "_e";
    EEntTypeStr[EEntTypeStr["_w"] = 4] = "_w";
    EEntTypeStr[EEntTypeStr["_f"] = 5] = "_f";
    EEntTypeStr[EEntTypeStr["pt"] = 6] = "pt";
    EEntTypeStr[EEntTypeStr["pl"] = 7] = "pl";
    EEntTypeStr[EEntTypeStr["pg"] = 8] = "pg";
    EEntTypeStr[EEntTypeStr["co"] = 9] = "co";
    EEntTypeStr[EEntTypeStr["mo"] = 10] = "mo";
})(EEntTypeStr || (EEntTypeStr = {}));
var EEntStrToGeomArray;
(function (EEntStrToGeomArray) {
    EEntStrToGeomArray[EEntStrToGeomArray["posis"] = 0] = "posis";
    EEntStrToGeomArray[EEntStrToGeomArray["dn_tris_verts"] = 1] = "dn_tris_verts";
    EEntStrToGeomArray[EEntStrToGeomArray["dn_verts_posis"] = 2] = "dn_verts_posis";
    EEntStrToGeomArray[EEntStrToGeomArray["dn_edges_verts"] = 3] = "dn_edges_verts";
    EEntStrToGeomArray[EEntStrToGeomArray["dn_wires_edges"] = 4] = "dn_wires_edges";
    EEntStrToGeomArray[EEntStrToGeomArray["dn_faces_wirestris"] = 5] = "dn_faces_wirestris";
    EEntStrToGeomArray[EEntStrToGeomArray["dn_points_verts"] = 6] = "dn_points_verts";
    EEntStrToGeomArray[EEntStrToGeomArray["dn_plines_wires"] = 7] = "dn_plines_wires";
    EEntStrToGeomArray[EEntStrToGeomArray["dn_pgons_faces"] = 8] = "dn_pgons_faces";
    EEntStrToGeomArray[EEntStrToGeomArray["dn_colls_objs"] = 9] = "dn_colls_objs";
})(EEntStrToGeomArray || (EEntStrToGeomArray = {}));
// Names of attributes
var EAttribNames;
(function (EAttribNames) {
    EAttribNames["COORDS"] = "xyz";
    EAttribNames["NORMAL"] = "normal";
    EAttribNames["COLOUR"] = "rgb";
    EAttribNames["TEXTURE"] = "uv";
    EAttribNames["NAME"] = "name";
})(EAttribNames || (EAttribNames = {}));
/**
 * The types of operators that can be used in a query.
 */
var EQueryOperatorTypes;
(function (EQueryOperatorTypes) {
    EQueryOperatorTypes["IS_EQUAL"] = "==";
    EQueryOperatorTypes["IS_NOT_EQUAL"] = "!=";
    EQueryOperatorTypes["IS_GREATER_OR_EQUAL"] = ">=";
    EQueryOperatorTypes["IS_LESS_OR_EQUAL"] = "<=";
    EQueryOperatorTypes["IS_GREATER"] = ">";
    EQueryOperatorTypes["IS_LESS"] = "<";
    EQueryOperatorTypes["EQUAL"] = "=";
})(EQueryOperatorTypes || (EQueryOperatorTypes = {}));
var ESort;
(function (ESort) {
    ESort["DESCENDING"] = "descending";
    ESort["ASCENDING"] = "ascending";
})(ESort || (ESort = {}));
var EAttribPromote;
(function (EAttribPromote) {
    EAttribPromote[EAttribPromote["AVERAGE"] = 0] = "AVERAGE";
    EAttribPromote[EAttribPromote["MEDIAN"] = 1] = "MEDIAN";
    EAttribPromote[EAttribPromote["SUM"] = 2] = "SUM";
    EAttribPromote[EAttribPromote["MIN"] = 3] = "MIN";
    EAttribPromote[EAttribPromote["MAX"] = 4] = "MAX";
    EAttribPromote[EAttribPromote["FIRST"] = 5] = "FIRST";
    EAttribPromote[EAttribPromote["LAST"] = 6] = "LAST";
})(EAttribPromote || (EAttribPromote = {}));
// ================================================================================================
// JSON DATA
// ================================================================================================
// enums
var EAttribDataTypeStrs;
(function (EAttribDataTypeStrs) {
    // INT = 'Int',
    EAttribDataTypeStrs["FLOAT"] = "Float";
    EAttribDataTypeStrs["STRING"] = "String";
})(EAttribDataTypeStrs || (EAttribDataTypeStrs = {}));
// interfaces for JSON data
var RE_SPACES = /\s+/g;


/***/ }),

/***/ "./src/assets/libs/geo-info/export.ts":
/*!********************************************!*\
  !*** ./src/assets/libs/geo-info/export.ts ***!
  \********************************************/
/*! exports provided: exportObj */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "exportObj", function() { return exportObj; });
/* harmony import */ var _common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./common */ "./src/assets/libs/geo-info/common.ts");

/**
 * Export to obj
 */
function exportObj(model) {
    var h_str = '# File generated by Mobius.\n';
    // the order of data is 1) vertex, 2) texture, 3) normal
    var v_str = '';
    var vt_str = '';
    var vn_str = '';
    var f_str = '';
    var l_str = '';
    // do we have color, texture, normal?
    var has_color_attrib = model.attribs.query.hasAttrib(_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].VERT, _common__WEBPACK_IMPORTED_MODULE_0__["EAttribNames"].COLOUR);
    var has_normal_attrib = model.attribs.query.hasAttrib(_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].VERT, _common__WEBPACK_IMPORTED_MODULE_0__["EAttribNames"].NORMAL);
    var has_texture_attrib = model.attribs.query.hasAttrib(_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].VERT, _common__WEBPACK_IMPORTED_MODULE_0__["EAttribNames"].TEXTURE);
    var posis_i = model.geom.query.getEnts(_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].POSI, false);
    var verts_i = model.geom.query.getEnts(_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].VERT, false);
    // positions
    if (has_color_attrib) {
        for (var _i = 0, verts_i_1 = verts_i; _i < verts_i_1.length; _i++) {
            var vert_i = verts_i_1[_i];
            var color = model.attribs.query.getAttribValue(_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].VERT, _common__WEBPACK_IMPORTED_MODULE_0__["EAttribNames"].COLOUR, vert_i);
            var coord = model.attribs.query.getVertCoords(vert_i);
            v_str += 'v ' + coord.map(function (v) { return v.toString(); }).join(' ') + color.map(function (c) { return c.toString(); }).join(' ') + '\n';
        }
    }
    else {
        for (var _a = 0, posis_i_1 = posis_i; _a < posis_i_1.length; _a++) {
            var posi_i = posis_i_1[_a];
            var coord = model.attribs.query.getPosiCoords(posi_i);
            v_str += 'v ' + coord.map(function (v) { return v.toString(); }).join(' ') + '\n';
        }
    }
    // textures, vt
    if (has_texture_attrib) {
        for (var _b = 0, verts_i_2 = verts_i; _b < verts_i_2.length; _b++) {
            var vert_i = verts_i_2[_b];
            var texture = model.attribs.query.getAttribValue(_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].VERT, _common__WEBPACK_IMPORTED_MODULE_0__["EAttribNames"].TEXTURE, vert_i);
            vt_str += 'v ' + texture.map(function (v) { return v.toString(); }).join(' ') + '\n';
        }
    }
    // normals, vn
    if (has_normal_attrib) {
        for (var _c = 0, verts_i_3 = verts_i; _c < verts_i_3.length; _c++) {
            var vert_i = verts_i_3[_c];
            var normal = model.attribs.query.getAttribValue(_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].VERT, _common__WEBPACK_IMPORTED_MODULE_0__["EAttribNames"].NORMAL, vert_i);
            vn_str += 'v ' + normal.map(function (v) { return v.toString(); }).join(' ') + '\n';
        }
    }
    // polygons, f
    var pgons_i = model.geom.query.getEnts(_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].PGON, false);
    for (var _d = 0, pgons_i_1 = pgons_i; _d < pgons_i_1.length; _d++) {
        var pgon_i = pgons_i_1[_d];
        var pgon_verts_i_outer = model.geom.query.navAnyToVert(_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].PGON, pgon_i);
        // const verts_i_outer = verts_i[0];
        // TODO what about holes
        if (has_texture_attrib) {
            // TODO
        }
        if (has_normal_attrib) {
            // TODO
        }
        if (has_color_attrib) {
            f_str += 'f ' + pgon_verts_i_outer.map(function (vert_i) { return (vert_i + 1).toString(); }).join(' ') + '\n';
        }
        else {
            f_str += 'f ' + pgon_verts_i_outer.map(function (vert_i) { return (model.geom.query.navVertToPosi(vert_i) + 1).toString(); }).join(' ') + '\n';
        }
    }
    // polylines, l
    var plines_i = model.geom.query.getEnts(_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].PLINE, false);
    for (var _e = 0, plines_i_1 = plines_i; _e < plines_i_1.length; _e++) {
        var pline_i = plines_i_1[_e];
        var pline_verts_i = model.geom.query.navAnyToVert(_common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].PLINE, pline_i);
        l_str += 'l ' + pline_verts_i.map(function (vert_i) { return (vert_i + 1).toString(); }).join(' ') + '\n';
    }
    // result
    return h_str + v_str + v_str + vt_str + vn_str + f_str + l_str;
}


/***/ }),

/***/ "./src/assets/libs/geo-info/id.ts":
/*!****************************************!*\
  !*** ./src/assets/libs/geo-info/id.ts ***!
  \****************************************/
/*! exports provided: getArrDepth, idsMakeFromIndicies, idsMake, idsBreak, idIndicies, isPosi, isVert, isTri, isEdge, isWire, isFace, isPoint, isPline, isPgon, isColl, isTopo, isObj, isDim0, isDim1, isDim2 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getArrDepth", function() { return getArrDepth; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "idsMakeFromIndicies", function() { return idsMakeFromIndicies; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "idsMake", function() { return idsMake; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "idsBreak", function() { return idsBreak; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "idIndicies", function() { return idIndicies; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isPosi", function() { return isPosi; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isVert", function() { return isVert; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isTri", function() { return isTri; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isEdge", function() { return isEdge; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isWire", function() { return isWire; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isFace", function() { return isFace; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isPoint", function() { return isPoint; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isPline", function() { return isPline; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isPgon", function() { return isPgon; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isColl", function() { return isColl; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isTopo", function() { return isTopo; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isObj", function() { return isObj; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isDim0", function() { return isDim0; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isDim1", function() { return isDim1; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isDim2", function() { return isDim2; });
/* harmony import */ var _common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./common */ "./src/assets/libs/geo-info/common.ts");

// ============================================================================
function getArrDepth(arr) {
    if (Array.isArray(arr)) {
        return 1 + getArrDepth(arr[0]);
    }
    return 0;
}
// ============================================================================
function idsMakeFromIndicies(ent_type, idxs) {
    var depth = getArrDepth(idxs);
    if (depth === 0) {
        var idx = idxs;
        return _common__WEBPACK_IMPORTED_MODULE_0__["EEntTypeStr"][ent_type] + idx;
    }
    else if (depth === 1) {
        var idxs_arr = idxs;
        if (idxs_arr.length === 0) {
            return [];
        } //  deal with empty array
        return idxs_arr.map(function (idx) { return idsMakeFromIndicies(ent_type, idx); });
    }
    else { // depth === 2
        var idxs_arrs = idxs;
        return idxs_arrs.map(function (idxs_arr) { return idsMakeFromIndicies(ent_type, idxs_arr); });
    }
}
function idsMake(ent_type_idxs) {
    var depth = getArrDepth(ent_type_idxs);
    if (depth === 1) {
        if (ent_type_idxs.length === 0) {
            return [];
        } //  deal with empty array
        var ent_type_idx = ent_type_idxs;
        return _common__WEBPACK_IMPORTED_MODULE_0__["EEntTypeStr"][ent_type_idx[0]] + ent_type_idx[1];
    }
    else if (depth === 2) {
        var ent_type_idxs_arr = ent_type_idxs;
        return ent_type_idxs_arr.map(function (ent_type_idx) { return idsMake(ent_type_idx); });
    }
    else { // depth === 3
        var ent_type_idxs_arrs = ent_type_idxs;
        return ent_type_idxs_arrs.map(function (ent_type_idxs_arr) { return idsMake(ent_type_idxs_arr); });
    }
}
function idsBreak(ids) {
    var depth = getArrDepth(ids);
    if (depth === 0) {
        var id = ids;
        if (typeof id !== 'string') {
            throw new Error('Value is not an entity ID.');
        }
        if (id.length < 3) {
            throw new Error('String is not an entity ID.');
        }
        var ent_type_str = id.slice(0, 2);
        var ent_type = _common__WEBPACK_IMPORTED_MODULE_0__["EEntTypeStr"][ent_type_str];
        if (ent_type === undefined) {
            throw new Error('String is not an entity ID.');
        }
        var index = Number(id.slice(2));
        return [ent_type, index];
    }
    else if (depth === 1) {
        var ids_arr = ids;
        return ids_arr.map(function (id) { return idsBreak(id); });
    }
    else { // depth === 2
        var ids_arr = ids;
        return ids_arr.map(function (id) { return idsBreak(id); });
    }
}
function idIndicies(ents_arr) {
    return ents_arr.map(function (ents) { return ents[1]; });
}
// ============================================================================
function isPosi(ent_type) {
    return ent_type === _common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].POSI;
}
function isVert(ent_type) {
    return ent_type === _common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].VERT;
}
function isTri(ent_type) {
    return ent_type === _common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].TRI;
}
function isEdge(ent_type) {
    return ent_type === _common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].EDGE;
}
function isWire(ent_type) {
    return ent_type === _common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].WIRE;
}
function isFace(ent_type) {
    return ent_type === _common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].FACE;
}
function isPoint(ent_type) {
    return ent_type === _common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].POINT;
}
function isPline(ent_type) {
    return ent_type === _common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].PLINE;
}
function isPgon(ent_type) {
    return ent_type === _common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].PGON;
}
function isColl(ent_type) {
    return ent_type === _common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].COLL;
}
// more general test
function isTopo(ent_type) {
    if (ent_type === _common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].VERT) {
        return true;
    }
    if (ent_type === _common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].EDGE) {
        return true;
    }
    if (ent_type === _common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].WIRE) {
        return true;
    }
    if (ent_type === _common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].FACE) {
        return true;
    }
    return false;
}
function isObj(ent_type) {
    if (ent_type === _common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].PGON) {
        return true;
    }
    if (ent_type === _common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].PLINE) {
        return true;
    }
    if (ent_type === _common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].POINT) {
        return true;
    }
    return false;
}
function isDim0(ent_type) {
    if (ent_type === _common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].POSI) {
        return true;
    }
    if (ent_type === _common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].VERT) {
        return true;
    }
    if (ent_type === _common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].POINT) {
        return true;
    }
    return false;
}
function isDim1(ent_type) {
    if (ent_type === _common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].EDGE) {
        return true;
    }
    if (ent_type === _common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].PLINE) {
        return true;
    }
    return false;
}
function isDim2(ent_type) {
    if (ent_type === _common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].FACE) {
        return true;
    }
    if (ent_type === _common__WEBPACK_IMPORTED_MODULE_0__["EEntType"].PGON) {
        return true;
    }
    return false;
}


/***/ }),

/***/ "./src/assets/libs/geom/distance.ts":
/*!******************************************!*\
  !*** ./src/assets/libs/geom/distance.ts ***!
  \******************************************/
/*! exports provided: distance */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "distance", function() { return distance; });
var EPS = 1e-6;
function distance(v1, v2) {
    var vec = [
        v1[0] - v2[0],
        v1[1] - v2[1],
        v1[2] - v2[2],
    ];
    return Math.hypot.apply(Math, vec);
}


/***/ }),

/***/ "./src/assets/libs/geom/matrix.ts":
/*!****************************************!*\
  !*** ./src/assets/libs/geom/matrix.ts ***!
  \****************************************/
/*! exports provided: multMatrix, mirrorMatrix, rotateMatrix, scaleMatrix, xfromSourceTargetMatrix */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "multMatrix", function() { return multMatrix; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "mirrorMatrix", function() { return mirrorMatrix; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "rotateMatrix", function() { return rotateMatrix; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "scaleMatrix", function() { return scaleMatrix; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "xfromSourceTargetMatrix", function() { return xfromSourceTargetMatrix; });
/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! three */ "./node_modules/three/build/three.module.js");
/* harmony import */ var _vectors__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./vectors */ "./src/assets/libs/geom/vectors.ts");
/* harmony import */ var _geo_info_id__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../geo-info/id */ "./src/assets/libs/geo-info/id.ts");



var EPS = 1e-6;
function multMatrix(xyz, m) {
    var _a;
    var v2 = new ((_a = three__WEBPACK_IMPORTED_MODULE_0__["Vector3"]).bind.apply(_a, [void 0].concat(xyz)))();
    v2.applyMatrix4(m);
    return v2.toArray();
}
function mirrorMatrix(origin, normal) {
    // plane normal
    var _a = Object(_vectors__WEBPACK_IMPORTED_MODULE_1__["vecNorm"])(normal), a = _a[0], b = _a[1], c = _a[2];
    // rotation matrix
    var matrix_mirror = new three__WEBPACK_IMPORTED_MODULE_0__["Matrix4"]();
    matrix_mirror.set(1 - (2 * a * a), -2 * a * b, -2 * a * c, 0, -2 * a * b, 1 - (2 * b * b), -2 * b * c, 0, -2 * a * c, -2 * b * c, 1 - (2 * c * c), 0, 0, 0, 0, 1);
    // translation matrix
    var matrix_trn1 = new three__WEBPACK_IMPORTED_MODULE_0__["Matrix4"]();
    matrix_trn1.makeTranslation(-origin[0], -origin[1], -origin[2]);
    var matrix_trn2 = new three__WEBPACK_IMPORTED_MODULE_0__["Matrix4"]();
    matrix_trn2.makeTranslation(origin[0], origin[1], origin[2]);
    // final matrix
    var move_mirror_move = matrix_trn2.multiply(matrix_mirror.multiply(matrix_trn1));
    // do the xform
    return move_mirror_move;
}
function rotateMatrix(origin, axis, angle) {
    var _a;
    // norm the axis
    axis = Object(_vectors__WEBPACK_IMPORTED_MODULE_1__["vecNorm"])(axis);
    // rotation matrix
    var matrix_rot = new three__WEBPACK_IMPORTED_MODULE_0__["Matrix4"]();
    matrix_rot.makeRotationAxis(new ((_a = three__WEBPACK_IMPORTED_MODULE_0__["Vector3"]).bind.apply(_a, [void 0].concat(axis)))(), angle);
    // translation matrix
    var matrix_trn1 = new three__WEBPACK_IMPORTED_MODULE_0__["Matrix4"]();
    matrix_trn1.makeTranslation(-origin[0], -origin[1], -origin[2]);
    var matrix_trn2 = new three__WEBPACK_IMPORTED_MODULE_0__["Matrix4"]();
    matrix_trn2.makeTranslation(origin[0], origin[1], origin[2]);
    // final matrix
    var move_rot_move = matrix_trn2.multiply(matrix_rot.multiply(matrix_trn1));
    // do the xform
    return move_rot_move;
}
function scaleMatrix(origin, factor) {
    // scale matrix
    var matrix_scale = new three__WEBPACK_IMPORTED_MODULE_0__["Matrix4"]();
    matrix_scale.makeScale(factor[0], factor[1], factor[2]);
    // xform matrix
    var source_plane = (Object(_geo_info_id__WEBPACK_IMPORTED_MODULE_2__["getArrDepth"])(origin) === 2 ? origin : [origin, [1, 0, 0], [0, 1, 0]]);
    var matrix_xform1 = _xformMatrixFromXYZVectors(source_plane[0], source_plane[1], source_plane[2], true);
    var matrix_xform2 = _xformMatrixFromXYZVectors(source_plane[0], source_plane[1], source_plane[2], false);
    // final matrix
    var xform_scale_xform = matrix_xform2.multiply(matrix_scale.multiply(matrix_xform1));
    // do the xform
    return xform_scale_xform;
}
function xfromSourceTargetMatrix(source_plane, target_plane) {
    // matrix to xform from source to gcs, then from gcs to target
    var matrix_source_to_gcs = _xformMatrixFromXYZVectors(source_plane[0], source_plane[1], source_plane[2], true);
    var matrix_gcs_to_target = _xformMatrixFromXYZVectors(target_plane[0], target_plane[1], target_plane[2], false);
    // final matrix
    var xform = matrix_gcs_to_target.multiply(matrix_source_to_gcs);
    // return the matrix
    return xform;
}
// ================================================================================================
// Helper functions
// ================================================================================================
function _crossVectors(v1, v2, norm) {
    if (norm === void 0) { norm = false; }
    var v3 = new three__WEBPACK_IMPORTED_MODULE_0__["Vector3"]();
    v3.crossVectors(v1, v2);
    if (norm) {
        v3.normalize();
    }
    return v3;
}
function _dotVectors(v1, v2) {
    return v1.dot(v2);
}
function _xformMatrixFromXYZVectors(o, xaxis, xyplane, neg) {
    var _a, _b, _c, _d;
    var x_vec = new ((_a = three__WEBPACK_IMPORTED_MODULE_0__["Vector3"]).bind.apply(_a, [void 0].concat(xaxis)))().normalize();
    var xyplane_vec = new ((_b = three__WEBPACK_IMPORTED_MODULE_0__["Vector3"]).bind.apply(_b, [void 0].concat(xyplane)))().normalize();
    var z_vec = _crossVectors(x_vec, xyplane_vec);
    var y_vec = _crossVectors(z_vec, x_vec);
    if (neg) {
        return _xformMatrixNeg(new ((_c = three__WEBPACK_IMPORTED_MODULE_0__["Vector3"]).bind.apply(_c, [void 0].concat(o)))(), x_vec, y_vec);
    }
    return xformMatrixPos(new ((_d = three__WEBPACK_IMPORTED_MODULE_0__["Vector3"]).bind.apply(_d, [void 0].concat(o)))(), x_vec, y_vec);
}
function _xformMatrixNeg(o, x, y) {
    var m1 = new three__WEBPACK_IMPORTED_MODULE_0__["Matrix4"]();
    var o_neg = o.clone().negate();
    m1.setPosition(o_neg);
    var m2 = new three__WEBPACK_IMPORTED_MODULE_0__["Matrix4"]();
    m2.makeBasis(x.normalize(), y.normalize(), _crossVectors(x, y, true));
    m2.getInverse(m2);
    var m3 = new three__WEBPACK_IMPORTED_MODULE_0__["Matrix4"]();
    // first translate to (0,0,0), then xform, so m1 x m2
    m3.multiplyMatrices(m2, m1);
    return m3;
}
function xformMatrixPos(o, x, y) {
    var m1 = new three__WEBPACK_IMPORTED_MODULE_0__["Matrix4"]();
    m1.setPosition(o);
    var m2 = new three__WEBPACK_IMPORTED_MODULE_0__["Matrix4"]();
    m2.makeBasis(x.normalize(), y.normalize(), _crossVectors(x, y, true));
    var m3 = new three__WEBPACK_IMPORTED_MODULE_0__["Matrix4"]();
    // first xform, then translate to origin, so m1 x m2
    m3.multiplyMatrices(m1, m2);
    return m3;
}
// ---------------------------------------------------------------------------------
function _matrixFromXYZ(pts, from_origin, from_vectors, to_origin, to_vectors) {
    var e1 = new three__WEBPACK_IMPORTED_MODULE_0__["Vector3"](from_vectors[0][0]).normalize();
    var e2 = new three__WEBPACK_IMPORTED_MODULE_0__["Vector3"](from_vectors[0][1]).normalize();
    var e3 = new three__WEBPACK_IMPORTED_MODULE_0__["Vector3"](from_vectors[0][2]).normalize();
    var b1 = new three__WEBPACK_IMPORTED_MODULE_0__["Vector3"](to_vectors[0][0]).normalize();
    var b2 = new three__WEBPACK_IMPORTED_MODULE_0__["Vector3"](to_vectors[0][1]).normalize();
    var b3 = new three__WEBPACK_IMPORTED_MODULE_0__["Vector3"](to_vectors[0][2]).normalize();
    if (e1.dot(e2) === 0) {
        throw new Error('Orthonormal initial basis required');
    }
    if (e1.dot(e3) === 0) {
        throw new Error('Orthonormal initial basis required');
    }
    if (e2.dot(e3) === 0) {
        throw new Error('Orthonormal initial basis required');
    }
    if (b1.dot(b2) === 0) {
        throw new Error('Orthonormal initial basis required');
    }
    if (b1.dot(b3) === 0) {
        throw new Error('Orthonormal initial basis required');
    }
    if (b2.dot(b3) === 0) {
        throw new Error('Orthonormal initial basis required');
    }
    var matrix = new three__WEBPACK_IMPORTED_MODULE_0__["Matrix3"]();
    matrix.set(e1.dot(b1), e1.dot(b2), e1.dot(b3), e2.dot(b1), e2.dot(b2), e2.dot(b3), e3.dot(b1), e3.dot(b2), e3.dot(b3));
    var t_x = to_origin[0] - from_origin[0];
    var t_y = to_origin[1] - from_origin[1];
    var t_z = to_origin[2] - from_origin[2];
    return [[e1.dot(b1), e1.dot(b2), e1.dot(b3), t_x],
        [e2.dot(b1), e2.dot(b2), e2.dot(b3), t_y],
        [e3.dot(b1), e3.dot(b2), e3.dot(b3), t_z],
        [0, 0, 0, 1]];
}


/***/ }),

/***/ "./src/assets/libs/geom/triangle.ts":
/*!******************************************!*\
  !*** ./src/assets/libs/geom/triangle.ts ***!
  \******************************************/
/*! exports provided: normal, area */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "normal", function() { return normal; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "area", function() { return area; });
/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! three */ "./node_modules/three/build/three.module.js");

var EPS = 1e-6;
function normal(v1, v2, v3, norm) {
    if (norm === void 0) { norm = false; }
    var _v1 = new (three__WEBPACK_IMPORTED_MODULE_0__["Vector3"].bind.apply(three__WEBPACK_IMPORTED_MODULE_0__["Vector3"], [void 0].concat(v1)))();
    var _v2 = new (three__WEBPACK_IMPORTED_MODULE_0__["Vector3"].bind.apply(three__WEBPACK_IMPORTED_MODULE_0__["Vector3"], [void 0].concat(v2)))();
    var _v3 = new (three__WEBPACK_IMPORTED_MODULE_0__["Vector3"].bind.apply(three__WEBPACK_IMPORTED_MODULE_0__["Vector3"], [void 0].concat(v3)))();
    var t = new three__WEBPACK_IMPORTED_MODULE_0__["Triangle"](_v1, _v2, _v3);
    var _normal = new three__WEBPACK_IMPORTED_MODULE_0__["Vector3"]();
    t.getNormal(_normal);
    if (norm) {
        _normal.normalize();
    }
    return _normal.toArray();
}
function area(v1, v2, v3) {
    var _v1 = new (three__WEBPACK_IMPORTED_MODULE_0__["Vector3"].bind.apply(three__WEBPACK_IMPORTED_MODULE_0__["Vector3"], [void 0].concat(v1)))();
    var _v2 = new (three__WEBPACK_IMPORTED_MODULE_0__["Vector3"].bind.apply(three__WEBPACK_IMPORTED_MODULE_0__["Vector3"], [void 0].concat(v2)))();
    var _v3 = new (three__WEBPACK_IMPORTED_MODULE_0__["Vector3"].bind.apply(three__WEBPACK_IMPORTED_MODULE_0__["Vector3"], [void 0].concat(v3)))();
    var t = new three__WEBPACK_IMPORTED_MODULE_0__["Triangle"](_v1, _v2, _v3);
    return t.getArea();
}


/***/ }),

/***/ "./src/assets/libs/geom/vectors.ts":
/*!*****************************************!*\
  !*** ./src/assets/libs/geom/vectors.ts ***!
  \*****************************************/
/*! exports provided: vecEqual, vecSub, vecAdd, vecSum, vecDiv, vecMult, vecCross, vecDot, vecNorm, vecAng, vecAng2, vecLen, vecSetLen, vecRev, vecFromTo, vecMakeOrtho, vecCodir, dist, newellNorm, interpByNum, interpByLen */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "vecEqual", function() { return vecEqual; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "vecSub", function() { return vecSub; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "vecAdd", function() { return vecAdd; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "vecSum", function() { return vecSum; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "vecDiv", function() { return vecDiv; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "vecMult", function() { return vecMult; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "vecCross", function() { return vecCross; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "vecDot", function() { return vecDot; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "vecNorm", function() { return vecNorm; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "vecAng", function() { return vecAng; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "vecAng2", function() { return vecAng2; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "vecLen", function() { return vecLen; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "vecSetLen", function() { return vecSetLen; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "vecRev", function() { return vecRev; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "vecFromTo", function() { return vecFromTo; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "vecMakeOrtho", function() { return vecMakeOrtho; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "vecCodir", function() { return vecCodir; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "dist", function() { return dist; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "newellNorm", function() { return newellNorm; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "interpByNum", function() { return interpByNum; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "interpByLen", function() { return interpByLen; });
/* harmony import */ var mathjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! mathjs */ "./node_modules/mathjs/index.js");
/* harmony import */ var mathjs__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(mathjs__WEBPACK_IMPORTED_MODULE_0__);

var EPS = 1e-6;
//  Vectors using Txyz =======================================================================================================
function vecEqual(v1, v2, tol) {
    if (Math.abs(v1[0] - v2[0]) > tol) {
        return false;
    }
    if (Math.abs(v1[1] - v2[1]) > tol) {
        return false;
    }
    if (Math.abs(v1[2] - v2[2]) > tol) {
        return false;
    }
    return true;
}
function vecSub(v1, v2, norm) {
    if (norm === void 0) { norm = false; }
    var v3 = [
        v1[0] - v2[0],
        v1[1] - v2[1],
        v1[2] - v2[2],
    ];
    if (norm) {
        this.vectorNorm(v3);
    }
    return v3;
}
function vecAdd(v1, v2, norm) {
    if (norm === void 0) { norm = false; }
    var v3 = [
        v1[0] + v2[0],
        v1[1] + v2[1],
        v1[2] + v2[2],
    ];
    if (norm) {
        this.vectorNorm(v3);
    }
    return v3;
}
function vecSum(vecs, norm) {
    if (norm === void 0) { norm = false; }
    var vec_sum = [0, 0, 0];
    for (var _i = 0, vecs_1 = vecs; _i < vecs_1.length; _i++) {
        var vec = vecs_1[_i];
        vec_sum[0] += vec[0];
        vec_sum[1] += vec[1];
        vec_sum[2] += vec[2];
    }
    if (norm) {
        this.vectorNorm(vec_sum);
    }
    return vec_sum;
}
function vecDiv(vec, divisor) {
    return [
        vec[0] / divisor,
        vec[1] / divisor,
        vec[2] / divisor
    ];
}
function vecMult(vec, multiplier) {
    return [
        vec[0] * multiplier,
        vec[1] * multiplier,
        vec[2] * multiplier
    ];
}
function vecCross(v1, v2, norm) {
    if (norm === void 0) { norm = false; }
    var n = mathjs__WEBPACK_IMPORTED_MODULE_0__["cross"](v1, v2);
    if (norm) {
        return vecNorm(n);
    }
    return n;
}
function vecDot(v1, v2) {
    return mathjs__WEBPACK_IMPORTED_MODULE_0__["dot"](v1, v2);
}
function vecNorm(v) {
    var length = Math.hypot.apply(Math, v);
    if (length === 0) {
        return [0, 0, 0];
    }
    return [v[0] / length, v[1] / length, v[2] / length];
}
function vecAng(v1, v2) {
    var v1n = vecNorm(v1);
    var v2n = vecNorm(v2);
    var d = mathjs__WEBPACK_IMPORTED_MODULE_0__["dot"](v1n, v2n);
    if ((1 - Math.abs(d)) < EPS) {
        return 0;
    }
    return Math.acos(d);
}
function vecAng2(v1, v2, n) {
    var v1n = vecNorm(v1);
    var v2n = vecNorm(v2);
    var d = mathjs__WEBPACK_IMPORTED_MODULE_0__["dot"](v1n, v2n);
    if ((1 - Math.abs(d)) < EPS) {
        return 0;
    }
    var angle = Math.acos(d);
    var c = mathjs__WEBPACK_IMPORTED_MODULE_0__["cross"](v1n, v2n);
    angle = angle * mathjs__WEBPACK_IMPORTED_MODULE_0__["compare"](mathjs__WEBPACK_IMPORTED_MODULE_0__["dot"](n, c), 0);
    if (angle < 0) {
        angle = angle + (Math.PI * 2);
    }
    return angle;
}
function vecLen(v) {
    return Math.hypot.apply(Math, v);
}
function vecSetLen(v, len) {
    var fac = len / Math.hypot.apply(Math, v);
    return [v[0] * fac, v[1] * fac, v[2] * fac];
}
function vecRev(v) {
    return [
        v[0] * -1,
        v[1] * -1,
        v[2] * -1
    ];
}
function vecFromTo(v1, v2) {
    return vecSub(v2, v1);
}
function vecMakeOrtho(v1, v2) {
    return vecCross(v2, vecCross(v1, v2));
}
function vecCodir(v1, v2) {
    v1 = vecNorm(v1);
    v2 = vecNorm(v2);
    if (Math.abs(1 - mathjs__WEBPACK_IMPORTED_MODULE_0__["dot"](v1, v2)) > EPS) {
        return false;
    }
    return true;
}
function dist(p1, p2) {
    return mathjs__WEBPACK_IMPORTED_MODULE_0__["distance"](p1, p2);
}
/**
 * Finds the normal to a set of points using Newell's method
 */
function newellNorm(pts) {
    var normal = [0, 0, 0];
    for (var i = 0; i < pts.length - 1; i++) {
        var p0 = pts[i];
        var p1 = pts[i + 1];
        normal[0] += (p0[1] - p1[1]) * (p0[2] + p1[2]);
        normal[1] += (p0[2] - p1[2]) * (p0[0] + p1[0]);
        normal[2] += (p0[0] - p1[0]) * (p0[1] + p1[1]);
    }
    return vecNorm(normal);
}
/**
 * Create new points between two points.
 */
function interpByNum(pt1, pt2, num_points) {
    if (num_points < 1) {
        return [];
    }
    var sub_vec = vecDiv(vecSub(pt2, pt1), num_points + 1);
    var points = [];
    var next = pt1;
    for (var i = 0; i < num_points; i++) {
        next = vecAdd(next, sub_vec);
        points.push(next);
    }
    return points;
}
function interpByLen(pt1, pt2, len) {
    var vec = vecSub(pt2, pt1);
    var num_points = Math.floor(vecLen(vec) / len);
    var sub_vec = vecMult(vecNorm(vec), len);
    var points = [];
    var next = pt1;
    for (var i = 0; i < num_points; i++) {
        next = vecAdd(next, sub_vec);
        points.push(next);
    }
    return points;
}


/***/ }),

/***/ "./src/assets/libs/triangulate/earcut.ts":
/*!***********************************************!*\
  !*** ./src/assets/libs/triangulate/earcut.ts ***!
  \***********************************************/
/*! exports provided: Earcut */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Earcut", function() { return Earcut; });
/**
 * @author Mugen87 / https://github.com/Mugen87
 * Port from https://github.com/mapbox/earcut (v2.1.2)
 */
var Earcut = {
    triangulate: function (data, holeIndices, dim) {
        dim = dim || 2;
        var hasHoles = holeIndices && holeIndices.length;
        var outerLen = hasHoles ? holeIndices[0] * dim : data.length;
        var outerNode = linkedList(data, 0, outerLen, dim, true);
        var triangles = [];
        if (!outerNode) {
            return triangles;
        }
        var minX, minY, maxX, maxY, x, y, invSize;
        if (hasHoles) {
            outerNode = eliminateHoles(data, holeIndices, outerNode, dim);
        }
        // if the shape is not too simple, we'll use z-order curve hash later; calculate polygon bbox
        if (data.length > 80 * dim) {
            minX = maxX = data[0];
            minY = maxY = data[1];
            for (var i = dim; i < outerLen; i += dim) {
                x = data[i];
                y = data[i + 1];
                if (x < minX) {
                    minX = x;
                }
                if (y < minY) {
                    minY = y;
                }
                if (x > maxX) {
                    maxX = x;
                }
                if (y > maxY) {
                    maxY = y;
                }
            }
            // minX, minY and invSize are later used to transform coords into integers for z-order calculation
            invSize = Math.max(maxX - minX, maxY - minY);
            invSize = invSize !== 0 ? 1 / invSize : 0;
        }
        earcutLinked(outerNode, triangles, dim, minX, minY, invSize);
        return triangles;
    }
};
// create a circular doubly linked list from polygon points in the specified winding order
function linkedList(data, start, end, dim, clockwise) {
    var i, last;
    if (clockwise === (signedArea(data, start, end, dim) > 0)) {
        for (i = start; i < end; i += dim) {
            last = insertNode(i, data[i], data[i + 1], last);
        }
    }
    else {
        for (i = end - dim; i >= start; i -= dim) {
            last = insertNode(i, data[i], data[i + 1], last);
        }
    }
    if (last && equals(last, last.next)) {
        removeNode(last);
        last = last.next;
    }
    return last;
}
// eliminate colinear or duplicate points
function filterPoints(start, end) {
    if (!start) {
        return start;
    }
    if (!end) {
        end = start;
    }
    var p = start, again;
    do {
        again = false;
        if (!p.steiner && (equals(p, p.next) || area(p.prev, p, p.next) === 0)) {
            removeNode(p);
            p = end = p.prev;
            if (p === p.next) {
                break;
            }
            again = true;
        }
        else {
            p = p.next;
        }
    } while (again || p !== end);
    return end;
}
// main ear slicing loop which triangulates a polygon (given as a linked list)
function earcutLinked(ear, triangles, dim, minX, minY, invSize, pass) {
    if (!ear) {
        return;
    }
    // interlink polygon nodes in z-order
    if (!pass && invSize) {
        indexCurve(ear, minX, minY, invSize);
    }
    var stop = ear, prev, next;
    // iterate through ears, slicing them one by one
    while (ear.prev !== ear.next) {
        prev = ear.prev;
        next = ear.next;
        if (invSize ? isEarHashed(ear, minX, minY, invSize) : isEar(ear)) {
            // cut off the triangle
            triangles.push(prev.i / dim);
            triangles.push(ear.i / dim);
            triangles.push(next.i / dim);
            removeNode(ear);
            // skipping the next vertice leads to less sliver triangles
            ear = next.next;
            stop = next.next;
            continue;
        }
        ear = next;
        // if we looped through the whole remaining polygon and can't find any more ears
        if (ear === stop) {
            // try filtering points and slicing again
            if (!pass) {
                earcutLinked(filterPoints(ear), triangles, dim, minX, minY, invSize, 1);
                // if this didn't work, try curing all small self-intersections locally
            }
            else if (pass === 1) {
                ear = cureLocalIntersections(ear, triangles, dim);
                earcutLinked(ear, triangles, dim, minX, minY, invSize, 2);
                // as a last resort, try splitting the remaining polygon into two
            }
            else if (pass === 2) {
                splitEarcut(ear, triangles, dim, minX, minY, invSize);
            }
            break;
        }
    }
}
// check whether a polygon node forms a valid ear with adjacent nodes
function isEar(ear) {
    var a = ear.prev, b = ear, c = ear.next;
    if (area(a, b, c) >= 0) {
        return false;
    } // reflex, can't be an ear
    // now make sure we don't have other points inside the potential ear
    var p = ear.next.next;
    while (p !== ear.prev) {
        if (pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y) && area(p.prev, p, p.next) >= 0) {
            return false;
        }
        p = p.next;
    }
    return true;
}
function isEarHashed(ear, minX, minY, invSize) {
    var a = ear.prev, b = ear, c = ear.next;
    if (area(a, b, c) >= 0) {
        return false;
    } // reflex, can't be an ear
    // triangle bbox; min & max are calculated like this for speed
    var minTX = a.x < b.x ? (a.x < c.x ? a.x : c.x) : (b.x < c.x ? b.x : c.x), minTY = a.y < b.y ? (a.y < c.y ? a.y : c.y) : (b.y < c.y ? b.y : c.y), maxTX = a.x > b.x ? (a.x > c.x ? a.x : c.x) : (b.x > c.x ? b.x : c.x), maxTY = a.y > b.y ? (a.y > c.y ? a.y : c.y) : (b.y > c.y ? b.y : c.y);
    // z-order range for the current triangle bbox;
    var minZ = zOrder(minTX, minTY, minX, minY, invSize), maxZ = zOrder(maxTX, maxTY, minX, minY, invSize);
    // first look for points inside the triangle in increasing z-order
    var p = ear.nextZ;
    while (p && p.z <= maxZ) {
        if (p !== ear.prev && p !== ear.next &&
            pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y) &&
            area(p.prev, p, p.next) >= 0) {
            return false;
        }
        p = p.nextZ;
    }
    // then look for points in decreasing z-order
    p = ear.prevZ;
    while (p && p.z >= minZ) {
        if (p !== ear.prev && p !== ear.next &&
            pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y) &&
            area(p.prev, p, p.next) >= 0) {
            return false;
        }
        p = p.prevZ;
    }
    return true;
}
// go through all polygon nodes and cure small local self-intersections
function cureLocalIntersections(start, triangles, dim) {
    var p = start;
    do {
        var a = p.prev, b = p.next.next;
        if (!equals(a, b) && intersects(a, p, p.next, b) && locallyInside(a, b) && locallyInside(b, a)) {
            triangles.push(a.i / dim);
            triangles.push(p.i / dim);
            triangles.push(b.i / dim);
            // remove two nodes involved
            removeNode(p);
            removeNode(p.next);
            p = start = b;
        }
        p = p.next;
    } while (p !== start);
    return p;
}
// try splitting polygon into two and triangulate them independently
function splitEarcut(start, triangles, dim, minX, minY, invSize) {
    // look for a valid diagonal that divides the polygon into two
    var a = start;
    do {
        var b = a.next.next;
        while (b !== a.prev) {
            if (a.i !== b.i && isValidDiagonal(a, b)) {
                // split the polygon in two by the diagonal
                var c = splitPolygon(a, b);
                // filter colinear points around the cuts
                a = filterPoints(a, a.next);
                c = filterPoints(c, c.next);
                // run earcut on each half
                earcutLinked(a, triangles, dim, minX, minY, invSize);
                earcutLinked(c, triangles, dim, minX, minY, invSize);
                return;
            }
            b = b.next;
        }
        a = a.next;
    } while (a !== start);
}
// link every hole into the outer loop, producing a single-ring polygon without holes
function eliminateHoles(data, holeIndices, outerNode, dim) {
    var queue = [], i, len, start, end, list;
    for (i = 0, len = holeIndices.length; i < len; i++) {
        start = holeIndices[i] * dim;
        end = i < len - 1 ? holeIndices[i + 1] * dim : data.length;
        list = linkedList(data, start, end, dim, false);
        if (list === list.next) {
            list.steiner = true;
        }
        queue.push(getLeftmost(list));
    }
    queue.sort(compareX);
    // process holes from left to right
    for (i = 0; i < queue.length; i++) {
        eliminateHole(queue[i], outerNode);
        outerNode = filterPoints(outerNode, outerNode.next);
    }
    return outerNode;
}
function compareX(a, b) {
    return a.x - b.x;
}
// find a bridge between vertices that connects hole with an outer ring and and link it
function eliminateHole(hole, outerNode) {
    outerNode = findHoleBridge(hole, outerNode);
    if (outerNode) {
        var b = splitPolygon(outerNode, hole);
        filterPoints(b, b.next);
    }
}
// David Eberly's algorithm for finding a bridge between hole and outer polygon
function findHoleBridge(hole, outerNode) {
    var p = outerNode;
    var hx = hole.x;
    var hy = hole.y;
    var qx = -Infinity;
    var m;
    // find a segment intersected by a ray from the hole's leftmost point to the left;
    // segment's endpoint with lesser x will be potential connection point
    do {
        if (hy <= p.y && hy >= p.next.y && p.next.y !== p.y) {
            var x = p.x + (hy - p.y) * (p.next.x - p.x) / (p.next.y - p.y);
            if (x <= hx && x > qx) {
                qx = x;
                if (x === hx) {
                    if (hy === p.y) {
                        return p;
                    }
                    if (hy === p.next.y) {
                        return p.next;
                    }
                }
                m = p.x < p.next.x ? p : p.next;
            }
        }
        p = p.next;
    } while (p !== outerNode);
    if (!m) {
        return null;
    }
    if (hx === qx) {
        return m.prev;
    } // hole touches outer segment; pick lower endpoint
    // look for points inside the triangle of hole point, segment intersection and endpoint;
    // if there are no points found, we have a valid connection;
    // otherwise choose the point of the minimum angle with the ray as connection point
    var stop = m;
    var mx = m.x;
    var my = m.y;
    var tanMin = Infinity;
    var tan;
    p = m.next;
    while (p !== stop) {
        if (hx >= p.x && p.x >= mx && hx !== p.x &&
            pointInTriangle(hy < my ? hx : qx, hy, mx, my, hy < my ? qx : hx, hy, p.x, p.y)) {
            tan = Math.abs(hy - p.y) / (hx - p.x); // tangential
            if ((tan < tanMin || (tan === tanMin && p.x > m.x)) && locallyInside(p, hole)) {
                m = p;
                tanMin = tan;
            }
        }
        p = p.next;
    }
    return m;
}
// interlink polygon nodes in z-order
function indexCurve(start, minX, minY, invSize) {
    var p = start;
    do {
        if (p.z === null) {
            p.z = zOrder(p.x, p.y, minX, minY, invSize);
        }
        p.prevZ = p.prev;
        p.nextZ = p.next;
        p = p.next;
    } while (p !== start);
    p.prevZ.nextZ = null;
    p.prevZ = null;
    sortLinked(p);
}
// Simon Tatham's linked list merge sort algorithm
// http://www.chiark.greenend.org.uk/~sgtatham/algorithms/listsort.html
function sortLinked(list) {
    var i, p, q, e, tail, numMerges, pSize, qSize, inSize = 1;
    do {
        p = list;
        list = null;
        tail = null;
        numMerges = 0;
        while (p) {
            numMerges++;
            q = p;
            pSize = 0;
            for (i = 0; i < inSize; i++) {
                pSize++;
                q = q.nextZ;
                if (!q) {
                    break;
                }
            }
            qSize = inSize;
            while (pSize > 0 || (qSize > 0 && q)) {
                if (pSize !== 0 && (qSize === 0 || !q || p.z <= q.z)) {
                    e = p;
                    p = p.nextZ;
                    pSize--;
                }
                else {
                    e = q;
                    q = q.nextZ;
                    qSize--;
                }
                if (tail) {
                    tail.nextZ = e;
                }
                else {
                    list = e;
                }
                e.prevZ = tail;
                tail = e;
            }
            p = q;
        }
        tail.nextZ = null;
        inSize *= 2;
    } while (numMerges > 1);
    return list;
}
// z-order of a point given coords and inverse of the longer side of data bbox
function zOrder(x, y, minX, minY, invSize) {
    // coords are transformed into non-negative 15-bit integer range
    x = 32767 * (x - minX) * invSize;
    y = 32767 * (y - minY) * invSize;
    x = (x | (x << 8)) & 0x00FF00FF;
    x = (x | (x << 4)) & 0x0F0F0F0F;
    x = (x | (x << 2)) & 0x33333333;
    x = (x | (x << 1)) & 0x55555555;
    y = (y | (y << 8)) & 0x00FF00FF;
    y = (y | (y << 4)) & 0x0F0F0F0F;
    y = (y | (y << 2)) & 0x33333333;
    y = (y | (y << 1)) & 0x55555555;
    return x | (y << 1);
}
// find the leftmost node of a polygon ring
function getLeftmost(start) {
    var p = start, leftmost = start;
    do {
        if (p.x < leftmost.x) {
            leftmost = p;
        }
        p = p.next;
    } while (p !== start);
    return leftmost;
}
// check if a point lies within a convex triangle
function pointInTriangle(ax, ay, bx, by, cx, cy, px, py) {
    return (cx - px) * (ay - py) - (ax - px) * (cy - py) >= 0 &&
        (ax - px) * (by - py) - (bx - px) * (ay - py) >= 0 &&
        (bx - px) * (cy - py) - (cx - px) * (by - py) >= 0;
}
// check if a diagonal between two polygon nodes is valid (lies in polygon interior)
function isValidDiagonal(a, b) {
    return a.next.i !== b.i && a.prev.i !== b.i && !intersectsPolygon(a, b) &&
        locallyInside(a, b) && locallyInside(b, a) && middleInside(a, b);
}
// signed area of a triangle
function area(p, q, r) {
    return (q.y - p.y) * (r.x - q.x) - (q.x - p.x) * (r.y - q.y);
}
// check if two points are equal
function equals(p1, p2) {
    return p1.x === p2.x && p1.y === p2.y;
}
// check if two segments intersect
function intersects(p1, q1, p2, q2) {
    if ((equals(p1, q1) && equals(p2, q2)) ||
        (equals(p1, q2) && equals(p2, q1))) {
        return true;
    }
    return area(p1, q1, p2) > 0 !== area(p1, q1, q2) > 0 &&
        area(p2, q2, p1) > 0 !== area(p2, q2, q1) > 0;
}
// check if a polygon diagonal intersects any polygon segments
function intersectsPolygon(a, b) {
    var p = a;
    do {
        if (p.i !== a.i && p.next.i !== a.i && p.i !== b.i && p.next.i !== b.i &&
            intersects(p, p.next, a, b)) {
            return true;
        }
        p = p.next;
    } while (p !== a);
    return false;
}
// check if a polygon diagonal is locally inside the polygon
function locallyInside(a, b) {
    return area(a.prev, a, a.next) < 0 ?
        area(a, b, a.next) >= 0 && area(a, a.prev, b) >= 0 :
        area(a, b, a.prev) < 0 || area(a, a.next, b) < 0;
}
// check if the middle point of a polygon diagonal is inside the polygon
function middleInside(a, b) {
    var p = a;
    var inside = false;
    var px = (a.x + b.x) / 2;
    var py = (a.y + b.y) / 2;
    do {
        if (((p.y > py) !== (p.next.y > py)) && p.next.y !== p.y &&
            (px < (p.next.x - p.x) * (py - p.y) / (p.next.y - p.y) + p.x)) {
            inside = !inside;
        }
        p = p.next;
    } while (p !== a);
    return inside;
}
// link two polygon vertices with a bridge; if the vertices belong to the same ring, it splits polygon into two;
// if one belongs to the outer ring and another to a hole, it merges it into a single ring
function splitPolygon(a, b) {
    var a2 = new Node(a.i, a.x, a.y), b2 = new Node(b.i, b.x, b.y), an = a.next, bp = b.prev;
    a.next = b;
    b.prev = a;
    a2.next = an;
    an.prev = a2;
    b2.next = a2;
    a2.prev = b2;
    bp.next = b2;
    b2.prev = bp;
    return b2;
}
// create a node and optionally link it with previous one (in a circular doubly linked list)
function insertNode(i, x, y, last) {
    var p = new Node(i, x, y);
    if (!last) {
        p.prev = p;
        p.next = p;
    }
    else {
        p.next = last.next;
        p.prev = last;
        last.next.prev = p;
        last.next = p;
    }
    return p;
}
function removeNode(p) {
    p.next.prev = p.prev;
    p.prev.next = p.next;
    if (p.prevZ) {
        p.prevZ.nextZ = p.nextZ;
    }
    if (p.nextZ) {
        p.nextZ.prevZ = p.prevZ;
    }
}
function Node(i, x, y) {
    // vertice index in coordinates array
    this.i = i;
    // vertex coordinates
    this.x = x;
    this.y = y;
    // previous and next vertice nodes in a polygon ring
    this.prev = null;
    this.next = null;
    // z-order curve value
    this.z = null;
    // previous and next nodes in z-order
    this.prevZ = null;
    this.nextZ = null;
    // indicates whether this is a steiner point
    this.steiner = false;
}
function signedArea(data, start, end, dim) {
    var sum = 0;
    for (var i = start, j = end - dim; i < end; i += dim) {
        sum += (data[j] - data[i]) * (data[i + 1] + data[j + 1]);
        j = i;
    }
    return sum;
}



/***/ }),

/***/ "./src/assets/libs/triangulate/threex.ts":
/*!***********************************************!*\
  !*** ./src/assets/libs/triangulate/threex.ts ***!
  \***********************************************/
/*! exports provided: multVectorMatrix, xformMatrix, matrixInv, subVectors, addVectors, crossVectors */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "multVectorMatrix", function() { return multVectorMatrix; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "xformMatrix", function() { return xformMatrix; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "matrixInv", function() { return matrixInv; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "subVectors", function() { return subVectors; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "addVectors", function() { return addVectors; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "crossVectors", function() { return crossVectors; });
/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! three */ "./node_modules/three/build/three.module.js");

var EPS = 1e-6;
/**
 * Utility functions for threejs.
 */
// Matrices ======================================================================================================
function multVectorMatrix(v, m) {
    var v2 = v.clone();
    v2.applyMatrix4(m);
    return v2;
}
function xformMatrix(o, x, y, z) {
    x.normalize();
    y.normalize();
    z.normalize();
    var m1 = new three__WEBPACK_IMPORTED_MODULE_0__["Matrix4"]();
    var o_neg = o.clone().negate();
    m1.setPosition(o_neg);
    var m2 = new three__WEBPACK_IMPORTED_MODULE_0__["Matrix4"]();
    m2.makeBasis(x, y, z);
    m2.getInverse(m2);
    var m3 = new three__WEBPACK_IMPORTED_MODULE_0__["Matrix4"]();
    m3.multiplyMatrices(m2, m1);
    return m3;
}
function matrixInv(m) {
    var m2 = new three__WEBPACK_IMPORTED_MODULE_0__["Matrix4"]();
    return m2.getInverse(m);
}
//  Vectors =======================================================================================================
function subVectors(v1, v2, norm) {
    if (norm === void 0) { norm = false; }
    var v3 = new three__WEBPACK_IMPORTED_MODULE_0__["Vector3"]();
    v3.subVectors(v1, v2);
    if (norm) {
        v3.normalize();
    }
    return v3;
}
function addVectors(v1, v2, norm) {
    if (norm === void 0) { norm = false; }
    var v3 = new three__WEBPACK_IMPORTED_MODULE_0__["Vector3"]();
    v3.addVectors(v1, v2);
    if (norm) {
        v3.normalize();
    }
    return v3;
}
function crossVectors(v1, v2, norm) {
    if (norm === void 0) { norm = false; }
    var v3 = new three__WEBPACK_IMPORTED_MODULE_0__["Vector3"]();
    v3.crossVectors(v1, v2);
    if (norm) {
        v3.normalize();
    }
    return v3;
}


/***/ }),

/***/ "./src/assets/libs/triangulate/triangulate.ts":
/*!****************************************************!*\
  !*** ./src/assets/libs/triangulate/triangulate.ts ***!
  \****************************************************/
/*! exports provided: triangulate */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "triangulate", function() { return triangulate; });
/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! three */ "./node_modules/three/build/three.module.js");
/* harmony import */ var _threex__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./threex */ "./src/assets/libs/triangulate/threex.ts");
/* harmony import */ var _earcut__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./earcut */ "./src/assets/libs/triangulate/earcut.ts");
/* harmony import */ var _geom_triangle__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../geom/triangle */ "./src/assets/libs/geom/triangle.ts");




//  3D to 2D ======================================================================================================
/**
 * Function that returns a matrix to transform a set of vertices in 3d space onto the xy plane.
 * This function assumes that the vertices are more or less co-planar.
 * Returns a set of three Vectors that represent points on the xy plane.
 * Returns null if the plane cannot be found, e.g. points are all colinear.
 */
function _getMatrix(points) {
    // calculate origin
    var o = new three__WEBPACK_IMPORTED_MODULE_0__["Vector3"]();
    for (var _i = 0, points_1 = points; _i < points_1.length; _i++) {
        var v = points_1[_i];
        o.add(v);
    }
    o.divideScalar(points.length);
    // find three vectors
    var vx;
    var vz;
    var got_vx = false;
    for (var i = 0; i < points.length; i++) {
        if (!got_vx) {
            vx = _threex__WEBPACK_IMPORTED_MODULE_1__["subVectors"](points[i], o);
            if (vx.lengthSq() !== 0) {
                got_vx = true;
            }
        }
        else {
            vz = _threex__WEBPACK_IMPORTED_MODULE_1__["crossVectors"](vx, _threex__WEBPACK_IMPORTED_MODULE_1__["subVectors"](points[i], o));
            if (vz.lengthSq() !== 0) {
                break;
            }
        }
        if (i === points.length - 1) {
            return null;
        } // could not find any pair of vectors
    }
    var vy = _threex__WEBPACK_IMPORTED_MODULE_1__["crossVectors"](vz, vx);
    // create matrix
    vx.normalize();
    vy.normalize();
    vz.normalize();
    var m2 = new three__WEBPACK_IMPORTED_MODULE_0__["Matrix4"]();
    m2.makeBasis(vx, vy, vz);
    m2.getInverse(m2);
    return m2;
}
/**
 * Triangulates a set of coords in 3d with holes
 * If the coords cannot be triangulated, it returns [].
 * @param coords
 */
function triangulate(coords, holes) {
    // check if we have holes
    var has_holes = (holes !== undefined && holes.length !== 0);
    // basic case, a triangle with no holes
    if (coords.length === 3 && !has_holes) {
        return [[0, 1, 2]];
    }
    // basic case, a quad with no holes
    if (coords.length === 4 && !has_holes) {
        // TODO this does not take into account degenerate cases
        // TODO two points in same location
        // TODO Three points that are colinear
        var area1 = Object(_geom_triangle__WEBPACK_IMPORTED_MODULE_3__["area"])(coords[0], coords[1], coords[2]) + Object(_geom_triangle__WEBPACK_IMPORTED_MODULE_3__["area"])(coords[2], coords[3], coords[0]);
        var area2 = Object(_geom_triangle__WEBPACK_IMPORTED_MODULE_3__["area"])(coords[0], coords[1], coords[3]) + Object(_geom_triangle__WEBPACK_IMPORTED_MODULE_3__["area"])(coords[1], coords[2], coords[3]);
        var tri1a = [coords[0], coords[1], coords[2]];
        var tri1b = [coords[2], coords[3], coords[0]];
        var tri2a = [coords[0], coords[1], coords[3]];
        var tri2b = [coords[1], coords[2], coords[3]];
        if (area1 < area2) {
            return [[0, 1, 2], [2, 3, 0]];
        }
        else {
            return [[0, 1, 3], [1, 2, 3]];
        }
    }
    // get the matrix to transform from 2D to 3D
    var coords_v = coords.map(function (coord) {
        var _a;
        return new ((_a = three__WEBPACK_IMPORTED_MODULE_0__["Vector3"]).bind.apply(_a, [void 0].concat(coord)))();
    });
    var matrix = _getMatrix(coords_v);
    // check for null, which means no plane could be found
    if (matrix === null) {
        return [];
    }
    // create an array to store all x y vertex coordinates
    var flat_vert_xys = [];
    // get the perimeter vertices and add them to the array
    var coords_v_2d = coords_v.map(function (coord_v) { return _threex__WEBPACK_IMPORTED_MODULE_1__["multVectorMatrix"](coord_v, matrix); });
    if (coords_v_2d === undefined || coords_v_2d === null || coords_v_2d.length === 0) {
        console.log('WARNING: triangulation failed.');
        return [];
    }
    coords_v_2d.forEach(function (coord_v_2d) { return flat_vert_xys.push(coord_v_2d.x, coord_v_2d.y); });
    // hole vertices uing EARCUT
    // holes is an array of hole indices if any (e.g. [5, 8] for a 12-vertex input would mean 
    // one hole with vertices 5–7 and another with 8–11).
    var hole_indices = [];
    var index_counter = coords_v.length;
    if (has_holes) {
        for (var _i = 0, holes_1 = holes; _i < holes_1.length; _i++) {
            var hole = holes_1[_i];
            hole_indices.push(index_counter);
            if (hole.length) {
                var hole_coords_v = hole.map(function (hole_coord) {
                    var _a;
                    return new ((_a = three__WEBPACK_IMPORTED_MODULE_0__["Vector3"]).bind.apply(_a, [void 0].concat(hole_coord)))();
                });
                var hole_coords_v_2d = hole_coords_v.map(function (hole_coord_v) {
                    return _threex__WEBPACK_IMPORTED_MODULE_1__["multVectorMatrix"](hole_coord_v, matrix);
                });
                var one_hole = [];
                hole_coords_v_2d.forEach(function (hole_coord_v) { return flat_vert_xys.push(hole_coord_v.x, hole_coord_v.y); });
                index_counter += hole.length;
            }
        }
    }
    // do the triangulation
    var flat_tris_i = _earcut__WEBPACK_IMPORTED_MODULE_2__["Earcut"].triangulate(flat_vert_xys, hole_indices);
    // convert the triangles into lists of three
    var tris_i = [];
    for (var i = 0; i < flat_tris_i.length; i += 3) {
        tris_i.push([flat_tris_i[i], flat_tris_i[i + 1], flat_tris_i[i + 2]]);
    }
    // return the list of triangles
    return tris_i;
}


/***/ }),

/***/ "./src/assets/libs/util/arrays.ts":
/*!****************************************!*\
  !*** ./src/assets/libs/util/arrays.ts ***!
  \****************************************/
/*! exports provided: arrRem, arrIdxAdd, arrIdxRem */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "arrRem", function() { return arrRem; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "arrIdxAdd", function() { return arrIdxAdd; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "arrIdxRem", function() { return arrIdxRem; });
/**
 * Remove an item from an array
 * @param arr
 * @param item
 */
function arrRem(arr, item) {
    var index = arr.indexOf(item);
    if (index === -1) {
        return;
    }
    arr.splice(index, 1);
}
/**
 * Add an item to an array in an array
 * @param arr
 * @param item
 */
function arrIdxAdd(arr, idx, item) {
    if (arr[idx] === undefined || arr[idx] === null) {
        arr[idx] = [];
    }
    arr[idx].push(item);
}
/**
 * Remove an item from an array in an array
 * @param arr
 * @param item
 */
function arrIdxRem(arr, idx, item, del_empty) {
    if (arr[idx] === undefined || arr[idx] === null) {
        return;
    }
    var rem_index = arr[idx].indexOf(item);
    if (rem_index === -1) {
        return;
    }
    arr[idx].splice(rem_index, 1);
    if (del_empty && arr[idx].length === 0) {
        delete arr[idx];
    }
}


/***/ }),

/***/ "./src/assets/libs/util/maps.ts":
/*!**************************************!*\
  !*** ./src/assets/libs/util/maps.ts ***!
  \**************************************/
/*! exports provided: sortByKey */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sortByKey", function() { return sortByKey; });
/**
 * Sort Map by Key, return a Sorted Map
 * @param unsortedMap
 */
function sortByKey(unsortedMap) {
    var keys = [];
    var sortedMap = new Map();
    unsortedMap.forEach(function (value, key) {
        keys.push(key);
    });
    keys.sort(function (a, b) {
        var x = Number(a.substr(2)), y = Number(b.substr(2));
        return ((x < y) ? -1 : ((x > y) ? 1 : 0));
    }).map(function (key) {
        sortedMap.set(key, unsortedMap.get(key));
    });
    return sortedMap;
}


/***/ }),

/***/ "./src/assets/typedoc-json/doc.json":
/*!******************************************!*\
  !*** ./src/assets/typedoc-json/doc.json ***!
  \******************************************/
/*! exports provided: id, name, kind, flags, children, groups, default */
/***/ (function(module) {

module.exports = {"id":0,"name":"mobius-parametric-modeller","kind":0,"flags":{},"children":[{"id":1419,"name":"\"core/modules/_check_args\"","kind":1,"kindString":"External module","flags":{"isExported":true},"originalName":"C:/Dropbox/Files/Software/GitHub/design-automation/mobius-parametric-modeller/src/assets/core/modules/_check_args.ts","children":[{"id":1546,"name":"IDcheckObj","kind":128,"kindString":"Class","flags":{"isExported":true},"children":[{"id":1547,"name":"default_ent_type_strs","kind":1024,"kindString":"Property","flags":{"isStatic":true,"isExported":true},"sources":[{"fileName":"core/modules/_check_args.ts","line":300,"character":32}],"type":{"type":"array","elementType":{"type":"reference","name":"EEntType","id":125}},"defaultValue":" [EEntType.POSI,\r\n                                    EEntType.TRI,\r\n                                    EEntType.VERT,\r\n                                    EEntType.EDGE,\r\n                                    EEntType.WIRE,\r\n                                    EEntType.FACE,\r\n                                    EEntType.POINT,\r\n                                    EEntType.PLINE,\r\n                                    EEntType.PGON,\r\n                                    EEntType.COLL]"},{"id":1548,"name":"isID","kind":2048,"kindString":"Method","flags":{"isStatic":true,"isExported":true},"signatures":[{"id":1549,"name":"isID","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1550,"name":"fn_name","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":1551,"name":"arg_name","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":1552,"name":"arg","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}},{"id":1553,"name":"ent_type_strs","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"union","types":[{"type":"array","elementType":{"type":"reference","name":"EEntType","id":125}},{"type":"intrinsic","name":"null"}]}}],"type":{"type":"reference","name":"TEntTypeIdx","id":270}}],"sources":[{"fileName":"core/modules/_check_args.ts","line":313,"character":15}]},{"id":1554,"name":"isIDList","kind":2048,"kindString":"Method","flags":{"isStatic":true,"isExported":true},"signatures":[{"id":1555,"name":"isIDList","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1556,"name":"fn_name","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":1557,"name":"arg_name","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":1558,"name":"arg_list","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}},{"id":1559,"name":"ent_type_strs","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"union","types":[{"type":"array","elementType":{"type":"reference","name":"EEntType","id":125}},{"type":"intrinsic","name":"null"}]}}],"type":{"type":"array","elementType":{"type":"reference","name":"TEntTypeIdx","id":270}}}],"sources":[{"fileName":"core/modules/_check_args.ts","line":333,"character":19}]},{"id":1560,"name":"isIDList_list","kind":2048,"kindString":"Method","flags":{"isStatic":true,"isExported":true},"signatures":[{"id":1561,"name":"isIDList_list","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1562,"name":"fn_name","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":1563,"name":"arg_name","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":1564,"name":"arg_list","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}},{"id":1565,"name":"ent_type_strs","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"union","types":[{"type":"array","elementType":{"type":"reference","name":"EEntType","id":125}},{"type":"intrinsic","name":"null"}]}}],"type":{"type":"array","elementType":{"type":"array","elementType":{"type":"reference","name":"TEntTypeIdx","id":270}}}}],"sources":[{"fileName":"core/modules/_check_args.ts","line":359,"character":24}]}],"groups":[{"title":"Properties","kind":1024,"children":[1547]},{"title":"Methods","kind":2048,"children":[1548,1554,1560]}],"sources":[{"fileName":"core/modules/_check_args.ts","line":298,"character":23}]},{"id":1420,"name":"TypeCheckObj","kind":128,"kindString":"Class","flags":{"isExported":true},"children":[{"id":1431,"name":"isAny","kind":2048,"kindString":"Method","flags":{"isStatic":true,"isExported":true},"signatures":[{"id":1432,"name":"isAny","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1433,"name":"fn_name","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":1434,"name":"arg_name","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":1435,"name":"arg","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"core/modules/_check_args.ts","line":156,"character":16}]},{"id":1526,"name":"isBBox","kind":2048,"kindString":"Method","flags":{"isStatic":true,"isExported":true},"signatures":[{"id":1527,"name":"isBBox","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1528,"name":"fn_name","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":1529,"name":"arg_name","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":1530,"name":"arg_list","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"array","elementType":{"type":"tuple","elements":[{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"number"}]}}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"core/modules/_check_args.ts","line":266,"character":17}]},{"id":1531,"name":"isBBoxList","kind":2048,"kindString":"Method","flags":{"isStatic":true,"isExported":true},"signatures":[{"id":1532,"name":"isBBoxList","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1533,"name":"fn_name","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":1534,"name":"arg_name","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":1535,"name":"arg_list","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"array","elementType":{"type":"array","elementType":{"type":"tuple","elements":[{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"number"}]}}}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"core/modules/_check_args.ts","line":276,"character":21}]},{"id":1486,"name":"isCoord","kind":2048,"kindString":"Method","flags":{"isStatic":true,"isExported":true},"signatures":[{"id":1487,"name":"isCoord","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1488,"name":"fn_name","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":1489,"name":"arg_name","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":1490,"name":"arg","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"tuple","elements":[{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"number"}]}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"core/modules/_check_args.ts","line":209,"character":18}]},{"id":1491,"name":"isCoordList","kind":2048,"kindString":"Method","flags":{"isStatic":true,"isExported":true},"signatures":[{"id":1492,"name":"isCoordList","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1493,"name":"fn_name","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":1494,"name":"arg_name","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":1495,"name":"arg_list","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"array","elementType":{"type":"tuple","elements":[{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"number"}]}}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"core/modules/_check_args.ts","line":215,"character":22}]},{"id":1496,"name":"isCoordList_List","kind":2048,"kindString":"Method","flags":{"isStatic":true,"isExported":true},"signatures":[{"id":1497,"name":"isCoordList_List","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1498,"name":"fn_name","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":1499,"name":"arg_name","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":1500,"name":"arg_list","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"array","elementType":{"type":"array","elementType":{"type":"tuple","elements":[{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"number"}]}}}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"core/modules/_check_args.ts","line":223,"character":27}]},{"id":1421,"name":"isEntity","kind":2048,"kindString":"Method","flags":{"isStatic":true,"isExported":true},"signatures":[{"id":1422,"name":"isEntity","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1423,"name":"fn_name","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":1424,"name":"arg_name","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":1425,"name":"arg","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"core/modules/_check_args.ts","line":141,"character":19}]},{"id":1426,"name":"isEntityList","kind":2048,"kindString":"Method","flags":{"isStatic":true,"isExported":true},"signatures":[{"id":1427,"name":"isEntityList","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1428,"name":"fn_name","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":1429,"name":"arg_name","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":1430,"name":"arg_list","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"core/modules/_check_args.ts","line":148,"character":23}]},{"id":1466,"name":"isInt","kind":2048,"kindString":"Method","flags":{"isStatic":true,"isExported":true},"signatures":[{"id":1467,"name":"isInt","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1468,"name":"fn_name","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":1469,"name":"arg_name","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":1470,"name":"arg","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"core/modules/_check_args.ts","line":188,"character":16}]},{"id":1441,"name":"isList","kind":2048,"kindString":"Method","flags":{"isStatic":true,"isExported":true},"signatures":[{"id":1442,"name":"isList","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1443,"name":"fn_name","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":1444,"name":"arg_name","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":1445,"name":"arg","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"core/modules/_check_args.ts","line":166,"character":17}]},{"id":1436,"name":"isNull","kind":2048,"kindString":"Method","flags":{"isStatic":true,"isExported":true},"signatures":[{"id":1437,"name":"isNull","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1438,"name":"fn_name","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":1439,"name":"arg_name","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":1440,"name":"arg","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"core/modules/_check_args.ts","line":161,"character":17}]},{"id":1456,"name":"isNumber","kind":2048,"kindString":"Method","flags":{"isStatic":true,"isExported":true},"signatures":[{"id":1457,"name":"isNumber","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1458,"name":"fn_name","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":1459,"name":"arg_name","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":1460,"name":"arg","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"core/modules/_check_args.ts","line":180,"character":19}]},{"id":1461,"name":"isNumberList","kind":2048,"kindString":"Method","flags":{"isStatic":true,"isExported":true},"signatures":[{"id":1462,"name":"isNumberList","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1463,"name":"fn_name","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":1464,"name":"arg_name","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":1465,"name":"arg_list","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"core/modules/_check_args.ts","line":184,"character":23}]},{"id":1511,"name":"isOrigin","kind":2048,"kindString":"Method","flags":{"isStatic":true,"isExported":true},"signatures":[{"id":1512,"name":"isOrigin","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1513,"name":"fn_name","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":1514,"name":"arg_name","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":1515,"name":"arg","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}}],"type":{"type":"reference","name":"TEntTypeIdx","id":270}}],"sources":[{"fileName":"core/modules/_check_args.ts","line":244,"character":19}]},{"id":1516,"name":"isPlane","kind":2048,"kindString":"Method","flags":{"isStatic":true,"isExported":true},"signatures":[{"id":1517,"name":"isPlane","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1518,"name":"fn_name","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":1519,"name":"arg_name","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":1520,"name":"arg_list","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"array","elementType":{"type":"tuple","elements":[{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"number"}]}}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"core/modules/_check_args.ts","line":249,"character":18}]},{"id":1521,"name":"isPlaneList","kind":2048,"kindString":"Method","flags":{"isStatic":true,"isExported":true},"signatures":[{"id":1522,"name":"isPlaneList","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1523,"name":"fn_name","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":1524,"name":"arg_name","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":1525,"name":"arg_list","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"array","elementType":{"type":"array","elementType":{"type":"tuple","elements":[{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"number"}]}}}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"core/modules/_check_args.ts","line":259,"character":22}]},{"id":1536,"name":"isRay","kind":2048,"kindString":"Method","flags":{"isStatic":true,"isExported":true},"signatures":[{"id":1537,"name":"isRay","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1538,"name":"fn_name","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":1539,"name":"arg_name","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":1540,"name":"arg_list","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"array","elementType":{"type":"tuple","elements":[{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"number"}]}}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"core/modules/_check_args.ts","line":283,"character":16}]},{"id":1541,"name":"isRayList","kind":2048,"kindString":"Method","flags":{"isStatic":true,"isExported":true},"signatures":[{"id":1542,"name":"isRayList","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1543,"name":"fn_name","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":1544,"name":"arg_name","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":1545,"name":"arg_list","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"array","elementType":{"type":"array","elementType":{"type":"tuple","elements":[{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"number"}]}}}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"core/modules/_check_args.ts","line":290,"character":20}]},{"id":1446,"name":"isString","kind":2048,"kindString":"Method","flags":{"isStatic":true,"isExported":true},"signatures":[{"id":1447,"name":"isString","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1448,"name":"fn_name","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":1449,"name":"arg_name","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":1450,"name":"arg","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"core/modules/_check_args.ts","line":171,"character":19}]},{"id":1451,"name":"isStringList","kind":2048,"kindString":"Method","flags":{"isStatic":true,"isExported":true},"signatures":[{"id":1452,"name":"isStringList","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1453,"name":"fn_name","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":1454,"name":"arg_name","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":1455,"name":"arg_list","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"core/modules/_check_args.ts","line":175,"character":23}]},{"id":1501,"name":"isVector","kind":2048,"kindString":"Method","flags":{"isStatic":true,"isExported":true},"signatures":[{"id":1502,"name":"isVector","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1503,"name":"fn_name","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":1504,"name":"arg_name","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":1505,"name":"arg_list","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"tuple","elements":[{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"number"}]}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"core/modules/_check_args.ts","line":233,"character":19}]},{"id":1506,"name":"isVectorList","kind":2048,"kindString":"Method","flags":{"isStatic":true,"isExported":true},"signatures":[{"id":1507,"name":"isVectorList","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1508,"name":"fn_name","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":1509,"name":"arg_name","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":1510,"name":"arg_list","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"array","elementType":{"type":"tuple","elements":[{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"number"}]}}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"core/modules/_check_args.ts","line":237,"character":23}]},{"id":1481,"name":"isXYZlist","kind":2048,"kindString":"Method","flags":{"isStatic":true,"isExported":true},"signatures":[{"id":1482,"name":"isXYZlist","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1483,"name":"fn_name","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":1484,"name":"arg_name","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":1485,"name":"arg_list","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"tuple","elements":[{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"number"}]}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"core/modules/_check_args.ts","line":204,"character":20}]},{"id":1471,"name":"isXYlist","kind":2048,"kindString":"Method","flags":{"isStatic":true,"isExported":true},"signatures":[{"id":1472,"name":"isXYlist","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1473,"name":"fn_name","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":1474,"name":"arg_name","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":1475,"name":"arg_list","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"tuple","elements":[{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"number"}]}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"core/modules/_check_args.ts","line":192,"character":19}]},{"id":1476,"name":"isXYlistInt","kind":2048,"kindString":"Method","flags":{"isStatic":true,"isExported":true},"signatures":[{"id":1477,"name":"isXYlistInt","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1478,"name":"fn_name","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":1479,"name":"arg_name","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":1480,"name":"arg_list","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"tuple","elements":[{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"number"}]}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"core/modules/_check_args.ts","line":198,"character":22}]}],"groups":[{"title":"Methods","kind":2048,"children":[1431,1526,1531,1486,1491,1496,1421,1426,1466,1441,1436,1456,1461,1511,1516,1521,1536,1541,1446,1451,1501,1506,1481,1471,1476]}],"sources":[{"fileName":"core/modules/_check_args.ts","line":139,"character":25}]},{"id":1571,"name":"checkAttribNameValue","kind":64,"kindString":"Function","flags":{"isExported":true},"signatures":[{"id":1572,"name":"checkAttribNameValue","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1573,"name":"fn_name","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":1574,"name":"attrib_name","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":1575,"name":"attrib_value","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}},{"id":1576,"name":"attrib_index","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"core/modules/_check_args.ts","line":21,"character":36}]},{"id":1577,"name":"checkCommTypes","kind":64,"kindString":"Function","flags":{"isExported":true},"signatures":[{"id":1578,"name":"checkCommTypes","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1579,"name":"fn_name","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":1580,"name":"arg_name","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":1581,"name":"arg","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}},{"id":1582,"name":"check_fns","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"array","elementType":{"type":"reference","name":"Function"}}}],"type":{"type":"union","types":[{"type":"intrinsic","name":"void"},{"type":"reference","name":"TEntTypeIdx","id":270},{"type":"array","elementType":{"type":"reference","name":"TEntTypeIdx","id":270}},{"type":"array","elementType":{"type":"array","elementType":{"type":"reference","name":"TEntTypeIdx","id":270}}}]}}],"sources":[{"fileName":"core/modules/_check_args.ts","line":370,"character":30}]},{"id":1590,"name":"checkIDnTypes","kind":64,"kindString":"Function","flags":{"isExported":true},"signatures":[{"id":1591,"name":"checkIDnTypes","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1592,"name":"fn_name","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":1593,"name":"arg_name","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":1594,"name":"arg","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}},{"id":1595,"name":"check_fns","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"array","elementType":{"type":"reference","name":"Function"}}},{"id":1596,"name":"IDchecks","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"union","types":[{"type":"array","elementType":{"type":"reference","name":"EEntType","id":125}},{"type":"intrinsic","name":"null"}]}}],"type":{"type":"union","types":[{"type":"reference","name":"TEntTypeIdx","id":270},{"type":"array","elementType":{"type":"reference","name":"TEntTypeIdx","id":270}},{"type":"array","elementType":{"type":"array","elementType":{"type":"reference","name":"TEntTypeIdx","id":270}}}]}}],"sources":[{"fileName":"core/modules/_check_args.ts","line":416,"character":29}]},{"id":1583,"name":"checkIDs","kind":64,"kindString":"Function","flags":{"isExported":true},"signatures":[{"id":1584,"name":"checkIDs","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1585,"name":"fn_name","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":1586,"name":"arg_name","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":1587,"name":"arg","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}},{"id":1588,"name":"check_fns","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"array","elementType":{"type":"reference","name":"Function"}}},{"id":1589,"name":"IDchecks","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"union","types":[{"type":"array","elementType":{"type":"reference","name":"EEntType","id":125}},{"type":"intrinsic","name":"null"}]}}],"type":{"type":"union","types":[{"type":"reference","name":"TEntTypeIdx","id":270},{"type":"array","elementType":{"type":"reference","name":"TEntTypeIdx","id":270}},{"type":"array","elementType":{"type":"array","elementType":{"type":"reference","name":"TEntTypeIdx","id":270}}}]}}],"sources":[{"fileName":"core/modules/_check_args.ts","line":392,"character":24}]},{"id":1609,"name":"isAnyArg","kind":64,"kindString":"Function","flags":{},"signatures":[{"id":1610,"name":"isAnyArg","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1611,"name":"fn_name","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":1612,"name":"arg_name","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":1613,"name":"arg","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"core/modules/_check_args.ts","line":477,"character":17}]},{"id":1641,"name":"isIntArg","kind":64,"kindString":"Function","flags":{},"signatures":[{"id":1642,"name":"isIntArg","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1643,"name":"fn_name","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":1644,"name":"arg_name","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":1645,"name":"arg","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"core/modules/_check_args.ts","line":520,"character":17}]},{"id":1646,"name":"isIntListArg","kind":64,"kindString":"Function","flags":{},"signatures":[{"id":1647,"name":"isIntListArg","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1648,"name":"fn_name","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":1649,"name":"arg_name","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":1650,"name":"arg_list","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"core/modules/_check_args.ts","line":526,"character":21}]},{"id":1597,"name":"isListArg","kind":64,"kindString":"Function","flags":{},"signatures":[{"id":1598,"name":"isListArg","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1599,"name":"fn_name","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":1600,"name":"arg_name","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":1601,"name":"arg","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}},{"id":1602,"name":"typ","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"core/modules/_check_args.ts","line":464,"character":18}]},{"id":1603,"name":"isListLenArg","kind":64,"kindString":"Function","flags":{},"signatures":[{"id":1604,"name":"isListLenArg","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1605,"name":"fn_name","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":1606,"name":"arg_name","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":1607,"name":"arg_list","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}},{"id":1608,"name":"len","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"core/modules/_check_args.ts","line":470,"character":21}]},{"id":1614,"name":"isNullArg","kind":64,"kindString":"Function","flags":{},"signatures":[{"id":1615,"name":"isNullArg","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1616,"name":"fn_name","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":1617,"name":"arg_name","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":1618,"name":"arg","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"core/modules/_check_args.ts","line":484,"character":18}]},{"id":1631,"name":"isNumberArg","kind":64,"kindString":"Function","flags":{},"signatures":[{"id":1632,"name":"isNumberArg","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1633,"name":"fn_name","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":1634,"name":"arg_name","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":1635,"name":"arg","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"core/modules/_check_args.ts","line":505,"character":20}]},{"id":1636,"name":"isNumberListArg","kind":64,"kindString":"Function","flags":{},"signatures":[{"id":1637,"name":"isNumberListArg","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1638,"name":"fn_name","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":1639,"name":"arg_name","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":1640,"name":"arg_list","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"core/modules/_check_args.ts","line":511,"character":24}]},{"id":1619,"name":"isStringArg","kind":64,"kindString":"Function","flags":{},"signatures":[{"id":1620,"name":"isStringArg","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1621,"name":"fn_name","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":1622,"name":"arg_name","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":1623,"name":"arg","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}},{"id":1624,"name":"typ","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"core/modules/_check_args.ts","line":491,"character":20}]},{"id":1625,"name":"isStringListArg","kind":64,"kindString":"Function","flags":{},"signatures":[{"id":1626,"name":"isStringListArg","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1627,"name":"fn_name","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":1628,"name":"arg_name","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":1629,"name":"arg_list","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}},{"id":1630,"name":"typ","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"core/modules/_check_args.ts","line":497,"character":24}]},{"id":1566,"name":"isValidName","kind":64,"kindString":"Function","flags":{},"signatures":[{"id":1567,"name":"isValidName","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1568,"name":"fn_name","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":1569,"name":"arg_name","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":1570,"name":"arg","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"core/modules/_check_args.ts","line":8,"character":20}]}],"groups":[{"title":"Classes","kind":128,"children":[1546,1420]},{"title":"Functions","kind":64,"children":[1571,1577,1590,1583,1609,1641,1646,1597,1603,1614,1631,1636,1619,1625,1566]}],"sources":[{"fileName":"core/modules/_check_args.ts","line":1,"character":0}]},{"id":2789,"name":"\"core/modules/_constants\"","kind":1,"kindString":"External module","flags":{"isExported":true},"originalName":"C:/Dropbox/Files/Software/GitHub/design-automation/mobius-parametric-modeller/src/assets/core/modules/_constants.ts","children":[{"id":2790,"name":"XY","kind":32,"kindString":"Variable","flags":{"isExported":true,"isConst":true},"sources":[{"fileName":"core/modules/_constants.ts","line":3,"character":15}],"type":{"type":"intrinsic","name":"Object"},"defaultValue":" XYPLANE"},{"id":2795,"name":"XZ","kind":32,"kindString":"Variable","flags":{"isExported":true,"isConst":true},"sources":[{"fileName":"core/modules/_constants.ts","line":9,"character":15}],"type":{"type":"intrinsic","name":"Object"},"defaultValue":" XZPLANE"},{"id":2793,"name":"YX","kind":32,"kindString":"Variable","flags":{"isExported":true,"isConst":true},"sources":[{"fileName":"core/modules/_constants.ts","line":7,"character":15}],"type":{"type":"intrinsic","name":"Object"},"defaultValue":" YXPLANE"},{"id":2791,"name":"YZ","kind":32,"kindString":"Variable","flags":{"isExported":true,"isConst":true},"sources":[{"fileName":"core/modules/_constants.ts","line":4,"character":15}],"type":{"type":"intrinsic","name":"Object"},"defaultValue":" YZPLANE"},{"id":2792,"name":"ZX","kind":32,"kindString":"Variable","flags":{"isExported":true,"isConst":true},"sources":[{"fileName":"core/modules/_constants.ts","line":5,"character":15}],"type":{"type":"intrinsic","name":"Object"},"defaultValue":" ZXPLANE"},{"id":2794,"name":"ZY","kind":32,"kindString":"Variable","flags":{"isExported":true,"isConst":true},"sources":[{"fileName":"core/modules/_constants.ts","line":8,"character":15}],"type":{"type":"intrinsic","name":"Object"},"defaultValue":" ZYPLANE"}],"groups":[{"title":"Variables","kind":32,"children":[2790,2795,2793,2791,2792,2794]}],"sources":[{"fileName":"core/modules/_constants.ts","line":1,"character":0}]},{"id":2782,"name":"\"core/modules/_conversion\"","kind":1,"kindString":"External module","flags":{"isExported":true},"originalName":"C:/Dropbox/Files/Software/GitHub/design-automation/mobius-parametric-modeller/src/assets/core/modules/_conversion.ts","children":[{"id":2786,"name":"degToRad","kind":64,"kindString":"Function","flags":{"isExported":true},"signatures":[{"id":2787,"name":"degToRad","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":2788,"name":"deg","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"number"}}],"sources":[{"fileName":"core/modules/_conversion.ts","line":4,"character":24}]},{"id":2783,"name":"radToDeg","kind":64,"kindString":"Function","flags":{"isExported":true},"signatures":[{"id":2784,"name":"radToDeg","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":2785,"name":"rad","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"number"}}],"sources":[{"fileName":"core/modules/_conversion.ts","line":1,"character":24}]}],"groups":[{"title":"Functions","kind":64,"children":[2786,2783]}],"sources":[{"fileName":"core/modules/_conversion.ts","line":1,"character":0}]},{"id":2701,"name":"\"core/modules/_list\"","kind":1,"kindString":"External module","flags":{"isExported":true},"originalName":"C:/Dropbox/Files/Software/GitHub/design-automation/mobius-parametric-modeller/src/assets/core/modules/_list.ts","children":[{"id":2707,"name":"isList","kind":64,"kindString":"Function","flags":{"isExported":true},"signatures":[{"id":2708,"name":"isList","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":2709,"name":"list","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"boolean"}}],"sources":[{"fileName":"core/modules/_list.ts","line":20,"character":22}]},{"id":2763,"name":"length","kind":64,"kindString":"Function","flags":{"isExported":true},"signatures":[{"id":2764,"name":"length","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":2765,"name":"list","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"type":{"type":"intrinsic","name":"number"}}],"sources":[{"fileName":"core/modules/_list.ts","line":131,"character":22}]},{"id":2717,"name":"listCopy","kind":64,"kindString":"Function","flags":{"isExported":true},"signatures":[{"id":2718,"name":"listCopy","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":2719,"name":"list","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"sources":[{"fileName":"core/modules/_list.ts","line":38,"character":24}]},{"id":2713,"name":"listCount","kind":64,"kindString":"Function","flags":{"isExported":true},"signatures":[{"id":2714,"name":"listCount","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":2715,"name":"list","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}},{"id":2716,"name":"val","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"number"}}],"sources":[{"fileName":"core/modules/_list.ts","line":28,"character":25}]},{"id":2727,"name":"listFind","kind":64,"kindString":"Function","flags":{"isExported":true},"signatures":[{"id":2728,"name":"listFind","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":2729,"name":"list","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}},{"id":2730,"name":"val","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"number"}}],"sources":[{"fileName":"core/modules/_list.ts","line":52,"character":24}]},{"id":2739,"name":"listFlat","kind":64,"kindString":"Function","flags":{"isExported":true},"signatures":[{"id":2740,"name":"listFlat","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":2741,"name":"list","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}},{"id":2742,"name":"depth","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"sources":[{"fileName":"core/modules/_list.ts","line":71,"character":24}]},{"id":2723,"name":"listGet","kind":64,"kindString":"Function","flags":{"isExported":true},"signatures":[{"id":2724,"name":"listGet","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":2725,"name":"list","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}},{"id":2726,"name":"index","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"union","types":[{"type":"intrinsic","name":"number"},{"type":"array","elementType":{"type":"intrinsic","name":"number"}}]}}],"type":{"type":"union","types":[{"type":"intrinsic","name":"any"},{"type":"array","elementType":{"type":"intrinsic","name":"any"}}]}}],"sources":[{"fileName":"core/modules/_list.ts","line":46,"character":23}]},{"id":2731,"name":"listHas","kind":64,"kindString":"Function","flags":{"isExported":true},"signatures":[{"id":2732,"name":"listHas","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":2733,"name":"list","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}},{"id":2734,"name":"val","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"boolean"}}],"sources":[{"fileName":"core/modules/_list.ts","line":56,"character":23}]},{"id":2735,"name":"listJoin","kind":64,"kindString":"Function","flags":{"isExported":true},"signatures":[{"id":2736,"name":"listJoin","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":2737,"name":"list1","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}},{"id":2738,"name":"list2","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"sources":[{"fileName":"core/modules/_list.ts","line":65,"character":24}]},{"id":2720,"name":"listLast","kind":64,"kindString":"Function","flags":{"isExported":true},"signatures":[{"id":2721,"name":"listLast","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":2722,"name":"list","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"type":{"type":"intrinsic","name":"number"}}],"sources":[{"fileName":"core/modules/_list.ts","line":42,"character":24}]},{"id":2710,"name":"listLen","kind":64,"kindString":"Function","flags":{"isExported":true},"signatures":[{"id":2711,"name":"listLen","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":2712,"name":"list","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"type":{"type":"intrinsic","name":"number"}}],"sources":[{"fileName":"core/modules/_list.ts","line":24,"character":23}]},{"id":2743,"name":"listSlice","kind":64,"kindString":"Function","flags":{"isExported":true},"signatures":[{"id":2744,"name":"listSlice","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":2745,"name":"list","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}},{"id":2746,"name":"start","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":2747,"name":"end","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"sources":[{"fileName":"core/modules/_list.ts","line":77,"character":25}]},{"id":2748,"name":"listZip","kind":64,"kindString":"Function","flags":{"isExported":true},"signatures":[{"id":2749,"name":"listZip","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":2750,"name":"lists","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"array","elementType":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"sources":[{"fileName":"core/modules/_list.ts","line":81,"character":23}]},{"id":2751,"name":"listZip2","kind":64,"kindString":"Function","flags":{"isExported":true},"signatures":[{"id":2752,"name":"listZip2","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":2753,"name":"lists","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"array","elementType":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"sources":[{"fileName":"core/modules/_list.ts","line":88,"character":24}]},{"id":2702,"name":"range","kind":64,"kindString":"Function","flags":{"isExported":true},"signatures":[{"id":2703,"name":"range","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"list functions that obtain and return information from an input list. Does not modify input list."},"parameters":[{"id":2704,"name":"start","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":2705,"name":"end","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":2706,"name":"step","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}}],"sources":[{"fileName":"core/modules/_list.ts","line":5,"character":21}]},{"id":2754,"name":"shuffle","kind":64,"kindString":"Function","flags":{"isExported":true},"signatures":[{"id":2755,"name":"shuffle","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":2756,"name":"list","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"sources":[{"fileName":"core/modules/_list.ts","line":114,"character":23}]},{"id":2757,"name":"zip","kind":64,"kindString":"Function","flags":{"isExported":true},"signatures":[{"id":2758,"name":"zip","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":2759,"name":"lists","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"array","elementType":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"sources":[{"fileName":"core/modules/_list.ts","line":121,"character":19}]},{"id":2760,"name":"zip2","kind":64,"kindString":"Function","flags":{"isExported":true},"signatures":[{"id":2761,"name":"zip2","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":2762,"name":"lists","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"array","elementType":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"sources":[{"fileName":"core/modules/_list.ts","line":126,"character":20}]}],"groups":[{"title":"Functions","kind":64,"children":[2707,2763,2717,2713,2727,2739,2723,2731,2735,2720,2710,2743,2748,2751,2702,2754,2757,2760]}],"sources":[{"fileName":"core/modules/_list.ts","line":1,"character":0}]},{"id":1210,"name":"\"core/modules/_mathjs\"","kind":1,"kindString":"External module","flags":{"isExported":true},"originalName":"C:/Dropbox/Files/Software/GitHub/design-automation/mobius-parametric-modeller/src/assets/core/modules/_mathjs.ts","children":[{"id":1211,"name":"boolean","kind":32,"kindString":"Variable","flags":{"isExported":true,"isConst":true},"sources":[{"fileName":"core/modules/_mathjs.ts","line":3,"character":20}],"type":{"type":"intrinsic","name":"any"},"defaultValue":" Mathjs.boolean"},{"id":1226,"name":"cube","kind":32,"kindString":"Variable","flags":{"isExported":true,"isConst":true},"sources":[{"fileName":"core/modules/_mathjs.ts","line":18,"character":17}],"type":{"type":"intrinsic","name":"any"},"defaultValue":" Mathjs.cube"},{"id":1227,"name":"distance","kind":32,"kindString":"Variable","flags":{"isExported":true,"isConst":true},"sources":[{"fileName":"core/modules/_mathjs.ts","line":19,"character":21}],"type":{"type":"intrinsic","name":"any"},"defaultValue":" Mathjs.distance"},{"id":1222,"name":"hypot","kind":32,"kindString":"Variable","flags":{"isExported":true,"isConst":true},"sources":[{"fileName":"core/modules/_mathjs.ts","line":14,"character":18}],"type":{"type":"intrinsic","name":"any"},"defaultValue":" Mathjs.hypot"},{"id":1214,"name":"mad","kind":32,"kindString":"Variable","flags":{"isExported":true,"isConst":true},"sources":[{"fileName":"core/modules/_mathjs.ts","line":6,"character":16}],"type":{"type":"intrinsic","name":"any"},"defaultValue":" Mathjs.mad"},{"id":1215,"name":"mean","kind":32,"kindString":"Variable","flags":{"isExported":true,"isConst":true},"sources":[{"fileName":"core/modules/_mathjs.ts","line":7,"character":17}],"type":{"type":"intrinsic","name":"any"},"defaultValue":" Mathjs.mean"},{"id":1216,"name":"median","kind":32,"kindString":"Variable","flags":{"isExported":true,"isConst":true},"sources":[{"fileName":"core/modules/_mathjs.ts","line":8,"character":19}],"type":{"type":"intrinsic","name":"any"},"defaultValue":" Mathjs.median"},{"id":1224,"name":"mod","kind":32,"kindString":"Variable","flags":{"isExported":true,"isConst":true},"sources":[{"fileName":"core/modules/_mathjs.ts","line":16,"character":16}],"type":{"type":"intrinsic","name":"any"},"defaultValue":" Mathjs.mod"},{"id":1217,"name":"mode","kind":32,"kindString":"Variable","flags":{"isExported":true,"isConst":true},"sources":[{"fileName":"core/modules/_mathjs.ts","line":9,"character":17}],"type":{"type":"intrinsic","name":"any"},"defaultValue":" Mathjs.mode"},{"id":1223,"name":"norm","kind":32,"kindString":"Variable","flags":{"isExported":true,"isConst":true},"sources":[{"fileName":"core/modules/_mathjs.ts","line":15,"character":17}],"type":{"type":"intrinsic","name":"any"},"defaultValue":" Mathjs.norm"},{"id":1212,"name":"number","kind":32,"kindString":"Variable","flags":{"isExported":true,"isConst":true},"sources":[{"fileName":"core/modules/_mathjs.ts","line":4,"character":19}],"type":{"type":"intrinsic","name":"any"},"defaultValue":" Mathjs.number"},{"id":1230,"name":"pickRandom","kind":32,"kindString":"Variable","flags":{"isExported":true,"isConst":true},"sources":[{"fileName":"core/modules/_mathjs.ts","line":22,"character":23}],"type":{"type":"intrinsic","name":"any"},"defaultValue":" Mathjs.pickRandom"},{"id":1218,"name":"prod","kind":32,"kindString":"Variable","flags":{"isExported":true,"isConst":true},"sources":[{"fileName":"core/modules/_mathjs.ts","line":10,"character":17}],"type":{"type":"intrinsic","name":"any"},"defaultValue":" Mathjs.prod"},{"id":1228,"name":"random","kind":32,"kindString":"Variable","flags":{"isExported":true,"isConst":true},"sources":[{"fileName":"core/modules/_mathjs.ts","line":20,"character":19}],"type":{"type":"intrinsic","name":"any"},"defaultValue":" Mathjs.random"},{"id":1229,"name":"randomInt","kind":32,"kindString":"Variable","flags":{"isExported":true,"isConst":true},"sources":[{"fileName":"core/modules/_mathjs.ts","line":21,"character":22}],"type":{"type":"intrinsic","name":"any"},"defaultValue":" Mathjs.randomInt"},{"id":1225,"name":"square","kind":32,"kindString":"Variable","flags":{"isExported":true,"isConst":true},"sources":[{"fileName":"core/modules/_mathjs.ts","line":17,"character":19}],"type":{"type":"intrinsic","name":"any"},"defaultValue":" Mathjs.square"},{"id":1219,"name":"std","kind":32,"kindString":"Variable","flags":{"isExported":true,"isConst":true},"sources":[{"fileName":"core/modules/_mathjs.ts","line":11,"character":16}],"type":{"type":"intrinsic","name":"any"},"defaultValue":" Mathjs.std"},{"id":1213,"name":"string","kind":32,"kindString":"Variable","flags":{"isExported":true,"isConst":true},"sources":[{"fileName":"core/modules/_mathjs.ts","line":5,"character":19}],"type":{"type":"intrinsic","name":"any"},"defaultValue":" Mathjs.string"},{"id":1221,"name":"sum","kind":32,"kindString":"Variable","flags":{"isExported":true,"isConst":true},"sources":[{"fileName":"core/modules/_mathjs.ts","line":13,"character":16}],"type":{"type":"intrinsic","name":"any"},"defaultValue":" Mathjs.sum"},{"id":1220,"name":"vari","kind":32,"kindString":"Variable","flags":{"isExported":true,"isConst":true},"sources":[{"fileName":"core/modules/_mathjs.ts","line":12,"character":17}],"type":{"type":"intrinsic","name":"any"},"defaultValue":" Mathjs.var"}],"groups":[{"title":"Variables","kind":32,"children":[1211,1226,1227,1222,1214,1215,1216,1224,1217,1223,1212,1230,1218,1228,1229,1225,1219,1213,1221,1220]}],"sources":[{"fileName":"core/modules/_mathjs.ts","line":1,"character":0}]},{"id":1719,"name":"\"core/modules/_model\"","kind":1,"kindString":"External module","flags":{"isExported":true},"originalName":"C:/Dropbox/Files/Software/GitHub/design-automation/mobius-parametric-modeller/src/assets/core/modules/_model.ts","children":[{"id":1769,"name":"__checkModel__","kind":64,"kindString":"Function","flags":{"isExported":true},"signatures":[{"id":1770,"name":"__checkModel__","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Checks the model for internal consistency."},"parameters":[{"id":1771,"name":"__model__","kind":32768,"kindString":"Parameter","flags":{},"comment":{"shortText":"\n"},"type":{"type":"reference","name":"GIModel","id":1393}}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}}],"sources":[{"fileName":"core/modules/_model.ts","line":231,"character":30}]},{"id":1755,"name":"__getAttrib__","kind":64,"kindString":"Function","flags":{"isExported":true},"signatures":[{"id":1756,"name":"__getAttrib__","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Gets an attribute value from the model."},"parameters":[{"id":1757,"name":"__model__","kind":32768,"kindString":"Parameter","flags":{},"comment":{"shortText":"\n"},"type":{"type":"reference","name":"GIModel","id":1393}},{"id":1758,"name":"entities","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"union","types":[{"type":"reference","name":"TId","id":275},{"type":"array","elementType":{"type":"reference","name":"TId","id":275}}]}},{"id":1759,"name":"attrib_name","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":1760,"name":"attrib_index","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"union","types":[{"type":"reference","name":"TAttribDataTypes","id":291},{"type":"array","elementType":{"type":"reference","name":"TAttribDataTypes","id":291}}]}}],"sources":[{"fileName":"core/modules/_model.ts","line":169,"character":29}]},{"id":1728,"name":"__merge__","kind":64,"kindString":"Function","flags":{"isExported":true},"signatures":[{"id":1729,"name":"__merge__","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Merges the second model into the first model. The geometry, attribues, and groups are all merged.\nIf the models contain contain groups with the same names, then the groups will be merged."},"parameters":[{"id":1730,"name":"model1","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"The model to merge into."},"type":{"type":"reference","name":"GIModel","id":1393}},{"id":1731,"name":"model2","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"The model to merge from    .\n"},"type":{"type":"reference","name":"GIModel","id":1393}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"core/modules/_model.ts","line":48,"character":25}]},{"id":1720,"name":"__new__","kind":64,"kindString":"Function","flags":{"isExported":true},"signatures":[{"id":1721,"name":"__new__","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Creates a new empty model.","returns":"New model empty.\n"},"type":{"type":"reference","name":"GIModel","id":1393}}],"sources":[{"fileName":"core/modules/_model.ts","line":14,"character":23}]},{"id":1725,"name":"__postprocess__","kind":64,"kindString":"Function","flags":{"isExported":true},"signatures":[{"id":1726,"name":"__postprocess__","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"A function to postprocess the model, after it enters the node."},"parameters":[{"id":1727,"name":"__model__","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"GIModel","id":1393}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"core/modules/_model.ts","line":36,"character":31}]},{"id":1722,"name":"__preprocess__","kind":64,"kindString":"Function","flags":{"isExported":true},"signatures":[{"id":1723,"name":"__preprocess__","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"A function to preprocess the model, before it enters the node.\nIn cases where there is more than one model connected to a node,\nthe preprocess function will be called before the merge function."},"parameters":[{"id":1724,"name":"__model__","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"GIModel","id":1393}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"core/modules/_model.ts","line":27,"character":30}]},{"id":1764,"name":"__select__","kind":64,"kindString":"Function","flags":{"isExported":true},"signatures":[{"id":1765,"name":"__select__","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Select entities in the model."},"parameters":[{"id":1766,"name":"__model__","kind":32768,"kindString":"Parameter","flags":{},"comment":{"shortText":"\n"},"type":{"type":"reference","name":"GIModel","id":1393}},{"id":1767,"name":"ents_id","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"array","elementType":{"type":"intrinsic","name":"string"}},{"type":"array","elementType":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}}]}},{"id":1768,"name":"var_name","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"core/modules/_model.ts","line":209,"character":26}]},{"id":1742,"name":"__setAttrib__","kind":64,"kindString":"Function","flags":{"isExported":true},"signatures":[{"id":1743,"name":"__setAttrib__","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Sets an attribute value in the model."},"parameters":[{"id":1744,"name":"__model__","kind":32768,"kindString":"Parameter","flags":{},"comment":{"shortText":"\n"},"type":{"type":"reference","name":"GIModel","id":1393}},{"id":1745,"name":"entities","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"union","types":[{"type":"reference","name":"TId","id":275},{"type":"array","elementType":{"type":"reference","name":"TId","id":275}}]}},{"id":1746,"name":"attrib_name","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":1747,"name":"attrib_values","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"union","types":[{"type":"reference","name":"TAttribDataTypes","id":291},{"type":"array","elementType":{"type":"reference","name":"TAttribDataTypes","id":291}}]}},{"id":1748,"name":"attrib_index","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"core/modules/_model.ts","line":126,"character":29}]},{"id":1732,"name":"__stringify__","kind":64,"kindString":"Function","flags":{"isExported":true},"signatures":[{"id":1733,"name":"__stringify__","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Returns a string representation of this model."},"parameters":[{"id":1734,"name":"__model__","kind":32768,"kindString":"Parameter","flags":{},"comment":{"shortText":"\n"},"type":{"type":"reference","name":"GIModel","id":1393}}],"type":{"type":"intrinsic","name":"string"}}],"sources":[{"fileName":"core/modules/_model.ts","line":56,"character":29}]},{"id":1761,"name":"_flatten","kind":64,"kindString":"Function","flags":{},"signatures":[{"id":1762,"name":"_flatten","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1763,"name":"arrs","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"array","elementType":{"type":"intrinsic","name":"string"}},{"type":"array","elementType":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}}]}}],"type":{"type":"tuple","elements":[{"type":"array","elementType":{"type":"intrinsic","name":"string"}},{"type":"array","elementType":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}}]}}],"sources":[{"fileName":"core/modules/_model.ts","line":185,"character":17}]},{"id":1749,"name":"_getAttrib","kind":64,"kindString":"Function","flags":{},"signatures":[{"id":1750,"name":"_getAttrib","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1751,"name":"__model__","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"GIModel","id":1393}},{"id":1752,"name":"ents_arr","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"union","types":[{"type":"reference","name":"TEntTypeIdx","id":270},{"type":"array","elementType":{"type":"reference","name":"TEntTypeIdx","id":270}}]}},{"id":1753,"name":"attrib_name","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":1754,"name":"attrib_index","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"union","types":[{"type":"reference","name":"TAttribDataTypes","id":291},{"type":"array","elementType":{"type":"reference","name":"TAttribDataTypes","id":291}}]}}],"sources":[{"fileName":"core/modules/_model.ts","line":139,"character":19}]},{"id":1735,"name":"_setAttrib","kind":64,"kindString":"Function","flags":{},"signatures":[{"id":1736,"name":"_setAttrib","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1737,"name":"__model__","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"GIModel","id":1393}},{"id":1738,"name":"ents_arr","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"union","types":[{"type":"reference","name":"TEntTypeIdx","id":270},{"type":"array","elementType":{"type":"reference","name":"TEntTypeIdx","id":270}}]}},{"id":1739,"name":"attrib_name","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":1740,"name":"attrib_values","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"union","types":[{"type":"reference","name":"TAttribDataTypes","id":291},{"type":"array","elementType":{"type":"reference","name":"TAttribDataTypes","id":291}}]}},{"id":1741,"name":"attrib_index","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"core/modules/_model.ts","line":60,"character":19}]}],"groups":[{"title":"Functions","kind":64,"children":[1769,1755,1728,1720,1725,1722,1764,1742,1732,1761,1749,1735]}],"sources":[{"fileName":"core/modules/_model.ts","line":1,"character":0}]},{"id":2796,"name":"\"core/modules/_output\"","kind":1,"kindString":"External module","flags":{"isExported":true},"originalName":"C:/Dropbox/Files/Software/GitHub/design-automation/mobius-parametric-modeller/src/assets/core/modules/_output.ts","children":[{"id":2797,"name":"Return","kind":64,"kindString":"Function","flags":{"isExported":true},"signatures":[{"id":2798,"name":"Return","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Return certain value from the model for the flowchart's end node","returns":"Value\n","tags":[{"tag":"summary","text":"Return a specific value"}]},"parameters":[{"id":2799,"name":"__model__","kind":32768,"kindString":"Parameter","flags":{},"comment":{"shortText":"Model of the node."},"type":{"type":"reference","name":"GIModel","id":1393}},{"id":2800,"name":"value","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"Index of the value to be returned."},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"any"}}],"sources":[{"fileName":"core/modules/_output.ts","line":10,"character":22}]}],"groups":[{"title":"Functions","kind":64,"children":[2797]}],"sources":[{"fileName":"core/modules/_output.ts","line":1,"character":0}]},{"id":2801,"name":"\"core/modules/_parameterTypes\"","kind":1,"kindString":"External module","flags":{"isExported":true},"originalName":"C:/Dropbox/Files/Software/GitHub/design-automation/mobius-parametric-modeller/src/assets/core/modules/_parameterTypes.ts","children":[{"id":2817,"name":"_varString","kind":32,"kindString":"Variable","flags":{"isExported":true,"isConst":true},"sources":[{"fileName":"core/modules/_parameterTypes.ts","line":27,"character":23}],"type":{"type":"stringLiteral","value":"\nPI = Math.PI;\nXY = __modules__._constants.XY;\nYZ = __modules__._constants.YZ;\nZX = __modules__._constants.ZX;\nYX = __modules__._constants.YX;\nZY = __modules__._constants.ZY;\nXZ = __modules__._constants.XZ;\nmin = Math.min;\nmax = Math.max;\npow = Math.pow;\nsqrt = Math.sqrt;\nexp = Math.exp;\nlog = Math.log;\nround = Math.round;\nceil = Math.ceil;\nfloor = Math.floor;\nabs = Math.abs;\nsin = Math.sin;\nasin = Math.asin;\nsinh = Math.sinh;\nasinh = Math.asinh;\ncos = Math.cos;\nacos = Math.acos;\ncosh = Math.cosh;\nacosh = Math.acosh;\ntan = Math.tan;\natan = Math.atan;\ntanh = Math.tanh;\natanh = Math.atanh;\natan2 = Math.atan2;\nboolean = __modules__._mathjs.boolean;\nnumber = __modules__._mathjs.number;\nstring = __modules__._mathjs.string;\nmad = __modules__._mathjs.mad;\nmean = __modules__._mathjs.mean;\nmedian = __modules__._mathjs.median;\nmode = __modules__._mathjs.mode;\nprod = __modules__._mathjs.prod;\nstd = __modules__._mathjs.std;\nvari = __modules__._mathjs.var;\nsum = __modules__._mathjs.sum;\nhypot = __modules__._mathjs.hypot;\nnorm = __modules__._mathjs.norm;\nmod = __modules__._mathjs.mod;\nsquare = __modules__._mathjs.square;\ncube = __modules__._mathjs.cube;\ndistance = __modules__._mathjs.distance;\nrange = __modules__._list.range;\nisList = __modules__._list.isList;\nlistLen = __modules__._list.listLen;\nlistCount = __modules__._list.listCount;\nlistCopy = __modules__._list.listCopy;\nlistLast = __modules__._list.listLast;\nlistGet = __modules__._list.listGet;\nlistFind = __modules__._list.listFind;\nlistHas = __modules__._list.listHas;\nlistJoin = __modules__._list.listJoin;\nlistFlat = __modules__._list.listFlat;\nlistSlice = __modules__._list.listSlice;\nlistZip = __modules__._list.listZip;\nlistZip2 = __modules__._list.listZip2;\nsetMake = __modules__._set.setMake;\nsetUni = __modules__._set.setUni;\nsetInt = __modules__._set.setInt;\nsetDif = __modules__._set.setDif;\nlength = __modules__._list.length;\nshuffle = __modules__._list.shuffle;\nconcat = __modules__._list.concat;\nzip = __modules__._list.zip;\nzip2 = __modules__._list.zip2;\nvecAdd = __modules__._vec.vecAdd;\nvecSub = __modules__._vec.vecSub;\nvecDiv = __modules__._vec.vecDiv;\nvecMult = __modules__._vec.vecMult;\nvecLen = __modules__._vec.vecLen;\nvecSetLen = __modules__._vec.vecSetLen;\nvecNorm = __modules__._vec.vecNorm;\nvecRev = __modules__._vec.vecRev;\nvecFromTo = __modules__._vec.vecFromTo;\nvecAng = __modules__._vec.vecAng;\nvecAng2 = __modules__._vec.vecAng2;\nvecDot = __modules__._vec.vecDot;\nvecCross = __modules__._vec.vecCross;\nvecEqual = __modules__._vec.vecEqual;\nradToDeg = __modules__._conversion.radToDeg;\ndegToRad = __modules__._conversion.degToRad;\nrand = __modules__._rand.rand;\nrandInt = __modules__._rand.randInt;\nrandPick = __modules__._rand.randPick;\n"},"defaultValue":" `\r\nPI = Math.PI;\r\nXY = __modules__._constants.XY;\r\nYZ = __modules__._constants.YZ;\r\nZX = __modules__._constants.ZX;\r\nYX = __modules__._constants.YX;\r\nZY = __modules__._constants.ZY;\r\nXZ = __modules__._constants.XZ;\r\nmin = Math.min;\r\nmax = Math.max;\r\npow = Math.pow;\r\nsqrt = Math.sqrt;\r\nexp = Math.exp;\r\nlog = Math.log;\r\nround = Math.round;\r\nceil = Math.ceil;\r\nfloor = Math.floor;\r\nabs = Math.abs;\r\nsin = Math.sin;\r\nasin = Math.asin;\r\nsinh = Math.sinh;\r\nasinh = Math.asinh;\r\ncos = Math.cos;\r\nacos = Math.acos;\r\ncosh = Math.cosh;\r\nacosh = Math.acosh;\r\ntan = Math.tan;\r\natan = Math.atan;\r\ntanh = Math.tanh;\r\natanh = Math.atanh;\r\natan2 = Math.atan2;\r\nboolean = __modules__._mathjs.boolean;\r\nnumber = __modules__._mathjs.number;\r\nstring = __modules__._mathjs.string;\r\nmad = __modules__._mathjs.mad;\r\nmean = __modules__._mathjs.mean;\r\nmedian = __modules__._mathjs.median;\r\nmode = __modules__._mathjs.mode;\r\nprod = __modules__._mathjs.prod;\r\nstd = __modules__._mathjs.std;\r\nvari = __modules__._mathjs.var;\r\nsum = __modules__._mathjs.sum;\r\nhypot = __modules__._mathjs.hypot;\r\nnorm = __modules__._mathjs.norm;\r\nmod = __modules__._mathjs.mod;\r\nsquare = __modules__._mathjs.square;\r\ncube = __modules__._mathjs.cube;\r\ndistance = __modules__._mathjs.distance;\r\nrange = __modules__._list.range;\r\nisList = __modules__._list.isList;\r\nlistLen = __modules__._list.listLen;\r\nlistCount = __modules__._list.listCount;\r\nlistCopy = __modules__._list.listCopy;\r\nlistLast = __modules__._list.listLast;\r\nlistGet = __modules__._list.listGet;\r\nlistFind = __modules__._list.listFind;\r\nlistHas = __modules__._list.listHas;\r\nlistJoin = __modules__._list.listJoin;\r\nlistFlat = __modules__._list.listFlat;\r\nlistSlice = __modules__._list.listSlice;\r\nlistZip = __modules__._list.listZip;\r\nlistZip2 = __modules__._list.listZip2;\r\nsetMake = __modules__._set.setMake;\r\nsetUni = __modules__._set.setUni;\r\nsetInt = __modules__._set.setInt;\r\nsetDif = __modules__._set.setDif;\r\nlength = __modules__._list.length;\r\nshuffle = __modules__._list.shuffle;\r\nconcat = __modules__._list.concat;\r\nzip = __modules__._list.zip;\r\nzip2 = __modules__._list.zip2;\r\nvecAdd = __modules__._vec.vecAdd;\r\nvecSub = __modules__._vec.vecSub;\r\nvecDiv = __modules__._vec.vecDiv;\r\nvecMult = __modules__._vec.vecMult;\r\nvecLen = __modules__._vec.vecLen;\r\nvecSetLen = __modules__._vec.vecSetLen;\r\nvecNorm = __modules__._vec.vecNorm;\r\nvecRev = __modules__._vec.vecRev;\r\nvecFromTo = __modules__._vec.vecFromTo;\r\nvecAng = __modules__._vec.vecAng;\r\nvecAng2 = __modules__._vec.vecAng2;\r\nvecDot = __modules__._vec.vecDot;\r\nvecCross = __modules__._vec.vecCross;\r\nvecEqual = __modules__._vec.vecEqual;\r\nradToDeg = __modules__._conversion.radToDeg;\r\ndegToRad = __modules__._conversion.degToRad;\r\nrand = __modules__._rand.rand;\r\nrandInt = __modules__._rand.randInt;\r\nrandPick = __modules__._rand.randPick;\r\n`"},{"id":2802,"name":"_parameterTypes","kind":2097152,"kindString":"Object literal","flags":{"isExported":true,"isConst":true},"children":[{"id":2810,"name":"addData","kind":32,"kindString":"Variable","flags":{"isExported":true},"sources":[{"fileName":"core/modules/_parameterTypes.ts","line":14,"character":11}],"type":{"type":"intrinsic","name":"string"},"defaultValue":"\"_model.addGiData\""},{"id":2803,"name":"constList","kind":32,"kindString":"Variable","flags":{"isExported":true},"sources":[{"fileName":"core/modules/_parameterTypes.ts","line":4,"character":13}],"type":{"type":"intrinsic","name":"string"},"defaultValue":"\"__constList__\""},{"id":2814,"name":"getattrib","kind":32,"kindString":"Variable","flags":{"isExported":true},"sources":[{"fileName":"core/modules/_parameterTypes.ts","line":20,"character":13}],"type":{"type":"intrinsic","name":"string"},"defaultValue":"\"_model.__getAttrib__\""},{"id":2805,"name":"input","kind":32,"kindString":"Variable","flags":{"isExported":true},"sources":[{"fileName":"core/modules/_parameterTypes.ts","line":6,"character":9}],"type":{"type":"intrinsic","name":"string"},"defaultValue":"\"__input__\""},{"id":2808,"name":"merge","kind":32,"kindString":"Variable","flags":{"isExported":true},"sources":[{"fileName":"core/modules/_parameterTypes.ts","line":11,"character":9}],"type":{"type":"intrinsic","name":"string"},"defaultValue":"\"_model.__merge__\""},{"id":2809,"name":"mergeFn","kind":32,"kindString":"Variable","flags":{"isExported":true},"sources":[{"fileName":"core/modules/_parameterTypes.ts","line":12,"character":11}],"type":{"type":"reference","name":"__merge__","id":1728},"defaultValue":" __merge__"},{"id":2804,"name":"model","kind":32,"kindString":"Variable","flags":{"isExported":true},"sources":[{"fileName":"core/modules/_parameterTypes.ts","line":5,"character":9}],"type":{"type":"intrinsic","name":"string"},"defaultValue":"\"__model__\""},{"id":2806,"name":"new","kind":32,"kindString":"Variable","flags":{"isExported":true},"sources":[{"fileName":"core/modules/_parameterTypes.ts","line":8,"character":7}],"type":{"type":"intrinsic","name":"string"},"defaultValue":"\"_model.__new__\""},{"id":2807,"name":"newFn","kind":32,"kindString":"Variable","flags":{"isExported":true},"sources":[{"fileName":"core/modules/_parameterTypes.ts","line":9,"character":9}],"type":{"type":"reference","name":"__new__","id":1720},"defaultValue":" __new__"},{"id":2812,"name":"postprocess","kind":32,"kindString":"Variable","flags":{"isExported":true},"sources":[{"fileName":"core/modules/_parameterTypes.ts","line":17,"character":15}],"type":{"type":"intrinsic","name":"string"},"defaultValue":"\"_model.__postprocess__\""},{"id":2811,"name":"preprocess","kind":32,"kindString":"Variable","flags":{"isExported":true},"sources":[{"fileName":"core/modules/_parameterTypes.ts","line":16,"character":14}],"type":{"type":"intrinsic","name":"string"},"defaultValue":"\"_model.__preprocess__\""},{"id":2816,"name":"return","kind":32,"kindString":"Variable","flags":{"isExported":true},"sources":[{"fileName":"core/modules/_parameterTypes.ts","line":24,"character":10}],"type":{"type":"intrinsic","name":"string"},"defaultValue":"\"_Output.Return\""},{"id":2815,"name":"select","kind":32,"kindString":"Variable","flags":{"isExported":true},"sources":[{"fileName":"core/modules/_parameterTypes.ts","line":22,"character":10}],"type":{"type":"intrinsic","name":"string"},"defaultValue":"\"_model.__select__\""},{"id":2813,"name":"setattrib","kind":32,"kindString":"Variable","flags":{"isExported":true},"sources":[{"fileName":"core/modules/_parameterTypes.ts","line":19,"character":13}],"type":{"type":"intrinsic","name":"string"},"defaultValue":"\"_model.__setAttrib__\""}],"groups":[{"title":"Variables","kind":32,"children":[2810,2803,2814,2805,2808,2809,2804,2806,2807,2812,2811,2816,2815,2813]}],"sources":[{"fileName":"core/modules/_parameterTypes.ts","line":3,"character":28}],"type":{"type":"intrinsic","name":"object"}}],"groups":[{"title":"Variables","kind":32,"children":[2817]},{"title":"Object literals","kind":2097152,"children":[2802]}],"sources":[{"fileName":"core/modules/_parameterTypes.ts","line":1,"character":0}]},{"id":2673,"name":"\"core/modules/_rand\"","kind":1,"kindString":"External module","flags":{"isExported":true},"originalName":"C:/Dropbox/Files/Software/GitHub/design-automation/mobius-parametric-modeller/src/assets/core/modules/_rand.ts","children":[{"id":2674,"name":"rand","kind":64,"kindString":"Function","flags":{"isExported":true},"signatures":[{"id":2675,"name":"rand","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":2676,"name":"min","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":2677,"name":"max","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"number"}}],"sources":[{"fileName":"core/modules/_rand.ts","line":3,"character":20}]},{"id":2678,"name":"randInt","kind":64,"kindString":"Function","flags":{"isExported":true},"signatures":[{"id":2679,"name":"randInt","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":2680,"name":"min","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":2681,"name":"max","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"number"}}],"sources":[{"fileName":"core/modules/_rand.ts","line":6,"character":23}]},{"id":2682,"name":"randPick","kind":64,"kindString":"Function","flags":{"isExported":true},"signatures":[{"id":2683,"name":"randPick","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":2684,"name":"list","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}},{"id":2685,"name":"num","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"number"}}],"sources":[{"fileName":"core/modules/_rand.ts","line":9,"character":24}]}],"groups":[{"title":"Functions","kind":64,"children":[2674,2678,2682]}],"sources":[{"fileName":"core/modules/_rand.ts","line":1,"character":0}]},{"id":2766,"name":"\"core/modules/_set\"","kind":1,"kindString":"External module","flags":{"isExported":true},"originalName":"C:/Dropbox/Files/Software/GitHub/design-automation/mobius-parametric-modeller/src/assets/core/modules/_set.ts","children":[{"id":2778,"name":"setDif","kind":64,"kindString":"Function","flags":{"isExported":true},"signatures":[{"id":2779,"name":"setDif","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":2780,"name":"list1","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}},{"id":2781,"name":"list2","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"sources":[{"fileName":"core/modules/_set.ts","line":19,"character":22}]},{"id":2774,"name":"setInt","kind":64,"kindString":"Function","flags":{"isExported":true},"signatures":[{"id":2775,"name":"setInt","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":2776,"name":"list1","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}},{"id":2777,"name":"list2","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"sources":[{"fileName":"core/modules/_set.ts","line":15,"character":22}]},{"id":2767,"name":"setMake","kind":64,"kindString":"Function","flags":{"isExported":true},"signatures":[{"id":2768,"name":"setMake","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":2769,"name":"list","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"sources":[{"fileName":"core/modules/_set.ts","line":7,"character":23}]},{"id":2770,"name":"setUni","kind":64,"kindString":"Function","flags":{"isExported":true},"signatures":[{"id":2771,"name":"setUni","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":2772,"name":"list1","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}},{"id":2773,"name":"list2","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"sources":[{"fileName":"core/modules/_set.ts","line":11,"character":22}]}],"groups":[{"title":"Functions","kind":64,"children":[2778,2774,2767,2770]}],"sources":[{"fileName":"core/modules/_set.ts","line":1,"character":0}]},{"id":2686,"name":"\"core/modules/_vec\"","kind":1,"kindString":"External module","flags":{"isExported":true},"originalName":"C:/Dropbox/Files/Software/GitHub/design-automation/mobius-parametric-modeller/src/assets/core/modules/_vec.ts","children":[{"id":2687,"name":"vecAdd","kind":32,"kindString":"Variable","flags":{"isExported":true,"isConst":true},"sources":[{"fileName":"core/modules/_vec.ts","line":3,"character":19}],"type":{"type":"reference","name":"vecAdd","id":582},"defaultValue":" vec.vecAdd"},{"id":2696,"name":"vecAng","kind":32,"kindString":"Variable","flags":{"isExported":true,"isConst":true},"sources":[{"fileName":"core/modules/_vec.ts","line":12,"character":19}],"type":{"type":"reference","name":"vecAng","id":611},"defaultValue":" vec.vecAng"},{"id":2697,"name":"vecAng2","kind":32,"kindString":"Variable","flags":{"isExported":true,"isConst":true},"sources":[{"fileName":"core/modules/_vec.ts","line":13,"character":20}],"type":{"type":"reference","name":"vecAng2","id":615},"defaultValue":" vec.vecAng2"},{"id":2699,"name":"vecCross","kind":32,"kindString":"Variable","flags":{"isExported":true,"isConst":true},"sources":[{"fileName":"core/modules/_vec.ts","line":15,"character":21}],"type":{"type":"reference","name":"vecCross","id":599},"defaultValue":" vec.vecCross"},{"id":2689,"name":"vecDiv","kind":32,"kindString":"Variable","flags":{"isExported":true,"isConst":true},"sources":[{"fileName":"core/modules/_vec.ts","line":5,"character":19}],"type":{"type":"reference","name":"vecDiv","id":591},"defaultValue":" vec.vecDiv"},{"id":2698,"name":"vecDot","kind":32,"kindString":"Variable","flags":{"isExported":true,"isConst":true},"sources":[{"fileName":"core/modules/_vec.ts","line":14,"character":19}],"type":{"type":"reference","name":"vecDot","id":604},"defaultValue":" vec.vecDot"},{"id":2700,"name":"vecEqual","kind":32,"kindString":"Variable","flags":{"isExported":true,"isConst":true},"sources":[{"fileName":"core/modules/_vec.ts","line":16,"character":21}],"type":{"type":"reference","name":"vecEqual","id":572},"defaultValue":" vec.vecEqual"},{"id":2695,"name":"vecFromTo","kind":32,"kindString":"Variable","flags":{"isExported":true,"isConst":true},"sources":[{"fileName":"core/modules/_vec.ts","line":11,"character":22}],"type":{"type":"reference","name":"vecFromTo","id":630},"defaultValue":" vec.vecFromTo"},{"id":2691,"name":"vecLen","kind":32,"kindString":"Variable","flags":{"isExported":true,"isConst":true},"sources":[{"fileName":"core/modules/_vec.ts","line":7,"character":19}],"type":{"type":"reference","name":"vecLen","id":620},"defaultValue":" vec.vecLen"},{"id":2690,"name":"vecMult","kind":32,"kindString":"Variable","flags":{"isExported":true,"isConst":true},"sources":[{"fileName":"core/modules/_vec.ts","line":6,"character":20}],"type":{"type":"reference","name":"vecMult","id":595},"defaultValue":" vec.vecMult"},{"id":2693,"name":"vecNorm","kind":32,"kindString":"Variable","flags":{"isExported":true,"isConst":true},"sources":[{"fileName":"core/modules/_vec.ts","line":9,"character":20}],"type":{"type":"reference","name":"vecNorm","id":608},"defaultValue":" vec.vecNorm"},{"id":2694,"name":"vecRev","kind":32,"kindString":"Variable","flags":{"isExported":true,"isConst":true},"sources":[{"fileName":"core/modules/_vec.ts","line":10,"character":19}],"type":{"type":"reference","name":"vecRev","id":627},"defaultValue":" vec.vecRev"},{"id":2692,"name":"vecSetLen","kind":32,"kindString":"Variable","flags":{"isExported":true,"isConst":true},"sources":[{"fileName":"core/modules/_vec.ts","line":8,"character":22}],"type":{"type":"reference","name":"vecSetLen","id":623},"defaultValue":" vec.vecSetLen"},{"id":2688,"name":"vecSub","kind":32,"kindString":"Variable","flags":{"isExported":true,"isConst":true},"sources":[{"fileName":"core/modules/_vec.ts","line":4,"character":19}],"type":{"type":"reference","name":"vecSub","id":577},"defaultValue":" vec.vecSub"}],"groups":[{"title":"Variables","kind":32,"children":[2687,2696,2697,2699,2689,2698,2700,2695,2691,2690,2693,2694,2692,2688]}],"sources":[{"fileName":"core/modules/_vec.ts","line":1,"character":0}]},{"id":1651,"name":"\"core/modules/calc\"","kind":1,"kindString":"External module","flags":{"isExported":true},"originalName":"C:/Dropbox/Files/Software/GitHub/design-automation/mobius-parametric-modeller/src/assets/core/modules/calc.ts","comment":{"shortText":"The `calc` module has functions for performing various types of calculations with entities in the model.\nThese functions neither make nor modify anything in the model.\nThese functions all return either numbers or lists of numbers."},"children":[{"id":1652,"name":"_EDistanceMethod","kind":4,"kindString":"Enumeration","flags":{"isExported":true},"children":[{"id":1654,"name":"MIN_DISTANCE","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"core/modules/calc.ts","line":24,"character":16}],"defaultValue":"\"min_distance\""},{"id":1653,"name":"P_P_DISTANCE","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"core/modules/calc.ts","line":23,"character":16}],"defaultValue":"\"p_to_p_distance\""}],"groups":[{"title":"Enumeration members","kind":16,"children":[1654,1653]}],"sources":[{"fileName":"core/modules/calc.ts","line":22,"character":28}]},{"id":1679,"name":"Area","kind":64,"kindString":"Function","flags":{"isExported":true},"signatures":[{"id":1680,"name":"Area","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Calculates the area of a surface or a list of surfaces.","returns":"Area.","tags":[{"tag":"example","text":"area1 = calc.Area (surface1)\n"}]},"parameters":[{"id":1681,"name":"__model__","kind":32768,"kindString":"Parameter","flags":{},"comment":{},"type":{"type":"reference","name":"GIModel","id":1393}},{"id":1682,"name":"entities","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"A polygon, a face, a closed polyline, or a closed wire."},"type":{"type":"reference","name":"TId","id":275}}],"type":{"type":"union","types":[{"type":"intrinsic","name":"number"},{"type":"array","elementType":{"type":"intrinsic","name":"number"}}]}}],"sources":[{"fileName":"core/modules/calc.ts","line":159,"character":20}]},{"id":1691,"name":"Centroid","kind":64,"kindString":"Function","flags":{"isExported":true},"signatures":[{"id":1692,"name":"Centroid","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Calculates the centroid of a list of any entity.","returns":"The centroid [x, y, z] of the entities. (No position is created in the model.)","tags":[{"tag":"example","text":"centroid1 = calc.Centroid (polygon1)\n"}]},"parameters":[{"id":1693,"name":"__model__","kind":32768,"kindString":"Parameter","flags":{},"comment":{},"type":{"type":"reference","name":"GIModel","id":1393}},{"id":1694,"name":"entities","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"List of positions, vertices, points, edges, wires, polylines, faces, polygons, or collections."},"type":{"type":"union","types":[{"type":"reference","name":"TId","id":275},{"type":"array","elementType":{"type":"reference","name":"TId","id":275}}]}}],"type":{"type":"reference","name":"Txyz","id":279}}],"sources":[{"fileName":"core/modules/calc.ts","line":202,"character":24}]},{"id":1665,"name":"Distance","kind":64,"kindString":"Function","flags":{"isExported":true},"signatures":[{"id":1666,"name":"Distance","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Calculates the distance between two positions.","returns":"Distance, or list of distances (if position2 is a list).","tags":[{"tag":"example","text":"distance1 = calc.Distance (position1, position2, p_to_p_distance)"},{"tag":"example_info","text":"position1 = [0,0,0], position2 = [[0,0,10],[0,0,20]], Expected value of distance is [10,20].\n"}]},"parameters":[{"id":1667,"name":"__model__","kind":32768,"kindString":"Parameter","flags":{},"comment":{},"type":{"type":"reference","name":"GIModel","id":1393}},{"id":1668,"name":"position1","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"First position."},"type":{"type":"reference","name":"TId","id":275}},{"id":1669,"name":"position2","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"Second position, or list of positions."},"type":{"type":"union","types":[{"type":"reference","name":"TId","id":275},{"type":"array","elementType":{"type":"reference","name":"TId","id":275}}]}},{"id":1670,"name":"method","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"Enum; distance or min_distance."},"type":{"type":"reference","name":"_EDistanceMethod","id":1652}}],"type":{"type":"union","types":[{"type":"intrinsic","name":"number"},{"type":"array","elementType":{"type":"intrinsic","name":"number"}}]}}],"sources":[{"fileName":"core/modules/calc.ts","line":55,"character":24}]},{"id":1671,"name":"Length","kind":64,"kindString":"Function","flags":{"isExported":true},"signatures":[{"id":1672,"name":"Length","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Calculates the length of a line or a list of lines.","returns":"Length.","tags":[{"tag":"example","text":"length1 = calc.Length (line1)\n"}]},"parameters":[{"id":1673,"name":"__model__","kind":32768,"kindString":"Parameter","flags":{},"comment":{},"type":{"type":"reference","name":"GIModel","id":1393}},{"id":1674,"name":"lines","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"Edge, wire or polyline."},"type":{"type":"union","types":[{"type":"reference","name":"TId","id":275},{"type":"array","elementType":{"type":"reference","name":"TId","id":275}}]}}],"type":{"type":"intrinsic","name":"number"}}],"sources":[{"fileName":"core/modules/calc.ts","line":77,"character":22}]},{"id":1704,"name":"Normal","kind":64,"kindString":"Function","flags":{"isExported":true},"signatures":[{"id":1705,"name":"Normal","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Calculates the normal vector of an entity or list of entities.\n~\nFor polygons, faces, and face wires the normal is calculated by taking the average of all the normals of the face triangles.\nFor polylines and polyline wires, the normal is calculated by triangulating the positions, and then\ntaking the average of all the normals of the triangles.\nFor edges, the normal is calculated by takingthe avery of teh normals of the two vertices.\nFor vertices, the normal is calculated by creating a triangle out of the two adjacent edges,\nand then calculating the normal of the triangle.\n(If there is only one edge, or if the two adjacent edges are colinear, the the normal of the wire is returned.)\nFor positions, the normal is calculated by taking the average of the normals of all the vertices linked to the position.\nFor points and positions with no vertices, the normal is [0, 0, 0].","returns":"The normal vector [x, y, z].","tags":[{"tag":"example","text":"normal1 = calc.Normal (polygon1, 1)"},{"tag":"example_info","text":"If the input is non-planar, the output vector will be an average of all normals vector of the polygon triangles.\n"}]},"parameters":[{"id":1706,"name":"__model__","kind":32768,"kindString":"Parameter","flags":{},"comment":{},"type":{"type":"reference","name":"GIModel","id":1393}},{"id":1707,"name":"entities","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"An entity, or list of entities."},"type":{"type":"union","types":[{"type":"reference","name":"TId","id":275},{"type":"array","elementType":{"type":"reference","name":"TId","id":275}}]}},{"id":1708,"name":"scale","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"The scale factor for the normal vector. (This is equivalent to the length of the normal vector.)"},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"union","types":[{"type":"reference","name":"Txyz","id":279},{"type":"array","elementType":{"type":"reference","name":"Txyz","id":279}}]}}],"sources":[{"fileName":"core/modules/calc.ts","line":334,"character":22}]},{"id":1709,"name":"ParamTToXyz","kind":64,"kindString":"Function","flags":{"isExported":true},"signatures":[{"id":1710,"name":"ParamTToXyz","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Calculates the location on a linear entity, given a t parameter.","returns":"The coordinates of the location, [x, y, z]. (No position is created in the model.)","tags":[{"tag":"example","text":"coord1 = calc.ParamTToXyz (polyline1, 0.23)\n"}]},"parameters":[{"id":1711,"name":"__model__","kind":32768,"kindString":"Parameter","flags":{},"comment":{},"type":{"type":"reference","name":"GIModel","id":1393}},{"id":1712,"name":"line","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"Edge, wire, or polyline."},"type":{"type":"reference","name":"TId","id":275}},{"id":1713,"name":"t_param","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"A value between 0 to 1."},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"union","types":[{"type":"reference","name":"Txyz","id":279},{"type":"array","elementType":{"type":"reference","name":"Txyz","id":279}}]}}],"sources":[{"fileName":"core/modules/calc.ts","line":351,"character":27}]},{"id":1683,"name":"Vector","kind":64,"kindString":"Function","flags":{"isExported":true},"signatures":[{"id":1684,"name":"Vector","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Returns a vector along an edge.","returns":"The vector [x, y, z] from the start point of an edge to the end point of an edge.\n"},"parameters":[{"id":1685,"name":"__model__","kind":32768,"kindString":"Parameter","flags":{},"comment":{},"type":{"type":"reference","name":"GIModel","id":1393}},{"id":1686,"name":"edge","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"An edge"},"type":{"type":"reference","name":"TId","id":275}}],"type":{"type":"reference","name":"Txyz","id":279}}],"sources":[{"fileName":"core/modules/calc.ts","line":174,"character":22}]},{"id":1714,"name":"_ParamXyzToT","kind":64,"kindString":"Function","flags":{"isExported":true},"signatures":[{"id":1715,"name":"_ParamXyzToT","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Calculates the 't' parameter along a linear entity, given a location.\nThe 't' parameter varies between 0 and 1, where 0 indicates the start and 1 indicates the end.","returns":"The 't' parameter vale, between 0 and 1.","tags":[{"tag":"example","text":"coord1 = calc.ParamXyzToT (polyline1, [1,2,3])\n"}]},"parameters":[{"id":1716,"name":"__model__","kind":32768,"kindString":"Parameter","flags":{},"comment":{},"type":{"type":"reference","name":"GIModel","id":1393}},{"id":1717,"name":"lines","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"List of edges, wires, or polylines."},"type":{"type":"union","types":[{"type":"reference","name":"TId","id":275},{"type":"array","elementType":{"type":"reference","name":"TId","id":275}}]}},{"id":1718,"name":"locations","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"List of positions, vertices, points, or coordinates."},"type":{"type":"union","types":[{"type":"reference","name":"TId","id":275},{"type":"array","elementType":{"type":"reference","name":"TId","id":275}},{"type":"reference","name":"Txyz","id":279},{"type":"array","elementType":{"type":"reference","name":"Txyz","id":279}}]}}],"type":{"type":"union","types":[{"type":"intrinsic","name":"number"},{"type":"array","elementType":{"type":"intrinsic","name":"number"}}]}}],"sources":[{"fileName":"core/modules/calc.ts","line":414,"character":28}]},{"id":1675,"name":"_area","kind":64,"kindString":"Function","flags":{},"signatures":[{"id":1676,"name":"_area","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1677,"name":"__model__","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"GIModel","id":1393}},{"id":1678,"name":"ents_arrs","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"union","types":[{"type":"reference","name":"TEntTypeIdx","id":270},{"type":"array","elementType":{"type":"reference","name":"TEntTypeIdx","id":270}}]}}],"type":{"type":"union","types":[{"type":"intrinsic","name":"number"},{"type":"array","elementType":{"type":"intrinsic","name":"number"}}]}}],"sources":[{"fileName":"core/modules/calc.ts","line":108,"character":14}]},{"id":1687,"name":"_centroid","kind":64,"kindString":"Function","flags":{},"signatures":[{"id":1688,"name":"_centroid","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1689,"name":"__model__","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"GIModel","id":1393}},{"id":1690,"name":"ents_arr","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"array","elementType":{"type":"reference","name":"TEntTypeIdx","id":270}}}],"type":{"type":"reference","name":"Txyz","id":279}}],"sources":[{"fileName":"core/modules/calc.ts","line":185,"character":18}]},{"id":1655,"name":"_distanceMin","kind":64,"kindString":"Function","flags":{},"signatures":[{"id":1656,"name":"_distanceMin","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1657,"name":"__model__","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"GIModel","id":1393}},{"id":1658,"name":"ent_arr1","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"TEntTypeIdx","id":270}},{"id":1659,"name":"ents_arr2","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"union","types":[{"type":"reference","name":"TEntTypeIdx","id":270},{"type":"array","elementType":{"type":"reference","name":"TEntTypeIdx","id":270}}]}}],"type":{"type":"union","types":[{"type":"intrinsic","name":"number"},{"type":"array","elementType":{"type":"intrinsic","name":"number"}}]}}],"sources":[{"fileName":"core/modules/calc.ts","line":26,"character":21}]},{"id":1660,"name":"_distancePtoP","kind":64,"kindString":"Function","flags":{},"signatures":[{"id":1661,"name":"_distancePtoP","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1662,"name":"__model__","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"GIModel","id":1393}},{"id":1663,"name":"ent_arr1","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"TEntTypeIdx","id":270}},{"id":1664,"name":"ents_arr2","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"union","types":[{"type":"reference","name":"TEntTypeIdx","id":270},{"type":"array","elementType":{"type":"reference","name":"TEntTypeIdx","id":270}}]}}],"type":{"type":"union","types":[{"type":"intrinsic","name":"number"},{"type":"array","elementType":{"type":"intrinsic","name":"number"}}]}}],"sources":[{"fileName":"core/modules/calc.ts","line":34,"character":22}]},{"id":1699,"name":"_normal","kind":64,"kindString":"Function","flags":{"isExported":true},"signatures":[{"id":1700,"name":"_normal","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1701,"name":"__model__","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"GIModel","id":1393}},{"id":1702,"name":"ents_arr","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"union","types":[{"type":"reference","name":"TEntTypeIdx","id":270},{"type":"array","elementType":{"type":"reference","name":"TEntTypeIdx","id":270}}]}},{"id":1703,"name":"scale","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"union","types":[{"type":"reference","name":"Txyz","id":279},{"type":"array","elementType":{"type":"reference","name":"Txyz","id":279}}]}}],"sources":[{"fileName":"core/modules/calc.ts","line":229,"character":23}]},{"id":1695,"name":"_vertNormal","kind":64,"kindString":"Function","flags":{},"signatures":[{"id":1696,"name":"_vertNormal","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1697,"name":"__model__","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"GIModel","id":1393}},{"id":1698,"name":"index","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"Object"}}],"sources":[{"fileName":"core/modules/calc.ts","line":213,"character":20}]}],"groups":[{"title":"Enumerations","kind":4,"children":[1652]},{"title":"Functions","kind":64,"children":[1679,1691,1665,1671,1704,1709,1683,1714,1675,1687,1655,1660,1699,1695]}],"sources":[{"fileName":"core/modules/calc.ts","line":1,"character":0}]},{"id":2818,"name":"\"core/modules/index\"","kind":1,"kindString":"External module","flags":{"isExported":true},"originalName":"C:/Dropbox/Files/Software/GitHub/design-automation/mobius-parametric-modeller/src/assets/core/modules/index.ts","sources":[{"fileName":"core/modules/index.ts","line":1,"character":0}]},{"id":2819,"name":"\"core/modules/isect\"","kind":1,"kindString":"External module","flags":{"isExported":true},"originalName":"C:/Dropbox/Files/Software/GitHub/design-automation/mobius-parametric-modeller/src/assets/core/modules/isect.ts","comment":{"shortText":"The `isect` module has functions for performing intersections between entities in the model.\nThese functions may make new entities, and may modify existing entities, depending on the function that is selected.\nIf new entities are created, then the function will return the IDs of those entities."},"children":[{"id":2820,"name":"_EKnifeKeep","kind":4,"kindString":"Enumeration","flags":{"isExported":true},"children":[{"id":2821,"name":"KEEP_ABOVE","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"core/modules/isect.ts","line":39,"character":14}],"defaultValue":"\"keep above the plane\""},{"id":2823,"name":"KEEP_ALL","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"core/modules/isect.ts","line":41,"character":12}],"defaultValue":"\"keep all\""},{"id":2822,"name":"KEEP_BELOW","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"core/modules/isect.ts","line":40,"character":14}],"defaultValue":"\"keep below the plane\""}],"groups":[{"title":"Enumeration members","kind":16,"children":[2821,2823,2822]}],"sources":[{"fileName":"core/modules/isect.ts","line":38,"character":23}]},{"id":2824,"name":"Intersect","kind":64,"kindString":"Function","flags":{"isExported":true},"signatures":[{"id":2825,"name":"Intersect","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Adds positions by intersecting polylines, planes, and polygons.","returns":"List of positions.","tags":[{"tag":"example","text":"intersect1 = isect.Intersect (object1, object2)"},{"tag":"example_info","text":"Returns a list of positions at the intersections between both objects.\n"}]},"parameters":[{"id":2826,"name":"__model__","kind":32768,"kindString":"Parameter","flags":{},"comment":{},"type":{"type":"reference","name":"GIModel","id":1393}},{"id":2827,"name":"entities1","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"First polyline, plane, face, or polygon."},"type":{"type":"reference","name":"TId","id":275}},{"id":2828,"name":"entities2","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"Second polyline, plane face, or polygon."},"type":{"type":"reference","name":"TId","id":275}}],"type":{"type":"array","elementType":{"type":"reference","name":"TId","id":275}}}],"sources":[{"fileName":"core/modules/isect.ts","line":25,"character":25}]},{"id":2829,"name":"Knife","kind":64,"kindString":"Function","flags":{"isExported":true},"signatures":[{"id":2830,"name":"Knife","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Separates a list of points, polylines or polygons into two lists with a plane.","returns":"List, or list of two lists, of points, polylines or polygons.","tags":[{"tag":"example","text":"knife1 = isect.Knife ([p1,p2,p3,p4,p5], plane1, keepabove)"},{"tag":"example_info","text":"Returns [[p1,p2,p3],[p4,p5]] if p1, p2, p3 are points above the plane and p4, p5 are points below the plane.\n"}]},"parameters":[{"id":2831,"name":"__model__","kind":32768,"kindString":"Parameter","flags":{},"comment":{},"type":{"type":"reference","name":"GIModel","id":1393}},{"id":2832,"name":"geometry","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"List of points, polylines or polygons."},"type":{"type":"array","elementType":{"type":"reference","name":"TId","id":275}}},{"id":2833,"name":"plane","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"Knife."},"type":{"type":"reference","name":"TPlane","id":272}},{"id":2834,"name":"keep","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"Keep above, keep below, or keep both lists of separated points, polylines or polygons."},"type":{"type":"reference","name":"_EKnifeKeep","id":2820}}],"type":{"type":"array","elementType":{"type":"reference","name":"TId","id":275}}}],"sources":[{"fileName":"core/modules/isect.ts","line":53,"character":21}]},{"id":2835,"name":"Split","kind":64,"kindString":"Function","flags":{"isExported":true},"signatures":[{"id":2836,"name":"Split","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Splits a polyline or polygon with a polyline.","returns":"List of two lists containing polylines or polygons.","tags":[{"tag":"example","text":"splitresult = isect.Split (pl1, pl2)"},{"tag":"example_info","text":"Returns [[pl1A],[pl1B]], where pl1A and pl1B are polylines resulting from the split occurring where pl1 and pl2 intersect.\n"}]},"parameters":[{"id":2837,"name":"__model__","kind":32768,"kindString":"Parameter","flags":{},"comment":{},"type":{"type":"reference","name":"GIModel","id":1393}},{"id":2838,"name":"geometry","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"A list of polylines or polygons to be split."},"type":{"type":"array","elementType":{"type":"reference","name":"TId","id":275}}},{"id":2839,"name":"polyline","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"Splitter."},"type":{"type":"reference","name":"TId","id":275}}],"type":{"type":"array","elementType":{"type":"reference","name":"TId","id":275}}}],"sources":[{"fileName":"core/modules/isect.ts","line":70,"character":21}]}],"groups":[{"title":"Enumerations","kind":4,"children":[2820]},{"title":"Functions","kind":64,"children":[2824,2829,2835]}],"sources":[{"fileName":"core/modules/isect.ts","line":1,"character":0}]},{"id":2546,"name":"\"core/modules/list\"","kind":1,"kindString":"External module","flags":{"isExported":true},"originalName":"C:/Dropbox/Files/Software/GitHub/design-automation/mobius-parametric-modeller/src/assets/core/modules/list.ts","comment":{"shortText":"The `list` module has functions for working with lists of items.\nThese functions have no direct link with the model, the are generic functions for manipulating lists.\nThe functions are often used when manipulating lists of IDs of entities in the model.\nThese functions neither make nor modify anything in the model.\nIn addition to these functions, there are also various inline functions available for working with lists."},"children":[{"id":2547,"name":"_EAddMethod","kind":4,"kindString":"Enumeration","flags":{"isExported":true},"children":[{"id":2550,"name":"SORTED_ALPHA","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"core/modules/list.ts","line":22,"character":16}],"defaultValue":"\"alpha_descending\""},{"id":2554,"name":"SORTED_ID","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"core/modules/list.ts","line":26,"character":13}],"defaultValue":"\"ID_descending\""},{"id":2552,"name":"SORTED_NUM","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"core/modules/list.ts","line":24,"character":14}],"defaultValue":"\"numeric_descending\""},{"id":2551,"name":"SORTED_REV_ALPHA","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"core/modules/list.ts","line":23,"character":20}],"defaultValue":"\"alpha_ascending\""},{"id":2555,"name":"SORTED_REV_ID","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"core/modules/list.ts","line":27,"character":17}],"defaultValue":"\"ID_ascending\""},{"id":2553,"name":"SORTED_REV_NUM","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"core/modules/list.ts","line":25,"character":18}],"defaultValue":"\"numeric_ascending\""},{"id":2549,"name":"TO_END","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"core/modules/list.ts","line":21,"character":10}],"defaultValue":"\"to_end\""},{"id":2548,"name":"TO_START","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"core/modules/list.ts","line":20,"character":12}],"defaultValue":"\"to_start\""}],"groups":[{"title":"Enumeration members","kind":16,"children":[2550,2554,2552,2551,2555,2553,2549,2548]}],"sources":[{"fileName":"core/modules/list.ts","line":19,"character":23}]},{"id":2577,"name":"_EAppendMethod","kind":4,"kindString":"Enumeration","flags":{"isExported":true},"comment":{"shortText":"================================================================================================\nlist functions that obtain and return information from an input list. Does not modify input list."},"children":[{"id":2579,"name":"TO_END","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"core/modules/list.ts","line":365,"character":10}],"defaultValue":"\"to_end\""},{"id":2578,"name":"TO_START","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"core/modules/list.ts","line":364,"character":12}],"defaultValue":"\"to_start\""}],"groups":[{"title":"Enumeration members","kind":16,"children":[2579,2578]}],"sources":[{"fileName":"core/modules/list.ts","line":363,"character":26}]},{"id":2586,"name":"_EIndexOfMethod","kind":4,"kindString":"Enumeration","flags":{"isExported":true},"children":[{"id":2587,"name":"SEARCH_ALL","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"core/modules/list.ts","line":487,"character":14}],"defaultValue":"\"search_all\""},{"id":2588,"name":"SEARCH_FIRST","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"core/modules/list.ts","line":488,"character":16}],"defaultValue":"\"search_first\""}],"groups":[{"title":"Enumeration members","kind":16,"children":[2587,2588]}],"sources":[{"fileName":"core/modules/list.ts","line":486,"character":27}]},{"id":2556,"name":"_ERemoveMethod","kind":4,"kindString":"Enumeration","flags":{"isExported":true},"children":[{"id":2560,"name":"REMOVE_ALL_VALUES","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"core/modules/list.ts","line":114,"character":21}],"defaultValue":"\"remove_all_values\""},{"id":2558,"name":"REMOVE_FIRST_VALUE","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"core/modules/list.ts","line":112,"character":22}],"defaultValue":"\"remove_first_value\""},{"id":2557,"name":"REMOVE_INDEX","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"core/modules/list.ts","line":111,"character":16}],"defaultValue":"\"remove_index\""},{"id":2559,"name":"REMOVE_LAST_VALUE","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"core/modules/list.ts","line":113,"character":21}],"defaultValue":"\"remove_last_value\""}],"groups":[{"title":"Enumeration members","kind":16,"children":[2560,2558,2557,2559]}],"sources":[{"fileName":"core/modules/list.ts","line":110,"character":26}]},{"id":2580,"name":"_ERemoveValueMethod","kind":4,"kindString":"Enumeration","flags":{"isExported":true},"children":[{"id":2581,"name":"REMOVE_ALL","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"core/modules/list.ts","line":418,"character":14}],"defaultValue":"\"remove_all\""},{"id":2582,"name":"REMOVE_FIRST","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"core/modules/list.ts","line":419,"character":16}],"defaultValue":"\"remove_first\""}],"groups":[{"title":"Enumeration members","kind":16,"children":[2581,2582]}],"sources":[{"fileName":"core/modules/list.ts","line":417,"character":31}]},{"id":2561,"name":"_EReplaceMethod","kind":4,"kindString":"Enumeration","flags":{"isExported":true},"children":[{"id":2565,"name":"REPLACE_ALL_VALUES","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"core/modules/list.ts","line":164,"character":22}],"defaultValue":"\"all_values\""},{"id":2563,"name":"REPLACE_FIRST_VALUE","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"core/modules/list.ts","line":162,"character":23}],"defaultValue":"\"first_value\""},{"id":2562,"name":"REPLACE_INDEX","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"core/modules/list.ts","line":161,"character":17}],"defaultValue":"\"index\""},{"id":2564,"name":"REPLACE_LAST_VALUE","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"core/modules/list.ts","line":163,"character":22}],"defaultValue":"\"last_value\""}],"groups":[{"title":"Enumeration members","kind":16,"children":[2565,2563,2562,2564]}],"sources":[{"fileName":"core/modules/list.ts","line":160,"character":27}]},{"id":2583,"name":"_EReplaceValueMethod","kind":4,"kindString":"Enumeration","flags":{"isExported":true},"children":[{"id":2584,"name":"REPLACE_ALL","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"core/modules/list.ts","line":451,"character":15}],"defaultValue":"\"replace_all\""},{"id":2585,"name":"REPLACE_FIRST","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"core/modules/list.ts","line":452,"character":17}],"defaultValue":"\"replace_first\""}],"groups":[{"title":"Enumeration members","kind":16,"children":[2584,2585]}],"sources":[{"fileName":"core/modules/list.ts","line":450,"character":32}]},{"id":2566,"name":"_ESortMethod","kind":4,"kindString":"Enumeration","flags":{"isExported":true},"children":[{"id":2568,"name":"ALPHA","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"core/modules/list.ts","line":213,"character":9}],"defaultValue":"\"alpha_descending\""},{"id":2572,"name":"ID","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"core/modules/list.ts","line":217,"character":6}],"defaultValue":"\"ID_descending\""},{"id":2570,"name":"NUM","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"core/modules/list.ts","line":215,"character":7}],"defaultValue":"\"numeric_descending\""},{"id":2576,"name":"RANDOM","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"core/modules/list.ts","line":221,"character":10}],"defaultValue":"\"random\""},{"id":2567,"name":"REV","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"core/modules/list.ts","line":212,"character":7}],"defaultValue":"\"reverse\""},{"id":2569,"name":"REV_ALPHA","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"core/modules/list.ts","line":214,"character":13}],"defaultValue":"\"alpha_ascending\""},{"id":2573,"name":"REV_ID","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"core/modules/list.ts","line":218,"character":10}],"defaultValue":"\"ID_ascending\""},{"id":2571,"name":"REV_NUM","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"core/modules/list.ts","line":216,"character":11}],"defaultValue":"\"numeric_ascending\""},{"id":2575,"name":"REV_SHIFT","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"core/modules/list.ts","line":220,"character":13}],"defaultValue":"\"reverse_shift_1\""},{"id":2574,"name":"SHIFT","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"core/modules/list.ts","line":219,"character":9}],"defaultValue":"\"shift_1\""}],"groups":[{"title":"Enumeration members","kind":16,"children":[2568,2572,2570,2576,2567,2569,2573,2571,2575,2574]}],"sources":[{"fileName":"core/modules/list.ts","line":211,"character":24}]},{"id":2589,"name":"Add","kind":64,"kindString":"Function","flags":{"isExported":true},"signatures":[{"id":2590,"name":"Add","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Adds an item to a list.\nIf item is a list, the entire list will be added as a single item.","returns":"void","tags":[{"tag":"example","text":"append = list.Add(list, 4, 'at_end')"},{"tag":"example_info","text":"where list = [1,2,3]\nExpected value of list is [1,2,3,4].\n"}]},"parameters":[{"id":2591,"name":"list","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"List to add the item to."},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}},{"id":2592,"name":"item","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"Item to add."},"type":{"type":"intrinsic","name":"any"}},{"id":2593,"name":"method","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"Enum, select the method."},"type":{"type":"reference","name":"_EAddMethod","id":2547}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"core/modules/list.ts","line":41,"character":19}]},{"id":2594,"name":"Remove","kind":64,"kindString":"Function","flags":{"isExported":true},"signatures":[{"id":2595,"name":"Remove","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Removes items in a list.","returns":"void\n"},"parameters":[{"id":2596,"name":"list","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"The list in which to remove items"},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}},{"id":2597,"name":"item","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"The item to remove, either the index of the item or the value. Negative indexes are allowed."},"type":{"type":"intrinsic","name":"any"}},{"id":2598,"name":"method","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"Enum, select the method for removing items from the list."},"type":{"type":"reference","name":"_ERemoveMethod","id":2556}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"core/modules/list.ts","line":124,"character":22}]},{"id":2599,"name":"Replace","kind":64,"kindString":"Function","flags":{"isExported":true},"signatures":[{"id":2600,"name":"Replace","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Replaces items in a list.","returns":"void\n"},"parameters":[{"id":2601,"name":"list","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"The list in which to replace items"},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}},{"id":2602,"name":"item","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"The item to replace, either the index of the item or the value. Negative indexes are allowed."},"type":{"type":"intrinsic","name":"any"}},{"id":2603,"name":"new_value","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"The new value."},"type":{"type":"intrinsic","name":"any"}},{"id":2604,"name":"method","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"Enum, select the method for replacing items in the list."},"type":{"type":"reference","name":"_EReplaceMethod","id":2561}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"core/modules/list.ts","line":175,"character":23}]},{"id":2613,"name":"Sort","kind":64,"kindString":"Function","flags":{"isExported":true},"signatures":[{"id":2614,"name":"Sort","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Sorts an list, based on the values of the items in the list.\n~\nFor alphabetical sort, values are sorted character by character,\nnumbers before upper case alphabets, upper case alphabets before lower case alphabets.","returns":"void","tags":[{"tag":"example","text":"list.Sort(list, 'alpha')"},{"tag":"example_info","text":"where list = [\"1\",\"2\",\"10\",\"Orange\",\"apple\"]\nExpected value of list is [\"1\",\"10\",\"2\",\"Orange\",\"apple\"]."},{"tag":"example","text":"list.Sort(list, 'numeric')"},{"tag":"example_info","text":"where list = [56,6,48]\nExpected value of list is [6,48,56].\n"}]},"parameters":[{"id":2615,"name":"list","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"List to sort."},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}},{"id":2616,"name":"method","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"Enum; specifies the sort method to use."},"type":{"type":"reference","name":"_ESortMethod","id":2566}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"core/modules/list.ts","line":284,"character":20}]},{"id":2617,"name":"Splice","kind":64,"kindString":"Function","flags":{"isExported":true},"signatures":[{"id":2618,"name":"Splice","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Removes and inserts items in a list.\n~\nIf no items_to_add are specified, then items are only removed.\nIf num_to_remove is 0, then values are only inserted.","returns":"void","tags":[{"tag":"example","text":"result = list.Splice(list1, 1, 3, [2.2, 3.3])"},{"tag":"example_info","text":"where list1 = [10, 20, 30, 40, 50]\nExpected value of result is [10, 2.2, 3.3, 50]. New items were added where the items were removed.\n"}]},"parameters":[{"id":2619,"name":"list","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"List to splice."},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}},{"id":2620,"name":"index","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"Zero-based index after which to starting removing or inserting items."},"type":{"type":"intrinsic","name":"number"}},{"id":2621,"name":"num_to_remove","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"Number of items to remove."},"type":{"type":"intrinsic","name":"number"}},{"id":2622,"name":"items_to_insert","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"List of items to add, or null."},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"core/modules/list.ts","line":306,"character":22}]},{"id":2623,"name":"_Append","kind":64,"kindString":"Function","flags":{"isExported":true},"signatures":[{"id":2624,"name":"_Append","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Adds an item to a list.\nIf item is a list, the entire list will be appended as a single item.","returns":"void","tags":[{"tag":"example","text":"append = list.Append(list, 4, 'at_end')"},{"tag":"example_info","text":"where list = [1,2,3]\nExpected value of list is [1,2,3,4].\n"}]},"parameters":[{"id":2625,"name":"list","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"List to append the item to."},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}},{"id":2626,"name":"value","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"Item to append."},"type":{"type":"intrinsic","name":"any"}},{"id":2627,"name":"method","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"Enum, select the method."},"type":{"type":"reference","name":"_EAppendMethod","id":2577}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"core/modules/list.ts","line":379,"character":23}]},{"id":2655,"name":"_Concat","kind":64,"kindString":"Function","flags":{"isExported":true},"signatures":[{"id":2656,"name":"_Concat","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Creates a new list by combining two lists into a new list.\n~\nWARNING: This function has been deprecated. Please use the inline listJoin() function.","returns":"Combined list (list1 first, followed by list2).","tags":[{"tag":"example","text":"newlist = list.Concat(list1,list2)"},{"tag":"example_info","text":"where list1 = [1,2,3]\nand list2 = [9,0]\nExpected value of newlist is [1,2,3,9,0].\n"}]},"parameters":[{"id":2657,"name":"list1","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"First list."},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}},{"id":2658,"name":"list2","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"Second list."},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"sources":[{"fileName":"core/modules/list.ts","line":591,"character":23}]},{"id":2652,"name":"_Copy","kind":64,"kindString":"Function","flags":{"isExported":true},"signatures":[{"id":2653,"name":"_Copy","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Creates a new list by creating a new list by making a copy of an existing list.\n~\nWARNING: This function has been deprecated. Please use the inline listCopy() function.","returns":"New duplicated list.","tags":[{"tag":"example","text":"copy1 = list.Copy(list)"},{"tag":"example_info","text":"where list = [1,2,3]\nExpected value of copy is [1,2,3].\n"}]},"parameters":[{"id":2654,"name":"entities","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"List to copy."},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"sources":[{"fileName":"core/modules/list.ts","line":570,"character":21}]},{"id":2659,"name":"_Flatten","kind":64,"kindString":"Function","flags":{"isExported":true},"signatures":[{"id":2660,"name":"_Flatten","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Creates a new list by flattening an n-dimensional list into a one-dimensional list.\n~\nWARNING: This function has been deprecated. Please use the inline listFlat() function.","returns":"Flattened list.","tags":[{"tag":"example","text":"flatten = list.Flatten(list)"},{"tag":"example_info","text":"where list = [1,2,3,[4,5]]\nExpected value of flatten is [1,2,3,4,5].\n"}]},"parameters":[{"id":2661,"name":"list","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"List to flatten."},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"sources":[{"fileName":"core/modules/list.ts","line":612,"character":24}]},{"id":2648,"name":"_Includes","kind":64,"kindString":"Function","flags":{"isExported":true},"signatures":[{"id":2649,"name":"_Includes","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Searches for a value in an list and returns true if found.\nItems must match both the value and type of specified value.\n~\nReturns false if no values in list match specified value.\n~\nWARNING: This function has been deprecated. Please use the inline listHas() function.","returns":"Returns true if value can be found in list, false if value cannot be found.","tags":[{"tag":"example","text":"exists = list.Includes(list,2)"},{"tag":"example_info","text":"where list = [6,2,2,7]\nExpected value of exists is true.\n"}]},"parameters":[{"id":2650,"name":"list","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"List."},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}},{"id":2651,"name":"value","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"Value to search for."},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"boolean"}}],"sources":[{"fileName":"core/modules/list.ts","line":544,"character":25}]},{"id":2643,"name":"_IndexOf","kind":64,"kindString":"Function","flags":{"isExported":true},"signatures":[{"id":2644,"name":"_IndexOf","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Searches for a value in a list and returns the index position if found.\nItems must match both the value and type of specified value.\n~\nReturns -1 if no values in list match specified value.\n~\nWARNING: This function has been deprecated. Please use the inline listFind() function.","returns":"Index position or list of index positions containing specified value.","tags":[{"tag":"example","text":"positions = list.IndexOf(list,2,true)"},{"tag":"example_info","text":"where list = [6,2,2,7]\nExpected value of positions is [1,2].\n"}]},"parameters":[{"id":2645,"name":"list","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"List."},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}},{"id":2646,"name":"value","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"Value to search for."},"type":{"type":"intrinsic","name":"any"}},{"id":2647,"name":"method","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"Enum, specifies whether to search all occurances or only the first."},"type":{"type":"reference","name":"_EIndexOfMethod","id":2586}}],"type":{"type":"union","types":[{"type":"intrinsic","name":"number"},{"type":"array","elementType":{"type":"intrinsic","name":"number"}}]}}],"sources":[{"fileName":"core/modules/list.ts","line":506,"character":24}]},{"id":2628,"name":"_RemoveIndex","kind":64,"kindString":"Function","flags":{"isExported":true},"signatures":[{"id":2629,"name":"_RemoveIndex","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Removes the value at the specified index from a list.\n~\nWARNING: This function has been deprecated. Please use the list.Modify() function.","tags":[{"tag":"example","text":"remove = list.RemoveIndex(list,1)"},{"tag":"example_info","text":"where list = [1,2,3]\nExpected value of remove is [1,3].\n"}]},"parameters":[{"id":2630,"name":"list","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"List to remove value from."},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}},{"id":2631,"name":"index","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"Zero-based index number of value to remove."},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"core/modules/list.ts","line":408,"character":28}]},{"id":2632,"name":"_RemoveValue","kind":64,"kindString":"Function","flags":{"isExported":true},"signatures":[{"id":2633,"name":"_RemoveValue","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Removes values that matches specified value from a list.\nItems must match both the value and type of specified value.\n~\nReturns original list if no values in list match specified value.\n~\nWARNING: This function has been deprecated. Please use the list.Modify() function.","tags":[{"tag":"example","text":"remove = list.RemoveValue(list,2,'remove_all')"},{"tag":"example_info","text":"where list = [1,2,2,3]\nExpected value of remove is [1,3].\n"}]},"parameters":[{"id":2634,"name":"list","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"List to remove value from."},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}},{"id":2635,"name":"value","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"Value to search for."},"type":{"type":"intrinsic","name":"any"}},{"id":2636,"name":"method","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"Enum; specifies whether to remove all occurances or only the first."},"type":{"type":"reference","name":"_ERemoveValueMethod","id":2580}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"core/modules/list.ts","line":436,"character":28}]},{"id":2637,"name":"_ReplaceValue","kind":64,"kindString":"Function","flags":{"isExported":true},"signatures":[{"id":2638,"name":"_ReplaceValue","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Replaces values that matches specified value from an list with a new value\nItems must match both the value and type of specified value\n~\nReturns original list if no value in list matches specified value.\n~\nWARNING: This function has been deprecated. Please use the list.Modify() function.","tags":[{"tag":"example","text":"replace = list.ReplaceValue(list,2,9,'replace_all')"},{"tag":"example_info","text":"where list = [1,2,2,3]\nExpected value of replace is [1,9,9,3].\n"}]},"parameters":[{"id":2639,"name":"list","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"List to remove value from."},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}},{"id":2640,"name":"value1","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"Value to search for."},"type":{"type":"intrinsic","name":"any"}},{"id":2641,"name":"value2","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"Value to replace existing value with."},"type":{"type":"intrinsic","name":"any"}},{"id":2642,"name":"method","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"Enum; specifies whether to replace all occurances or only the first."},"type":{"type":"reference","name":"_EReplaceValueMethod","id":2583}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"core/modules/list.ts","line":470,"character":29}]},{"id":2670,"name":"_Reverse","kind":64,"kindString":"Function","flags":{"isExported":true},"signatures":[{"id":2671,"name":"_Reverse","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Reverses the order of values in a list and returns a new list.\n~\nWARNING: This function has been deprecated. Please use the list.Sort() function.","returns":"New reversed list.","tags":[{"tag":"example","text":"result = list.Reverse(list1)"},{"tag":"example_info","text":"where list1 = [1,2,3]\nExpected value of result is [3,2,1].\n"}]},"parameters":[{"id":2672,"name":"entities","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"List to reverse."},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"core/modules/list.ts","line":662,"character":24}]},{"id":2665,"name":"_Slice","kind":64,"kindString":"Function","flags":{"isExported":true},"signatures":[{"id":2666,"name":"_Slice","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Creates a new list by copying a portion of an existing list, from start index to end index (end not included).\n~\nWARNING: This function has been deprecated. Please use the inline listSlice() function.","returns":"A new list.","tags":[{"tag":"example","text":"result = list.Slice(list,1,3)"},{"tag":"example_info","text":"where list = [1,2,3,4,5]\nExpected value of result is [2,3].\n"}]},"parameters":[{"id":2667,"name":"list","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"List to slice."},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}},{"id":2668,"name":"start","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"Zero-based index at which to begin slicing.\n     A negative index can be used, indicating an offset from the end of the sequence.\n     If start is undefined, slice begins from index 0."},"type":{"type":"intrinsic","name":"number"}},{"id":2669,"name":"end","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"Zero-based index before which to end slicing. Slice extracts up to but not including end.\n     A negative index can be used, indicating an offset from the end of the sequence.\n     If end is undefined, slice extracts through the end of the sequence."},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"sources":[{"fileName":"core/modules/list.ts","line":640,"character":22}]},{"id":2605,"name":"_compareID","kind":64,"kindString":"Function","flags":{},"signatures":[{"id":2606,"name":"_compareID","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":2607,"name":"id1","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":2608,"name":"id2","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"number"}}],"sources":[{"fileName":"core/modules/list.ts","line":223,"character":19}]},{"id":2662,"name":"_flattenDeep","kind":64,"kindString":"Function","flags":{},"signatures":[{"id":2663,"name":"_flattenDeep","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":2664,"name":"list","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"sources":[{"fileName":"core/modules/list.ts","line":619,"character":21}]},{"id":2609,"name":"_sort","kind":64,"kindString":"Function","flags":{},"signatures":[{"id":2610,"name":"_sort","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":2611,"name":"list","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}},{"id":2612,"name":"method","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"_ESortMethod","id":2566}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"core/modules/list.ts","line":230,"character":14}]}],"groups":[{"title":"Enumerations","kind":4,"children":[2547,2577,2586,2556,2580,2561,2583,2566]},{"title":"Functions","kind":64,"children":[2589,2594,2599,2613,2617,2623,2655,2652,2659,2648,2643,2628,2632,2637,2670,2665,2605,2662,2609]}],"sources":[{"fileName":"core/modules/list.ts","line":1,"character":0}]},{"id":1922,"name":"\"core/modules/make\"","kind":1,"kindString":"External module","flags":{"isExported":true},"originalName":"C:/Dropbox/Files/Software/GitHub/design-automation/mobius-parametric-modeller/src/assets/core/modules/make.ts","comment":{"shortText":"The `make` module has functions for making new entities in the model.\nAll these functions all return the IDs of the entities that are created."},"children":[{"id":1923,"name":"_EClose","kind":4,"kindString":"Enumeration","flags":{"isExported":true},"children":[{"id":1925,"name":"CLOSE","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"core/modules/make.ts","line":95,"character":9}],"defaultValue":"\"close\""},{"id":1924,"name":"OPEN","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"core/modules/make.ts","line":94,"character":8}],"defaultValue":"\"open\""}],"groups":[{"title":"Enumeration members","kind":16,"children":[1925,1924]}],"sources":[{"fileName":"core/modules/make.ts","line":93,"character":19}]},{"id":1926,"name":"_ECopyAttribues","kind":4,"kindString":"Enumeration","flags":{"isExported":true},"children":[{"id":1927,"name":"COPY_ATTRIBUTES","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"core/modules/make.ts","line":373,"character":19}],"defaultValue":"\"copy_attributes\""},{"id":1928,"name":"NO_ATTRIBUTES","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"core/modules/make.ts","line":374,"character":17}],"defaultValue":"\"no_attributes\""}],"groups":[{"title":"Enumeration members","kind":16,"children":[1927,1928]}],"sources":[{"fileName":"core/modules/make.ts","line":372,"character":27}]},{"id":1940,"name":"_EDivideMethod","kind":4,"kindString":"Enumeration","flags":{"isExported":true},"children":[{"id":1942,"name":"BY_LENGTH","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"core/modules/make.ts","line":1010,"character":13}],"defaultValue":"\"by_length\""},{"id":1943,"name":"BY_MIN_LENGTH","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"core/modules/make.ts","line":1011,"character":17}],"defaultValue":"\"by_min_length\""},{"id":1941,"name":"BY_NUMBER","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"core/modules/make.ts","line":1009,"character":13}],"defaultValue":"\"by_number\""}],"groups":[{"title":"Enumeration members","kind":16,"children":[1942,1943,1941]}],"sources":[{"fileName":"core/modules/make.ts","line":1008,"character":26}]},{"id":1936,"name":"_EExtrudeMethod","kind":4,"kindString":"Enumeration","flags":{"isExported":true},"children":[{"id":1937,"name":"QUADS","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"core/modules/make.ts","line":718,"character":9}],"defaultValue":"\"quads\""},{"id":1939,"name":"RIBS","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"core/modules/make.ts","line":720,"character":8}],"defaultValue":"\"ribs\""},{"id":1938,"name":"STRINGERS","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"core/modules/make.ts","line":719,"character":13}],"defaultValue":"\"stringers\""}],"groups":[{"title":"Enumeration members","kind":16,"children":[1937,1939,1938]}],"sources":[{"fileName":"core/modules/make.ts","line":717,"character":27}]},{"id":1929,"name":"_ELoftMethod","kind":4,"kindString":"Enumeration","flags":{"isExported":true},"children":[{"id":1931,"name":"CLOSED_QUADS","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"core/modules/make.ts","line":477,"character":16}],"defaultValue":"\"closed_quads\""},{"id":1935,"name":"CLOSED_RIBS","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"core/modules/make.ts","line":481,"character":15}],"defaultValue":"\"closed_ribs\""},{"id":1933,"name":"CLOSED_STRINGERS","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"core/modules/make.ts","line":479,"character":20}],"defaultValue":"\"closed_stringers\""},{"id":1930,"name":"OPEN_QUADS","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"core/modules/make.ts","line":476,"character":14}],"defaultValue":"\"open_quads\""},{"id":1934,"name":"OPEN_RIBS","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"core/modules/make.ts","line":480,"character":13}],"defaultValue":"\"open_ribs\""},{"id":1932,"name":"OPEN_STRINGERS","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"core/modules/make.ts","line":478,"character":18}],"defaultValue":"\"open_stringers\""}],"groups":[{"title":"Enumeration members","kind":16,"children":[1931,1935,1933,1930,1934,1932]}],"sources":[{"fileName":"core/modules/make.ts","line":475,"character":24}]},{"id":1991,"name":"Collection","kind":64,"kindString":"Function","flags":{"isExported":true},"signatures":[{"id":1992,"name":"Collection","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Adds a new collection to the model.","returns":"Entities, new collection, or a list of new collections.","tags":[{"tag":"example","text":"collection1 = make.Collection([point1,polyine1,polygon1])"},{"tag":"example_info","text":"Creates a collection containing point1, polyline1, polygon1."},{"tag":"example_link","text":"make.Collection.mob&node=1\n"}]},"parameters":[{"id":1993,"name":"__model__","kind":32768,"kindString":"Parameter","flags":{},"comment":{},"type":{"type":"reference","name":"GIModel","id":1393}},{"id":1994,"name":"parent_coll","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"Collection"},"type":{"type":"reference","name":"TId","id":275}},{"id":1995,"name":"geometry","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"List of points, polylines, polygons."},"type":{"type":"union","types":[{"type":"reference","name":"TId","id":275},{"type":"array","elementType":{"type":"reference","name":"TId","id":275}}]}}],"type":{"type":"reference","name":"TId","id":275}}],"sources":[{"fileName":"core/modules/make.ts","line":304,"character":26}]},{"id":2006,"name":"Copy","kind":64,"kindString":"Function","flags":{"isExported":true},"signatures":[{"id":2007,"name":"Copy","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Adds a new copy of specified entities to the model.","returns":"Entities, the copied entity or a list of copied entities.","tags":[{"tag":"example","text":"copy1 = make.Copy([position1,polyine1,polygon1], copy_positions, copy_attributes)"},{"tag":"example_info","text":"Creates a list containing a copy of the entities in sequence of input.\n"}]},"parameters":[{"id":2008,"name":"__model__","kind":32768,"kindString":"Parameter","flags":{},"comment":{},"type":{"type":"reference","name":"GIModel","id":1393}},{"id":2009,"name":"entities","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"Position, point, polyline, polygon, collection to be copied."},"type":{"type":"union","types":[{"type":"reference","name":"TId","id":275},{"type":"array","elementType":{"type":"reference","name":"TId","id":275}}]}},{"id":2010,"name":"copy_attributes","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"Enum to copy attributes or to have no attributes copied."},"type":{"type":"reference","name":"_ECopyAttribues","id":1926}}],"type":{"type":"union","types":[{"type":"reference","name":"TId","id":275},{"type":"array","elementType":{"type":"reference","name":"TId","id":275}}]}}],"sources":[{"fileName":"core/modules/make.ts","line":387,"character":20}]},{"id":2126,"name":"Divide","kind":64,"kindString":"Function","flags":{"isExported":true},"signatures":[{"id":2127,"name":"Divide","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Divides edges in a set of shorter edges.\n~\nIf the 'by_number' method is selected, then each edge is divided into a fixed number of equal length shorter edges.\nIf the 'by length' method is selected, then each edge is divided into shorter edges of the specified length.\nThe length of the last segment will be the remainder.\nIf the 'by_min_length' method is selected,\nthen the edge is divided into the maximum number of shorter edges\nthat have a new length that is equal to or greater than the minimum.\n~","returns":"Entities, a list of new edges resulting from the divide.","tags":[{"tag":"example","text":"segments1 = make.Divide(edge1, 5, by_number)"},{"tag":"example_info","text":"Creates a list of 5 equal segments from edge1."},{"tag":"example","text":"segments2 = make.Divide(edge1, 5, by_length)"},{"tag":"example_info","text":"If edge1 has length 13, creates from edge a list of two segments of length 5 and one segment of length 3.\n"}]},"parameters":[{"id":2128,"name":"__model__","kind":32768,"kindString":"Parameter","flags":{},"comment":{},"type":{"type":"reference","name":"GIModel","id":1393}},{"id":2129,"name":"edges","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"Edges, or entities from which edges can be extracted."},"type":{"type":"union","types":[{"type":"reference","name":"TId","id":275},{"type":"array","elementType":{"type":"reference","name":"TId","id":275}}]}},{"id":2130,"name":"divisor","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"Segment length or number of segments."},"type":{"type":"intrinsic","name":"number"}},{"id":2131,"name":"method","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"Enum, select the method for dividing edges."},"type":{"type":"reference","name":"_EDivideMethod","id":1940}}],"type":{"type":"array","elementType":{"type":"reference","name":"TId","id":275}}}],"sources":[{"fileName":"core/modules/make.ts","line":1078,"character":22}]},{"id":2103,"name":"Extrude","kind":64,"kindString":"Function","flags":{"isExported":true},"signatures":[{"id":2104,"name":"Extrude","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Extrudes geometry by distance or by vector.\n- Extrusion of a position, vertex, or point produces polylines;\n- Extrusion of an edge, wire, or polyline produces polygons;\n- Extrusion of a face or polygon produces polygons, capped at the top.","returns":"Entities, a list of new polygons or polylines resulting from the extrude.","tags":[{"tag":"example","text":"extrusion1 = make.Extrude(point1, 10, 2, 'quads')"},{"tag":"example_info","text":"Creates a polyline of total length 10 (with two edges of length 5 each) in the z-direction.\nIn this case, the 'quads' setting is ignored."},{"tag":"example","text":"extrusion2 = make.Extrude(polygon1, [0,5,0], 1, 'quads')"},{"tag":"example_info","text":"Extrudes polygon1 by 5 in the y-direction, creating a list of quad surfaces.\n"}]},"parameters":[{"id":2105,"name":"__model__","kind":32768,"kindString":"Parameter","flags":{},"comment":{},"type":{"type":"reference","name":"GIModel","id":1393}},{"id":2106,"name":"entities","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"Vertex, edge, wire, face, position, point, polyline, polygon, collection."},"type":{"type":"union","types":[{"type":"reference","name":"TId","id":275},{"type":"array","elementType":{"type":"reference","name":"TId","id":275}}]}},{"id":2107,"name":"distance","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"Number or vector. If number, assumed to be [0,0,value] (i.e. extrusion distance in z-direction)."},"type":{"type":"union","types":[{"type":"intrinsic","name":"number"},{"type":"reference","name":"Txyz","id":279}]}},{"id":2108,"name":"divisions","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"Number of divisions to divide extrusion by. Minimum is 1."},"type":{"type":"intrinsic","name":"number"}},{"id":2109,"name":"method","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"Enum, when extruding edges, select quads, stringers, or ribs"},"type":{"type":"reference","name":"_EExtrudeMethod","id":1936}}],"type":{"type":"union","types":[{"type":"reference","name":"TId","id":275},{"type":"array","elementType":{"type":"reference","name":"TId","id":275}}]}}],"sources":[{"fileName":"core/modules/make.ts","line":952,"character":23}]},{"id":2020,"name":"Hole","kind":64,"kindString":"Function","flags":{"isExported":true},"signatures":[{"id":2021,"name":"Hole","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Makes one or more holes in a polygon.\nEach hole is defined by a list of positions.\nThe positions must be on the polygon, i.e. they must be co-planar with the polygon and\nthey must be within the boundary of the polygon.\nIf the list of positions consists of a single list, then one hole will be generated.\nIf the list of positions consists of a list of lists, then multiple holes will be generated.\n~\nThe hole positions should lie within the polygon surface.","returns":"Entities, a list of wires resulting from the hole(s).\n"},"parameters":[{"id":2022,"name":"__model__","kind":32768,"kindString":"Parameter","flags":{},"comment":{},"type":{"type":"reference","name":"GIModel","id":1393}},{"id":2023,"name":"face","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"A polygon or a face to make holes in."},"type":{"type":"reference","name":"TId","id":275}},{"id":2024,"name":"positions","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"List of positions, or list of lists of positions, or entities from which positions can be extracted."},"type":{"type":"union","types":[{"type":"reference","name":"TId","id":275},{"type":"array","elementType":{"type":"reference","name":"TId","id":275}},{"type":"array","elementType":{"type":"array","elementType":{"type":"reference","name":"TId","id":275}}}]}}],"type":{"type":"array","elementType":{"type":"reference","name":"TId","id":275}}}],"sources":[{"fileName":"core/modules/make.ts","line":458,"character":20}]},{"id":2049,"name":"Loft","kind":64,"kindString":"Function","flags":{"isExported":true},"signatures":[{"id":2050,"name":"Loft","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Lofts between entities.\n~\nThe geometry that is generated depends on the method that is selected.\nThe 'loft_quads' methods will generate polygons.\nThe 'loft_stringers' and 'loft_ribs' methods will generate polylines.","returns":"Entities, a list of new polygons or polylines resulting from the loft.","tags":[{"tag":"example","text":"quads = make.Loft([polyline1,polyline2,polyline3], 1, 'open_quads')"},{"tag":"example_info","text":"Creates quad polygons lofting between polyline1, polyline2, polyline3."},{"tag":"example","text":"quads = make.Loft([polyline1,polyline2,polyline3], 1, 'closed_quads')"},{"tag":"example_info","text":"Creates quad polygons lofting between polyline1, polyline2, polyline3, and back to polyline1."},{"tag":"example","text":"quads = make.Loft([ [polyline1,polyline2], [polyline3,polyline4] ] , 1, 'open_quads')"},{"tag":"example_info","text":"Creates quad polygons lofting first between polyline1 and polyline2, and then between polyline3 and polyline4.\n"}]},"parameters":[{"id":2051,"name":"__model__","kind":32768,"kindString":"Parameter","flags":{},"comment":{},"type":{"type":"reference","name":"GIModel","id":1393}},{"id":2052,"name":"entities","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"List of entities, or list of lists of entities."},"type":{"type":"union","types":[{"type":"array","elementType":{"type":"reference","name":"TId","id":275}},{"type":"array","elementType":{"type":"array","elementType":{"type":"reference","name":"TId","id":275}}}]}},{"id":2053,"name":"divisions","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":2054,"name":"method","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"Enum, if 'closed', then close the loft back to the first entity in the list."},"type":{"type":"reference","name":"_ELoftMethod","id":1929}}],"type":{"type":"array","elementType":{"type":"reference","name":"TId","id":275}}}],"sources":[{"fileName":"core/modules/make.ts","line":698,"character":20}]},{"id":1956,"name":"Point","kind":64,"kindString":"Function","flags":{"isExported":true},"signatures":[{"id":1957,"name":"Point","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Adds a new point to the model. If a list of positions is provided as the input, then a list of points is generated.","returns":"Entities, new point or a list of new points.","tags":[{"tag":"example_info","text":"Creates a point at position1."},{"tag":"example","text":"point1 = make.Point(position1)"},{"tag":"example_info","text":"Creates a point at position1."},{"tag":"example_link","text":"make.Point.mob&node=1\n"}]},"parameters":[{"id":1958,"name":"__model__","kind":32768,"kindString":"Parameter","flags":{},"comment":{},"type":{"type":"reference","name":"GIModel","id":1393}},{"id":1959,"name":"positions","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"Position of point, or other entities from which positions will be extracted."},"type":{"type":"union","types":[{"type":"reference","name":"TId","id":275},{"type":"array","elementType":{"type":"reference","name":"TId","id":275}}]}}],"type":{"type":"union","types":[{"type":"reference","name":"TId","id":275},{"type":"array","elementType":{"type":"reference","name":"TId","id":275}}]}}],"sources":[{"fileName":"core/modules/make.ts","line":81,"character":21}]},{"id":1982,"name":"Polygon","kind":64,"kindString":"Function","flags":{"isExported":true},"signatures":[{"id":1983,"name":"Polygon","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Adds one or more new polygons to the model.","returns":"Entities, new polygon, or a list of new polygons.","tags":[{"tag":"example","text":"polygon1 = make.Polygon([position1,position2,position3])"},{"tag":"example_info","text":"Creates a polygon with vertices position1, position2, position3 in sequence."},{"tag":"example_link","text":"make.Polygon.mob&node=1\n"}]},"parameters":[{"id":1984,"name":"__model__","kind":32768,"kindString":"Parameter","flags":{},"comment":{},"type":{"type":"reference","name":"GIModel","id":1393}},{"id":1985,"name":"entities","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"List of positions, or list of lists of positions, or entities from which positions can be extracted."},"type":{"type":"union","types":[{"type":"reference","name":"TId","id":275},{"type":"array","elementType":{"type":"reference","name":"TId","id":275}},{"type":"array","elementType":{"type":"array","elementType":{"type":"reference","name":"TId","id":275}}}]}}],"type":{"type":"union","types":[{"type":"reference","name":"TId","id":275},{"type":"array","elementType":{"type":"reference","name":"TId","id":275}}]}}],"sources":[{"fileName":"core/modules/make.ts","line":261,"character":23}]},{"id":1969,"name":"Polyline","kind":64,"kindString":"Function","flags":{"isExported":true},"signatures":[{"id":1970,"name":"Polyline","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Adds one or more new polylines to the model.","returns":"Entities, new polyline, or a list of new polylines.","tags":[{"tag":"example","text":"polyline1 = make.Polyline([position1,position2,position3], close)"},{"tag":"example_info","text":"Creates a closed polyline with vertices position1, position2, position3 in sequence."},{"tag":"example_link","text":"make.Polyline.mob&node=1\n"}]},"parameters":[{"id":1971,"name":"__model__","kind":32768,"kindString":"Parameter","flags":{},"comment":{},"type":{"type":"reference","name":"GIModel","id":1393}},{"id":1972,"name":"entities","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"List of positions, or list of lists of positions, or entities from which positions can be extracted."},"type":{"type":"union","types":[{"type":"reference","name":"TId","id":275},{"type":"array","elementType":{"type":"reference","name":"TId","id":275}},{"type":"array","elementType":{"type":"array","elementType":{"type":"reference","name":"TId","id":275}}}]}},{"id":1973,"name":"close","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"Enum, 'open' or 'close'."},"type":{"type":"reference","name":"_EClose","id":1923}}],"type":{"type":"union","types":[{"type":"reference","name":"TId","id":275},{"type":"array","elementType":{"type":"reference","name":"TId","id":275}}]}}],"sources":[{"fileName":"core/modules/make.ts","line":171,"character":24}]},{"id":1948,"name":"Position","kind":64,"kindString":"Function","flags":{"isExported":true},"signatures":[{"id":1949,"name":"Position","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Adds a new position to the model.","returns":"Entities, new position, or a list of new positions, or a list of lists of new positions .","tags":[{"tag":"example","text":"position1 = make.Position([1,2,3])"},{"tag":"example_info","text":"Creates a position with coordinates x=1, y=2, z=3."},{"tag":"example_link","text":"make.Position.mob&node=1\n"}]},"parameters":[{"id":1950,"name":"__model__","kind":32768,"kindString":"Parameter","flags":{},"comment":{},"type":{"type":"reference","name":"GIModel","id":1393}},{"id":1951,"name":"coords","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"XYZ coordinates as a list of three numbers."},"type":{"type":"union","types":[{"type":"reference","name":"Txyz","id":279},{"type":"array","elementType":{"type":"reference","name":"Txyz","id":279}},{"type":"array","elementType":{"type":"array","elementType":{"type":"reference","name":"Txyz","id":279}}}]}}],"type":{"type":"union","types":[{"type":"reference","name":"TId","id":275},{"type":"array","elementType":{"type":"reference","name":"TId","id":275}},{"type":"array","elementType":{"type":"array","elementType":{"type":"reference","name":"TId","id":275}}}]}}],"sources":[{"fileName":"core/modules/make.ts","line":46,"character":24}]},{"id":2132,"name":"Unweld","kind":64,"kindString":"Function","flags":{"isExported":true},"signatures":[{"id":2133,"name":"Unweld","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Unweld vertices so that they do not share positions.\nFor the vertices of the specified entities, if they share positions with other entities in the model,\nthen those positions will be replaced with new positions.\nThis function performs a simple unweld.\nThat is, the vertices within the set of specified entities are not unwelded.","returns":"Entities, a list of new positions resulting from the unweld.","tags":[{"tag":"example","text":"mod.Unweld(polyline1)"},{"tag":"example_info","text":"Unwelds polyline1 from all ther entities that shares the same position.\n"}]},"parameters":[{"id":2134,"name":"__model__","kind":32768,"kindString":"Parameter","flags":{},"comment":{},"type":{"type":"reference","name":"GIModel","id":1393}},{"id":2135,"name":"entities","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"Vertex, edge, wire, face, point, polyline, polygon, collection."},"type":{"type":"union","types":[{"type":"reference","name":"TId","id":275},{"type":"array","elementType":{"type":"reference","name":"TId","id":275}}]}}],"type":{"type":"array","elementType":{"type":"reference","name":"TId","id":275}}}],"sources":[{"fileName":"core/modules/make.ts","line":1102,"character":22}]},{"id":2110,"name":"_Join","kind":64,"kindString":"Function","flags":{"isExported":true},"signatures":[{"id":2111,"name":"_Join","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Joins polylines to polylines or polygons to polygons.\n~\nNew polylins or polygons are created. The original polyline or polygons are not affected.","returns":"Entities, a list of new joined polylines or polygons.","tags":[{"tag":"example","text":"joined1 = make.Join([polyline1,polyline2])"},{"tag":"example_info","text":"Creates a new polyline by joining polyline1 and polyline2. Geometries must be of the same type.\n"}]},"parameters":[{"id":2112,"name":"__model__","kind":32768,"kindString":"Parameter","flags":{},"comment":{},"type":{"type":"reference","name":"GIModel","id":1393}},{"id":2113,"name":"geometry","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"Polylines or polygons."},"type":{"type":"array","elementType":{"type":"reference","name":"TId","id":275}}}],"type":{"type":"reference","name":"TId","id":275}}],"sources":[{"fileName":"core/modules/make.ts","line":1000,"character":21}]},{"id":2141,"name":"_PolygonHoles","kind":64,"kindString":"Function","flags":{},"signatures":[{"id":2142,"name":"_PolygonHoles","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Adds a single new polygon to the model with one or more holes.","returns":"Entities, a list of new polygons.","tags":[{"tag":"example","text":"polygon1 = make.Polygon([position1,position2,position3], [position4,position5,position6])"},{"tag":"example_info","text":"Creates a polygon with  a hole, with vertices in sequence from position1 to position6.\n"}]},"parameters":[{"id":2143,"name":"__model__","kind":32768,"kindString":"Parameter","flags":{},"comment":{},"type":{"type":"reference","name":"GIModel","id":1393}},{"id":2144,"name":"positions","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"List of positions."},"type":{"type":"array","elementType":{"type":"reference","name":"TId","id":275}}},{"id":2145,"name":"hole_positions","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"List of positions for the holes. For multiple holes, a list of list can provided."},"type":{"type":"union","types":[{"type":"array","elementType":{"type":"reference","name":"TId","id":275}},{"type":"array","elementType":{"type":"array","elementType":{"type":"reference","name":"TId","id":275}}}]}}],"type":{"type":"reference","name":"TId","id":275}}],"sources":[{"fileName":"core/modules/make.ts","line":1165,"character":22}]},{"id":1986,"name":"_collection","kind":64,"kindString":"Function","flags":{"isExported":true},"signatures":[{"id":1987,"name":"_collection","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1988,"name":"__model__","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"GIModel","id":1393}},{"id":1989,"name":"parent_index","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":1990,"name":"ents_arr","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"union","types":[{"type":"reference","name":"TEntTypeIdx","id":270},{"type":"array","elementType":{"type":"reference","name":"TEntTypeIdx","id":270}}]}}],"type":{"type":"reference","name":"TEntTypeIdx","id":270}}],"sources":[{"fileName":"core/modules/make.ts","line":278,"character":27}]},{"id":1996,"name":"_copyGeom","kind":64,"kindString":"Function","flags":{},"signatures":[{"id":1997,"name":"_copyGeom","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1998,"name":"__model__","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"GIModel","id":1393}},{"id":1999,"name":"ents_arr","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"union","types":[{"type":"reference","name":"TEntTypeIdx","id":270},{"type":"array","elementType":{"type":"reference","name":"TEntTypeIdx","id":270}}]}},{"id":2000,"name":"copy_attributes","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"boolean"}}],"type":{"type":"union","types":[{"type":"reference","name":"TEntTypeIdx","id":270},{"type":"array","elementType":{"type":"reference","name":"TEntTypeIdx","id":270}}]}}],"sources":[{"fileName":"core/modules/make.ts","line":321,"character":18}]},{"id":2001,"name":"_copyGeomPosis","kind":64,"kindString":"Function","flags":{},"signatures":[{"id":2002,"name":"_copyGeomPosis","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":2003,"name":"__model__","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"GIModel","id":1393}},{"id":2004,"name":"ents_arr","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"union","types":[{"type":"reference","name":"TEntTypeIdx","id":270},{"type":"array","elementType":{"type":"reference","name":"TEntTypeIdx","id":270}}]}},{"id":2005,"name":"copy_attributes","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"boolean"}}],"type":{"type":"array","elementType":{"type":"reference","name":"TEntTypeIdx","id":270}}}],"sources":[{"fileName":"core/modules/make.ts","line":344,"character":23}]},{"id":2120,"name":"_divide","kind":64,"kindString":"Function","flags":{},"signatures":[{"id":2121,"name":"_divide","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":2122,"name":"__model__","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"GIModel","id":1393}},{"id":2123,"name":"ents_arr","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"union","types":[{"type":"reference","name":"TEntTypeIdx","id":270},{"type":"array","elementType":{"type":"reference","name":"TEntTypeIdx","id":270}}]}},{"id":2124,"name":"divisor","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":2125,"name":"method","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"_EDivideMethod","id":1940}}],"type":{"type":"array","elementType":{"type":"reference","name":"TEntTypeIdx","id":270}}}],"sources":[{"fileName":"core/modules/make.ts","line":1039,"character":16}]},{"id":2114,"name":"_divideEdge","kind":64,"kindString":"Function","flags":{},"signatures":[{"id":2115,"name":"_divideEdge","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":2116,"name":"__model__","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"GIModel","id":1393}},{"id":2117,"name":"edge_i","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":2118,"name":"divisor","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":2119,"name":"method","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"_EDivideMethod","id":1940}}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}}],"sources":[{"fileName":"core/modules/make.ts","line":1013,"character":20}]},{"id":2096,"name":"_extrude","kind":64,"kindString":"Function","flags":{},"signatures":[{"id":2097,"name":"_extrude","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":2098,"name":"__model__","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"GIModel","id":1393}},{"id":2099,"name":"ents_arr","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"union","types":[{"type":"reference","name":"TEntTypeIdx","id":270},{"type":"array","elementType":{"type":"reference","name":"TEntTypeIdx","id":270}}]}},{"id":2100,"name":"dist","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"union","types":[{"type":"intrinsic","name":"number"},{"type":"reference","name":"Txyz","id":279}]}},{"id":2101,"name":"divisions","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":2102,"name":"method","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"_EExtrudeMethod","id":1936}}],"type":{"type":"array","elementType":{"type":"reference","name":"TEntTypeIdx","id":270}}}],"sources":[{"fileName":"core/modules/make.ts","line":901,"character":17}]},{"id":2090,"name":"_extrudeCap","kind":64,"kindString":"Function","flags":{},"signatures":[{"id":2091,"name":"_extrudeCap","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":2092,"name":"__model__","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"GIModel","id":1393}},{"id":2093,"name":"index","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":2094,"name":"strip_posis_map","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Map","typeArguments":[{"type":"intrinsic","name":"number"},{"type":"array","elementType":{"type":"intrinsic","name":"number"}}]}},{"id":2095,"name":"divisions","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"number"}}],"sources":[{"fileName":"core/modules/make.ts","line":883,"character":20}]},{"id":2055,"name":"_extrudeColl","kind":64,"kindString":"Function","flags":{},"signatures":[{"id":2056,"name":"_extrudeColl","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":2057,"name":"__model__","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"GIModel","id":1393}},{"id":2058,"name":"index","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":2059,"name":"extrude_vec","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Txyz","id":279}},{"id":2060,"name":"divisions","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":2061,"name":"method","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"_EExtrudeMethod","id":1936}}],"type":{"type":"array","elementType":{"type":"reference","name":"TEntTypeIdx","id":270}}}],"sources":[{"fileName":"core/modules/make.ts","line":722,"character":21}]},{"id":2062,"name":"_extrudeDim0","kind":64,"kindString":"Function","flags":{},"signatures":[{"id":2063,"name":"_extrudeDim0","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":2064,"name":"__model__","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"GIModel","id":1393}},{"id":2065,"name":"ent_type","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":2066,"name":"index","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":2067,"name":"extrude_vec","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Txyz","id":279}},{"id":2068,"name":"divisions","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"array","elementType":{"type":"reference","name":"TEntTypeIdx","id":270}}}],"sources":[{"fileName":"core/modules/make.ts","line":732,"character":21}]},{"id":2069,"name":"_extrudeQuads","kind":64,"kindString":"Function","flags":{},"signatures":[{"id":2070,"name":"_extrudeQuads","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":2071,"name":"__model__","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"GIModel","id":1393}},{"id":2072,"name":"ent_type","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":2073,"name":"index","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":2074,"name":"extrude_vec","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Txyz","id":279}},{"id":2075,"name":"divisions","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"array","elementType":{"type":"reference","name":"TEntTypeIdx","id":270}}}],"sources":[{"fileName":"core/modules/make.ts","line":747,"character":22}]},{"id":2083,"name":"_extrudeRibs","kind":64,"kindString":"Function","flags":{},"signatures":[{"id":2084,"name":"_extrudeRibs","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":2085,"name":"__model__","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"GIModel","id":1393}},{"id":2086,"name":"ent_type","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":2087,"name":"index","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":2088,"name":"extrude_vec","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Txyz","id":279}},{"id":2089,"name":"divisions","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"array","elementType":{"type":"reference","name":"TEntTypeIdx","id":270}}}],"sources":[{"fileName":"core/modules/make.ts","line":820,"character":21}]},{"id":2076,"name":"_extrudeStringers","kind":64,"kindString":"Function","flags":{},"signatures":[{"id":2077,"name":"_extrudeStringers","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":2078,"name":"__model__","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"GIModel","id":1393}},{"id":2079,"name":"ent_type","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":2080,"name":"index","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":2081,"name":"extrude_vec","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Txyz","id":279}},{"id":2082,"name":"divisions","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"array","elementType":{"type":"reference","name":"TEntTypeIdx","id":270}}}],"sources":[{"fileName":"core/modules/make.ts","line":789,"character":26}]},{"id":2016,"name":"_getHolePosisFromEnts","kind":64,"kindString":"Function","flags":{},"signatures":[{"id":2017,"name":"_getHolePosisFromEnts","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":2018,"name":"__model__","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"GIModel","id":1393}},{"id":2019,"name":"ents_arr","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"union","types":[{"type":"array","elementType":{"type":"reference","name":"TEntTypeIdx","id":270}},{"type":"array","elementType":{"type":"array","elementType":{"type":"reference","name":"TEntTypeIdx","id":270}}}]}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"core/modules/make.ts","line":416,"character":30}]},{"id":1978,"name":"_getPgonPosisFromEnts","kind":64,"kindString":"Function","flags":{},"signatures":[{"id":1979,"name":"_getPgonPosisFromEnts","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1980,"name":"__model__","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"GIModel","id":1393}},{"id":1981,"name":"ents_arr","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"union","types":[{"type":"reference","name":"TEntTypeIdx","id":270},{"type":"array","elementType":{"type":"reference","name":"TEntTypeIdx","id":270}},{"type":"array","elementType":{"type":"array","elementType":{"type":"reference","name":"TEntTypeIdx","id":270}}}]}}],"type":{"type":"array","elementType":{"type":"array","elementType":{"type":"reference","name":"TEntTypeIdx","id":270}}}}],"sources":[{"fileName":"core/modules/make.ts","line":198,"character":30}]},{"id":1965,"name":"_getPlinePosisFromEnts","kind":64,"kindString":"Function","flags":{},"signatures":[{"id":1966,"name":"_getPlinePosisFromEnts","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1967,"name":"__model__","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"GIModel","id":1393}},{"id":1968,"name":"ents_arr","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"union","types":[{"type":"reference","name":"TEntTypeIdx","id":270},{"type":"array","elementType":{"type":"reference","name":"TEntTypeIdx","id":270}},{"type":"array","elementType":{"type":"array","elementType":{"type":"reference","name":"TEntTypeIdx","id":270}}}]}}],"type":{"type":"array","elementType":{"type":"array","elementType":{"type":"reference","name":"TEntTypeIdx","id":270}}}}],"sources":[{"fileName":"core/modules/make.ts","line":107,"character":31}]},{"id":2011,"name":"_hole","kind":64,"kindString":"Function","flags":{},"signatures":[{"id":2012,"name":"_hole","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":2013,"name":"__model__","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"GIModel","id":1393}},{"id":2014,"name":"face_ent_arr","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"TEntTypeIdx","id":270}},{"id":2015,"name":"holes_ents_arr","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"union","types":[{"type":"array","elementType":{"type":"reference","name":"TEntTypeIdx","id":270}},{"type":"array","elementType":{"type":"array","elementType":{"type":"reference","name":"TEntTypeIdx","id":270}}}]}}],"type":{"type":"array","elementType":{"type":"reference","name":"TEntTypeIdx","id":270}}}],"sources":[{"fileName":"core/modules/make.ts","line":403,"character":14}]},{"id":2043,"name":"_loft","kind":64,"kindString":"Function","flags":{},"signatures":[{"id":2044,"name":"_loft","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":2045,"name":"__model__","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"GIModel","id":1393}},{"id":2046,"name":"ents_arrs","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"union","types":[{"type":"array","elementType":{"type":"reference","name":"TEntTypeIdx","id":270}},{"type":"array","elementType":{"type":"array","elementType":{"type":"reference","name":"TEntTypeIdx","id":270}}}]}},{"id":2047,"name":"divisions","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":2048,"name":"method","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"_ELoftMethod","id":1929}}],"type":{"type":"array","elementType":{"type":"reference","name":"TEntTypeIdx","id":270}}}],"sources":[{"fileName":"core/modules/make.ts","line":654,"character":14}]},{"id":2025,"name":"_loftQuads","kind":64,"kindString":"Function","flags":{},"signatures":[{"id":2026,"name":"_loftQuads","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":2027,"name":"__model__","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"GIModel","id":1393}},{"id":2028,"name":"ents_arr","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"array","elementType":{"type":"reference","name":"TEntTypeIdx","id":270}}},{"id":2029,"name":"divisions","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":2030,"name":"method","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"_ELoftMethod","id":1929}}],"type":{"type":"array","elementType":{"type":"reference","name":"TEntTypeIdx","id":270}}}],"sources":[{"fileName":"core/modules/make.ts","line":483,"character":19}]},{"id":2037,"name":"_loftRibs","kind":64,"kindString":"Function","flags":{},"signatures":[{"id":2038,"name":"_loftRibs","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":2039,"name":"__model__","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"GIModel","id":1393}},{"id":2040,"name":"ents_arr","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"array","elementType":{"type":"reference","name":"TEntTypeIdx","id":270}}},{"id":2041,"name":"divisions","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":2042,"name":"method","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"_ELoftMethod","id":1929}}],"type":{"type":"array","elementType":{"type":"reference","name":"TEntTypeIdx","id":270}}}],"sources":[{"fileName":"core/modules/make.ts","line":591,"character":18}]},{"id":2031,"name":"_loftStringers","kind":64,"kindString":"Function","flags":{},"signatures":[{"id":2032,"name":"_loftStringers","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":2033,"name":"__model__","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"GIModel","id":1393}},{"id":2034,"name":"ents_arr","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"array","elementType":{"type":"reference","name":"TEntTypeIdx","id":270}}},{"id":2035,"name":"divisions","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":2036,"name":"method","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"_ELoftMethod","id":1929}}],"type":{"type":"array","elementType":{"type":"reference","name":"TEntTypeIdx","id":270}}}],"sources":[{"fileName":"core/modules/make.ts","line":550,"character":23}]},{"id":1952,"name":"_point","kind":64,"kindString":"Function","flags":{},"signatures":[{"id":1953,"name":"_point","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1954,"name":"__model__","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"GIModel","id":1393}},{"id":1955,"name":"ents_arr","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"union","types":[{"type":"reference","name":"TEntTypeIdx","id":270},{"type":"array","elementType":{"type":"reference","name":"TEntTypeIdx","id":270}},{"type":"array","elementType":{"type":"array","elementType":{"type":"reference","name":"TEntTypeIdx","id":270}}}]}}],"type":{"type":"union","types":[{"type":"reference","name":"TEntTypeIdx","id":270},{"type":"array","elementType":{"type":"reference","name":"TEntTypeIdx","id":270}}]}}],"sources":[{"fileName":"core/modules/make.ts","line":55,"character":15}]},{"id":1974,"name":"_polygon","kind":64,"kindString":"Function","flags":{},"signatures":[{"id":1975,"name":"_polygon","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1976,"name":"__model__","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"GIModel","id":1393}},{"id":1977,"name":"ents_arr","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"union","types":[{"type":"array","elementType":{"type":"reference","name":"TEntTypeIdx","id":270}},{"type":"array","elementType":{"type":"array","elementType":{"type":"reference","name":"TEntTypeIdx","id":270}}}]}}],"type":{"type":"union","types":[{"type":"reference","name":"TEntTypeIdx","id":270},{"type":"array","elementType":{"type":"reference","name":"TEntTypeIdx","id":270}}]}}],"sources":[{"fileName":"core/modules/make.ts","line":189,"character":17}]},{"id":2136,"name":"_polygonHoles","kind":64,"kindString":"Function","flags":{},"signatures":[{"id":2137,"name":"_polygonHoles","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":2138,"name":"__model__","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"GIModel","id":1393}},{"id":2139,"name":"ents_arr","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"array","elementType":{"type":"reference","name":"TEntTypeIdx","id":270}}},{"id":2140,"name":"holes_ents_arr","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"union","types":[{"type":"array","elementType":{"type":"reference","name":"TEntTypeIdx","id":270}},{"type":"array","elementType":{"type":"array","elementType":{"type":"reference","name":"TEntTypeIdx","id":270}}}]}}],"type":{"type":"reference","name":"TEntTypeIdx","id":270}}],"sources":[{"fileName":"core/modules/make.ts","line":1143,"character":22}]},{"id":1960,"name":"_polyline","kind":64,"kindString":"Function","flags":{},"signatures":[{"id":1961,"name":"_polyline","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1962,"name":"__model__","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"GIModel","id":1393}},{"id":1963,"name":"ents_arr","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"union","types":[{"type":"array","elementType":{"type":"reference","name":"TEntTypeIdx","id":270}},{"type":"array","elementType":{"type":"array","elementType":{"type":"reference","name":"TEntTypeIdx","id":270}}}]}},{"id":1964,"name":"close","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"_EClose","id":1923}}],"type":{"type":"union","types":[{"type":"reference","name":"TEntTypeIdx","id":270},{"type":"array","elementType":{"type":"reference","name":"TEntTypeIdx","id":270}}]}}],"sources":[{"fileName":"core/modules/make.ts","line":97,"character":18}]},{"id":1944,"name":"_position","kind":64,"kindString":"Function","flags":{},"signatures":[{"id":1945,"name":"_position","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1946,"name":"__model__","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"GIModel","id":1393}},{"id":1947,"name":"coords","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"union","types":[{"type":"reference","name":"Txyz","id":279},{"type":"array","elementType":{"type":"reference","name":"Txyz","id":279}},{"type":"array","elementType":{"type":"array","elementType":{"type":"reference","name":"Txyz","id":279}}}]}}],"type":{"type":"union","types":[{"type":"reference","name":"TEntTypeIdx","id":270},{"type":"array","elementType":{"type":"reference","name":"TEntTypeIdx","id":270}},{"type":"array","elementType":{"type":"array","elementType":{"type":"reference","name":"TEntTypeIdx","id":270}}}]}}],"sources":[{"fileName":"core/modules/make.ts","line":21,"character":18}]}],"groups":[{"title":"Enumerations","kind":4,"children":[1923,1926,1940,1936,1929]},{"title":"Functions","kind":64,"children":[1991,2006,2126,2103,2020,2049,1956,1982,1969,1948,2132,2110,2141,1986,1996,2001,2120,2114,2096,2090,2055,2062,2069,2083,2076,2016,1978,1965,2011,2043,2025,2037,2031,1952,1974,2136,1960,1944]}],"sources":[{"fileName":"core/modules/make.ts","line":1,"character":0}]},{"id":2203,"name":"\"core/modules/modify\"","kind":1,"kindString":"External module","flags":{"isExported":true},"originalName":"C:/Dropbox/Files/Software/GitHub/design-automation/mobius-parametric-modeller/src/assets/core/modules/modify.ts","comment":{"shortText":"The `modify` module has functions for modifying existing entities in the model.\nThese functions do not make any new entities, but they may change attribute values.\nAll these functions all return void."},"children":[{"id":2227,"name":"_EDeleteMethod","kind":4,"kindString":"Enumeration","flags":{"isExported":true},"children":[{"id":2228,"name":"DEL_UNUSED_POINTS","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"core/modules/modify.ts","line":592,"character":21}],"defaultValue":"\"del_unused_posis\""},{"id":2229,"name":"KEEP_UNUSED_POINTS","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"core/modules/modify.ts","line":593,"character":22}],"defaultValue":"\"keep_unused_posis\""}],"groups":[{"title":"Enumeration members","kind":16,"children":[2228,2229]}],"sources":[{"fileName":"core/modules/modify.ts","line":591,"character":26}]},{"id":2204,"name":"_EModifyCollectionMethod","kind":4,"kindString":"Enumeration","flags":{"isExported":true},"children":[{"id":2206,"name":"ADD_ENTITIES","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"core/modules/modify.ts","line":274,"character":16}],"defaultValue":"\"add_entities\""},{"id":2207,"name":"REMOVE_ENTITIES","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"core/modules/modify.ts","line":275,"character":19}],"defaultValue":"\"remove_entities\""},{"id":2205,"name":"SET_PARENT_ENTITY","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"core/modules/modify.ts","line":273,"character":21}],"defaultValue":"\"set_parent\""}],"groups":[{"title":"Enumeration members","kind":16,"children":[2206,2207,2205]}],"sources":[{"fileName":"core/modules/modify.ts","line":272,"character":36}]},{"id":2208,"name":"_EPromoteMethod","kind":4,"kindString":"Enumeration","flags":{"isExported":true},"children":[{"id":2211,"name":"AVERAGE","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"core/modules/modify.ts","line":442,"character":11}],"defaultValue":"\"average\""},{"id":2209,"name":"FIRST","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"core/modules/modify.ts","line":440,"character":9}],"defaultValue":"\"first\""},{"id":2210,"name":"LAST","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"core/modules/modify.ts","line":441,"character":8}],"defaultValue":"\"last\""},{"id":2215,"name":"MAX","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"core/modules/modify.ts","line":446,"character":7}],"defaultValue":"\"max\""},{"id":2212,"name":"MEDIAN","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"core/modules/modify.ts","line":443,"character":10}],"defaultValue":"\"median\""},{"id":2214,"name":"MIN","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"core/modules/modify.ts","line":445,"character":7}],"defaultValue":"\"min\""},{"id":2213,"name":"SUM","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"core/modules/modify.ts","line":444,"character":7}],"defaultValue":"\"sum\""}],"groups":[{"title":"Enumeration members","kind":16,"children":[2211,2209,2210,2215,2212,2214,2213]}],"sources":[{"fileName":"core/modules/modify.ts","line":439,"character":27}]},{"id":2216,"name":"_EPromoteTarget","kind":4,"kindString":"Enumeration","flags":{"isExported":true},"children":[{"id":2225,"name":"COLL","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"core/modules/modify.ts","line":458,"character":8}],"defaultValue":"\"collections\""},{"id":2219,"name":"EDGE","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"core/modules/modify.ts","line":452,"character":8}],"defaultValue":"\"edges\""},{"id":2221,"name":"FACE","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"core/modules/modify.ts","line":454,"character":8}],"defaultValue":"\"faces\""},{"id":2226,"name":"MOD","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"core/modules/modify.ts","line":459,"character":7}],"defaultValue":"\"model\""},{"id":2224,"name":"PGON","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"core/modules/modify.ts","line":457,"character":8}],"defaultValue":"\"pgons\""},{"id":2223,"name":"PLINE","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"core/modules/modify.ts","line":456,"character":9}],"defaultValue":"\"plines\""},{"id":2222,"name":"POINT","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"core/modules/modify.ts","line":455,"character":9}],"defaultValue":"\"points\""},{"id":2217,"name":"POSI","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"core/modules/modify.ts","line":450,"character":8}],"defaultValue":"\"positions\""},{"id":2218,"name":"VERT","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"core/modules/modify.ts","line":451,"character":8}],"defaultValue":"\"vertices\""},{"id":2220,"name":"WIRE","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"core/modules/modify.ts","line":453,"character":8}],"defaultValue":"\"wires\""}],"groups":[{"title":"Enumeration members","kind":16,"children":[2225,2219,2221,2226,2224,2223,2222,2217,2218,2220]}],"sources":[{"fileName":"core/modules/modify.ts","line":449,"character":27}]},{"id":2294,"name":"Close","kind":64,"kindString":"Function","flags":{"isExported":true},"signatures":[{"id":2295,"name":"Close","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Closes polyline(s) if open.","returns":"void","tags":[{"tag":"example","text":"modify.Close([polyline1,polyline2,...])"},{"tag":"example_info","text":"If open, polylines are changed to closed; if already closed, nothing happens.\n"}]},"parameters":[{"id":2296,"name":"__model__","kind":32768,"kindString":"Parameter","flags":{},"comment":{},"type":{"type":"reference","name":"GIModel","id":1393}},{"id":2297,"name":"lines","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"Polyline(s)."},"type":{"type":"union","types":[{"type":"reference","name":"TId","id":275},{"type":"array","elementType":{"type":"reference","name":"TId","id":275}}]}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"core/modules/modify.ts","line":431,"character":21}]},{"id":2266,"name":"Collection","kind":64,"kindString":"Function","flags":{"isExported":true},"signatures":[{"id":2267,"name":"Collection","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Modifies a collection.\n~\nIf the method is 'set_parent', then the parent can be updated by specifying a parent collection.\nIf the method is 'add_entities', then entities are added to the collection.\nIf the method is 'remove_entities', then entities are removed from the collection.\nIf adding or removing entities, then the entities must be points, polylines, or polygons.","returns":"void\n"},"parameters":[{"id":2268,"name":"__model__","kind":32768,"kindString":"Parameter","flags":{},"comment":{},"type":{"type":"reference","name":"GIModel","id":1393}},{"id":2269,"name":"coll","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"The collection to be updated."},"type":{"type":"reference","name":"TId","id":275}},{"id":2270,"name":"entities","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"Points, polylines, and polygons, or a single collection."},"type":{"type":"union","types":[{"type":"reference","name":"TId","id":275},{"type":"array","elementType":{"type":"reference","name":"TId","id":275}}]}},{"id":2271,"name":"method","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"Enum, the method to use when modifying the collection."},"type":{"type":"reference","name":"_EModifyCollectionMethod","id":2204}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"core/modules/modify.ts","line":333,"character":26}]},{"id":2320,"name":"Delete","kind":64,"kindString":"Function","flags":{"isExported":true},"signatures":[{"id":2321,"name":"Delete","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Deletes geometric entities: positions, points, polylines, polygons, and collections.\nWhen deleting positions, any topology that requires those positions will also be deleted.\n(For example, any vertices linked to the deleted position will also be deleted,\nwhich may in turn result in some edges being deleted, and so forth.)\nFor positions, the selection to delete or keep unused positions is ignored.\nWhen deleting objects (point, polyline, and polygons), topology is also deleted.\nWhen deleting collections, none of the objects in the collection are deleted.","returns":"void","tags":[{"tag":"example","text":"modify.Delete(polygon1)"},{"tag":"example_info","text":"Deletes polygon1 from the model.\n"}]},"parameters":[{"id":2322,"name":"__model__","kind":32768,"kindString":"Parameter","flags":{},"comment":{},"type":{"type":"reference","name":"GIModel","id":1393}},{"id":2323,"name":"entities","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"Position, point, polyline, polygon, collection."},"type":{"type":"union","types":[{"type":"reference","name":"TId","id":275},{"type":"array","elementType":{"type":"reference","name":"TId","id":275}}]}},{"id":2324,"name":"del_unused_posis","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"Enum, delete or keep unused positions."},"type":{"type":"reference","name":"_EDeleteMethod","id":2227}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"core/modules/modify.ts","line":637,"character":22}]},{"id":2329,"name":"Keep","kind":64,"kindString":"Function","flags":{"isExported":true},"signatures":[{"id":2330,"name":"Keep","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Keeps the specified geometric entities: positions, points, polylines, polygons, and collections.\nEverything else in the model is deleted.\nWhen a collection is kept, all objects inside the collection are also kept.\nWhen an object is kept, all positions used by the object are also kept.","returns":"void","tags":[{"tag":"example","text":"modify.Delete(polygon1)"},{"tag":"example_info","text":"Deletes polygon1 from the model.\n"}]},"parameters":[{"id":2331,"name":"__model__","kind":32768,"kindString":"Parameter","flags":{},"comment":{},"type":{"type":"reference","name":"GIModel","id":1393}},{"id":2332,"name":"entities","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"Position, point, polyline, polygon, collection."},"type":{"type":"union","types":[{"type":"reference","name":"TId","id":275},{"type":"array","elementType":{"type":"reference","name":"TId","id":275}}]}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"core/modules/modify.ts","line":708,"character":20}]},{"id":2248,"name":"Mirror","kind":64,"kindString":"Function","flags":{"isExported":true},"signatures":[{"id":2249,"name":"Mirror","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Mirrors entities across plane.","returns":"void","tags":[{"tag":"example","text":"modify.Mirror(polygon1, plane1)"},{"tag":"example_info","text":"Mirrors polygon1 across plane1.\n"}]},"parameters":[{"id":2250,"name":"__model__","kind":32768,"kindString":"Parameter","flags":{},"comment":{},"type":{"type":"reference","name":"GIModel","id":1393}},{"id":2251,"name":"entities","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"Vertex, edge, wire, face, plane, position, point, polyline, polygon, collection."},"type":{"type":"union","types":[{"type":"reference","name":"TId","id":275},{"type":"array","elementType":{"type":"reference","name":"TId","id":275}}]}},{"id":2252,"name":"origin","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"Position, vertex, point, list of three numbers."},"type":{"type":"union","types":[{"type":"reference","name":"Txyz","id":279},{"type":"reference","name":"TId","id":275}]}},{"id":2253,"name":"direction","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"Vector or a list of three numbers."},"type":{"type":"reference","name":"Txyz","id":279}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"core/modules/modify.ts","line":198,"character":22}]},{"id":2230,"name":"Move","kind":64,"kindString":"Function","flags":{"isExported":true},"signatures":[{"id":2231,"name":"Move","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Moves entities. The directio and distance if movement is specified as a vector.\n~\nIf only one vector is given, then all entities are moved by the same vector.\nIf a list of vectors is given, the each entity will be moved by a different vector.\nIn this case, the number of vectors should be equal to the number of entities.\n~\nIf a position is shared between entites that are being moved by different vectors,\nthen the position will be moved by the average of the vectors.","returns":"void","tags":[{"tag":"example","text":"modify.Move(pline1, [1,2,3])"},{"tag":"example_info","text":"Moves pline1 by [1,2,3]."},{"tag":"example","text":"modify.Move([pos1, pos2, pos3], [[0,0,1], [0,0,1], [0,1,0]] )"},{"tag":"example_info","text":"Moves pos1 by [0,0,1], pos2 by [0,0,1], and pos3 by [0,1,0]."},{"tag":"example","text":"modify.Move([pgon1, pgon2], [1,2,3] )"},{"tag":"example_info","text":"Moves both pgon1 and pgon2 by [1,2,3].\n"}]},"parameters":[{"id":2232,"name":"__model__","kind":32768,"kindString":"Parameter","flags":{},"comment":{},"type":{"type":"reference","name":"GIModel","id":1393}},{"id":2233,"name":"entities","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"An entity or list of entities."},"type":{"type":"union","types":[{"type":"reference","name":"TId","id":275},{"type":"array","elementType":{"type":"reference","name":"TId","id":275}}]}},{"id":2234,"name":"vectors","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"union","types":[{"type":"reference","name":"Txyz","id":279},{"type":"array","elementType":{"type":"reference","name":"Txyz","id":279}}]}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"core/modules/modify.ts","line":41,"character":20}]},{"id":2304,"name":"PushAttribs","kind":64,"kindString":"Function","flags":{"isExported":true},"signatures":[{"id":2305,"name":"PushAttribs","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Pushes existing attribute values onto other entities.\nAttribute values can be promoted up the hierarchy, demoted down the hierarchy, or transferred across the hierarchy.\n~\nIn certain cases, when attributes are pushed, they may be aggregated. For example, if you are pushing attributes\nfrom vertices to polygons, then there will be multiple vertex attributes that can be combined in\ndifferent ways.\nThe 'method' specifies how the attributes should be aggregated. Note that if no aggregation is required\nthen the aggregation method is ignored.\n~\nThe aggregation methods consist of numerical functions such as average, median, sum, max, and min. These will\nonly work if the attribute values are numbers or lists of numbers. If the attribute values are string, then\nthe numerical functions are ignored.\n~\nIf the attribute values are lists of numbers, then these aggregation methods work on the individual items in the list.\nFor example, lets say you have an attribute consisting of normal vectors on vertices. If you push these attributes\ndown to the positions, then aggregation may be required, since multiple vertices can share the same position.\nIn this case, if you choose the `average` aggregation method, then resulting vectors on the positions will be the\naverage of vertex vectors.","returns":"void","tags":[{"tag":"example","text":"promote1 = modify.PushAttribs([pgon1, pgon2], 'area', collections, sum)"},{"tag":"example_info","text":"For the two polygons (pgon1 and pgon2), it gets the attribute values from the attribute called `area`,\nand pushes them up to the collection level. The `sum` method specifies that the two areas should be added up.\nNote that in order to create an attribute at the collection level, the two polygons should be part of a\ncollection. If they are not part of the collection, then no attribute values will be push.\n"}]},"parameters":[{"id":2306,"name":"__model__","kind":32768,"kindString":"Parameter","flags":{},"comment":{},"type":{"type":"reference","name":"GIModel","id":1393}},{"id":2307,"name":"entities","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"The entities that currently contain the attribute values."},"type":{"type":"union","types":[{"type":"reference","name":"TId","id":275},{"type":"array","elementType":{"type":"reference","name":"TId","id":275}}]}},{"id":2308,"name":"attrib_name","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"The name of the attribute to be promoted, demoted, or transferred."},"type":{"type":"intrinsic","name":"string"}},{"id":2309,"name":"to_level","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"Enum; The level to which to promote, demote, or transfer the attribute values."},"type":{"type":"reference","name":"_EPromoteTarget","id":2216}},{"id":2310,"name":"method","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"Enum; The method to use when attribute values need to be aggregated."},"type":{"type":"reference","name":"_EPromoteMethod","id":2208}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"core/modules/modify.ts","line":539,"character":27}]},{"id":2276,"name":"Reverse","kind":64,"kindString":"Function","flags":{"isExported":true},"signatures":[{"id":2277,"name":"Reverse","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Reverses direction of entities.","returns":"void","tags":[{"tag":"example","text":"modify.Reverse(face1)"},{"tag":"example_info","text":"Flips face1 and reverses its normal."},{"tag":"example","text":"modify.Reverse(polyline1)"},{"tag":"example_info","text":"Reverses the order of vertices to reverse the direction of the polyline.\n"}]},"parameters":[{"id":2278,"name":"__model__","kind":32768,"kindString":"Parameter","flags":{},"comment":{},"type":{"type":"reference","name":"GIModel","id":1393}},{"id":2279,"name":"entities","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"Wire, face, polyline, polygon."},"type":{"type":"union","types":[{"type":"reference","name":"TId","id":275},{"type":"array","elementType":{"type":"reference","name":"TId","id":275}}]}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"core/modules/modify.ts","line":362,"character":23}]},{"id":2235,"name":"Rotate","kind":64,"kindString":"Function","flags":{"isExported":true},"signatures":[{"id":2236,"name":"Rotate","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Rotates entities on plane by angle.","returns":"void","tags":[{"tag":"example","text":"modify.Rotate(polyline1, plane1, PI)"},{"tag":"example_info","text":"Rotates polyline1 on plane1 by PI (i.e. 180 degrees).\n"}]},"parameters":[{"id":2237,"name":"__model__","kind":32768,"kindString":"Parameter","flags":{},"comment":{},"type":{"type":"reference","name":"GIModel","id":1393}},{"id":2238,"name":"entities","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"Vertex, edge, wire, face, plane, position, point, polyline, polygon, collection."},"type":{"type":"union","types":[{"type":"reference","name":"TId","id":275},{"type":"array","elementType":{"type":"reference","name":"TId","id":275}}]}},{"id":2239,"name":"origin","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"A list of three numbers (or a position, point, or vertex)."},"type":{"type":"union","types":[{"type":"reference","name":"Txyz","id":279},{"type":"reference","name":"TId","id":275},{"type":"reference","name":"TPlane","id":272}]}},{"id":2240,"name":"axis","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"A list of three numbers."},"type":{"type":"reference","name":"Txyz","id":279}},{"id":2241,"name":"angle","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"Angle (in radians)."},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"core/modules/modify.ts","line":104,"character":22}]},{"id":2242,"name":"Scale","kind":64,"kindString":"Function","flags":{"isExported":true},"signatures":[{"id":2243,"name":"Scale","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Scales entities on plane by factor.","returns":"void","tags":[{"tag":"example","text":"modify.Scale(entities, plane1, 0.5)"},{"tag":"example_info","text":"Scales entities by 0.5 on plane1.\n"}]},"parameters":[{"id":2244,"name":"__model__","kind":32768,"kindString":"Parameter","flags":{},"comment":{},"type":{"type":"reference","name":"GIModel","id":1393}},{"id":2245,"name":"entities","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"Vertex, edge, wire, face, plane, position, point, polyline, polygon, collection."},"type":{"type":"union","types":[{"type":"reference","name":"TId","id":275},{"type":"array","elementType":{"type":"reference","name":"TId","id":275}}]}},{"id":2246,"name":"origin","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"Position, point, vertex, list of three numbers, plane."},"type":{"type":"union","types":[{"type":"reference","name":"TId","id":275},{"type":"reference","name":"Txyz","id":279},{"type":"reference","name":"TPlane","id":272}]}},{"id":2247,"name":"scale","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"Scale factor."},"type":{"type":"union","types":[{"type":"intrinsic","name":"number"},{"type":"reference","name":"Txyz","id":279}]}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"core/modules/modify.ts","line":151,"character":21}]},{"id":2285,"name":"Shift","kind":64,"kindString":"Function","flags":{"isExported":true},"signatures":[{"id":2286,"name":"Shift","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Shifts the order of the edges in a closed wire.\n~\nIn a closed wire, any edge (or vertex) could be the first edge of the ring.\nIn some cases, it is useful to have an edge in a particular position in a ring.\nThis function allows the edges to be shifted either forwards or backwards around the ring.\nThe order of the edges in the ring will remain unchanged.","returns":"void","tags":[{"tag":"example","text":"modify.Shift(face1, 1)"},{"tag":"example_info","text":"Shifts the edges in the face wire, so that the every edge moves up by one position\nin the ring. The last edge will become the first edge ."},{"tag":"example","text":"modify.Shift(polyline1, -1)"},{"tag":"example_info","text":"Shifts the edges in the closed polyline wire, so that every edge moves back by one position\nin the ring. The first edge will become the last edge.\n"}]},"parameters":[{"id":2287,"name":"__model__","kind":32768,"kindString":"Parameter","flags":{},"comment":{},"type":{"type":"reference","name":"GIModel","id":1393}},{"id":2288,"name":"entities","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"Wire, face, polyline, polygon."},"type":{"type":"union","types":[{"type":"reference","name":"TId","id":275},{"type":"array","elementType":{"type":"reference","name":"TId","id":275}}]}},{"id":2289,"name":"offset","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"core/modules/modify.ts","line":398,"character":21}]},{"id":2254,"name":"XForm","kind":64,"kindString":"Function","flags":{"isExported":true},"signatures":[{"id":2255,"name":"XForm","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Transforms entities from one construction plane to another.","returns":"void","tags":[{"tag":"example","text":"modify.XForm(polygon1, plane1, plane2)"},{"tag":"example_info","text":"Transforms polygon1 from plane1 to plane2.\n"}]},"parameters":[{"id":2256,"name":"__model__","kind":32768,"kindString":"Parameter","flags":{},"comment":{},"type":{"type":"reference","name":"GIModel","id":1393}},{"id":2257,"name":"entities","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"Vertex, edge, wire, face, position, point, polyline, polygon, collection."},"type":{"type":"union","types":[{"type":"reference","name":"TId","id":275},{"type":"array","elementType":{"type":"reference","name":"TId","id":275}}]}},{"id":2258,"name":"from","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"Plane defining target construction plane."},"type":{"type":"reference","name":"TPlane","id":272}},{"id":2259,"name":"to","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"Plane defining destination construction plane."},"type":{"type":"reference","name":"TPlane","id":272}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"core/modules/modify.ts","line":243,"character":21}]},{"id":2311,"name":"_Weld","kind":64,"kindString":"Function","flags":{"isExported":true},"signatures":[{"id":2312,"name":"_Weld","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Welds entities together.","returns":"void","tags":[{"tag":"example","text":"modify.Weld([polyline1,polyline2])"},{"tag":"example_info","text":"Welds both polyline1 and polyline2 together. Entities must be of the same type.\n"}]},"parameters":[{"id":2313,"name":"__model__","kind":32768,"kindString":"Parameter","flags":{},"comment":{},"type":{"type":"reference","name":"GIModel","id":1393}},{"id":2314,"name":"entities","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"Vertex, edge, wire, face, position, point, polyline, polygon, collection."},"type":{"type":"array","elementType":{"type":"reference","name":"TId","id":275}}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"core/modules/modify.ts","line":581,"character":21}]},{"id":2290,"name":"_close","kind":64,"kindString":"Function","flags":{},"signatures":[{"id":2291,"name":"_close","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":2292,"name":"__model__","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"GIModel","id":1393}},{"id":2293,"name":"ents_arr","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"union","types":[{"type":"reference","name":"TEntTypeIdx","id":270},{"type":"array","elementType":{"type":"reference","name":"TEntTypeIdx","id":270}}]}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"core/modules/modify.ts","line":407,"character":15}]},{"id":2260,"name":"_collection","kind":64,"kindString":"Function","flags":{},"signatures":[{"id":2261,"name":"_collection","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":2262,"name":"__model__","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"GIModel","id":1393}},{"id":2263,"name":"coll_arr","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"TEntTypeIdx","id":270}},{"id":2264,"name":"ents_arr","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"union","types":[{"type":"reference","name":"TEntTypeIdx","id":270},{"type":"array","elementType":{"type":"reference","name":"TEntTypeIdx","id":270}}]}},{"id":2265,"name":"method","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"_EModifyCollectionMethod","id":2204}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"core/modules/modify.ts","line":277,"character":20}]},{"id":2298,"name":"_convertPromoteMethod","kind":64,"kindString":"Function","flags":{},"signatures":[{"id":2299,"name":"_convertPromoteMethod","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":2300,"name":"selection","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"_EPromoteMethod","id":2208}}],"type":{"type":"reference","name":"EAttribPromote","id":196}}],"sources":[{"fileName":"core/modules/modify.ts","line":461,"character":30}]},{"id":2301,"name":"_convertPromoteTarget","kind":64,"kindString":"Function","flags":{},"signatures":[{"id":2302,"name":"_convertPromoteTarget","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":2303,"name":"selection","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"_EPromoteTarget","id":2216}}],"type":{"type":"reference","name":"EEntType","id":125}}],"sources":[{"fileName":"core/modules/modify.ts","line":481,"character":30}]},{"id":2315,"name":"_delete","kind":64,"kindString":"Function","flags":{},"signatures":[{"id":2316,"name":"_delete","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":2317,"name":"__model__","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"GIModel","id":1393}},{"id":2318,"name":"ents_arr","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"union","types":[{"type":"reference","name":"TEntTypeIdx","id":270},{"type":"array","elementType":{"type":"reference","name":"TEntTypeIdx","id":270}}]}},{"id":2319,"name":"del_unused_posis","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"boolean"}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"core/modules/modify.ts","line":595,"character":16}]},{"id":2325,"name":"_keep","kind":64,"kindString":"Function","flags":{},"signatures":[{"id":2326,"name":"_keep","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":2327,"name":"__model__","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"GIModel","id":1393}},{"id":2328,"name":"ents_arr","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"union","types":[{"type":"reference","name":"TEntTypeIdx","id":270},{"type":"array","elementType":{"type":"reference","name":"TEntTypeIdx","id":270}}]}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"core/modules/modify.ts","line":649,"character":14}]},{"id":2272,"name":"_reverse","kind":64,"kindString":"Function","flags":{},"signatures":[{"id":2273,"name":"_reverse","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":2274,"name":"__model__","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"GIModel","id":1393}},{"id":2275,"name":"ents_arr","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"union","types":[{"type":"reference","name":"TEntTypeIdx","id":270},{"type":"array","elementType":{"type":"reference","name":"TEntTypeIdx","id":270}}]}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"core/modules/modify.ts","line":343,"character":17}]},{"id":2280,"name":"_shift","kind":64,"kindString":"Function","flags":{},"signatures":[{"id":2281,"name":"_shift","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":2282,"name":"__model__","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"GIModel","id":1393}},{"id":2283,"name":"ents_arr","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"union","types":[{"type":"reference","name":"TEntTypeIdx","id":270},{"type":"array","elementType":{"type":"reference","name":"TEntTypeIdx","id":270}}]}},{"id":2284,"name":"offset","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"core/modules/modify.ts","line":371,"character":15}]}],"groups":[{"title":"Enumerations","kind":4,"children":[2227,2204,2208,2216]},{"title":"Functions","kind":64,"children":[2294,2266,2320,2329,2248,2230,2304,2276,2235,2242,2285,2254,2311,2290,2260,2298,2301,2315,2325,2272,2280]}],"sources":[{"fileName":"core/modules/modify.ts","line":1,"character":0}]},{"id":2333,"name":"\"core/modules/pattern\"","kind":1,"kindString":"External module","flags":{"isExported":true},"originalName":"C:/Dropbox/Files/Software/GitHub/design-automation/mobius-parametric-modeller/src/assets/core/modules/pattern.ts","comment":{"shortText":"The `pattern` module has functions for creating patters of positions in the model.\nAll these functions all return lists of position IDs.\nThe list may be nested, depending on which function is selected."},"children":[{"id":2334,"name":"_EGridMethod","kind":4,"kindString":"Enumeration","flags":{"isExported":true},"children":[{"id":2336,"name":"COLUMNS","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"core/modules/pattern.ts","line":72,"character":11}],"defaultValue":"\"columns\""},{"id":2335,"name":"FLAT","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"core/modules/pattern.ts","line":71,"character":8}],"defaultValue":"\"flat\""},{"id":2337,"name":"ROWS","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"core/modules/pattern.ts","line":73,"character":8}],"defaultValue":"\"rows\""},{"id":2338,"name":"SQUARES","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"core/modules/pattern.ts","line":74,"character":11}],"defaultValue":"\"squares\""}],"groups":[{"title":"Enumeration members","kind":16,"children":[2336,2335,2337,2338]}],"sources":[{"fileName":"core/modules/pattern.ts","line":70,"character":24}]},{"id":2339,"name":"Arc","kind":64,"kindString":"Function","flags":{"isExported":true},"signatures":[{"id":2340,"name":"Arc","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Creates positions in an arc pattern, and returns the list of new positions.\nIf the angle of the arc is set to null, then circular patterns will be created.\nFor circular patterns, duplicates at start and end are automatically removed.","returns":"Entities, a list of positions.","tags":[{"tag":"example","text":"coordinates1 = pattern.Arc([0,0,0], 10, 12, PI)"},{"tag":"example_info","text":"Creates a list of 12 XYZ coordinates distributed equally along a semicircle of radius 10.\n"}]},"parameters":[{"id":2341,"name":"__model__","kind":32768,"kindString":"Parameter","flags":{},"comment":{},"type":{"type":"reference","name":"GIModel","id":1393}},{"id":2342,"name":"origin","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"XYZ coordinates as a list of three numbers."},"type":{"type":"union","types":[{"type":"reference","name":"Txyz","id":279},{"type":"reference","name":"TPlane","id":272}]}},{"id":2343,"name":"radius","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"Radius of circle as a number."},"type":{"type":"intrinsic","name":"number"}},{"id":2344,"name":"num_positions","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"Number of positions distributed equally along the arc."},"type":{"type":"intrinsic","name":"number"}},{"id":2345,"name":"arc_angle","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"Angle of arc (in radians)."},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"array","elementType":{"type":"reference","name":"TId","id":275}}}],"sources":[{"fileName":"core/modules/pattern.ts","line":34,"character":19}]},{"id":2346,"name":"Grid","kind":64,"kindString":"Function","flags":{"isExported":true},"signatures":[{"id":2347,"name":"Grid","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Creates positions in a grid pattern, and returns the list (or list of lists) of new positions.","returns":"Entities, a list of positions, or a list of lists of positions (depending on the 'method' setting).","tags":[{"tag":"example","text":"coordinates1 = pattern.Grid([0,0,0], 10, 3)"},{"tag":"example_info","text":"Creates a list of 9 XYZ coordinates on a 3x3 square grid of length 10."},{"tag":"example","text":"coordinates1 = pattern.Grid([0,0,0], [10,20], [2,4])"},{"tag":"example_info","text":"Creates a list of 8 XYZ coordinates on a 2x4 grid of length 10 by 20.\n"}]},"parameters":[{"id":2348,"name":"__model__","kind":32768,"kindString":"Parameter","flags":{},"comment":{},"type":{"type":"reference","name":"GIModel","id":1393}},{"id":2349,"name":"origin","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"XYZ coordinates as a list of three numbers."},"type":{"type":"union","types":[{"type":"reference","name":"Txyz","id":279},{"type":"reference","name":"TPlane","id":272}]}},{"id":2350,"name":"size","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"Size of grid. If number, assume square grid of that length; if list of two numbers, x and y lengths respectively."},"type":{"type":"union","types":[{"type":"intrinsic","name":"number"},{"type":"tuple","elements":[{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"number"}]}]}},{"id":2351,"name":"num_positions","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"Number of positions."},"type":{"type":"union","types":[{"type":"intrinsic","name":"number"},{"type":"tuple","elements":[{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"number"}]}]}},{"id":2352,"name":"method","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"Enum, define the way the coords will be return as lists.\nIf integer, same number for x and y; if list of two numbers, number for x and y respectively."},"type":{"type":"reference","name":"_EGridMethod","id":2334}}],"type":{"type":"union","types":[{"type":"array","elementType":{"type":"reference","name":"TId","id":275}},{"type":"array","elementType":{"type":"array","elementType":{"type":"reference","name":"TId","id":275}}}]}}],"sources":[{"fileName":"core/modules/pattern.ts","line":90,"character":20}]},{"id":2353,"name":"Rectangle","kind":64,"kindString":"Function","flags":{"isExported":true},"signatures":[{"id":2354,"name":"Rectangle","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Creates four positions in a rectangle pattern, and returns the list of new positions.","returns":"Entities, a list of four positions.","tags":[{"tag":"example","text":"coordinates1 = pattern.Rectangle([0,0,0], 10)"},{"tag":"example_info","text":"Creates a list of 4 coords, being the vertices of a 10 by 10 square."},{"tag":"example","text":"coordinates1 = pattern.Rectangle([0,0,0], [10,20])"},{"tag":"example_info","text":"Creates a list of 4 coords, being the vertices of a 10 by 20 rectangle.\n"}]},"parameters":[{"id":2355,"name":"__model__","kind":32768,"kindString":"Parameter","flags":{},"comment":{},"type":{"type":"reference","name":"GIModel","id":1393}},{"id":2356,"name":"origin","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"XYZ coordinates as a list of three numbers."},"type":{"type":"union","types":[{"type":"reference","name":"Txyz","id":279},{"type":"reference","name":"TPlane","id":272}]}},{"id":2357,"name":"size","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"Size of rectangle. If number, assume square of that length; if list of two numbers, x and y lengths respectively."},"type":{"type":"union","types":[{"type":"intrinsic","name":"number"},{"type":"tuple","elements":[{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"number"}]}]}}],"type":{"type":"array","elementType":{"type":"reference","name":"TId","id":275}}}],"sources":[{"fileName":"core/modules/pattern.ts","line":176,"character":25}]}],"groups":[{"title":"Enumerations","kind":4,"children":[2334]},{"title":"Functions","kind":64,"children":[2339,2346,2353]}],"sources":[{"fileName":"core/modules/pattern.ts","line":1,"character":0}]},{"id":1772,"name":"\"core/modules/query\"","kind":1,"kindString":"External module","flags":{"isExported":true},"originalName":"C:/Dropbox/Files/Software/GitHub/design-automation/mobius-parametric-modeller/src/assets/core/modules/query.ts","comment":{"shortText":"The `query` module has functions for querying entities in the the model.\nMost of these functions all return a list of IDs of entities in the model.\nThe Count function returns the number of entities, rather than the list of entities.","text":"The Get() function is an important function, and is used in many modelling workflows.\n"},"children":[{"id":1789,"name":"_EQueryEntType","kind":4,"kindString":"Enumeration","flags":{"isExported":true},"children":[{"id":1809,"name":"HAS_HOLES","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"core/modules/query.ts","line":391,"character":13}],"defaultValue":"\"has_holes\""},{"id":1810,"name":"HAS_NO_HOLES","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"core/modules/query.ts","line":392,"character":16}],"defaultValue":"\"has_no_holes\""},{"id":1807,"name":"IS_CLOSED","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"core/modules/query.ts","line":389,"character":13}],"defaultValue":"\"is_closed\""},{"id":1800,"name":"IS_COLL","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"core/modules/query.ts","line":382,"character":11}],"defaultValue":"\"is_collection\""},{"id":1794,"name":"IS_EDGE","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"core/modules/query.ts","line":376,"character":11}],"defaultValue":"\"is_edge\""},{"id":1796,"name":"IS_FACE","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"core/modules/query.ts","line":378,"character":11}],"defaultValue":"\"is_face\""},{"id":1808,"name":"IS_HOLE","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"core/modules/query.ts","line":390,"character":11}],"defaultValue":"\"is_hole\""},{"id":1801,"name":"IS_OBJ","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"core/modules/query.ts","line":383,"character":10}],"defaultValue":"\"is_object\""},{"id":1806,"name":"IS_OPEN","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"core/modules/query.ts","line":388,"character":11}],"defaultValue":"\"is_open\""},{"id":1799,"name":"IS_PGON","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"core/modules/query.ts","line":381,"character":11}],"defaultValue":"\"is_polygon\""},{"id":1805,"name":"IS_PGON_TOPO","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"core/modules/query.ts","line":387,"character":16}],"defaultValue":"\"is_polygon_topology\""},{"id":1798,"name":"IS_PLINE","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"core/modules/query.ts","line":380,"character":12}],"defaultValue":"\"is_polyline\""},{"id":1804,"name":"IS_PLINE_TOPO","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"core/modules/query.ts","line":386,"character":17}],"defaultValue":"\"is_polyline_topology\""},{"id":1797,"name":"IS_POINT","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"core/modules/query.ts","line":379,"character":12}],"defaultValue":"\"is_point\""},{"id":1803,"name":"IS_POINT_TOPO","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"core/modules/query.ts","line":385,"character":17}],"defaultValue":"\"is_point_topology\""},{"id":1790,"name":"IS_POSI","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"core/modules/query.ts","line":372,"character":11}],"defaultValue":"\"is_position\""},{"id":1802,"name":"IS_TOPO","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"core/modules/query.ts","line":384,"character":11}],"defaultValue":"\"is_topology\""},{"id":1792,"name":"IS_UNUSED_POSI","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"core/modules/query.ts","line":374,"character":18}],"defaultValue":"\"is_unused_posi\""},{"id":1791,"name":"IS_USED_POSI","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"core/modules/query.ts","line":373,"character":16}],"defaultValue":"\"is_used_posi\""},{"id":1793,"name":"IS_VERT","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"core/modules/query.ts","line":375,"character":11}],"defaultValue":"\"is_vertex\""},{"id":1795,"name":"IS_WIRE","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"core/modules/query.ts","line":377,"character":11}],"defaultValue":"\"is_wire\""}],"groups":[{"title":"Enumeration members","kind":16,"children":[1809,1810,1807,1800,1794,1796,1808,1801,1806,1799,1805,1798,1804,1797,1803,1790,1802,1792,1791,1793,1795]}],"sources":[{"fileName":"core/modules/query.ts","line":371,"character":26}]},{"id":1773,"name":"_EQuerySelect","kind":4,"kindString":"Enumeration","flags":{"isExported":true},"children":[{"id":1785,"name":"ALL","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"core/modules/query.ts","line":38,"character":7}],"defaultValue":"\"all\""},{"id":1782,"name":"COLL","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"core/modules/query.ts","line":35,"character":8}],"defaultValue":"\"collections\""},{"id":1776,"name":"EDGE","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"core/modules/query.ts","line":29,"character":8}],"defaultValue":"\"edges\""},{"id":1778,"name":"FACE","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"core/modules/query.ts","line":31,"character":8}],"defaultValue":"\"faces\""},{"id":1783,"name":"OBJS","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"core/modules/query.ts","line":36,"character":8}],"defaultValue":"\"objects\""},{"id":1781,"name":"PGON","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"core/modules/query.ts","line":34,"character":8}],"defaultValue":"\"polygons\""},{"id":1780,"name":"PLINE","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"core/modules/query.ts","line":33,"character":9}],"defaultValue":"\"polylines\""},{"id":1779,"name":"POINT","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"core/modules/query.ts","line":32,"character":9}],"defaultValue":"\"points\""},{"id":1774,"name":"POSI","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"core/modules/query.ts","line":27,"character":8}],"defaultValue":"\"positions\""},{"id":1784,"name":"TOPOS","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"core/modules/query.ts","line":37,"character":9}],"defaultValue":"\"topologies\""},{"id":1775,"name":"VERT","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"core/modules/query.ts","line":28,"character":8}],"defaultValue":"\"vertices\""},{"id":1777,"name":"WIRE","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"core/modules/query.ts","line":30,"character":8}],"defaultValue":"\"wires\""}],"groups":[{"title":"Enumeration members","kind":16,"children":[1785,1782,1776,1778,1783,1781,1780,1779,1774,1784,1775,1777]}],"sources":[{"fileName":"core/modules/query.ts","line":26,"character":25}]},{"id":1786,"name":"_ESortMethod","kind":4,"kindString":"Enumeration","flags":{"isExported":true},"children":[{"id":1788,"name":"ASCENDING","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"core/modules/query.ts","line":328,"character":15}],"defaultValue":"\"ascending\""},{"id":1787,"name":"DESCENDING","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"core/modules/query.ts","line":327,"character":16}],"defaultValue":"\"descending\""}],"groups":[{"title":"Enumeration members","kind":16,"children":[1788,1787]}],"sources":[{"fileName":"core/modules/query.ts","line":326,"character":24}]},{"id":1840,"name":"Count","kind":64,"kindString":"Function","flags":{"isExported":true},"signatures":[{"id":1841,"name":"Count","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Returns the number of entities based on a query expression.\nThe query expression should use the following format: #@name == value,\nwhere 'name' is the attribute name, and 'value' is the attribute value.\nIf the attribute value is a string, then in must be in qoutes, as follows: #@name == 'str_value'.\nThe '==' is the comparison operator. The other comparison operators are: !=, >, >=, <, =<.\nEntities can be search using multiple query expressions, as follows:  #@name1 == value1 &&  #@name2 == value2.\nQuery expressions can be combine with either && (and) and || (or), where\n&& takes precedence over ||.","returns":"Number of entities.","tags":[{"tag":"example","text":"num_ents = query.Count(positions, polyline1, #@xyz[2]>10)"},{"tag":"example_info","text":"Returns the number of positions defined by polyline1 where the z-coordinate is more than 10.\n"}]},"parameters":[{"id":1842,"name":"__model__","kind":32768,"kindString":"Parameter","flags":{},"comment":{},"type":{"type":"reference","name":"GIModel","id":1393}},{"id":1843,"name":"select","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"Enum, specifies what type of entities are to be counted."},"type":{"type":"reference","name":"_EQuerySelect","id":1773}},{"id":1844,"name":"entities","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"List of entities to be searched. If 'null' (without quotes), list of all entities in the model."},"type":{"type":"union","types":[{"type":"reference","name":"TId","id":275},{"type":"array","elementType":{"type":"reference","name":"TId","id":275}}]}},{"id":1845,"name":"query_expr","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"Attribute condition. If 'null' (without quotes), no condition is set; list of all search entities is returned."},"type":{"type":"reference","name":"TQuery","id":274}}],"type":{"type":"intrinsic","name":"number"}}],"sources":[{"fileName":"core/modules/query.ts","line":258,"character":21}]},{"id":1824,"name":"Get","kind":64,"kindString":"Function","flags":{"isExported":true},"signatures":[{"id":1825,"name":"Get","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Returns a list of entities based on a query expression. The list will be ordered by entity ID, in descending order\nThe result will always be a list of entities, even if there is only one entity.\nIn a case where you expect only one entity, remember to get the first item in the list.\n~\nThe query expression should use the following format: #@name == value,\nwhere 'name' is the attribute name, and 'value' is the attribute value that you are searching for.\n~\nIf the attribute value is a string, then in must be in quotes, as follows: #@name == 'str_value'.\nThe '==' is the comparison operator. The other comparison operators are: !=, >, >=, <, =<.\n~\nEntities can be search using multiple query expressions, as follows:  #@name1 == value1 &&  #@name2 == value2.\nQuery expressions can be combined with either && (and) and || (or), where\n&& takes precedence over ||.","returns":"Entities, a list of entities that match the type specified in 'select' and the conditions specified in 'query_expr'.","tags":[{"tag":"example","text":"positions = query.Get(positions, polyline1, #@xyz[2]>10)"},{"tag":"example_info","text":"Returns a list of positions that are part of polyline1 where the z-coordinate is more than 10."},{"tag":"example","text":"positions = query.Get(positions, null, #@xyz[2]>10)"},{"tag":"example_info","text":"Returns a list of positions in the model where the z-coordinate is more than 10."},{"tag":"example","text":"positions = query.Get(positions, polyline1, null)"},{"tag":"example_info","text":"Returns a list of all of the positions that are part of polyline1."},{"tag":"example","text":"polylines = query.Get(polylines, position1, null)"},{"tag":"example_info","text":"Returns a list of all of the polylines that use position1."},{"tag":"example","text":"collections = query.Get(collections, null, #@type==\"floors\")"},{"tag":"example_info","text":"Returns a list of all the collections that have an attribute called \"type\" with a value \"floors\".\n"}]},"parameters":[{"id":1826,"name":"__model__","kind":32768,"kindString":"Parameter","flags":{},"comment":{},"type":{"type":"reference","name":"GIModel","id":1393}},{"id":1827,"name":"select","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"Enum, specifies what type of entities will be returned."},"type":{"type":"reference","name":"_EQuerySelect","id":1773}},{"id":1828,"name":"entities","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"List of entities to be searched. If 'null' (without quotes), all entities in the model will be searched."},"type":{"type":"union","types":[{"type":"reference","name":"TId","id":275},{"type":"array","elementType":{"type":"reference","name":"TId","id":275}}]}},{"id":1829,"name":"query_expr","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"Attribute condition. If 'null' (without quotes), no condition is set; all found entities are returned."},"type":{"type":"reference","name":"TQuery","id":274}}],"type":{"type":"array","elementType":{"type":"reference","name":"TId","id":275}}}],"sources":[{"fileName":"core/modules/query.ts","line":167,"character":19}]},{"id":1835,"name":"Invert","kind":64,"kindString":"Function","flags":{"isExported":true},"signatures":[{"id":1836,"name":"Invert","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Returns a list of entities excluding the specified entities.","returns":"Entities, a list of entities that match the type specified in 'select'.","tags":[{"tag":"example","text":"objects = query.Get(objects, polyline1, null)"},{"tag":"example_info","text":"Returns a list of all the objects in the model except polyline1.\n"}]},"parameters":[{"id":1837,"name":"__model__","kind":32768,"kindString":"Parameter","flags":{},"comment":{},"type":{"type":"reference","name":"GIModel","id":1393}},{"id":1838,"name":"select","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"Enum, specifies what type of entities will be returned."},"type":{"type":"reference","name":"_EQuerySelect","id":1773}},{"id":1839,"name":"entities","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"List of entities to be excluded."},"type":{"type":"union","types":[{"type":"reference","name":"TId","id":275},{"type":"array","elementType":{"type":"reference","name":"TId","id":275}}]}}],"type":{"type":"array","elementType":{"type":"reference","name":"TId","id":275}}}],"sources":[{"fileName":"core/modules/query.ts","line":228,"character":22}]},{"id":1851,"name":"Neighbours","kind":64,"kindString":"Function","flags":{"isExported":true},"signatures":[{"id":1852,"name":"Neighbours","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Returns a list of welded neighbours of any entity","returns":"Entities, a list of welded neighbours","tags":[{"tag":"example","text":"mod.Neighbours([polyline1,polyline2,polyline3])"},{"tag":"example_info","text":"Returns list of entities that are welded to polyline1 and polyline2.\n"}]},"parameters":[{"id":1853,"name":"__model__","kind":32768,"kindString":"Parameter","flags":{},"comment":{},"type":{"type":"reference","name":"GIModel","id":1393}},{"id":1854,"name":"select","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"Enum, select the types of neighbours to return"},"type":{"type":"reference","name":"_EQuerySelect","id":1773}},{"id":1855,"name":"entities","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"List of entities."},"type":{"type":"union","types":[{"type":"reference","name":"TId","id":275},{"type":"array","elementType":{"type":"reference","name":"TId","id":275}}]}}],"type":{"type":"array","elementType":{"type":"reference","name":"TId","id":275}}}],"sources":[{"fileName":"core/modules/query.ts","line":298,"character":26}]},{"id":1862,"name":"Sort","kind":64,"kindString":"Function","flags":{"isExported":true},"signatures":[{"id":1863,"name":"Sort","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Sorts entities based on a sort expression.\nThe sort expression should use the following format: #@name, where 'name' is the attribute name.\nEntities can be sorted using multiple sort expresssions as follows: #@name1 && #@name2.\nIf the attribute is a list, and index can also be specified as follows: #@name1[index].","returns":"Entities, a list of sorted entities.","tags":[{"tag":"example","text":"sorted_list = query.Sort( [pos1, pos2, pos3], #@xyz[2], descending)"},{"tag":"example_info","text":"Returns a list of three positions, sorted according to the descending z value.\n"}]},"parameters":[{"id":1864,"name":"__model__","kind":32768,"kindString":"Parameter","flags":{},"comment":{},"type":{"type":"reference","name":"GIModel","id":1393}},{"id":1865,"name":"entities","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"List of two or more entities to be sorted, all of the same entity type."},"type":{"type":"array","elementType":{"type":"reference","name":"TId","id":275}}},{"id":1866,"name":"sort_expr","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"Attribute condition. If 'null' (without quotes), entities will be sorted based on their ID."},"type":{"type":"reference","name":"TQuery","id":274}},{"id":1867,"name":"method","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"Enum, sort descending or ascending."},"type":{"type":"reference","name":"_ESortMethod","id":1786}}],"type":{"type":"array","elementType":{"type":"reference","name":"TId","id":275}}}],"sources":[{"fileName":"core/modules/query.ts","line":343,"character":20}]},{"id":1913,"name":"Type","kind":64,"kindString":"Function","flags":{"isExported":true},"signatures":[{"id":1914,"name":"Type","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Checks the type of an entity.\n~\nFor is_used_posi, returns true if the entity is a posi, and it is used by at least one vertex.\nFor is_unused_posi, it returns the opposite of is_used_posi.\nFor is_object, returns true if the entity is a point, a polyline, or a polygon.\nFor is_topology, returns true if the entity is a vertex, an edge, a wire, or a face.\nFor is_point_topology, is_polyline_topology, and is_polygon_topology, returns true\nif the entity is a topological entity, and it is part of an object of the specified type.\n~\nFor is_open, returns true if the entity is a wire or polyline and is open. For is_closed, it returns the opposite of is_open.\nFor is_hole, returns ture if the entity is a wire, and it defines a hole in a face.\nFor has_holes, returns true if the entity is a face or polygon, and it has holes.\nFor has_no_holes, it returns the opposite of has_holes.","returns":"Boolean or list of boolean in input sequence.","tags":[{"tag":"example","text":"query.Type([polyline1, polyline2, polygon1], is_polyline )"},{"tag":"example_info","text":"Returns a list [true, true, false] if polyline1 and polyline2 are polylines but polygon1 is not a polyline.\n"}]},"parameters":[{"id":1915,"name":"__model__","kind":32768,"kindString":"Parameter","flags":{},"comment":{},"type":{"type":"reference","name":"GIModel","id":1393}},{"id":1916,"name":"entities","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"An entity, or a list of entities."},"type":{"type":"union","types":[{"type":"reference","name":"TId","id":275},{"type":"array","elementType":{"type":"reference","name":"TId","id":275}}]}},{"id":1917,"name":"query_ent_type","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"Enum, select the conditions to test agains."},"type":{"type":"reference","name":"_EQueryEntType","id":1789}}],"type":{"type":"union","types":[{"type":"intrinsic","name":"boolean"},{"type":"array","elementType":{"type":"intrinsic","name":"boolean"}}]}}],"sources":[{"fileName":"core/modules/query.ts","line":557,"character":20}]},{"id":1918,"name":"_IsClosed","kind":64,"kindString":"Function","flags":{"isExported":true},"signatures":[{"id":1919,"name":"_IsClosed","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Checks if polyline(s) or wire(s) are closed.\n~\nWARNING: This function has been deprecated. Plese use the query.Type() function instead.","returns":"Boolean or list of boolean in input sequence of lines.","tags":[{"tag":"example","text":"mod.IsClosed([polyline1,polyline2,polyline3])"},{"tag":"example_info","text":"Returns list [true,true,false] if polyline1 and polyline2 are closed but polyline3 is open.\n"}]},"parameters":[{"id":1920,"name":"__model__","kind":32768,"kindString":"Parameter","flags":{},"comment":{},"type":{"type":"reference","name":"GIModel","id":1393}},{"id":1921,"name":"lines","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"Wires, polylines, or polygons."},"type":{"type":"union","types":[{"type":"reference","name":"TId","id":275},{"type":"array","elementType":{"type":"reference","name":"TId","id":275}}]}}],"type":{"type":"union","types":[{"type":"intrinsic","name":"boolean"},{"type":"array","elementType":{"type":"intrinsic","name":"boolean"}}]}}],"sources":[{"fileName":"core/modules/query.ts","line":614,"character":25}]},{"id":1820,"name":"_compareID","kind":64,"kindString":"Function","flags":{},"signatures":[{"id":1821,"name":"_compareID","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1822,"name":"ent_arr1","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"TEntTypeIdx","id":270}},{"id":1823,"name":"ent_arr2","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"TEntTypeIdx","id":270}}],"type":{"type":"intrinsic","name":"number"}}],"sources":[{"fileName":"core/modules/query.ts","line":129,"character":19}]},{"id":1811,"name":"_convertSelectToEEntTypeStr","kind":64,"kindString":"Function","flags":{},"signatures":[{"id":1812,"name":"_convertSelectToEEntTypeStr","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1813,"name":"select","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"_EQuerySelect","id":1773}}],"type":{"type":"union","types":[{"type":"reference","name":"EEntType","id":125},{"type":"array","elementType":{"type":"reference","name":"EEntType","id":125}}]}}],"sources":[{"fileName":"core/modules/query.ts","line":40,"character":36}]},{"id":1814,"name":"_get","kind":64,"kindString":"Function","flags":{},"signatures":[{"id":1815,"name":"_get","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1816,"name":"__model__","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"GIModel","id":1393}},{"id":1817,"name":"select_ent_types","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"union","types":[{"type":"reference","name":"EEntType","id":125},{"type":"array","elementType":{"type":"reference","name":"EEntType","id":125}}]}},{"id":1818,"name":"ents_arr","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"union","types":[{"type":"reference","name":"TEntTypeIdx","id":270},{"type":"array","elementType":{"type":"reference","name":"TEntTypeIdx","id":270}}]}},{"id":1819,"name":"query_expr","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"TQuery","id":274}}],"type":{"type":"array","elementType":{"type":"reference","name":"TEntTypeIdx","id":270}}}],"sources":[{"fileName":"core/modules/query.ts","line":90,"character":13}]},{"id":1904,"name":"_hasNoHoles","kind":64,"kindString":"Function","flags":{},"signatures":[{"id":1905,"name":"_hasNoHoles","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1906,"name":"__model__","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"GIModel","id":1393}},{"id":1907,"name":"ent_arr","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"TEntTypeIdx","id":270}}],"type":{"type":"intrinsic","name":"boolean"}}],"sources":[{"fileName":"core/modules/query.ts","line":468,"character":20}]},{"id":1830,"name":"_invert","kind":64,"kindString":"Function","flags":{},"signatures":[{"id":1831,"name":"_invert","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1832,"name":"__model__","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"GIModel","id":1393}},{"id":1833,"name":"select_ent_types","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"union","types":[{"type":"reference","name":"EEntType","id":125},{"type":"array","elementType":{"type":"reference","name":"EEntType","id":125}}]}},{"id":1834,"name":"ents_arr","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"union","types":[{"type":"reference","name":"TEntTypeIdx","id":270},{"type":"array","elementType":{"type":"reference","name":"TEntTypeIdx","id":270}}]}}],"type":{"type":"array","elementType":{"type":"reference","name":"TEntTypeIdx","id":270}}}],"sources":[{"fileName":"core/modules/query.ts","line":194,"character":16}]},{"id":1868,"name":"_isClosed","kind":64,"kindString":"Function","flags":{},"signatures":[{"id":1869,"name":"_isClosed","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1870,"name":"__model__","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"GIModel","id":1393}},{"id":1871,"name":"ents_arr","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"union","types":[{"type":"reference","name":"TEntTypeIdx","id":270},{"type":"array","elementType":{"type":"reference","name":"TEntTypeIdx","id":270}}]}}],"type":{"type":"union","types":[{"type":"intrinsic","name":"boolean"},{"type":"array","elementType":{"type":"intrinsic","name":"boolean"}}]}}],"sources":[{"fileName":"core/modules/query.ts","line":353,"character":18}]},{"id":1896,"name":"_isClosed2","kind":64,"kindString":"Function","flags":{},"signatures":[{"id":1897,"name":"_isClosed2","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1898,"name":"__model__","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"GIModel","id":1393}},{"id":1899,"name":"ent_arr","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"TEntTypeIdx","id":270}}],"type":{"type":"intrinsic","name":"boolean"}}],"sources":[{"fileName":"core/modules/query.ts","line":443,"character":19}]},{"id":1900,"name":"_isHole","kind":64,"kindString":"Function","flags":{},"signatures":[{"id":1901,"name":"_isHole","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1902,"name":"__model__","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"GIModel","id":1393}},{"id":1903,"name":"ent_arr","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"TEntTypeIdx","id":270}}],"type":{"type":"intrinsic","name":"boolean"}}],"sources":[{"fileName":"core/modules/query.ts","line":456,"character":16}]},{"id":1876,"name":"_isObj","kind":64,"kindString":"Function","flags":{},"signatures":[{"id":1877,"name":"_isObj","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1878,"name":"__model__","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"GIModel","id":1393}},{"id":1879,"name":"ent_arr","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"TEntTypeIdx","id":270}}],"type":{"type":"intrinsic","name":"boolean"}}],"sources":[{"fileName":"core/modules/query.ts","line":405,"character":15}]},{"id":1892,"name":"_isPgonTopo","kind":64,"kindString":"Function","flags":{},"signatures":[{"id":1893,"name":"_isPgonTopo","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1894,"name":"__model__","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"GIModel","id":1393}},{"id":1895,"name":"ent_arr","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"TEntTypeIdx","id":270}}],"type":{"type":"intrinsic","name":"boolean"}}],"sources":[{"fileName":"core/modules/query.ts","line":435,"character":20}]},{"id":1888,"name":"_isPlineTopo","kind":64,"kindString":"Function","flags":{},"signatures":[{"id":1889,"name":"_isPlineTopo","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1890,"name":"__model__","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"GIModel","id":1393}},{"id":1891,"name":"ent_arr","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"TEntTypeIdx","id":270}}],"type":{"type":"intrinsic","name":"boolean"}}],"sources":[{"fileName":"core/modules/query.ts","line":427,"character":21}]},{"id":1884,"name":"_isPointTopo","kind":64,"kindString":"Function","flags":{},"signatures":[{"id":1885,"name":"_isPointTopo","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1886,"name":"__model__","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"GIModel","id":1393}},{"id":1887,"name":"ent_arr","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"TEntTypeIdx","id":270}}],"type":{"type":"intrinsic","name":"boolean"}}],"sources":[{"fileName":"core/modules/query.ts","line":419,"character":21}]},{"id":1880,"name":"_isTopo","kind":64,"kindString":"Function","flags":{},"signatures":[{"id":1881,"name":"_isTopo","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1882,"name":"__model__","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"GIModel","id":1393}},{"id":1883,"name":"ent_arr","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"TEntTypeIdx","id":270}}],"type":{"type":"intrinsic","name":"boolean"}}],"sources":[{"fileName":"core/modules/query.ts","line":412,"character":16}]},{"id":1872,"name":"_isUsedPosi","kind":64,"kindString":"Function","flags":{},"signatures":[{"id":1873,"name":"_isUsedPosi","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1874,"name":"__model__","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"GIModel","id":1393}},{"id":1875,"name":"ent_arr","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"TEntTypeIdx","id":270}}],"type":{"type":"intrinsic","name":"boolean"}}],"sources":[{"fileName":"core/modules/query.ts","line":394,"character":20}]},{"id":1846,"name":"_neighbours","kind":64,"kindString":"Function","flags":{"isExported":true},"signatures":[{"id":1847,"name":"_neighbours","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1848,"name":"__model__","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"GIModel","id":1393}},{"id":1849,"name":"select_ent_types","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"union","types":[{"type":"reference","name":"EEntType","id":125},{"type":"array","elementType":{"type":"reference","name":"EEntType","id":125}}]}},{"id":1850,"name":"ents_arr","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"union","types":[{"type":"reference","name":"TEntTypeIdx","id":270},{"type":"array","elementType":{"type":"reference","name":"TEntTypeIdx","id":270}}]}}],"type":{"type":"array","elementType":{"type":"reference","name":"TEntTypeIdx","id":270}}}],"sources":[{"fileName":"core/modules/query.ts","line":267,"character":27}]},{"id":1856,"name":"_sort","kind":64,"kindString":"Function","flags":{},"signatures":[{"id":1857,"name":"_sort","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1858,"name":"__model__","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"GIModel","id":1393}},{"id":1859,"name":"ents_arr","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"array","elementType":{"type":"reference","name":"TEntTypeIdx","id":270}}},{"id":1860,"name":"sort_expr","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"TQuery","id":274}},{"id":1861,"name":"method","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"ESort","id":193}}],"type":{"type":"array","elementType":{"type":"reference","name":"TEntTypeIdx","id":270}}}],"sources":[{"fileName":"core/modules/query.ts","line":310,"character":14}]},{"id":1908,"name":"_type","kind":64,"kindString":"Function","flags":{},"signatures":[{"id":1909,"name":"_type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1910,"name":"__model__","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"GIModel","id":1393}},{"id":1911,"name":"ents_arr","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"union","types":[{"type":"reference","name":"TEntTypeIdx","id":270},{"type":"array","elementType":{"type":"reference","name":"TEntTypeIdx","id":270}}]}},{"id":1912,"name":"query_ent_type","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"_EQueryEntType","id":1789}}],"type":{"type":"union","types":[{"type":"intrinsic","name":"boolean"},{"type":"array","elementType":{"type":"intrinsic","name":"boolean"}}]}}],"sources":[{"fileName":"core/modules/query.ts","line":480,"character":14}]}],"groups":[{"title":"Enumerations","kind":4,"children":[1789,1773,1786]},{"title":"Functions","kind":64,"children":[1840,1824,1835,1851,1862,1913,1918,1820,1811,1814,1904,1830,1868,1896,1900,1876,1892,1888,1884,1880,1872,1846,1856,1908]}],"sources":[{"fileName":"core/modules/query.ts","line":1,"character":0}]},{"id":2469,"name":"\"core/modules/render\"","kind":1,"kindString":"External module","flags":{"isExported":true},"originalName":"C:/Dropbox/Files/Software/GitHub/design-automation/mobius-parametric-modeller/src/assets/core/modules/render.ts","comment":{"shortText":"The `render` module has functions for defining various settings for the 3D viewer.\nThese settings are saved as attributes at the model level.\nThese include things like creating more advanced materials.\nFor more informtion, see the threejs docs: https://threejs.org/"},"children":[{"id":2474,"name":"_EColours","kind":4,"kindString":"Enumeration","flags":{"isExported":true},"children":[{"id":2475,"name":"NO_VERT_COLOURS","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"core/modules/render.ts","line":32,"character":19}],"defaultValue":"\"none\""},{"id":2476,"name":"VERT_COLOURS","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"core/modules/render.ts","line":33,"character":16}],"defaultValue":"\"apply_rgb\""}],"groups":[{"title":"Enumeration members","kind":16,"children":[2475,2476]}],"sources":[{"fileName":"core/modules/render.ts","line":31,"character":21}]},{"id":2477,"name":"_EMaterialType","kind":4,"kindString":"Enumeration","flags":{},"children":[{"id":2478,"name":"BASIC","kind":16,"kindString":"Enumeration member","flags":{},"sources":[{"fileName":"core/modules/render.ts","line":45,"character":9}],"defaultValue":"\"MeshBasicMaterial\""},{"id":2479,"name":"LAMBERT","kind":16,"kindString":"Enumeration member","flags":{},"sources":[{"fileName":"core/modules/render.ts","line":46,"character":11}],"defaultValue":"\"MeshLambertMaterial\""},{"id":2480,"name":"PHONG","kind":16,"kindString":"Enumeration member","flags":{},"sources":[{"fileName":"core/modules/render.ts","line":47,"character":9}],"defaultValue":"\"MeshPhongMaterial\""},{"id":2482,"name":"PHYSICAL","kind":16,"kindString":"Enumeration member","flags":{},"sources":[{"fileName":"core/modules/render.ts","line":49,"character":12}],"defaultValue":"\"MeshPhysicalMaterial\""},{"id":2481,"name":"STANDARD","kind":16,"kindString":"Enumeration member","flags":{},"sources":[{"fileName":"core/modules/render.ts","line":48,"character":12}],"defaultValue":"\"MeshStandardMaterial\""}],"groups":[{"title":"Enumeration members","kind":16,"children":[2478,2479,2480,2482,2481]}],"sources":[{"fileName":"core/modules/render.ts","line":44,"character":19}]},{"id":2470,"name":"_ESide","kind":4,"kindString":"Enumeration","flags":{"isExported":true},"children":[{"id":2472,"name":"BACK","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"core/modules/render.ts","line":18,"character":8}],"defaultValue":"\"back\""},{"id":2473,"name":"BOTH","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"core/modules/render.ts","line":19,"character":8}],"defaultValue":"\"both\""},{"id":2471,"name":"FRONT","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"core/modules/render.ts","line":17,"character":9}],"defaultValue":"\"front\""}],"groups":[{"title":"Enumeration members","kind":16,"children":[2472,2473,2471]}],"sources":[{"fileName":"core/modules/render.ts","line":16,"character":18}]},{"id":2494,"name":"BasicMaterial","kind":64,"kindString":"Function","flags":{"isExported":true},"signatures":[{"id":2495,"name":"BasicMaterial","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Creates a Basic material and saves it in the model attributes.\n~\n[See the threejs docs](https://threejs.org/docs/#api/en/materials/MeshBasicMaterial)\n~\nThe colour pf teh material can either ignore or apply the vertex rgb colours.\nIf 'apply' id selected, then the actual colour will be a combination of the material colour\nand the vertex colours, as specified by the a vertex attribute called 'rgb'.\nIn such a case, if material colour is set to white, then it will\nhave no effect, and the colour will be defined by the vertex [r,g,b] values.\n~\nAdditional material properties can be set by calling the functions for the more advanced materials.\nThese include LambertMaterial, PhongMaterial, StandardMaterial, and Physical Material.\nEach of these more advanced materials allows you to specify certain additional settings.\n~\nIn order to assign a material to polygons in the model, a polygon attribute called 'material'.\nneeds to be created. The value for each polygon must either be null, or must be a material name.","returns":"void\n"},"parameters":[{"id":2496,"name":"__model__","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"GIModel","id":1393}},{"id":2497,"name":"name","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"The name of the material."},"type":{"type":"intrinsic","name":"string"}},{"id":2498,"name":"colour","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"The diffuse colour, as [r, g, b] values between 0 and 1. White is [1, 1, 1]."},"type":{"type":"reference","name":"Txyz","id":279}},{"id":2499,"name":"opacity","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"The opacity of the glass, between 0 (totally transparent) and 1 (totally opaque)."},"type":{"type":"intrinsic","name":"number"}},{"id":2500,"name":"select_side","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"Enum, select front, back, or both."},"type":{"type":"reference","name":"_ESide","id":2470}},{"id":2501,"name":"select_vert_colours","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"Enum, select whether to use vertex colours if they exist."},"type":{"type":"reference","name":"_EColours","id":2474}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"core/modules/render.ts","line":103,"character":29}]},{"id":2489,"name":"GlassMaterial","kind":64,"kindString":"Function","flags":{"isExported":true},"signatures":[{"id":2490,"name":"GlassMaterial","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Creates a glass material with an opacity setting. The material will default to a Phong material.\n~\nIn order to assign a material to polygons in the model, a polygon attribute called 'material'\nneeds to be created. The value for each polygon must either be null, or must be a material name.","returns":"void\n"},"parameters":[{"id":2491,"name":"__model__","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"GIModel","id":1393}},{"id":2492,"name":"name","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"The name of the material."},"type":{"type":"intrinsic","name":"string"}},{"id":2493,"name":"opacity","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"The opacity of the glass, between 0 (totally transparent) and 1 (totally opaque)."},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"core/modules/render.ts","line":62,"character":29}]},{"id":2502,"name":"LambertMaterial","kind":64,"kindString":"Function","flags":{"isExported":true},"signatures":[{"id":2503,"name":"LambertMaterial","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Creates a Lambert material and saves it in the model attributes.\nIf a Basic material with the same name already exits, these settings will be added to the basic material.\n~\n[See the threejs docs](https://threejs.org/docs/#api/en/materials/MeshLambertMaterial)\n~\nIn order to assign a material to polygons in the model, a polygon attribute called 'material'\nneeds to be created. The value for each polygon must either be null, or must be a material name.","returns":"void\n"},"parameters":[{"id":2504,"name":"__model__","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"GIModel","id":1393}},{"id":2505,"name":"name","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"The name of the material."},"type":{"type":"intrinsic","name":"string"}},{"id":2506,"name":"emissive","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"The emissive colour, as [r, g, b] values between 0 and 1. White is [1, 1, 1]."},"type":{"type":"reference","name":"Txyz","id":279}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"core/modules/render.ts","line":139,"character":31}]},{"id":2507,"name":"PhongMaterial","kind":64,"kindString":"Function","flags":{"isExported":true},"signatures":[{"id":2508,"name":"PhongMaterial","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Creates a Phong material and saves it in the model attributes.\nIf a Basic material with the same name already exits, these settings will be added to the basic material.\n~\n[See the threejs docs](https://threejs.org/docs/#api/en/materials/MeshPhongMaterial)\n~\nIn order to assign a material to polygons in the model, a polygon attribute called 'material'\nneeds to be created. The value for each polygon must either be null, or must be a material name.","returns":"void\n"},"parameters":[{"id":2509,"name":"__model__","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"GIModel","id":1393}},{"id":2510,"name":"name","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"The name of the material."},"type":{"type":"intrinsic","name":"string"}},{"id":2511,"name":"emissive","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"The emissive colour, as [r, g, b] values between 0 and 1. White is [1, 1, 1]."},"type":{"type":"reference","name":"Txyz","id":279}},{"id":2512,"name":"specular","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"The specular colour, as [r, g, b] values between 0 and 1. White is [1, 1, 1]."},"type":{"type":"reference","name":"Txyz","id":279}},{"id":2513,"name":"shininess","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"The shininess, between 0 and 100."},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"core/modules/render.ts","line":166,"character":29}]},{"id":2521,"name":"PhysicalMaterial","kind":64,"kindString":"Function","flags":{"isExported":true},"signatures":[{"id":2522,"name":"PhysicalMaterial","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Creates a Physical material and saves it in the model attributes.\nIf a Basic material with the same name already exits, these settings will be added to the basic material.\n~\n[See the threejs docs](https://threejs.org/docs/#api/en/materials/MeshPhysicalMaterial)\n~\nIn order to assign a material to polygons in the model, a polygon attribute called 'material'\nneeds to be created. The value for each polygon must either be null, or must be a material name.","returns":"void\n"},"parameters":[{"id":2523,"name":"__model__","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"GIModel","id":1393}},{"id":2524,"name":"name","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"The name of the material."},"type":{"type":"intrinsic","name":"string"}},{"id":2525,"name":"emissive","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"The emissive colour, as [r, g, b] values between 0 and 1. White is [1, 1, 1]."},"type":{"type":"reference","name":"Txyz","id":279}},{"id":2526,"name":"roughness","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"The roughness, between 0 (smooth) and 1 (rough)."},"type":{"type":"intrinsic","name":"number"}},{"id":2527,"name":"metalness","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"The metalness, between 0 (non-metalic) and 1 (metalic)."},"type":{"type":"intrinsic","name":"number"}},{"id":2528,"name":"reflectivity","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"The reflectivity, between 0 (non-reflective) and 1 (reflective)."},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"core/modules/render.ts","line":234,"character":32}]},{"id":2514,"name":"StandardlMaterial","kind":64,"kindString":"Function","flags":{"isExported":true},"signatures":[{"id":2515,"name":"StandardlMaterial","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Creates a Standard material and saves it in the model attributes.\nIf a Basic material with the same name already exits, these settings will be added to the basic material.\n~\n[See the threejs docs](https://threejs.org/docs/#api/en/materials/MeshStandardMaterial)\n~\nIn order to assign a material to polygons in the model, a polygon attribute called 'material'\nneeds to be created. The value for each polygon must either be null, or must be a material name.","returns":"void\n"},"parameters":[{"id":2516,"name":"__model__","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"GIModel","id":1393}},{"id":2517,"name":"name","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"The name of the material."},"type":{"type":"intrinsic","name":"string"}},{"id":2518,"name":"emissive","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"The emissive colour, as [r, g, b] values between 0 and 1. White is [1, 1, 1]."},"type":{"type":"reference","name":"Txyz","id":279}},{"id":2519,"name":"roughness","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"The roughness, between 0 (smooth) and 1 (rough)."},"type":{"type":"intrinsic","name":"number"}},{"id":2520,"name":"metalness","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"The metalness, between 0 (non-metalic) and 1 (metalic)."},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"core/modules/render.ts","line":200,"character":33}]},{"id":2529,"name":"_clamp01","kind":64,"kindString":"Function","flags":{},"signatures":[{"id":2530,"name":"_clamp01","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":2531,"name":"val","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"number"}}],"sources":[{"fileName":"core/modules/render.ts","line":255,"character":17}]},{"id":2532,"name":"_clamp0100","kind":64,"kindString":"Function","flags":{},"signatures":[{"id":2533,"name":"_clamp0100","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":2534,"name":"val","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"number"}}],"sources":[{"fileName":"core/modules/render.ts","line":260,"character":19}]},{"id":2535,"name":"_clampArr01","kind":64,"kindString":"Function","flags":{},"signatures":[{"id":2536,"name":"_clampArr01","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":2537,"name":"vals","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"core/modules/render.ts","line":265,"character":20}]},{"id":2538,"name":"_colour","kind":64,"kindString":"Function","flags":{},"signatures":[{"id":2539,"name":"_colour","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":2540,"name":"col","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Txyz","id":279}}],"type":{"type":"reference","name":"Color"}}],"sources":[{"fileName":"core/modules/render.ts","line":270,"character":16}]},{"id":2486,"name":"_convertSelectEColoursToNum","kind":64,"kindString":"Function","flags":{},"signatures":[{"id":2487,"name":"_convertSelectEColoursToNum","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":2488,"name":"select","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"_EColours","id":2474}}],"type":{"type":"intrinsic","name":"number"}}],"sources":[{"fileName":"core/modules/render.ts","line":35,"character":36}]},{"id":2483,"name":"_convertSelectESideToNum","kind":64,"kindString":"Function","flags":{},"signatures":[{"id":2484,"name":"_convertSelectESideToNum","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":2485,"name":"select","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"_ESide","id":2470}}],"type":{"type":"intrinsic","name":"number"}}],"sources":[{"fileName":"core/modules/render.ts","line":21,"character":33}]},{"id":2541,"name":"_setMaterialModelAttrib","kind":64,"kindString":"Function","flags":{},"signatures":[{"id":2542,"name":"_setMaterialModelAttrib","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":2543,"name":"__model__","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"GIModel","id":1393}},{"id":2544,"name":"name","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":2545,"name":"settings_obj","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"object"}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"core/modules/render.ts","line":273,"character":32}]}],"groups":[{"title":"Enumerations","kind":4,"children":[2474,2477,2470]},{"title":"Functions","kind":64,"children":[2494,2489,2502,2507,2521,2514,2529,2532,2535,2538,2486,2483,2541]}],"sources":[{"fileName":"core/modules/render.ts","line":1,"character":0}]},{"id":2449,"name":"\"core/modules/util\"","kind":1,"kindString":"External module","flags":{"isExported":true},"originalName":"C:/Dropbox/Files/Software/GitHub/design-automation/mobius-parametric-modeller/src/assets/core/modules/util.ts","comment":{"shortText":"The `util` module has functions for importing data into the model and\nexporting data out of the model."},"children":[{"id":2450,"name":"_EIODataFormat","kind":4,"kindString":"Enumeration","flags":{"isExported":true},"children":[{"id":2451,"name":"GI","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"core/modules/util.ts","line":22,"character":6}],"defaultValue":"\"gi\""},{"id":2452,"name":"OBJ","kind":16,"kindString":"Enumeration member","flags":{"isExported":true},"sources":[{"fileName":"core/modules/util.ts","line":23,"character":7}],"defaultValue":"\"obj\""}],"groups":[{"title":"Enumeration members","kind":16,"children":[2451,2452]}],"sources":[{"fileName":"core/modules/util.ts","line":21,"character":26}]},{"id":2458,"name":"ExportData","kind":64,"kindString":"Function","flags":{"isExported":true},"signatures":[{"id":2459,"name":"ExportData","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Export data from the model as a file.\nThis will result in a popup in your browser, asking you to save the filel.","returns":"Boolean.","tags":[{"tag":"example","text":"util.ExportData ('my_model.obj', obj)"},{"tag":"example_info","text":"Exports all the data in the model as an OBJ.\n"}]},"parameters":[{"id":2460,"name":"__model__","kind":32768,"kindString":"Parameter","flags":{},"comment":{},"type":{"type":"reference","name":"GIModel","id":1393}},{"id":2461,"name":"filename","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"Name of the file as a string."},"type":{"type":"intrinsic","name":"string"}},{"id":2462,"name":"data_format","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"Enum, the file format."},"type":{"type":"reference","name":"_EIODataFormat","id":2450}}],"type":{"type":"intrinsic","name":"boolean"}}],"sources":[{"fileName":"core/modules/util.ts","line":70,"character":26}]},{"id":2453,"name":"ImportData","kind":64,"kindString":"Function","flags":{"isExported":true},"signatures":[{"id":2454,"name":"ImportData","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Imports data into the model.\nIn order to get the model data from a file, you need to define the File or URL parameter\nin the Start node of the flowchart.","returns":"A list of the positions, points, polylines, polygons and collections added to the model.","tags":[{"tag":"example","text":"util.ImportData (file1_data, obj)"},{"tag":"example_info","text":"Imports the data from file1 (defining the .obj file uploaded in 'Start' node).\n"}]},"parameters":[{"id":2455,"name":"__model__","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"GIModel","id":1393}},{"id":2456,"name":"model_data","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"The model data"},"type":{"type":"intrinsic","name":"string"}},{"id":2457,"name":"data_format","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"Enum, the file format."},"type":{"type":"reference","name":"_EIODataFormat","id":2450}}],"type":{"type":"array","elementType":{"type":"reference","name":"TId","id":275}}}],"sources":[{"fileName":"core/modules/util.ts","line":36,"character":26}]},{"id":2466,"name":"ModelCheck","kind":64,"kindString":"Function","flags":{"isExported":true},"signatures":[{"id":2467,"name":"ModelCheck","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Check tje internal consistency of the model.","returns":"Text that summarises what is in the model, click print to see this text.\n"},"parameters":[{"id":2468,"name":"__model__","kind":32768,"kindString":"Parameter","flags":{},"comment":{},"type":{"type":"reference","name":"GIModel","id":1393}}],"type":{"type":"intrinsic","name":"string"}}],"sources":[{"fileName":"core/modules/util.ts","line":129,"character":26}]},{"id":2463,"name":"ModelInfo","kind":64,"kindString":"Function","flags":{"isExported":true},"signatures":[{"id":2464,"name":"ModelInfo","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Returns a text summary of the contents of this model","returns":"Text that summarises what is in the model, click print to see this text.\n"},"parameters":[{"id":2465,"name":"__model__","kind":32768,"kindString":"Parameter","flags":{},"comment":{},"type":{"type":"reference","name":"GIModel","id":1393}}],"type":{"type":"intrinsic","name":"string"}}],"sources":[{"fileName":"core/modules/util.ts","line":93,"character":25}]}],"groups":[{"title":"Enumerations","kind":4,"children":[2450]},{"title":"Functions","kind":64,"children":[2458,2453,2466,2463]}],"sources":[{"fileName":"core/modules/util.ts","line":1,"character":0}]},{"id":2358,"name":"\"core/modules/virtual\"","kind":1,"kindString":"External module","flags":{"isExported":true},"originalName":"C:/Dropbox/Files/Software/GitHub/design-automation/mobius-parametric-modeller/src/assets/core/modules/virtual.ts","comment":{"shortText":"The `virtual` module has functions for creating virtual geometric constructs.\nThey are called 'virtual' due to the fact that they are not saved in the model.\nCurrently there are two types of virtual constructs: planes and rays.\nMost of these functions neither make nor modify anything in the model.\nThe exception is the `Vis` functions, that generate some polylines and polygons in the model\nto aid with visualizing these virtual constructs."},"children":[{"id":2404,"name":"GetBBox","kind":64,"kindString":"Function","flags":{"isExported":true},"signatures":[{"id":2405,"name":"GetBBox","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Returns the bounding box of the entities.\nThe bounding box is an imaginary box that completley contains all the geometry.\nThe box is always aligned with the global x, y, and z axes.\nThe bounding box consists of a list of lists, as follows [[x, y, z], [x, y, z], [x, y, z], [x, y, z]].\n- The first [x, y, z] is the coordinates of the centre of the bounding box.\n- The second [x, y, z] is the corner of the bounding box with the lowest x, y, z values.\n- The third [x, y, z] is the corner of the bounding box with the highest x, y, z values.\n- The fourth [x, y, z] is the dimensions of the bounding box.","returns":"The bounding box consisting of a list of four lists.\n"},"parameters":[{"id":2406,"name":"__model__","kind":32768,"kindString":"Parameter","flags":{},"comment":{},"type":{"type":"reference","name":"GIModel","id":1393}},{"id":2407,"name":"entities","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"The etities for which to calculate the bounding box."},"type":{"type":"union","types":[{"type":"reference","name":"TId","id":275},{"type":"array","elementType":{"type":"reference","name":"TId","id":275}}]}}],"type":{"type":"reference","name":"TBBox","id":273}}],"sources":[{"fileName":"core/modules/virtual.ts","line":228,"character":23}]},{"id":2396,"name":"GetPlane","kind":64,"kindString":"Function","flags":{"isExported":true},"signatures":[{"id":2397,"name":"GetPlane","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Returns a plane from a polygon, a face, a polyline, or a wire.\nFor polylines or wires, there must be at least three non-colinear vertices.\n~\nThe winding order is counter-clockwise.\nThis means that if the vertices are ordered counter-clockwise relative to your point of view,\nthen the z axis of the plane will be pointing towards you.","returns":"The plane.\n"},"parameters":[{"id":2398,"name":"__model__","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"GIModel","id":1393}},{"id":2399,"name":"entities","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"Any entities"},"type":{"type":"union","types":[{"type":"reference","name":"TId","id":275},{"type":"array","elementType":{"type":"reference","name":"TId","id":275}}]}}],"type":{"type":"union","types":[{"type":"reference","name":"TPlane","id":272},{"type":"array","elementType":{"type":"reference","name":"TPlane","id":272}}]}}],"sources":[{"fileName":"core/modules/virtual.ts","line":180,"character":24}]},{"id":2388,"name":"GetRay","kind":64,"kindString":"Function","flags":{"isExported":true},"signatures":[{"id":2389,"name":"GetRay","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Returns a ray for an edge, a face, or a polygons. For edges, it returns a ray along the edge, from teh start vertex to the end vertex\nFor a face or polygon, it returns the ray that is the z-axis of the plane.\n~\nFor an edge, the ray vector is not normalised. For a face or polygon, the ray vector is normalised.","returns":"The ray.\n"},"parameters":[{"id":2390,"name":"__model__","kind":32768,"kindString":"Parameter","flags":{},"comment":{},"type":{"type":"reference","name":"GIModel","id":1393}},{"id":2391,"name":"entities","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"An edge, a face, or a polygon, or a list."},"type":{"type":"union","types":[{"type":"reference","name":"TId","id":275},{"type":"array","elementType":{"type":"reference","name":"TId","id":275}}]}}],"type":{"type":"union","types":[{"type":"reference","name":"TRay","id":271},{"type":"array","elementType":{"type":"reference","name":"TRay","id":271}}]}}],"sources":[{"fileName":"core/modules/virtual.ts","line":144,"character":22}]},{"id":2364,"name":"Plane","kind":64,"kindString":"Function","flags":{"isExported":true},"signatures":[{"id":2365,"name":"Plane","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Creates a plane, centered at the origin.\nA plane is define by a list of three lists, as folows: [origin, x_vector, y_vector].","returns":"A list consisting of an origin and two vectors, [origin, vector, vector].","tags":[{"tag":"example","text":"virtual.Plane ([1,2,3],[4,3,2],[3,3,9])"},{"tag":"example_info","text":"Creates a plane with its origin positioned at [1,2,3] and two vectors [4,3,2] and [3,3,9] lie on it.\n"}]},"parameters":[{"id":2366,"name":"__model__","kind":32768,"kindString":"Parameter","flags":{},"comment":{},"type":{"type":"reference","name":"GIModel","id":1393}},{"id":2367,"name":"origin","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"Origin of plane: Position, Vertex, Point, or a list of three numbers"},"type":{"type":"union","types":[{"type":"reference","name":"TId","id":275},{"type":"reference","name":"Txyz","id":279}]}},{"id":2368,"name":"x_vec","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"X vector of the plane: List of three numbers"},"type":{"type":"reference","name":"Txyz","id":279}},{"id":2369,"name":"xy_vec","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"A vector in the xy plane (parallel to teh x vector): List of three numbers"},"type":{"type":"reference","name":"Txyz","id":279}}],"type":{"type":"reference","name":"TPlane","id":272}}],"sources":[{"fileName":"core/modules/virtual.ts","line":65,"character":21}]},{"id":2359,"name":"Ray","kind":64,"kindString":"Function","flags":{"isExported":true},"signatures":[{"id":2360,"name":"Ray","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Creates a ray, centered at the origin.\nA ray is defined by a list of two lists, as follows: [origin, direction_vector].","returns":"A list consisting of an origin and a vector, [origin, vector].","tags":[{"tag":"example","text":"virtual.Ray([1,2,3],[4,3,2])"},{"tag":"example_info","text":"Creates a ray from [1,2,3] with the vector [4,3,2].\n\n"}]},"parameters":[{"id":2361,"name":"__model__","kind":32768,"kindString":"Parameter","flags":{},"comment":{},"type":{"type":"reference","name":"GIModel","id":1393}},{"id":2362,"name":"origin","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"Origin of ray: Position, Vertex, Point, or a list of three numbers"},"type":{"type":"union","types":[{"type":"reference","name":"TId","id":275},{"type":"reference","name":"Txyz","id":279}]}},{"id":2363,"name":"dir_vec","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"Direction of Ray: Vector, or list of three numbers"},"type":{"type":"reference","name":"Txyz","id":279}}],"type":{"type":"reference","name":"TRay","id":271}}],"sources":[{"fileName":"core/modules/virtual.ts","line":35,"character":19}]},{"id":2373,"name":"RayFromPlane","kind":64,"kindString":"Function","flags":{"isExported":true},"signatures":[{"id":2374,"name":"RayFromPlane","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Create a ray, from a plane.\nThe direction will be along the z axis.\nA plane is define by a list of three lists, as folows: [origin, x_vector, y_vector].\nA ray is defined by a list of two lists, as follows: [origin, direction_vector].","returns":"Ray or list of rays.\n"},"parameters":[{"id":2375,"name":"planes","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"union","types":[{"type":"reference","name":"TPlane","id":272},{"type":"array","elementType":{"type":"reference","name":"TPlane","id":272}}]}}],"type":{"type":"union","types":[{"type":"reference","name":"TRay","id":271},{"type":"array","elementType":{"type":"reference","name":"TRay","id":271}}]}}],"sources":[{"fileName":"core/modules/virtual.ts","line":102,"character":28}]},{"id":2432,"name":"VisBBox","kind":64,"kindString":"Function","flags":{"isExported":true},"signatures":[{"id":2433,"name":"VisBBox","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Visualises a bounding box by adding geometry to the model.","returns":"Entities, twelve polylines representing the box.","tags":[{"tag":"example","text":"bbox1 = virtual.viBBox(position1, vector1, [0,1,0])"},{"tag":"example_info","text":"Creates a plane with position1 on it and normal = cross product of vector1 with y-axis.\n"}]},"parameters":[{"id":2434,"name":"__model__","kind":32768,"kindString":"Parameter","flags":{},"comment":{},"type":{"type":"reference","name":"GIModel","id":1393}},{"id":2435,"name":"bbox","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"A list of lists."},"type":{"type":"union","types":[{"type":"reference","name":"TBBox","id":273},{"type":"reference","name":"TBBox","id":273}]}}],"type":{"type":"array","elementType":{"type":"reference","name":"TId","id":275}}}],"sources":[{"fileName":"core/modules/virtual.ts","line":421,"character":23}]},{"id":2423,"name":"VisPlane","kind":64,"kindString":"Function","flags":{"isExported":true},"signatures":[{"id":2424,"name":"VisPlane","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Visualises a plane by creating a polygon and axis lines.","returns":"Entities, a polygon and two polyline representing the plane.","tags":[{"tag":"example","text":"plane1 = virtual.visPlane(position1, vector1, [0,1,0])"},{"tag":"example_info","text":"Creates a plane with position1 on it and normal = cross product of vector1 with y-axis.\n"}]},"parameters":[{"id":2425,"name":"__model__","kind":32768,"kindString":"Parameter","flags":{},"comment":{},"type":{"type":"reference","name":"GIModel","id":1393}},{"id":2426,"name":"planes","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"union","types":[{"type":"reference","name":"TPlane","id":272},{"type":"array","elementType":{"type":"reference","name":"TPlane","id":272}}]}},{"id":2427,"name":"scale","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"array","elementType":{"type":"reference","name":"TId","id":275}}}],"sources":[{"fileName":"core/modules/virtual.ts","line":352,"character":24}]},{"id":2413,"name":"VisRay","kind":64,"kindString":"Function","flags":{"isExported":true},"signatures":[{"id":2414,"name":"VisRay","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Visualises a ray by creating a line.","returns":"entities, a line representing the ray.","tags":[{"tag":"example","text":"ray1 = virtual.visRay([[1,2,3],[0,0,1]])\n"}]},"parameters":[{"id":2415,"name":"__model__","kind":32768,"kindString":"Parameter","flags":{},"comment":{},"type":{"type":"reference","name":"GIModel","id":1393}},{"id":2416,"name":"ray","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"A list of two list of three coordinates [origin, vector]: [[x,y,z],[x',y',z']]"},"type":{"type":"union","types":[{"type":"reference","name":"TRay","id":271},{"type":"array","elementType":{"type":"reference","name":"TRay","id":271}}]}},{"id":2417,"name":"scale","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"array","elementType":{"type":"reference","name":"TId","id":275}}}],"sources":[{"fileName":"core/modules/virtual.ts","line":274,"character":22}]},{"id":2400,"name":"_getBoundingBox","kind":64,"kindString":"Function","flags":{},"signatures":[{"id":2401,"name":"_getBoundingBox","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":2402,"name":"__model__","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"GIModel","id":1393}},{"id":2403,"name":"ents_arr","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"array","elementType":{"type":"reference","name":"TEntTypeIdx","id":270}}}],"type":{"type":"reference","name":"TBBox","id":273}}],"sources":[{"fileName":"core/modules/virtual.ts","line":188,"character":24}]},{"id":2392,"name":"_getPlane","kind":64,"kindString":"Function","flags":{},"signatures":[{"id":2393,"name":"_getPlane","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":2394,"name":"__model__","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"GIModel","id":1393}},{"id":2395,"name":"ents_arr","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"union","types":[{"type":"reference","name":"TEntTypeIdx","id":270},{"type":"array","elementType":{"type":"reference","name":"TEntTypeIdx","id":270}}]}}],"type":{"type":"union","types":[{"type":"reference","name":"TPlane","id":272},{"type":"array","elementType":{"type":"reference","name":"TPlane","id":272}}]}}],"sources":[{"fileName":"core/modules/virtual.ts","line":152,"character":18}]},{"id":2384,"name":"_getRay","kind":64,"kindString":"Function","flags":{},"signatures":[{"id":2385,"name":"_getRay","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":2386,"name":"__model__","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"GIModel","id":1393}},{"id":2387,"name":"ents_arr","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"union","types":[{"type":"reference","name":"TEntTypeIdx","id":270},{"type":"array","elementType":{"type":"reference","name":"TEntTypeIdx","id":270}}]}}],"type":{"type":"union","types":[{"type":"reference","name":"TRay","id":271},{"type":"array","elementType":{"type":"reference","name":"TRay","id":271}}]}}],"sources":[{"fileName":"core/modules/virtual.ts","line":119,"character":16}]},{"id":2376,"name":"_getRayFromEdge","kind":64,"kindString":"Function","flags":{},"signatures":[{"id":2377,"name":"_getRayFromEdge","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":2378,"name":"__model__","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"GIModel","id":1393}},{"id":2379,"name":"ent_arr","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"TEntTypeIdx","id":270}}],"type":{"type":"reference","name":"TRay","id":271}}],"sources":[{"fileName":"core/modules/virtual.ts","line":110,"character":24}]},{"id":2380,"name":"_getRayFromFace","kind":64,"kindString":"Function","flags":{},"signatures":[{"id":2381,"name":"_getRayFromFace","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":2382,"name":"__model__","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"GIModel","id":1393}},{"id":2383,"name":"ent_arr","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"TEntTypeIdx","id":270}}],"type":{"type":"reference","name":"TRay","id":271}}],"sources":[{"fileName":"core/modules/virtual.ts","line":115,"character":24}]},{"id":2370,"name":"_rayFromPlane","kind":64,"kindString":"Function","flags":{},"signatures":[{"id":2371,"name":"_rayFromPlane","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":2372,"name":"planes","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"union","types":[{"type":"reference","name":"TPlane","id":272},{"type":"array","elementType":{"type":"reference","name":"TPlane","id":272}}]}}],"type":{"type":"union","types":[{"type":"reference","name":"TRay","id":271},{"type":"array","elementType":{"type":"reference","name":"TRay","id":271}}]}}],"sources":[{"fileName":"core/modules/virtual.ts","line":84,"character":22}]},{"id":2428,"name":"_visBBox","kind":64,"kindString":"Function","flags":{},"signatures":[{"id":2429,"name":"_visBBox","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":2430,"name":"__model__","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"GIModel","id":1393}},{"id":2431,"name":"bboxs","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"union","types":[{"type":"reference","name":"TBBox","id":273},{"type":"array","elementType":{"type":"reference","name":"TBBox","id":273}}]}}],"type":{"type":"array","elementType":{"type":"reference","name":"TEntTypeIdx","id":270}}}],"sources":[{"fileName":"core/modules/virtual.ts","line":361,"character":17}]},{"id":2418,"name":"_visPlane","kind":64,"kindString":"Function","flags":{},"signatures":[{"id":2419,"name":"_visPlane","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":2420,"name":"__model__","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"GIModel","id":1393}},{"id":2421,"name":"planes","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"union","types":[{"type":"reference","name":"TPlane","id":272},{"type":"array","elementType":{"type":"reference","name":"TPlane","id":272}}]}},{"id":2422,"name":"scale","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"array","elementType":{"type":"reference","name":"TEntTypeIdx","id":270}}}],"sources":[{"fileName":"core/modules/virtual.ts","line":283,"character":18}]},{"id":2408,"name":"_visRay","kind":64,"kindString":"Function","flags":{},"signatures":[{"id":2409,"name":"_visRay","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":2410,"name":"__model__","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"GIModel","id":1393}},{"id":2411,"name":"rays","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"union","types":[{"type":"reference","name":"TRay","id":271},{"type":"array","elementType":{"type":"reference","name":"TRay","id":271}}]}},{"id":2412,"name":"scale","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"array","elementType":{"type":"reference","name":"TEntTypeIdx","id":270}}}],"sources":[{"fileName":"core/modules/virtual.ts","line":236,"character":16}]}],"groups":[{"title":"Functions","kind":64,"children":[2404,2396,2388,2364,2359,2373,2432,2423,2413,2400,2392,2384,2376,2380,2370,2428,2418,2408]}],"sources":[{"fileName":"core/modules/virtual.ts","line":1,"character":0}]},{"id":2444,"name":"\"libs/filesys/download\"","kind":1,"kindString":"External module","flags":{"isExported":true,"isExternal":true},"originalName":"C:/Dropbox/Files/Software/GitHub/design-automation/mobius-parametric-modeller/src/assets/libs/filesys/download.ts","children":[{"id":2445,"name":"download","kind":64,"kindString":"Function","flags":{"isExported":true,"isExternal":true},"signatures":[{"id":2446,"name":"download","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Download a file."},"parameters":[{"id":2447,"name":"data","kind":32768,"kindString":"Parameter","flags":{},"comment":{},"type":{"type":"intrinsic","name":"string"}},{"id":2448,"name":"filename","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"\n"},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"boolean"}}],"sources":[{"fileName":"libs/filesys/download.ts","line":6,"character":24}]}],"groups":[{"title":"Functions","kind":64,"children":[2445]}],"sources":[{"fileName":"libs/filesys/download.ts","line":1,"character":0}]},{"id":17,"name":"\"libs/geo-info/GIAttribMap\"","kind":1,"kindString":"External module","flags":{"isExported":true,"isExternal":true},"originalName":"C:/Dropbox/Files/Software/GitHub/design-automation/mobius-parametric-modeller/src/assets/libs/geo-info/GIAttribMap.ts","children":[{"id":18,"name":"GIAttribMap","kind":128,"kindString":"Class","flags":{"isExported":true,"isExternal":true},"comment":{"shortText":"Geo-info attribute class for one attribute.\nThe attributs stores key-value pairs.\nMultiple keys point to the same value.\nSo for example, [[1,3], \"a\"],[[0,4], \"b\"] can be converted into sequential arrays.\nThe values would be [\"a\", \"b\"]\nThe keys would be [1,0,,0,1] (Note the undefined value in the middle.)"},"children":[{"id":27,"name":"constructor","kind":512,"kindString":"Constructor","flags":{"isExported":true,"isExternal":true},"comment":{"shortText":"Creates an attribute."},"signatures":[{"id":28,"name":"new GIAttribMap","kind":16384,"kindString":"Constructor signature","flags":{},"comment":{"shortText":"Creates an attribute."},"parameters":[{"id":29,"name":"name","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":30,"name":"data_type","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"EAttribDataTypeStrs","id":231}},{"id":31,"name":"data_size","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","name":"GIAttribMap","id":18}}],"sources":[{"fileName":"libs/geo-info/GIAttribMap.ts","line":26,"character":53}]},{"id":21,"name":"_data_size","kind":1024,"kindString":"Property","flags":{"isPrivate":true,"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/GIAttribMap.ts","line":16,"character":22}],"type":{"type":"intrinsic","name":"number"}},{"id":20,"name":"_data_type","kind":1024,"kindString":"Property","flags":{"isPrivate":true,"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/GIAttribMap.ts","line":15,"character":22}],"type":{"type":"reference","name":"EAttribDataTypeStrs","id":231}},{"id":26,"name":"_map_ent_i_to_val_i","kind":1024,"kindString":"Property","flags":{"isPrivate":true,"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/GIAttribMap.ts","line":26,"character":31}],"type":{"type":"reference","name":"Map","typeArguments":[{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"number"}]}},{"id":25,"name":"_map_val_i_to_ents_i","kind":1024,"kindString":"Property","flags":{"isPrivate":true,"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/GIAttribMap.ts","line":25,"character":32}],"type":{"type":"reference","name":"Map","typeArguments":[{"type":"intrinsic","name":"number"},{"type":"array","elementType":{"type":"intrinsic","name":"number"}}]}},{"id":24,"name":"_map_val_i_to_val","kind":1024,"kindString":"Property","flags":{"isPrivate":true,"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/GIAttribMap.ts","line":24,"character":29}],"type":{"type":"reference","name":"Map","typeArguments":[{"type":"intrinsic","name":"number"},{"type":"reference","name":"TAttribDataTypes","id":291}]}},{"id":23,"name":"_map_val_k_to_val_i","kind":1024,"kindString":"Property","flags":{"isPrivate":true,"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/GIAttribMap.ts","line":23,"character":31}],"type":{"type":"reference","name":"Map","typeArguments":[{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"}]},{"type":"intrinsic","name":"number"}]}},{"id":19,"name":"_name","kind":1024,"kindString":"Property","flags":{"isPrivate":true,"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/GIAttribMap.ts","line":14,"character":17}],"type":{"type":"intrinsic","name":"string"}},{"id":22,"name":"_num_vals","kind":1024,"kindString":"Property","flags":{"isPrivate":true,"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/GIAttribMap.ts","line":21,"character":21}],"type":{"type":"intrinsic","name":"number"}},{"id":88,"name":"_cleanUp","kind":2048,"kindString":"Method","flags":{"isPrivate":true,"isExported":true,"isExternal":true},"signatures":[{"id":89,"name":"_cleanUp","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Checks if anything still points to this value\nIf not, cleans up the arrays\n_map_val_i_to_ents_i\n_map_val_i_to_val\n_map_val_k_to_val_i"},"parameters":[{"id":90,"name":"val_i","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"libs/geo-info/GIAttribMap.ts","line":323,"character":20}]},{"id":91,"name":"_compare","kind":2048,"kindString":"Method","flags":{"isPrivate":true,"isExported":true,"isExternal":true},"signatures":[{"id":92,"name":"_compare","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Compare two values"},"parameters":[{"id":93,"name":"operator","kind":32768,"kindString":"Parameter","flags":{},"comment":{},"type":{"type":"reference","name":"EQueryOperatorTypes","id":177}},{"id":94,"name":"val1","kind":32768,"kindString":"Parameter","flags":{},"comment":{},"type":{"type":"intrinsic","name":"any"}},{"id":95,"name":"val2","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"\n"},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"boolean"}}],"sources":[{"fileName":"libs/geo-info/GIAttribMap.ts","line":343,"character":20}]},{"id":106,"name":"_searchIndexedNumValue","kind":2048,"kindString":"Method","flags":{"isPrivate":true,"isExported":true,"isExternal":true},"signatures":[{"id":107,"name":"_searchIndexedNumValue","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Searches for the value using the operator"},"parameters":[{"id":108,"name":"ents_i","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}},{"id":109,"name":"val_arr_index","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":110,"name":"operator","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"EQueryOperatorTypes","id":177}},{"id":111,"name":"val_k","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}}],"sources":[{"fileName":"libs/geo-info/GIAttribMap.ts","line":448,"character":34}]},{"id":112,"name":"_searchIndexedStrValue","kind":2048,"kindString":"Method","flags":{"isPrivate":true,"isExported":true,"isExternal":true},"signatures":[{"id":113,"name":"_searchIndexedStrValue","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Searches for the value using the operator"},"parameters":[{"id":114,"name":"ents_i","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}},{"id":115,"name":"val_arr_index","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":116,"name":"operator","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"EQueryOperatorTypes","id":177}},{"id":117,"name":"val_k","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}}],"sources":[{"fileName":"libs/geo-info/GIAttribMap.ts","line":475,"character":34}]},{"id":96,"name":"_searchNumValue","kind":2048,"kindString":"Method","flags":{"isPrivate":true,"isExported":true,"isExternal":true},"signatures":[{"id":97,"name":"_searchNumValue","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Searches for the value using the operator"},"parameters":[{"id":98,"name":"ents_i","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}},{"id":99,"name":"operator","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"EQueryOperatorTypes","id":177}},{"id":100,"name":"val_k","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}}],"sources":[{"fileName":"libs/geo-info/GIAttribMap.ts","line":372,"character":27}]},{"id":101,"name":"_searchStrValue","kind":2048,"kindString":"Method","flags":{"isPrivate":true,"isExported":true,"isExternal":true},"signatures":[{"id":102,"name":"_searchStrValue","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Searches for the value using the operator"},"parameters":[{"id":103,"name":"ents_i","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}},{"id":104,"name":"operator","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"EQueryOperatorTypes","id":177}},{"id":105,"name":"val_k","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}}],"sources":[{"fileName":"libs/geo-info/GIAttribMap.ts","line":416,"character":27}]},{"id":85,"name":"_valToValkey","kind":2048,"kindString":"Method","flags":{"isPrivate":true,"isExported":true,"isExternal":true},"signatures":[{"id":86,"name":"_valToValkey","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Convert a value into a map key"},"parameters":[{"id":87,"name":"val","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"TAttribDataTypes","id":291}}],"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"}]}}],"sources":[{"fileName":"libs/geo-info/GIAttribMap.ts","line":299,"character":24}]},{"id":46,"name":"delEnt","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":47,"name":"delEnt","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Delete the entities from this attribute map."},"parameters":[{"id":48,"name":"ents_i","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"union","types":[{"type":"intrinsic","name":"number"},{"type":"array","elementType":{"type":"intrinsic","name":"number"}}]}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"libs/geo-info/GIAttribMap.ts","line":109,"character":17}]},{"id":32,"name":"getData","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":33,"name":"getData","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Returns the JSON data for this attribute."},"type":{"type":"reference","name":"IAttribData","id":245}}],"sources":[{"fileName":"libs/geo-info/GIAttribMap.ts","line":45,"character":18}]},{"id":38,"name":"getDataSize","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":39,"name":"getDataSize","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Returns the data size of this attribute."},"type":{"type":"intrinsic","name":"number"}}],"sources":[{"fileName":"libs/geo-info/GIAttribMap.ts","line":91,"character":22}]},{"id":36,"name":"getDataType","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":37,"name":"getDataType","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Returns the data type of this attribute."},"type":{"type":"reference","name":"EAttribDataTypeStrs","id":231}}],"sources":[{"fileName":"libs/geo-info/GIAttribMap.ts","line":85,"character":22}]},{"id":66,"name":"getEntIdxVal","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":67,"name":"getEntIdxVal","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Gets the indexed value for a given entity.\nReturns undefined if the entity does not exist\nThis assumes that this attribute has a data_size > 1."},"parameters":[{"id":68,"name":"ents_i","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"union","types":[{"type":"intrinsic","name":"number"},{"type":"array","elementType":{"type":"intrinsic","name":"number"}}]}},{"id":69,"name":"val_index","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"union","types":[{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"string"},{"type":"array","elementType":{"type":"intrinsic","name":"number"}},{"type":"array","elementType":{"type":"intrinsic","name":"string"}}]}}],"sources":[{"fileName":"libs/geo-info/GIAttribMap.ts","line":219,"character":23}]},{"id":63,"name":"getEntVal","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":64,"name":"getEntVal","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Gets the value for a given entity, or an array of values given an array of entities.\nReturns undefined if the entity does not exist"},"parameters":[{"id":65,"name":"ents_i","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"union","types":[{"type":"intrinsic","name":"number"},{"type":"array","elementType":{"type":"intrinsic","name":"number"}}]}}],"type":{"type":"union","types":[{"type":"reference","name":"TAttribDataTypes","id":291},{"type":"array","elementType":{"type":"reference","name":"TAttribDataTypes","id":291}}]}}],"sources":[{"fileName":"libs/geo-info/GIAttribMap.ts","line":203,"character":20}]},{"id":70,"name":"getEntsFromVal","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":71,"name":"getEntsFromVal","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Gets all the keys that have a given value\nIf the value does not exist an empty array is returned"},"parameters":[{"id":72,"name":"val","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"\n"},"type":{"type":"reference","name":"TAttribDataTypes","id":291}}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}}],"sources":[{"fileName":"libs/geo-info/GIAttribMap.ts","line":233,"character":25}]},{"id":49,"name":"getEntsVals","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":50,"name":"getEntsVals","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Returns a nested array of entities and values, like this:\n[ [[2,4,6,8], 'hello'], [[9,10], 'world']]\nThis is the same format as used in gi-json\nThis matches the method setEntsVals()"},"type":{"type":"array","elementType":{"type":"tuple","elements":[{"type":"array","elementType":{"type":"intrinsic","name":"number"}},{"type":"reference","name":"TAttribDataTypes","id":291}]}}}],"sources":[{"fileName":"libs/geo-info/GIAttribMap.ts","line":131,"character":22}]},{"id":76,"name":"getEntsWithVal","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":77,"name":"getEntsWithVal","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Returns an array of entity indices which have a value (not undefined)"},"parameters":[{"id":78,"name":"ents_i","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}}],"sources":[{"fileName":"libs/geo-info/GIAttribMap.ts","line":247,"character":25}]},{"id":73,"name":"getEntsWithoutVal","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":74,"name":"getEntsWithoutVal","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Returns an array of entity indices which do not have a value (undefined)"},"parameters":[{"id":75,"name":"ents_i","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}}],"sources":[{"fileName":"libs/geo-info/GIAttribMap.ts","line":241,"character":28}]},{"id":34,"name":"getName","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":35,"name":"getName","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Returns the name of this attribute."},"type":{"type":"intrinsic","name":"string"}}],"sources":[{"fileName":"libs/geo-info/GIAttribMap.ts","line":79,"character":18}]},{"id":43,"name":"hasEnt","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":44,"name":"hasEnt","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Returns true if thereis an entity that has a value (i.e. the value is not undefined)."},"parameters":[{"id":45,"name":"ent_i","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"boolean"}}],"sources":[{"fileName":"libs/geo-info/GIAttribMap.ts","line":103,"character":17}]},{"id":40,"name":"hasVal","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":41,"name":"hasVal","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Returns true if this value exists in the attributes."},"parameters":[{"id":42,"name":"val","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"TAttribDataTypes","id":291}}],"type":{"type":"intrinsic","name":"boolean"}}],"sources":[{"fileName":"libs/geo-info/GIAttribMap.ts","line":97,"character":17}]},{"id":79,"name":"queryVal","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":80,"name":"queryVal","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Executes a query"},"parameters":[{"id":81,"name":"ents_i","kind":32768,"kindString":"Parameter","flags":{},"comment":{},"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}},{"id":82,"name":"val_arr_index","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"The index of the value in the array"},"type":{"type":"intrinsic","name":"number"}},{"id":83,"name":"operator","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"The relational operator, ==, !=, <=, >=, etc"},"type":{"type":"reference","name":"EQueryOperatorTypes","id":177}},{"id":84,"name":"val_k","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"The string version of the value.\n"},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}}],"sources":[{"fileName":"libs/geo-info/GIAttribMap.ts","line":257,"character":19}]},{"id":58,"name":"setEntIdxVal","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":59,"name":"setEntIdxVal","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Sets the indexed value for a given entity or entities.\nThis assumes that this attribute has a data_size > 1."},"parameters":[{"id":60,"name":"ent_i","kind":32768,"kindString":"Parameter","flags":{},"comment":{},"type":{"type":"union","types":[{"type":"intrinsic","name":"number"},{"type":"array","elementType":{"type":"intrinsic","name":"number"}}]}},{"id":61,"name":"val_index","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":62,"name":"val","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"\n"},"type":{"type":"union","types":[{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"string"}]}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"libs/geo-info/GIAttribMap.ts","line":190,"character":23}]},{"id":54,"name":"setEntVal","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":55,"name":"setEntVal","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Sets the value for a given entity or entities."},"parameters":[{"id":56,"name":"ents_i","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"union","types":[{"type":"intrinsic","name":"number"},{"type":"array","elementType":{"type":"intrinsic","name":"number"}}]}},{"id":57,"name":"val","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"\n"},"type":{"type":"reference","name":"TAttribDataTypes","id":291}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"libs/geo-info/GIAttribMap.ts","line":154,"character":20}]},{"id":51,"name":"setEntsVals","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":52,"name":"setEntsVals","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Sets the value for multiple entity-value pairs at the same time."},"parameters":[{"id":53,"name":"ents_i_values","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"array","elementType":{"type":"tuple","elements":[{"type":"array","elementType":{"type":"intrinsic","name":"number"}},{"type":"reference","name":"TAttribDataTypes","id":291}]}}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"libs/geo-info/GIAttribMap.ts","line":144,"character":22}]}],"groups":[{"title":"Constructors","kind":512,"children":[27]},{"title":"Properties","kind":1024,"children":[21,20,26,25,24,23,19,22]},{"title":"Methods","kind":2048,"children":[88,91,106,112,96,101,85,46,32,38,36,66,63,70,49,76,73,34,43,40,79,58,54,51]}],"sources":[{"fileName":"libs/geo-info/GIAttribMap.ts","line":13,"character":24}]}],"groups":[{"title":"Classes","kind":128,"children":[18]}],"sources":[{"fileName":"libs/geo-info/GIAttribMap.ts","line":1,"character":0}]},{"id":1344,"name":"\"libs/geo-info/GIAttribs\"","kind":1,"kindString":"External module","flags":{"isExported":true,"isExternal":true},"originalName":"C:/Dropbox/Files/Software/GitHub/design-automation/mobius-parametric-modeller/src/assets/libs/geo-info/GIAttribs.ts","children":[{"id":1345,"name":"GIAttribs","kind":128,"kindString":"Class","flags":{"isExported":true,"isExternal":true},"comment":{"shortText":"Class for attributes."},"children":[{"id":1362,"name":"constructor","kind":512,"kindString":"Constructor","flags":{"isExported":true,"isExternal":true},"comment":{"shortText":"Creates an object to store the attribute data."},"signatures":[{"id":1363,"name":"new GIAttribs","kind":16384,"kindString":"Constructor signature","flags":{},"comment":{"shortText":"Creates an object to store the attribute data."},"parameters":[{"id":1364,"name":"model","kind":32768,"kindString":"Parameter","flags":{},"comment":{"shortText":"The JSON data\n"},"type":{"type":"reference","name":"GIModel","id":1393}}],"type":{"type":"reference","name":"GIAttribs","id":1345}}],"sources":[{"fileName":"libs/geo-info/GIAttribs.ts","line":30,"character":37}]},{"id":1346,"name":"_model","kind":1024,"kindString":"Property","flags":{"isPrivate":true,"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/GIAttribs.ts","line":12,"character":18}],"type":{"type":"reference","name":"GIModel","id":1393}},{"id":1359,"name":"add","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true,"isPublic":true},"sources":[{"fileName":"libs/geo-info/GIAttribs.ts","line":28,"character":14}],"type":{"type":"reference","name":"GIAttribsAdd","id":1102}},{"id":1358,"name":"io","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true,"isPublic":true},"sources":[{"fileName":"libs/geo-info/GIAttribs.ts","line":27,"character":13}],"type":{"type":"reference","name":"GIAttribsIO","id":1315}},{"id":1360,"name":"query","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true,"isPublic":true},"sources":[{"fileName":"libs/geo-info/GIAttribs.ts","line":29,"character":16}],"type":{"type":"reference","name":"GIAttribsQuery","id":1232}},{"id":1361,"name":"threejs","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true,"isPublic":true},"sources":[{"fileName":"libs/geo-info/GIAttribs.ts","line":30,"character":18}],"type":{"type":"reference","name":"GIAttribsThreejs","id":1180}},{"id":1347,"name":"_attribs_maps","kind":2097152,"kindString":"Object literal","flags":{"isExported":true,"isExternal":true,"isPublic":true},"children":[{"id":1350,"name":"_e","kind":32,"kindString":"Variable","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/GIAttribs.ts","line":17,"character":10}],"type":{"type":"reference","name":"Map","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"reference","name":"GIAttribMap","id":18}]},"defaultValue":" new Map()"},{"id":1352,"name":"_f","kind":32,"kindString":"Variable","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/GIAttribs.ts","line":19,"character":10}],"type":{"type":"reference","name":"Map","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"reference","name":"GIAttribMap","id":18}]},"defaultValue":" new Map()"},{"id":1349,"name":"_v","kind":32,"kindString":"Variable","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/GIAttribs.ts","line":16,"character":10}],"type":{"type":"reference","name":"Map","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"reference","name":"GIAttribMap","id":18}]},"defaultValue":" new Map()"},{"id":1351,"name":"_w","kind":32,"kindString":"Variable","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/GIAttribs.ts","line":18,"character":10}],"type":{"type":"reference","name":"Map","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"reference","name":"GIAttribMap","id":18}]},"defaultValue":" new Map()"},{"id":1356,"name":"co","kind":32,"kindString":"Variable","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/GIAttribs.ts","line":23,"character":10}],"type":{"type":"reference","name":"Map","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"reference","name":"GIAttribMap","id":18}]},"defaultValue":" new Map()"},{"id":1357,"name":"mo","kind":32,"kindString":"Variable","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/GIAttribs.ts","line":24,"character":10}],"type":{"type":"reference","name":"Map","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"any"}]},"defaultValue":" new Map()"},{"id":1355,"name":"pg","kind":32,"kindString":"Variable","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/GIAttribs.ts","line":22,"character":10}],"type":{"type":"reference","name":"Map","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"reference","name":"GIAttribMap","id":18}]},"defaultValue":" new Map()"},{"id":1354,"name":"pl","kind":32,"kindString":"Variable","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/GIAttribs.ts","line":21,"character":10}],"type":{"type":"reference","name":"Map","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"reference","name":"GIAttribMap","id":18}]},"defaultValue":" new Map()"},{"id":1348,"name":"ps","kind":32,"kindString":"Variable","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/GIAttribs.ts","line":15,"character":10}],"type":{"type":"reference","name":"Map","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"reference","name":"GIAttribMap","id":18}]},"defaultValue":" new Map()"},{"id":1353,"name":"pt","kind":32,"kindString":"Variable","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/GIAttribs.ts","line":20,"character":10}],"type":{"type":"reference","name":"Map","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"reference","name":"GIAttribMap","id":18}]},"defaultValue":" new Map()"}],"groups":[{"title":"Variables","kind":32,"children":[1350,1352,1349,1351,1356,1357,1355,1354,1348,1353]}],"sources":[{"fileName":"libs/geo-info/GIAttribs.ts","line":14,"character":24}],"type":{"type":"intrinsic","name":"object"}}],"groups":[{"title":"Constructors","kind":512,"children":[1362]},{"title":"Properties","kind":1024,"children":[1346,1359,1358,1360,1361]},{"title":"Object literals","kind":2097152,"children":[1347]}],"sources":[{"fileName":"libs/geo-info/GIAttribs.ts","line":11,"character":22}]}],"groups":[{"title":"Classes","kind":128,"children":[1345]}],"sources":[{"fileName":"libs/geo-info/GIAttribs.ts","line":1,"character":0}]},{"id":1101,"name":"\"libs/geo-info/GIAttribsAdd\"","kind":1,"kindString":"External module","flags":{"isExported":true,"isExternal":true},"originalName":"C:/Dropbox/Files/Software/GitHub/design-automation/mobius-parametric-modeller/src/assets/libs/geo-info/GIAttribsAdd.ts","children":[{"id":1102,"name":"GIAttribsAdd","kind":128,"kindString":"Class","flags":{"isExported":true,"isExternal":true},"comment":{"shortText":"Class for attributes."},"children":[{"id":1105,"name":"constructor","kind":512,"kindString":"Constructor","flags":{"isExported":true,"isExternal":true},"comment":{"shortText":"Creates an object to store the attribute data."},"signatures":[{"id":1106,"name":"new GIAttribsAdd","kind":16384,"kindString":"Constructor signature","flags":{},"comment":{"shortText":"Creates an object to store the attribute data."},"parameters":[{"id":1107,"name":"model","kind":32768,"kindString":"Parameter","flags":{},"comment":{"shortText":"The JSON data\n"},"type":{"type":"reference","name":"GIModel","id":1393}},{"id":1108,"name":"attribs_maps","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"IAttribsMaps","id":160}}],"type":{"type":"reference","name":"GIAttribsAdd","id":1102}}],"sources":[{"fileName":"libs/geo-info/GIAttribsAdd.ts","line":13,"character":40}]},{"id":1104,"name":"_attribs_maps","kind":1024,"kindString":"Property","flags":{"isPrivate":true,"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/GIAttribsAdd.ts","line":13,"character":25}],"type":{"type":"reference","name":"IAttribsMaps","id":160}},{"id":1103,"name":"_model","kind":1024,"kindString":"Property","flags":{"isPrivate":true,"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/GIAttribsAdd.ts","line":12,"character":18}],"type":{"type":"reference","name":"GIModel","id":1393}},{"id":1167,"name":"_aggregateValues","kind":2048,"kindString":"Method","flags":{"isPrivate":true,"isExported":true,"isExternal":true},"signatures":[{"id":1168,"name":"_aggregateValues","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1169,"name":"values","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"array","elementType":{"type":"reference","name":"TAttribDataTypes","id":291}}},{"id":1170,"name":"data_size","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":1171,"name":"method","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"EAttribPromote","id":196}}],"type":{"type":"reference","name":"TAttribDataTypes","id":291}}],"sources":[{"fileName":"libs/geo-info/GIAttribsAdd.ts","line":218,"character":28}]},{"id":1172,"name":"_checkDataTypeSize","kind":2048,"kindString":"Method","flags":{"isPrivate":true,"isExported":true,"isExternal":true},"signatures":[{"id":1173,"name":"_checkDataTypeSize","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Utility method to check the data type and size of a value"},"parameters":[{"id":1174,"name":"value","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"\n"},"type":{"type":"reference","name":"TAttribDataTypes","id":291}}],"type":{"type":"tuple","elements":[{"type":"reference","name":"EAttribDataTypeStrs","id":231},{"type":"intrinsic","name":"number"}]}}],"sources":[{"fileName":"libs/geo-info/GIAttribsAdd.ts","line":280,"character":30}]},{"id":1109,"name":"addAttrib","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":1110,"name":"addAttrib","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Creates a new attribte.\nIf the attribute already exists, then the existing attribute is returned."},"parameters":[{"id":1111,"name":"ent_type","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"The level at which to create the attribute."},"type":{"type":"reference","name":"EEntType","id":125}},{"id":1112,"name":"name","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"The name of the attribute."},"type":{"type":"intrinsic","name":"string"}},{"id":1113,"name":"data_type","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"The data type of the attribute."},"type":{"type":"reference","name":"EAttribDataTypeStrs","id":231}},{"id":1114,"name":"data_size","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"The data size of the attribute. For example, an XYZ vector has size=3.\n"},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","name":"GIAttribMap","id":18}}],"sources":[{"fileName":"libs/geo-info/GIAttribsAdd.ts","line":31,"character":20}]},{"id":1149,"name":"copyAttribs","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":1150,"name":"copyAttribs","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Copy all attribs from one entity to another entity"},"parameters":[{"id":1151,"name":"ent_type","kind":32768,"kindString":"Parameter","flags":{},"comment":{},"type":{"type":"reference","name":"EEntType","id":125}},{"id":1152,"name":"from_ent_i","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":1153,"name":"to_ent_i","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"libs/geo-info/GIAttribsAdd.ts","line":140,"character":22}]},{"id":1137,"name":"delEntFromAttribs","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":1138,"name":"delEntFromAttribs","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Delete the entity from an attribute\nIf there is no value for the entity, then this does nothing\nIf there is a value, then both the entity index and the value are deleted"},"parameters":[{"id":1139,"name":"ent_type","kind":32768,"kindString":"Parameter","flags":{},"comment":{},"type":{"type":"reference","name":"EEntType","id":125}},{"id":1140,"name":"ents_i","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"union","types":[{"type":"intrinsic","name":"number"},{"type":"array","elementType":{"type":"intrinsic","name":"number"}}]}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"libs/geo-info/GIAttribsAdd.ts","line":111,"character":28}]},{"id":1145,"name":"movePosiCoords","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":1146,"name":"movePosiCoords","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Move the xyz position by index"},"parameters":[{"id":1147,"name":"index","kind":32768,"kindString":"Parameter","flags":{},"comment":{},"type":{"type":"intrinsic","name":"number"}},{"id":1148,"name":"xyz","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Txyz","id":279}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"libs/geo-info/GIAttribsAdd.ts","line":130,"character":25}]},{"id":1154,"name":"promoteAttribValues","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":1155,"name":"promoteAttribValues","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Promotes attrib values up and down the hierarchy."},"parameters":[{"id":1156,"name":"ent_type","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"EEntType","id":125}},{"id":1157,"name":"attrib_name","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":1158,"name":"indices","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}},{"id":1159,"name":"to_ent_type","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"EEntType","id":125}},{"id":1160,"name":"method","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"EAttribPromote","id":196}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"libs/geo-info/GIAttribsAdd.ts","line":155,"character":30}]},{"id":1130,"name":"setAttribIndexedValue","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":1131,"name":"setAttribIndexedValue","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Set an entity attrib indexed value.\nIf the attribute does not exist, it throws an error."},"parameters":[{"id":1132,"name":"ent_type","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"EEntType","id":125}},{"id":1133,"name":"ents_i","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"union","types":[{"type":"intrinsic","name":"number"},{"type":"array","elementType":{"type":"intrinsic","name":"number"}}]}},{"id":1134,"name":"name","kind":32768,"kindString":"Parameter","flags":{},"comment":{},"type":{"type":"intrinsic","name":"string"}},{"id":1135,"name":"value_index","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":1136,"name":"value","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"\n"},"type":{"type":"union","types":[{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"string"}]}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"libs/geo-info/GIAttribsAdd.ts","line":94,"character":32}]},{"id":1124,"name":"setAttribValue","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":1125,"name":"setAttribValue","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Set an entity attrib value\nIf the attribute does not exist, then it is created."},"parameters":[{"id":1126,"name":"ent_type","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"EEntType","id":125}},{"id":1127,"name":"ents_i","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"union","types":[{"type":"intrinsic","name":"number"},{"type":"array","elementType":{"type":"intrinsic","name":"number"}}]}},{"id":1128,"name":"name","kind":32768,"kindString":"Parameter","flags":{},"comment":{},"type":{"type":"intrinsic","name":"string"}},{"id":1129,"name":"value","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"\n"},"type":{"type":"reference","name":"TAttribDataTypes","id":291}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"libs/geo-info/GIAttribsAdd.ts","line":78,"character":25}]},{"id":1119,"name":"setModelAttribIndexedValue","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":1120,"name":"setModelAttribIndexedValue","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Set a model attrib indexed value.\nIf the attribute does not exist, it throws an error."},"parameters":[{"id":1121,"name":"name","kind":32768,"kindString":"Parameter","flags":{},"comment":{},"type":{"type":"intrinsic","name":"string"}},{"id":1122,"name":"value_index","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":1123,"name":"value","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"\n"},"type":{"type":"union","types":[{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"string"}]}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"libs/geo-info/GIAttribsAdd.ts","line":62,"character":37}]},{"id":1115,"name":"setModelAttribValue","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":1116,"name":"setModelAttribValue","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Set a model attrib value"},"parameters":[{"id":1117,"name":"name","kind":32768,"kindString":"Parameter","flags":{},"comment":{},"type":{"type":"intrinsic","name":"string"}},{"id":1118,"name":"value","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"\n"},"type":{"type":"reference","name":"TAttribDataTypes","id":291}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"libs/geo-info/GIAttribsAdd.ts","line":50,"character":30}]},{"id":1141,"name":"setPosiCoords","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":1142,"name":"setPosiCoords","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Set the xyz position by index"},"parameters":[{"id":1143,"name":"index","kind":32768,"kindString":"Parameter","flags":{},"comment":{},"type":{"type":"intrinsic","name":"number"}},{"id":1144,"name":"xyz","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Txyz","id":279}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"libs/geo-info/GIAttribsAdd.ts","line":122,"character":24}]},{"id":1161,"name":"transferAttribValues","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":1162,"name":"transferAttribValues","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Transfer attrib values to neighbouring entities of the same type.\nNeighbouring entities are those that share the same positions."},"parameters":[{"id":1163,"name":"ent_type","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"EEntType","id":125}},{"id":1164,"name":"attrib_name","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":1165,"name":"indices","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}},{"id":1166,"name":"method","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"libs/geo-info/GIAttribsAdd.ts","line":212,"character":31}]}],"groups":[{"title":"Constructors","kind":512,"children":[1105]},{"title":"Properties","kind":1024,"children":[1104,1103]},{"title":"Methods","kind":2048,"children":[1167,1172,1109,1149,1137,1145,1154,1130,1124,1119,1115,1141,1161]}],"sources":[{"fileName":"libs/geo-info/GIAttribsAdd.ts","line":11,"character":25}]}],"groups":[{"title":"Classes","kind":128,"children":[1102]}],"sources":[{"fileName":"libs/geo-info/GIAttribsAdd.ts","line":1,"character":0}]},{"id":1314,"name":"\"libs/geo-info/GIAttribsIO\"","kind":1,"kindString":"External module","flags":{"isExported":true,"isExternal":true},"originalName":"C:/Dropbox/Files/Software/GitHub/design-automation/mobius-parametric-modeller/src/assets/libs/geo-info/GIAttribsIO.ts","children":[{"id":1315,"name":"GIAttribsIO","kind":128,"kindString":"Class","flags":{"isExported":true,"isExternal":true},"comment":{"shortText":"Class for attributes."},"children":[{"id":1318,"name":"constructor","kind":512,"kindString":"Constructor","flags":{"isExported":true,"isExternal":true},"comment":{"shortText":"Creates an object to store the attribute data."},"signatures":[{"id":1319,"name":"new GIAttribsIO","kind":16384,"kindString":"Constructor signature","flags":{},"comment":{"shortText":"Creates an object to store the attribute data."},"parameters":[{"id":1320,"name":"model","kind":32768,"kindString":"Parameter","flags":{},"comment":{"shortText":"The JSON data\n"},"type":{"type":"reference","name":"GIModel","id":1393}},{"id":1321,"name":"attribs_maps","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"IAttribsMaps","id":160}}],"type":{"type":"reference","name":"GIAttribsIO","id":1315}}],"sources":[{"fileName":"libs/geo-info/GIAttribsIO.ts","line":10,"character":40}]},{"id":1317,"name":"_attribs_maps","kind":1024,"kindString":"Property","flags":{"isPrivate":true,"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/GIAttribsIO.ts","line":10,"character":25}],"type":{"type":"reference","name":"IAttribsMaps","id":160}},{"id":1316,"name":"_model","kind":1024,"kindString":"Property","flags":{"isPrivate":true,"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/GIAttribsIO.ts","line":9,"character":18}],"type":{"type":"reference","name":"GIModel","id":1393}},{"id":1336,"name":"_mergeAttribs","kind":2048,"kindString":"Method","flags":{"isPrivate":true,"isExported":true,"isExternal":true},"signatures":[{"id":1337,"name":"_mergeAttribs","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"From another model\nThe existing attributes are not deleted"},"parameters":[{"id":1338,"name":"attribs_maps","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"\n"},"type":{"type":"reference","name":"IAttribsMaps","id":160}},{"id":1339,"name":"ent_type","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"EEntType","id":125}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"libs/geo-info/GIAttribsIO.ts","line":120,"character":25}]},{"id":1330,"name":"_mergeModelAttribs","kind":2048,"kindString":"Method","flags":{"isPrivate":true,"isExported":true,"isExternal":true},"signatures":[{"id":1331,"name":"_mergeModelAttribs","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"From another model\nThe existing attributes are not deleted"},"parameters":[{"id":1332,"name":"attribs_maps","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"\n"},"type":{"type":"reference","name":"IAttribsMaps","id":160}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"libs/geo-info/GIAttribsIO.ts","line":100,"character":30}]},{"id":1340,"name":"_setAttribs","kind":2048,"kindString":"Method","flags":{"isPrivate":true,"isExported":true,"isExternal":true},"signatures":[{"id":1341,"name":"_setAttribs","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"From JSON data\nExisting attributes are deleted"},"parameters":[{"id":1342,"name":"new_attribs_data","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"\n"},"type":{"type":"array","elementType":{"type":"reference","name":"IAttribData","id":245}}},{"id":1343,"name":"ent_type","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"EEntType","id":125}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"libs/geo-info/GIAttribsIO.ts","line":146,"character":23}]},{"id":1333,"name":"_setModelAttribs","kind":2048,"kindString":"Method","flags":{"isPrivate":true,"isExported":true,"isExternal":true},"signatures":[{"id":1334,"name":"_setModelAttribs","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"From JSON data\nExisting attributes are deleted"},"parameters":[{"id":1335,"name":"new_attribs_data","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"\n"},"type":{"type":"reference","name":"TModelAttribValuesArr","id":293}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"libs/geo-info/GIAttribsIO.ts","line":112,"character":28}]},{"id":1328,"name":"getData","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":1329,"name":"getData","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Returns the JSON data for this model."},"type":{"type":"reference","name":"IAttribsData","id":250}}],"sources":[{"fileName":"libs/geo-info/GIAttribsIO.ts","line":78,"character":18}]},{"id":1322,"name":"merge","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":1323,"name":"merge","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Adds data to this model from JSON data.\nThe existing data in the model is not deleted."},"parameters":[{"id":1324,"name":"attribs_maps","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"IAttribsMaps","id":160}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"libs/geo-info/GIAttribsIO.ts","line":24,"character":16}]},{"id":1325,"name":"setData","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":1326,"name":"setData","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Adds data to this model from JSON data.\nThe existing data in the model is not deleted."},"parameters":[{"id":1327,"name":"attribs_data","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"IAttribsData","id":250}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"libs/geo-info/GIAttribsIO.ts","line":42,"character":18}]}],"groups":[{"title":"Constructors","kind":512,"children":[1318]},{"title":"Properties","kind":1024,"children":[1317,1316]},{"title":"Methods","kind":2048,"children":[1336,1330,1340,1333,1328,1322,1325]}],"sources":[{"fileName":"libs/geo-info/GIAttribsIO.ts","line":8,"character":24}]}],"groups":[{"title":"Classes","kind":128,"children":[1315]}],"sources":[{"fileName":"libs/geo-info/GIAttribsIO.ts","line":1,"character":0}]},{"id":1231,"name":"\"libs/geo-info/GIAttribsQuery\"","kind":1,"kindString":"External module","flags":{"isExported":true,"isExternal":true},"originalName":"C:/Dropbox/Files/Software/GitHub/design-automation/mobius-parametric-modeller/src/assets/libs/geo-info/GIAttribsQuery.ts","children":[{"id":1232,"name":"GIAttribsQuery","kind":128,"kindString":"Class","flags":{"isExported":true,"isExternal":true},"comment":{"shortText":"Class for attributes."},"children":[{"id":1235,"name":"constructor","kind":512,"kindString":"Constructor","flags":{"isExported":true,"isExternal":true},"comment":{"shortText":"Creates an object to store the attribute data."},"signatures":[{"id":1236,"name":"new GIAttribsQuery","kind":16384,"kindString":"Constructor signature","flags":{},"comment":{"shortText":"Creates an object to store the attribute data."},"parameters":[{"id":1237,"name":"model","kind":32768,"kindString":"Parameter","flags":{},"comment":{"shortText":"The JSON data\n"},"type":{"type":"reference","name":"GIModel","id":1393}},{"id":1238,"name":"attribs_maps","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"IAttribsMaps","id":160}}],"type":{"type":"reference","name":"GIAttribsQuery","id":1232}}],"sources":[{"fileName":"libs/geo-info/GIAttribsQuery.ts","line":12,"character":40}]},{"id":1234,"name":"_attribs_maps","kind":1024,"kindString":"Property","flags":{"isPrivate":true,"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/GIAttribsQuery.ts","line":12,"character":25}],"type":{"type":"reference","name":"IAttribsMaps","id":160}},{"id":1233,"name":"_model","kind":1024,"kindString":"Property","flags":{"isPrivate":true,"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/GIAttribsQuery.ts","line":11,"character":18}],"type":{"type":"reference","name":"GIModel","id":1393}},{"id":1275,"name":"getAttrib","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":1276,"name":"getAttrib","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Get attrib"},"parameters":[{"id":1277,"name":"ent_type","kind":32768,"kindString":"Parameter","flags":{},"comment":{},"type":{"type":"reference","name":"EEntType","id":125}},{"id":1278,"name":"name","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"\n"},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","name":"GIAttribMap","id":18}}],"sources":[{"fileName":"libs/geo-info/GIAttribsQuery.ts","line":152,"character":20}]},{"id":1246,"name":"getAttribDataSize","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":1247,"name":"getAttribDataSize","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Get attrib data size. Also works for MOD attribs."},"parameters":[{"id":1248,"name":"ent_type","kind":32768,"kindString":"Parameter","flags":{},"comment":{},"type":{"type":"reference","name":"EEntType","id":125}},{"id":1249,"name":"name","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"\n"},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"number"}}],"sources":[{"fileName":"libs/geo-info/GIAttribsQuery.ts","line":62,"character":28}]},{"id":1242,"name":"getAttribDataType","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":1243,"name":"getAttribDataType","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Get attrib data type. Also works for MOD attribs."},"parameters":[{"id":1244,"name":"ent_type","kind":32768,"kindString":"Parameter","flags":{},"comment":{},"type":{"type":"reference","name":"EEntType","id":125}},{"id":1245,"name":"name","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"\n"},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","name":"EAttribDataTypeStrs","id":231}}],"sources":[{"fileName":"libs/geo-info/GIAttribsQuery.ts","line":36,"character":28}]},{"id":1262,"name":"getAttribIndexedValue","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":1263,"name":"getAttribIndexedValue","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Get an entity attrib indexed value"},"parameters":[{"id":1264,"name":"ent_type","kind":32768,"kindString":"Parameter","flags":{},"comment":{},"type":{"type":"reference","name":"EEntType","id":125}},{"id":1265,"name":"name","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"\n"},"type":{"type":"intrinsic","name":"string"}},{"id":1266,"name":"ents_i","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":1267,"name":"value_index","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"union","types":[{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"string"}]}}],"sources":[{"fileName":"libs/geo-info/GIAttribsQuery.ts","line":119,"character":32}]},{"id":1272,"name":"getAttribNames","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":1273,"name":"getAttribNames","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Get all the attribute names for an entity type"},"parameters":[{"id":1274,"name":"ent_type","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"\n"},"type":{"type":"reference","name":"EEntType","id":125}}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}}],"sources":[{"fileName":"libs/geo-info/GIAttribsQuery.ts","line":142,"character":25}]},{"id":1257,"name":"getAttribValue","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":1258,"name":"getAttribValue","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Get an entity attrib value"},"parameters":[{"id":1259,"name":"ent_type","kind":32768,"kindString":"Parameter","flags":{},"comment":{},"type":{"type":"reference","name":"EEntType","id":125}},{"id":1260,"name":"name","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"\n"},"type":{"type":"intrinsic","name":"string"}},{"id":1261,"name":"ents_i","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"union","types":[{"type":"intrinsic","name":"number"},{"type":"array","elementType":{"type":"intrinsic","name":"number"}}]}}],"type":{"type":"union","types":[{"type":"reference","name":"TAttribDataTypes","id":291},{"type":"array","elementType":{"type":"reference","name":"TAttribDataTypes","id":291}}]}}],"sources":[{"fileName":"libs/geo-info/GIAttribsQuery.ts","line":108,"character":25}]},{"id":1253,"name":"getModelAttribIndexedValue","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":1254,"name":"getModelAttribIndexedValue","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Get a model attrib indexed value"},"parameters":[{"id":1255,"name":"name","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"\n"},"type":{"type":"intrinsic","name":"string"}},{"id":1256,"name":"value_index","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"union","types":[{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"string"}]}}],"sources":[{"fileName":"libs/geo-info/GIAttribsQuery.ts","line":94,"character":37}]},{"id":1250,"name":"getModelAttribValue","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":1251,"name":"getModelAttribValue","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Get a model attrib value"},"parameters":[{"id":1252,"name":"name","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"\n"},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","name":"TAttribDataTypes","id":291}}],"sources":[{"fileName":"libs/geo-info/GIAttribsQuery.ts","line":83,"character":30}]},{"id":1290,"name":"getPosiCoords","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":1291,"name":"getPosiCoords","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Shortcut for getting a coordinate from a numeric position index (i.e. this is not an ID)"},"parameters":[{"id":1292,"name":"posi_i","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"\n"},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","name":"Txyz","id":279}}],"sources":[{"fileName":"libs/geo-info/GIAttribsQuery.ts","line":263,"character":24}]},{"id":1293,"name":"getVertCoords","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":1294,"name":"getVertCoords","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Shortcut for getting a coordinate from a numeric vertex index (i.e. this is not an ID)"},"parameters":[{"id":1295,"name":"vert_i","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"\n"},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","name":"Txyz","id":279}}],"sources":[{"fileName":"libs/geo-info/GIAttribsQuery.ts","line":280,"character":24}]},{"id":1268,"name":"hasAttrib","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":1269,"name":"hasAttrib","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Check if attribute exists"},"parameters":[{"id":1270,"name":"ent_type","kind":32768,"kindString":"Parameter","flags":{},"comment":{},"type":{"type":"reference","name":"EEntType","id":125}},{"id":1271,"name":"name","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"\n"},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"boolean"}}],"sources":[{"fileName":"libs/geo-info/GIAttribsQuery.ts","line":133,"character":20}]},{"id":1239,"name":"hasModelAttrib","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":1240,"name":"hasModelAttrib","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Checks if an attribute with this name exists."},"parameters":[{"id":1241,"name":"name","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"\n"},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"boolean"}}],"sources":[{"fileName":"libs/geo-info/GIAttribsQuery.ts","line":25,"character":25}]},{"id":1279,"name":"queryAttribs","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":1280,"name":"queryAttribs","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Query the model using a query strings.\nReturns a list of entities in the model."},"parameters":[{"id":1281,"name":"ent_type","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"The type of the entities being search for"},"type":{"type":"reference","name":"EEntType","id":125}},{"id":1282,"name":"query_str","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"The query string, e.g. '#@name == value'"},"type":{"type":"intrinsic","name":"string"}},{"id":1283,"name":"indices","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"The indices of entites in the model. These are assumed to be of type ent_type.\n"},"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}}],"sources":[{"fileName":"libs/geo-info/GIAttribsQuery.ts","line":164,"character":23}]},{"id":1284,"name":"sortByAttribs","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":1285,"name":"sortByAttribs","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Query the model using a sort strings.\nReturns a list of entities in the model."},"parameters":[{"id":1286,"name":"ent_type","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"The type of the entities being search for"},"type":{"type":"reference","name":"EEntType","id":125}},{"id":1287,"name":"indices","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"The indices of entites in the model. These are assumed to be of type ent_type.\n"},"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}},{"id":1288,"name":"sort_str","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"The sort string, e.g. '#@name && #@name2[3]'"},"type":{"type":"intrinsic","name":"string"}},{"id":1289,"name":"method","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"ESort","id":193}}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}}],"sources":[{"fileName":"libs/geo-info/GIAttribsQuery.ts","line":212,"character":24}]}],"groups":[{"title":"Constructors","kind":512,"children":[1235]},{"title":"Properties","kind":1024,"children":[1234,1233]},{"title":"Methods","kind":2048,"children":[1275,1246,1242,1262,1272,1257,1253,1250,1290,1293,1268,1239,1279,1284]}],"sources":[{"fileName":"libs/geo-info/GIAttribsQuery.ts","line":10,"character":27}]},{"id":1311,"name":"_parse_name_str","kind":64,"kindString":"Function","flags":{"isExternal":true},"signatures":[{"id":1312,"name":"_parse_name_str","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Parese the attribute name. Handles names with indexes, e.g. 'name[2]'\nSplit the name into the string name and the numeric index"},"parameters":[{"id":1313,"name":"value_str","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"tuple","elements":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"}]}}],"sources":[{"fileName":"libs/geo-info/GIAttribsQuery.ts","line":400,"character":24}]},{"id":1299,"name":"_parse_query_component","kind":64,"kindString":"Function","flags":{"isExternal":true},"signatures":[{"id":1300,"name":"_parse_query_component","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Parse a query component string."},"parameters":[{"id":1301,"name":"query_component","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","name":"IQueryComponent","id":185}}],"sources":[{"fileName":"libs/geo-info/GIAttribsQuery.ts","line":317,"character":31}]},{"id":1305,"name":"_parse_sort_component","kind":64,"kindString":"Function","flags":{"isExternal":true},"signatures":[{"id":1306,"name":"_parse_sort_component","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Parse a query component string."},"parameters":[{"id":1307,"name":"sort_component","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","name":"ISortComponent","id":190}}],"sources":[{"fileName":"libs/geo-info/GIAttribsQuery.ts","line":371,"character":30}]},{"id":1308,"name":"_parse_value_str","kind":64,"kindString":"Function","flags":{"isExternal":true},"signatures":[{"id":1309,"name":"_parse_value_str","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Parse the attribute value. Handles sting with quotes, e.g. 'this' and \"that\".\nRemove quotes from value string"},"parameters":[{"id":1310,"name":"value_str","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"string"}}],"sources":[{"fileName":"libs/geo-info/GIAttribsQuery.ts","line":391,"character":25}]},{"id":1296,"name":"parseQuery","kind":64,"kindString":"Function","flags":{"isExternal":true},"signatures":[{"id":1297,"name":"parseQuery","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Parse a query string.\n&& takes precedence over ||\n[ [ query1 && query2 ] || [ query3 && query4 ] ]"},"parameters":[{"id":1298,"name":"query_str","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"array","elementType":{"type":"array","elementType":{"type":"reference","name":"IQueryComponent","id":185}}}}],"sources":[{"fileName":"libs/geo-info/GIAttribsQuery.ts","line":303,"character":19}]},{"id":1302,"name":"parseSort","kind":64,"kindString":"Function","flags":{"isExternal":true},"signatures":[{"id":1303,"name":"parseSort","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Parse a sort string. #@name1 && #@name2\nRerurns an array,[ query1, query2 ]"},"parameters":[{"id":1304,"name":"sort_str","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"array","elementType":{"type":"reference","name":"ISortComponent","id":190}}}],"sources":[{"fileName":"libs/geo-info/GIAttribsQuery.ts","line":356,"character":18}]}],"groups":[{"title":"Classes","kind":128,"children":[1232]},{"title":"Functions","kind":64,"children":[1311,1299,1305,1308,1296,1302]}],"sources":[{"fileName":"libs/geo-info/GIAttribsQuery.ts","line":1,"character":0}]},{"id":1179,"name":"\"libs/geo-info/GIAttribsThreejs\"","kind":1,"kindString":"External module","flags":{"isExported":true,"isExternal":true},"originalName":"C:/Dropbox/Files/Software/GitHub/design-automation/mobius-parametric-modeller/src/assets/libs/geo-info/GIAttribsThreejs.ts","children":[{"id":1180,"name":"GIAttribsThreejs","kind":128,"kindString":"Class","flags":{"isExported":true,"isExternal":true},"comment":{"shortText":"Class for attributes."},"children":[{"id":1183,"name":"constructor","kind":512,"kindString":"Constructor","flags":{"isExported":true,"isExternal":true},"comment":{"shortText":"Creates an object to store the attribute data."},"signatures":[{"id":1184,"name":"new GIAttribsThreejs","kind":16384,"kindString":"Constructor signature","flags":{},"comment":{"shortText":"Creates an object to store the attribute data."},"parameters":[{"id":1185,"name":"model","kind":32768,"kindString":"Parameter","flags":{},"comment":{"shortText":"The JSON data\n"},"type":{"type":"reference","name":"GIModel","id":1393}},{"id":1186,"name":"attribs_maps","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"IAttribsMaps","id":160}}],"type":{"type":"reference","name":"GIAttribsThreejs","id":1180}}],"sources":[{"fileName":"libs/geo-info/GIAttribsThreejs.ts","line":12,"character":40}]},{"id":1182,"name":"_attribs_maps","kind":1024,"kindString":"Property","flags":{"isPrivate":true,"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/GIAttribsThreejs.ts","line":12,"character":25}],"type":{"type":"reference","name":"IAttribsMaps","id":160}},{"id":1181,"name":"_model","kind":1024,"kindString":"Property","flags":{"isPrivate":true,"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/GIAttribsThreejs.ts","line":11,"character":18}],"type":{"type":"reference","name":"GIModel","id":1393}},{"id":1187,"name":"get3jsSeqPosisCoords","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":1188,"name":"get3jsSeqPosisCoords","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Get a flat array of all the coordinates of all the vertices.\nVerts that have been deleted will not be included"},"type":{"type":"tuple","elements":[{"type":"array","elementType":{"type":"intrinsic","name":"number"}},{"type":"reference","name":"Map","typeArguments":[{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"number"}]}]}}],"sources":[{"fileName":"libs/geo-info/GIAttribsThreejs.ts","line":31,"character":31}]},{"id":1191,"name":"get3jsSeqVertsAttrib","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":1192,"name":"get3jsSeqVertsAttrib","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Get a flat array of attribute values for all the vertices.\nVerts that have been deleted will not be included"},"parameters":[{"id":1193,"name":"attrib_name","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"The name of the vertex attribute. Either NORMAL or COLOR.\n"},"type":{"type":"reference","name":"EAttribNames","id":171}}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}}],"sources":[{"fileName":"libs/geo-info/GIAttribsThreejs.ts","line":72,"character":31}]},{"id":1189,"name":"get3jsSeqVertsCoords","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":1190,"name":"get3jsSeqVertsCoords","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Get a flat array of all the coordinates of all the vertices.\nVerts that have been deleted will not be included"},"type":{"type":"tuple","elements":[{"type":"array","elementType":{"type":"intrinsic","name":"number"}},{"type":"reference","name":"Map","typeArguments":[{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"number"}]}]}}],"sources":[{"fileName":"libs/geo-info/GIAttribsThreejs.ts","line":51,"character":31}]},{"id":1196,"name":"getAttribsForTable","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":1197,"name":"getAttribsForTable","kind":4096,"kindString":"Call signature","flags":{},"comment":{},"parameters":[{"id":1198,"name":"ent_type","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"\n"},"type":{"type":"reference","name":"EEntType","id":125}}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"sources":[{"fileName":"libs/geo-info/GIAttribsThreejs.ts","line":113,"character":29}]},{"id":1199,"name":"getEntsVals","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":1200,"name":"getEntsVals","kind":4096,"kindString":"Call signature","flags":{},"comment":{},"parameters":[{"id":1201,"name":"selected_ents","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Map","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"}]}},{"id":1202,"name":"ent_type","kind":32768,"kindString":"Parameter","flags":{},"comment":{},"type":{"type":"reference","name":"EEntType","id":125}}],"type":{"type":"array","elementType":{"type":"reflection","declaration":{"id":1203,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":1204,"name":"#","kind":32,"kindString":"Variable","flags":{"isExternal":true},"sources":[{"fileName":"libs/geo-info/GIAttribsThreejs.ts","line":163,"character":46}],"type":{"type":"intrinsic","name":"number"}},{"id":1205,"name":"_id","kind":32,"kindString":"Variable","flags":{"isExternal":true},"sources":[{"fileName":"libs/geo-info/GIAttribsThreejs.ts","line":163,"character":59}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Variables","kind":32,"children":[1204,1205]}]}}}}],"sources":[{"fileName":"libs/geo-info/GIAttribsThreejs.ts","line":160,"character":22}]},{"id":1206,"name":"getIdIndex","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":1207,"name":"getIdIndex","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1208,"name":"ent_type","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"EEntType","id":125}},{"id":1209,"name":"id","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"number"}}],"sources":[{"fileName":"libs/geo-info/GIAttribsThreejs.ts","line":202,"character":21}]},{"id":1194,"name":"getModelAttribsForTable","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":1195,"name":"getModelAttribsForTable","kind":4096,"kindString":"Call signature","flags":{},"comment":{},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"sources":[{"fileName":"libs/geo-info/GIAttribsThreejs.ts","line":95,"character":34}]}],"groups":[{"title":"Constructors","kind":512,"children":[1183]},{"title":"Properties","kind":1024,"children":[1182,1181]},{"title":"Methods","kind":2048,"children":[1187,1191,1189,1196,1199,1206,1194]}],"sources":[{"fileName":"libs/geo-info/GIAttribsThreejs.ts","line":10,"character":29}]}],"groups":[{"title":"Classes","kind":128,"children":[1180]}],"sources":[{"fileName":"libs/geo-info/GIAttribsThreejs.ts","line":1,"character":0}]},{"id":1051,"name":"\"libs/geo-info/GIGeom\"","kind":1,"kindString":"External module","flags":{"isExported":true,"isExternal":true},"originalName":"C:/Dropbox/Files/Software/GitHub/design-automation/mobius-parametric-modeller/src/assets/libs/geo-info/GIGeom.ts","children":[{"id":1052,"name":"GIGeom","kind":128,"kindString":"Class","flags":{"isExported":true,"isExternal":true},"comment":{"shortText":"Class for geometry."},"children":[{"id":1082,"name":"constructor","kind":512,"kindString":"Constructor","flags":{"isExported":true,"isExternal":true},"comment":{"shortText":"Creates an object to store the geometry data."},"signatures":[{"id":1083,"name":"new GIGeom","kind":16384,"kindString":"Constructor signature","flags":{},"comment":{"shortText":"Creates an object to store the geometry data."},"parameters":[{"id":1084,"name":"model","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"GIModel","id":1393}}],"type":{"type":"reference","name":"GIGeom","id":1052}}],"sources":[{"fileName":"libs/geo-info/GIGeom.ts","line":45,"character":34}]},{"id":1078,"name":"add","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true,"isPublic":true},"sources":[{"fileName":"libs/geo-info/GIGeom.ts","line":42,"character":14}],"type":{"type":"reference","name":"GIGeomAdd","id":499}},{"id":1077,"name":"io","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true,"isPublic":true},"sources":[{"fileName":"libs/geo-info/GIGeom.ts","line":41,"character":13}],"type":{"type":"reference","name":"GIGeomIO","id":1036}},{"id":1053,"name":"model","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true,"isPublic":true},"sources":[{"fileName":"libs/geo-info/GIGeom.ts","line":13,"character":16}],"type":{"type":"reference","name":"GIModel","id":1393}},{"id":1079,"name":"modify","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true,"isPublic":true},"sources":[{"fileName":"libs/geo-info/GIGeom.ts","line":43,"character":17}],"type":{"type":"reference","name":"GIGeomModify","id":660}},{"id":1080,"name":"query","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true,"isPublic":true},"sources":[{"fileName":"libs/geo-info/GIGeom.ts","line":44,"character":16}],"type":{"type":"reference","name":"GIGeomQuery","id":837}},{"id":1054,"name":"selected","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true,"isPublic":true},"sources":[{"fileName":"libs/geo-info/GIGeom.ts","line":14,"character":19}],"type":{"type":"array","elementType":{"type":"reference","name":"TEntTypeIdx","id":270}}},{"id":1081,"name":"threejs","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true,"isPublic":true},"sources":[{"fileName":"libs/geo-info/GIGeom.ts","line":45,"character":18}],"type":{"type":"reference","name":"GIGeomThreejs","id":1010}},{"id":1091,"name":"_checkEdges","kind":2048,"kindString":"Method","flags":{"isPrivate":true,"isExported":true,"isExternal":true},"signatures":[{"id":1092,"name":"_checkEdges","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}}],"sources":[{"fileName":"libs/geo-info/GIGeom.ts","line":128,"character":23}]},{"id":1095,"name":"_checkFaces","kind":2048,"kindString":"Method","flags":{"isPrivate":true,"isExported":true,"isExternal":true},"signatures":[{"id":1096,"name":"_checkFaces","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}}],"sources":[{"fileName":"libs/geo-info/GIGeom.ts","line":179,"character":23}]},{"id":1099,"name":"_checkPgons","kind":2048,"kindString":"Method","flags":{"isPrivate":true,"isExported":true,"isExternal":true},"signatures":[{"id":1100,"name":"_checkPgons","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}}],"sources":[{"fileName":"libs/geo-info/GIGeom.ts","line":229,"character":23}]},{"id":1097,"name":"_checkPlines","kind":2048,"kindString":"Method","flags":{"isPrivate":true,"isExported":true,"isExternal":true},"signatures":[{"id":1098,"name":"_checkPlines","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}}],"sources":[{"fileName":"libs/geo-info/GIGeom.ts","line":201,"character":24}]},{"id":1087,"name":"_checkPosis","kind":2048,"kindString":"Method","flags":{"isPrivate":true,"isExported":true,"isExternal":true},"signatures":[{"id":1088,"name":"_checkPosis","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Checks geometry for internal consistency"},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}}],"sources":[{"fileName":"libs/geo-info/GIGeom.ts","line":76,"character":23}]},{"id":1089,"name":"_checkVerts","kind":2048,"kindString":"Method","flags":{"isPrivate":true,"isExported":true,"isExternal":true},"signatures":[{"id":1090,"name":"_checkVerts","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}}],"sources":[{"fileName":"libs/geo-info/GIGeom.ts","line":92,"character":23}]},{"id":1093,"name":"_checkWires","kind":2048,"kindString":"Method","flags":{"isPrivate":true,"isExported":true,"isExternal":true},"signatures":[{"id":1094,"name":"_checkWires","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}}],"sources":[{"fileName":"libs/geo-info/GIGeom.ts","line":146,"character":23}]},{"id":1085,"name":"check","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":1086,"name":"check","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Checks geometry for internal consistency"},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}}],"sources":[{"fileName":"libs/geo-info/GIGeom.ts","line":62,"character":16}]},{"id":1055,"name":"_geom_arrays","kind":2097152,"kindString":"Object literal","flags":{"isExported":true,"isExternal":true,"isPublic":true},"children":[{"id":1064,"name":"dn_colls_objs","kind":32,"kindString":"Variable","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/GIGeom.ts","line":26,"character":21}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"undefined"}},"defaultValue":" []"},{"id":1058,"name":"dn_edges_verts","kind":32,"kindString":"Variable","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/GIGeom.ts","line":20,"character":22}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"undefined"}},"defaultValue":" []"},{"id":1060,"name":"dn_faces_wirestris","kind":32,"kindString":"Variable","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/GIGeom.ts","line":22,"character":26}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"undefined"}},"defaultValue":" []"},{"id":1063,"name":"dn_pgons_faces","kind":32,"kindString":"Variable","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/GIGeom.ts","line":25,"character":22}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"undefined"}},"defaultValue":" []"},{"id":1062,"name":"dn_plines_wires","kind":32,"kindString":"Variable","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/GIGeom.ts","line":24,"character":23}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"undefined"}},"defaultValue":" []"},{"id":1061,"name":"dn_points_verts","kind":32,"kindString":"Variable","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/GIGeom.ts","line":23,"character":23}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"undefined"}},"defaultValue":" []"},{"id":1057,"name":"dn_tris_verts","kind":32,"kindString":"Variable","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/GIGeom.ts","line":19,"character":21}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"undefined"}},"defaultValue":" []"},{"id":1056,"name":"dn_verts_posis","kind":32,"kindString":"Variable","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/GIGeom.ts","line":18,"character":22}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"undefined"}},"defaultValue":" []"},{"id":1059,"name":"dn_wires_edges","kind":32,"kindString":"Variable","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/GIGeom.ts","line":21,"character":22}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"undefined"}},"defaultValue":" []"},{"id":1070,"name":"up_edges_wires","kind":32,"kindString":"Variable","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/GIGeom.ts","line":32,"character":22}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"undefined"}},"defaultValue":" []"},{"id":1073,"name":"up_faces_pgons","kind":32,"kindString":"Variable","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/GIGeom.ts","line":35,"character":22}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"undefined"}},"defaultValue":" []"},{"id":1076,"name":"up_pgons_colls","kind":32,"kindString":"Variable","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/GIGeom.ts","line":38,"character":22}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"undefined"}},"defaultValue":" []"},{"id":1075,"name":"up_plines_colls","kind":32,"kindString":"Variable","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/GIGeom.ts","line":37,"character":23}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"undefined"}},"defaultValue":" []"},{"id":1074,"name":"up_points_colls","kind":32,"kindString":"Variable","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/GIGeom.ts","line":36,"character":23}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"undefined"}},"defaultValue":" []"},{"id":1065,"name":"up_posis_verts","kind":32,"kindString":"Variable","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/GIGeom.ts","line":27,"character":22}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"undefined"}},"defaultValue":" []"},{"id":1066,"name":"up_tris_faces","kind":32,"kindString":"Variable","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/GIGeom.ts","line":28,"character":21}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"undefined"}},"defaultValue":" []"},{"id":1067,"name":"up_verts_edges","kind":32,"kindString":"Variable","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/GIGeom.ts","line":29,"character":22}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"undefined"}},"defaultValue":" []"},{"id":1069,"name":"up_verts_points","kind":32,"kindString":"Variable","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/GIGeom.ts","line":31,"character":23}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"undefined"}},"defaultValue":" []"},{"id":1068,"name":"up_verts_tris","kind":32,"kindString":"Variable","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/GIGeom.ts","line":30,"character":21}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"undefined"}},"defaultValue":" []"},{"id":1071,"name":"up_wires_faces","kind":32,"kindString":"Variable","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/GIGeom.ts","line":33,"character":22}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"undefined"}},"defaultValue":" []"},{"id":1072,"name":"up_wires_plines","kind":32,"kindString":"Variable","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/GIGeom.ts","line":34,"character":23}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"undefined"}},"defaultValue":" []"}],"groups":[{"title":"Variables","kind":32,"children":[1064,1058,1060,1063,1062,1061,1057,1056,1059,1070,1073,1076,1075,1074,1065,1066,1067,1069,1068,1071,1072]}],"sources":[{"fileName":"libs/geo-info/GIGeom.ts","line":16,"character":23}],"type":{"type":"intrinsic","name":"object"}}],"groups":[{"title":"Constructors","kind":512,"children":[1082]},{"title":"Properties","kind":1024,"children":[1078,1077,1053,1079,1080,1054,1081]},{"title":"Methods","kind":2048,"children":[1091,1095,1099,1097,1087,1089,1093,1085]},{"title":"Object literals","kind":2097152,"children":[1055]}],"sources":[{"fileName":"libs/geo-info/GIGeom.ts","line":12,"character":19}]}],"groups":[{"title":"Classes","kind":128,"children":[1052]}],"sources":[{"fileName":"libs/geo-info/GIGeom.ts","line":1,"character":0}]},{"id":498,"name":"\"libs/geo-info/GIGeomAdd\"","kind":1,"kindString":"External module","flags":{"isExported":true,"isExternal":true},"originalName":"C:/Dropbox/Files/Software/GitHub/design-automation/mobius-parametric-modeller/src/assets/libs/geo-info/GIGeomAdd.ts","children":[{"id":499,"name":"GIGeomAdd","kind":128,"kindString":"Class","flags":{"isExported":true,"isExternal":true},"comment":{"shortText":"Class for geometry."},"children":[{"id":502,"name":"constructor","kind":512,"kindString":"Constructor","flags":{"isExported":true,"isExternal":true},"comment":{"shortText":"Creates an object to store the geometry data."},"signatures":[{"id":503,"name":"new GIGeomAdd","kind":16384,"kindString":"Constructor signature","flags":{},"comment":{"shortText":"Creates an object to store the geometry data."},"parameters":[{"id":504,"name":"geom","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"GIGeom","id":1052}},{"id":505,"name":"geom_arrays","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"IGeomArrays","id":204}}],"type":{"type":"reference","name":"GIGeomAdd","id":499}}],"sources":[{"fileName":"libs/geo-info/GIGeomAdd.ts","line":11,"character":38}]},{"id":500,"name":"_geom","kind":1024,"kindString":"Property","flags":{"isPrivate":true,"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/GIGeomAdd.ts","line":10,"character":17}],"type":{"type":"reference","name":"GIGeom","id":1052}},{"id":501,"name":"_geom_arrays","kind":1024,"kindString":"Property","flags":{"isPrivate":true,"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/GIGeomAdd.ts","line":11,"character":24}],"type":{"type":"reference","name":"IGeomArrays","id":204}},{"id":550,"name":"_addEdge","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":551,"name":"_addEdge","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Adds an edge and updates the arrays."},"parameters":[{"id":552,"name":"vert_i1","kind":32768,"kindString":"Parameter","flags":{},"comment":{},"type":{"type":"intrinsic","name":"number"}},{"id":553,"name":"vert_i2","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"\n"},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"number"}}],"sources":[{"fileName":"libs/geo-info/GIGeomAdd.ts","line":303,"character":19}]},{"id":562,"name":"_addFace","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":563,"name":"_addFace","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Adds a face and updates the arrays.\nWires are assumed to be closed!\nThis also calls addTris()"},"parameters":[{"id":564,"name":"wire_i","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"\n"},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"number"}}],"sources":[{"fileName":"libs/geo-info/GIGeomAdd.ts","line":380,"character":19}]},{"id":565,"name":"_addFaceWithHoles","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":566,"name":"_addFaceWithHoles","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Adds a face with a hole and updates the arrays.\nWires are assumed to be closed!\nThis also calls addTris()"},"parameters":[{"id":567,"name":"wire_i","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"\n"},"type":{"type":"intrinsic","name":"number"}},{"id":568,"name":"holes_wires_i","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}}],"type":{"type":"intrinsic","name":"number"}}],"sources":[{"fileName":"libs/geo-info/GIGeomAdd.ts","line":399,"character":28}]},{"id":545,"name":"_addPosi","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":546,"name":"_addPosi","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Adds a position and updates the arrays."},"type":{"type":"intrinsic","name":"number"}}],"sources":[{"fileName":"libs/geo-info/GIGeomAdd.ts","line":275,"character":19}]},{"id":558,"name":"_addTris","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":559,"name":"_addTris","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Adds trangles and updates the arrays.\nWires are assumed to be closed!"},"parameters":[{"id":560,"name":"wire_i","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"\n"},"type":{"type":"intrinsic","name":"number"}},{"id":561,"name":"hole_wires_i","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}}],"sources":[{"fileName":"libs/geo-info/GIGeomAdd.ts","line":336,"character":19}]},{"id":547,"name":"_addVertex","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":548,"name":"_addVertex","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Adds a vertex and updates the arrays."},"parameters":[{"id":549,"name":"posi_i","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"\n"},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"number"}}],"sources":[{"fileName":"libs/geo-info/GIGeomAdd.ts","line":287,"character":21}]},{"id":554,"name":"_addWire","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":555,"name":"_addWire","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Adds a wire and updates the arrays.\nEdges are assumed to be sequential!"},"parameters":[{"id":556,"name":"edges_i","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"\n"},"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}},{"id":557,"name":"close","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"boolean"},"defaultValue":"false"}],"type":{"type":"intrinsic","name":"number"}}],"sources":[{"fileName":"libs/geo-info/GIGeomAdd.ts","line":323,"character":19}]},{"id":519,"name":"addColl","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":520,"name":"addColl","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Adds a collection and updates the rev array using numeric indices."},"parameters":[{"id":521,"name":"parent_i","kind":32768,"kindString":"Parameter","flags":{},"comment":{},"type":{"type":"intrinsic","name":"number"}},{"id":522,"name":"points_i","kind":32768,"kindString":"Parameter","flags":{},"comment":{},"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}},{"id":523,"name":"plines_i","kind":32768,"kindString":"Parameter","flags":{},"comment":{},"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}},{"id":524,"name":"pgons_i","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"\n"},"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}}],"type":{"type":"intrinsic","name":"number"}}],"sources":[{"fileName":"libs/geo-info/GIGeomAdd.ts","line":108,"character":18}]},{"id":515,"name":"addPgon","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":516,"name":"addPgon","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Adds a new polygon + hole entity to the model using numeric indices."},"parameters":[{"id":517,"name":"posis_i","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}},{"id":518,"name":"holes_posis_i","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"array","elementType":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}}}],"type":{"type":"intrinsic","name":"number"}}],"sources":[{"fileName":"libs/geo-info/GIGeomAdd.ts","line":67,"character":18}]},{"id":511,"name":"addPline","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":512,"name":"addPline","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Adds a new pline entity to the model using numeric indices."},"parameters":[{"id":513,"name":"posis_i","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"\n"},"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}},{"id":514,"name":"close","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"boolean"},"defaultValue":"false"}],"type":{"type":"intrinsic","name":"number"}}],"sources":[{"fileName":"libs/geo-info/GIGeomAdd.ts","line":47,"character":19}]},{"id":508,"name":"addPoint","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":509,"name":"addPoint","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Adds a new point entity to the model."},"parameters":[{"id":510,"name":"posi_i","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"The position for the point.\n"},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"number"}}],"sources":[{"fileName":"libs/geo-info/GIGeomAdd.ts","line":35,"character":19}]},{"id":506,"name":"addPosi","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":507,"name":"addPosi","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Adds a new position to the model and returns the index to that position."},"type":{"type":"intrinsic","name":"number"}}],"sources":[{"fileName":"libs/geo-info/GIGeomAdd.ts","line":26,"character":18}]},{"id":541,"name":"copyColls","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":542,"name":"copyColls","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Copy a collection\nTODO Copy attribs of object and topo entities"},"parameters":[{"id":543,"name":"colls_i","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"union","types":[{"type":"intrinsic","name":"number"},{"type":"array","elementType":{"type":"intrinsic","name":"number"}}]}},{"id":544,"name":"copy_attribs","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"\n"},"type":{"type":"intrinsic","name":"boolean"}}],"type":{"type":"union","types":[{"type":"intrinsic","name":"number"},{"type":"array","elementType":{"type":"intrinsic","name":"number"}}]}}],"sources":[{"fileName":"libs/geo-info/GIGeomAdd.ts","line":242,"character":20}]},{"id":537,"name":"copyPgons","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":538,"name":"copyPgons","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Copy polygons.\nTODO copy attribs of topo entities"},"parameters":[{"id":539,"name":"pgons_i","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"union","types":[{"type":"intrinsic","name":"number"},{"type":"array","elementType":{"type":"intrinsic","name":"number"}}]}},{"id":540,"name":"copy_attribs","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"\n"},"type":{"type":"intrinsic","name":"boolean"}}],"type":{"type":"union","types":[{"type":"intrinsic","name":"number"},{"type":"array","elementType":{"type":"intrinsic","name":"number"}}]}}],"sources":[{"fileName":"libs/geo-info/GIGeomAdd.ts","line":209,"character":20}]},{"id":533,"name":"copyPlines","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":534,"name":"copyPlines","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Copy plines.\nTODO copy attribs of topo entities"},"parameters":[{"id":535,"name":"plines_i","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"union","types":[{"type":"intrinsic","name":"number"},{"type":"array","elementType":{"type":"intrinsic","name":"number"}}]}},{"id":536,"name":"copy_attribs","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"\n"},"type":{"type":"intrinsic","name":"boolean"}}],"type":{"type":"union","types":[{"type":"intrinsic","name":"number"},{"type":"array","elementType":{"type":"intrinsic","name":"number"}}]}}],"sources":[{"fileName":"libs/geo-info/GIGeomAdd.ts","line":187,"character":21}]},{"id":529,"name":"copyPoints","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":530,"name":"copyPoints","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Copy points.\nTODO copy attribs of topo entities"},"parameters":[{"id":531,"name":"points_i","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"union","types":[{"type":"intrinsic","name":"number"},{"type":"array","elementType":{"type":"intrinsic","name":"number"}}]}},{"id":532,"name":"copy_attribs","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"\n"},"type":{"type":"intrinsic","name":"boolean"}}],"type":{"type":"union","types":[{"type":"intrinsic","name":"number"},{"type":"array","elementType":{"type":"intrinsic","name":"number"}}]}}],"sources":[{"fileName":"libs/geo-info/GIGeomAdd.ts","line":167,"character":21}]},{"id":525,"name":"copyPosis","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":526,"name":"copyPosis","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Copy positions."},"parameters":[{"id":527,"name":"posis_i","kind":32768,"kindString":"Parameter","flags":{},"comment":{},"type":{"type":"union","types":[{"type":"intrinsic","name":"number"},{"type":"array","elementType":{"type":"intrinsic","name":"number"}}]}},{"id":528,"name":"copy_attribs","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"\n"},"type":{"type":"intrinsic","name":"boolean"}}],"type":{"type":"union","types":[{"type":"intrinsic","name":"number"},{"type":"array","elementType":{"type":"intrinsic","name":"number"}}]}}],"sources":[{"fileName":"libs/geo-info/GIGeomAdd.ts","line":142,"character":20}]}],"groups":[{"title":"Constructors","kind":512,"children":[502]},{"title":"Properties","kind":1024,"children":[500,501]},{"title":"Methods","kind":2048,"children":[550,562,565,545,558,547,554,519,515,511,508,506,541,537,533,529,525]}],"sources":[{"fileName":"libs/geo-info/GIGeomAdd.ts","line":9,"character":22}]}],"groups":[{"title":"Classes","kind":128,"children":[499]}],"sources":[{"fileName":"libs/geo-info/GIGeomAdd.ts","line":1,"character":0}]},{"id":1035,"name":"\"libs/geo-info/GIGeomIO\"","kind":1,"kindString":"External module","flags":{"isExported":true,"isExternal":true},"originalName":"C:/Dropbox/Files/Software/GitHub/design-automation/mobius-parametric-modeller/src/assets/libs/geo-info/GIGeomIO.ts","children":[{"id":1036,"name":"GIGeomIO","kind":128,"kindString":"Class","flags":{"isExported":true,"isExternal":true},"comment":{"shortText":"Class for geometry."},"children":[{"id":1039,"name":"constructor","kind":512,"kindString":"Constructor","flags":{"isExported":true,"isExternal":true},"comment":{"shortText":"Creates an object to store the geometry data."},"signatures":[{"id":1040,"name":"new GIGeomIO","kind":16384,"kindString":"Constructor signature","flags":{},"comment":{"shortText":"Creates an object to store the geometry data."},"parameters":[{"id":1041,"name":"geom","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"GIGeom","id":1052}},{"id":1042,"name":"geom_arrays","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"IGeomArrays","id":204}}],"type":{"type":"reference","name":"GIGeomIO","id":1036}}],"sources":[{"fileName":"libs/geo-info/GIGeomIO.ts","line":10,"character":38}]},{"id":1037,"name":"_geom","kind":1024,"kindString":"Property","flags":{"isPrivate":true,"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/GIGeomIO.ts","line":9,"character":17}],"type":{"type":"reference","name":"GIGeom","id":1052}},{"id":1038,"name":"_geom_arrays","kind":1024,"kindString":"Property","flags":{"isPrivate":true,"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/GIGeomIO.ts","line":10,"character":24}],"type":{"type":"reference","name":"IGeomArrays","id":204}},{"id":1049,"name":"getData","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":1050,"name":"getData","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Returns the JSON data for this model."},"type":{"type":"reference","name":"IGeomData","id":234}}],"sources":[{"fileName":"libs/geo-info/GIGeomIO.ts","line":447,"character":18}]},{"id":1043,"name":"merge","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":1044,"name":"merge","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Adds data to this model from another model.\nThe existing data in the model is not deleted.\nBoth models may have deleted items, resulting in null values."},"parameters":[{"id":1045,"name":"geom_arrays","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"The geom_arrays of the other model.\n"},"type":{"type":"reference","name":"IGeomArrays","id":204}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"libs/geo-info/GIGeomIO.ts","line":25,"character":16}]},{"id":1046,"name":"setData","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":1047,"name":"setData","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Sets the data in this model from JSON data.\nThe existing data in the model is deleted."},"parameters":[{"id":1048,"name":"geom_data","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"The JSON data\n"},"type":{"type":"reference","name":"IGeomData","id":234}}],"type":{"type":"reference","name":"IGeomPack","id":119}}],"sources":[{"fileName":"libs/geo-info/GIGeomIO.ts","line":294,"character":18}]}],"groups":[{"title":"Constructors","kind":512,"children":[1039]},{"title":"Properties","kind":1024,"children":[1037,1038]},{"title":"Methods","kind":2048,"children":[1049,1043,1046]}],"sources":[{"fileName":"libs/geo-info/GIGeomIO.ts","line":8,"character":21}]}],"groups":[{"title":"Classes","kind":128,"children":[1036]}],"sources":[{"fileName":"libs/geo-info/GIGeomIO.ts","line":1,"character":0}]},{"id":659,"name":"\"libs/geo-info/GIGeomModify\"","kind":1,"kindString":"External module","flags":{"isExported":true,"isExternal":true},"originalName":"C:/Dropbox/Files/Software/GitHub/design-automation/mobius-parametric-modeller/src/assets/libs/geo-info/GIGeomModify.ts","children":[{"id":660,"name":"GIGeomModify","kind":128,"kindString":"Class","flags":{"isExported":true,"isExternal":true},"comment":{"shortText":"Class for geometry."},"children":[{"id":663,"name":"constructor","kind":512,"kindString":"Constructor","flags":{"isExported":true,"isExternal":true},"comment":{"shortText":"Creates an object to store the geometry data."},"signatures":[{"id":664,"name":"new GIGeomModify","kind":16384,"kindString":"Constructor signature","flags":{},"comment":{"shortText":"Creates an object to store the geometry data."},"parameters":[{"id":665,"name":"geom","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"GIGeom","id":1052}},{"id":666,"name":"geom_arrays","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"IGeomArrays","id":204}}],"type":{"type":"reference","name":"GIGeomModify","id":660}}],"sources":[{"fileName":"libs/geo-info/GIGeomModify.ts","line":11,"character":38}]},{"id":661,"name":"_geom","kind":1024,"kindString":"Property","flags":{"isPrivate":true,"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/GIGeomModify.ts","line":10,"character":17}],"type":{"type":"reference","name":"GIGeom","id":1052}},{"id":662,"name":"_geom_arrays","kind":1024,"kindString":"Property","flags":{"isPrivate":true,"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/GIGeomModify.ts","line":11,"character":24}],"type":{"type":"reference","name":"IGeomArrays","id":204}},{"id":746,"name":"__delVert__OpenPline1Edge","kind":2048,"kindString":"Method","flags":{"isPrivate":true,"isExported":true,"isExternal":true},"signatures":[{"id":747,"name":"__delVert__OpenPline1Edge","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Special case, delete the pline"},"parameters":[{"id":748,"name":"wire_i","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"\n"},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"libs/geo-info/GIGeomModify.ts","line":708,"character":37}]},{"id":761,"name":"__delVert__OpenPlineEnd","kind":2048,"kindString":"Method","flags":{"isPrivate":true,"isExported":true,"isExternal":true},"signatures":[{"id":762,"name":"__delVert__OpenPlineEnd","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Special case, delete the last edge"},"parameters":[{"id":763,"name":"wire_edges_i","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}},{"id":764,"name":"wire_verts_i","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}},{"id":765,"name":"vert_i","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"\n"},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"libs/geo-info/GIGeomModify.ts","line":754,"character":35}]},{"id":756,"name":"__delVert__OpenPlineStart","kind":2048,"kindString":"Method","flags":{"isPrivate":true,"isExported":true,"isExternal":true},"signatures":[{"id":757,"name":"__delVert__OpenPlineStart","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Special case, delete the first edge"},"parameters":[{"id":758,"name":"wire_edges_i","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}},{"id":759,"name":"wire_verts_i","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}},{"id":760,"name":"vert_i","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"\n"},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"libs/geo-info/GIGeomModify.ts","line":730,"character":37}]},{"id":749,"name":"__delVert__PgonBoundaryWire3Edge","kind":2048,"kindString":"Method","flags":{"isPrivate":true,"isExported":true,"isExternal":true},"signatures":[{"id":750,"name":"__delVert__PgonBoundaryWire3Edge","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Special case, delete either the pgon"},"parameters":[{"id":751,"name":"face_i","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"\n"},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"libs/geo-info/GIGeomModify.ts","line":716,"character":44}]},{"id":752,"name":"__delVert__PgonHoleWire3Edge","kind":2048,"kindString":"Method","flags":{"isPrivate":true,"isExported":true,"isExternal":true},"signatures":[{"id":753,"name":"__delVert__PgonHoleWire3Edge","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Special case, delete either the hole"},"parameters":[{"id":754,"name":"face_i","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":755,"name":"wire_i","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"libs/geo-info/GIGeomModify.ts","line":724,"character":40}]},{"id":766,"name":"__delVert__StandardCase","kind":2048,"kindString":"Method","flags":{"isPrivate":true,"isExported":true,"isExternal":true},"signatures":[{"id":767,"name":"__delVert__StandardCase","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Final case, delete the next edge, reqire the previous edge\nFor pgons, this does not update the tris"},"parameters":[{"id":768,"name":"wire_edges_i","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}},{"id":769,"name":"vert_i","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"\n"},"type":{"type":"intrinsic","name":"number"}},{"id":770,"name":"is_first","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"boolean"}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"libs/geo-info/GIGeomModify.ts","line":779,"character":35}]},{"id":739,"name":"_cutFaceHoles","kind":2048,"kindString":"Method","flags":{"isPrivate":true,"isExported":true,"isExternal":true},"signatures":[{"id":740,"name":"_cutFaceHoles","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Adds a hole to a face and updates the arrays.\nWires are assumed to be closed!\nThis also calls addTris()"},"parameters":[{"id":741,"name":"face_i","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":742,"name":"hole_wires_i","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}}],"type":{"type":"intrinsic","name":"number"}}],"sources":[{"fileName":"libs/geo-info/GIGeomModify.ts","line":570,"character":25}]},{"id":743,"name":"_delVert","kind":2048,"kindString":"Method","flags":{"isPrivate":true,"isExported":true,"isExternal":true},"signatures":[{"id":744,"name":"_delVert","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Deletes a vert.","text":"In the general case, the two edges adjacent to the deleted vert will be merged.\nThis means that the next edge will be deleted.\nThe end vert of the previous edge will connect to the end posi of the next edge.\n\nThe first special case is if the vert is for a point. In that case, just delete the point.\n\nThen there are two special cases for whicj we delete the whole object\n\n1) If the wire is open and has only 1 edge, then delete the wire\n2) if the wire is closed pgon and has only 3 edges, then:\n   a) If the wire is the boundary of the pgon, then delete the whole pgon\n   b) If the wire is a hole in the pgon, then delete the hole\n\nAssuming the special cases above do not apply,\nthen there are two more special cases for open wires\n\n1) If the vert is at the start of an open wire, then delete the first edge\n2) If teh vert is at the end of an open wire, then delete the last edge\n\nFinally, we come to the standard case.\nThe next edge is deleted, and the prev edge gets rewired.\n"},"parameters":[{"id":745,"name":"vert_i","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"\n"},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"libs/geo-info/GIGeomModify.ts","line":640,"character":20}]},{"id":771,"name":"_updateFaceTris","kind":2048,"kindString":"Method","flags":{"isPrivate":true,"isExported":true,"isExternal":true},"signatures":[{"id":772,"name":"_updateFaceTris","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Updates the tris in a face"},"parameters":[{"id":773,"name":"face_i","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"\n"},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"libs/geo-info/GIGeomModify.ts","line":815,"character":27}]},{"id":719,"name":"addVertToWire","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":720,"name":"addVertToWire","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Adds a vertex to a wire and updates the wire with the new edge"},"parameters":[{"id":721,"name":"wire_i","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"The wire to add to.\n"},"type":{"type":"intrinsic","name":"number"}},{"id":722,"name":"posi_i","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":723,"name":"to_end","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"boolean"}}],"type":{"type":"intrinsic","name":"number"}}],"sources":[{"fileName":"libs/geo-info/GIGeomModify.ts","line":440,"character":24}]},{"id":709,"name":"closeWire","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":710,"name":"closeWire","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Close a wire"},"parameters":[{"id":711,"name":"wire_i","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"The wire to close.\n"},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"number"}}],"sources":[{"fileName":"libs/geo-info/GIGeomModify.ts","line":391,"character":20}]},{"id":693,"name":"collAddEnts","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":694,"name":"collAddEnts","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Add entities to a collection"},"parameters":[{"id":695,"name":"coll_i","kind":32768,"kindString":"Parameter","flags":{},"comment":{},"type":{"type":"intrinsic","name":"number"}},{"id":696,"name":"points_i","kind":32768,"kindString":"Parameter","flags":{},"comment":{},"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}},{"id":697,"name":"plines_i","kind":32768,"kindString":"Parameter","flags":{},"comment":{},"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}},{"id":698,"name":"pgons_i","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"\n"},"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"libs/geo-info/GIGeomModify.ts","line":283,"character":22}]},{"id":699,"name":"collRemoveEnts","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":700,"name":"collRemoveEnts","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Remove entities from a collection"},"parameters":[{"id":701,"name":"coll_i","kind":32768,"kindString":"Parameter","flags":{},"comment":{},"type":{"type":"intrinsic","name":"number"}},{"id":702,"name":"points_i","kind":32768,"kindString":"Parameter","flags":{},"comment":{},"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}},{"id":703,"name":"plines_i","kind":32768,"kindString":"Parameter","flags":{},"comment":{},"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}},{"id":704,"name":"pgons_i","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"\n"},"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"libs/geo-info/GIGeomModify.ts","line":326,"character":25}]},{"id":705,"name":"cutFaceHoles","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":706,"name":"cutFaceHoles","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Creates hole in a face"},"parameters":[{"id":707,"name":"face_i","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":708,"name":"posis_i_arr","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"array","elementType":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}}}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}}],"sources":[{"fileName":"libs/geo-info/GIGeomModify.ts","line":360,"character":23}]},{"id":685,"name":"delColls","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":686,"name":"delColls","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Delete a collection.\nCollection attributes will also be deleted.\nThis does not delete any of the object in the collection.\nAlso, does not delete any positions."},"parameters":[{"id":687,"name":"colls_i","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"The collections to delete\n"},"type":{"type":"union","types":[{"type":"intrinsic","name":"number"},{"type":"array","elementType":{"type":"intrinsic","name":"number"}}]}},{"id":688,"name":"del_unused_posis","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"boolean"}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"libs/geo-info/GIGeomModify.ts","line":235,"character":19}]},{"id":681,"name":"delPgons","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":682,"name":"delPgons","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Del pgons.\nPgon attributes will also be deleted."},"parameters":[{"id":683,"name":"pgons_i","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"\n"},"type":{"type":"union","types":[{"type":"intrinsic","name":"number"},{"type":"array","elementType":{"type":"intrinsic","name":"number"}}]}},{"id":684,"name":"del_unused_posis","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"boolean"}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"libs/geo-info/GIGeomModify.ts","line":165,"character":19}]},{"id":677,"name":"delPlines","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":678,"name":"delPlines","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Del plines.\nPline attributes will also be deleted."},"parameters":[{"id":679,"name":"plines_i","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"\n"},"type":{"type":"union","types":[{"type":"intrinsic","name":"number"},{"type":"array","elementType":{"type":"intrinsic","name":"number"}}]}},{"id":680,"name":"del_unused_posis","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"boolean"}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"libs/geo-info/GIGeomModify.ts","line":110,"character":20}]},{"id":673,"name":"delPoints","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":674,"name":"delPoints","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Del points.\nPoint attributes will also be deleted."},"parameters":[{"id":675,"name":"points_i","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"\n"},"type":{"type":"union","types":[{"type":"intrinsic","name":"number"},{"type":"array","elementType":{"type":"intrinsic","name":"number"}}]}},{"id":676,"name":"del_unused_posis","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"boolean"}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"libs/geo-info/GIGeomModify.ts","line":75,"character":20}]},{"id":670,"name":"delPosis","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":671,"name":"delPosis","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Del posis.\nPosi attributes will also be deleted."},"parameters":[{"id":672,"name":"posis_i","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"\n"},"type":{"type":"union","types":[{"type":"intrinsic","name":"number"},{"type":"array","elementType":{"type":"intrinsic","name":"number"}}]}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"libs/geo-info/GIGeomModify.ts","line":51,"character":19}]},{"id":667,"name":"delUnusedPosis","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":668,"name":"delUnusedPosis","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Del all unused posis in the model.\nPosi attributes will also be deleted."},"parameters":[{"id":669,"name":"posis_i","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"\n"},"type":{"type":"union","types":[{"type":"intrinsic","name":"number"},{"type":"array","elementType":{"type":"intrinsic","name":"number"}}]}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"libs/geo-info/GIGeomModify.ts","line":28,"character":25}]},{"id":715,"name":"insertVertIntoWire","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":716,"name":"insertVertIntoWire","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Insert a vertex into an edge and updates the wire with the new edge"},"parameters":[{"id":717,"name":"edge_i","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"The edge to insert teh vertex into\n"},"type":{"type":"intrinsic","name":"number"}},{"id":718,"name":"posi_i","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"number"}}],"sources":[{"fileName":"libs/geo-info/GIGeomModify.ts","line":421,"character":29}]},{"id":712,"name":"openWire","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":713,"name":"openWire","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Open a wire, by making a new position for the last vertex."},"parameters":[{"id":714,"name":"wire_i","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"The wire to close.\n"},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"libs/geo-info/GIGeomModify.ts","line":413,"character":19}]},{"id":724,"name":"replacePosis","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":725,"name":"replacePosis","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Replace positions"},"parameters":[{"id":726,"name":"ent_type","kind":32768,"kindString":"Parameter","flags":{},"comment":{},"type":{"type":"reference","name":"EEntType","id":125}},{"id":727,"name":"ent_i","kind":32768,"kindString":"Parameter","flags":{},"comment":{},"type":{"type":"intrinsic","name":"number"}},{"id":728,"name":"new_posis_i","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"\n"},"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"libs/geo-info/GIGeomModify.ts","line":469,"character":23}]},{"id":732,"name":"reverse","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":733,"name":"reverse","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Reverse the edges of a wire.\nThis lists the edges in reverse order, and flips each edge.\nThe attributes ... TODO"},"parameters":[{"id":734,"name":"wire_i","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"libs/geo-info/GIGeomModify.ts","line":535,"character":18}]},{"id":689,"name":"setCollParent","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":690,"name":"setCollParent","kind":4096,"kindString":"Call signature","flags":{},"comment":{},"parameters":[{"id":691,"name":"coll_i","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"Set collection parent"},"type":{"type":"intrinsic","name":"number"}},{"id":692,"name":"parent_coll_i","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"\n"},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"libs/geo-info/GIGeomModify.ts","line":273,"character":24}]},{"id":735,"name":"shift","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":736,"name":"shift","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Shifts the edges of a wire.\nThe attributes ... TODO"},"parameters":[{"id":737,"name":"wire_i","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":738,"name":"offset","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"libs/geo-info/GIGeomModify.ts","line":557,"character":16}]},{"id":729,"name":"unweldVerts","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":730,"name":"unweldVerts","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Unweld the vertices\nTODO copy attributes onto new positions?"},"parameters":[{"id":731,"name":"verts_i","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"\n"},"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}}],"sources":[{"fileName":"libs/geo-info/GIGeomModify.ts","line":491,"character":22}]}],"groups":[{"title":"Constructors","kind":512,"children":[663]},{"title":"Properties","kind":1024,"children":[661,662]},{"title":"Methods","kind":2048,"children":[746,761,756,749,752,766,739,743,771,719,709,693,699,705,685,681,677,673,670,667,715,712,724,732,689,735,729]}],"sources":[{"fileName":"libs/geo-info/GIGeomModify.ts","line":9,"character":25}]}],"groups":[{"title":"Classes","kind":128,"children":[660]}],"sources":[{"fileName":"libs/geo-info/GIGeomModify.ts","line":1,"character":0}]},{"id":836,"name":"\"libs/geo-info/GIGeomQuery\"","kind":1,"kindString":"External module","flags":{"isExported":true,"isExternal":true},"originalName":"C:/Dropbox/Files/Software/GitHub/design-automation/mobius-parametric-modeller/src/assets/libs/geo-info/GIGeomQuery.ts","children":[{"id":837,"name":"GIGeomQuery","kind":128,"kindString":"Class","flags":{"isExported":true,"isExternal":true},"comment":{"shortText":"Class for geometry."},"children":[{"id":840,"name":"constructor","kind":512,"kindString":"Constructor","flags":{"isExported":true,"isExternal":true},"comment":{"shortText":"Creates an object to store the geometry data."},"signatures":[{"id":841,"name":"new GIGeomQuery","kind":16384,"kindString":"Constructor signature","flags":{},"comment":{"shortText":"Creates an object to store the geometry data."},"parameters":[{"id":842,"name":"geom","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"GIGeom","id":1052}},{"id":843,"name":"geom_arrays","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"IGeomArrays","id":204}}],"type":{"type":"reference","name":"GIGeomQuery","id":837}}],"sources":[{"fileName":"libs/geo-info/GIGeomQuery.ts","line":11,"character":38}]},{"id":838,"name":"_geom","kind":1024,"kindString":"Property","flags":{"isPrivate":true,"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/GIGeomQuery.ts","line":10,"character":17}],"type":{"type":"reference","name":"GIGeom","id":1052}},{"id":839,"name":"_geom_arrays","kind":1024,"kindString":"Property","flags":{"isPrivate":true,"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/GIGeomQuery.ts","line":11,"character":24}],"type":{"type":"reference","name":"IGeomArrays","id":204}},{"id":855,"name":"entExists","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":856,"name":"entExists","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Check if an entity exists"},"parameters":[{"id":857,"name":"ent_type","kind":32768,"kindString":"Parameter","flags":{},"comment":{},"type":{"type":"reference","name":"EEntType","id":125}},{"id":858,"name":"index","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"\n"},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"boolean"}}],"sources":[{"fileName":"libs/geo-info/GIGeomQuery.ts","line":116,"character":20}]},{"id":874,"name":"getCentroid","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":875,"name":"getCentroid","kind":4096,"kindString":"Call signature","flags":{},"comment":{},"parameters":[{"id":876,"name":"ent_type","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"EEntType","id":125}},{"id":877,"name":"ent_i","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"\n"},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","name":"Txyz","id":279}}],"sources":[{"fileName":"libs/geo-info/GIGeomQuery.ts","line":177,"character":22}]},{"id":865,"name":"getCollParent","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":866,"name":"getCollParent","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Get the parent of a collection."},"parameters":[{"id":867,"name":"coll_i","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"\n"},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"number"}}],"sources":[{"fileName":"libs/geo-info/GIGeomQuery.ts","line":154,"character":24}]},{"id":844,"name":"getEnts","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":845,"name":"getEnts","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Returns a list of indices for all, including ents that are null"},"parameters":[{"id":846,"name":"ent_type","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"\n"},"type":{"type":"reference","name":"EEntType","id":125}},{"id":847,"name":"include_deleted","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"boolean"}}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}}],"sources":[{"fileName":"libs/geo-info/GIGeomQuery.ts","line":27,"character":18}]},{"id":868,"name":"getFaceBoundary","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":869,"name":"getFaceBoundary","kind":4096,"kindString":"Call signature","flags":{},"comment":{},"parameters":[{"id":870,"name":"face_i","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"\n"},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"number"}}],"sources":[{"fileName":"libs/geo-info/GIGeomQuery.ts","line":161,"character":26}]},{"id":871,"name":"getFaceHoles","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":872,"name":"getFaceHoles","kind":4096,"kindString":"Call signature","flags":{},"comment":{},"parameters":[{"id":873,"name":"face_i","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"\n"},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}}],"sources":[{"fileName":"libs/geo-info/GIGeomQuery.ts","line":169,"character":23}]},{"id":878,"name":"getFaceNormal","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":879,"name":"getFaceNormal","kind":4096,"kindString":"Call signature","flags":{},"comment":{},"parameters":[{"id":880,"name":"face_i","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"\n"},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","name":"Txyz","id":279}}],"sources":[{"fileName":"libs/geo-info/GIGeomQuery.ts","line":192,"character":24}]},{"id":852,"name":"getUnusedPosis","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":853,"name":"getUnusedPosis","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Returns a list of indices for all posis that have no verts"},"parameters":[{"id":854,"name":"include_deleted","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"boolean"}}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}}],"sources":[{"fileName":"libs/geo-info/GIGeomQuery.ts","line":85,"character":25}]},{"id":881,"name":"getWireNormal","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":882,"name":"getWireNormal","kind":4096,"kindString":"Call signature","flags":{},"comment":{},"parameters":[{"id":883,"name":"wire_i","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"\n"},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","name":"Txyz","id":279}}],"sources":[{"fileName":"libs/geo-info/GIGeomQuery.ts","line":216,"character":24}]},{"id":862,"name":"getWireVerts","kind":2048,"kindString":"Method","flags":{"isPrivate":true,"isExported":true,"isExternal":true},"signatures":[{"id":863,"name":"getWireVerts","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Returns the vertices.\nFor a closed wire, #vertices = #edges\nFor an open wire, #vertices = #edges + 1"},"parameters":[{"id":864,"name":"wire_i","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"\n"},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}}],"sources":[{"fileName":"libs/geo-info/GIGeomQuery.ts","line":141,"character":24}]},{"id":859,"name":"istWireClosed","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":860,"name":"istWireClosed","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Check if a wire is closed."},"parameters":[{"id":861,"name":"wire_i","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"\n"},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"boolean"}}],"sources":[{"fileName":"libs/geo-info/GIGeomQuery.ts","line":124,"character":24}]},{"id":999,"name":"navAnyToAny","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":1000,"name":"navAnyToAny","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Navigate from any level down to the positions"},"parameters":[{"id":1001,"name":"from_ets","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"EEntType","id":125}},{"id":1002,"name":"to_ets","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"EEntType","id":125}},{"id":1003,"name":"index","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"\n"},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}}],"sources":[{"fileName":"libs/geo-info/GIGeomQuery.ts","line":606,"character":22}]},{"id":959,"name":"navAnyToColl","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":960,"name":"navAnyToColl","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Navigate from any level to the colls"},"parameters":[{"id":961,"name":"ent_type","kind":32768,"kindString":"Parameter","flags":{},"comment":{},"type":{"type":"reference","name":"EEntType","id":125}},{"id":962,"name":"index","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"\n"},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}}],"sources":[{"fileName":"libs/geo-info/GIGeomQuery.ts","line":326,"character":23}]},{"id":983,"name":"navAnyToEdge","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":984,"name":"navAnyToEdge","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Navigate from any level to the edges"},"parameters":[{"id":985,"name":"ent_type","kind":32768,"kindString":"Parameter","flags":{},"comment":{},"type":{"type":"reference","name":"EEntType","id":125}},{"id":986,"name":"index","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"\n"},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}}],"sources":[{"fileName":"libs/geo-info/GIGeomQuery.ts","line":449,"character":23}]},{"id":975,"name":"navAnyToFace","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":976,"name":"navAnyToFace","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Navigate from any level to the faces"},"parameters":[{"id":977,"name":"ent_type","kind":32768,"kindString":"Parameter","flags":{},"comment":{},"type":{"type":"reference","name":"EEntType","id":125}},{"id":978,"name":"index","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"\n"},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}}],"sources":[{"fileName":"libs/geo-info/GIGeomQuery.ts","line":371,"character":23}]},{"id":963,"name":"navAnyToPgon","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":964,"name":"navAnyToPgon","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Navigate from any level to the pgons"},"parameters":[{"id":965,"name":"ent_type","kind":32768,"kindString":"Parameter","flags":{},"comment":{},"type":{"type":"reference","name":"EEntType","id":125}},{"id":966,"name":"index","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"\n"},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}}],"sources":[{"fileName":"libs/geo-info/GIGeomQuery.ts","line":341,"character":23}]},{"id":967,"name":"navAnyToPline","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":968,"name":"navAnyToPline","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Navigate from any level to the plines"},"parameters":[{"id":969,"name":"ent_type","kind":32768,"kindString":"Parameter","flags":{},"comment":{},"type":{"type":"reference","name":"EEntType","id":125}},{"id":970,"name":"index","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"\n"},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}}],"sources":[{"fileName":"libs/geo-info/GIGeomQuery.ts","line":351,"character":24}]},{"id":971,"name":"navAnyToPoint","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":972,"name":"navAnyToPoint","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Navigate from any level to the points"},"parameters":[{"id":973,"name":"ent_type","kind":32768,"kindString":"Parameter","flags":{},"comment":{},"type":{"type":"reference","name":"EEntType","id":125}},{"id":974,"name":"index","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"\n"},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}}],"sources":[{"fileName":"libs/geo-info/GIGeomQuery.ts","line":361,"character":24}]},{"id":995,"name":"navAnyToPosi","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":996,"name":"navAnyToPosi","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Navigate from any level to the positions"},"parameters":[{"id":997,"name":"ent_type","kind":32768,"kindString":"Parameter","flags":{},"comment":{},"type":{"type":"reference","name":"EEntType","id":125}},{"id":998,"name":"index","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"\n"},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}}],"sources":[{"fileName":"libs/geo-info/GIGeomQuery.ts","line":593,"character":23}]},{"id":991,"name":"navAnyToTri","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":992,"name":"navAnyToTri","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Navigate from any level to the triangles"},"parameters":[{"id":993,"name":"ent_type","kind":32768,"kindString":"Parameter","flags":{},"comment":{},"type":{"type":"reference","name":"EEntType","id":125}},{"id":994,"name":"index","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"\n"},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}}],"sources":[{"fileName":"libs/geo-info/GIGeomQuery.ts","line":554,"character":22}]},{"id":987,"name":"navAnyToVert","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":988,"name":"navAnyToVert","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Navigate from any level to the vertices"},"parameters":[{"id":989,"name":"ent_type","kind":32768,"kindString":"Parameter","flags":{},"comment":{},"type":{"type":"reference","name":"EEntType","id":125}},{"id":990,"name":"index","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"\n"},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}}],"sources":[{"fileName":"libs/geo-info/GIGeomQuery.ts","line":497,"character":23}]},{"id":979,"name":"navAnyToWire","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":980,"name":"navAnyToWire","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Navigate from any level to the wires"},"parameters":[{"id":981,"name":"ent_type","kind":32768,"kindString":"Parameter","flags":{},"comment":{},"type":{"type":"reference","name":"EEntType","id":125}},{"id":982,"name":"index","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"\n"},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}}],"sources":[{"fileName":"libs/geo-info/GIGeomQuery.ts","line":404,"character":23}]},{"id":920,"name":"navCollToColl","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":921,"name":"navCollToColl","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":922,"name":"coll_i","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"number"}}],"sources":[{"fileName":"libs/geo-info/GIGeomQuery.ts","line":276,"character":24}]},{"id":917,"name":"navCollToPgon","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":918,"name":"navCollToPgon","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":919,"name":"coll_i","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}}],"sources":[{"fileName":"libs/geo-info/GIGeomQuery.ts","line":273,"character":24}]},{"id":914,"name":"navCollToPline","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":915,"name":"navCollToPline","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":916,"name":"coll_i","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}}],"sources":[{"fileName":"libs/geo-info/GIGeomQuery.ts","line":270,"character":25}]},{"id":911,"name":"navCollToPoint","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":912,"name":"navCollToPoint","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":913,"name":"coll_i","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}}],"sources":[{"fileName":"libs/geo-info/GIGeomQuery.ts","line":267,"character":25}]},{"id":890,"name":"navEdgeToVert","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":891,"name":"navEdgeToVert","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":892,"name":"edge_i","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}}],"sources":[{"fileName":"libs/geo-info/GIGeomQuery.ts","line":246,"character":24}]},{"id":935,"name":"navEdgeToWire","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":936,"name":"navEdgeToWire","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":937,"name":"edge_i","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"number"}}],"sources":[{"fileName":"libs/geo-info/GIGeomQuery.ts","line":294,"character":24}]},{"id":947,"name":"navFaceToPgon","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":948,"name":"navFaceToPgon","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":949,"name":"face","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"number"}}],"sources":[{"fileName":"libs/geo-info/GIGeomQuery.ts","line":306,"character":24}]},{"id":899,"name":"navFaceToTri","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":900,"name":"navFaceToTri","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":901,"name":"face_i","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}}],"sources":[{"fileName":"libs/geo-info/GIGeomQuery.ts","line":255,"character":23}]},{"id":896,"name":"navFaceToWire","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":897,"name":"navFaceToWire","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":898,"name":"face_i","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}}],"sources":[{"fileName":"libs/geo-info/GIGeomQuery.ts","line":252,"character":24}]},{"id":956,"name":"navPgonToColl","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":957,"name":"navPgonToColl","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":958,"name":"pgon_i","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}}],"sources":[{"fileName":"libs/geo-info/GIGeomQuery.ts","line":315,"character":24}]},{"id":908,"name":"navPgonToFace","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":909,"name":"navPgonToFace","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":910,"name":"pgon_i","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"number"}}],"sources":[{"fileName":"libs/geo-info/GIGeomQuery.ts","line":264,"character":24}]},{"id":953,"name":"navPlineToColl","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":954,"name":"navPlineToColl","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":955,"name":"line_i","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}}],"sources":[{"fileName":"libs/geo-info/GIGeomQuery.ts","line":312,"character":25}]},{"id":905,"name":"navPlineToWire","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":906,"name":"navPlineToWire","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":907,"name":"line_i","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"number"}}],"sources":[{"fileName":"libs/geo-info/GIGeomQuery.ts","line":261,"character":25}]},{"id":950,"name":"navPointToColl","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":951,"name":"navPointToColl","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":952,"name":"point_i","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}}],"sources":[{"fileName":"libs/geo-info/GIGeomQuery.ts","line":309,"character":25}]},{"id":902,"name":"navPointToVert","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":903,"name":"navPointToVert","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":904,"name":"point_i","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"number"}}],"sources":[{"fileName":"libs/geo-info/GIGeomQuery.ts","line":258,"character":25}]},{"id":923,"name":"navPosiToVert","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":924,"name":"navPosiToVert","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":925,"name":"posi_i","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}}],"sources":[{"fileName":"libs/geo-info/GIGeomQuery.ts","line":282,"character":24}]},{"id":932,"name":"navTriToFace","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":933,"name":"navTriToFace","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":934,"name":"tri_i","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"number"}}],"sources":[{"fileName":"libs/geo-info/GIGeomQuery.ts","line":291,"character":23}]},{"id":887,"name":"navTriToVert","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":888,"name":"navTriToVert","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":889,"name":"tri_i","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}}],"sources":[{"fileName":"libs/geo-info/GIGeomQuery.ts","line":243,"character":23}]},{"id":929,"name":"navVertToEdge","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":930,"name":"navVertToEdge","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":931,"name":"vert_i","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}}],"sources":[{"fileName":"libs/geo-info/GIGeomQuery.ts","line":288,"character":24}]},{"id":941,"name":"navVertToPoint","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":942,"name":"navVertToPoint","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":943,"name":"vert_i","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"number"}}],"sources":[{"fileName":"libs/geo-info/GIGeomQuery.ts","line":300,"character":25}]},{"id":884,"name":"navVertToPosi","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":885,"name":"navVertToPosi","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":886,"name":"vert_i","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"number"}}],"sources":[{"fileName":"libs/geo-info/GIGeomQuery.ts","line":240,"character":24}]},{"id":926,"name":"navVertToTri","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":927,"name":"navVertToTri","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":928,"name":"vert_i","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}}],"sources":[{"fileName":"libs/geo-info/GIGeomQuery.ts","line":285,"character":23}]},{"id":893,"name":"navWireToEdge","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":894,"name":"navWireToEdge","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":895,"name":"wire_i","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}}],"sources":[{"fileName":"libs/geo-info/GIGeomQuery.ts","line":249,"character":24}]},{"id":938,"name":"navWireToFace","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":939,"name":"navWireToFace","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":940,"name":"wire_i","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"number"}}],"sources":[{"fileName":"libs/geo-info/GIGeomQuery.ts","line":297,"character":24}]},{"id":944,"name":"navWireToPline","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":945,"name":"navWireToPline","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":946,"name":"wire_i","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"number"}}],"sources":[{"fileName":"libs/geo-info/GIGeomQuery.ts","line":303,"character":25}]},{"id":1004,"name":"neighbours","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":1005,"name":"neighbours","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Get the welded neighbour vertices of a set of vertices."},"parameters":[{"id":1006,"name":"from_ets","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"EEntType","id":125}},{"id":1007,"name":"to_ets","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"EEntType","id":125}},{"id":1008,"name":"index","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"\n"},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}}],"sources":[{"fileName":"libs/geo-info/GIGeomQuery.ts","line":641,"character":21}]},{"id":848,"name":"numEnts","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":849,"name":"numEnts","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Returns the number of entities"},"parameters":[{"id":850,"name":"ent_type","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"\n"},"type":{"type":"reference","name":"EEntType","id":125}},{"id":851,"name":"include_deleted","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"boolean"}}],"type":{"type":"intrinsic","name":"number"}}],"sources":[{"fileName":"libs/geo-info/GIGeomQuery.ts","line":78,"character":18}]}],"groups":[{"title":"Constructors","kind":512,"children":[840]},{"title":"Properties","kind":1024,"children":[838,839]},{"title":"Methods","kind":2048,"children":[855,874,865,844,868,871,878,852,881,862,859,999,959,983,975,963,967,971,995,991,987,979,920,917,914,911,890,935,947,899,896,956,908,953,905,950,902,923,932,887,929,941,884,926,893,938,944,1004,848]}],"sources":[{"fileName":"libs/geo-info/GIGeomQuery.ts","line":9,"character":24}]}],"groups":[{"title":"Classes","kind":128,"children":[837]}],"sources":[{"fileName":"libs/geo-info/GIGeomQuery.ts","line":1,"character":0}]},{"id":1009,"name":"\"libs/geo-info/GIGeomThreejs\"","kind":1,"kindString":"External module","flags":{"isExported":true,"isExternal":true},"originalName":"C:/Dropbox/Files/Software/GitHub/design-automation/mobius-parametric-modeller/src/assets/libs/geo-info/GIGeomThreejs.ts","children":[{"id":1010,"name":"GIGeomThreejs","kind":128,"kindString":"Class","flags":{"isExported":true,"isExternal":true},"comment":{"shortText":"Class for geometry."},"children":[{"id":1013,"name":"constructor","kind":512,"kindString":"Constructor","flags":{"isExported":true,"isExternal":true},"comment":{"shortText":"Creates an object to store the geometry data."},"signatures":[{"id":1014,"name":"new GIGeomThreejs","kind":16384,"kindString":"Constructor signature","flags":{},"comment":{"shortText":"Creates an object to store the geometry data."},"parameters":[{"id":1015,"name":"geom","kind":32768,"kindString":"Parameter","flags":{},"comment":{"shortText":"The GIGeom obect"},"type":{"type":"reference","name":"GIGeom","id":1052}},{"id":1016,"name":"geom_arrays","kind":32768,"kindString":"Parameter","flags":{},"comment":{"shortText":"The geometry arrays\n"},"type":{"type":"reference","name":"IGeomArrays","id":204}}],"type":{"type":"reference","name":"GIGeomThreejs","id":1010}}],"sources":[{"fileName":"libs/geo-info/GIGeomThreejs.ts","line":11,"character":38}]},{"id":1011,"name":"_geom","kind":1024,"kindString":"Property","flags":{"isPrivate":true,"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/GIGeomThreejs.ts","line":10,"character":17}],"type":{"type":"reference","name":"GIGeom","id":1052}},{"id":1012,"name":"_geom_arrays","kind":1024,"kindString":"Property","flags":{"isPrivate":true,"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/GIGeomThreejs.ts","line":11,"character":24}],"type":{"type":"reference","name":"IGeomArrays","id":204}},{"id":1028,"name":"_getMaterial","kind":2048,"kindString":"Method","flags":{"isPrivate":true,"isExported":true,"isExternal":true},"signatures":[{"id":1029,"name":"_getMaterial","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Create a threejs material"},"parameters":[{"id":1030,"name":"settings","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"comment":{"text":"\n"},"type":{"type":"intrinsic","name":"object"}}],"type":{"type":"reflection","declaration":{"id":1031,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":1033,"name":"side","kind":32,"kindString":"Variable","flags":{"isExternal":true},"sources":[{"fileName":"libs/geo-info/GIGeomThreejs.ts","line":215,"character":16}],"type":{"type":"reference","name":"Side"},"defaultValue":" THREE.DoubleSide"},{"id":1032,"name":"type","kind":32,"kindString":"Variable","flags":{"isExternal":true},"sources":[{"fileName":"libs/geo-info/GIGeomThreejs.ts","line":214,"character":16}],"type":{"type":"intrinsic","name":"string"},"defaultValue":"\"MeshPhongMaterial\""},{"id":1034,"name":"vertexColors","kind":32,"kindString":"Variable","flags":{"isExternal":true},"sources":[{"fileName":"libs/geo-info/GIGeomThreejs.ts","line":216,"character":24}],"type":{"type":"reference","name":"Colors"},"defaultValue":" THREE.VertexColors"}],"groups":[{"title":"Variables","kind":32,"children":[1033,1032,1034]}]}}}],"sources":[{"fileName":"libs/geo-info/GIGeomThreejs.ts","line":212,"character":24}]},{"id":1022,"name":"get3jsEdges","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":1023,"name":"get3jsEdges","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Returns a flat list of the sequence of verices for all the edges.\nThis list will be assumed to be in pairs.\nThe indices in the list point to the vertices."},"parameters":[{"id":1024,"name":"vertex_map","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Map","typeArguments":[{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"number"}]}}],"type":{"type":"tuple","elements":[{"type":"array","elementType":{"type":"intrinsic","name":"number"}},{"type":"reference","name":"Map","typeArguments":[{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"number"}]}]}}],"sources":[{"fileName":"libs/geo-info/GIGeomThreejs.ts","line":167,"character":22}]},{"id":1025,"name":"get3jsPoints","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":1026,"name":"get3jsPoints","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Returns a flat list of the sequence of verices for all the points.\nThe indices in the list point to the vertices."},"parameters":[{"id":1027,"name":"vertex_map","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Map","typeArguments":[{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"number"}]}}],"type":{"type":"tuple","elements":[{"type":"array","elementType":{"type":"intrinsic","name":"number"}},{"type":"reference","name":"Map","typeArguments":[{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"number"}]}]}}],"sources":[{"fileName":"libs/geo-info/GIGeomThreejs.ts","line":191,"character":23}]},{"id":1019,"name":"get3jsTris","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":1020,"name":"get3jsTris","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Returns that data required for threejs triangles.\n0) the vertices, as a flat array\n1) the select map, that maps from the threejs tri indices to the gi model tri indices\n2) the materials array, which is an array of objects\n3) the material groups array, which is an array of [ start, count, mat_index ]"},"parameters":[{"id":1021,"name":"vertex_map","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Map","typeArguments":[{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"number"}]}}],"type":{"type":"tuple","elements":[{"type":"array","elementType":{"type":"intrinsic","name":"number"}},{"type":"reference","name":"Map","typeArguments":[{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"number"}]},{"type":"array","elementType":{"type":"intrinsic","name":"any"}},{"type":"array","elementType":{"type":"tuple","elements":[{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"number"}]}}]}}],"sources":[{"fileName":"libs/geo-info/GIGeomThreejs.ts","line":41,"character":21}]},{"id":1017,"name":"get3jsVerts","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":1018,"name":"get3jsVerts","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Returns a flat list of all vertices.\nThe indices in the list point to the sequential coordinates."},"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}}],"sources":[{"fileName":"libs/geo-info/GIGeomThreejs.ts","line":31,"character":22}]}],"groups":[{"title":"Constructors","kind":512,"children":[1013]},{"title":"Properties","kind":1024,"children":[1011,1012]},{"title":"Methods","kind":2048,"children":[1028,1022,1025,1019,1017]}],"sources":[{"fileName":"libs/geo-info/GIGeomThreejs.ts","line":9,"character":26}]}],"groups":[{"title":"Classes","kind":128,"children":[1010]}],"sources":[{"fileName":"libs/geo-info/GIGeomThreejs.ts","line":1,"character":0}]},{"id":1392,"name":"\"libs/geo-info/GIModel\"","kind":1,"kindString":"External module","flags":{"isExported":true,"isExternal":true},"originalName":"C:/Dropbox/Files/Software/GitHub/design-automation/mobius-parametric-modeller/src/assets/libs/geo-info/GIModel.ts","children":[{"id":1393,"name":"GIModel","kind":128,"kindString":"Class","flags":{"isExported":true,"isExternal":true},"comment":{"shortText":"Geo-info model class."},"indexSignature":{"id":1394,"name":"__index","kind":8192,"kindString":"Index signature","flags":{},"comment":{"shortText":"Geo-info model class."},"parameters":[{"id":1395,"name":"x","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"any"}},"children":[{"id":1399,"name":"constructor","kind":512,"kindString":"Constructor","flags":{"isExported":true,"isExternal":true},"comment":{"shortText":"Creates a model."},"signatures":[{"id":1400,"name":"new GIModel","kind":16384,"kindString":"Constructor signature","flags":{},"comment":{"shortText":"Creates a model."},"parameters":[{"id":1401,"name":"model_data","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"comment":{"shortText":"The JSON data\n"},"type":{"type":"reference","name":"IModelData","id":261}}],"type":{"type":"reference","name":"GIModel","id":1393}}],"sources":[{"fileName":"libs/geo-info/GIModel.ts","line":12,"character":35}]},{"id":1397,"name":"attribs","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true,"isPublic":true},"sources":[{"fileName":"libs/geo-info/GIModel.ts","line":11,"character":18}],"type":{"type":"reference","name":"GIAttribs","id":1345}},{"id":1396,"name":"geom","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true,"isPublic":true},"sources":[{"fileName":"libs/geo-info/GIModel.ts","line":10,"character":15}],"type":{"type":"reference","name":"GIGeom","id":1052}},{"id":1398,"name":"threejs","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true,"isPublic":true},"sources":[{"fileName":"libs/geo-info/GIModel.ts","line":12,"character":18}],"type":{"type":"reference","name":"GIModelThreejs","id":1383}},{"id":1410,"name":"check","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":1411,"name":"check","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Check model for internal consistency"},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}}],"sources":[{"fileName":"libs/geo-info/GIModel.ts","line":56,"character":16}]},{"id":1408,"name":"getData","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":1409,"name":"getData","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Returns the JSON data for this model."},"type":{"type":"reference","name":"IModelData","id":261}}],"sources":[{"fileName":"libs/geo-info/GIModel.ts","line":47,"character":18}]},{"id":1402,"name":"merge","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":1403,"name":"merge","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Copys the data from a second model into this model.\nThe existing data in this model is not deleted."},"parameters":[{"id":1404,"name":"model","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"GIModel","id":1393}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"libs/geo-info/GIModel.ts","line":30,"character":16}]},{"id":1405,"name":"setData","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":1406,"name":"setData","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Sets the data in this model from JSON data.\nAny existing data in the model is deleted."},"parameters":[{"id":1407,"name":"model_data","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"The JSON data.\n"},"type":{"type":"reference","name":"IModelData","id":261}}],"type":{"type":"reference","name":"IGeomPack","id":119}}],"sources":[{"fileName":"libs/geo-info/GIModel.ts","line":39,"character":18}]}],"groups":[{"title":"Constructors","kind":512,"children":[1399]},{"title":"Properties","kind":1024,"children":[1397,1396,1398]},{"title":"Methods","kind":2048,"children":[1410,1408,1402,1405]}],"sources":[{"fileName":"libs/geo-info/GIModel.ts","line":8,"character":20}]}],"groups":[{"title":"Classes","kind":128,"children":[1393]}],"sources":[{"fileName":"libs/geo-info/GIModel.ts","line":1,"character":0}]},{"id":1382,"name":"\"libs/geo-info/GIModelThreejs\"","kind":1,"kindString":"External module","flags":{"isExported":true,"isExternal":true},"originalName":"C:/Dropbox/Files/Software/GitHub/design-automation/mobius-parametric-modeller/src/assets/libs/geo-info/GIModelThreejs.ts","children":[{"id":1383,"name":"GIModelThreejs","kind":128,"kindString":"Class","flags":{"isExported":true,"isExternal":true},"comment":{"shortText":"Geo-info model class."},"children":[{"id":1385,"name":"constructor","kind":512,"kindString":"Constructor","flags":{"isExported":true,"isExternal":true},"comment":{"shortText":"Creates an object to store the attribute data."},"signatures":[{"id":1386,"name":"new GIModelThreejs","kind":16384,"kindString":"Constructor signature","flags":{},"comment":{"shortText":"Creates an object to store the attribute data."},"parameters":[{"id":1387,"name":"model","kind":32768,"kindString":"Parameter","flags":{},"comment":{"shortText":"The JSON data\n"},"type":{"type":"reference","name":"GIModel","id":1393}}],"type":{"type":"reference","name":"GIModelThreejs","id":1383}}],"sources":[{"fileName":"libs/geo-info/GIModelThreejs.ts","line":8,"character":28}]},{"id":1384,"name":"_model","kind":1024,"kindString":"Property","flags":{"isPrivate":true,"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/GIModelThreejs.ts","line":8,"character":18}],"type":{"type":"reference","name":"GIModel","id":1393}},{"id":1388,"name":"_generateColors","kind":2048,"kindString":"Method","flags":{"isPrivate":true,"isExported":true,"isExternal":true},"signatures":[{"id":1389,"name":"_generateColors","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Generate a default color if none exists."},"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}}],"sources":[{"fileName":"libs/geo-info/GIModelThreejs.ts","line":20,"character":27}]},{"id":1390,"name":"get3jsData","kind":2048,"kindString":"Method","flags":{"isExported":true,"isExternal":true,"isPublic":true},"signatures":[{"id":1391,"name":"get3jsData","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Returns arrays for visualization in Threejs."},"type":{"type":"reference","name":"IThreeJS","id":1366}}],"sources":[{"fileName":"libs/geo-info/GIModelThreejs.ts","line":42,"character":21}]}],"groups":[{"title":"Constructors","kind":512,"children":[1385]},{"title":"Properties","kind":1024,"children":[1384]},{"title":"Methods","kind":2048,"children":[1388,1390]}],"sources":[{"fileName":"libs/geo-info/GIModelThreejs.ts","line":7,"character":27}]}],"groups":[{"title":"Classes","kind":128,"children":[1383]}],"sources":[{"fileName":"libs/geo-info/GIModelThreejs.ts","line":1,"character":0}]},{"id":1365,"name":"\"libs/geo-info/ThreejsJSON\"","kind":1,"kindString":"External module","flags":{"isExported":true,"isExternal":true},"originalName":"C:/Dropbox/Files/Software/GitHub/design-automation/mobius-parametric-modeller/src/assets/libs/geo-info/ThreejsJSON.ts","children":[{"id":1366,"name":"IThreeJS","kind":256,"kindString":"Interface","flags":{"isExported":true,"isExternal":true},"children":[{"id":1373,"name":"colors","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/ThreejsJSON.ts","line":8,"character":10}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}},{"id":1376,"name":"edge_indices","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/ThreejsJSON.ts","line":11,"character":16}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}},{"id":1377,"name":"edge_select_map","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/ThreejsJSON.ts","line":12,"character":19}],"type":{"type":"reference","name":"Map","typeArguments":[{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"number"}]}},{"id":1381,"name":"material_groups","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/ThreejsJSON.ts","line":16,"character":19}],"type":{"type":"array","elementType":{"type":"tuple","elements":[{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"number"}]}}},{"id":1380,"name":"materials","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/ThreejsJSON.ts","line":15,"character":13}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}},{"id":1372,"name":"normals","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/ThreejsJSON.ts","line":7,"character":11}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}},{"id":1374,"name":"point_indices","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/ThreejsJSON.ts","line":9,"character":17}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}},{"id":1375,"name":"point_select_map","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/ThreejsJSON.ts","line":10,"character":20}],"type":{"type":"reference","name":"Map","typeArguments":[{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"number"}]}},{"id":1368,"name":"posis_indices","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/ThreejsJSON.ts","line":3,"character":17}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}},{"id":1369,"name":"posis_map","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/ThreejsJSON.ts","line":4,"character":13}],"type":{"type":"reference","name":"Map","typeArguments":[{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"number"}]}},{"id":1367,"name":"posis_xyz","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/ThreejsJSON.ts","line":2,"character":13}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}},{"id":1378,"name":"triangle_indices","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/ThreejsJSON.ts","line":13,"character":20}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}},{"id":1379,"name":"triangle_select_map","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/ThreejsJSON.ts","line":14,"character":23}],"type":{"type":"reference","name":"Map","typeArguments":[{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"number"}]}},{"id":1371,"name":"vertex_map","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/ThreejsJSON.ts","line":6,"character":14}],"type":{"type":"reference","name":"Map","typeArguments":[{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"number"}]}},{"id":1370,"name":"vertex_xyz","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/ThreejsJSON.ts","line":5,"character":14}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}}],"groups":[{"title":"Properties","kind":1024,"children":[1373,1376,1377,1381,1380,1372,1374,1375,1368,1369,1367,1378,1379,1371,1370]}],"sources":[{"fileName":"libs/geo-info/ThreejsJSON.ts","line":1,"character":25}]}],"groups":[{"title":"Interfaces","kind":256,"children":[1366]}],"sources":[{"fileName":"libs/geo-info/ThreejsJSON.ts","line":1,"character":0}]},{"id":118,"name":"\"libs/geo-info/common\"","kind":1,"kindString":"External module","flags":{"isExported":true,"isExternal":true},"originalName":"C:/Dropbox/Files/Software/GitHub/design-automation/mobius-parametric-modeller/src/assets/libs/geo-info/common.ts","children":[{"id":231,"name":"EAttribDataTypeStrs","kind":4,"kindString":"Enumeration","flags":{"isExported":true,"isExternal":true},"children":[{"id":232,"name":"FLOAT","kind":16,"kindString":"Enumeration member","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":199,"character":9}],"defaultValue":"\"Float\""},{"id":233,"name":"STRING","kind":16,"kindString":"Enumeration member","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":200,"character":10}],"defaultValue":"\"String\""}],"groups":[{"title":"Enumeration members","kind":16,"children":[232,233]}],"sources":[{"fileName":"libs/geo-info/common.ts","line":197,"character":31}]},{"id":171,"name":"EAttribNames","kind":4,"kindString":"Enumeration","flags":{"isExported":true,"isExternal":true},"children":[{"id":174,"name":"COLOUR","kind":16,"kindString":"Enumeration member","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":97,"character":10}],"defaultValue":"\"rgb\""},{"id":172,"name":"COORDS","kind":16,"kindString":"Enumeration member","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":95,"character":10}],"defaultValue":"\"xyz\""},{"id":176,"name":"NAME","kind":16,"kindString":"Enumeration member","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":99,"character":8}],"defaultValue":"\"name\""},{"id":173,"name":"NORMAL","kind":16,"kindString":"Enumeration member","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":96,"character":10}],"defaultValue":"\"normal\""},{"id":175,"name":"TEXTURE","kind":16,"kindString":"Enumeration member","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":98,"character":11}],"defaultValue":"\"uv\""}],"groups":[{"title":"Enumeration members","kind":16,"children":[174,172,176,173,175]}],"sources":[{"fileName":"libs/geo-info/common.ts","line":94,"character":24}]},{"id":196,"name":"EAttribPromote","kind":4,"kindString":"Enumeration","flags":{"isExported":true,"isExternal":true},"children":[{"id":197,"name":"AVERAGE","kind":16,"kindString":"Enumeration member","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":148,"character":11}]},{"id":202,"name":"FIRST","kind":16,"kindString":"Enumeration member","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":153,"character":9}]},{"id":203,"name":"LAST","kind":16,"kindString":"Enumeration member","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":154,"character":8}]},{"id":201,"name":"MAX","kind":16,"kindString":"Enumeration member","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":152,"character":7}]},{"id":198,"name":"MEDIAN","kind":16,"kindString":"Enumeration member","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":149,"character":10}]},{"id":200,"name":"MIN","kind":16,"kindString":"Enumeration member","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":151,"character":7}]},{"id":199,"name":"SUM","kind":16,"kindString":"Enumeration member","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":150,"character":7}]}],"groups":[{"title":"Enumeration members","kind":16,"children":[197,202,203,201,198,200,199]}],"sources":[{"fileName":"libs/geo-info/common.ts","line":147,"character":26}]},{"id":149,"name":"EEntStrToGeomArray","kind":4,"kindString":"Enumeration","flags":{"isExported":true,"isExternal":true},"children":[{"id":159,"name":"dn_colls_objs","kind":16,"kindString":"Enumeration member","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":74,"character":19}]},{"id":153,"name":"dn_edges_verts","kind":16,"kindString":"Enumeration member","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":68,"character":20}]},{"id":155,"name":"dn_faces_wirestris","kind":16,"kindString":"Enumeration member","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":70,"character":24}]},{"id":158,"name":"dn_pgons_faces","kind":16,"kindString":"Enumeration member","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":73,"character":20}]},{"id":157,"name":"dn_plines_wires","kind":16,"kindString":"Enumeration member","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":72,"character":21}]},{"id":156,"name":"dn_points_verts","kind":16,"kindString":"Enumeration member","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":71,"character":21}]},{"id":151,"name":"dn_tris_verts","kind":16,"kindString":"Enumeration member","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":66,"character":19}]},{"id":152,"name":"dn_verts_posis","kind":16,"kindString":"Enumeration member","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":67,"character":20}]},{"id":154,"name":"dn_wires_edges","kind":16,"kindString":"Enumeration member","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":69,"character":20}]},{"id":150,"name":"posis","kind":16,"kindString":"Enumeration member","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":65,"character":11}]}],"groups":[{"title":"Enumeration members","kind":16,"children":[159,153,155,158,157,156,151,152,154,150]}],"sources":[{"fileName":"libs/geo-info/common.ts","line":64,"character":30}]},{"id":125,"name":"EEntType","kind":4,"kindString":"Enumeration","flags":{"isExported":true,"isExternal":true},"children":[{"id":135,"name":"COLL","kind":16,"kindString":"Enumeration member","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":45,"character":8}]},{"id":129,"name":"EDGE","kind":16,"kindString":"Enumeration member","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":39,"character":8}]},{"id":131,"name":"FACE","kind":16,"kindString":"Enumeration member","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":41,"character":8}]},{"id":136,"name":"MOD","kind":16,"kindString":"Enumeration member","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":46,"character":7}]},{"id":134,"name":"PGON","kind":16,"kindString":"Enumeration member","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":44,"character":8}]},{"id":133,"name":"PLINE","kind":16,"kindString":"Enumeration member","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":43,"character":9}]},{"id":132,"name":"POINT","kind":16,"kindString":"Enumeration member","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":42,"character":9}]},{"id":126,"name":"POSI","kind":16,"kindString":"Enumeration member","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":36,"character":8}]},{"id":127,"name":"TRI","kind":16,"kindString":"Enumeration member","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":37,"character":7}]},{"id":128,"name":"VERT","kind":16,"kindString":"Enumeration member","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":38,"character":8}]},{"id":130,"name":"WIRE","kind":16,"kindString":"Enumeration member","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":40,"character":8}]}],"groups":[{"title":"Enumeration members","kind":16,"children":[135,129,131,136,134,133,132,126,127,128,130]}],"sources":[{"fileName":"libs/geo-info/common.ts","line":35,"character":20}]},{"id":137,"name":"EEntTypeStr","kind":4,"kindString":"Enumeration","flags":{"isExported":true,"isExternal":true},"children":[{"id":141,"name":"_e","kind":16,"kindString":"Enumeration member","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":54,"character":8}]},{"id":143,"name":"_f","kind":16,"kindString":"Enumeration member","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":56,"character":8}]},{"id":139,"name":"_t","kind":16,"kindString":"Enumeration member","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":52,"character":8}]},{"id":140,"name":"_v","kind":16,"kindString":"Enumeration member","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":53,"character":8}]},{"id":142,"name":"_w","kind":16,"kindString":"Enumeration member","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":55,"character":8}]},{"id":147,"name":"co","kind":16,"kindString":"Enumeration member","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":60,"character":8}]},{"id":148,"name":"mo","kind":16,"kindString":"Enumeration member","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":61,"character":8}]},{"id":146,"name":"pg","kind":16,"kindString":"Enumeration member","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":59,"character":8}]},{"id":145,"name":"pl","kind":16,"kindString":"Enumeration member","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":58,"character":8}]},{"id":138,"name":"ps","kind":16,"kindString":"Enumeration member","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":51,"character":8}]},{"id":144,"name":"pt","kind":16,"kindString":"Enumeration member","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":57,"character":8}]}],"groups":[{"title":"Enumeration members","kind":16,"children":[141,143,139,140,142,147,148,146,145,138,144]}],"sources":[{"fileName":"libs/geo-info/common.ts","line":50,"character":23}]},{"id":177,"name":"EQueryOperatorTypes","kind":4,"kindString":"Enumeration","flags":{"isExported":true,"isExternal":true},"comment":{"shortText":"The types of operators that can be used in a query."},"children":[{"id":184,"name":"EQUAL","kind":16,"kindString":"Enumeration member","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":112,"character":9}],"defaultValue":"\"=\""},{"id":178,"name":"IS_EQUAL","kind":16,"kindString":"Enumeration member","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":106,"character":12}],"defaultValue":"\"==\""},{"id":182,"name":"IS_GREATER","kind":16,"kindString":"Enumeration member","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":110,"character":14}],"defaultValue":"\">\""},{"id":180,"name":"IS_GREATER_OR_EQUAL","kind":16,"kindString":"Enumeration member","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":108,"character":23}],"defaultValue":"\">=\""},{"id":183,"name":"IS_LESS","kind":16,"kindString":"Enumeration member","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":111,"character":11}],"defaultValue":"\"<\""},{"id":181,"name":"IS_LESS_OR_EQUAL","kind":16,"kindString":"Enumeration member","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":109,"character":20}],"defaultValue":"\"<=\""},{"id":179,"name":"IS_NOT_EQUAL","kind":16,"kindString":"Enumeration member","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":107,"character":16}],"defaultValue":"\"!=\""}],"groups":[{"title":"Enumeration members","kind":16,"children":[184,178,182,180,183,181,179]}],"sources":[{"fileName":"libs/geo-info/common.ts","line":105,"character":31}]},{"id":193,"name":"ESort","kind":4,"kindString":"Enumeration","flags":{"isExported":true,"isExternal":true},"children":[{"id":195,"name":"ASCENDING","kind":16,"kindString":"Enumeration member","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":144,"character":15}],"defaultValue":"\"ascending\""},{"id":194,"name":"DESCENDING","kind":16,"kindString":"Enumeration member","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":143,"character":16}],"defaultValue":"\"descending\""}],"groups":[{"title":"Enumeration members","kind":16,"children":[195,194]}],"sources":[{"fileName":"libs/geo-info/common.ts","line":142,"character":17}]},{"id":245,"name":"IAttribData","kind":256,"kindString":"Interface","flags":{"isExported":true,"isExternal":true},"children":[{"id":249,"name":"data","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":239,"character":8}],"type":{"type":"reference","name":"TEntAttribValuesArr","id":292}},{"id":248,"name":"data_size","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":238,"character":13}],"type":{"type":"intrinsic","name":"number"}},{"id":247,"name":"data_type","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":237,"character":13}],"type":{"type":"reference","name":"EAttribDataTypeStrs","id":231}},{"id":246,"name":"name","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":236,"character":8}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","kind":1024,"children":[249,248,247,246]}],"sources":[{"fileName":"libs/geo-info/common.ts","line":235,"character":28}]},{"id":250,"name":"IAttribsData","kind":256,"kindString":"Interface","flags":{"isExported":true,"isExternal":true},"children":[{"id":259,"name":"collections","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":250,"character":15}],"type":{"type":"array","elementType":{"type":"reference","name":"IAttribData","id":245}}},{"id":253,"name":"edges","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":244,"character":9}],"type":{"type":"array","elementType":{"type":"reference","name":"IAttribData","id":245}}},{"id":255,"name":"faces","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":246,"character":9}],"type":{"type":"array","elementType":{"type":"reference","name":"IAttribData","id":245}}},{"id":260,"name":"model","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":251,"character":9}],"type":{"type":"reference","name":"TModelAttribValuesArr","id":293}},{"id":256,"name":"points","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":247,"character":10}],"type":{"type":"array","elementType":{"type":"reference","name":"IAttribData","id":245}}},{"id":258,"name":"polygons","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":249,"character":12}],"type":{"type":"array","elementType":{"type":"reference","name":"IAttribData","id":245}}},{"id":257,"name":"polylines","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":248,"character":13}],"type":{"type":"array","elementType":{"type":"reference","name":"IAttribData","id":245}}},{"id":251,"name":"positions","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":242,"character":13}],"type":{"type":"array","elementType":{"type":"reference","name":"IAttribData","id":245}}},{"id":252,"name":"vertices","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":243,"character":12}],"type":{"type":"array","elementType":{"type":"reference","name":"IAttribData","id":245}}},{"id":254,"name":"wires","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":245,"character":9}],"type":{"type":"array","elementType":{"type":"reference","name":"IAttribData","id":245}}}],"groups":[{"title":"Properties","kind":1024,"children":[259,253,255,260,256,258,257,251,252,254]}],"sources":[{"fileName":"libs/geo-info/common.ts","line":241,"character":29}]},{"id":160,"name":"IAttribsMaps","kind":256,"kindString":"Interface","flags":{"isExported":true,"isExternal":true},"comment":{"shortText":"Attribute maps"},"children":[{"id":163,"name":"_e","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":83,"character":6}],"type":{"type":"reference","name":"Map","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"reference","name":"GIAttribMap","id":18}]}},{"id":165,"name":"_f","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":85,"character":6}],"type":{"type":"reference","name":"Map","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"reference","name":"GIAttribMap","id":18}]}},{"id":162,"name":"_v","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":82,"character":6}],"type":{"type":"reference","name":"Map","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"reference","name":"GIAttribMap","id":18}]}},{"id":164,"name":"_w","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":84,"character":6}],"type":{"type":"reference","name":"Map","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"reference","name":"GIAttribMap","id":18}]}},{"id":169,"name":"co","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":89,"character":6}],"type":{"type":"reference","name":"Map","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"reference","name":"GIAttribMap","id":18}]}},{"id":170,"name":"mo","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":90,"character":6}],"type":{"type":"reference","name":"Map","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"any"}]}},{"id":168,"name":"pg","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":88,"character":6}],"type":{"type":"reference","name":"Map","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"reference","name":"GIAttribMap","id":18}]}},{"id":167,"name":"pl","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":87,"character":6}],"type":{"type":"reference","name":"Map","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"reference","name":"GIAttribMap","id":18}]}},{"id":161,"name":"ps","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":81,"character":6}],"type":{"type":"reference","name":"Map","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"reference","name":"GIAttribMap","id":18}]}},{"id":166,"name":"pt","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":86,"character":6}],"type":{"type":"reference","name":"Map","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"reference","name":"GIAttribMap","id":18}]}}],"groups":[{"title":"Properties","kind":1024,"children":[163,165,162,164,169,170,168,167,161,166]}],"sources":[{"fileName":"libs/geo-info/common.ts","line":80,"character":29}]},{"id":204,"name":"IGeomArrays","kind":256,"kindString":"Interface","flags":{"isExported":true,"isExternal":true},"comment":{"shortText":"Geom arrays"},"children":[{"id":213,"name":"dn_colls_objs","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":170,"character":17}],"type":{"type":"array","elementType":{"type":"reference","name":"TColl","id":289}}},{"id":207,"name":"dn_edges_verts","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":164,"character":18}],"type":{"type":"array","elementType":{"type":"reference","name":"TEdge","id":283}}},{"id":209,"name":"dn_faces_wirestris","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":166,"character":22}],"type":{"type":"array","elementType":{"type":"reference","name":"TFace","id":285}}},{"id":212,"name":"dn_pgons_faces","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":169,"character":18}],"type":{"type":"array","elementType":{"type":"reference","name":"TPgon","id":288}}},{"id":211,"name":"dn_plines_wires","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":168,"character":19}],"type":{"type":"array","elementType":{"type":"reference","name":"TPline","id":287}}},{"id":210,"name":"dn_points_verts","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":167,"character":19}],"type":{"type":"array","elementType":{"type":"reference","name":"TPoint","id":286}}},{"id":206,"name":"dn_tris_verts","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":163,"character":17}],"type":{"type":"array","elementType":{"type":"reference","name":"TTri","id":281}}},{"id":205,"name":"dn_verts_posis","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":162,"character":18}],"type":{"type":"array","elementType":{"type":"reference","name":"TVert","id":282}}},{"id":208,"name":"dn_wires_edges","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":165,"character":18}],"type":{"type":"array","elementType":{"type":"reference","name":"TWire","id":284}}},{"id":219,"name":"up_edges_wires","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":176,"character":18}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}},{"id":222,"name":"up_faces_pgons","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":179,"character":18}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}},{"id":225,"name":"up_pgons_colls","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":182,"character":18}],"type":{"type":"array","elementType":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}}},{"id":224,"name":"up_plines_colls","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":181,"character":19}],"type":{"type":"array","elementType":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}}},{"id":223,"name":"up_points_colls","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":180,"character":19}],"type":{"type":"array","elementType":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}}},{"id":214,"name":"up_posis_verts","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":171,"character":18}],"type":{"type":"array","elementType":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}}},{"id":215,"name":"up_tris_faces","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":172,"character":17}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}},{"id":216,"name":"up_verts_edges","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":173,"character":18}],"type":{"type":"array","elementType":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}}},{"id":218,"name":"up_verts_points","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":175,"character":19}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}},{"id":217,"name":"up_verts_tris","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":174,"character":17}],"type":{"type":"array","elementType":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}}},{"id":220,"name":"up_wires_faces","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":177,"character":18}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}},{"id":221,"name":"up_wires_plines","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":178,"character":19}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}}],"groups":[{"title":"Properties","kind":1024,"children":[213,207,209,212,211,210,206,205,208,219,222,225,224,223,214,215,216,218,217,220,221]}],"sources":[{"fileName":"libs/geo-info/common.ts","line":160,"character":28}]},{"id":226,"name":"IGeomCopy","kind":256,"kindString":"Interface","flags":{"isExported":true,"isExternal":true},"children":[{"id":230,"name":"colls","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":190,"character":9}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}},{"id":229,"name":"pgons","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":189,"character":9}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}},{"id":228,"name":"plines","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":188,"character":10}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}},{"id":227,"name":"points","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":187,"character":10}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}}],"groups":[{"title":"Properties","kind":1024,"children":[230,229,228,227]}],"sources":[{"fileName":"libs/geo-info/common.ts","line":186,"character":26}]},{"id":234,"name":"IGeomData","kind":256,"kindString":"Interface","flags":{"isExported":true,"isExternal":true},"children":[{"id":244,"name":"collections","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":233,"character":15}],"type":{"type":"array","elementType":{"type":"reference","name":"TColl","id":289}}},{"id":238,"name":"edges","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":227,"character":9}],"type":{"type":"array","elementType":{"type":"reference","name":"TEdge","id":283}}},{"id":240,"name":"faces","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":229,"character":9}],"type":{"type":"array","elementType":{"type":"reference","name":"TFace","id":285}}},{"id":235,"name":"num_positions","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":224,"character":17}],"type":{"type":"intrinsic","name":"number"}},{"id":241,"name":"points","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":230,"character":10}],"type":{"type":"array","elementType":{"type":"reference","name":"TPoint","id":286}}},{"id":243,"name":"polygons","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":232,"character":12}],"type":{"type":"array","elementType":{"type":"reference","name":"TPgon","id":288}}},{"id":242,"name":"polylines","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":231,"character":13}],"type":{"type":"array","elementType":{"type":"reference","name":"TPline","id":287}}},{"id":236,"name":"triangles","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":225,"character":13}],"type":{"type":"array","elementType":{"type":"reference","name":"TTri","id":281}}},{"id":237,"name":"vertices","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":226,"character":12}],"type":{"type":"array","elementType":{"type":"reference","name":"TVert","id":282}}},{"id":239,"name":"wires","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":228,"character":9}],"type":{"type":"array","elementType":{"type":"reference","name":"TWire","id":284}}}],"groups":[{"title":"Properties","kind":1024,"children":[244,238,240,235,241,243,242,236,237,239]}],"sources":[{"fileName":"libs/geo-info/common.ts","line":223,"character":26}]},{"id":119,"name":"IGeomPack","kind":256,"kindString":"Interface","flags":{"isExported":true,"isExternal":true},"children":[{"id":124,"name":"colls_i","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":21,"character":11}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}},{"id":123,"name":"pgons_i","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":20,"character":11}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}},{"id":122,"name":"plines_i","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":19,"character":12}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}},{"id":121,"name":"points_i","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":18,"character":12}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}},{"id":120,"name":"posis_i","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":17,"character":11}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}}],"groups":[{"title":"Properties","kind":1024,"children":[124,123,122,121,120]}],"sources":[{"fileName":"libs/geo-info/common.ts","line":16,"character":26}]},{"id":261,"name":"IModelData","kind":256,"kindString":"Interface","flags":{"isExported":true,"isExternal":true},"children":[{"id":263,"name":"attributes","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":255,"character":14}],"type":{"type":"reference","name":"IAttribsData","id":250}},{"id":262,"name":"geometry","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":254,"character":12}],"type":{"type":"reference","name":"IGeomData","id":234}}],"groups":[{"title":"Properties","kind":1024,"children":[263,262]}],"sources":[{"fileName":"libs/geo-info/common.ts","line":253,"character":27}]},{"id":185,"name":"IQueryComponent","kind":256,"kindString":"Interface","flags":{"isExported":true,"isExternal":true},"comment":{"shortText":"A query component.\nEach query can consist of multiple components.\nSome examples of queries","tags":[{"tag":"name","text":"== value"},{"tag":"name","text":"> value"},{"tag":"name[2]","text":"<= value\n"}]},"children":[{"id":187,"name":"attrib_index","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":125,"character":16}],"type":{"type":"intrinsic","name":"number"}},{"id":186,"name":"attrib_name","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":124,"character":15}],"type":{"type":"intrinsic","name":"string"}},{"id":188,"name":"attrib_value_str","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":126,"character":20}],"type":{"type":"intrinsic","name":"string"}},{"id":189,"name":"operator_type","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":127,"character":17}],"type":{"type":"reference","name":"EQueryOperatorTypes","id":177}}],"groups":[{"title":"Properties","kind":1024,"children":[187,186,188,189]}],"sources":[{"fileName":"libs/geo-info/common.ts","line":123,"character":32}]},{"id":190,"name":"ISortComponent","kind":256,"kindString":"Interface","flags":{"isExported":true,"isExternal":true},"comment":{"shortText":"A sort component.\nEach sort can consist of multiple components.\nSome examples of queries","tags":[{"tag":"name","text":""},{"tag":"name[2]","text":"\n"}]},"children":[{"id":192,"name":"attrib_index","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":139,"character":16}],"type":{"type":"intrinsic","name":"number"}},{"id":191,"name":"attrib_name","kind":1024,"kindString":"Property","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":138,"character":15}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","kind":1024,"children":[192,191]}],"sources":[{"fileName":"libs/geo-info/common.ts","line":137,"character":31}]},{"id":291,"name":"TAttribDataTypes","kind":4194304,"kindString":"Type alias","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":216,"character":28}],"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"array","elementType":{"type":"intrinsic","name":"string"}},{"type":"intrinsic","name":"number"},{"type":"array","elementType":{"type":"intrinsic","name":"number"}}]}},{"id":273,"name":"TBBox","kind":4194304,"kindString":"Type alias","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":27,"character":17}],"type":{"type":"tuple","elements":[{"type":"reference","name":"Txyz","id":279},{"type":"reference","name":"Txyz","id":279},{"type":"reference","name":"Txyz","id":279},{"type":"reference","name":"Txyz","id":279}]}},{"id":289,"name":"TColl","kind":4194304,"kindString":"Type alias","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":214,"character":17}],"type":{"type":"tuple","elements":[{"type":"intrinsic","name":"number"},{"type":"array","elementType":{"type":"intrinsic","name":"number"}},{"type":"array","elementType":{"type":"intrinsic","name":"number"}},{"type":"array","elementType":{"type":"intrinsic","name":"number"}}]}},{"id":276,"name":"TColor","kind":4194304,"kindString":"Type alias","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":30,"character":18}],"type":{"type":"tuple","elements":[{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"number"}]}},{"id":283,"name":"TEdge","kind":4194304,"kindString":"Type alias","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":208,"character":17}],"type":{"type":"tuple","elements":[{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"number"}]}},{"id":292,"name":"TEntAttribValuesArr","kind":4194304,"kindString":"Type alias","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":217,"character":31}],"type":{"type":"reference","name":"Array","typeArguments":[{"type":"tuple","elements":[{"type":"array","elementType":{"type":"intrinsic","name":"number"}},{"type":"reference","name":"TAttribDataTypes","id":291}]}]}},{"id":270,"name":"TEntTypeIdx","kind":4194304,"kindString":"Type alias","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":13,"character":23}],"type":{"type":"tuple","elements":[{"type":"reference","name":"EEntType","id":125},{"type":"intrinsic","name":"number"}]}},{"id":290,"name":"TEntity","kind":4194304,"kindString":"Type alias","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":215,"character":19}],"type":{"type":"union","types":[{"type":"reference","name":"TTri","id":281},{"type":"reference","name":"TVert","id":282},{"type":"reference","name":"TEdge","id":283},{"type":"reference","name":"TWire","id":284},{"type":"reference","name":"TFace","id":285},{"type":"reference","name":"TPoint","id":286},{"type":"reference","name":"TPline","id":287},{"type":"reference","name":"TPgon","id":288},{"type":"reference","name":"TColl","id":289}]}},{"id":285,"name":"TFace","kind":4194304,"kindString":"Type alias","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":210,"character":17}],"type":{"type":"tuple","elements":[{"type":"array","elementType":{"type":"intrinsic","name":"number"}},{"type":"array","elementType":{"type":"intrinsic","name":"number"}}]}},{"id":275,"name":"TId","kind":4194304,"kindString":"Type alias","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":29,"character":15}],"type":{"type":"intrinsic","name":"string"}},{"id":293,"name":"TModelAttribValuesArr","kind":4194304,"kindString":"Type alias","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":218,"character":33}],"type":{"type":"reference","name":"Array","typeArguments":[{"type":"tuple","elements":[{"type":"intrinsic","name":"string"},{"type":"reference","name":"TAttribDataTypes","id":291}]}]}},{"id":277,"name":"TNormal","kind":4194304,"kindString":"Type alias","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":31,"character":19}],"type":{"type":"tuple","elements":[{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"number"}]}},{"id":288,"name":"TPgon","kind":4194304,"kindString":"Type alias","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":213,"character":17}],"type":{"type":"intrinsic","name":"number"}},{"id":272,"name":"TPlane","kind":4194304,"kindString":"Type alias","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":26,"character":18}],"type":{"type":"tuple","elements":[{"type":"reference","name":"Txyz","id":279},{"type":"reference","name":"Txyz","id":279},{"type":"reference","name":"Txyz","id":279}]}},{"id":287,"name":"TPline","kind":4194304,"kindString":"Type alias","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":212,"character":18}],"type":{"type":"intrinsic","name":"number"}},{"id":286,"name":"TPoint","kind":4194304,"kindString":"Type alias","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":211,"character":18}],"type":{"type":"intrinsic","name":"number"}},{"id":280,"name":"TPosi","kind":4194304,"kindString":"Type alias","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":205,"character":17}],"type":{"type":"intrinsic","name":"number"}},{"id":274,"name":"TQuery","kind":4194304,"kindString":"Type alias","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":28,"character":18}],"type":{"type":"intrinsic","name":"string"}},{"id":271,"name":"TRay","kind":4194304,"kindString":"Type alias","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":25,"character":16}],"type":{"type":"tuple","elements":[{"type":"reference","name":"Txyz","id":279},{"type":"reference","name":"Txyz","id":279}]}},{"id":278,"name":"TTexture","kind":4194304,"kindString":"Type alias","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":32,"character":20}],"type":{"type":"tuple","elements":[{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"number"}]}},{"id":281,"name":"TTri","kind":4194304,"kindString":"Type alias","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":206,"character":16}],"type":{"type":"tuple","elements":[{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"number"}]}},{"id":282,"name":"TVert","kind":4194304,"kindString":"Type alias","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":207,"character":17}],"type":{"type":"intrinsic","name":"number"}},{"id":284,"name":"TWire","kind":4194304,"kindString":"Type alias","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":209,"character":17}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}},{"id":279,"name":"Txyz","kind":4194304,"kindString":"Type alias","flags":{"isExported":true,"isExternal":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":204,"character":16}],"type":{"type":"tuple","elements":[{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"number"}]}},{"id":294,"name":"RE_SPACES","kind":32,"kindString":"Variable","flags":{"isExported":true,"isExternal":true,"isConst":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":221,"character":22}],"type":{"type":"reference","name":"RegExp"},"defaultValue":" /\\s+/g"},{"id":264,"name":"XYPLANE","kind":32,"kindString":"Variable","flags":{"isExported":true,"isExternal":true,"isConst":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":4,"character":20}],"type":{"type":"reference","name":"TPlane","id":272},"defaultValue":" [[0, 0, 0], [1, 0, 0], [0, 1, 0]]"},{"id":269,"name":"XZPLANE","kind":32,"kindString":"Variable","flags":{"isExported":true,"isExternal":true,"isConst":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":10,"character":20}],"type":{"type":"reference","name":"TPlane","id":272},"defaultValue":" [[0, 0, 0], [1, 0, 0], [0, 0, 1]]"},{"id":267,"name":"YXPLANE","kind":32,"kindString":"Variable","flags":{"isExported":true,"isExternal":true,"isConst":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":8,"character":20}],"type":{"type":"reference","name":"TPlane","id":272},"defaultValue":" [[0, 0, 0], [0, 1, 0], [1, 0, 0]]"},{"id":265,"name":"YZPLANE","kind":32,"kindString":"Variable","flags":{"isExported":true,"isExternal":true,"isConst":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":5,"character":20}],"type":{"type":"reference","name":"TPlane","id":272},"defaultValue":" [[0, 0, 0], [0, 1, 0], [0, 0, 1]]"},{"id":266,"name":"ZXPLANE","kind":32,"kindString":"Variable","flags":{"isExported":true,"isExternal":true,"isConst":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":6,"character":20}],"type":{"type":"reference","name":"TPlane","id":272},"defaultValue":" [[0, 0, 0], [0, 0, 1], [1, 0, 0]]"},{"id":268,"name":"ZYPLANE","kind":32,"kindString":"Variable","flags":{"isExported":true,"isExternal":true,"isConst":true},"sources":[{"fileName":"libs/geo-info/common.ts","line":9,"character":20}],"type":{"type":"reference","name":"TPlane","id":272},"defaultValue":" [[0, 0, 0], [0, 0, 1], [0, 1, 0]]"}],"groups":[{"title":"Enumerations","kind":4,"children":[231,171,196,149,125,137,177,193]},{"title":"Interfaces","kind":256,"children":[245,250,160,204,226,234,119,261,185,190]},{"title":"Type aliases","kind":4194304,"children":[291,273,289,276,283,292,270,290,285,275,293,277,288,272,287,286,280,274,271,278,281,282,284,279]},{"title":"Variables","kind":32,"children":[294,264,269,267,265,266,268]}],"sources":[{"fileName":"libs/geo-info/common.ts","line":1,"character":0}]},{"id":2436,"name":"\"libs/geo-info/export\"","kind":1,"kindString":"External module","flags":{"isExported":true,"isExternal":true},"originalName":"C:/Dropbox/Files/Software/GitHub/design-automation/mobius-parametric-modeller/src/assets/libs/geo-info/export.ts","children":[{"id":2437,"name":"exportObj","kind":64,"kindString":"Function","flags":{"isExported":true,"isExternal":true},"signatures":[{"id":2438,"name":"exportObj","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Export to obj"},"parameters":[{"id":2439,"name":"model","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"GIModel","id":1393}}],"type":{"type":"intrinsic","name":"string"}}],"sources":[{"fileName":"libs/geo-info/export.ts","line":6,"character":25}]}],"groups":[{"title":"Functions","kind":64,"children":[2437]}],"sources":[{"fileName":"libs/geo-info/export.ts","line":1,"character":0}]},{"id":774,"name":"\"libs/geo-info/id\"","kind":1,"kindString":"External module","flags":{"isExported":true,"isExternal":true},"originalName":"C:/Dropbox/Files/Software/GitHub/design-automation/mobius-parametric-modeller/src/assets/libs/geo-info/id.ts","children":[{"id":775,"name":"getArrDepth","kind":64,"kindString":"Function","flags":{"isExported":true,"isExternal":true},"signatures":[{"id":776,"name":"getArrDepth","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":777,"name":"arr","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"number"}}],"sources":[{"fileName":"libs/geo-info/id.ts","line":4,"character":27}]},{"id":788,"name":"idIndicies","kind":64,"kindString":"Function","flags":{"isExported":true,"isExternal":true},"signatures":[{"id":789,"name":"idIndicies","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":790,"name":"ents_arr","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"array","elementType":{"type":"reference","name":"TEntTypeIdx","id":270}}}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}}],"sources":[{"fileName":"libs/geo-info/id.ts","line":58,"character":26}]},{"id":785,"name":"idsBreak","kind":64,"kindString":"Function","flags":{"isExported":true,"isExternal":true},"signatures":[{"id":786,"name":"idsBreak","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":787,"name":"ids","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"union","types":[{"type":"reference","name":"TId","id":275},{"type":"array","elementType":{"type":"reference","name":"TId","id":275}},{"type":"array","elementType":{"type":"array","elementType":{"type":"reference","name":"TId","id":275}}}]}}],"type":{"type":"union","types":[{"type":"reference","name":"TEntTypeIdx","id":270},{"type":"array","elementType":{"type":"reference","name":"TEntTypeIdx","id":270}},{"type":"array","elementType":{"type":"array","elementType":{"type":"reference","name":"TEntTypeIdx","id":270}}}]}}],"sources":[{"fileName":"libs/geo-info/id.ts","line":39,"character":24}]},{"id":782,"name":"idsMake","kind":64,"kindString":"Function","flags":{"isExported":true,"isExternal":true},"signatures":[{"id":783,"name":"idsMake","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":784,"name":"ent_type_idxs","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"union","types":[{"type":"reference","name":"TEntTypeIdx","id":270},{"type":"array","elementType":{"type":"reference","name":"TEntTypeIdx","id":270}},{"type":"array","elementType":{"type":"array","elementType":{"type":"reference","name":"TEntTypeIdx","id":270}}}]}}],"type":{"type":"union","types":[{"type":"reference","name":"TId","id":275},{"type":"array","elementType":{"type":"reference","name":"TId","id":275}},{"type":"array","elementType":{"type":"array","elementType":{"type":"reference","name":"TId","id":275}}}]}}],"sources":[{"fileName":"libs/geo-info/id.ts","line":25,"character":23}]},{"id":778,"name":"idsMakeFromIndicies","kind":64,"kindString":"Function","flags":{"isExported":true,"isExternal":true},"signatures":[{"id":779,"name":"idsMakeFromIndicies","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":780,"name":"ent_type","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"EEntType","id":125}},{"id":781,"name":"idxs","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"union","types":[{"type":"intrinsic","name":"number"},{"type":"array","elementType":{"type":"intrinsic","name":"number"}},{"type":"array","elementType":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}}]}}],"type":{"type":"union","types":[{"type":"reference","name":"TId","id":275},{"type":"array","elementType":{"type":"reference","name":"TId","id":275}},{"type":"array","elementType":{"type":"array","elementType":{"type":"reference","name":"TId","id":275}}}]}}],"sources":[{"fileName":"libs/geo-info/id.ts","line":11,"character":35}]},{"id":818,"name":"isColl","kind":64,"kindString":"Function","flags":{"isExported":true,"isExternal":true},"signatures":[{"id":819,"name":"isColl","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":820,"name":"ent_type","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"EEntType","id":125}}],"type":{"type":"intrinsic","name":"boolean"}}],"sources":[{"fileName":"libs/geo-info/id.ts","line":89,"character":22}]},{"id":827,"name":"isDim0","kind":64,"kindString":"Function","flags":{"isExported":true,"isExternal":true},"signatures":[{"id":828,"name":"isDim0","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":829,"name":"ent_type","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"EEntType","id":125}}],"type":{"type":"intrinsic","name":"boolean"}}],"sources":[{"fileName":"libs/geo-info/id.ts","line":106,"character":22}]},{"id":830,"name":"isDim1","kind":64,"kindString":"Function","flags":{"isExported":true,"isExternal":true},"signatures":[{"id":831,"name":"isDim1","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":832,"name":"ent_type","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"EEntType","id":125}}],"type":{"type":"intrinsic","name":"boolean"}}],"sources":[{"fileName":"libs/geo-info/id.ts","line":112,"character":22}]},{"id":833,"name":"isDim2","kind":64,"kindString":"Function","flags":{"isExported":true,"isExternal":true},"signatures":[{"id":834,"name":"isDim2","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":835,"name":"ent_type","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"EEntType","id":125}}],"type":{"type":"intrinsic","name":"boolean"}}],"sources":[{"fileName":"libs/geo-info/id.ts","line":117,"character":22}]},{"id":800,"name":"isEdge","kind":64,"kindString":"Function","flags":{"isExported":true,"isExternal":true},"signatures":[{"id":801,"name":"isEdge","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":802,"name":"ent_type","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"EEntType","id":125}}],"type":{"type":"intrinsic","name":"boolean"}}],"sources":[{"fileName":"libs/geo-info/id.ts","line":71,"character":22}]},{"id":806,"name":"isFace","kind":64,"kindString":"Function","flags":{"isExported":true,"isExternal":true},"signatures":[{"id":807,"name":"isFace","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":808,"name":"ent_type","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"EEntType","id":125}}],"type":{"type":"intrinsic","name":"boolean"}}],"sources":[{"fileName":"libs/geo-info/id.ts","line":77,"character":22}]},{"id":824,"name":"isObj","kind":64,"kindString":"Function","flags":{"isExported":true,"isExternal":true},"signatures":[{"id":825,"name":"isObj","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":826,"name":"ent_type","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"EEntType","id":125}}],"type":{"type":"intrinsic","name":"boolean"}}],"sources":[{"fileName":"libs/geo-info/id.ts","line":100,"character":21}]},{"id":815,"name":"isPgon","kind":64,"kindString":"Function","flags":{"isExported":true,"isExternal":true},"signatures":[{"id":816,"name":"isPgon","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":817,"name":"ent_type","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"EEntType","id":125}}],"type":{"type":"intrinsic","name":"boolean"}}],"sources":[{"fileName":"libs/geo-info/id.ts","line":86,"character":22}]},{"id":812,"name":"isPline","kind":64,"kindString":"Function","flags":{"isExported":true,"isExternal":true},"signatures":[{"id":813,"name":"isPline","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":814,"name":"ent_type","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"EEntType","id":125}}],"type":{"type":"intrinsic","name":"boolean"}}],"sources":[{"fileName":"libs/geo-info/id.ts","line":83,"character":23}]},{"id":809,"name":"isPoint","kind":64,"kindString":"Function","flags":{"isExported":true,"isExternal":true},"signatures":[{"id":810,"name":"isPoint","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":811,"name":"ent_type","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"EEntType","id":125}}],"type":{"type":"intrinsic","name":"boolean"}}],"sources":[{"fileName":"libs/geo-info/id.ts","line":80,"character":23}]},{"id":791,"name":"isPosi","kind":64,"kindString":"Function","flags":{"isExported":true,"isExternal":true},"signatures":[{"id":792,"name":"isPosi","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":793,"name":"ent_type","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"EEntType","id":125}}],"type":{"type":"intrinsic","name":"boolean"}}],"sources":[{"fileName":"libs/geo-info/id.ts","line":62,"character":22}]},{"id":821,"name":"isTopo","kind":64,"kindString":"Function","flags":{"isExported":true,"isExternal":true},"signatures":[{"id":822,"name":"isTopo","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":823,"name":"ent_type","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"EEntType","id":125}}],"type":{"type":"intrinsic","name":"boolean"}}],"sources":[{"fileName":"libs/geo-info/id.ts","line":93,"character":22}]},{"id":797,"name":"isTri","kind":64,"kindString":"Function","flags":{"isExported":true,"isExternal":true},"signatures":[{"id":798,"name":"isTri","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":799,"name":"ent_type","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"EEntType","id":125}}],"type":{"type":"intrinsic","name":"boolean"}}],"sources":[{"fileName":"libs/geo-info/id.ts","line":68,"character":21}]},{"id":794,"name":"isVert","kind":64,"kindString":"Function","flags":{"isExported":true,"isExternal":true},"signatures":[{"id":795,"name":"isVert","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":796,"name":"ent_type","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"EEntType","id":125}}],"type":{"type":"intrinsic","name":"boolean"}}],"sources":[{"fileName":"libs/geo-info/id.ts","line":65,"character":22}]},{"id":803,"name":"isWire","kind":64,"kindString":"Function","flags":{"isExported":true,"isExternal":true},"signatures":[{"id":804,"name":"isWire","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":805,"name":"ent_type","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"EEntType","id":125}}],"type":{"type":"intrinsic","name":"boolean"}}],"sources":[{"fileName":"libs/geo-info/id.ts","line":74,"character":22}]}],"groups":[{"title":"Functions","kind":64,"children":[775,788,785,782,778,818,827,830,833,800,806,824,815,812,809,791,821,797,794,803]}],"sources":[{"fileName":"libs/geo-info/id.ts","line":1,"character":0}]},{"id":2440,"name":"\"libs/geo-info/import\"","kind":1,"kindString":"External module","flags":{"isExported":true,"isExternal":true},"originalName":"C:/Dropbox/Files/Software/GitHub/design-automation/mobius-parametric-modeller/src/assets/libs/geo-info/import.ts","children":[{"id":2441,"name":"importObj","kind":64,"kindString":"Function","flags":{"isExported":true,"isExternal":true},"signatures":[{"id":2442,"name":"importObj","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Import to obj"},"parameters":[{"id":2443,"name":"obj_str","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","name":"GIModel","id":1393}}],"sources":[{"fileName":"libs/geo-info/import.ts","line":6,"character":25}]}],"groups":[{"title":"Functions","kind":64,"children":[2441]}],"sources":[{"fileName":"libs/geo-info/import.ts","line":1,"character":0}]},{"id":1412,"name":"\"libs/geom/distance\"","kind":1,"kindString":"External module","flags":{"isExported":true,"isExternal":true},"originalName":"C:/Dropbox/Files/Software/GitHub/design-automation/mobius-parametric-modeller/src/assets/libs/geom/distance.ts","children":[{"id":1413,"name":"Txyz","kind":4194304,"kindString":"Type alias","flags":{"isExternal":true},"sources":[{"fileName":"libs/geom/distance.ts","line":2,"character":9}],"type":{"type":"tuple","elements":[{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"number"}]}},{"id":1414,"name":"EPS","kind":32,"kindString":"Variable","flags":{"isExternal":true,"isConst":true},"sources":[{"fileName":"libs/geom/distance.ts","line":3,"character":9}],"type":{"type":"unknown","name":"0.000001"},"defaultValue":"0.000001"},{"id":1415,"name":"distance","kind":64,"kindString":"Function","flags":{"isExported":true,"isExternal":true},"signatures":[{"id":1416,"name":"distance","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1417,"name":"v1","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Txyz","id":1413}},{"id":1418,"name":"v2","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Txyz","id":1413}}],"type":{"type":"intrinsic","name":"number"}}],"sources":[{"fileName":"libs/geom/distance.ts","line":5,"character":24}]}],"groups":[{"title":"Type aliases","kind":4194304,"children":[1413]},{"title":"Variables","kind":32,"children":[1414]},{"title":"Functions","kind":64,"children":[1415]}],"sources":[{"fileName":"libs/geom/distance.ts","line":1,"character":0}]},{"id":2146,"name":"\"libs/geom/matrix\"","kind":1,"kindString":"External module","flags":{"isExported":true,"isExternal":true},"originalName":"C:/Dropbox/Files/Software/GitHub/design-automation/mobius-parametric-modeller/src/assets/libs/geom/matrix.ts","children":[{"id":2148,"name":"TPlane","kind":4194304,"kindString":"Type alias","flags":{"isExternal":true},"sources":[{"fileName":"libs/geom/matrix.ts","line":6,"character":11}],"type":{"type":"tuple","elements":[{"type":"reference","name":"Txyz","id":2147},{"type":"reference","name":"Txyz","id":2147},{"type":"reference","name":"Txyz","id":2147}]}},{"id":2147,"name":"Txyz","kind":4194304,"kindString":"Type alias","flags":{"isExternal":true},"sources":[{"fileName":"libs/geom/matrix.ts","line":5,"character":9}],"type":{"type":"tuple","elements":[{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"number"}]}},{"id":2149,"name":"EPS","kind":32,"kindString":"Variable","flags":{"isExternal":true,"isConst":true},"sources":[{"fileName":"libs/geom/matrix.ts","line":7,"character":9}],"type":{"type":"unknown","name":"0.000001"},"defaultValue":"0.000001"},{"id":2171,"name":"_crossVectors","kind":64,"kindString":"Function","flags":{"isExternal":true},"signatures":[{"id":2172,"name":"_crossVectors","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":2173,"name":"v1","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Vector3"}},{"id":2174,"name":"v2","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Vector3"}},{"id":2175,"name":"norm","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"boolean"},"defaultValue":"false"}],"type":{"type":"reference","name":"Vector3"}}],"sources":[{"fileName":"libs/geom/matrix.ts","line":86,"character":22}]},{"id":2176,"name":"_dotVectors","kind":64,"kindString":"Function","flags":{"isExternal":true},"signatures":[{"id":2177,"name":"_dotVectors","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":2178,"name":"v1","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Vector3"}},{"id":2179,"name":"v2","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Vector3"}}],"type":{"type":"intrinsic","name":"number"}}],"sources":[{"fileName":"libs/geom/matrix.ts","line":93,"character":20}]},{"id":2196,"name":"_matrixFromXYZ","kind":64,"kindString":"Function","flags":{"isExternal":true},"signatures":[{"id":2197,"name":"_matrixFromXYZ","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":2198,"name":"pts","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"array","elementType":{"type":"reference","name":"Txyz","id":2147}}},{"id":2199,"name":"from_origin","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Txyz","id":2147}},{"id":2200,"name":"from_vectors","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"array","elementType":{"type":"reference","name":"Txyz","id":2147}}},{"id":2201,"name":"to_origin","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Txyz","id":2147}},{"id":2202,"name":"to_vectors","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"array","elementType":{"type":"reference","name":"Txyz","id":2147}}}],"type":{"type":"array","elementType":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}}}],"sources":[{"fileName":"libs/geom/matrix.ts","line":134,"character":23}]},{"id":2180,"name":"_xformMatrixFromXYZVectors","kind":64,"kindString":"Function","flags":{"isExternal":true},"signatures":[{"id":2181,"name":"_xformMatrixFromXYZVectors","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":2182,"name":"o","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Txyz","id":2147}},{"id":2183,"name":"xaxis","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Txyz","id":2147}},{"id":2184,"name":"xyplane","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Txyz","id":2147}},{"id":2185,"name":"neg","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"boolean"}}],"type":{"type":"reference","name":"Matrix4"}}],"sources":[{"fileName":"libs/geom/matrix.ts","line":97,"character":35}]},{"id":2186,"name":"_xformMatrixNeg","kind":64,"kindString":"Function","flags":{"isExternal":true},"signatures":[{"id":2187,"name":"_xformMatrixNeg","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":2188,"name":"o","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Vector3"}},{"id":2189,"name":"x","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Vector3"}},{"id":2190,"name":"y","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Vector3"}}],"type":{"type":"reference","name":"Matrix4"}}],"sources":[{"fileName":"libs/geom/matrix.ts","line":108,"character":24}]},{"id":2154,"name":"mirrorMatrix","kind":64,"kindString":"Function","flags":{"isExported":true,"isExternal":true},"signatures":[{"id":2155,"name":"mirrorMatrix","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":2156,"name":"origin","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Txyz","id":2147}},{"id":2157,"name":"normal","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Txyz","id":2147}}],"type":{"type":"reference","name":"Matrix4"}}],"sources":[{"fileName":"libs/geom/matrix.ts","line":15,"character":28}]},{"id":2150,"name":"multMatrix","kind":64,"kindString":"Function","flags":{"isExported":true,"isExternal":true},"signatures":[{"id":2151,"name":"multMatrix","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":2152,"name":"xyz","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Txyz","id":2147}},{"id":2153,"name":"m","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Matrix4"}}],"type":{"type":"reference","name":"Txyz","id":2147}}],"sources":[{"fileName":"libs/geom/matrix.ts","line":9,"character":26}]},{"id":2158,"name":"rotateMatrix","kind":64,"kindString":"Function","flags":{"isExported":true,"isExternal":true},"signatures":[{"id":2159,"name":"rotateMatrix","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":2160,"name":"origin","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Txyz","id":2147}},{"id":2161,"name":"axis","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Txyz","id":2147}},{"id":2162,"name":"angle","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","name":"Matrix4"}}],"sources":[{"fileName":"libs/geom/matrix.ts","line":37,"character":28}]},{"id":2163,"name":"scaleMatrix","kind":64,"kindString":"Function","flags":{"isExported":true,"isExternal":true},"signatures":[{"id":2164,"name":"scaleMatrix","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":2165,"name":"origin","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"union","types":[{"type":"reference","name":"Txyz","id":2147},{"type":"reference","name":"TPlane","id":2148}]}},{"id":2166,"name":"factor","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Txyz","id":2147}}],"type":{"type":"reference","name":"Matrix4"}}],"sources":[{"fileName":"libs/geom/matrix.ts","line":54,"character":27}]},{"id":2191,"name":"xformMatrixPos","kind":64,"kindString":"Function","flags":{"isExternal":true},"signatures":[{"id":2192,"name":"xformMatrixPos","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":2193,"name":"o","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Vector3"}},{"id":2194,"name":"x","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Vector3"}},{"id":2195,"name":"y","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Vector3"}}],"type":{"type":"reference","name":"Matrix4"}}],"sources":[{"fileName":"libs/geom/matrix.ts","line":121,"character":23}]},{"id":2167,"name":"xfromSourceTargetMatrix","kind":64,"kindString":"Function","flags":{"isExported":true,"isExternal":true},"signatures":[{"id":2168,"name":"xfromSourceTargetMatrix","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":2169,"name":"source_plane","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"TPlane","id":2148}},{"id":2170,"name":"target_plane","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"TPlane","id":2148}}],"type":{"type":"reference","name":"Matrix4"}}],"sources":[{"fileName":"libs/geom/matrix.ts","line":70,"character":39}]}],"groups":[{"title":"Type aliases","kind":4194304,"children":[2148,2147]},{"title":"Variables","kind":32,"children":[2149]},{"title":"Functions","kind":64,"children":[2171,2176,2196,2180,2186,2154,2150,2158,2163,2191,2167]}],"sources":[{"fileName":"libs/geom/matrix.ts","line":1,"character":0}]},{"id":476,"name":"\"libs/geom/triangle\"","kind":1,"kindString":"External module","flags":{"isExported":true,"isExternal":true},"originalName":"C:/Dropbox/Files/Software/GitHub/design-automation/mobius-parametric-modeller/src/assets/libs/geom/triangle.ts","children":[{"id":477,"name":"Txyz","kind":4194304,"kindString":"Type alias","flags":{"isExternal":true},"sources":[{"fileName":"libs/geom/triangle.ts","line":3,"character":9}],"type":{"type":"tuple","elements":[{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"number"}]}},{"id":478,"name":"EPS","kind":32,"kindString":"Variable","flags":{"isExternal":true,"isConst":true},"sources":[{"fileName":"libs/geom/triangle.ts","line":4,"character":9}],"type":{"type":"unknown","name":"0.000001"},"defaultValue":"0.000001"},{"id":485,"name":"area","kind":64,"kindString":"Function","flags":{"isExported":true,"isExternal":true},"signatures":[{"id":486,"name":"area","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":487,"name":"v1","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Txyz","id":477}},{"id":488,"name":"v2","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Txyz","id":477}},{"id":489,"name":"v3","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Txyz","id":477}}],"type":{"type":"intrinsic","name":"number"}}],"sources":[{"fileName":"libs/geom/triangle.ts","line":19,"character":20}]},{"id":479,"name":"normal","kind":64,"kindString":"Function","flags":{"isExported":true,"isExternal":true},"signatures":[{"id":480,"name":"normal","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":481,"name":"v1","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Txyz","id":477}},{"id":482,"name":"v2","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Txyz","id":477}},{"id":483,"name":"v3","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Txyz","id":477}},{"id":484,"name":"norm","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"boolean"},"defaultValue":"false"}],"type":{"type":"reference","name":"Txyz","id":477}}],"sources":[{"fileName":"libs/geom/triangle.ts","line":6,"character":22}]}],"groups":[{"title":"Type aliases","kind":4194304,"children":[477]},{"title":"Variables","kind":32,"children":[478]},{"title":"Functions","kind":64,"children":[485,479]}],"sources":[{"fileName":"libs/geom/triangle.ts","line":1,"character":0}]},{"id":569,"name":"\"libs/geom/vectors\"","kind":1,"kindString":"External module","flags":{"isExported":true,"isExternal":true},"originalName":"C:/Dropbox/Files/Software/GitHub/design-automation/mobius-parametric-modeller/src/assets/libs/geom/vectors.ts","children":[{"id":570,"name":"Txyz","kind":4194304,"kindString":"Type alias","flags":{"isExternal":true},"sources":[{"fileName":"libs/geom/vectors.ts","line":3,"character":9}],"type":{"type":"tuple","elements":[{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"number"}]}},{"id":571,"name":"EPS","kind":32,"kindString":"Variable","flags":{"isExternal":true,"isConst":true},"sources":[{"fileName":"libs/geom/vectors.ts","line":4,"character":9}],"type":{"type":"unknown","name":"0.000001"},"defaultValue":"0.000001"},{"id":642,"name":"dist","kind":64,"kindString":"Function","flags":{"isExported":true,"isExternal":true},"signatures":[{"id":643,"name":"dist","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":644,"name":"p1","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Txyz","id":570}},{"id":645,"name":"p2","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Txyz","id":570}}],"type":{"type":"intrinsic","name":"number"}}],"sources":[{"fileName":"libs/geom/vectors.ts","line":135,"character":20}]},{"id":654,"name":"interpByLen","kind":64,"kindString":"Function","flags":{"isExported":true,"isExternal":true},"signatures":[{"id":655,"name":"interpByLen","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":656,"name":"pt1","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Txyz","id":570}},{"id":657,"name":"pt2","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Txyz","id":570}},{"id":658,"name":"len","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"array","elementType":{"type":"reference","name":"Txyz","id":570}}}],"sources":[{"fileName":"libs/geom/vectors.ts","line":169,"character":27}]},{"id":649,"name":"interpByNum","kind":64,"kindString":"Function","flags":{"isExported":true,"isExternal":true},"signatures":[{"id":650,"name":"interpByNum","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Create new points between two points."},"parameters":[{"id":651,"name":"pt1","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Txyz","id":570}},{"id":652,"name":"pt2","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Txyz","id":570}},{"id":653,"name":"num_points","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"array","elementType":{"type":"reference","name":"Txyz","id":570}}}],"sources":[{"fileName":"libs/geom/vectors.ts","line":158,"character":27}]},{"id":646,"name":"newellNorm","kind":64,"kindString":"Function","flags":{"isExported":true,"isExternal":true},"signatures":[{"id":647,"name":"newellNorm","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Finds the normal to a set of points using Newell's method"},"parameters":[{"id":648,"name":"pts","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"array","elementType":{"type":"reference","name":"Txyz","id":570}}}],"type":{"type":"reference","name":"Txyz","id":570}}],"sources":[{"fileName":"libs/geom/vectors.ts","line":142,"character":26}]},{"id":582,"name":"vecAdd","kind":64,"kindString":"Function","flags":{"isExported":true,"isExternal":true},"signatures":[{"id":583,"name":"vecAdd","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":584,"name":"v1","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Txyz","id":570}},{"id":585,"name":"v2","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Txyz","id":570}},{"id":586,"name":"norm","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"boolean"},"defaultValue":"false"}],"type":{"type":"reference","name":"Txyz","id":570}}],"sources":[{"fileName":"libs/geom/vectors.ts","line":26,"character":22}]},{"id":611,"name":"vecAng","kind":64,"kindString":"Function","flags":{"isExported":true,"isExternal":true},"signatures":[{"id":612,"name":"vecAng","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":613,"name":"v1","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Txyz","id":570}},{"id":614,"name":"v2","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Txyz","id":570}}],"type":{"type":"intrinsic","name":"number"}}],"sources":[{"fileName":"libs/geom/vectors.ts","line":85,"character":22}]},{"id":615,"name":"vecAng2","kind":64,"kindString":"Function","flags":{"isExported":true,"isExternal":true},"signatures":[{"id":616,"name":"vecAng2","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":617,"name":"v1","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Txyz","id":570}},{"id":618,"name":"v2","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Txyz","id":570}},{"id":619,"name":"n","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Txyz","id":570}}],"type":{"type":"intrinsic","name":"number"}}],"sources":[{"fileName":"libs/geom/vectors.ts","line":93,"character":23}]},{"id":638,"name":"vecCodir","kind":64,"kindString":"Function","flags":{"isExported":true,"isExternal":true},"signatures":[{"id":639,"name":"vecCodir","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":640,"name":"v1","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Txyz","id":570}},{"id":641,"name":"v2","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Txyz","id":570}}],"type":{"type":"intrinsic","name":"boolean"}}],"sources":[{"fileName":"libs/geom/vectors.ts","line":128,"character":24}]},{"id":599,"name":"vecCross","kind":64,"kindString":"Function","flags":{"isExported":true,"isExternal":true},"signatures":[{"id":600,"name":"vecCross","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":601,"name":"v1","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Txyz","id":570}},{"id":602,"name":"v2","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Txyz","id":570}},{"id":603,"name":"norm","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"boolean"},"defaultValue":"false"}],"type":{"type":"reference","name":"Txyz","id":570}}],"sources":[{"fileName":"libs/geom/vectors.ts","line":67,"character":24}]},{"id":591,"name":"vecDiv","kind":64,"kindString":"Function","flags":{"isExported":true,"isExternal":true},"signatures":[{"id":592,"name":"vecDiv","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":593,"name":"vec","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Txyz","id":570}},{"id":594,"name":"divisor","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","name":"Txyz","id":570}}],"sources":[{"fileName":"libs/geom/vectors.ts","line":51,"character":22}]},{"id":604,"name":"vecDot","kind":64,"kindString":"Function","flags":{"isExported":true,"isExternal":true},"signatures":[{"id":605,"name":"vecDot","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":606,"name":"v1","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Txyz","id":570}},{"id":607,"name":"v2","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Txyz","id":570}}],"type":{"type":"intrinsic","name":"number"}}],"sources":[{"fileName":"libs/geom/vectors.ts","line":75,"character":22}]},{"id":572,"name":"vecEqual","kind":64,"kindString":"Function","flags":{"isExported":true,"isExternal":true},"signatures":[{"id":573,"name":"vecEqual","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":574,"name":"v1","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Txyz","id":570}},{"id":575,"name":"v2","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Txyz","id":570}},{"id":576,"name":"tol","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"boolean"}}],"sources":[{"fileName":"libs/geom/vectors.ts","line":7,"character":24}]},{"id":630,"name":"vecFromTo","kind":64,"kindString":"Function","flags":{"isExported":true,"isExternal":true},"signatures":[{"id":631,"name":"vecFromTo","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":632,"name":"v1","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Txyz","id":570}},{"id":633,"name":"v2","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Txyz","id":570}}],"type":{"type":"reference","name":"Txyz","id":570}}],"sources":[{"fileName":"libs/geom/vectors.ts","line":120,"character":25}]},{"id":620,"name":"vecLen","kind":64,"kindString":"Function","flags":{"isExported":true,"isExternal":true},"signatures":[{"id":621,"name":"vecLen","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":622,"name":"v","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Txyz","id":570}}],"type":{"type":"intrinsic","name":"number"}}],"sources":[{"fileName":"libs/geom/vectors.ts","line":105,"character":22}]},{"id":634,"name":"vecMakeOrtho","kind":64,"kindString":"Function","flags":{"isExported":true,"isExternal":true},"signatures":[{"id":635,"name":"vecMakeOrtho","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":636,"name":"v1","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Txyz","id":570}},{"id":637,"name":"v2","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Txyz","id":570}}],"type":{"type":"reference","name":"Txyz","id":570}}],"sources":[{"fileName":"libs/geom/vectors.ts","line":124,"character":28}]},{"id":595,"name":"vecMult","kind":64,"kindString":"Function","flags":{"isExported":true,"isExternal":true},"signatures":[{"id":596,"name":"vecMult","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":597,"name":"vec","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Txyz","id":570}},{"id":598,"name":"multiplier","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","name":"Txyz","id":570}}],"sources":[{"fileName":"libs/geom/vectors.ts","line":59,"character":23}]},{"id":608,"name":"vecNorm","kind":64,"kindString":"Function","flags":{"isExported":true,"isExternal":true},"signatures":[{"id":609,"name":"vecNorm","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":610,"name":"v","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Txyz","id":570}}],"type":{"type":"reference","name":"Txyz","id":570}}],"sources":[{"fileName":"libs/geom/vectors.ts","line":79,"character":23}]},{"id":627,"name":"vecRev","kind":64,"kindString":"Function","flags":{"isExported":true,"isExternal":true},"signatures":[{"id":628,"name":"vecRev","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":629,"name":"v","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Txyz","id":570}}],"type":{"type":"reference","name":"Txyz","id":570}}],"sources":[{"fileName":"libs/geom/vectors.ts","line":112,"character":22}]},{"id":623,"name":"vecSetLen","kind":64,"kindString":"Function","flags":{"isExported":true,"isExternal":true},"signatures":[{"id":624,"name":"vecSetLen","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":625,"name":"v","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Txyz","id":570}},{"id":626,"name":"len","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","name":"Txyz","id":570}}],"sources":[{"fileName":"libs/geom/vectors.ts","line":108,"character":25}]},{"id":577,"name":"vecSub","kind":64,"kindString":"Function","flags":{"isExported":true,"isExternal":true},"signatures":[{"id":578,"name":"vecSub","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":579,"name":"v1","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Txyz","id":570}},{"id":580,"name":"v2","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Txyz","id":570}},{"id":581,"name":"norm","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"boolean"},"defaultValue":"false"}],"type":{"type":"reference","name":"Txyz","id":570}}],"sources":[{"fileName":"libs/geom/vectors.ts","line":14,"character":22}]},{"id":587,"name":"vecSum","kind":64,"kindString":"Function","flags":{"isExported":true,"isExternal":true},"signatures":[{"id":588,"name":"vecSum","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":589,"name":"vecs","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"array","elementType":{"type":"reference","name":"Txyz","id":570}}},{"id":590,"name":"norm","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"boolean"},"defaultValue":"false"}],"type":{"type":"reference","name":"Txyz","id":570}}],"sources":[{"fileName":"libs/geom/vectors.ts","line":38,"character":22}]}],"groups":[{"title":"Type aliases","kind":4194304,"children":[570]},{"title":"Variables","kind":32,"children":[571]},{"title":"Functions","kind":64,"children":[642,654,649,646,582,611,615,638,599,591,604,572,630,620,634,595,608,627,623,577,587]}],"sources":[{"fileName":"libs/geom/vectors.ts","line":1,"character":0}]},{"id":325,"name":"\"libs/triangulate/earcut\"","kind":1,"kindString":"External module","flags":{"isExported":true,"isExternal":true},"originalName":"C:/Dropbox/Files/Software/GitHub/design-automation/mobius-parametric-modeller/src/assets/libs/triangulate/earcut.ts","children":[{"id":465,"name":"Node","kind":64,"kindString":"Function","flags":{"isExternal":true},"signatures":[{"id":466,"name":"Node","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":467,"name":"i","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}},{"id":468,"name":"x","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}},{"id":469,"name":"y","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"libs/triangulate/earcut.ts","line":769,"character":13}]},{"id":425,"name":"area","kind":64,"kindString":"Function","flags":{"isExternal":true},"signatures":[{"id":426,"name":"area","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":427,"name":"p","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}},{"id":428,"name":"q","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}},{"id":429,"name":"r","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"number"}}],"sources":[{"fileName":"libs/triangulate/earcut.ts","line":624,"character":13}]},{"id":380,"name":"compareX","kind":64,"kindString":"Function","flags":{"isExternal":true},"signatures":[{"id":381,"name":"compareX","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":382,"name":"a","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}},{"id":383,"name":"b","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"number"}}],"sources":[{"fileName":"libs/triangulate/earcut.ts","line":373,"character":17}]},{"id":361,"name":"cureLocalIntersections","kind":64,"kindString":"Function","flags":{"isExternal":true},"signatures":[{"id":362,"name":"cureLocalIntersections","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":363,"name":"start","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}},{"id":364,"name":"triangles","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}},{"id":365,"name":"dim","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"any"}}],"sources":[{"fileName":"libs/triangulate/earcut.ts","line":268,"character":31}]},{"id":343,"name":"earcutLinked","kind":64,"kindString":"Function","flags":{"isExternal":true},"signatures":[{"id":344,"name":"earcutLinked","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":345,"name":"ear","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}},{"id":346,"name":"triangles","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}},{"id":347,"name":"dim","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}},{"id":348,"name":"minX","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}},{"id":349,"name":"minY","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}},{"id":350,"name":"invSize","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}},{"id":351,"name":"pass","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"libs/triangulate/earcut.ts","line":117,"character":21}]},{"id":384,"name":"eliminateHole","kind":64,"kindString":"Function","flags":{"isExternal":true},"signatures":[{"id":385,"name":"eliminateHole","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":386,"name":"hole","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}},{"id":387,"name":"outerNode","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"libs/triangulate/earcut.ts","line":381,"character":22}]},{"id":374,"name":"eliminateHoles","kind":64,"kindString":"Function","flags":{"isExternal":true},"signatures":[{"id":375,"name":"eliminateHoles","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":376,"name":"data","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}},{"id":377,"name":"holeIndices","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}},{"id":378,"name":"outerNode","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}},{"id":379,"name":"dim","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"any"}}],"sources":[{"fileName":"libs/triangulate/earcut.ts","line":344,"character":23}]},{"id":430,"name":"equals","kind":64,"kindString":"Function","flags":{"isExternal":true},"signatures":[{"id":431,"name":"equals","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":432,"name":"p1","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}},{"id":433,"name":"p2","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"boolean"}}],"sources":[{"fileName":"libs/triangulate/earcut.ts","line":632,"character":15}]},{"id":339,"name":"filterPoints","kind":64,"kindString":"Function","flags":{"isExternal":true},"signatures":[{"id":340,"name":"filterPoints","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":341,"name":"start","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}},{"id":342,"name":"end","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"any"}}],"sources":[{"fileName":"libs/triangulate/earcut.ts","line":85,"character":21}]},{"id":388,"name":"findHoleBridge","kind":64,"kindString":"Function","flags":{"isExternal":true},"signatures":[{"id":389,"name":"findHoleBridge","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":390,"name":"hole","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}},{"id":391,"name":"outerNode","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"any"}}],"sources":[{"fileName":"libs/triangulate/earcut.ts","line":397,"character":23}]},{"id":408,"name":"getLeftmost","kind":64,"kindString":"Function","flags":{"isExternal":true},"signatures":[{"id":409,"name":"getLeftmost","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":410,"name":"start","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"any"}}],"sources":[{"fileName":"libs/triangulate/earcut.ts","line":588,"character":20}]},{"id":392,"name":"indexCurve","kind":64,"kindString":"Function","flags":{"isExternal":true},"signatures":[{"id":393,"name":"indexCurve","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":394,"name":"start","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}},{"id":395,"name":"minX","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}},{"id":396,"name":"minY","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}},{"id":397,"name":"invSize","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"libs/triangulate/earcut.ts","line":477,"character":19}]},{"id":456,"name":"insertNode","kind":64,"kindString":"Function","flags":{"isExternal":true},"signatures":[{"id":457,"name":"insertNode","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":458,"name":"i","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}},{"id":459,"name":"x","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}},{"id":460,"name":"y","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}},{"id":461,"name":"last","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"any"}}],"sources":[{"fileName":"libs/triangulate/earcut.ts","line":737,"character":19}]},{"id":434,"name":"intersects","kind":64,"kindString":"Function","flags":{"isExternal":true},"signatures":[{"id":435,"name":"intersects","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":436,"name":"p1","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}},{"id":437,"name":"q1","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}},{"id":438,"name":"p2","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}},{"id":439,"name":"q2","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"boolean"}}],"sources":[{"fileName":"libs/triangulate/earcut.ts","line":640,"character":19}]},{"id":440,"name":"intersectsPolygon","kind":64,"kindString":"Function","flags":{"isExternal":true},"signatures":[{"id":441,"name":"intersectsPolygon","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":442,"name":"a","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}},{"id":443,"name":"b","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"boolean"}}],"sources":[{"fileName":"libs/triangulate/earcut.ts","line":652,"character":26}]},{"id":352,"name":"isEar","kind":64,"kindString":"Function","flags":{"isExternal":true},"signatures":[{"id":353,"name":"isEar","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":354,"name":"ear","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"boolean"}}],"sources":[{"fileName":"libs/triangulate/earcut.ts","line":188,"character":14}]},{"id":355,"name":"isEarHashed","kind":64,"kindString":"Function","flags":{"isExternal":true},"signatures":[{"id":356,"name":"isEarHashed","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":357,"name":"ear","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}},{"id":358,"name":"minX","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}},{"id":359,"name":"minY","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}},{"id":360,"name":"invSize","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"boolean"}}],"sources":[{"fileName":"libs/triangulate/earcut.ts","line":215,"character":20}]},{"id":421,"name":"isValidDiagonal","kind":64,"kindString":"Function","flags":{"isExternal":true},"signatures":[{"id":422,"name":"isValidDiagonal","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":423,"name":"a","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}},{"id":424,"name":"b","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"boolean"}}],"sources":[{"fileName":"libs/triangulate/earcut.ts","line":615,"character":24}]},{"id":332,"name":"linkedList","kind":64,"kindString":"Function","flags":{"isExternal":true},"signatures":[{"id":333,"name":"linkedList","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":334,"name":"data","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}},{"id":335,"name":"start","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}},{"id":336,"name":"end","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}},{"id":337,"name":"dim","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}},{"id":338,"name":"clockwise","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"any"}}],"sources":[{"fileName":"libs/triangulate/earcut.ts","line":58,"character":19}]},{"id":444,"name":"locallyInside","kind":64,"kindString":"Function","flags":{"isExternal":true},"signatures":[{"id":445,"name":"locallyInside","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":446,"name":"a","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}},{"id":447,"name":"b","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"boolean"}}],"sources":[{"fileName":"libs/triangulate/earcut.ts","line":675,"character":22}]},{"id":448,"name":"middleInside","kind":64,"kindString":"Function","flags":{"isExternal":true},"signatures":[{"id":449,"name":"middleInside","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":450,"name":"a","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}},{"id":451,"name":"b","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"boolean"}}],"sources":[{"fileName":"libs/triangulate/earcut.ts","line":685,"character":21}]},{"id":411,"name":"pointInTriangle","kind":64,"kindString":"Function","flags":{"isExternal":true},"signatures":[{"id":412,"name":"pointInTriangle","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":413,"name":"ax","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}},{"id":414,"name":"ay","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}},{"id":415,"name":"bx","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}},{"id":416,"name":"by","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}},{"id":417,"name":"cx","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}},{"id":418,"name":"cy","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}},{"id":419,"name":"px","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}},{"id":420,"name":"py","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"boolean"}}],"sources":[{"fileName":"libs/triangulate/earcut.ts","line":605,"character":24}]},{"id":462,"name":"removeNode","kind":64,"kindString":"Function","flags":{"isExternal":true},"signatures":[{"id":463,"name":"removeNode","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":464,"name":"p","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"libs/triangulate/earcut.ts","line":759,"character":19}]},{"id":470,"name":"signedArea","kind":64,"kindString":"Function","flags":{"isExternal":true},"signatures":[{"id":471,"name":"signedArea","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":472,"name":"data","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}},{"id":473,"name":"start","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}},{"id":474,"name":"end","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}},{"id":475,"name":"dim","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"number"}}],"sources":[{"fileName":"libs/triangulate/earcut.ts","line":794,"character":19}]},{"id":398,"name":"sortLinked","kind":64,"kindString":"Function","flags":{"isExternal":true},"signatures":[{"id":399,"name":"sortLinked","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":400,"name":"list","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"any"}}],"sources":[{"fileName":"libs/triangulate/earcut.ts","line":500,"character":19}]},{"id":366,"name":"splitEarcut","kind":64,"kindString":"Function","flags":{"isExternal":true},"signatures":[{"id":367,"name":"splitEarcut","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":368,"name":"start","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}},{"id":369,"name":"triangles","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}},{"id":370,"name":"dim","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}},{"id":371,"name":"minX","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}},{"id":372,"name":"minY","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}},{"id":373,"name":"invSize","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"libs/triangulate/earcut.ts","line":301,"character":20}]},{"id":452,"name":"splitPolygon","kind":64,"kindString":"Function","flags":{"isExternal":true},"signatures":[{"id":453,"name":"splitPolygon","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":454,"name":"a","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}},{"id":455,"name":"b","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"any"}}],"sources":[{"fileName":"libs/triangulate/earcut.ts","line":712,"character":21}]},{"id":401,"name":"zOrder","kind":64,"kindString":"Function","flags":{"isExternal":true},"signatures":[{"id":402,"name":"zOrder","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":403,"name":"x","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}},{"id":404,"name":"y","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}},{"id":405,"name":"minX","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}},{"id":406,"name":"minY","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}},{"id":407,"name":"invSize","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"number"}}],"sources":[{"fileName":"libs/triangulate/earcut.ts","line":565,"character":15}]},{"id":326,"name":"Earcut","kind":2097152,"kindString":"Object literal","flags":{"isExternal":true,"isConst":true},"comment":{"tags":[{"tag":"author","text":"Mugen87 / https://github.com/Mugen87\nPort from https://github.com/mapbox/earcut (v2.1.2)\n"}]},"children":[{"id":327,"name":"triangulate","kind":64,"kindString":"Function","flags":{"isExternal":true},"signatures":[{"id":328,"name":"triangulate","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":329,"name":"data","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}},{"id":330,"name":"holeIndices","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"any"}},{"id":331,"name":"dim","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"sources":[{"fileName":"libs/triangulate/earcut.ts","line":8,"character":15}]}],"groups":[{"title":"Functions","kind":64,"children":[327]}],"sources":[{"fileName":"libs/triangulate/earcut.ts","line":6,"character":12}],"type":{"type":"intrinsic","name":"object"}}],"groups":[{"title":"Functions","kind":64,"children":[465,425,380,361,343,384,374,430,339,388,408,392,456,434,440,352,355,421,332,444,448,411,462,470,398,366,452,401]},{"title":"Object literals","kind":2097152,"children":[326]}],"sources":[{"fileName":"libs/triangulate/earcut.ts","line":1,"character":0}]},{"id":295,"name":"\"libs/triangulate/threex\"","kind":1,"kindString":"External module","flags":{"isExported":true,"isExternal":true},"originalName":"C:/Dropbox/Files/Software/GitHub/design-automation/mobius-parametric-modeller/src/assets/libs/triangulate/threex.ts","children":[{"id":296,"name":"EPS","kind":32,"kindString":"Variable","flags":{"isExternal":true,"isConst":true},"sources":[{"fileName":"libs/triangulate/threex.ts","line":3,"character":9}],"type":{"type":"unknown","name":"0.000001"},"defaultValue":"0.000001"},{"id":315,"name":"addVectors","kind":64,"kindString":"Function","flags":{"isExported":true,"isExternal":true},"signatures":[{"id":316,"name":"addVectors","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":317,"name":"v1","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Vector3"}},{"id":318,"name":"v2","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Vector3"}},{"id":319,"name":"norm","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"boolean"},"defaultValue":"false"}],"type":{"type":"reference","name":"Vector3"}}],"sources":[{"fileName":"libs/triangulate/threex.ts","line":45,"character":26}]},{"id":320,"name":"crossVectors","kind":64,"kindString":"Function","flags":{"isExported":true,"isExternal":true},"signatures":[{"id":321,"name":"crossVectors","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":322,"name":"v1","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Vector3"}},{"id":323,"name":"v2","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Vector3"}},{"id":324,"name":"norm","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"boolean"},"defaultValue":"false"}],"type":{"type":"reference","name":"Vector3"}}],"sources":[{"fileName":"libs/triangulate/threex.ts","line":52,"character":28}]},{"id":307,"name":"matrixInv","kind":64,"kindString":"Function","flags":{"isExported":true,"isExternal":true},"signatures":[{"id":308,"name":"matrixInv","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":309,"name":"m","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Matrix4"}}],"type":{"type":"reference","name":"Matrix4"}}],"sources":[{"fileName":"libs/triangulate/threex.ts","line":31,"character":25}]},{"id":297,"name":"multVectorMatrix","kind":64,"kindString":"Function","flags":{"isExported":true,"isExternal":true},"signatures":[{"id":298,"name":"multVectorMatrix","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Utility functions for threejs."},"parameters":[{"id":299,"name":"v","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Vector3"}},{"id":300,"name":"m","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Matrix4"}}],"type":{"type":"reference","name":"Vector3"}}],"sources":[{"fileName":"libs/triangulate/threex.ts","line":10,"character":32}]},{"id":310,"name":"subVectors","kind":64,"kindString":"Function","flags":{"isExported":true,"isExternal":true},"signatures":[{"id":311,"name":"subVectors","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":312,"name":"v1","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Vector3"}},{"id":313,"name":"v2","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Vector3"}},{"id":314,"name":"norm","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"boolean"},"defaultValue":"false"}],"type":{"type":"reference","name":"Vector3"}}],"sources":[{"fileName":"libs/triangulate/threex.ts","line":38,"character":26}]},{"id":301,"name":"xformMatrix","kind":64,"kindString":"Function","flags":{"isExported":true,"isExternal":true},"signatures":[{"id":302,"name":"xformMatrix","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":303,"name":"o","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Vector3"}},{"id":304,"name":"x","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Vector3"}},{"id":305,"name":"y","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Vector3"}},{"id":306,"name":"z","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Vector3"}}],"type":{"type":"reference","name":"Matrix4"}}],"sources":[{"fileName":"libs/triangulate/threex.ts","line":16,"character":27}]}],"groups":[{"title":"Variables","kind":32,"children":[296]},{"title":"Functions","kind":64,"children":[315,320,307,297,310,301]}],"sources":[{"fileName":"libs/triangulate/threex.ts","line":1,"character":0}]},{"id":490,"name":"\"libs/triangulate/triangulate\"","kind":1,"kindString":"External module","flags":{"isExported":true,"isExternal":true},"originalName":"C:/Dropbox/Files/Software/GitHub/design-automation/mobius-parametric-modeller/src/assets/libs/triangulate/triangulate.ts","children":[{"id":491,"name":"_getMatrix","kind":64,"kindString":"Function","flags":{"isExternal":true},"signatures":[{"id":492,"name":"_getMatrix","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Function that returns a matrix to transform a set of vertices in 3d space onto the xy plane.\nThis function assumes that the vertices are more or less co-planar.\nReturns a set of three Vectors that represent points on the xy plane.\nReturns null if the plane cannot be found, e.g. points are all colinear."},"parameters":[{"id":493,"name":"points","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"array","elementType":{"type":"reference","name":"Vector3"}}}],"type":{"type":"reference","name":"Matrix4"}}],"sources":[{"fileName":"libs/triangulate/triangulate.ts","line":16,"character":19}]},{"id":494,"name":"triangulate","kind":64,"kindString":"Function","flags":{"isExported":true,"isExternal":true},"signatures":[{"id":495,"name":"triangulate","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Triangulates a set of coords in 3d with holes\nIf the coords cannot be triangulated, it returns []."},"parameters":[{"id":496,"name":"coords","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"\n"},"type":{"type":"array","elementType":{"type":"reference","name":"Txyz","id":279}}},{"id":497,"name":"holes","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"array","elementType":{"type":"array","elementType":{"type":"reference","name":"Txyz","id":279}}}}],"type":{"type":"array","elementType":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}}}],"sources":[{"fileName":"libs/triangulate/triangulate.ts","line":56,"character":27}]}],"groups":[{"title":"Functions","kind":64,"children":[491,494]}],"sources":[{"fileName":"libs/triangulate/triangulate.ts","line":1,"character":0}]},{"id":1,"name":"\"libs/util/arrays\"","kind":1,"kindString":"External module","flags":{"isExported":true,"isExternal":true},"originalName":"C:/Dropbox/Files/Software/GitHub/design-automation/mobius-parametric-modeller/src/assets/libs/util/arrays.ts","children":[{"id":6,"name":"arrIdxAdd","kind":64,"kindString":"Function","flags":{"isExported":true,"isExternal":true},"signatures":[{"id":7,"name":"arrIdxAdd","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Add an item to an array in an array"},"parameters":[{"id":8,"name":"arr","kind":32768,"kindString":"Parameter","flags":{},"comment":{},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}},{"id":9,"name":"idx","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":10,"name":"item","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"\n"},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"libs/util/arrays.ts","line":19,"character":25}]},{"id":11,"name":"arrIdxRem","kind":64,"kindString":"Function","flags":{"isExported":true,"isExternal":true},"signatures":[{"id":12,"name":"arrIdxRem","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Remove an item from an array in an array"},"parameters":[{"id":13,"name":"arr","kind":32768,"kindString":"Parameter","flags":{},"comment":{},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}},{"id":14,"name":"idx","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":15,"name":"item","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"\n"},"type":{"type":"intrinsic","name":"any"}},{"id":16,"name":"del_empty","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"boolean"}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"libs/util/arrays.ts","line":30,"character":25}]},{"id":2,"name":"arrRem","kind":64,"kindString":"Function","flags":{"isExported":true,"isExternal":true},"signatures":[{"id":3,"name":"arrRem","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Remove an item from an array"},"parameters":[{"id":4,"name":"arr","kind":32768,"kindString":"Parameter","flags":{},"comment":{},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}},{"id":5,"name":"item","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"\n"},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"libs/util/arrays.ts","line":8,"character":22}]}],"groups":[{"title":"Functions","kind":64,"children":[6,11,2]}],"sources":[{"fileName":"libs/util/arrays.ts","line":1,"character":0}]},{"id":1175,"name":"\"libs/util/maps\"","kind":1,"kindString":"External module","flags":{"isExported":true,"isExternal":true},"originalName":"C:/Dropbox/Files/Software/GitHub/design-automation/mobius-parametric-modeller/src/assets/libs/util/maps.ts","children":[{"id":1176,"name":"sortByKey","kind":64,"kindString":"Function","flags":{"isExported":true,"isExternal":true},"signatures":[{"id":1177,"name":"sortByKey","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Sort Map by Key, return a Sorted Map"},"parameters":[{"id":1178,"name":"unsortedMap","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"\n"},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"reference","name":"Map","typeArguments":[{"type":"intrinsic","name":"any"},{"type":"intrinsic","name":"any"}]}}],"sources":[{"fileName":"libs/util/maps.ts","line":5,"character":25}]}],"groups":[{"title":"Functions","kind":64,"children":[1176]}],"sources":[{"fileName":"libs/util/maps.ts","line":1,"character":0}]}],"groups":[{"title":"External modules","kind":1,"children":[1419,2789,2782,2701,1210,1719,2796,2801,2673,2766,2686,1651,2818,2819,2546,1922,2203,2333,1772,2469,2449,2358,2444,17,1344,1101,1314,1231,1179,1051,498,1035,659,836,1009,1392,1382,1365,118,2436,774,2440,1412,2146,476,569,325,295,490,1,1175]}]};

/***/ }),

/***/ "./src/environments/environment.ts":
/*!*****************************************!*\
  !*** ./src/environments/environment.ts ***!
  \*****************************************/
/*! exports provided: environment */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "environment", function() { return environment; });
// The file contents for the current environment will overwrite these during build.
// The build system defaults to the dev environment which uses `environment.ts`, but if you do
// `ng build --env=prod` then `environment.prod.ts` will be used instead.
// The list of which env maps to which file can be found in `.angular-cli.json`.
var environment = {
    production: false
};


/***/ }),

/***/ "./src/environments/version.ts":
/*!*************************************!*\
  !*** ./src/environments/version.ts ***!
  \*************************************/
/*! exports provided: VERSION */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "VERSION", function() { return VERSION; });
// IMPORTANT: THIS FILE IS AUTO GENERATED! DO NOT MANUALLY EDIT OR CHECKIN!
/* tslint:disable */
var VERSION = {
    "dirty": false,
    "raw": "44c24d8",
    "hash": "44c24d8",
    "distance": null,
    "tag": null,
    "semver": null,
    "suffix": "44c24d8",
    "semverString": null,
    "version": "0.4.23"
};
/* tslint:enable */


/***/ }),

/***/ "./src/main.ts":
/*!*********************!*\
  !*** ./src/main.ts ***!
  \*********************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_platform_browser_dynamic__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/platform-browser-dynamic */ "./node_modules/@angular/platform-browser-dynamic/fesm5/platform-browser-dynamic.js");
/* harmony import */ var _app_appmodule_app_module__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./app/appmodule/app.module */ "./src/app/appmodule/app.module.ts");
/* harmony import */ var _environments_environment__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./environments/environment */ "./src/environments/environment.ts");




if (_environments_environment__WEBPACK_IMPORTED_MODULE_3__["environment"].production) {
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["enableProdMode"])();
}
window['CESIUM_BASE_URL'] = 'assets/cesium';
Object(_angular_platform_browser_dynamic__WEBPACK_IMPORTED_MODULE_1__["platformBrowserDynamic"])().bootstrapModule(_app_appmodule_app_module__WEBPACK_IMPORTED_MODULE_2__["AppModule"])
    .catch(function (err) { return console.log(err); });


/***/ }),

/***/ 0:
/*!***************************!*\
  !*** multi ./src/main.ts ***!
  \***************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(/*! C:\Dropbox\Files\Software\GitHub\design-automation\mobius-parametric-modeller\src\main.ts */"./src/main.ts");


/***/ })

},[[0,"runtime","vendor"]]]);
//# sourceMappingURL=main.js.map